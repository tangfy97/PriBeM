public class org.jdesktop.swingx.plaf.basic.BasicMonthViewUI extends org.jdesktop.swingx.plaf.MonthViewUI
{
    private static final java.util.logging.Logger LOG;
    private static final int CALENDAR_SPACING;
    public static final int MONTH_DOWN;
    public static final int MONTH_UP;
    protected static final int WEEK_HEADER_COLUMN;
    protected static final int DAYS_IN_WEEK;
    protected static final int FIRST_DAY_COLUMN;
    protected static final int LAST_DAY_COLUMN;
    protected static final int DAY_HEADER_ROW;
    protected static final int WEEKS_IN_MONTH;
    protected static final int FIRST_WEEK_ROW;
    protected static final int LAST_WEEK_ROW;
    protected java.lang.String[] monthsOfTheYear;
    protected org.jdesktop.swingx.JXMonthView monthView;
    private java.beans.PropertyChangeListener propertyChangeListener;
    private java.awt.event.MouseListener mouseListener;
    private java.awt.event.MouseMotionListener mouseMotionListener;
    private org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler handler;
    private java.util.Date lastDisplayedDate;
    private boolean usingKeyboard;
    private java.util.Date pivotDate;
    private java.util.SortedSet originalDateSpan;
    protected boolean isLeftToRight;
    protected javax.swing.Icon monthUpImage;
    protected javax.swing.Icon monthDownImage;
    private int arrowPaddingX;
    private int arrowPaddingY;
    private int fullMonthBoxHeight;
    private int fullBoxWidth;
    private int fullBoxHeight;
    private int calendarWidth;
    private int calendarHeight;
    private int fullCalendarHeight;
    private int fullCalendarWidth;
    private int calendarRowCount;
    private int calendarColumnCount;
    protected java.awt.Rectangle calendarGrid;
    private java.lang.String[] daysOfTheWeek;
    private org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler renderingHandler;
    private javax.swing.CellRendererPane rendererPane;
    private org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler calendarHeaderHandler;

    public void <init>()
    {
        java.awt.Rectangle $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        specialinvoke r0.<org.jdesktop.swingx.plaf.MonthViewUI: void <init>()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean usingKeyboard> = 0;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Date pivotDate> = null;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int arrowPaddingX> = 3;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int arrowPaddingY> = 3;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarRowCount> = 1;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarColumnCount> = 1;

        $r1 = new java.awt.Rectangle;

        specialinvoke $r1.<java.awt.Rectangle: void <init>()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle calendarGrid> = $r1;

        return;
    }

    public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI $r0;

        r1 := @parameter0: javax.swing.JComponent;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void <init>()>();

        return $r0;
    }

    public void installUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        org.jdesktop.swingx.JXMonthView $r2, $r3;
        java.awt.LayoutManager $r4;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = (org.jdesktop.swingx.JXMonthView) r1;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView> = $r2;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.LayoutManager createLayoutManager()>();

        virtualinvoke $r3.<org.jdesktop.swingx.JXMonthView: void setLayout(java.awt.LayoutManager)>($r4);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void installRenderingHandler()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void installDefaults()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void installDelegate()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void installKeyboardActions()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void installComponents()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void updateLocale(boolean)>(0);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void updateZoomable()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void installListeners()>();

        return;
    }

    public void uninstallUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r2;
        org.jdesktop.swingx.JXMonthView $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r2 := @parameter0: javax.swing.JComponent;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void uninstallRenderingHandler()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void uninstallListeners()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void uninstallKeyboardActions()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void uninstallDefaults()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void uninstallComponents()>();

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: void setLayout(java.awt.LayoutManager)>(null);

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView> = null;

        return;
    }

    protected void installComponents()
    {
        org.jdesktop.swingx.JXMonthView $r3;
        org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler $r1, $r2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler createCalendarHeaderHandler()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void setCalendarHeaderHandler(org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler)>($r1);

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler getCalendarHeaderHandler()>();

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        virtualinvoke $r2.<org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler: void install(org.jdesktop.swingx.JXMonthView)>($r3);

        return;
    }

    protected void uninstallComponents()
    {
        org.jdesktop.swingx.JXMonthView $r2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler getCalendarHeaderHandler()>();

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        virtualinvoke $r1.<org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler: void uninstall(org.jdesktop.swingx.JXMonthView)>($r2);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void setCalendarHeaderHandler(org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler)>(null);

        return;
    }

    protected void installDefaults()
    {
        java.awt.Color $r4, $r6, $r10, $r12, $r14, $r16, $r18, $r20, $r24, $r26, $r28, $r30, $r32, $r34, $r38, $r40;
        org.jdesktop.swingx.JXMonthView $r2, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r22, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.awt.Font $r8, $r36;
        int $i0, $i1;
        java.lang.Boolean $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        staticinvoke <javax.swing.LookAndFeel: void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)>($r2, "opaque", $r1);

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXMonthView: java.awt.Color getBackground()>();

        $z0 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r39 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r40 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getColor(java.lang.Object)>("JXMonthView.background");

        virtualinvoke $r39.<org.jdesktop.swingx.JXMonthView: void setBackground(java.awt.Color)>($r40);

     label1:
        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXMonthView: java.awt.Color getForeground()>();

        $z1 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        $r37 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r38 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getColor(java.lang.Object)>("JXMonthView.foreground");

        virtualinvoke $r37.<org.jdesktop.swingx.JXMonthView: void setForeground(java.awt.Color)>($r38);

     label2:
        $r7 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r8 = virtualinvoke $r7.<org.jdesktop.swingx.JXMonthView: java.awt.Font getFont()>();

        $z2 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r8);

        if $z2 == 0 goto label3;

        $r35 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r36 = staticinvoke <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>("JXMonthView.font");

        virtualinvoke $r35.<org.jdesktop.swingx.JXMonthView: void setFont(java.awt.Font)>($r36);

     label3:
        $r9 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r10 = virtualinvoke $r9.<org.jdesktop.swingx.JXMonthView: java.awt.Color getMonthStringBackground()>();

        $z3 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r10);

        if $z3 == 0 goto label4;

        $r33 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r34 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getColor(java.lang.Object)>("JXMonthView.monthStringBackground");

        virtualinvoke $r33.<org.jdesktop.swingx.JXMonthView: void setMonthStringBackground(java.awt.Color)>($r34);

     label4:
        $r11 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r12 = virtualinvoke $r11.<org.jdesktop.swingx.JXMonthView: java.awt.Color getMonthStringForeground()>();

        $z4 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r12);

        if $z4 == 0 goto label5;

        $r31 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r32 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getColor(java.lang.Object)>("JXMonthView.monthStringForeground");

        virtualinvoke $r31.<org.jdesktop.swingx.JXMonthView: void setMonthStringForeground(java.awt.Color)>($r32);

     label5:
        $r13 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r14 = virtualinvoke $r13.<org.jdesktop.swingx.JXMonthView: java.awt.Color getDaysOfTheWeekForeground()>();

        $z5 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r14);

        if $z5 == 0 goto label6;

        $r29 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r30 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getColor(java.lang.Object)>("JXMonthView.daysOfTheWeekForeground");

        virtualinvoke $r29.<org.jdesktop.swingx.JXMonthView: void setDaysOfTheWeekForeground(java.awt.Color)>($r30);

     label6:
        $r15 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r16 = virtualinvoke $r15.<org.jdesktop.swingx.JXMonthView: java.awt.Color getSelectionBackground()>();

        $z6 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r16);

        if $z6 == 0 goto label7;

        $r27 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r28 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getColor(java.lang.Object)>("JXMonthView.selectedBackground");

        virtualinvoke $r27.<org.jdesktop.swingx.JXMonthView: void setSelectionBackground(java.awt.Color)>($r28);

     label7:
        $r17 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r18 = virtualinvoke $r17.<org.jdesktop.swingx.JXMonthView: java.awt.Color getSelectionForeground()>();

        $z7 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r18);

        if $z7 == 0 goto label8;

        $r25 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r26 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getColor(java.lang.Object)>("JXMonthView.selectedForeground");

        virtualinvoke $r25.<org.jdesktop.swingx.JXMonthView: void setSelectionForeground(java.awt.Color)>($r26);

     label8:
        $r19 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r20 = virtualinvoke $r19.<org.jdesktop.swingx.JXMonthView: java.awt.Color getFlaggedDayForeground()>();

        $z8 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r20);

        if $z8 == 0 goto label9;

        $r23 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r24 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getColor(java.lang.Object)>("JXMonthView.flaggedDayForeground");

        virtualinvoke $r23.<org.jdesktop.swingx.JXMonthView: void setFlaggedDayForeground(java.awt.Color)>($r24);

     label9:
        $r21 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $i0 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: int getInt(java.lang.Object)>("JXMonthView.boxPaddingX");

        virtualinvoke $r21.<org.jdesktop.swingx.JXMonthView: void setBoxPaddingX(int)>($i0);

        $r22 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $i1 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: int getInt(java.lang.Object)>("JXMonthView.boxPaddingY");

        virtualinvoke $r22.<org.jdesktop.swingx.JXMonthView: void setBoxPaddingY(int)>($i1);

        return;
    }

    protected void installDelegate()
    {
        org.jdesktop.swingx.JXMonthView $r1, $r5;
        java.util.Date $r6;
        javax.swing.Icon $r3, $r4;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.awt.ComponentOrientation $r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r2.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean isLeftToRight> = $z0;

        $r3 = staticinvoke <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>("JXMonthView.monthDownFileName");

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: javax.swing.Icon monthDownImage> = $r3;

        $r4 = staticinvoke <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>("JXMonthView.monthUpFileName");

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: javax.swing.Icon monthUpImage> = $r4;

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXMonthView: java.util.Date getFirstDisplayedDay()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void setFirstDisplayedDay(java.util.Date)>($r6);

        return;
    }

    protected boolean isUIInstallable(java.lang.Object)
    {
        java.lang.Object r0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r1;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof javax.swing.plaf.UIResource;

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    protected void uninstallDefaults()
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        return;
    }

    protected void installKeyboardActions()
    {
        org.jdesktop.swingx.JXMonthView $r1, $r14, $r17;
        javax.swing.ActionMap $r2, $r15, $r18;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$2 $r16;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$1 $r13;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void installKeyBindings(int)>(1);

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: javax.swing.ActionMap getActionMap()>();

        $r3 = new org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction;

        specialinvoke $r3.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction: void <init>(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)>(r0, 0);

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("acceptSelection", $r3);

        $r4 = new org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction;

        specialinvoke $r4.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction: void <init>(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)>(r0, 1);

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("cancelSelection", $r4);

        $r5 = new org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction;

        specialinvoke $r5.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction: void <init>(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)>(r0, 2);

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("selectPreviousDay", $r5);

        $r6 = new org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction;

        specialinvoke $r6.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction: void <init>(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)>(r0, 3);

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("selectNextDay", $r6);

        $r7 = new org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction;

        specialinvoke $r7.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction: void <init>(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)>(r0, 4);

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("selectDayInPreviousWeek", $r7);

        $r8 = new org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction;

        specialinvoke $r8.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction: void <init>(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)>(r0, 5);

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("selectDayInNextWeek", $r8);

        $r9 = new org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction;

        specialinvoke $r9.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction: void <init>(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)>(r0, 6);

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("adjustSelectionPreviousDay", $r9);

        $r10 = new org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction;

        specialinvoke $r10.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction: void <init>(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)>(r0, 7);

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("adjustSelectionNextDay", $r10);

        $r11 = new org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction;

        specialinvoke $r11.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction: void <init>(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)>(r0, 8);

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("adjustSelectionPreviousWeek", $r11);

        $r12 = new org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction;

        specialinvoke $r12.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction: void <init>(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)>(r0, 9);

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("adjustSelectionNextWeek", $r12);

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("monthViewCommit", $r3);

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("monthViewCancel", $r4);

        $r13 = new org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$1;

        specialinvoke $r13.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$1: void <init>(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)>(r0);

        $r14 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r15 = virtualinvoke $r14.<org.jdesktop.swingx.JXMonthView: javax.swing.ActionMap getActionMap()>();

        virtualinvoke $r15.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("scrollToPreviousMonth", $r13);

        $r16 = new org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$2;

        specialinvoke $r16.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$2: void <init>(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)>(r0);

        $r17 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r18 = virtualinvoke $r17.<org.jdesktop.swingx.JXMonthView: javax.swing.ActionMap getActionMap()>();

        virtualinvoke $r18.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("scrollToNextMonth", $r16);

        return;
    }

    private void installKeyBindings(int)
    {
        javax.swing.KeyStroke $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        org.jdesktop.swingx.JXMonthView $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        int i0;
        javax.swing.InputMap $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter0: int;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: javax.swing.InputMap getInputMap(int)>(i0);

        $r3 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(10, 0, 0);

        virtualinvoke $r2.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r3, "acceptSelection");

        $r4 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(27, 0, 0);

        virtualinvoke $r2.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r4, "cancelSelection");

        $r5 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(37, 0, 0);

        virtualinvoke $r2.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r5, "selectPreviousDay");

        $r6 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(39, 0, 0);

        virtualinvoke $r2.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r6, "selectNextDay");

        $r7 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(38, 0, 0);

        virtualinvoke $r2.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r7, "selectDayInPreviousWeek");

        $r8 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(40, 0, 0);

        virtualinvoke $r2.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r8, "selectDayInNextWeek");

        $r9 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(37, 1, 0);

        virtualinvoke $r2.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r9, "adjustSelectionPreviousDay");

        $r10 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(39, 1, 0);

        virtualinvoke $r2.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r10, "adjustSelectionNextDay");

        $r11 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(38, 1, 0);

        virtualinvoke $r2.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r11, "adjustSelectionPreviousWeek");

        $r12 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>(40, 1, 0);

        virtualinvoke $r2.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r12, "adjustSelectionNextWeek");

        return;
    }

    private void uninstallKeyBindings(int)
    {
        org.jdesktop.swingx.JXMonthView $r1;
        int i0;
        javax.swing.InputMap $r2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter0: int;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: javax.swing.InputMap getInputMap(int)>(i0);

        virtualinvoke $r2.<javax.swing.InputMap: void clear()>();

        return;
    }

    protected void uninstallKeyboardActions()
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        return;
    }

    protected void installListeners()
    {
        org.jdesktop.swingx.JXMonthView $r5, $r7, $r9, $r10;
        org.jdesktop.swingx.calendar.DateSelectionModel $r11;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler $r12;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.beans.PropertyChangeListener $r1, $r4;
        java.awt.event.MouseMotionListener $r3, $r8;
        java.awt.event.MouseListener $r2, $r6;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.beans.PropertyChangeListener createPropertyChangeListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.beans.PropertyChangeListener propertyChangeListener> = $r1;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.event.MouseListener createMouseListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.event.MouseListener mouseListener> = $r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.event.MouseMotionListener createMouseMotionListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.event.MouseMotionListener mouseMotionListener> = $r3;

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.beans.PropertyChangeListener propertyChangeListener>;

        virtualinvoke $r5.<org.jdesktop.swingx.JXMonthView: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r4);

        $r7 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.event.MouseListener mouseListener>;

        virtualinvoke $r7.<org.jdesktop.swingx.JXMonthView: void addMouseListener(java.awt.event.MouseListener)>($r6);

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r8 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.event.MouseMotionListener mouseMotionListener>;

        virtualinvoke $r9.<org.jdesktop.swingx.JXMonthView: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r8);

        $r10 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r11 = virtualinvoke $r10.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        $r12 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler getHandler()>();

        interfaceinvoke $r11.<org.jdesktop.swingx.calendar.DateSelectionModel: void addDateSelectionListener(org.jdesktop.swingx.event.DateSelectionListener)>($r12);

        return;
    }

    protected void uninstallListeners()
    {
        org.jdesktop.swingx.JXMonthView $r1, $r5, $r7, $r9;
        org.jdesktop.swingx.calendar.DateSelectionModel $r2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler $r3;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.beans.PropertyChangeListener $r8;
        java.awt.event.MouseMotionListener $r4;
        java.awt.event.MouseListener $r6;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        $r3 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler getHandler()>();

        interfaceinvoke $r2.<org.jdesktop.swingx.calendar.DateSelectionModel: void removeDateSelectionListener(org.jdesktop.swingx.event.DateSelectionListener)>($r3);

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.event.MouseMotionListener mouseMotionListener>;

        virtualinvoke $r5.<org.jdesktop.swingx.JXMonthView: void removeMouseMotionListener(java.awt.event.MouseMotionListener)>($r4);

        $r7 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.event.MouseListener mouseListener>;

        virtualinvoke $r7.<org.jdesktop.swingx.JXMonthView: void removeMouseListener(java.awt.event.MouseListener)>($r6);

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r8 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.beans.PropertyChangeListener propertyChangeListener>;

        virtualinvoke $r9.<org.jdesktop.swingx.JXMonthView: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r8);

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.event.MouseMotionListener mouseMotionListener> = null;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.event.MouseListener mouseListener> = null;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.beans.PropertyChangeListener propertyChangeListener> = null;

        return;
    }

    protected void installRenderingHandler()
    {
        org.jdesktop.swingx.JXMonthView $r5;
        javax.swing.CellRendererPane $r3, $r4;
        org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler $r1, $r2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler createRenderingHandler()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void setRenderingHandler(org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler)>($r1);

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler getRenderingHandler()>();

        if $r2 == null goto label1;

        $r3 = new javax.swing.CellRendererPane;

        specialinvoke $r3.<javax.swing.CellRendererPane: void <init>()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: javax.swing.CellRendererPane rendererPane> = $r3;

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: javax.swing.CellRendererPane rendererPane>;

        virtualinvoke $r5.<org.jdesktop.swingx.JXMonthView: java.awt.Component add(java.awt.Component)>($r4);

     label1:
        return;
    }

    protected void uninstallRenderingHandler()
    {
        org.jdesktop.swingx.JXMonthView $r3;
        javax.swing.CellRendererPane $r2;
        org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler getRenderingHandler()>();

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: javax.swing.CellRendererPane rendererPane>;

        virtualinvoke $r3.<org.jdesktop.swingx.JXMonthView: void remove(java.awt.Component)>($r2);

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: javax.swing.CellRendererPane rendererPane> = null;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void setRenderingHandler(org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler)>(null);

        return;
    }

    protected org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler createRenderingHandler()
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$RenderingHandler $r0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$RenderingHandler;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$RenderingHandler: void <init>()>();

        return $r0;
    }

    protected void setRenderingHandler(org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler)
    {
        org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter0: org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler renderingHandler> = r1;

        return;
    }

    protected org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler getRenderingHandler()
    {
        org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler renderingHandler>;

        return $r1;
    }

    protected void updateComponentInputMap()
    {
        org.jdesktop.swingx.JXMonthView $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: boolean isComponentInputMapEnabled()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void installKeyBindings(int)>(2);

        goto label2;

     label1:
        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void uninstallKeyBindings(int)>(2);

     label2:
        return;
    }

    protected void updateLocale(boolean)
    {
        org.jdesktop.swingx.JXMonthView $r1, $r10, $r11;
        java.lang.String[] $r5, $r7, $r8, $r9, $r12, $r14, $r15, $r17;
        java.util.Locale $r2;
        int $i0, i1;
        org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler $r3, $r18;
        java.lang.String $r16;
        boolean z0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.text.DateFormatSymbols $r4, $r13;
        java.lang.Object $r6;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: java.util.Locale getLocale()>();

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler getRenderingHandler()>();

        if $r3 == null goto label1;

        $r18 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler getRenderingHandler()>();

        interfaceinvoke $r18.<org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler: void setLocale(java.util.Locale)>($r2);

     label1:
        $r4 = staticinvoke <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>($r2);

        $r5 = virtualinvoke $r4.<java.text.DateFormatSymbols: java.lang.String[] getMonths()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.lang.String[] monthsOfTheYear> = $r5;

        $r6 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("JXMonthView.daysOfTheWeek");

        $r7 = (java.lang.String[]) $r6;

        $r8 = (java.lang.String[]) $r7;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.lang.String[] daysOfTheWeek> = $r8;

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.lang.String[] daysOfTheWeek>;

        if $r9 != null goto label3;

        $r12 = newarray (java.lang.String)[7];

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.lang.String[] daysOfTheWeek> = $r12;

        $r13 = staticinvoke <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>($r2);

        $r14 = virtualinvoke $r13.<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>();

        $r15 = newarray (java.lang.String)[7];

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.lang.String[] daysOfTheWeek> = $r15;

        i1 = 1;

     label2:
        if i1 > 7 goto label3;

        $r17 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.lang.String[] daysOfTheWeek>;

        $i0 = i1 - 1;

        $r16 = $r14[i1];

        $r17[$i0] = $r16;

        i1 = i1 + 1;

        goto label2;

     label3:
        if z0 == 0 goto label4;

        $r10 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        virtualinvoke $r10.<org.jdesktop.swingx.JXMonthView: void invalidate()>();

        $r11 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        virtualinvoke $r11.<org.jdesktop.swingx.JXMonthView: void validate()>();

     label4:
        return;
    }

    public java.lang.String[] getDaysOfTheWeek()
    {
        int $i0, $i1;
        java.lang.String[] $r1, r2, $r3;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.lang.String[] daysOfTheWeek>;

        $i0 = lengthof $r1;

        r2 = newarray (java.lang.String)[$i0];

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.lang.String[] daysOfTheWeek>;

        $i1 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, $i1);

        return r2;
    }

    protected java.beans.PropertyChangeListener createPropertyChangeListener()
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler getHandler()>();

        return $r1;
    }

    protected java.awt.LayoutManager createLayoutManager()
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler getHandler()>();

        return $r1;
    }

    protected java.awt.event.MouseListener createMouseListener()
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler getHandler()>();

        return $r1;
    }

    protected java.awt.event.MouseMotionListener createMouseMotionListener()
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler getHandler()>();

        return $r1;
    }

    private org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler getHandler()
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler $r1, $r2, $r3;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler handler>;

        if $r1 != null goto label1;

        $r3 = new org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler;

        specialinvoke $r3.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler: void <init>(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$1)>(r0, null);

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler handler> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler handler>;

        return $r2;
    }

    public boolean isUsingKeyboard()
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $z0 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean usingKeyboard>;

        return $z0;
    }

    public void setUsingKeyboard(boolean)
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        z0 := @parameter0: boolean;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean usingKeyboard> = z0;

        return;
    }

    protected java.awt.Rectangle getDayBoundsAtLocation(int, int)
    {
        java.awt.Rectangle $r1, $r2;
        int i0, i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        boolean $z0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getMonthDetailsBoundsAtLocation(int,int)>(i0, i1);

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.awt.Rectangle: boolean contains(int,int)>(i0, i1);

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $i2 = $r1.<java.awt.Rectangle: int y>;

        $i4 = i1 - $i2;

        $i3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxHeight>;

        i5 = $i4 / $i3;

        $i6 = $r1.<java.awt.Rectangle: int x>;

        $i8 = i0 - $i6;

        $i7 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxWidth>;

        i9 = $i8 / $i7;

        $r2 = new java.awt.Rectangle;

        $i12 = $r1.<java.awt.Rectangle: int x>;

        $i10 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxWidth>;

        $i11 = i9 * $i10;

        $i19 = $i12 + $i11;

        $i15 = $r1.<java.awt.Rectangle: int y>;

        $i13 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxHeight>;

        $i14 = i5 * $i13;

        $i18 = $i15 + $i14;

        $i17 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxWidth>;

        $i16 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxHeight>;

        specialinvoke $r2.<java.awt.Rectangle: void <init>(int,int,int,int)>($i19, $i18, $i17, $i16);

        return $r2;
    }

    protected java.awt.Rectangle getDayBoundsInMonth(java.util.Date, int, int)
    {
        org.jdesktop.swingx.JXMonthView $r3, $r4;
        java.util.Date r1;
        boolean $z0, $z1, $z2;
        java.awt.Rectangle $r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter0: java.util.Date;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void checkValidRow(int,int)>(i0, i1);

        if 0 != i1 goto label1;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $z2 = virtualinvoke $r4.<org.jdesktop.swingx.JXMonthView: boolean isShowingWeekNumber()>();

        if $z2 != 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getMonthBounds(java.util.Date)>(r1);

        if $r2 != null goto label2;

        return null;

     label2:
        $i2 = $r2.<java.awt.Rectangle: int y>;

        $i3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int getMonthHeaderHeight()>();

        $i5 = i0 - 0;

        $i4 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxHeight>;

        $i6 = $i5 * $i4;

        $i7 = $i3 + $i6;

        $i8 = $i2 + $i7;

        $r2.<java.awt.Rectangle: int y> = $i8;

        i23 = i1 - 1;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $z0 = virtualinvoke $r3.<org.jdesktop.swingx.JXMonthView: boolean isShowingWeekNumber()>();

        if $z0 == 0 goto label3;

        i23 = i23 + 1;

     label3:
        $z1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean isLeftToRight>;

        if $z1 == 0 goto label4;

        $i21 = $r2.<java.awt.Rectangle: int x>;

        $i19 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxWidth>;

        $i20 = i23 * $i19;

        $i22 = $i21 + $i20;

        $r2.<java.awt.Rectangle: int x> = $i22;

        goto label5;

     label4:
        $i10 = $r2.<java.awt.Rectangle: int x>;

        $i9 = $r2.<java.awt.Rectangle: int width>;

        $i12 = $i10 + $i9;

        $i11 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxWidth>;

        i13 = $i12 - $i11;

        $i14 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxWidth>;

        $i15 = i23 * $i14;

        $i16 = i13 - $i15;

        $r2.<java.awt.Rectangle: int x> = $i16;

     label5:
        $i17 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxWidth>;

        $r2.<java.awt.Rectangle: int width> = $i17;

        $i18 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxHeight>;

        $r2.<java.awt.Rectangle: int height> = $i18;

        return $r2;
    }

    protected java.awt.Point getDayGridPositionAtLocation(int, int)
    {
        java.awt.Rectangle $r1;
        org.jdesktop.swingx.JXMonthView $r2;
        java.awt.Point $r4;
        int i0, i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, i10, $i11, $i12, i13, $i14, $i15, $i16, i17, $i19;
        boolean $z0, $z1, $z2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getMonthDetailsBoundsAtLocation(int,int)>(i0, i1);

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.awt.Rectangle: boolean contains(int,int)>(i0, i1);

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $i2 = $r1.<java.awt.Rectangle: int y>;

        $i4 = i1 - $i2;

        $i3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxHeight>;

        $i5 = $i4 / $i3;

        i6 = $i5 + 0;

        $i7 = $r1.<java.awt.Rectangle: int x>;

        $i9 = i0 - $i7;

        $i8 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxWidth>;

        i10 = $i9 / $i8;

        i17 = i10 + 1;

        $z1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean isLeftToRight>;

        if $z1 != 0 goto label3;

        $i12 = $r1.<java.awt.Rectangle: int x>;

        $i11 = $r1.<java.awt.Rectangle: int width>;

        i13 = $i12 + $i11;

        $i15 = i13 - i0;

        $i14 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxWidth>;

        $i16 = $i15 / $i14;

        i17 = $i16 + 1;

     label3:
        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $z2 = virtualinvoke $r2.<org.jdesktop.swingx.JXMonthView: boolean isShowingWeekNumber()>();

        if $z2 == 0 goto label4;

        $i19 = (int) -1;

        i17 = i17 + $i19;

     label4:
        $r4 = new java.awt.Point;

        specialinvoke $r4.<java.awt.Point: void <init>(int,int)>(i17, i6);

        return $r4;
    }

    protected java.util.Date getDayInMonth(java.util.Date, int, int)
    {
        java.lang.IllegalStateException $r4;
        java.util.Date r1, $r3;
        long $l8;
        java.util.Calendar $r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r8;
        boolean $z0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter0: java.util.Date;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 == 0 goto label1;

        if i1 != 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Calendar getCalendar(java.util.Date)>(r1);

        $i2 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(2);

        $z0 = staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: boolean isStartOfMonth(java.util.Calendar)>($r2);

        if $z0 != 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("calendar must be start of month but was: ");

        $l8 = virtualinvoke r1.<java.util.Date: long getTime()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label3:
        staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: void startOfWeek(java.util.Calendar)>($r2);

        $i3 = i0 - 1;

        $i5 = $i3 * 7;

        $i4 = i1 - 1;

        $i6 = $i5 + $i4;

        virtualinvoke $r2.<java.util.Calendar: void add(int,int)>(5, $i6);

        $i7 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(2);

        if $i7 != $i2 goto label4;

        $r3 = virtualinvoke $r2.<java.util.Calendar: java.util.Date getTime()>();

        return $r3;

     label4:
        return null;
    }

    protected java.awt.Point getDayGridPosition(java.util.Date)
    {
        java.util.Date r1, $r3, $r4, $r5, $r6;
        java.awt.Point $r7;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Calendar $r2;
        int i0, i1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter0: java.util.Date;

        $z0 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean isVisible(java.util.Date)>(r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Calendar getCalendar(java.util.Date)>(r1);

        $r3 = staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: java.util.Date startOfDay(java.util.Calendar,java.util.Date)>($r2, r1);

        staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: void startOfWeek(java.util.Calendar)>($r2);

        i0 = 1;

     label2:
        $r4 = virtualinvoke $r2.<java.util.Calendar: java.util.Date getTime()>();

        $z1 = virtualinvoke $r4.<java.util.Date: boolean before(java.util.Date)>($r3);

        if $z1 == 0 goto label3;

        i0 = i0 + 1;

        virtualinvoke $r2.<java.util.Calendar: void add(int,int)>(5, 1);

        goto label2;

     label3:
        $r5 = staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: java.util.Date startOfWeek(java.util.Calendar,java.util.Date)>($r2, r1);

        virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: void startOfMonth(java.util.Calendar)>($r2);

        i1 = 1;

     label4:
        $r6 = virtualinvoke $r2.<java.util.Calendar: java.util.Date getTime()>();

        $z2 = virtualinvoke $r6.<java.util.Date: boolean before(java.util.Date)>($r5);

        if $z2 == 0 goto label5;

        i1 = i1 + 1;

        virtualinvoke $r2.<java.util.Calendar: void add(int,int)>(3, 1);

        goto label4;

     label5:
        $r7 = new java.awt.Point;

        specialinvoke $r7.<java.awt.Point: void <init>(int,int)>(i0, i1);

        return $r7;
    }

    public java.util.Date getDayAtLocation(int, int)
    {
        java.util.Date $r2, $r3;
        java.awt.Point $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Point getDayGridPositionAtLocation(int,int)>(i0, i1);

        if $r1 == null goto label1;

        $i2 = $r1.<java.awt.Point: int x>;

        if $i2 == 0 goto label1;

        $i3 = $r1.<java.awt.Point: int y>;

        if $i3 != 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Date getMonthAtLocation(int,int)>(i0, i1);

        $i5 = $r1.<java.awt.Point: int y>;

        $i4 = $r1.<java.awt.Point: int x>;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Date getDayInMonth(java.util.Date,int,int)>($r2, $i5, $i4);

        return $r3;
    }

    protected java.awt.Rectangle getDayBounds(java.util.Date)
    {
        org.jdesktop.swingx.JXMonthView $r4;
        java.util.Date r1;
        java.awt.Point $r2;
        boolean $z0, $z1, $z2;
        java.awt.Rectangle $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter0: java.util.Date;

        $z0 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean isVisible(java.util.Date)>(r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Point getDayGridPosition(java.util.Date)>(r1);

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getMonthBounds(java.util.Date)>(r1);

        $i0 = $r3.<java.awt.Rectangle: int y>;

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int getMonthHeaderHeight()>();

        $i2 = $r2.<java.awt.Point: int y>;

        $i4 = $i2 - 0;

        $i3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxHeight>;

        $i5 = $i4 * $i3;

        $i6 = $i1 + $i5;

        $i7 = $i0 + $i6;

        $r3.<java.awt.Rectangle: int y> = $i7;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $z1 = virtualinvoke $r4.<org.jdesktop.swingx.JXMonthView: boolean isShowingWeekNumber()>();

        if $z1 == 0 goto label2;

        $i26 = $r2.<java.awt.Point: int x>;

        $i27 = $i26 + 1;

        $r2.<java.awt.Point: int x> = $i27;

     label2:
        $i8 = $r2.<java.awt.Point: int x>;

        $i9 = $i8 - 1;

        $r2.<java.awt.Point: int x> = $i9;

        $z2 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean isLeftToRight>;

        if $z2 == 0 goto label3;

        $i24 = $r3.<java.awt.Rectangle: int x>;

        $i22 = $r2.<java.awt.Point: int x>;

        $i21 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxWidth>;

        $i23 = $i22 * $i21;

        $i25 = $i24 + $i23;

        $r3.<java.awt.Rectangle: int x> = $i25;

        goto label4;

     label3:
        $i11 = $r3.<java.awt.Rectangle: int x>;

        $i10 = $r3.<java.awt.Rectangle: int width>;

        $i13 = $i11 + $i10;

        $i12 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxWidth>;

        i14 = $i13 - $i12;

        $i16 = $r2.<java.awt.Point: int x>;

        $i15 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxWidth>;

        $i17 = $i16 * $i15;

        $i18 = i14 - $i17;

        $r3.<java.awt.Rectangle: int x> = $i18;

     label4:
        $i19 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxWidth>;

        $r3.<java.awt.Rectangle: int width> = $i19;

        $i20 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxHeight>;

        $r3.<java.awt.Rectangle: int height> = $i20;

        return $r3;
    }

    private void checkValidRow(int, int)
    {
        java.lang.IllegalArgumentException $r0, $r5;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r10;
        int i0, i1;
        java.lang.StringBuilder $r1, $r2, $r3, $r6, $r7, $r8;
        java.lang.String $r4, $r9;

        r10 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        if i0 < 0 goto label1;

        if i0 <= 7 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal column in day grid ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        if i1 < 0 goto label3;

        if i1 <= 6 goto label4;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal row in day grid");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label4:
        return;
    }

    private boolean isVisible(java.util.Date)
    {
        java.util.Date $r1, r2, $r3;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r2 := @parameter0: java.util.Date;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Date getFirstDisplayedDay()>();

        $z0 = virtualinvoke $r1.<java.util.Date: boolean after(java.util.Date)>(r2);

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Date getLastDisplayedDay()>();

        $z1 = virtualinvoke $r3.<java.util.Date: boolean before(java.util.Date)>(r2);

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    protected int getTraversableGridPositionAtLocation(int, int)
    {
        byte $b25, $b26;
        boolean $z0, $z1, $z2, $z3, $z4;
        javax.swing.Icon $r3, $r4, $r5;
        java.awt.Rectangle $r1, $r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i28, $i30, $i32, $i34, $i36;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getMonthHeaderBoundsAtLocation(int,int)>(i0, i1);

        if $r1 != null goto label01;

        $i28 = (int) -1;

        return $i28;

     label01:
        $i3 = $r1.<java.awt.Rectangle: int y>;

        $i2 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int arrowPaddingY>;

        $i4 = $i3 + $i2;

        if i1 >= $i4 goto label02;

        $i30 = (int) -1;

        return $i30;

     label02:
        $i6 = $r1.<java.awt.Rectangle: int y>;

        $i5 = $r1.<java.awt.Rectangle: int height>;

        $i8 = $i6 + $i5;

        $i7 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int arrowPaddingY>;

        $i9 = $i8 - $i7;

        if i1 <= $i9 goto label03;

        $i32 = (int) -1;

        return $i32;

     label03:
        $i11 = $r1.<java.awt.Rectangle: int x>;

        $i10 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int arrowPaddingX>;

        $i17 = $i11 + $i10;

        $i14 = $r1.<java.awt.Rectangle: int width>;

        $i12 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int arrowPaddingX>;

        $i13 = 2 * $i12;

        $i16 = $i14 - $i13;

        $i15 = $r1.<java.awt.Rectangle: int height>;

        virtualinvoke $r1.<java.awt.Rectangle: void setBounds(int,int,int,int)>($i17, i1, $i16, $i15);

        $z0 = virtualinvoke $r1.<java.awt.Rectangle: boolean contains(int,int)>(i0, i1);

        if $z0 != 0 goto label04;

        $i34 = (int) -1;

        return $i34;

     label04:
        $r6 = new java.awt.Rectangle;

        $i18 = $r1.<java.awt.Rectangle: int x>;

        $i19 = $r1.<java.awt.Rectangle: int y>;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: javax.swing.Icon monthUpImage>;

        $i20 = interfaceinvoke $r3.<javax.swing.Icon: int getIconWidth()>();

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: javax.swing.Icon monthUpImage>;

        $i21 = interfaceinvoke $r4.<javax.swing.Icon: int getIconHeight()>();

        specialinvoke $r6.<java.awt.Rectangle: void <init>(int,int,int,int)>($i18, $i19, $i20, $i21);

        $z1 = virtualinvoke $r6.<java.awt.Rectangle: boolean contains(int,int)>(i0, i1);

        if $z1 == 0 goto label07;

        $z4 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean isLeftToRight>;

        if $z4 == 0 goto label05;

        $b25 = 1;

        goto label06;

     label05:
        $b25 = 2;

     label06:
        return $b25;

     label07:
        $i22 = $r1.<java.awt.Rectangle: int width>;

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: javax.swing.Icon monthUpImage>;

        $i23 = interfaceinvoke $r5.<javax.swing.Icon: int getIconWidth()>();

        $i24 = $i22 - $i23;

        virtualinvoke $r6.<java.awt.Rectangle: void translate(int,int)>($i24, 0);

        $z2 = virtualinvoke $r6.<java.awt.Rectangle: boolean contains(int,int)>(i0, i1);

        if $z2 == 0 goto label10;

        $z3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean isLeftToRight>;

        if $z3 == 0 goto label08;

        $b26 = 2;

        goto label09;

     label08:
        $b26 = 1;

     label09:
        return $b26;

     label10:
        $i36 = (int) -1;

        return $i36;
    }

    protected java.awt.Rectangle getMonthHeaderBoundsAtLocation(int, int)
    {
        java.awt.Rectangle $r1;
        int i0, i1, $i2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getMonthBoundsAtLocation(int,int)>(i0, i1);

        if $r1 != null goto label1;

        return null;

     label1:
        $i2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int getMonthHeaderHeight()>();

        $r1.<java.awt.Rectangle: int height> = $i2;

        return $r1;
    }

    protected java.awt.Rectangle getMonthDetailsBoundsAtLocation(int, int)
    {
        java.awt.Rectangle $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getMonthBoundsAtLocation(int,int)>(i0, i1);

        if $r1 != null goto label1;

        return null;

     label1:
        $i2 = $r1.<java.awt.Rectangle: int y>;

        $i3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int getMonthHeaderHeight()>();

        i4 = $i2 + $i3;

        if i1 >= i4 goto label2;

        return null;

     label2:
        $r1.<java.awt.Rectangle: int y> = i4;

        $i5 = $r1.<java.awt.Rectangle: int height>;

        $i6 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int getMonthHeaderHeight()>();

        $i7 = $i5 - $i6;

        $r1.<java.awt.Rectangle: int height> = $i7;

        return $r1;
    }

    protected java.awt.Rectangle getMonthBoundsAtLocation(int, int)
    {
        java.awt.Rectangle $r1, $r2, $r3, $r4, $r5, $r6;
        int i0, i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        boolean $z0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle calendarGrid>;

        $z0 = virtualinvoke $r1.<java.awt.Rectangle: boolean contains(int,int)>(i0, i1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle calendarGrid>;

        $i2 = $r2.<java.awt.Rectangle: int y>;

        $i4 = i1 - $i2;

        $i3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullCalendarHeight>;

        i5 = $i4 / $i3;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle calendarGrid>;

        $i6 = $r3.<java.awt.Rectangle: int x>;

        $i8 = i0 - $i6;

        $i7 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullCalendarWidth>;

        i9 = $i8 / $i7;

        $r4 = new java.awt.Rectangle;

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle calendarGrid>;

        $i12 = $r5.<java.awt.Rectangle: int x>;

        $i10 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullCalendarWidth>;

        $i11 = i9 * $i10;

        $i19 = $i12 + $i11;

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle calendarGrid>;

        $i15 = $r6.<java.awt.Rectangle: int y>;

        $i13 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullCalendarHeight>;

        $i14 = i5 * $i13;

        $i18 = $i15 + $i14;

        $i17 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarWidth>;

        $i16 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarHeight>;

        specialinvoke $r4.<java.awt.Rectangle: void <init>(int,int,int,int)>($i19, $i18, $i17, $i16);

        return $r4;
    }

    protected java.awt.Point getMonthGridPositionAtLocation(int, int)
    {
        java.awt.Rectangle $r1, $r2, $r3, $r5, $r6;
        java.awt.Point $r4;
        int i0, i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, i14;
        boolean $z0, $z1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle calendarGrid>;

        $z0 = virtualinvoke $r1.<java.awt.Rectangle: boolean contains(int,int)>(i0, i1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle calendarGrid>;

        $i2 = $r2.<java.awt.Rectangle: int y>;

        $i4 = i1 - $i2;

        $i3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullCalendarHeight>;

        i5 = $i4 / $i3;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle calendarGrid>;

        $i6 = $r3.<java.awt.Rectangle: int x>;

        $i8 = i0 - $i6;

        $i7 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullCalendarWidth>;

        i14 = $i8 / $i7;

        $z1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean isLeftToRight>;

        if $z1 != 0 goto label2;

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle calendarGrid>;

        $i10 = $r5.<java.awt.Rectangle: int x>;

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle calendarGrid>;

        $i9 = $r6.<java.awt.Rectangle: int width>;

        i11 = $i10 + $i9;

        $i13 = i11 - i0;

        $i12 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullCalendarWidth>;

        i14 = $i13 / $i12;

     label2:
        $r4 = new java.awt.Point;

        specialinvoke $r4.<java.awt.Point: void <init>(int,int)>(i14, i5);

        return $r4;
    }

    protected java.util.Date getMonthAtLocation(int, int)
    {
        java.util.Date $r2;
        int i0, i1, $i2, $i3;
        java.awt.Point $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Point getMonthGridPositionAtLocation(int,int)>(i0, i1);

        if $r1 != null goto label1;

        return null;

     label1:
        $i3 = $r1.<java.awt.Point: int y>;

        $i2 = $r1.<java.awt.Point: int x>;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Date getMonth(int,int)>($i3, $i2);

        return $r2;
    }

    protected java.util.Date getMonth(int, int)
    {
        java.util.Date $r2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Calendar $r1;
        int i0, $i1, i2, $i3, $i4;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Calendar getCalendar()>();

        $i1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarColumnCount>;

        $i3 = i0 * $i1;

        $i4 = $i3 + i2;

        virtualinvoke $r1.<java.util.Calendar: void add(int,int)>(2, $i4);

        $r2 = virtualinvoke $r1.<java.util.Calendar: java.util.Date getTime()>();

        return $r2;
    }

    protected java.awt.Point getMonthGridPosition(java.util.Date)
    {
        java.util.Date r1;
        java.awt.Point $r3;
        java.util.Calendar $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, i9, $i10, i11;
        boolean $z0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter0: java.util.Date;

        $z0 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean isVisible(java.util.Date)>(r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Calendar getCalendar()>();

        $i0 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(2);

        $i1 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(1);

        virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        $i2 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(2);

        $i3 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(1);

        $i6 = $i2 - $i0;

        $i4 = $i3 - $i1;

        $i5 = $i4 * 12;

        i7 = $i6 + $i5;

        $i8 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarColumnCount>;

        i9 = i7 / $i8;

        $i10 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarColumnCount>;

        i11 = i7 % $i10;

        $r3 = new java.awt.Point;

        specialinvoke $r3.<java.awt.Point: void <init>(int,int)>(i11, i9);

        return $r3;
    }

    protected java.awt.Rectangle getMonthBounds(int, int)
    {
        java.awt.Rectangle $r1, $r2, $r3, $r4;
        int i0, $i1, $i2, $i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17;
        boolean $z0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter0: int;

        i5 := @parameter1: int;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle calendarGrid>;

        $i3 = $r1.<java.awt.Rectangle: int y>;

        $i1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullCalendarHeight>;

        $i2 = i0 * $i1;

        i4 = $i3 + $i2;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle calendarGrid>;

        $i8 = $r2.<java.awt.Rectangle: int x>;

        $i6 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullCalendarWidth>;

        $i7 = i5 * $i6;

        i17 = $i8 + $i7;

        $z0 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean isLeftToRight>;

        if $z0 != 0 goto label1;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle calendarGrid>;

        $i16 = $r4.<java.awt.Rectangle: int x>;

        $i11 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarColumnCount>;

        $i12 = $i11 - 1;

        $i14 = $i12 - i5;

        $i13 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullCalendarWidth>;

        $i15 = $i14 * $i13;

        i17 = $i16 + $i15;

     label1:
        $r3 = new java.awt.Rectangle;

        $i10 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarWidth>;

        $i9 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarHeight>;

        specialinvoke $r3.<java.awt.Rectangle: void <init>(int,int,int,int)>(i17, i4, $i10, $i9);

        return $r3;
    }

    protected java.awt.Rectangle getMonthBounds(java.util.Date)
    {
        java.awt.Rectangle $r3;
        java.util.Date r1;
        int $i0, $i1;
        java.awt.Point $r2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter0: java.util.Date;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Point getMonthGridPosition(java.util.Date)>(r1);

        if $r2 == null goto label1;

        $i1 = $r2.<java.awt.Point: int y>;

        $i0 = $r2.<java.awt.Point: int x>;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getMonthBounds(int,int)>($i1, $i0);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    protected java.awt.Rectangle getMonthHeaderBounds(java.util.Date, boolean)
    {
        java.awt.Rectangle $r3;
        java.util.Date r1;
        java.awt.Point $r2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        int $i0, $i1, $i2;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter0: java.util.Date;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Point getMonthGridPosition(java.util.Date)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $i1 = $r2.<java.awt.Point: int y>;

        $i0 = $r2.<java.awt.Point: int x>;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getMonthBounds(int,int)>($i1, $i0);

        $i2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int getMonthHeaderHeight()>();

        $r3.<java.awt.Rectangle: int height> = $i2;

        if z0 != 0 goto label2;

     label2:
        return $r3;
    }

    protected java.awt.Dimension getMonthSize()
    {
        java.awt.Dimension $r0;
        int $i0, $i1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r0 = new java.awt.Dimension;

        $i1 = r1.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarWidth>;

        $i0 = r1.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarHeight>;

        specialinvoke $r0.<java.awt.Dimension: void <init>(int,int)>($i1, $i0);

        return $r0;
    }

    protected java.awt.Dimension getDaySize()
    {
        java.awt.Dimension $r0;
        int $i0, $i1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r0 = new java.awt.Dimension;

        $i1 = r1.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxWidth>;

        $i0 = r1.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxHeight>;

        specialinvoke $r0.<java.awt.Dimension: void <init>(int,int)>($i1, $i0);

        return $r0;
    }

    protected int getMonthHeaderHeight()
    {
        int $i0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullMonthBoxHeight>;

        return $i0;
    }

    private void calculateMonthGridLayoutProperties()
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void calculateMonthGridRowColumnCount()>();

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void calculateMonthGridBounds()>();

        return;
    }

    private void calculateMonthGridBounds()
    {
        java.awt.Rectangle $r1;
        int $i0, $i1, $i2, $i3;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle calendarGrid>;

        $i0 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calculateCalendarGridX()>();

        $i1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calculateCalendarGridY()>();

        $i2 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calculateCalendarGridWidth()>();

        $i3 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calculateCalendarGridHeight()>();

        virtualinvoke $r1.<java.awt.Rectangle: void setBounds(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    private int calculateCalendarGridY()
    {
        org.jdesktop.swingx.JXMonthView $r1;
        int $i0, $i1, $i2, $i3;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $i0 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: int getHeight()>();

        $i1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calculateCalendarGridHeight()>();

        $i2 = $i0 - $i1;

        $i3 = $i2 / 2;

        return $i3;
    }

    private int calculateCalendarGridX()
    {
        org.jdesktop.swingx.JXMonthView $r1;
        int $i0, $i1, $i2, $i3;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $i0 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: int getWidth()>();

        $i1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calculateCalendarGridWidth()>();

        $i2 = $i0 - $i1;

        $i3 = $i2 / 2;

        return $i3;
    }

    private int calculateCalendarGridHeight()
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $i1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarHeight>;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarRowCount>;

        $i5 = $i1 * $i0;

        $i2 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarRowCount>;

        $i3 = $i2 - 1;

        $i4 = 10 * $i3;

        $i6 = $i5 + $i4;

        return $i6;
    }

    private int calculateCalendarGridWidth()
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $i1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarWidth>;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarColumnCount>;

        $i5 = $i1 * $i0;

        $i2 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarColumnCount>;

        $i3 = $i2 - 1;

        $i4 = 10 * $i3;

        $i6 = $i5 + $i4;

        return $i6;
    }

    private void calculateMonthGridRowColumnCount()
    {
        org.jdesktop.swingx.JXMonthView $r2, $r3;
        java.util.Date $r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        boolean $z0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarColumnCount>;

        i1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarRowCount>;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarRowCount> = 1;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarColumnCount> = 1;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean isZoomable()>();

        if $z0 != 0 goto label2;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $i3 = virtualinvoke $r2.<org.jdesktop.swingx.JXMonthView: int getWidth()>();

        $i4 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarWidth>;

        $i7 = $i3 - $i4;

        $i5 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarWidth>;

        $i6 = $i5 + 10;

        i8 = $i7 / $i6;

        if i8 <= 0 goto label1;

        $i16 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarColumnCount>;

        $i17 = $i16 + i8;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarColumnCount> = $i17;

     label1:
        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $i9 = virtualinvoke $r3.<org.jdesktop.swingx.JXMonthView: int getHeight()>();

        $i10 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarHeight>;

        $i13 = $i9 - $i10;

        $i11 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarHeight>;

        $i12 = $i11 + 10;

        $i18 = $i13 / $i12;

        if $i18 <= 0 goto label2;

        $i14 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarRowCount>;

        $i15 = $i14 + $i18;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarRowCount> = $i15;

     label2:
        $i19 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarColumnCount>;

        if i0 != $i19 goto label3;

        $i2 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarRowCount>;

        if i1 == $i2 goto label4;

     label3:
        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Date getFirstDisplayedDay()>();

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void updateLastDisplayedDay(java.util.Date)>($r1);

     label4:
        return;
    }

    protected boolean isZoomable()
    {
        org.jdesktop.swingx.JXMonthView $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: boolean isZoomable()>();

        return $z0;
    }

    public void update(java.awt.Graphics, javax.swing.JComponent)
    {
        java.awt.Graphics r1;
        javax.swing.JComponent r2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: javax.swing.JComponent;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void paintBackground(java.awt.Graphics)>(r1);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void paint(java.awt.Graphics,javax.swing.JComponent)>(r1, r2);

        return;
    }

    protected void paintBackground(java.awt.Graphics)
    {
        java.awt.Color $r4;
        org.jdesktop.swingx.JXMonthView $r1, $r3, $r5, $r6;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.awt.Graphics r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r2 := @parameter0: java.awt.Graphics;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: boolean isOpaque()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXMonthView: java.awt.Color getBackground()>();

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $i0 = virtualinvoke $r5.<org.jdesktop.swingx.JXMonthView: int getWidth()>();

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $i1 = virtualinvoke $r6.<org.jdesktop.swingx.JXMonthView: int getHeight()>();

        virtualinvoke r2.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, $i0, $i1);

     label1:
        return;
    }

    public void paint(java.awt.Graphics, javax.swing.JComponent)
    {
        javax.swing.JComponent r5;
        java.awt.Rectangle $r1, $r4;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r2;
        java.util.Calendar $r3;
        java.awt.Graphics r0;
        int $i0, $i1, i2, i3;
        boolean $z0;

        r2 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r0 := @parameter0: java.awt.Graphics;

        r5 := @parameter1: javax.swing.JComponent;

        $r1 = virtualinvoke r0.<java.awt.Graphics: java.awt.Rectangle getClipBounds()>();

        $r3 = virtualinvoke r2.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Calendar getCalendar()>();

        i2 = 0;

     label1:
        $i0 = r2.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarRowCount>;

        if i2 >= $i0 goto label5;

        i3 = 0;

     label2:
        $i1 = r2.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarColumnCount>;

        if i3 >= $i1 goto label4;

        $r4 = virtualinvoke r2.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getMonthBounds(int,int)>(i2, i3);

        $z0 = virtualinvoke $r4.<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>($r1);

        if $z0 == 0 goto label3;

        virtualinvoke r2.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void paintMonth(java.awt.Graphics,java.util.Calendar)>(r0, $r3);

     label3:
        virtualinvoke $r3.<java.util.Calendar: void add(int,int)>(2, 1);

        i3 = i3 + 1;

        goto label2;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return;
    }

    protected void paintMonth(java.awt.Graphics, java.util.Calendar)
    {
        java.awt.Graphics r1;
        java.util.Calendar r2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: java.util.Calendar;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void paintMonthHeader(java.awt.Graphics,java.util.Calendar)>(r1, r2);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void paintDayHeader(java.awt.Graphics,java.util.Calendar)>(r1, r2);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void paintWeekHeader(java.awt.Graphics,java.util.Calendar)>(r1, r2);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void paintDays(java.awt.Graphics,java.util.Calendar)>(r1, r2);

        return;
    }

    protected void paintMonthHeader(java.awt.Graphics, java.util.Calendar)
    {
        java.awt.Rectangle $r3;
        java.util.Calendar r1;
        java.util.Date $r2;
        java.awt.Graphics r4;
        org.jdesktop.swingx.plaf.basic.CalendarState $r5;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r4 := @parameter0: java.awt.Graphics;

        r1 := @parameter1: java.util.Calendar;

        $r2 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>();

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getMonthHeaderBounds(java.util.Date,boolean)>($r2, 0);

        $r5 = <org.jdesktop.swingx.plaf.basic.CalendarState: org.jdesktop.swingx.plaf.basic.CalendarState TITLE>;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void paintDayOfMonth(java.awt.Graphics,java.awt.Rectangle,java.util.Calendar,org.jdesktop.swingx.plaf.basic.CalendarState)>(r4, $r3, r1, $r5);

        return;
    }

    protected void paintDayHeader(java.awt.Graphics, java.util.Calendar)
    {
        java.awt.Rectangle $r6;
        java.util.Date $r5;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Calendar r2, r4;
        java.awt.Graphics r1;
        int i0;
        java.lang.Object $r3;
        org.jdesktop.swingx.plaf.basic.CalendarState $r7;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: java.util.Calendar;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void paintDaysOfWeekSeparator(java.awt.Graphics,java.util.Calendar)>(r1, r2);

        $r3 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>();

        r4 = (java.util.Calendar) $r3;

        staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: void startOfWeek(java.util.Calendar)>(r4);

        i0 = 1;

     label1:
        if i0 > 7 goto label2;

        $r5 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>();

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getDayBoundsInMonth(java.util.Date,int,int)>($r5, 0, i0);

        $r7 = <org.jdesktop.swingx.plaf.basic.CalendarState: org.jdesktop.swingx.plaf.basic.CalendarState DAY_OF_WEEK>;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void paintDayOfMonth(java.awt.Graphics,java.awt.Rectangle,java.util.Calendar,org.jdesktop.swingx.plaf.basic.CalendarState)>(r1, $r6, r4, $r7);

        virtualinvoke r4.<java.util.Calendar: void add(int,int)>(5, 1);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    protected void paintWeekHeader(java.awt.Graphics, java.util.Calendar)
    {
        java.awt.Rectangle $r7;
        org.jdesktop.swingx.JXMonthView $r1;
        java.util.Date $r6;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Calendar r3, r5;
        java.awt.Graphics r2;
        int $i0, $i1, i2;
        java.lang.Object $r4;
        org.jdesktop.swingx.plaf.basic.CalendarState $r8;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r2 := @parameter0: java.awt.Graphics;

        r3 := @parameter1: java.util.Calendar;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: boolean isShowingWeekNumber()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void paintWeekOfYearSeparator(java.awt.Graphics,java.util.Calendar)>(r2, r3);

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int getWeeks(java.util.Calendar)>(r3);

        $r4 = virtualinvoke r3.<java.util.Calendar: java.lang.Object clone()>();

        r5 = (java.util.Calendar) $r4;

        i2 = 1;

     label2:
        $i1 = 1 + $i0;

        if i2 >= $i1 goto label3;

        $r6 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>();

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getDayBoundsInMonth(java.util.Date,int,int)>($r6, i2, 0);

        $r8 = <org.jdesktop.swingx.plaf.basic.CalendarState: org.jdesktop.swingx.plaf.basic.CalendarState WEEK_OF_YEAR>;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void paintDayOfMonth(java.awt.Graphics,java.awt.Rectangle,java.util.Calendar,org.jdesktop.swingx.plaf.basic.CalendarState)>(r2, $r7, r5, $r8);

        virtualinvoke r5.<java.util.Calendar: void add(int,int)>(3, 1);

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    protected void paintDays(java.awt.Graphics, java.util.Calendar)
    {
        java.awt.Rectangle $r11;
        org.jdesktop.swingx.JXMonthView $r13, $r14;
        java.util.Date $r3, $r4, $r5, $r6, $r7, $r8, $r10;
        java.util.Calendar r0, r2;
        int i0, i1;
        org.jdesktop.swingx.plaf.basic.CalendarState r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r9;
        java.awt.Graphics r12;
        java.lang.Object $r1;

        r9 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r12 := @parameter0: java.awt.Graphics;

        r0 := @parameter1: java.util.Calendar;

        $r1 = virtualinvoke r0.<java.util.Calendar: java.lang.Object clone()>();

        r2 = (java.util.Calendar) $r1;

        staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: void startOfMonth(java.util.Calendar)>(r2);

        $r3 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>();

        staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: void endOfMonth(java.util.Calendar)>(r2);

        $r4 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>();

        $r5 = virtualinvoke r0.<java.util.Calendar: java.util.Date getTime()>();

        virtualinvoke r2.<java.util.Calendar: void setTime(java.util.Date)>($r5);

        $r6 = virtualinvoke r0.<java.util.Calendar: java.util.Date getTime()>();

        virtualinvoke r2.<java.util.Calendar: void setTime(java.util.Date)>($r6);

        staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: void startOfWeek(java.util.Calendar)>(r2);

        i0 = 1;

     label01:
        if i0 > 6 goto label10;

        i1 = 1;

     label02:
        if i1 > 7 goto label09;

        r15 = null;

        $r7 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>();

        $z0 = virtualinvoke $r7.<java.util.Date: boolean before(java.util.Date)>($r3);

        if $z0 == 0 goto label03;

        $r14 = r9.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $z4 = virtualinvoke $r14.<org.jdesktop.swingx.JXMonthView: boolean isShowingLeadingDays()>();

        if $z4 == 0 goto label07;

        r15 = <org.jdesktop.swingx.plaf.basic.CalendarState: org.jdesktop.swingx.plaf.basic.CalendarState LEADING>;

        goto label07;

     label03:
        $r8 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>();

        $z1 = virtualinvoke $r8.<java.util.Date: boolean after(java.util.Date)>($r4);

        if $z1 == 0 goto label04;

        $r13 = r9.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $z3 = virtualinvoke $r13.<org.jdesktop.swingx.JXMonthView: boolean isShowingTrailingDays()>();

        if $z3 == 0 goto label07;

        r15 = <org.jdesktop.swingx.plaf.basic.CalendarState: org.jdesktop.swingx.plaf.basic.CalendarState TRAILING>;

        goto label07;

     label04:
        $r10 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>();

        $z2 = virtualinvoke r9.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean isToday(java.util.Date)>($r10);

        if $z2 == 0 goto label05;

        $r16 = <org.jdesktop.swingx.plaf.basic.CalendarState: org.jdesktop.swingx.plaf.basic.CalendarState TODAY>;

        goto label06;

     label05:
        $r16 = <org.jdesktop.swingx.plaf.basic.CalendarState: org.jdesktop.swingx.plaf.basic.CalendarState IN_MONTH>;

     label06:
        r15 = $r16;

     label07:
        if r15 == null goto label08;

        $r11 = virtualinvoke r9.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getDayBoundsInMonth(java.util.Date,int,int)>($r3, i0, i1);

        virtualinvoke r9.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void paintDayOfMonth(java.awt.Graphics,java.awt.Rectangle,java.util.Calendar,org.jdesktop.swingx.plaf.basic.CalendarState)>(r12, $r11, r2, r15);

     label08:
        virtualinvoke r2.<java.util.Calendar: void add(int,int)>(5, 1);

        i1 = i1 + 1;

        goto label02;

     label09:
        i0 = i0 + 1;

        goto label01;

     label10:
        return;
    }

    protected void paintDayOfMonth(java.awt.Graphics, java.awt.Rectangle, java.util.Calendar, org.jdesktop.swingx.plaf.basic.CalendarState)
    {
        javax.swing.JComponent $r5;
        java.awt.Rectangle r7;
        org.jdesktop.swingx.JXMonthView $r4, $r8;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Calendar r2;
        javax.swing.CellRendererPane $r9;
        java.awt.Graphics r6;
        int $i0, $i1, $i2, $i3;
        org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler $r1;
        org.jdesktop.swingx.plaf.basic.CalendarState r3;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r6 := @parameter0: java.awt.Graphics;

        r7 := @parameter1: java.awt.Rectangle;

        r2 := @parameter2: java.util.Calendar;

        r3 := @parameter3: org.jdesktop.swingx.plaf.basic.CalendarState;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler getRenderingHandler()>();

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r5 = interfaceinvoke $r1.<org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler: javax.swing.JComponent prepareRenderingComponent(org.jdesktop.swingx.JXMonthView,java.util.Calendar,org.jdesktop.swingx.plaf.basic.CalendarState)>($r4, r2, r3);

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: javax.swing.CellRendererPane rendererPane>;

        $r8 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $i3 = r7.<java.awt.Rectangle: int x>;

        $i2 = r7.<java.awt.Rectangle: int y>;

        $i1 = r7.<java.awt.Rectangle: int width>;

        $i0 = r7.<java.awt.Rectangle: int height>;

        virtualinvoke $r9.<javax.swing.CellRendererPane: void paintComponent(java.awt.Graphics,java.awt.Component,java.awt.Container,int,int,int,int,boolean)>(r6, $r5, $r8, $i3, $i2, $i1, $i0, 1);

        return;
    }

    protected void paintWeekOfYearSeparator(java.awt.Graphics, java.util.Calendar)
    {
        java.awt.Color $r5;
        java.awt.Rectangle $r2;
        org.jdesktop.swingx.JXMonthView $r4;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Calendar r1;
        java.awt.Graphics r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r3 := @parameter0: java.awt.Graphics;

        r1 := @parameter1: java.util.Calendar;

        $r2 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getSeparatorBounds(java.util.Calendar,int,int)>(r1, 1, 0);

        if $r2 != null goto label1;

        return;

     label1:
        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.JXMonthView: java.awt.Color getForeground()>();

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        $i5 = $r2.<java.awt.Rectangle: int x>;

        $i4 = $r2.<java.awt.Rectangle: int y>;

        $i3 = $r2.<java.awt.Rectangle: int x>;

        $i1 = $r2.<java.awt.Rectangle: int y>;

        $i0 = $r2.<java.awt.Rectangle: int height>;

        $i2 = $i1 + $i0;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i5, $i4, $i3, $i2);

        return;
    }

    protected void paintDaysOfWeekSeparator(java.awt.Graphics, java.util.Calendar)
    {
        java.awt.Color $r5;
        java.awt.Rectangle $r2;
        org.jdesktop.swingx.JXMonthView $r4;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Calendar r1;
        java.awt.Graphics r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r3 := @parameter0: java.awt.Graphics;

        r1 := @parameter1: java.util.Calendar;

        $r2 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getSeparatorBounds(java.util.Calendar,int,int)>(r1, 0, 1);

        if $r2 != null goto label1;

        return;

     label1:
        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.JXMonthView: java.awt.Color getForeground()>();

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        $i5 = $r2.<java.awt.Rectangle: int x>;

        $i4 = $r2.<java.awt.Rectangle: int y>;

        $i1 = $r2.<java.awt.Rectangle: int x>;

        $i0 = $r2.<java.awt.Rectangle: int width>;

        $i3 = $i1 + $i0;

        $i2 = $r2.<java.awt.Rectangle: int y>;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i5, $i4, $i3, $i2);

        return;
    }

    private java.awt.Rectangle getSeparatorBounds(java.util.Calendar, int, int)
    {
        java.awt.Rectangle $r3;
        java.util.Date $r2;
        java.util.Calendar r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        boolean $z0, $z1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter0: java.util.Calendar;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>();

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.awt.Rectangle getDayBoundsInMonth(java.util.Date,int,int)>($r2, i0, i1);

        if $r3 != null goto label1;

        return null;

     label1:
        if i1 != 0 goto label3;

        $i13 = $r3.<java.awt.Rectangle: int height>;

        $i14 = $i13 * 6;

        $r3.<java.awt.Rectangle: int height> = $i14;

        $z1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean isLeftToRight>;

        if $z1 == 0 goto label2;

        $i17 = $r3.<java.awt.Rectangle: int x>;

        $i15 = $r3.<java.awt.Rectangle: int width>;

        $i16 = $i15 - 1;

        $i18 = $i17 + $i16;

        $r3.<java.awt.Rectangle: int x> = $i18;

     label2:
        $r3.<java.awt.Rectangle: int width> = 1;

        goto label5;

     label3:
        if i0 != 0 goto label5;

        i2 = $r3.<java.awt.Rectangle: int width>;

        $i3 = $r3.<java.awt.Rectangle: int width>;

        $i4 = $i3 * 7;

        $r3.<java.awt.Rectangle: int width> = $i4;

        $z0 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean isLeftToRight>;

        if $z0 != 0 goto label4;

        $i11 = $r3.<java.awt.Rectangle: int x>;

        $i9 = $r3.<java.awt.Rectangle: int width>;

        $i10 = $i9 - i2;

        $i12 = $i11 - $i10;

        $r3.<java.awt.Rectangle: int x> = $i12;

     label4:
        $i7 = $r3.<java.awt.Rectangle: int y>;

        $i5 = $r3.<java.awt.Rectangle: int height>;

        $i6 = $i5 - 1;

        $i8 = $i7 + $i6;

        $r3.<java.awt.Rectangle: int y> = $i8;

        $r3.<java.awt.Rectangle: int height> = 1;

     label5:
        return $r3;
    }

    protected int getWeeks(java.util.Calendar)
    {
        java.util.Date $r3, $r4, $r5;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r6;
        java.util.Calendar r0, r2;
        int i0;
        java.lang.Object $r1;
        boolean $z0;

        r6 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r0 := @parameter0: java.util.Calendar;

        $r1 = virtualinvoke r0.<java.util.Calendar: java.lang.Object clone()>();

        r2 = (java.util.Calendar) $r1;

        staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: void endOfMonth(java.util.Calendar)>(r2);

        $r3 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>();

        $r4 = virtualinvoke r0.<java.util.Calendar: java.util.Date getTime()>();

        virtualinvoke r2.<java.util.Calendar: void setTime(java.util.Date)>($r4);

        staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: void startOfWeek(java.util.Calendar)>(r2);

        i0 = 0;

     label1:
        $r5 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>();

        $z0 = virtualinvoke $r3.<java.util.Date: boolean after(java.util.Date)>($r5);

        if $z0 == 0 goto label2;

        i0 = i0 + 1;

        virtualinvoke r2.<java.util.Calendar: void add(int,int)>(4, 1);

        goto label1;

     label2:
        return i0;
    }

    private void traverseMonth(int)
    {
        int i0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void previousMonth()>();

        goto label2;

     label1:
        if i0 != 2 goto label2;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void nextMonth()>();

     label2:
        return;
    }

    private void nextMonth()
    {
        org.jdesktop.swingx.JXMonthView $r1, $r4;
        java.util.Date $r2, $r5, $r6;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Calendar $r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: java.util.Date getUpperBound()>();

        if $r2 == null goto label1;

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Date getLastDisplayedDay()>();

        $z0 = virtualinvoke $r2.<java.util.Date: boolean after(java.util.Date)>($r6);

        if $z0 == 0 goto label2;

     label1:
        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Calendar getCalendar()>();

        virtualinvoke $r3.<java.util.Calendar: void add(int,int)>(2, 1);

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r5 = virtualinvoke $r3.<java.util.Calendar: java.util.Date getTime()>();

        virtualinvoke $r4.<org.jdesktop.swingx.JXMonthView: void setFirstDisplayedDay(java.util.Date)>($r5);

     label2:
        return;
    }

    private void previousMonth()
    {
        org.jdesktop.swingx.JXMonthView $r1, $r4;
        java.util.Date $r2, $r5, $r6;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Calendar $r3;
        int $i1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: java.util.Date getLowerBound()>();

        if $r2 == null goto label1;

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Date getFirstDisplayedDay()>();

        $z0 = virtualinvoke $r2.<java.util.Date: boolean before(java.util.Date)>($r6);

        if $z0 == 0 goto label2;

     label1:
        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Calendar getCalendar()>();

        $i1 = (int) -1;

        virtualinvoke $r3.<java.util.Calendar: void add(int,int)>(2, $i1);

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r5 = virtualinvoke $r3.<java.util.Calendar: java.util.Date getTime()>();

        virtualinvoke $r4.<org.jdesktop.swingx.JXMonthView: void setFirstDisplayedDay(java.util.Date)>($r5);

     label2:
        return;
    }

    protected java.util.Calendar getCalendar()
    {
        java.util.Calendar $r2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Date $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Date getFirstDisplayedDay()>();

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Calendar getCalendar(java.util.Date)>($r1);

        return $r2;
    }

    protected java.util.Calendar getCalendar(java.util.Date)
    {
        java.util.Calendar $r2;
        org.jdesktop.swingx.JXMonthView $r1;
        java.util.Date r3;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r3 := @parameter0: java.util.Date;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: java.util.Calendar getCalendar()>();

        virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>(r3);

        return $r2;
    }

    private void updateLastDisplayedDay(java.util.Date)
    {
        java.util.Date r1, $r3;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Calendar $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter0: java.util.Date;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Calendar getCalendar(java.util.Date)>(r1);

        $i1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarColumnCount>;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarRowCount>;

        $i2 = $i1 * $i0;

        $i3 = $i2 - 1;

        virtualinvoke $r2.<java.util.Calendar: void add(int,int)>(2, $i3);

        staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: void endOfMonth(java.util.Calendar)>($r2);

        $r3 = virtualinvoke $r2.<java.util.Calendar: java.util.Date getTime()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Date lastDisplayedDate> = $r3;

        return;
    }

    public java.util.Date getLastDisplayedDay()
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Date $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Date lastDisplayedDate>;

        return $r1;
    }

    protected void setFirstDisplayedDay(java.util.Date)
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Date r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter0: java.util.Date;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void updateLastDisplayedDay(java.util.Date)>(r1);

        return;
    }

    protected java.util.Date getFirstDisplayedDay()
    {
        org.jdesktop.swingx.JXMonthView $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Date $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: java.util.Date getFirstDisplayedDay()>();

        return $r2;
    }

    protected int getFirstDisplayedMonth()
    {
        int $i0;
        java.util.Calendar $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Calendar getCalendar()>();

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(2);

        return $i0;
    }

    protected int getFirstDisplayedYear()
    {
        int $i0;
        java.util.Calendar $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Calendar getCalendar()>();

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(1);

        return $i0;
    }

    protected java.util.SortedSet getSelection()
    {
        org.jdesktop.swingx.JXMonthView $r1;
        java.util.SortedSet $r2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: java.util.SortedSet getSelection()>();

        return $r2;
    }

    protected java.util.Date getToday()
    {
        org.jdesktop.swingx.JXMonthView $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Date $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: java.util.Date getToday()>();

        return $r2;
    }

    protected boolean isToday(java.util.Date)
    {
        java.util.Date r0, $r2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r1;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r0 := @parameter0: java.util.Date;

        $r2 = virtualinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Date getToday()>();

        $z0 = virtualinvoke r0.<java.util.Date: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    private boolean canSelectByMode()
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        return 1;
    }

    protected void updateZoomable()
    {
        javax.swing.JComponent $r4, $r9;
        org.jdesktop.swingx.JXMonthView $r1, $r2, $r5, $r6, $r7;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler $r3, $r8;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: boolean isZoomable()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r8 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler getCalendarHeaderHandler()>();

        $r9 = virtualinvoke $r8.<org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler: javax.swing.JComponent getHeaderComponent()>();

        virtualinvoke $r7.<org.jdesktop.swingx.JXMonthView: java.awt.Component add(java.awt.Component)>($r9);

        goto label2;

     label1:
        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler getCalendarHeaderHandler()>();

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler: javax.swing.JComponent getHeaderComponent()>();

        virtualinvoke $r2.<org.jdesktop.swingx.JXMonthView: void remove(java.awt.Component)>($r4);

     label2:
        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        virtualinvoke $r5.<org.jdesktop.swingx.JXMonthView: void revalidate()>();

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        virtualinvoke $r6.<org.jdesktop.swingx.JXMonthView: void repaint()>();

        return;
    }

    protected org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler createCalendarHeaderHandler()
    {
        org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler $r3;
        org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler $r1, $r2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler getHeaderFromUIManager()>();

        if $r1 == null goto label1;

        $r2 = $r1;

        goto label2;

     label1:
        $r3 = new org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler;

        $r2 = $r3;

        specialinvoke $r3.<org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler: void <init>()>();

     label2:
        return $r2;
    }

    protected org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler getHeaderFromUIManager()
    {
        org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler $r3;
        java.lang.Object $r0;
        java.lang.String $r2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r1;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r0 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("CalendarHeaderHandler");

        $z0 = $r0 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.String) $r0;

        $r3 = specialinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler instantiateClass(java.lang.String)>($r2);

        return $r3;

     label1:
        return null;
    }

    private org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler instantiateClass(java.lang.String)
    {
        org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler $r3;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r4;
        java.lang.String r0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r2;

        r2 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        $r3 = specialinvoke r2.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler instantiateClass(java.lang.Class)>($r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.ClassNotFoundException: void printStackTrace()>();

        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler instantiateClass(java.lang.Class)
    {
        java.lang.NoSuchMethodException $r29;
        org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler $r4;
        java.lang.InstantiationException $r17;
        java.lang.SecurityException $r35;
        java.lang.IllegalAccessException $r11;
        java.util.logging.Logger $r7, $r13, $r19, $r25, $r31, $r37;
        java.lang.reflect.InvocationTargetException $r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r12, $r14, $r15, $r18, $r20, $r21, $r24, $r26, $r27, $r30, $r32, $r33, $r36, $r38, $r39;
        java.lang.Object[] $r2;
        java.lang.reflect.Constructor r42;
        java.lang.String $r10, $r16, $r22, $r28, $r34, $r40;
        java.lang.Class[] $r1;
        java.lang.IllegalArgumentException $r23;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r41;
        java.lang.Class r0;
        java.lang.Object $r3;

        r41 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r0 := @parameter0: java.lang.Class;

        r42 = null;

     label01:
        $r1 = newarray (java.lang.Class)[0];

        r42 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r1);

     label02:
        goto label05;

     label03:
        $r35 := @caughtexception;

        $r37 = <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.logging.Logger LOG>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cant instantiate CalendarHeaderHandler (security) ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<java.util.logging.Logger: void finer(java.lang.String)>($r40);

        goto label05;

     label04:
        $r29 := @caughtexception;

        $r31 = <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.logging.Logger LOG>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cant instantiate CalendarHeaderHandler (missing parameterless constructo?)");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.util.logging.Logger: void finer(java.lang.String)>($r34);

     label05:
        if r42 == null goto label12;

     label06:
        $r2 = newarray (java.lang.Object)[0];

        $r3 = virtualinvoke r42.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r2);

        $r4 = (org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler) $r3;

     label07:
        return $r4;

     label08:
        $r23 := @caughtexception;

        $r25 = <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.logging.Logger LOG>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cant instantiate CalendarHeaderHandler (missing parameterless constructo?)");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.util.logging.Logger: void finer(java.lang.String)>($r28);

        goto label12;

     label09:
        $r17 := @caughtexception;

        $r19 = <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.logging.Logger LOG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cant instantiate CalendarHeaderHandler (not instantiable) ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.util.logging.Logger: void finer(java.lang.String)>($r22);

        goto label12;

     label10:
        $r11 := @caughtexception;

        $r13 = <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.logging.Logger LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cant instantiate CalendarHeaderHandler (constructor not public) ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.util.logging.Logger: void finer(java.lang.String)>($r16);

        goto label12;

     label11:
        $r5 := @caughtexception;

        $r7 = <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.logging.Logger LOG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cant instantiate CalendarHeaderHandler (Invocation target)");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.util.logging.Logger: void finer(java.lang.String)>($r10);

     label12:
        return null;

        catch java.lang.SecurityException from label01 to label02 with label03;
        catch java.lang.NoSuchMethodException from label01 to label02 with label04;
        catch java.lang.IllegalArgumentException from label06 to label07 with label08;
        catch java.lang.InstantiationException from label06 to label07 with label09;
        catch java.lang.IllegalAccessException from label06 to label07 with label10;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label11;
    }

    protected void setCalendarHeaderHandler(org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler)
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter0: org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler calendarHeaderHandler> = r1;

        return;
    }

    protected org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler getCalendarHeaderHandler()
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler calendarHeaderHandler>;

        return $r1;
    }

    protected java.awt.Font createDerivedFont()
    {
        org.jdesktop.swingx.JXMonthView $r1;
        java.awt.Font $r2, $r3;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.JXMonthView monthView>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXMonthView: java.awt.Font getFont()>();

        $r3 = virtualinvoke $r2.<java.awt.Font: java.awt.Font deriveFont(int)>(1);

        return $r3;
    }

    static void access$000(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void previousMonth()>();

        return;
    }

    static void access$100(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void nextMonth()>();

        return;
    }

    static void access$300(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI, int)
    {
        int i0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter1: int;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void traverseMonth(int)>(i0);

        return;
    }

    static boolean access$400(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        boolean $z0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $z0 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: boolean canSelectByMode()>();

        return $z0;
    }

    static java.util.Date access$502(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI, java.util.Date)
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Date r1;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter1: java.util.Date;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Date pivotDate> = r1;

        return r1;
    }

    static java.util.Date access$500(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;
        java.util.Date $r1;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.Date pivotDate>;

        return $r1;
    }

    static int access$602(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI, int)
    {
        int i0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter1: int;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxWidth> = i0;

        return i0;
    }

    static int access$702(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI, int)
    {
        int i0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter1: int;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxHeight> = i0;

        return i0;
    }

    static int access$802(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI, int)
    {
        int i0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter1: int;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullMonthBoxHeight> = i0;

        return i0;
    }

    static int access$902(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI, int)
    {
        int i0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter1: int;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarWidth> = i0;

        return i0;
    }

    static int access$600(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)
    {
        int $i0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxWidth>;

        return $i0;
    }

    static int access$912(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI, int)
    {
        int i0, $i1, $i2;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter1: int;

        $i1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarWidth>;

        $i2 = $i1 + i0;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarWidth> = $i2;

        return $i2;
    }

    static int access$1002(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI, int)
    {
        int i0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter1: int;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullCalendarWidth> = i0;

        return i0;
    }

    static int access$900(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)
    {
        int $i0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarWidth>;

        return $i0;
    }

    static int access$1102(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI, int)
    {
        int i0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter1: int;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarHeight> = i0;

        return i0;
    }

    static int access$700(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)
    {
        int $i0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullBoxHeight>;

        return $i0;
    }

    static int access$800(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)
    {
        int $i0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullMonthBoxHeight>;

        return $i0;
    }

    static int access$1202(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI, int)
    {
        int i0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        i0 := @parameter1: int;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int fullCalendarHeight> = i0;

        return i0;
    }

    static int access$1100(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)
    {
        int $i0;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int calendarHeight>;

        return $i0;
    }

    static void access$1300(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: void calculateMonthGridLayoutProperties()>();

        return;
    }

    static org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler access$1400(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)
    {
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler getHandler()>();

        return $r1;
    }

    static java.util.SortedSet access$1502(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI, java.util.SortedSet)
    {
        java.util.SortedSet r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        r1 := @parameter1: java.util.SortedSet;

        r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.SortedSet originalDateSpan> = r1;

        return r1;
    }

    static java.util.SortedSet access$1500(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)
    {
        java.util.SortedSet $r1;
        org.jdesktop.swingx.plaf.basic.BasicMonthViewUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicMonthViewUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.SortedSet originalDateSpan>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int LAST_WEEK_ROW> = 6;

        <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int FIRST_WEEK_ROW> = 1;

        <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int WEEKS_IN_MONTH> = 6;

        <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int DAY_HEADER_ROW> = 0;

        <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int LAST_DAY_COLUMN> = 7;

        <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int FIRST_DAY_COLUMN> = 1;

        <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int DAYS_IN_WEEK> = 7;

        <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int WEEK_HEADER_COLUMN> = 0;

        <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int MONTH_UP> = 2;

        <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int MONTH_DOWN> = 1;

        <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: int CALENDAR_SPACING> = 10;

        $r0 = class "Lorg/jdesktop/swingx/plaf/basic/BasicMonthViewUI;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.jdesktop.swingx.plaf.basic.BasicMonthViewUI: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
