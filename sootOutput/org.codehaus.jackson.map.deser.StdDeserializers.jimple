class org.codehaus.jackson.map.deser.StdDeserializers extends java.lang.Object
{
    final java.util.HashMap _deserializers;

    private void <init>()
    {
        java.lang.Float $r33;
        org.codehaus.jackson.map.deser.std.StdDeserializer$SqlDateDeserializer $r43;
        org.codehaus.jackson.map.deser.std.StringDeserializer $r3;
        org.codehaus.jackson.map.deser.std.AtomicBooleanDeserializer $r48;
        org.codehaus.jackson.map.deser.std.TimestampDeserializer $r44;
        java.lang.Integer $r27;
        java.lang.Character $r24;
        java.lang.Long $r30;
        org.codehaus.jackson.map.deser.std.StdDeserializer$StackTraceElementDeserializer $r47;
        java.lang.Short $r21;
        org.codehaus.jackson.map.deser.std.StdDeserializer$CharacterDeserializer $r8, $r22;
        org.codehaus.jackson.map.deser.std.StdDeserializer$IntegerDeserializer $r9, $r25;
        java.lang.Byte $r18;
        org.codehaus.jackson.map.deser.std.ClassDeserializer $r4;
        boolean $z0;
        org.codehaus.jackson.map.deser.std.StdDeserializer$NumberDeserializer $r37;
        org.codehaus.jackson.map.deser.std.TokenBufferDeserializer $r49;
        org.codehaus.jackson.map.deser.std.StdDeserializer$BigIntegerDeserializer $r39;
        org.codehaus.jackson.map.deser.std.DateDeserializer $r41;
        org.codehaus.jackson.map.deser.std.StdDeserializer$ShortDeserializer $r7, $r19;
        java.lang.Double $r36;
        org.codehaus.jackson.map.deser.std.JavaTypeDeserializer $r50;
        java.util.HashMap $r1;
        org.codehaus.jackson.map.deser.std.StdDeserializer$BigDecimalDeserializer $r38;
        java.lang.Iterable $r45;
        org.codehaus.jackson.map.deser.std.StdDeserializer$ByteDeserializer $r6, $r16;
        java.lang.Boolean $r14;
        org.codehaus.jackson.map.deser.std.StdDeserializer$DoubleDeserializer $r12, $r34;
        org.codehaus.jackson.map.deser.StdDeserializers r0;
        java.util.Iterator $r46;
        org.codehaus.jackson.map.deser.std.StdDeserializer$BooleanDeserializer $r5, $r13;
        org.codehaus.jackson.map.deser.std.StdDeserializer$FloatDeserializer $r11, $r31;
        org.codehaus.jackson.map.deser.std.StdDeserializer r52;
        org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer $r2;
        org.codehaus.jackson.map.deser.std.StdDeserializer$LongDeserializer $r10, $r28;
        org.codehaus.jackson.map.deser.std.CalendarDeserializer $r40, $r42;
        java.lang.Class $r15, $r17, $r20, $r23, $r26, $r29, $r32, $r35;
        java.lang.Object $r51;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.deser.StdDeserializers: java.util.HashMap _deserializers> = $r1;

        $r2 = new org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer;

        specialinvoke $r2.<org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r2);

        $r3 = new org.codehaus.jackson.map.deser.std.StringDeserializer;

        specialinvoke $r3.<org.codehaus.jackson.map.deser.std.StringDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer,java.lang.Class)>($r3, class "Ljava/lang/String;");

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer,java.lang.Class)>($r3, class "Ljava/lang/CharSequence;");

        $r4 = new org.codehaus.jackson.map.deser.std.ClassDeserializer;

        specialinvoke $r4.<org.codehaus.jackson.map.deser.std.ClassDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r4);

        $r5 = new org.codehaus.jackson.map.deser.std.StdDeserializer$BooleanDeserializer;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.std.StdDeserializer$BooleanDeserializer: void <init>(java.lang.Class,java.lang.Boolean)>(class "Ljava/lang/Boolean;", null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r5);

        $r6 = new org.codehaus.jackson.map.deser.std.StdDeserializer$ByteDeserializer;

        specialinvoke $r6.<org.codehaus.jackson.map.deser.std.StdDeserializer$ByteDeserializer: void <init>(java.lang.Class,java.lang.Byte)>(class "Ljava/lang/Byte;", null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r6);

        $r7 = new org.codehaus.jackson.map.deser.std.StdDeserializer$ShortDeserializer;

        specialinvoke $r7.<org.codehaus.jackson.map.deser.std.StdDeserializer$ShortDeserializer: void <init>(java.lang.Class,java.lang.Short)>(class "Ljava/lang/Short;", null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r7);

        $r8 = new org.codehaus.jackson.map.deser.std.StdDeserializer$CharacterDeserializer;

        specialinvoke $r8.<org.codehaus.jackson.map.deser.std.StdDeserializer$CharacterDeserializer: void <init>(java.lang.Class,java.lang.Character)>(class "Ljava/lang/Character;", null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r8);

        $r9 = new org.codehaus.jackson.map.deser.std.StdDeserializer$IntegerDeserializer;

        specialinvoke $r9.<org.codehaus.jackson.map.deser.std.StdDeserializer$IntegerDeserializer: void <init>(java.lang.Class,java.lang.Integer)>(class "Ljava/lang/Integer;", null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r9);

        $r10 = new org.codehaus.jackson.map.deser.std.StdDeserializer$LongDeserializer;

        specialinvoke $r10.<org.codehaus.jackson.map.deser.std.StdDeserializer$LongDeserializer: void <init>(java.lang.Class,java.lang.Long)>(class "Ljava/lang/Long;", null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r10);

        $r11 = new org.codehaus.jackson.map.deser.std.StdDeserializer$FloatDeserializer;

        specialinvoke $r11.<org.codehaus.jackson.map.deser.std.StdDeserializer$FloatDeserializer: void <init>(java.lang.Class,java.lang.Float)>(class "Ljava/lang/Float;", null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r11);

        $r12 = new org.codehaus.jackson.map.deser.std.StdDeserializer$DoubleDeserializer;

        specialinvoke $r12.<org.codehaus.jackson.map.deser.std.StdDeserializer$DoubleDeserializer: void <init>(java.lang.Class,java.lang.Double)>(class "Ljava/lang/Double;", null);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r12);

        $r13 = new org.codehaus.jackson.map.deser.std.StdDeserializer$BooleanDeserializer;

        $r15 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r14 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        specialinvoke $r13.<org.codehaus.jackson.map.deser.std.StdDeserializer$BooleanDeserializer: void <init>(java.lang.Class,java.lang.Boolean)>($r15, $r14);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r13);

        $r16 = new org.codehaus.jackson.map.deser.std.StdDeserializer$ByteDeserializer;

        $r17 = <java.lang.Byte: java.lang.Class TYPE>;

        $r18 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);

        specialinvoke $r16.<org.codehaus.jackson.map.deser.std.StdDeserializer$ByteDeserializer: void <init>(java.lang.Class,java.lang.Byte)>($r17, $r18);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r16);

        $r19 = new org.codehaus.jackson.map.deser.std.StdDeserializer$ShortDeserializer;

        $r20 = <java.lang.Short: java.lang.Class TYPE>;

        $r21 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(0);

        specialinvoke $r19.<org.codehaus.jackson.map.deser.std.StdDeserializer$ShortDeserializer: void <init>(java.lang.Class,java.lang.Short)>($r20, $r21);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r19);

        $r22 = new org.codehaus.jackson.map.deser.std.StdDeserializer$CharacterDeserializer;

        $r23 = <java.lang.Character: java.lang.Class TYPE>;

        $r24 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(0);

        specialinvoke $r22.<org.codehaus.jackson.map.deser.std.StdDeserializer$CharacterDeserializer: void <init>(java.lang.Class,java.lang.Character)>($r23, $r24);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r22);

        $r25 = new org.codehaus.jackson.map.deser.std.StdDeserializer$IntegerDeserializer;

        $r26 = <java.lang.Integer: java.lang.Class TYPE>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke $r25.<org.codehaus.jackson.map.deser.std.StdDeserializer$IntegerDeserializer: void <init>(java.lang.Class,java.lang.Integer)>($r26, $r27);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r25);

        $r28 = new org.codehaus.jackson.map.deser.std.StdDeserializer$LongDeserializer;

        $r29 = <java.lang.Long: java.lang.Class TYPE>;

        $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        specialinvoke $r28.<org.codehaus.jackson.map.deser.std.StdDeserializer$LongDeserializer: void <init>(java.lang.Class,java.lang.Long)>($r29, $r30);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r28);

        $r31 = new org.codehaus.jackson.map.deser.std.StdDeserializer$FloatDeserializer;

        $r32 = <java.lang.Float: java.lang.Class TYPE>;

        $r33 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        specialinvoke $r31.<org.codehaus.jackson.map.deser.std.StdDeserializer$FloatDeserializer: void <init>(java.lang.Class,java.lang.Float)>($r32, $r33);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r31);

        $r34 = new org.codehaus.jackson.map.deser.std.StdDeserializer$DoubleDeserializer;

        $r35 = <java.lang.Double: java.lang.Class TYPE>;

        $r36 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        specialinvoke $r34.<org.codehaus.jackson.map.deser.std.StdDeserializer$DoubleDeserializer: void <init>(java.lang.Class,java.lang.Double)>($r35, $r36);

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r34);

        $r37 = new org.codehaus.jackson.map.deser.std.StdDeserializer$NumberDeserializer;

        specialinvoke $r37.<org.codehaus.jackson.map.deser.std.StdDeserializer$NumberDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r37);

        $r38 = new org.codehaus.jackson.map.deser.std.StdDeserializer$BigDecimalDeserializer;

        specialinvoke $r38.<org.codehaus.jackson.map.deser.std.StdDeserializer$BigDecimalDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r38);

        $r39 = new org.codehaus.jackson.map.deser.std.StdDeserializer$BigIntegerDeserializer;

        specialinvoke $r39.<org.codehaus.jackson.map.deser.std.StdDeserializer$BigIntegerDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r39);

        $r40 = new org.codehaus.jackson.map.deser.std.CalendarDeserializer;

        specialinvoke $r40.<org.codehaus.jackson.map.deser.std.CalendarDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r40);

        $r41 = new org.codehaus.jackson.map.deser.std.DateDeserializer;

        specialinvoke $r41.<org.codehaus.jackson.map.deser.std.DateDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r41);

        $r42 = new org.codehaus.jackson.map.deser.std.CalendarDeserializer;

        specialinvoke $r42.<org.codehaus.jackson.map.deser.std.CalendarDeserializer: void <init>(java.lang.Class)>(class "Ljava/util/GregorianCalendar;");

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer,java.lang.Class)>($r42, class "Ljava/util/GregorianCalendar;");

        $r43 = new org.codehaus.jackson.map.deser.std.StdDeserializer$SqlDateDeserializer;

        specialinvoke $r43.<org.codehaus.jackson.map.deser.std.StdDeserializer$SqlDateDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r43);

        $r44 = new org.codehaus.jackson.map.deser.std.TimestampDeserializer;

        specialinvoke $r44.<org.codehaus.jackson.map.deser.std.TimestampDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r44);

        $r45 = staticinvoke <org.codehaus.jackson.map.deser.std.FromStringDeserializer: java.lang.Iterable all()>();

        $r46 = interfaceinvoke $r45.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r46.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r51 = interfaceinvoke $r46.<java.util.Iterator: java.lang.Object next()>();

        r52 = (org.codehaus.jackson.map.deser.std.StdDeserializer) $r51;

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>(r52);

        goto label1;

     label2:
        $r47 = new org.codehaus.jackson.map.deser.std.StdDeserializer$StackTraceElementDeserializer;

        specialinvoke $r47.<org.codehaus.jackson.map.deser.std.StdDeserializer$StackTraceElementDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r47);

        $r48 = new org.codehaus.jackson.map.deser.std.AtomicBooleanDeserializer;

        specialinvoke $r48.<org.codehaus.jackson.map.deser.std.AtomicBooleanDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r48);

        $r49 = new org.codehaus.jackson.map.deser.std.TokenBufferDeserializer;

        specialinvoke $r49.<org.codehaus.jackson.map.deser.std.TokenBufferDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r49);

        $r50 = new org.codehaus.jackson.map.deser.std.JavaTypeDeserializer;

        specialinvoke $r50.<org.codehaus.jackson.map.deser.std.JavaTypeDeserializer: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer)>($r50);

        return;
    }

    public static java.util.HashMap constructAll()
    {
        org.codehaus.jackson.map.deser.StdDeserializers $r0;
        java.util.HashMap $r1;

        $r0 = new org.codehaus.jackson.map.deser.StdDeserializers;

        specialinvoke $r0.<org.codehaus.jackson.map.deser.StdDeserializers: void <init>()>();

        $r1 = $r0.<org.codehaus.jackson.map.deser.StdDeserializers: java.util.HashMap _deserializers>;

        return $r1;
    }

    private void add(org.codehaus.jackson.map.deser.std.StdDeserializer)
    {
        org.codehaus.jackson.map.deser.StdDeserializers r0;
        java.lang.Class $r2;
        org.codehaus.jackson.map.deser.std.StdDeserializer r1;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializers;

        r1 := @parameter0: org.codehaus.jackson.map.deser.std.StdDeserializer;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.deser.std.StdDeserializer: java.lang.Class getValueClass()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.std.StdDeserializer,java.lang.Class)>(r1, $r2);

        return;
    }

    private void add(org.codehaus.jackson.map.deser.std.StdDeserializer, java.lang.Class)
    {
        org.codehaus.jackson.map.deser.StdDeserializers r1;
        org.codehaus.jackson.map.deser.std.StdDeserializer r0;
        java.lang.Class r3;
        java.util.HashMap $r4;
        org.codehaus.jackson.map.type.ClassKey $r2;

        r1 := @this: org.codehaus.jackson.map.deser.StdDeserializers;

        r0 := @parameter0: org.codehaus.jackson.map.deser.std.StdDeserializer;

        r3 := @parameter1: java.lang.Class;

        $r4 = r1.<org.codehaus.jackson.map.deser.StdDeserializers: java.util.HashMap _deserializers>;

        $r2 = new org.codehaus.jackson.map.type.ClassKey;

        specialinvoke $r2.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>(r3);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r0);

        return;
    }
}
