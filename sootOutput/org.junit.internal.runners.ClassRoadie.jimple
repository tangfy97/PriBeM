public class org.junit.internal.runners.ClassRoadie extends java.lang.Object
{
    private org.junit.runner.notification.RunNotifier fNotifier;
    private org.junit.internal.runners.TestClass fTestClass;
    private org.junit.runner.Description fDescription;
    private final java.lang.Runnable fRunnable;

    public void <init>(org.junit.runner.notification.RunNotifier, org.junit.internal.runners.TestClass, org.junit.runner.Description, java.lang.Runnable)
    {
        org.junit.internal.runners.ClassRoadie r0;
        org.junit.internal.runners.TestClass r2;
        org.junit.runner.Description r3;
        org.junit.runner.notification.RunNotifier r1;
        java.lang.Runnable r4;

        r0 := @this: org.junit.internal.runners.ClassRoadie;

        r1 := @parameter0: org.junit.runner.notification.RunNotifier;

        r2 := @parameter1: org.junit.internal.runners.TestClass;

        r3 := @parameter2: org.junit.runner.Description;

        r4 := @parameter3: java.lang.Runnable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.junit.internal.runners.ClassRoadie: org.junit.runner.notification.RunNotifier fNotifier> = r1;

        r0.<org.junit.internal.runners.ClassRoadie: org.junit.internal.runners.TestClass fTestClass> = r2;

        r0.<org.junit.internal.runners.ClassRoadie: org.junit.runner.Description fDescription> = r3;

        r0.<org.junit.internal.runners.ClassRoadie: java.lang.Runnable fRunnable> = r4;

        return;
    }

    protected void runUnprotected()
    {
        org.junit.internal.runners.ClassRoadie r0;
        java.lang.Runnable $r1;

        r0 := @this: org.junit.internal.runners.ClassRoadie;

        $r1 = r0.<org.junit.internal.runners.ClassRoadie: java.lang.Runnable fRunnable>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        return;
    }

    protected void addFailure(java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.junit.internal.runners.ClassRoadie r0;
        org.junit.runner.Description $r3;
        org.junit.runner.notification.RunNotifier $r4;
        org.junit.runner.notification.Failure $r1;

        r0 := @this: org.junit.internal.runners.ClassRoadie;

        r2 := @parameter0: java.lang.Throwable;

        $r4 = r0.<org.junit.internal.runners.ClassRoadie: org.junit.runner.notification.RunNotifier fNotifier>;

        $r1 = new org.junit.runner.notification.Failure;

        $r3 = r0.<org.junit.internal.runners.ClassRoadie: org.junit.runner.Description fDescription>;

        specialinvoke $r1.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>($r3, r2);

        virtualinvoke $r4.<org.junit.runner.notification.RunNotifier: void fireTestFailure(org.junit.runner.notification.Failure)>($r1);

        return;
    }

    public void runProtected()
    {
        java.lang.Throwable $r1;
        org.junit.internal.runners.ClassRoadie r0;
        org.junit.internal.runners.FailedBefore $r2;

        r0 := @this: org.junit.internal.runners.ClassRoadie;

     label1:
        specialinvoke r0.<org.junit.internal.runners.ClassRoadie: void runBefores()>();

        virtualinvoke r0.<org.junit.internal.runners.ClassRoadie: void runUnprotected()>();

     label2:
        specialinvoke r0.<org.junit.internal.runners.ClassRoadie: void runAfters()>();

        goto label7;

     label3:
        $r2 := @caughtexception;

     label4:
        specialinvoke r0.<org.junit.internal.runners.ClassRoadie: void runAfters()>();

        goto label7;

     label5:
        $r1 := @caughtexception;

     label6:
        specialinvoke r0.<org.junit.internal.runners.ClassRoadie: void runAfters()>();

        throw $r1;

     label7:
        return;

        catch org.junit.internal.runners.FailedBefore from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void runBefores() throws org.junit.internal.runners.FailedBefore
    {
        java.lang.Throwable $r7, $r12;
        org.junit.internal.runners.ClassRoadie r0;
        java.lang.Object[] $r6;
        java.util.Iterator $r3;
        org.junit.internal.runners.TestClass $r1;
        org.junit.internal.AssumptionViolatedException $r9;
        java.lang.reflect.InvocationTargetException $r11;
        java.util.List $r2;
        java.lang.Object $r4;
        org.junit.internal.runners.FailedBefore $r8, $r10;
        java.lang.reflect.Method r5;
        boolean $z0;

        r0 := @this: org.junit.internal.runners.ClassRoadie;

     label1:
        $r1 = r0.<org.junit.internal.runners.ClassRoadie: org.junit.internal.runners.TestClass fTestClass>;

        $r2 = virtualinvoke $r1.<org.junit.internal.runners.TestClass: java.util.List getBefores()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.reflect.Method) $r4;

        $r6 = newarray (java.lang.Object)[0];

        virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r6);

        goto label2;

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        $r12 = virtualinvoke $r11.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        throw $r12;

     label5:
        goto label8;

     label6:
        $r9 := @caughtexception;

        $r10 = new org.junit.internal.runners.FailedBefore;

        specialinvoke $r10.<org.junit.internal.runners.FailedBefore: void <init>()>();

        throw $r10;

     label7:
        $r7 := @caughtexception;

        virtualinvoke r0.<org.junit.internal.runners.ClassRoadie: void addFailure(java.lang.Throwable)>($r7);

        $r8 = new org.junit.internal.runners.FailedBefore;

        specialinvoke $r8.<org.junit.internal.runners.FailedBefore: void <init>()>();

        throw $r8;

     label8:
        return;

        catch java.lang.reflect.InvocationTargetException from label1 to label3 with label4;
        catch org.junit.internal.AssumptionViolatedException from label1 to label5 with label6;
        catch java.lang.Throwable from label1 to label5 with label7;
    }

    private void runAfters()
    {
        java.lang.Throwable $r7, $r9;
        org.junit.internal.runners.ClassRoadie r0;
        java.lang.Object[] $r6;
        java.util.Iterator $r3;
        org.junit.internal.runners.TestClass $r1;
        java.lang.reflect.InvocationTargetException $r8;
        java.util.List $r2;
        java.lang.Object $r4;
        java.lang.reflect.Method r5;
        boolean $z0;

        r0 := @this: org.junit.internal.runners.ClassRoadie;

        $r1 = r0.<org.junit.internal.runners.ClassRoadie: org.junit.internal.runners.TestClass fTestClass>;

        $r2 = virtualinvoke $r1.<org.junit.internal.runners.TestClass: java.util.List getAfters()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.reflect.Method) $r4;

     label2:
        $r6 = newarray (java.lang.Object)[0];

        virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r6);

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        virtualinvoke r0.<org.junit.internal.runners.ClassRoadie: void addFailure(java.lang.Throwable)>($r9);

        goto label6;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r0.<org.junit.internal.runners.ClassRoadie: void addFailure(java.lang.Throwable)>($r7);

     label6:
        goto label1;

     label7:
        return;

        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label5;
    }
}
