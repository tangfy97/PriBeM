public class org.waveprotocol.wave.model.id.LegacyIdSerialiser extends java.lang.Object implements org.waveprotocol.wave.model.id.IdSerialiser
{
    public static final org.waveprotocol.wave.model.id.LegacyIdSerialiser INSTANCE;
    public static final char PART_SEPARATOR;

    public java.lang.String serialiseWaveId(org.waveprotocol.wave.model.id.WaveId)
    {
        org.waveprotocol.wave.model.id.WaveId r1;
        org.waveprotocol.wave.model.id.LegacyIdSerialiser r8;
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7;

        r8 := @this: org.waveprotocol.wave.model.id.LegacyIdSerialiser;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.waveprotocol.wave.model.id.WaveId: java.lang.String getDomain()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(33);

        $r5 = virtualinvoke r1.<org.waveprotocol.wave.model.id.WaveId: java.lang.String getId()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String serialiseWaveletId(org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.id.LegacyIdSerialiser r8;
        org.waveprotocol.wave.model.id.WaveletId r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7;

        r8 := @this: org.waveprotocol.wave.model.id.LegacyIdSerialiser;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.waveprotocol.wave.model.id.WaveletId: java.lang.String getDomain()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(33);

        $r5 = virtualinvoke r1.<org.waveprotocol.wave.model.id.WaveletId: java.lang.String getId()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String serialiseWaveletName(org.waveprotocol.wave.model.id.WaveletName)
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.id.WaveletName r2;
        org.waveprotocol.wave.model.id.LegacyIdSerialiser r1;

        r1 := @this: org.waveprotocol.wave.model.id.LegacyIdSerialiser;

        r2 := @parameter0: org.waveprotocol.wave.model.id.WaveletName;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("No legacy serialization for wavelet names");

        throw $r0;
    }

    public org.waveprotocol.wave.model.id.WaveId deserialiseWaveId(java.lang.String) throws org.waveprotocol.wave.model.id.InvalidIdException
    {
        java.lang.String[] $r2;
        int $i0;
        java.lang.String r0, $r3, $r4, $r5, $r6, $r10;
        boolean $z0, $z1;
        org.waveprotocol.wave.model.id.WaveId $r7;
        org.waveprotocol.wave.model.id.InvalidIdException $r9, $r12;
        org.waveprotocol.wave.model.id.LegacyIdSerialiser r11;
        java.lang.IllegalArgumentException $r8;
        org.waveprotocol.wave.model.id.SimplePrefixEscaper $r1;

        r11 := @this: org.waveprotocol.wave.model.id.LegacyIdSerialiser;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.waveprotocol.wave.model.id.SimplePrefixEscaper: org.waveprotocol.wave.model.id.SimplePrefixEscaper DEFAULT_ESCAPER>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.id.SimplePrefixEscaper: java.lang.String[] splitWithoutUnescaping(char,java.lang.String)>(33, r0);

        $i0 = lengthof $r2;

        if $i0 != 2 goto label1;

        $r3 = $r2[0];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r4 = $r2[1];

        $z1 = virtualinvoke $r4.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        $r12 = new org.waveprotocol.wave.model.id.InvalidIdException;

        specialinvoke $r12.<org.waveprotocol.wave.model.id.InvalidIdException: void <init>(java.lang.String,java.lang.String)>(r0, "Wave id must be of the form <domain>!<id>");

        throw $r12;

     label2:
        $r6 = $r2[0];

        $r5 = $r2[1];

        $r7 = staticinvoke <org.waveprotocol.wave.model.id.WaveId: org.waveprotocol.wave.model.id.WaveId ofLegacy(java.lang.String,java.lang.String)>($r6, $r5);

     label3:
        return $r7;

     label4:
        $r8 := @caughtexception;

        $r9 = new org.waveprotocol.wave.model.id.InvalidIdException;

        $r10 = virtualinvoke $r8.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r9.<org.waveprotocol.wave.model.id.InvalidIdException: void <init>(java.lang.String,java.lang.String)>(r0, $r10);

        throw $r9;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    public org.waveprotocol.wave.model.id.WaveletId deserialiseWaveletId(java.lang.String) throws org.waveprotocol.wave.model.id.InvalidIdException
    {
        java.lang.String[] $r2;
        org.waveprotocol.wave.model.id.WaveletId $r7;
        int $i0;
        java.lang.String r0, $r3, $r4, $r5, $r6, $r10;
        boolean $z0, $z1;
        org.waveprotocol.wave.model.id.InvalidIdException $r9, $r12;
        org.waveprotocol.wave.model.id.LegacyIdSerialiser r11;
        java.lang.IllegalArgumentException $r8;
        org.waveprotocol.wave.model.id.SimplePrefixEscaper $r1;

        r11 := @this: org.waveprotocol.wave.model.id.LegacyIdSerialiser;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.waveprotocol.wave.model.id.SimplePrefixEscaper: org.waveprotocol.wave.model.id.SimplePrefixEscaper DEFAULT_ESCAPER>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.id.SimplePrefixEscaper: java.lang.String[] splitWithoutUnescaping(char,java.lang.String)>(33, r0);

        $i0 = lengthof $r2;

        if $i0 != 2 goto label1;

        $r3 = $r2[0];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r4 = $r2[1];

        $z1 = virtualinvoke $r4.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        $r12 = new org.waveprotocol.wave.model.id.InvalidIdException;

        specialinvoke $r12.<org.waveprotocol.wave.model.id.InvalidIdException: void <init>(java.lang.String,java.lang.String)>(r0, "Wavelet id must be of the form <domain>!<id>");

        throw $r12;

     label2:
        $r6 = $r2[0];

        $r5 = $r2[1];

        $r7 = staticinvoke <org.waveprotocol.wave.model.id.WaveletId: org.waveprotocol.wave.model.id.WaveletId ofLegacy(java.lang.String,java.lang.String)>($r6, $r5);

     label3:
        return $r7;

     label4:
        $r8 := @caughtexception;

        $r9 = new org.waveprotocol.wave.model.id.InvalidIdException;

        $r10 = virtualinvoke $r8.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r9.<org.waveprotocol.wave.model.id.InvalidIdException: void <init>(java.lang.String,java.lang.String)>(r0, $r10);

        throw $r9;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    public org.waveprotocol.wave.model.id.WaveletName deserialiseWaveletName(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.String r2;
        org.waveprotocol.wave.model.id.LegacyIdSerialiser r1;

        r1 := @this: org.waveprotocol.wave.model.id.LegacyIdSerialiser;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("No legacy serialization for wavelet names");

        throw $r0;
    }

    private void <init>()
    {
        org.waveprotocol.wave.model.id.LegacyIdSerialiser r0;

        r0 := @this: org.waveprotocol.wave.model.id.LegacyIdSerialiser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.id.LegacyIdSerialiser $r0;

        <org.waveprotocol.wave.model.id.LegacyIdSerialiser: char PART_SEPARATOR> = 33;

        $r0 = new org.waveprotocol.wave.model.id.LegacyIdSerialiser;

        specialinvoke $r0.<org.waveprotocol.wave.model.id.LegacyIdSerialiser: void <init>()>();

        <org.waveprotocol.wave.model.id.LegacyIdSerialiser: org.waveprotocol.wave.model.id.LegacyIdSerialiser INSTANCE> = $r0;

        return;
    }
}
