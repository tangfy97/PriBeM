public class org.fife.ui.rsyntaxtextarea.folding.FoldParserManager extends java.lang.Object implements org.fife.ui.rsyntaxtextarea.SyntaxConstants
{
    private java.util.Map foldParserMap;
    private static final org.fife.ui.rsyntaxtextarea.folding.FoldParserManager INSTANCE;

    private void <init>()
    {
        org.fife.ui.rsyntaxtextarea.folding.FoldParserManager r0;
        java.util.Map $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldParserManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = specialinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.FoldParserManager: java.util.Map createFoldParserMap()>();

        r0.<org.fife.ui.rsyntaxtextarea.folding.FoldParserManager: java.util.Map foldParserMap> = $r1;

        return;
    }

    public void addFoldParserMapping(java.lang.String, org.fife.ui.rsyntaxtextarea.folding.FoldParser)
    {
        java.util.Map $r3;
        org.fife.ui.rsyntaxtextarea.folding.FoldParser r2;
        java.lang.String r1;
        org.fife.ui.rsyntaxtextarea.folding.FoldParserManager r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldParserManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.fife.ui.rsyntaxtextarea.folding.FoldParser;

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldParserManager: java.util.Map foldParserMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    private java.util.Map createFoldParserMap()
    {
        org.fife.ui.rsyntaxtextarea.folding.JsonFoldParser $r31;
        java.util.HashMap $r21;
        org.fife.ui.rsyntaxtextarea.folding.FoldParserManager r20;
        org.fife.ui.rsyntaxtextarea.folding.LispFoldParser $r25, $r34;
        org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser $r28, $r32, $r38;
        org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser $r35, $r40;
        int $i1;
        org.fife.ui.rsyntaxtextarea.folding.LatexFoldParser $r33;
        org.fife.ui.rsyntaxtextarea.folding.NsisFoldParser $r36;
        org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser $r22, $r23, $r24, $r26, $r27, $r29, $r30, $r37, $r39;

        r20 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldParserManager;

        $r21 = new java.util.HashMap;

        specialinvoke $r21.<java.util.HashMap: void <init>()>();

        $r22 = new org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser;

        specialinvoke $r22.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: void <init>()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/c", $r22);

        $r23 = new org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser;

        specialinvoke $r23.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: void <init>()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/cpp", $r23);

        $r24 = new org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser;

        specialinvoke $r24.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: void <init>()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/cs", $r24);

        $r25 = new org.fife.ui.rsyntaxtextarea.folding.LispFoldParser;

        specialinvoke $r25.<org.fife.ui.rsyntaxtextarea.folding.LispFoldParser: void <init>()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/clojure", $r25);

        $r26 = new org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser;

        specialinvoke $r26.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: void <init>()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/css", $r26);

        $r27 = new org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser;

        specialinvoke $r27.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: void <init>()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/groovy", $r27);

        $r28 = new org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser;

        $i1 = (int) -1;

        specialinvoke $r28.<org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: void <init>(int)>($i1);

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/html", $r28);

        $r29 = new org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser;

        specialinvoke $r29.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: void <init>(boolean,boolean)>(1, 1);

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/java", $r29);

        $r30 = new org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser;

        specialinvoke $r30.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: void <init>()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/javascript", $r30);

        $r31 = new org.fife.ui.rsyntaxtextarea.folding.JsonFoldParser;

        specialinvoke $r31.<org.fife.ui.rsyntaxtextarea.folding.JsonFoldParser: void <init>()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/json", $r31);

        $r32 = new org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser;

        specialinvoke $r32.<org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: void <init>(int)>(1);

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/jsp", $r32);

        $r33 = new org.fife.ui.rsyntaxtextarea.folding.LatexFoldParser;

        specialinvoke $r33.<org.fife.ui.rsyntaxtextarea.folding.LatexFoldParser: void <init>()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/latex", $r33);

        $r34 = new org.fife.ui.rsyntaxtextarea.folding.LispFoldParser;

        specialinvoke $r34.<org.fife.ui.rsyntaxtextarea.folding.LispFoldParser: void <init>()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/lisp", $r34);

        $r35 = new org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser;

        specialinvoke $r35.<org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser: void <init>()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/mxml", $r35);

        $r36 = new org.fife.ui.rsyntaxtextarea.folding.NsisFoldParser;

        specialinvoke $r36.<org.fife.ui.rsyntaxtextarea.folding.NsisFoldParser: void <init>()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/nsis", $r36);

        $r37 = new org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser;

        specialinvoke $r37.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: void <init>()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/perl", $r37);

        $r38 = new org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser;

        specialinvoke $r38.<org.fife.ui.rsyntaxtextarea.folding.HtmlFoldParser: void <init>(int)>(0);

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/php", $r38);

        $r39 = new org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser;

        specialinvoke $r39.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: void <init>()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/scala", $r39);

        $r40 = new org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser;

        specialinvoke $r40.<org.fife.ui.rsyntaxtextarea.folding.XmlFoldParser: void <init>()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text/xml", $r40);

        return $r21;
    }

    public static org.fife.ui.rsyntaxtextarea.folding.FoldParserManager get()
    {
        org.fife.ui.rsyntaxtextarea.folding.FoldParserManager $r0;

        $r0 = <org.fife.ui.rsyntaxtextarea.folding.FoldParserManager: org.fife.ui.rsyntaxtextarea.folding.FoldParserManager INSTANCE>;

        return $r0;
    }

    public org.fife.ui.rsyntaxtextarea.folding.FoldParser getFoldParser(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        org.fife.ui.rsyntaxtextarea.folding.FoldParser $r4;
        java.lang.String r1;
        org.fife.ui.rsyntaxtextarea.folding.FoldParserManager r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.FoldParserManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.folding.FoldParserManager: java.util.Map foldParserMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.fife.ui.rsyntaxtextarea.folding.FoldParser) $r3;

        return $r4;
    }

    static void <clinit>()
    {
        org.fife.ui.rsyntaxtextarea.folding.FoldParserManager $r0;

        $r0 = new org.fife.ui.rsyntaxtextarea.folding.FoldParserManager;

        specialinvoke $r0.<org.fife.ui.rsyntaxtextarea.folding.FoldParserManager: void <init>()>();

        <org.fife.ui.rsyntaxtextarea.folding.FoldParserManager: org.fife.ui.rsyntaxtextarea.folding.FoldParserManager INSTANCE> = $r0;

        return;
    }
}
