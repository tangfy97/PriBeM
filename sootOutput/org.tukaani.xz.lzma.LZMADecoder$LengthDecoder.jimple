class org.tukaani.xz.lzma.LZMADecoder$LengthDecoder extends org.tukaani.xz.lzma.LZMACoder$LengthCoder
{
    private final org.tukaani.xz.lzma.LZMADecoder this$0;

    private void <init>(org.tukaani.xz.lzma.LZMADecoder)
    {
        org.tukaani.xz.lzma.LZMADecoder r1;
        org.tukaani.xz.lzma.LZMADecoder$LengthDecoder r0;

        r0 := @this: org.tukaani.xz.lzma.LZMADecoder$LengthDecoder;

        r1 := @parameter0: org.tukaani.xz.lzma.LZMADecoder;

        r0.<org.tukaani.xz.lzma.LZMADecoder$LengthDecoder: org.tukaani.xz.lzma.LZMADecoder this$0> = r1;

        specialinvoke r0.<org.tukaani.xz.lzma.LZMACoder$LengthCoder: void <init>(org.tukaani.xz.lzma.LZMACoder)>(r1);

        return;
    }

    int decode(int) throws java.io.IOException
    {
        short[][] $r12, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11;
        org.tukaani.xz.lzma.LZMADecoder $r1, $r4, $r7, $r10, $r14;
        org.tukaani.xz.lzma.LZMADecoder$LengthDecoder r0;
        short[] $r3, $r6, $r9, $r13, $r17;
        org.tukaani.xz.rangecoder.RangeDecoder $r2, $r5, $r8, $r11, $r15;

        r0 := @this: org.tukaani.xz.lzma.LZMADecoder$LengthDecoder;

        i6 := @parameter0: int;

        $r1 = r0.<org.tukaani.xz.lzma.LZMADecoder$LengthDecoder: org.tukaani.xz.lzma.LZMADecoder this$0>;

        $r2 = staticinvoke <org.tukaani.xz.lzma.LZMADecoder: org.tukaani.xz.rangecoder.RangeDecoder access$400(org.tukaani.xz.lzma.LZMADecoder)>($r1);

        $r3 = r0.<org.tukaani.xz.lzma.LZMADecoder$LengthDecoder: short[] choice>;

        $i0 = virtualinvoke $r2.<org.tukaani.xz.rangecoder.RangeDecoder: int decodeBit(short[],int)>($r3, 0);

        if $i0 != 0 goto label1;

        $r14 = r0.<org.tukaani.xz.lzma.LZMADecoder$LengthDecoder: org.tukaani.xz.lzma.LZMADecoder this$0>;

        $r15 = staticinvoke <org.tukaani.xz.lzma.LZMADecoder: org.tukaani.xz.rangecoder.RangeDecoder access$400(org.tukaani.xz.lzma.LZMADecoder)>($r14);

        $r16 = r0.<org.tukaani.xz.lzma.LZMADecoder$LengthDecoder: short[][] low>;

        $r17 = $r16[i6];

        $i10 = virtualinvoke $r15.<org.tukaani.xz.rangecoder.RangeDecoder: int decodeBitTree(short[])>($r17);

        $i11 = $i10 + 2;

        return $i11;

     label1:
        $r4 = r0.<org.tukaani.xz.lzma.LZMADecoder$LengthDecoder: org.tukaani.xz.lzma.LZMADecoder this$0>;

        $r5 = staticinvoke <org.tukaani.xz.lzma.LZMADecoder: org.tukaani.xz.rangecoder.RangeDecoder access$400(org.tukaani.xz.lzma.LZMADecoder)>($r4);

        $r6 = r0.<org.tukaani.xz.lzma.LZMADecoder$LengthDecoder: short[] choice>;

        $i1 = virtualinvoke $r5.<org.tukaani.xz.rangecoder.RangeDecoder: int decodeBit(short[],int)>($r6, 1);

        if $i1 != 0 goto label2;

        $r10 = r0.<org.tukaani.xz.lzma.LZMADecoder$LengthDecoder: org.tukaani.xz.lzma.LZMADecoder this$0>;

        $r11 = staticinvoke <org.tukaani.xz.lzma.LZMADecoder: org.tukaani.xz.rangecoder.RangeDecoder access$400(org.tukaani.xz.lzma.LZMADecoder)>($r10);

        $r12 = r0.<org.tukaani.xz.lzma.LZMADecoder$LengthDecoder: short[][] mid>;

        $r13 = $r12[i6];

        $i7 = virtualinvoke $r11.<org.tukaani.xz.rangecoder.RangeDecoder: int decodeBitTree(short[])>($r13);

        $i8 = $i7 + 2;

        $i9 = $i8 + 8;

        return $i9;

     label2:
        $r7 = r0.<org.tukaani.xz.lzma.LZMADecoder$LengthDecoder: org.tukaani.xz.lzma.LZMADecoder this$0>;

        $r8 = staticinvoke <org.tukaani.xz.lzma.LZMADecoder: org.tukaani.xz.rangecoder.RangeDecoder access$400(org.tukaani.xz.lzma.LZMADecoder)>($r7);

        $r9 = r0.<org.tukaani.xz.lzma.LZMADecoder$LengthDecoder: short[] high>;

        $i2 = virtualinvoke $r8.<org.tukaani.xz.rangecoder.RangeDecoder: int decodeBitTree(short[])>($r9);

        $i3 = $i2 + 2;

        $i4 = $i3 + 8;

        $i5 = $i4 + 8;

        return $i5;
    }

    void <init>(org.tukaani.xz.lzma.LZMADecoder, org.tukaani.xz.lzma.LZMADecoder$1)
    {
        org.tukaani.xz.lzma.LZMADecoder r1;
        org.tukaani.xz.lzma.LZMADecoder$1 r2;
        org.tukaani.xz.lzma.LZMADecoder$LengthDecoder r0;

        r0 := @this: org.tukaani.xz.lzma.LZMADecoder$LengthDecoder;

        r1 := @parameter0: org.tukaani.xz.lzma.LZMADecoder;

        r2 := @parameter1: org.tukaani.xz.lzma.LZMADecoder$1;

        specialinvoke r0.<org.tukaani.xz.lzma.LZMADecoder$LengthDecoder: void <init>(org.tukaani.xz.lzma.LZMADecoder)>(r1);

        return;
    }
}
