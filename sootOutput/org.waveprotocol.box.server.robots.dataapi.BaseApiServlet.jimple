public abstract class org.waveprotocol.box.server.robots.dataapi.BaseApiServlet extends javax.servlet.http.HttpServlet
{
    private static final org.waveprotocol.wave.util.logging.Log LOG;
    private static final org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener LOGGING_REQUEST_LISTENER;
    private static final java.lang.String JSON_CONTENT_TYPE;
    private final com.google.wave.api.RobotSerializer robotSerializer;
    private final com.google.wave.api.data.converter.EventDataConverterManager converterManager;
    private final org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider;
    private final org.waveprotocol.box.server.robots.OperationServiceRegistry operationRegistry;
    private final org.waveprotocol.box.server.robots.util.ConversationUtil conversationUtil;
    private final net.oauth.OAuthValidator validator;
    private java.util.List operations;

    public void <init>(com.google.wave.api.RobotSerializer, com.google.wave.api.data.converter.EventDataConverterManager, org.waveprotocol.box.server.waveserver.WaveletProvider, org.waveprotocol.box.server.robots.OperationServiceRegistry, org.waveprotocol.box.server.robots.util.ConversationUtil, net.oauth.OAuthValidator)
    {
        com.google.wave.api.data.converter.EventDataConverterManager r2;
        org.waveprotocol.box.server.robots.util.ConversationUtil r4;
        org.waveprotocol.box.server.waveserver.WaveletProvider r3;
        com.google.wave.api.RobotSerializer r1;
        org.waveprotocol.box.server.robots.dataapi.BaseApiServlet r0;
        net.oauth.OAuthValidator r6;
        org.waveprotocol.box.server.robots.OperationServiceRegistry r5;

        r0 := @this: org.waveprotocol.box.server.robots.dataapi.BaseApiServlet;

        r1 := @parameter0: com.google.wave.api.RobotSerializer;

        r2 := @parameter1: com.google.wave.api.data.converter.EventDataConverterManager;

        r3 := @parameter2: org.waveprotocol.box.server.waveserver.WaveletProvider;

        r5 := @parameter3: org.waveprotocol.box.server.robots.OperationServiceRegistry;

        r4 := @parameter4: org.waveprotocol.box.server.robots.util.ConversationUtil;

        r6 := @parameter5: net.oauth.OAuthValidator;

        specialinvoke r0.<javax.servlet.http.HttpServlet: void <init>()>();

        r0.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: com.google.wave.api.RobotSerializer robotSerializer> = r1;

        r0.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: com.google.wave.api.data.converter.EventDataConverterManager converterManager> = r2;

        r0.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider> = r3;

        r0.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.box.server.robots.util.ConversationUtil conversationUtil> = r4;

        r0.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.box.server.robots.OperationServiceRegistry operationRegistry> = r5;

        r0.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: net.oauth.OAuthValidator validator> = r6;

        return;
    }

    protected final void processOpsRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, net.oauth.OAuthMessage, net.oauth.OAuthAccessor, org.waveprotocol.wave.model.wave.ParticipantId) throws java.io.IOException
    {
        com.google.wave.api.data.converter.EventDataConverterManager $r17;
        org.waveprotocol.box.server.waveserver.WaveletProvider $r18;
        java.net.URISyntaxException $r36;
        org.waveprotocol.box.server.robots.dataapi.BaseApiServlet r0;
        org.waveprotocol.wave.model.wave.ParticipantId r21;
        com.google.wave.api.RobotSerializer $r12;
        org.waveprotocol.wave.util.logging.Log $r8, $r26, $r35, $r37, $r39;
        java.util.List $r13, $r14, $r22;
        com.google.wave.api.ProtocolVersion $r15;
        java.lang.StringBuilder $r7, $r9, $r10, $r25, $r27, $r28, $r30, $r31, $r32;
        javax.servlet.http.HttpServletRequest r4;
        com.google.wave.api.data.converter.EventDataConverter $r19;
        java.lang.String $r6, $r11, $r29, $r33;
        com.google.wave.api.InvalidRequestException $r24;
        net.oauth.OAuthException $r38;
        org.waveprotocol.box.server.robots.util.ConversationUtil $r20;
        org.waveprotocol.box.server.robots.OperationContextImpl $r16;
        javax.servlet.http.HttpServletResponse r23;
        net.oauth.OAuthValidator $r3;
        java.io.IOException $r34;
        net.oauth.OAuthAccessor r2;
        net.oauth.OAuthMessage r1;
        java.io.BufferedReader $r5;

        r0 := @this: org.waveprotocol.box.server.robots.dataapi.BaseApiServlet;

        r4 := @parameter0: javax.servlet.http.HttpServletRequest;

        r23 := @parameter1: javax.servlet.http.HttpServletResponse;

        r1 := @parameter2: net.oauth.OAuthMessage;

        r2 := @parameter3: net.oauth.OAuthAccessor;

        r21 := @parameter4: org.waveprotocol.wave.model.wave.ParticipantId;

     label01:
        $r3 = r0.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: net.oauth.OAuthValidator validator>;

        interfaceinvoke $r3.<net.oauth.OAuthValidator: void validateMessage(net.oauth.OAuthMessage,net.oauth.OAuthAccessor)>(r1, r2);

     label02:
        goto label05;

     label03:
        $r38 := @caughtexception;

        $r39 = <org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.wave.util.logging.Log LOG>;

        virtualinvoke $r39.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String,java.lang.Throwable)>("The message does not conform to OAuth", $r38);

        interfaceinvoke r23.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(401);

        return;

     label04:
        $r36 := @caughtexception;

        $r37 = <org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.wave.util.logging.Log LOG>;

        virtualinvoke $r37.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String,java.lang.Throwable)>("The message URL is invalid", $r36);

        interfaceinvoke r23.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(401);

        return;

     label05:
        $r5 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.io.BufferedReader getReader()>();

        $r6 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>();

     label06:
        goto label08;

     label07:
        $r34 := @caughtexception;

        $r35 = <org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.wave.util.logging.Log LOG>;

        virtualinvoke $r35.<org.waveprotocol.wave.util.logging.Log: void warning(java.lang.String,java.lang.Throwable)>("Unable to read the incoming request", $r34);

        throw $r34;

     label08:
        $r8 = <org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.wave.util.logging.Log LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received the following Json: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r11);

     label09:
        $r12 = r0.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: com.google.wave.api.RobotSerializer robotSerializer>;

        $r13 = virtualinvoke $r12.<com.google.wave.api.RobotSerializer: java.util.List deserializeOperations(java.lang.String)>($r6);

        r0.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: java.util.List operations> = $r13;

     label10:
        goto label12;

     label11:
        $r24 := @caughtexception;

        $r26 = <org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.wave.util.logging.Log LOG>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse Json to list of OperationRequests: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r29);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse Json to list of OperationRequests: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r23.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(400, $r33);

        return;

     label12:
        $r14 = r0.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: java.util.List operations>;

        $r15 = staticinvoke <org.waveprotocol.box.server.robots.util.OperationUtil: com.google.wave.api.ProtocolVersion getProtocolVersion(java.util.List)>($r14);

        $r16 = new org.waveprotocol.box.server.robots.OperationContextImpl;

        $r18 = r0.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider>;

        $r17 = r0.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: com.google.wave.api.data.converter.EventDataConverterManager converterManager>;

        $r19 = virtualinvoke $r17.<com.google.wave.api.data.converter.EventDataConverterManager: com.google.wave.api.data.converter.EventDataConverter getEventDataConverter(com.google.wave.api.ProtocolVersion)>($r15);

        $r20 = r0.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.box.server.robots.util.ConversationUtil conversationUtil>;

        specialinvoke $r16.<org.waveprotocol.box.server.robots.OperationContextImpl: void <init>(org.waveprotocol.box.server.waveserver.WaveletProvider,com.google.wave.api.data.converter.EventDataConverter,org.waveprotocol.box.server.robots.util.ConversationUtil)>($r18, $r19, $r20);

        $r22 = r0.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: java.util.List operations>;

        specialinvoke r0.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: void executeOperations(org.waveprotocol.box.server.robots.OperationContext,java.util.List,org.waveprotocol.wave.model.wave.ParticipantId)>($r16, $r22, r21);

        specialinvoke r0.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: void handleResults(org.waveprotocol.box.server.robots.OperationResults,javax.servlet.http.HttpServletResponse,com.google.wave.api.ProtocolVersion)>($r16, r23, $r15);

        return;

        catch net.oauth.OAuthException from label01 to label02 with label03;
        catch java.net.URISyntaxException from label01 to label02 with label04;
        catch java.io.IOException from label05 to label06 with label07;
        catch com.google.wave.api.InvalidRequestException from label09 to label10 with label11;
    }

    private void executeOperations(org.waveprotocol.box.server.robots.OperationContext, java.util.List, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        com.google.wave.api.OperationRequest r3;
        java.util.Iterator $r1;
        org.waveprotocol.box.server.robots.OperationContext r5;
        org.waveprotocol.box.server.robots.dataapi.BaseApiServlet r4;
        org.waveprotocol.wave.model.wave.ParticipantId r6;
        java.util.List r0;
        java.lang.Object $r2;
        boolean $z0;
        org.waveprotocol.box.server.robots.OperationServiceRegistry $r7;

        r4 := @this: org.waveprotocol.box.server.robots.dataapi.BaseApiServlet;

        r5 := @parameter0: org.waveprotocol.box.server.robots.OperationContext;

        r0 := @parameter1: java.util.List;

        r6 := @parameter2: org.waveprotocol.wave.model.wave.ParticipantId;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.google.wave.api.OperationRequest) $r2;

        $r7 = r4.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.box.server.robots.OperationServiceRegistry operationRegistry>;

        staticinvoke <org.waveprotocol.box.server.robots.util.OperationUtil: void executeOperation(com.google.wave.api.OperationRequest,org.waveprotocol.box.server.robots.OperationServiceRegistry,org.waveprotocol.box.server.robots.OperationContext,org.waveprotocol.wave.model.wave.ParticipantId)>(r3, $r7, r5, r6);

        goto label1;

     label2:
        return;
    }

    private void handleResults(org.waveprotocol.box.server.robots.OperationResults, javax.servlet.http.HttpServletResponse, com.google.wave.api.ProtocolVersion) throws java.io.IOException
    {
        com.google.wave.api.OperationRequest r25;
        org.waveprotocol.box.server.waveserver.WaveletProvider $r3;
        com.google.wave.api.JsonRpcResponse r22;
        org.waveprotocol.box.server.robots.dataapi.BaseApiServlet r1;
        com.google.wave.api.RobotSerializer $r9;
        java.util.Map $r20;
        org.waveprotocol.wave.util.logging.Log $r12, $r24;
        org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener $r2;
        java.lang.String $r10, $r15, $r19;
        java.util.LinkedList $r4;
        boolean $z0;
        java.io.PrintWriter $r17;
        java.util.Iterator $r6;
        javax.servlet.http.HttpServletResponse r16;
        java.io.IOException $r23;
        org.waveprotocol.box.server.robots.OperationResults r0;
        java.util.List $r5;
        java.lang.reflect.Type $r8;
        com.google.wave.api.ProtocolVersion r7;
        java.lang.StringBuilder $r11, $r13, $r14;
        java.lang.Object $r18, $r21;

        r1 := @this: org.waveprotocol.box.server.robots.dataapi.BaseApiServlet;

        r0 := @parameter0: org.waveprotocol.box.server.robots.OperationResults;

        r16 := @parameter1: javax.servlet.http.HttpServletResponse;

        r7 := @parameter2: com.google.wave.api.ProtocolVersion;

        $r3 = r1.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider>;

        $r2 = <org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener LOGGING_REQUEST_LISTENER>;

        staticinvoke <org.waveprotocol.box.server.robots.util.OperationUtil: void submitDeltas(org.waveprotocol.box.server.robots.OperationResults,org.waveprotocol.box.server.waveserver.WaveletProvider,org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener)>(r0, $r3, $r2);

        $r4 = staticinvoke <com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>();

        $r5 = r1.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: java.util.List operations>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r18 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r25 = (com.google.wave.api.OperationRequest) $r18;

        $r19 = virtualinvoke r25.<com.google.wave.api.OperationRequest: java.lang.String getId()>();

        $r20 = interfaceinvoke r0.<org.waveprotocol.box.server.robots.OperationResults: java.util.Map getResponses()>();

        $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19);

        r22 = (com.google.wave.api.JsonRpcResponse) $r21;

        virtualinvoke $r4.<java.util.LinkedList: void addLast(java.lang.Object)>(r22);

        goto label1;

     label2:
        $r9 = r1.<org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: com.google.wave.api.RobotSerializer robotSerializer>;

        $r8 = <com.google.wave.api.impl.GsonFactory: java.lang.reflect.Type JSON_RPC_RESPONSE_LIST_TYPE>;

        $r10 = virtualinvoke $r9.<com.google.wave.api.RobotSerializer: java.lang.String serialize(java.lang.Object,java.lang.reflect.Type,com.google.wave.api.ProtocolVersion)>($r4, $r8, r7);

        $r12 = <org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.wave.util.logging.Log LOG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returning the following Json: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r15);

     label3:
        interfaceinvoke r16.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("application/json");

        $r17 = interfaceinvoke r16.<javax.servlet.http.HttpServletResponse: java.io.PrintWriter getWriter()>();

        virtualinvoke $r17.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r10);

        virtualinvoke $r17.<java.io.PrintWriter: void flush()>();

        interfaceinvoke r16.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(200);

     label4:
        goto label6;

     label5:
        $r23 := @caughtexception;

        $r24 = <org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.wave.util.logging.Log LOG>;

        virtualinvoke $r24.<org.waveprotocol.wave.util.logging.Log: void severe(java.lang.String,java.lang.Throwable)>("IOException during writing of a response", $r23);

        throw $r23;

     label6:
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    static void <clinit>()
    {
        org.waveprotocol.box.server.robots.util.LoggingRequestListener $r1;
        org.waveprotocol.wave.util.logging.Log $r0, $r2;

        <org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: java.lang.String JSON_CONTENT_TYPE> = "application/json";

        $r0 = staticinvoke <org.waveprotocol.wave.util.logging.Log: org.waveprotocol.wave.util.logging.Log get(java.lang.Class)>(class "Lorg/waveprotocol/box/server/robots/dataapi/BaseApiServlet;");

        <org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.wave.util.logging.Log LOG> = $r0;

        $r1 = new org.waveprotocol.box.server.robots.util.LoggingRequestListener;

        $r2 = <org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.wave.util.logging.Log LOG>;

        specialinvoke $r1.<org.waveprotocol.box.server.robots.util.LoggingRequestListener: void <init>(org.waveprotocol.wave.util.logging.Log)>($r2);

        <org.waveprotocol.box.server.robots.dataapi.BaseApiServlet: org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener LOGGING_REQUEST_LISTENER> = $r1;

        return;
    }
}
