public final class com.ctc.wstx.dtd.DTDNmTokenAttr extends com.ctc.wstx.dtd.DTDAttribute
{

    public void <init>(com.ctc.wstx.dtd.NameKey, com.ctc.wstx.dtd.DefaultAttrValue, int, boolean, boolean)
    {
        com.ctc.wstx.dtd.DefaultAttrValue r2;
        com.ctc.wstx.dtd.NameKey r1;
        int i0;
        com.ctc.wstx.dtd.DTDNmTokenAttr r0;
        boolean z0, z1;

        r0 := @this: com.ctc.wstx.dtd.DTDNmTokenAttr;

        r1 := @parameter0: com.ctc.wstx.dtd.NameKey;

        r2 := @parameter1: com.ctc.wstx.dtd.DefaultAttrValue;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<com.ctc.wstx.dtd.DTDAttribute: void <init>(com.ctc.wstx.dtd.NameKey,com.ctc.wstx.dtd.DefaultAttrValue,int,boolean,boolean)>(r1, r2, i0, z0, z1);

        return;
    }

    public com.ctc.wstx.dtd.DTDAttribute cloneWith(int)
    {
        com.ctc.wstx.dtd.DefaultAttrValue $r2;
        com.ctc.wstx.dtd.NameKey $r3;
        int i0;
        com.ctc.wstx.dtd.DTDNmTokenAttr $r0, r1;
        boolean $z0, $z1;

        r1 := @this: com.ctc.wstx.dtd.DTDNmTokenAttr;

        i0 := @parameter0: int;

        $r0 = new com.ctc.wstx.dtd.DTDNmTokenAttr;

        $r3 = r1.<com.ctc.wstx.dtd.DTDNmTokenAttr: com.ctc.wstx.dtd.NameKey mName>;

        $r2 = r1.<com.ctc.wstx.dtd.DTDNmTokenAttr: com.ctc.wstx.dtd.DefaultAttrValue mDefValue>;

        $z1 = r1.<com.ctc.wstx.dtd.DTDNmTokenAttr: boolean mCfgNsAware>;

        $z0 = r1.<com.ctc.wstx.dtd.DTDNmTokenAttr: boolean mCfgXml11>;

        specialinvoke $r0.<com.ctc.wstx.dtd.DTDNmTokenAttr: void <init>(com.ctc.wstx.dtd.NameKey,com.ctc.wstx.dtd.DefaultAttrValue,int,boolean,boolean)>($r3, $r2, i0, $z1, $z0);

        return $r0;
    }

    public int getValueType()
    {
        com.ctc.wstx.dtd.DTDNmTokenAttr r0;

        r0 := @this: com.ctc.wstx.dtd.DTDNmTokenAttr;

        return 8;
    }

    public java.lang.String validate(com.ctc.wstx.dtd.DTDValidatorBase, char[], int, int, boolean) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDValidatorBase r3;
        int i0, $i1, i5, i6, i7, i8, i9, $i11, $i13;
        java.lang.String $r4, $r5, $r6;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        char c2, $c3, $c4;
        char[] r1;
        com.ctc.wstx.dtd.DTDNmTokenAttr r2;

        r2 := @this: com.ctc.wstx.dtd.DTDNmTokenAttr;

        r3 := @parameter0: com.ctc.wstx.dtd.DTDValidatorBase;

        r1 := @parameter1: char[];

        i5 := @parameter2: int;

        i6 := @parameter3: int;

        z0 := @parameter4: boolean;

        i0 = i6 - i5;

     label1:
        if i5 >= i6 goto label2;

        $c4 = r1[i5];

        $z5 = staticinvoke <com.ctc.wstx.io.WstxInputData: boolean isSpaceChar(char)>($c4);

        if $z5 == 0 goto label2;

        i5 = i5 + 1;

        goto label1;

     label2:
        if i5 < i6 goto label3;

        $r5 = virtualinvoke r2.<com.ctc.wstx.dtd.DTDNmTokenAttr: java.lang.String reportValidationProblem(com.ctc.wstx.dtd.DTDValidatorBase,java.lang.String)>(r3, "Empty NMTOKEN value");

        return $r5;

     label3:
        $i11 = (int) -1;

        i7 = i6 + $i11;

     label4:
        if i7 <= i5 goto label5;

        $c3 = r1[i7];

        $z4 = staticinvoke <com.ctc.wstx.io.WstxInputData: boolean isSpaceChar(char)>($c3);

        if $z4 == 0 goto label5;

        $i13 = (int) -1;

        i7 = i7 + $i13;

        goto label4;

     label5:
        i8 = i5;

     label6:
        if i8 > i7 goto label8;

        c2 = r1[i8];

        $z2 = r2.<com.ctc.wstx.dtd.DTDNmTokenAttr: boolean mCfgNsAware>;

        $z1 = r2.<com.ctc.wstx.dtd.DTDNmTokenAttr: boolean mCfgXml11>;

        $z3 = staticinvoke <com.ctc.wstx.io.WstxInputData: boolean isNameChar(char,boolean,boolean)>(c2, $z2, $z1);

        if $z3 != 0 goto label7;

        $r4 = virtualinvoke r2.<com.ctc.wstx.dtd.DTDNmTokenAttr: java.lang.String reportInvalidChar(com.ctc.wstx.dtd.DTDValidatorBase,char,java.lang.String)>(r3, c2, "not valid NMTOKEN character");

        return $r4;

     label7:
        i8 = i8 + 1;

        goto label6;

     label8:
        if z0 == 0 goto label9;

        $i1 = i7 - i5;

        i9 = $i1 + 1;

        if i9 == i0 goto label9;

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(char[],int,int)>(r1, i5, i9);

        return $r6;

     label9:
        return null;
    }

    public void validateDefault(com.ctc.wstx.sr.InputProblemReporter, boolean) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DefaultAttrValue $r3;
        com.ctc.wstx.sr.InputProblemReporter r1;
        java.lang.String $r2;
        com.ctc.wstx.dtd.DTDNmTokenAttr r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.dtd.DTDNmTokenAttr;

        r1 := @parameter0: com.ctc.wstx.sr.InputProblemReporter;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<com.ctc.wstx.dtd.DTDNmTokenAttr: java.lang.String validateDefaultNmToken(com.ctc.wstx.sr.InputProblemReporter,boolean)>(r1, z0);

        if z0 == 0 goto label1;

        $r3 = r0.<com.ctc.wstx.dtd.DTDNmTokenAttr: com.ctc.wstx.dtd.DefaultAttrValue mDefValue>;

        virtualinvoke $r3.<com.ctc.wstx.dtd.DefaultAttrValue: void setValue(java.lang.String)>($r2);

     label1:
        return;
    }
}
