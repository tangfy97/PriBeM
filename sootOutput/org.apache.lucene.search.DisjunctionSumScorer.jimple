class org.apache.lucene.search.DisjunctionSumScorer extends org.apache.lucene.search.DisjunctionScorer
{
    private int doc;
    protected int nrMatchers;
    protected double score;
    private final float[] coord;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.lucene.search.Weight, org.apache.lucene.search.Scorer[], float[]) throws java.io.IOException
    {
        org.apache.lucene.search.Weight r1;
        float[] r3;
        java.lang.IllegalArgumentException $r5;
        org.apache.lucene.search.Scorer[] r2;
        int $i0, $i1, $i3, $i5;
        org.apache.lucene.search.DisjunctionSumScorer r0;

        r0 := @this: org.apache.lucene.search.DisjunctionSumScorer;

        r1 := @parameter0: org.apache.lucene.search.Weight;

        r2 := @parameter1: org.apache.lucene.search.Scorer[];

        r3 := @parameter2: float[];

        $i0 = lengthof r2;

        specialinvoke r0.<org.apache.lucene.search.DisjunctionScorer: void <init>(org.apache.lucene.search.Weight,org.apache.lucene.search.Scorer[],int)>(r1, r2, $i0);

        $i3 = (int) -1;

        r0.<org.apache.lucene.search.DisjunctionSumScorer: int doc> = $i3;

        $i5 = (int) -1;

        r0.<org.apache.lucene.search.DisjunctionSumScorer: int nrMatchers> = $i5;

        r0.<org.apache.lucene.search.DisjunctionSumScorer: double score> = #NaN;

        $i1 = r0.<org.apache.lucene.search.DisjunctionSumScorer: int numScorers>;

        if $i1 > 1 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("There must be at least 2 subScorers");

        throw $r5;

     label1:
        r0.<org.apache.lucene.search.DisjunctionSumScorer: float[] coord> = r3;

        return;
    }

    public int nextDoc() throws java.io.IOException
    {
        org.apache.lucene.search.Scorer $r2, $r5;
        java.lang.AssertionError $r3;
        org.apache.lucene.search.Scorer[] $r1, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.lucene.search.DisjunctionSumScorer r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.DisjunctionSumScorer;

        $z0 = <org.apache.lucene.search.DisjunctionSumScorer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i4 = r0.<org.apache.lucene.search.DisjunctionSumScorer: int doc>;

        if $i4 != 2147483647 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r4 = r0.<org.apache.lucene.search.DisjunctionSumScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $r5 = $r4[0];

        $i5 = virtualinvoke $r5.<org.apache.lucene.search.Scorer: int nextDoc()>();

        if $i5 == 2147483647 goto label2;

        virtualinvoke r0.<org.apache.lucene.search.DisjunctionSumScorer: void heapAdjust(int)>(0);

        goto label3;

     label2:
        virtualinvoke r0.<org.apache.lucene.search.DisjunctionSumScorer: void heapRemoveRoot()>();

        $i0 = r0.<org.apache.lucene.search.DisjunctionSumScorer: int numScorers>;

        if $i0 != 0 goto label3;

        r0.<org.apache.lucene.search.DisjunctionSumScorer: int doc> = 2147483647;

        return 2147483647;

     label3:
        $r1 = r0.<org.apache.lucene.search.DisjunctionSumScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $r2 = $r1[0];

        $i1 = virtualinvoke $r2.<org.apache.lucene.search.Scorer: int docID()>();

        $i2 = r0.<org.apache.lucene.search.DisjunctionSumScorer: int doc>;

        if $i1 == $i2 goto label1;

        specialinvoke r0.<org.apache.lucene.search.DisjunctionSumScorer: void afterNext()>();

        $i3 = r0.<org.apache.lucene.search.DisjunctionSumScorer: int doc>;

        return $i3;
    }

    private void afterNext() throws java.io.IOException
    {
        org.apache.lucene.search.Scorer[] $r1;
        org.apache.lucene.search.Scorer r2;
        int $i0, $i1;
        float $f0;
        org.apache.lucene.search.DisjunctionSumScorer r0;
        double $d0;

        r0 := @this: org.apache.lucene.search.DisjunctionSumScorer;

        $r1 = r0.<org.apache.lucene.search.DisjunctionSumScorer: org.apache.lucene.search.Scorer[] subScorers>;

        r2 = $r1[0];

        $i0 = virtualinvoke r2.<org.apache.lucene.search.Scorer: int docID()>();

        r0.<org.apache.lucene.search.DisjunctionSumScorer: int doc> = $i0;

        $i1 = r0.<org.apache.lucene.search.DisjunctionSumScorer: int doc>;

        if $i1 == 2147483647 goto label1;

        $f0 = virtualinvoke r2.<org.apache.lucene.search.Scorer: float score()>();

        $d0 = (double) $f0;

        r0.<org.apache.lucene.search.DisjunctionSumScorer: double score> = $d0;

        r0.<org.apache.lucene.search.DisjunctionSumScorer: int nrMatchers> = 1;

        specialinvoke r0.<org.apache.lucene.search.DisjunctionSumScorer: void countMatches(int)>(1);

        specialinvoke r0.<org.apache.lucene.search.DisjunctionSumScorer: void countMatches(int)>(2);

     label1:
        return;
    }

    private void countMatches(int) throws java.io.IOException
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.apache.lucene.search.DisjunctionSumScorer r0;
        double $d0, $d1, $d2;
        org.apache.lucene.search.Scorer $r2, $r4;
        org.apache.lucene.search.Scorer[] $r1, $r3;
        float $f0;

        r0 := @this: org.apache.lucene.search.DisjunctionSumScorer;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.lucene.search.DisjunctionSumScorer: int numScorers>;

        if i0 >= $i1 goto label1;

        $r1 = r0.<org.apache.lucene.search.DisjunctionSumScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $r2 = $r1[i0];

        $i2 = virtualinvoke $r2.<org.apache.lucene.search.Scorer: int docID()>();

        $i3 = r0.<org.apache.lucene.search.DisjunctionSumScorer: int doc>;

        if $i2 != $i3 goto label1;

        $i4 = r0.<org.apache.lucene.search.DisjunctionSumScorer: int nrMatchers>;

        $i5 = $i4 + 1;

        r0.<org.apache.lucene.search.DisjunctionSumScorer: int nrMatchers> = $i5;

        $d0 = r0.<org.apache.lucene.search.DisjunctionSumScorer: double score>;

        $r3 = r0.<org.apache.lucene.search.DisjunctionSumScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $r4 = $r3[i0];

        $f0 = virtualinvoke $r4.<org.apache.lucene.search.Scorer: float score()>();

        $d1 = (double) $f0;

        $d2 = $d0 + $d1;

        r0.<org.apache.lucene.search.DisjunctionSumScorer: double score> = $d2;

        $i6 = i0 << 1;

        $i7 = $i6 + 1;

        specialinvoke r0.<org.apache.lucene.search.DisjunctionSumScorer: void countMatches(int)>($i7);

        $i8 = i0 << 1;

        $i9 = $i8 + 2;

        specialinvoke r0.<org.apache.lucene.search.DisjunctionSumScorer: void countMatches(int)>($i9);

     label1:
        return;
    }

    public float score() throws java.io.IOException
    {
        int $i0;
        float $f0, $f1, $f2;
        float[] $r1;
        org.apache.lucene.search.DisjunctionSumScorer r0;
        double $d0;

        r0 := @this: org.apache.lucene.search.DisjunctionSumScorer;

        $d0 = r0.<org.apache.lucene.search.DisjunctionSumScorer: double score>;

        $f1 = (float) $d0;

        $r1 = r0.<org.apache.lucene.search.DisjunctionSumScorer: float[] coord>;

        $i0 = r0.<org.apache.lucene.search.DisjunctionSumScorer: int nrMatchers>;

        $f0 = $r1[$i0];

        $f2 = $f1 * $f0;

        return $f2;
    }

    public int docID()
    {
        int $i0;
        org.apache.lucene.search.DisjunctionSumScorer r0;

        r0 := @this: org.apache.lucene.search.DisjunctionSumScorer;

        $i0 = r0.<org.apache.lucene.search.DisjunctionSumScorer: int doc>;

        return $i0;
    }

    public int freq() throws java.io.IOException
    {
        int $i0;
        org.apache.lucene.search.DisjunctionSumScorer r0;

        r0 := @this: org.apache.lucene.search.DisjunctionSumScorer;

        $i0 = r0.<org.apache.lucene.search.DisjunctionSumScorer: int nrMatchers>;

        return $i0;
    }

    public int advance(int) throws java.io.IOException
    {
        org.apache.lucene.search.Scorer $r2, $r5;
        java.lang.AssertionError $r3;
        org.apache.lucene.search.Scorer[] $r1, $r4;
        int i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.lucene.search.DisjunctionSumScorer r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.DisjunctionSumScorer;

        i0 := @parameter0: int;

        $z0 = <org.apache.lucene.search.DisjunctionSumScorer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i4 = r0.<org.apache.lucene.search.DisjunctionSumScorer: int doc>;

        if $i4 != 2147483647 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r4 = r0.<org.apache.lucene.search.DisjunctionSumScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $r5 = $r4[0];

        $i5 = virtualinvoke $r5.<org.apache.lucene.search.Scorer: int advance(int)>(i0);

        if $i5 == 2147483647 goto label2;

        virtualinvoke r0.<org.apache.lucene.search.DisjunctionSumScorer: void heapAdjust(int)>(0);

        goto label3;

     label2:
        virtualinvoke r0.<org.apache.lucene.search.DisjunctionSumScorer: void heapRemoveRoot()>();

        $i1 = r0.<org.apache.lucene.search.DisjunctionSumScorer: int numScorers>;

        if $i1 != 0 goto label3;

        r0.<org.apache.lucene.search.DisjunctionSumScorer: int doc> = 2147483647;

        return 2147483647;

     label3:
        $r1 = r0.<org.apache.lucene.search.DisjunctionSumScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $r2 = $r1[0];

        $i2 = virtualinvoke $r2.<org.apache.lucene.search.Scorer: int docID()>();

        if $i2 < i0 goto label1;

        specialinvoke r0.<org.apache.lucene.search.DisjunctionSumScorer: void afterNext()>();

        $i3 = r0.<org.apache.lucene.search.DisjunctionSumScorer: int doc>;

        return $i3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/DisjunctionSumScorer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.DisjunctionSumScorer: boolean $assertionsDisabled> = $z1;

        return;
    }
}
