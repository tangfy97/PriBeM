public class org.apache.batik.util.gui.xmleditor.XMLContext extends javax.swing.text.StyleContext
{
    public static final java.lang.String XML_DECLARATION_STYLE;
    public static final java.lang.String DOCTYPE_STYLE;
    public static final java.lang.String COMMENT_STYLE;
    public static final java.lang.String ELEMENT_STYLE;
    public static final java.lang.String CHARACTER_DATA_STYLE;
    public static final java.lang.String ATTRIBUTE_NAME_STYLE;
    public static final java.lang.String ATTRIBUTE_VALUE_STYLE;
    public static final java.lang.String CDATA_STYLE;
    protected java.util.Map syntaxForegroundMap;
    protected java.util.Map syntaxFontMap;

    public void <init>()
    {
        java.awt.Color $r7, $r11, $r14, $r17, $r22, $r25, $r28, r31, r32;
        java.util.Map $r4, $r5, $r8, $r9, $r12, $r13, $r15, $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r30;
        java.awt.Font $r3, $r6, $r10;
        org.apache.batik.util.gui.xmleditor.XMLContext r0;
        java.util.HashMap $r1, $r2;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLContext;

        specialinvoke r0.<javax.swing.text.StyleContext: void <init>()>();

        r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxForegroundMap> = null;

        r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxFontMap> = null;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxFontMap> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxForegroundMap> = $r2;

        $r3 = new java.awt.Font;

        specialinvoke $r3.<java.awt.Font: void <init>(java.lang.String,int,int)>("Monospaced", 0, 12);

        r31 = <java.awt.Color: java.awt.Color black>;

        $r4 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxFontMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("default", $r3);

        $r5 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxForegroundMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("default", r31);

        $r6 = virtualinvoke $r3.<java.awt.Font: java.awt.Font deriveFont(int)>(1);

        $r7 = new java.awt.Color;

        specialinvoke $r7.<java.awt.Color: void <init>(int,int,int)>(0, 0, 124);

        $r8 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxFontMap>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("xml_declaration", $r6);

        $r9 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxForegroundMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("xml_declaration", $r7);

        $r10 = virtualinvoke $r3.<java.awt.Font: java.awt.Font deriveFont(int)>(1);

        $r11 = new java.awt.Color;

        specialinvoke $r11.<java.awt.Color: void <init>(int,int,int)>(0, 0, 124);

        $r12 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxFontMap>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("doctype", $r10);

        $r13 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxForegroundMap>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("doctype", $r11);

        $r14 = new java.awt.Color;

        specialinvoke $r14.<java.awt.Color: void <init>(int,int,int)>(128, 128, 128);

        $r15 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxFontMap>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("comment", $r3);

        $r16 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxForegroundMap>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("comment", $r14);

        $r17 = new java.awt.Color;

        specialinvoke $r17.<java.awt.Color: void <init>(int,int,int)>(0, 0, 255);

        $r18 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxFontMap>;

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("element", $r3);

        $r19 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxForegroundMap>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("element", $r17);

        r32 = <java.awt.Color: java.awt.Color black>;

        $r20 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxFontMap>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("character_data", $r3);

        $r21 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxForegroundMap>;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("character_data", r32);

        $r22 = new java.awt.Color;

        specialinvoke $r22.<java.awt.Color: void <init>(int,int,int)>(0, 124, 0);

        $r23 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxFontMap>;

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("attribute_name", $r3);

        $r24 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxForegroundMap>;

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("attribute_name", $r22);

        $r25 = new java.awt.Color;

        specialinvoke $r25.<java.awt.Color: void <init>(int,int,int)>(153, 0, 107);

        $r26 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxFontMap>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("attribute_value", $r3);

        $r27 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxForegroundMap>;

        interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("attribute_value", $r25);

        $r28 = new java.awt.Color;

        specialinvoke $r28.<java.awt.Color: void <init>(int,int,int)>(124, 98, 0);

        $r29 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxFontMap>;

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cdata", $r3);

        $r30 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxForegroundMap>;

        interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cdata", $r28);

        return;
    }

    public void <init>(java.util.Map, java.util.Map)
    {
        org.apache.batik.util.gui.xmleditor.XMLContext r0;
        java.util.Map r1, r2;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLContext;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<javax.swing.text.StyleContext: void <init>()>();

        r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxForegroundMap> = null;

        r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxFontMap> = null;

        virtualinvoke r0.<org.apache.batik.util.gui.xmleditor.XMLContext: void setSyntaxFont(java.util.Map)>(r1);

        virtualinvoke r0.<org.apache.batik.util.gui.xmleditor.XMLContext: void setSyntaxForeground(java.util.Map)>(r2);

        return;
    }

    public void setSyntaxForeground(java.util.Map)
    {
        org.apache.batik.util.gui.xmleditor.XMLContext r1;
        java.lang.IllegalArgumentException $r2;
        java.util.Map r0;

        r1 := @this: org.apache.batik.util.gui.xmleditor.XMLContext;

        r0 := @parameter0: java.util.Map;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("syntaxForegroundMap can not be null");

        throw $r2;

     label1:
        r1.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxForegroundMap> = r0;

        return;
    }

    public void setSyntaxFont(java.util.Map)
    {
        org.apache.batik.util.gui.xmleditor.XMLContext r1;
        java.lang.IllegalArgumentException $r2;
        java.util.Map r0;

        r1 := @this: org.apache.batik.util.gui.xmleditor.XMLContext;

        r0 := @parameter0: java.util.Map;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("syntaxFontMap can not be null");

        throw $r2;

     label1:
        r1.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxFontMap> = r0;

        return;
    }

    public java.awt.Color getSyntaxForeground(int)
    {
        java.awt.Color $r2;
        int i0;
        org.apache.batik.util.gui.xmleditor.XMLContext r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLContext;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.lang.String getSyntaxName(int)>(i0);

        $r2 = virtualinvoke r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.awt.Color getSyntaxForeground(java.lang.String)>($r1);

        return $r2;
    }

    public java.awt.Color getSyntaxForeground(java.lang.String)
    {
        java.awt.Color $r4;
        java.util.Map $r2;
        org.apache.batik.util.gui.xmleditor.XMLContext r0;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxForegroundMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.awt.Color) $r3;

        return $r4;
    }

    public java.awt.Font getSyntaxFont(int)
    {
        java.awt.Font $r2;
        int i0;
        org.apache.batik.util.gui.xmleditor.XMLContext r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLContext;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.lang.String getSyntaxName(int)>(i0);

        $r2 = virtualinvoke r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.awt.Font getSyntaxFont(java.lang.String)>($r1);

        return $r2;
    }

    public java.awt.Font getSyntaxFont(java.lang.String)
    {
        java.awt.Font $r4;
        java.util.Map $r2;
        org.apache.batik.util.gui.xmleditor.XMLContext r0;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.util.gui.xmleditor.XMLContext: java.util.Map syntaxFontMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.awt.Font) $r3;

        return $r4;
    }

    public java.lang.String getSyntaxName(int)
    {
        int i0;
        org.apache.batik.util.gui.xmleditor.XMLContext r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLContext;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label8;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label1;
            case 7: goto label2;
            case 8: goto label8;
            case 9: goto label8;
            case 10: goto label7;
            default: goto label8;
        };

     label1:
        r1 = "xml_declaration";

        goto label9;

     label2:
        r1 = "doctype";

        goto label9;

     label3:
        r1 = "comment";

        goto label9;

     label4:
        r1 = "element";

        goto label9;

     label5:
        r1 = "attribute_name";

        goto label9;

     label6:
        r1 = "attribute_value";

        goto label9;

     label7:
        r1 = "cdata";

        goto label9;

     label8:
        r1 = "default";

     label9:
        return r1;
    }

    public static void <clinit>()
    {
        <org.apache.batik.util.gui.xmleditor.XMLContext: java.lang.String CDATA_STYLE> = "cdata";

        <org.apache.batik.util.gui.xmleditor.XMLContext: java.lang.String ATTRIBUTE_VALUE_STYLE> = "attribute_value";

        <org.apache.batik.util.gui.xmleditor.XMLContext: java.lang.String ATTRIBUTE_NAME_STYLE> = "attribute_name";

        <org.apache.batik.util.gui.xmleditor.XMLContext: java.lang.String CHARACTER_DATA_STYLE> = "character_data";

        <org.apache.batik.util.gui.xmleditor.XMLContext: java.lang.String ELEMENT_STYLE> = "element";

        <org.apache.batik.util.gui.xmleditor.XMLContext: java.lang.String COMMENT_STYLE> = "comment";

        <org.apache.batik.util.gui.xmleditor.XMLContext: java.lang.String DOCTYPE_STYLE> = "doctype";

        <org.apache.batik.util.gui.xmleditor.XMLContext: java.lang.String XML_DECLARATION_STYLE> = "xml_declaration";

        return;
    }
}
