public class org.apache.lucene.queries.function.valuesource.LiteralValueSource extends org.apache.lucene.queries.function.ValueSource
{
    protected final java.lang.String string;
    protected final org.apache.lucene.util.BytesRef bytesRef;
    public static final int hash;

    public void <init>(java.lang.String)
    {
        org.apache.lucene.queries.function.valuesource.LiteralValueSource r0;
        java.lang.String r1;
        org.apache.lucene.util.BytesRef $r2;

        r0 := @this: org.apache.lucene.queries.function.valuesource.LiteralValueSource;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.lucene.queries.function.ValueSource: void <init>()>();

        r0.<org.apache.lucene.queries.function.valuesource.LiteralValueSource: java.lang.String string> = r1;

        $r2 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r2.<org.apache.lucene.util.BytesRef: void <init>(java.lang.CharSequence)>(r1);

        r0.<org.apache.lucene.queries.function.valuesource.LiteralValueSource: org.apache.lucene.util.BytesRef bytesRef> = $r2;

        return;
    }

    public java.lang.String getValue()
    {
        org.apache.lucene.queries.function.valuesource.LiteralValueSource r0;
        java.lang.String $r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.LiteralValueSource;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.LiteralValueSource: java.lang.String string>;

        return $r1;
    }

    public org.apache.lucene.queries.function.FunctionValues getValues(java.util.Map, org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        org.apache.lucene.queries.function.valuesource.LiteralValueSource$1 $r0;
        java.util.Map r2;
        org.apache.lucene.queries.function.valuesource.LiteralValueSource r1;
        org.apache.lucene.index.AtomicReaderContext r3;

        r1 := @this: org.apache.lucene.queries.function.valuesource.LiteralValueSource;

        r2 := @parameter0: java.util.Map;

        r3 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        $r0 = new org.apache.lucene.queries.function.valuesource.LiteralValueSource$1;

        specialinvoke $r0.<org.apache.lucene.queries.function.valuesource.LiteralValueSource$1: void <init>(org.apache.lucene.queries.function.valuesource.LiteralValueSource,org.apache.lucene.queries.function.ValueSource)>(r1, r1);

        return $r0;
    }

    public java.lang.String description()
    {
        org.apache.lucene.queries.function.valuesource.LiteralValueSource r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;

        r2 := @this: org.apache.lucene.queries.function.valuesource.LiteralValueSource;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("literal(");

        $r3 = r2.<org.apache.lucene.queries.function.valuesource.LiteralValueSource: java.lang.String string>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.queries.function.valuesource.LiteralValueSource r0, r2;
        java.lang.Object r1;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.LiteralValueSource;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.lucene.queries.function.valuesource.LiteralValueSource;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.lucene.queries.function.valuesource.LiteralValueSource) r1;

        $r4 = r0.<org.apache.lucene.queries.function.valuesource.LiteralValueSource: java.lang.String string>;

        $r3 = r2.<org.apache.lucene.queries.function.valuesource.LiteralValueSource: java.lang.String string>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public int hashCode()
    {
        org.apache.lucene.queries.function.valuesource.LiteralValueSource r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.LiteralValueSource;

        $i0 = <org.apache.lucene.queries.function.valuesource.LiteralValueSource: int hash>;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.LiteralValueSource: java.lang.String string>;

        $i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    static void <clinit>()
    {
        int $i0;
        java.lang.Class $r0;

        $r0 = class "Lorg/apache/lucene/queries/function/valuesource/LiteralValueSource;";

        $i0 = virtualinvoke $r0.<java.lang.Object: int hashCode()>();

        <org.apache.lucene.queries.function.valuesource.LiteralValueSource: int hash> = $i0;

        return;
    }
}
