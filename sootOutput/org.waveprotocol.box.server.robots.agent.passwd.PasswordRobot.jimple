public final class org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot extends org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent
{
    private static final java.util.logging.Logger LOG;
    public static final java.lang.String ROBOT_URI;
    private final javax.security.auth.login.Configuration configuration;

    public void <init>(com.google.inject.Injector)
    {
        com.google.inject.Injector r1;
        org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot r0;
        java.lang.Object $r2;
        javax.security.auth.login.Configuration $r3;

        r0 := @this: org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot;

        r1 := @parameter0: com.google.inject.Injector;

        specialinvoke r0.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: void <init>(com.google.inject.Injector)>(r1);

        $r2 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Ljavax/security/auth/login/Configuration;");

        $r3 = (javax.security.auth.login.Configuration) $r2;

        r0.<org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: javax.security.auth.login.Configuration configuration> = $r3;

        return;
    }

    protected java.lang.String maybeExecuteCommand(org.apache.commons.cli.CommandLine, java.lang.String)
    {
        org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot r3;
        org.waveprotocol.wave.model.wave.ParticipantId $r9;
        java.lang.StringBuilder $r1, $r2, $r5, $r12, $r14, $r15, $r16, $r25, $r26, $r27, $r28, $r29, $r32, $r33, $r36, $r37, $r38, $r39, $r42, $r43, $r46, $r47, $r48, $r49, $r52, $r53, $r56, $r59, $r60;
        org.waveprotocol.wave.model.wave.InvalidParticipantAddress $r35;
        java.lang.Object[] $r11, $r18, $r22;
        org.waveprotocol.box.server.persistence.PersistenceException $r45;
        java.lang.String r0, $r4, $r6, $r17, $r19, $r20, $r21, $r23, $r34, $r44, $r54, $r61, r62;
        javax.security.auth.login.LoginException $r24;
        boolean $z0;
        java.util.logging.Logger $r13, $r30, $r40, $r50, $r57;
        java.lang.String[] $r8, r63;
        java.util.logging.Level $r31, $r41, $r51, $r58;
        int $i0;
        org.apache.commons.cli.CommandLine r7;
        java.lang.IllegalArgumentException $r55;
        org.waveprotocol.box.server.persistence.AccountStore $r10;

        r3 := @this: org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot;

        r7 := @parameter0: org.apache.commons.cli.CommandLine;

        r0 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r4 = virtualinvoke r3.<org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: java.lang.String getWaveDomain()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>($r6);

        if $z0 != 0 goto label1;

        $r22 = newarray (java.lang.Object)[2];

        $r22[0] = r0;

        $r23 = virtualinvoke r3.<org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: java.lang.String getWaveDomain()>();

        $r22[1] = $r23;

        r62 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("User %s does not belong to the @%s domain\n", $r22);

        goto label9;

     label1:
        $r8 = virtualinvoke r7.<org.apache.commons.cli.CommandLine: java.lang.String[] getArgs()>();

        r63 = $r8;

     label2:
        $r9 = staticinvoke <org.waveprotocol.wave.model.wave.ParticipantId: org.waveprotocol.wave.model.wave.ParticipantId of(java.lang.String)>(r0);

        $i0 = lengthof $r8;

        if $i0 != 2 goto label3;

        $r18 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r8, 3);

        r63 = (java.lang.String[]) $r18;

        $r19 = r63[1];

        r63[2] = $r19;

        r63[1] = "";

     label3:
        $r20 = r63[1];

        $r21 = r63[2];

        specialinvoke r3.<org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: void verifyCredentials(java.lang.String,org.waveprotocol.wave.model.wave.ParticipantId)>($r20, $r9);

        $r10 = virtualinvoke r3.<org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: org.waveprotocol.box.server.persistence.AccountStore getAccountStore()>();

        staticinvoke <org.waveprotocol.box.server.robots.agent.RobotAgentUtil: void changeUserPassword(java.lang.String,org.waveprotocol.wave.model.wave.ParticipantId,org.waveprotocol.box.server.persistence.AccountStore)>($r21, $r9, $r10);

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = r0;

        $r11[1] = $r21;

        r62 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Changed password for user %s, the new password is: %s", $r11);

        $r13 = <org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: java.util.logging.Logger LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" changed  password for user: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.util.logging.Logger: void info(java.lang.String)>($r17);

     label4:
        goto label9;

     label5:
        $r55 := @caughtexception;

        r62 = virtualinvoke $r55.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r57 = <org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: java.util.logging.Logger LOG>;

        $r58 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("userId: ");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r57.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r58, $r61, $r55);

        goto label9;

     label6:
        $r45 := @caughtexception;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot change password for user: ");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r62 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        $r50 = <org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: java.util.logging.Logger LOG>;

        $r51 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("userId: ");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r50.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r51, $r54, $r45);

        goto label9;

     label7:
        $r35 := @caughtexception;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot change password for user: ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r62 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = <org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: java.util.logging.Logger LOG>;

        $r41 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("userId: ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r40.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r41, $r44, $r35);

        goto label9;

     label8:
        $r24 := @caughtexception;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot change password for user: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Please verify your old password");

        r62 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $r30 = <org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: java.util.logging.Logger LOG>;

        $r31 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("userId: ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r31, $r34, $r24);

     label9:
        return r62;

        catch java.lang.IllegalArgumentException from label2 to label4 with label5;
        catch org.waveprotocol.box.server.persistence.PersistenceException from label2 to label4 with label6;
        catch org.waveprotocol.wave.model.wave.InvalidParticipantAddress from label2 to label4 with label7;
        catch javax.security.auth.login.LoginException from label2 to label4 with label8;
    }

    private void verifyCredentials(java.lang.String, org.waveprotocol.wave.model.wave.ParticipantId) throws javax.security.auth.login.LoginException
    {
        com.google.common.collect.ImmutableMap $r4;
        org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot r8;
        org.eclipse.jetty.util.MultiMap $r0;
        org.waveprotocol.wave.model.wave.ParticipantId r2;
        javax.security.auth.login.LoginContext $r6;
        javax.security.auth.Subject $r7;
        org.waveprotocol.box.server.authentication.HttpRequestBasedCallbackHandler $r5;
        java.lang.String r1, $r3;
        javax.security.auth.login.Configuration $r9;

        r8 := @this: org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.ParticipantId;

        $r0 = new org.eclipse.jetty.util.MultiMap;

        specialinvoke $r0.<org.eclipse.jetty.util.MultiMap: void <init>()>();

        $r3 = virtualinvoke r2.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $r4 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("password", r1, "address", $r3);

        virtualinvoke $r0.<org.eclipse.jetty.util.MultiMap: void putAll(java.util.Map)>($r4);

        $r5 = new org.waveprotocol.box.server.authentication.HttpRequestBasedCallbackHandler;

        specialinvoke $r5.<org.waveprotocol.box.server.authentication.HttpRequestBasedCallbackHandler: void <init>(org.eclipse.jetty.util.MultiMap)>($r0);

        $r6 = new javax.security.auth.login.LoginContext;

        $r7 = new javax.security.auth.Subject;

        specialinvoke $r7.<javax.security.auth.Subject: void <init>()>();

        $r9 = r8.<org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: javax.security.auth.login.Configuration configuration>;

        specialinvoke $r6.<javax.security.auth.login.LoginContext: void <init>(java.lang.String,javax.security.auth.Subject,javax.security.auth.callback.CallbackHandler,javax.security.auth.login.Configuration)>("Wave", $r7, $r5, $r9);

        virtualinvoke $r6.<javax.security.auth.login.LoginContext: void login()>();

        return;
    }

    public java.lang.String getFullDescription()
    {
        org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r9, $r10, $r12;
        java.lang.String $r2, $r5, $r8, $r11, $r13;

        r1 := @this: org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: java.lang.String getShortDescription()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" If your password is empty - enter only the new password.\n");

        $r5 = virtualinvoke r1.<org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: java.lang.String getUsage()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nExample: ");

        $r8 = virtualinvoke r1.<org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: java.lang.String getCommandName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = virtualinvoke r1.<org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: java.lang.String getExample()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public java.lang.String getCmdLineSyntax()
    {
        org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot;

        return "[OPTIONS] [OLD_PASSWORD] [NEW_PASSWORD]";
    }

    public java.lang.String getExample()
    {
        org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot;

        return "old_password new_password";
    }

    public java.lang.String getShortDescription()
    {
        org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot;

        return "The command allows users to change their own password. Please make sure to use it in a wave without other participants. It is also advised to remove yourself from the wave when you finished changing the password.";
    }

    public java.lang.String getCommandName()
    {
        org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot;

        return "passwd";
    }

    public java.lang.String getRobotName()
    {
        org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot;

        return "Passwd-Bot";
    }

    public int getMinNumOfArguments()
    {
        org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot;

        return 1;
    }

    public int getMaxNumOfArguments()
    {
        org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot;

        return 2;
    }

    public java.lang.String getRobotUri()
    {
        org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot;

        return "/agent/passwd/user";
    }

    public java.lang.String getRobotId()
    {
        org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot;

        return "passwd-bot";
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        <org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: java.lang.String ROBOT_URI> = "/agent/passwd/user";

        $r0 = class "Lorg/waveprotocol/box/server/robots/agent/passwd/PasswordRobot;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.waveprotocol.box.server.robots.agent.passwd.PasswordRobot: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
