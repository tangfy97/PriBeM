class com.mycila.inject.internal.cglib.beans.BeanMapEmitter$1 extends java.lang.Object implements com.mycila.inject.internal.cglib.core.ObjectSwitchCallback
{
    private final java.util.Map val$getters;
    private final com.mycila.inject.internal.cglib.core.CodeEmitter val$e;
    private final com.mycila.inject.internal.cglib.beans.BeanMapEmitter this$0;

    void <init>(com.mycila.inject.internal.cglib.beans.BeanMapEmitter, java.util.Map, com.mycila.inject.internal.cglib.core.CodeEmitter)
    {
        java.util.Map r2;
        com.mycila.inject.internal.cglib.core.CodeEmitter r3;
        com.mycila.inject.internal.cglib.beans.BeanMapEmitter r1;
        com.mycila.inject.internal.cglib.beans.BeanMapEmitter$1 r0;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BeanMapEmitter$1;

        r1 := @parameter0: com.mycila.inject.internal.cglib.beans.BeanMapEmitter;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: com.mycila.inject.internal.cglib.core.CodeEmitter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.beans.BeanMapEmitter$1: com.mycila.inject.internal.cglib.beans.BeanMapEmitter this$0> = r1;

        r0.<com.mycila.inject.internal.cglib.beans.BeanMapEmitter$1: java.util.Map val$getters> = r2;

        r0.<com.mycila.inject.internal.cglib.beans.BeanMapEmitter$1: com.mycila.inject.internal.cglib.core.CodeEmitter val$e> = r3;

        return;
    }

    public void processCase(java.lang.Object, com.mycila.inject.internal.asm.Label)
    {
        com.mycila.inject.internal.cglib.core.Signature $r9;
        com.mycila.inject.internal.asm.Type $r10;
        com.mycila.inject.internal.cglib.core.CodeEmitter $r7, $r8, $r11;
        com.mycila.inject.internal.cglib.beans.BeanMapEmitter$1 r0;
        com.mycila.inject.internal.cglib.core.MethodInfo $r6;
        java.beans.PropertyDescriptor r4;
        java.util.Map $r2;
        com.mycila.inject.internal.asm.Label r12;
        java.lang.Object r1, $r3;
        java.lang.reflect.Method $r5;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BeanMapEmitter$1;

        r1 := @parameter0: java.lang.Object;

        r12 := @parameter1: com.mycila.inject.internal.asm.Label;

        $r2 = r0.<com.mycila.inject.internal.cglib.beans.BeanMapEmitter$1: java.util.Map val$getters>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.beans.PropertyDescriptor) $r3;

        $r5 = virtualinvoke r4.<java.beans.PropertyDescriptor: java.lang.reflect.Method getReadMethod()>();

        $r6 = staticinvoke <com.mycila.inject.internal.cglib.core.ReflectUtils: com.mycila.inject.internal.cglib.core.MethodInfo getMethodInfo(java.lang.reflect.Member)>($r5);

        $r7 = r0.<com.mycila.inject.internal.cglib.beans.BeanMapEmitter$1: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        virtualinvoke $r7.<com.mycila.inject.internal.cglib.core.CodeEmitter: void invoke(com.mycila.inject.internal.cglib.core.MethodInfo)>($r6);

        $r8 = r0.<com.mycila.inject.internal.cglib.beans.BeanMapEmitter$1: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        $r9 = virtualinvoke $r6.<com.mycila.inject.internal.cglib.core.MethodInfo: com.mycila.inject.internal.cglib.core.Signature getSignature()>();

        $r10 = virtualinvoke $r9.<com.mycila.inject.internal.cglib.core.Signature: com.mycila.inject.internal.asm.Type getReturnType()>();

        virtualinvoke $r8.<com.mycila.inject.internal.cglib.core.CodeEmitter: void box(com.mycila.inject.internal.asm.Type)>($r10);

        $r11 = r0.<com.mycila.inject.internal.cglib.beans.BeanMapEmitter$1: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        virtualinvoke $r11.<com.mycila.inject.internal.cglib.core.CodeEmitter: void return_value()>();

        return;
    }

    public void processDefault()
    {
        com.mycila.inject.internal.cglib.core.CodeEmitter $r1, $r2;
        com.mycila.inject.internal.cglib.beans.BeanMapEmitter$1 r0;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BeanMapEmitter$1;

        $r1 = r0.<com.mycila.inject.internal.cglib.beans.BeanMapEmitter$1: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        virtualinvoke $r1.<com.mycila.inject.internal.cglib.core.CodeEmitter: void aconst_null()>();

        $r2 = r0.<com.mycila.inject.internal.cglib.beans.BeanMapEmitter$1: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void return_value()>();

        return;
    }
}
