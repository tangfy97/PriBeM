public class org.apache.batik.bridge.ViewBox$ViewHandler extends org.apache.batik.parser.AWTTransformProducer implements org.apache.batik.parser.FragmentIdentifierHandler
{
    public boolean hasTransform;
    public boolean hasId;
    public boolean hasViewBox;
    public boolean hasViewTargetParams;
    public boolean hasZoomAndPanParams;
    public java.lang.String id;
    public float[] viewBox;
    public java.lang.String viewTargetParams;
    public boolean isMagnify;
    public boolean hasPreserveAspectRatio;
    public short align;
    public boolean meet;

    protected void <init>()
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        specialinvoke r0.<org.apache.batik.parser.AWTTransformProducer: void <init>()>();

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: boolean meet> = 1;

        return;
    }

    public void endTransformList() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        specialinvoke r0.<org.apache.batik.parser.AWTTransformProducer: void endTransformList()>();

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: boolean hasTransform> = 1;

        return;
    }

    public void startFragmentIdentifier() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        return;
    }

    public void idReference(java.lang.String) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: java.lang.String id> = r1;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: boolean hasId> = 1;

        return;
    }

    public void viewBox(float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        float[] $r1, $r2, $r3, $r4, $r5;
        org.apache.batik.bridge.ViewBox$ViewHandler r0;
        float f0, f1, f2, f3;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: boolean hasViewBox> = 1;

        $r1 = newarray (float)[4];

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: float[] viewBox> = $r1;

        $r2 = r0.<org.apache.batik.bridge.ViewBox$ViewHandler: float[] viewBox>;

        $r2[0] = f0;

        $r3 = r0.<org.apache.batik.bridge.ViewBox$ViewHandler: float[] viewBox>;

        $r3[1] = f1;

        $r4 = r0.<org.apache.batik.bridge.ViewBox$ViewHandler: float[] viewBox>;

        $r4[2] = f2;

        $r5 = r0.<org.apache.batik.bridge.ViewBox$ViewHandler: float[] viewBox>;

        $r5[3] = f3;

        return;
    }

    public void startViewTarget() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        return;
    }

    public void viewTarget(java.lang.String) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: java.lang.String viewTargetParams> = r1;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: boolean hasViewTargetParams> = 1;

        return;
    }

    public void endViewTarget() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        return;
    }

    public void zoomAndPan(boolean)
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;
        boolean z0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: boolean isMagnify> = z0;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: boolean hasZoomAndPanParams> = 1;

        return;
    }

    public void endFragmentIdentifier() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        return;
    }

    public void startPreserveAspectRatio() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        return;
    }

    public void none() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: short align> = 1;

        return;
    }

    public void xMaxYMax() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: short align> = 10;

        return;
    }

    public void xMaxYMid() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: short align> = 7;

        return;
    }

    public void xMaxYMin() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: short align> = 4;

        return;
    }

    public void xMidYMax() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: short align> = 9;

        return;
    }

    public void xMidYMid() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: short align> = 6;

        return;
    }

    public void xMidYMin() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: short align> = 3;

        return;
    }

    public void xMinYMax() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: short align> = 8;

        return;
    }

    public void xMinYMid() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: short align> = 5;

        return;
    }

    public void xMinYMin() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: short align> = 2;

        return;
    }

    public void meet() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: boolean meet> = 1;

        return;
    }

    public void slice() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: boolean meet> = 0;

        return;
    }

    public void endPreserveAspectRatio() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.bridge.ViewBox$ViewHandler r0;

        r0 := @this: org.apache.batik.bridge.ViewBox$ViewHandler;

        r0.<org.apache.batik.bridge.ViewBox$ViewHandler: boolean hasPreserveAspectRatio> = 1;

        return;
    }
}
