class org.apache.xml.serializer.Utils extends java.lang.Object
{

    void <init>()
    {
        org.apache.xml.serializer.Utils r0;

        r0 := @this: org.apache.xml.serializer.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.Class ClassForName(java.lang.String) throws java.lang.ClassNotFoundException
    {
        java.lang.Object $r2;
        java.lang.Class $r3, r5;
        java.lang.String r0;
        java.util.Hashtable $r1, $r4;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.xml.serializer.Utils$CacheHolder: java.util.Hashtable cache>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);

        if $r2 != null goto label1;

        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        r5 = $r3;

        $r4 = <org.apache.xml.serializer.Utils$CacheHolder: java.util.Hashtable cache>;

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r3);

        goto label2;

     label1:
        r5 = (java.lang.Class) $r2;

     label2:
        return r5;
    }
}
