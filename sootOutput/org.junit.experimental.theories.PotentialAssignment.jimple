public abstract class org.junit.experimental.theories.PotentialAssignment extends java.lang.Object
{

    public void <init>()
    {
        org.junit.experimental.theories.PotentialAssignment r0;

        r0 := @this: org.junit.experimental.theories.PotentialAssignment;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.junit.experimental.theories.PotentialAssignment forValue(java.lang.String, java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.String r2;
        org.junit.experimental.theories.PotentialAssignment$1 $r0;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        $r0 = new org.junit.experimental.theories.PotentialAssignment$1;

        specialinvoke $r0.<org.junit.experimental.theories.PotentialAssignment$1: void <init>(java.lang.Object,java.lang.String)>(r1, r2);

        return $r0;
    }

    public abstract java.lang.Object getValue() throws org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException;

    public abstract java.lang.String getDescription() throws org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException;
}
