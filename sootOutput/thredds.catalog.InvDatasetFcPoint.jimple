public class thredds.catalog.InvDatasetFcPoint extends thredds.catalog.InvDatasetFeatureCollection
{
    private static final org.slf4j.Logger logger;
    private static final java.lang.String FC;
    private static final thredds.catalog.InvService collectionService;
    private static final thredds.catalog.InvService fileService;
    private final ucar.nc2.ft.FeatureDatasetPoint fd;
    private final java.util.Set wantDatasets;

    public void <init>(thredds.catalog.InvDatasetImpl, java.lang.String, java.lang.String, ucar.nc2.constants.FeatureType, thredds.inventory.FeatureCollectionConfig)
    {
        thredds.inventory.FeatureCollectionConfig r5;
        thredds.catalog.InvDatasetFcPoint r0;
        thredds.inventory.FeatureCollectionConfig$PointConfig $r10;
        java.util.Set $r11;
        java.lang.RuntimeException $r13;
        java.lang.Exception $r12;
        java.util.Formatter $r6;
        thredds.inventory.DatasetCollectionManager $r7;
        ucar.nc2.ft.FeatureDatasetPoint $r9;
        java.lang.String r2, r3;
        thredds.catalog.InvDatasetImpl r1;
        ucar.nc2.constants.FeatureType r4;
        ucar.nc2.ft.FeatureDataset $r8;

        r0 := @this: thredds.catalog.InvDatasetFcPoint;

        r1 := @parameter0: thredds.catalog.InvDatasetImpl;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: ucar.nc2.constants.FeatureType;

        r5 := @parameter4: thredds.inventory.FeatureCollectionConfig;

        specialinvoke r0.<thredds.catalog.InvDatasetFeatureCollection: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String,ucar.nc2.constants.FeatureType,thredds.inventory.FeatureCollectionConfig)>(r1, r2, r3, r4, r5);

        $r6 = new java.util.Formatter;

        specialinvoke $r6.<java.util.Formatter: void <init>()>();

     label1:
        $r7 = r0.<thredds.catalog.InvDatasetFcPoint: thredds.inventory.DatasetCollectionManager dcm>;

        $r8 = staticinvoke <ucar.nc2.ft.point.collection.CompositeDatasetFactory: ucar.nc2.ft.FeatureDataset factory(java.lang.String,ucar.nc2.constants.FeatureType,thredds.inventory.DatasetCollectionManager,java.util.Formatter)>(r2, r4, $r7, $r6);

        $r9 = (ucar.nc2.ft.FeatureDatasetPoint) $r8;

        r0.<thredds.catalog.InvDatasetFcPoint: ucar.nc2.ft.FeatureDatasetPoint fd> = $r9;

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("InvDatasetFcPoint", $r12);

        throw $r13;

     label4:
        $r10 = r5.<thredds.inventory.FeatureCollectionConfig: thredds.inventory.FeatureCollectionConfig$PointConfig pointConfig>;

        $r11 = $r10.<thredds.inventory.FeatureCollectionConfig$PointConfig: java.util.Set datasets>;

        r0.<thredds.catalog.InvDatasetFcPoint: java.util.Set wantDatasets> = $r11;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public ucar.nc2.ft.FeatureDatasetPoint getFeatureDatasetPoint()
    {
        thredds.catalog.InvDatasetFcPoint r0;
        ucar.nc2.ft.FeatureDatasetPoint $r1;

        r0 := @this: thredds.catalog.InvDatasetFcPoint;

        $r1 = r0.<thredds.catalog.InvDatasetFcPoint: ucar.nc2.ft.FeatureDatasetPoint fd>;

        return $r1;
    }

    public void update()
    {
        thredds.catalog.InvDatasetFcPoint r0;
        ucar.nc2.ft.FeatureDatasetPoint $r1;
        ucar.nc2.ft.point.collection.UpdateableCollection $r2;

        r0 := @this: thredds.catalog.InvDatasetFcPoint;

        $r1 = r0.<thredds.catalog.InvDatasetFcPoint: ucar.nc2.ft.FeatureDatasetPoint fd>;

        $r2 = (ucar.nc2.ft.point.collection.UpdateableCollection) $r1;

        interfaceinvoke $r2.<ucar.nc2.ft.point.collection.UpdateableCollection: void update()>();

        return;
    }

    public void updateProto()
    {
        thredds.catalog.InvDatasetFcPoint r0;

        r0 := @this: thredds.catalog.InvDatasetFcPoint;

        return;
    }

    protected thredds.catalog.InvDatasetFeatureCollection$State checkState() throws java.io.IOException
    {
        thredds.catalog.ThreddsMetadata$Variables $r9;
        java.lang.Throwable $r15;
        thredds.catalog.InvDatasetFcPoint r0;
        thredds.inventory.DatasetCollectionManager $r3;
        boolean $z0;
        thredds.catalog.InvDatasetFeatureCollection$State $r2, $r4, $r5, $r7, $r14;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage $r11;
        ucar.nc2.units.DateRange $r13;
        ucar.nc2.ft.FeatureDatasetPoint $r6, $r8, $r10, $r12;
        java.lang.Object $r1;

        r0 := @this: thredds.catalog.InvDatasetFcPoint;

        $r1 = r0.<thredds.catalog.InvDatasetFcPoint: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvDatasetFeatureCollection$State state>;

        if $r2 != null goto label2;

        goto label4;

     label2:
        $r3 = r0.<thredds.catalog.InvDatasetFcPoint: thredds.inventory.DatasetCollectionManager dcm>;

        $z0 = virtualinvoke $r3.<thredds.inventory.DatasetCollectionManager: boolean rescanIfNeeded()>();

        if $z0 != 0 goto label4;

        $r14 = r0.<thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvDatasetFeatureCollection$State state>;

        exitmonitor $r1;

     label3:
        return $r14;

     label4:
        $r4 = new thredds.catalog.InvDatasetFeatureCollection$State;

        $r5 = r0.<thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvDatasetFeatureCollection$State state>;

        specialinvoke $r4.<thredds.catalog.InvDatasetFeatureCollection$State: void <init>(thredds.catalog.InvDatasetFeatureCollection,thredds.catalog.InvDatasetFeatureCollection$State)>(r0, $r5);

        specialinvoke r0.<thredds.catalog.InvDatasetFcPoint: void makeDatasets(thredds.catalog.InvDatasetFeatureCollection$State)>($r4);

        virtualinvoke r0.<thredds.catalog.InvDatasetFcPoint: void update()>();

        $r6 = r0.<thredds.catalog.InvDatasetFcPoint: ucar.nc2.ft.FeatureDatasetPoint fd>;

        if null == $r6 goto label5;

        $r8 = r0.<thredds.catalog.InvDatasetFcPoint: ucar.nc2.ft.FeatureDatasetPoint fd>;

        $r9 = staticinvoke <ucar.nc2.thredds.MetadataExtractor: thredds.catalog.ThreddsMetadata$Variables extractVariables(ucar.nc2.ft.FeatureDatasetPoint)>($r8);

        $r4.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$Variables vars> = $r9;

        $r10 = r0.<thredds.catalog.InvDatasetFcPoint: ucar.nc2.ft.FeatureDatasetPoint fd>;

        $r11 = staticinvoke <ucar.nc2.thredds.MetadataExtractor: thredds.catalog.ThreddsMetadata$GeospatialCoverage extractGeospatial(ucar.nc2.ft.FeatureDatasetPoint)>($r10);

        $r4.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$GeospatialCoverage gc> = $r11;

        $r12 = r0.<thredds.catalog.InvDatasetFcPoint: ucar.nc2.ft.FeatureDatasetPoint fd>;

        $r13 = staticinvoke <ucar.nc2.thredds.MetadataExtractor: ucar.nc2.units.DateRange extractDateRange(ucar.nc2.ft.FeatureDatasetPoint)>($r12);

        $r4.<thredds.catalog.InvDatasetFeatureCollection$State: ucar.nc2.units.DateRange dateRange> = $r13;

     label5:
        r0.<thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvDatasetFeatureCollection$State state> = $r4;

        $r7 = r0.<thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvDatasetFeatureCollection$State state>;

        exitmonitor $r1;

     label6:
        return $r7;

     label7:
        $r15 := @caughtexception;

        exitmonitor $r1;

     label8:
        throw $r15;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public thredds.catalog.InvCatalogImpl makeCatalog(java.lang.String, java.lang.String, java.net.URI)
    {
        thredds.catalog.InvDatasetFcPoint r9;
        thredds.inventory.FeatureCollectionConfig$PointDatasetType $r17;
        thredds.catalog.InvDatasetScan $r20;
        java.net.URI r6;
        boolean $z0, $z1;
        java.util.Set $r18;
        java.lang.Exception $r28;
        thredds.catalog.InvCatalogImpl $r11, $r21;
        java.lang.StringBuilder $r0, $r2, $r4, $r5, $r7, $r29, $r31, $r33;
        int $i0;
        java.lang.String r3, $r8, $r16, r19, $r27, $r32, $r34;
        thredds.catalog.InvDatasetFeatureCollection$State $r10;
        org.slf4j.Logger $r1, $r30, $r36;
        thredds.catalog.InvService $r12, $r15, $r22, $r23, $r26;
        java.io.IOException $r35;
        thredds.catalog.ThreddsMetadata $r14, $r25;
        thredds.catalog.InvDatasetImpl $r13, $r24;

        r9 := @this: thredds.catalog.InvDatasetFcPoint;

        r3 := @parameter0: java.lang.String;

        r19 := @parameter1: java.lang.String;

        r6 := @parameter2: java.net.URI;

        $r1 = <thredds.catalog.InvDatasetFcPoint: org.slf4j.Logger logger>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FcPoint make catalog for ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String)>($r8);

     label01:
        $r10 = virtualinvoke r9.<thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvDatasetFeatureCollection$State checkState()>();

     label02:
        goto label04;

     label03:
        $r35 := @caughtexception;

        $r36 = <thredds.catalog.InvDatasetFcPoint: org.slf4j.Logger logger>;

        interfaceinvoke $r36.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error in checkState", $r35);

        return null;

     label04:
        if r3 == null goto label05;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label07;

     label05:
        $r11 = virtualinvoke r9.<thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvCatalogImpl makeCatalogTop(java.net.URI,thredds.catalog.InvDatasetFeatureCollection$State)>(r6, $r10);

        $r12 = <thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvService collectionService>;

        virtualinvoke $r11.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>($r12);

        $r13 = virtualinvoke $r11.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl getDataset()>();

        $r14 = virtualinvoke $r13.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        $r15 = <thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvService collectionService>;

        $r16 = virtualinvoke $r15.<thredds.catalog.InvService: java.lang.String getName()>();

        virtualinvoke $r14.<thredds.catalog.ThreddsMetadata: void setServiceName(java.lang.String)>($r16);

        virtualinvoke $r11.<thredds.catalog.InvCatalogImpl: boolean finish()>();

     label06:
        return $r11;

     label07:
        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("files");

        if $z0 == 0 goto label11;

        $r18 = r9.<thredds.catalog.InvDatasetFcPoint: java.util.Set wantDatasets>;

        $r17 = <thredds.inventory.FeatureCollectionConfig$PointDatasetType: thredds.inventory.FeatureCollectionConfig$PointDatasetType Files>;

        $z1 = interfaceinvoke $r18.<java.util.Set: boolean contains(java.lang.Object)>($r17);

        if $z1 == 0 goto label11;

        $r20 = $r10.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.InvDatasetScan scan>;

        $r21 = virtualinvoke $r20.<thredds.catalog.InvDatasetScan: thredds.catalog.InvCatalogImpl makeCatalogForDirectory(java.lang.String,java.net.URI)>(r19, r6);

        if $r21 != null goto label09;

     label08:
        return null;

     label09:
        $r22 = <thredds.catalog.InvService: thredds.catalog.InvService latest>;

        virtualinvoke $r21.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>($r22);

        $r23 = <thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvService fileService>;

        virtualinvoke $r21.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>($r23);

        $r24 = virtualinvoke $r21.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl getDataset()>();

        $r25 = virtualinvoke $r24.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        $r26 = <thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvService fileService>;

        $r27 = virtualinvoke $r26.<thredds.catalog.InvService: java.lang.String getName()>();

        virtualinvoke $r25.<thredds.catalog.ThreddsMetadata: void setServiceName(java.lang.String)>($r27);

        virtualinvoke $r21.<thredds.catalog.InvCatalogImpl: boolean finish()>();

     label10:
        return $r21;

     label11:
        goto label13;

     label12:
        $r28 := @caughtexception;

        $r30 = <thredds.catalog.InvDatasetFcPoint: org.slf4j.Logger logger>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error making catalog for ");

        $r32 = r9.<thredds.catalog.InvDatasetFcPoint: java.lang.String path>;

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r30.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r34, $r28);

     label13:
        return null;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.Exception from label04 to label06 with label12;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Exception from label09 to label10 with label12;
    }

    private void makeDatasets(thredds.catalog.InvDatasetFeatureCollection$State)
    {
        thredds.catalog.InvDatasetFcPoint r1;
        thredds.inventory.FeatureCollectionConfig$PointDatasetType $r3, $r5;
        thredds.catalog.InvDatasetScan $r11;
        boolean $z0, $z1;
        thredds.catalog.InvCatalog $r12;
        java.util.Set $r4, $r6;
        thredds.catalog.InvDatasetFeatureCollection$ScanFilter $r9;
        thredds.catalog.InvCatalogImpl $r14;
        java.lang.StringBuilder $r13, $r16, $r17, $r18, $r27, $r29, $r30, $r31, $r34, $r36, $r37, $r38, $r40, $r41, $r42, $r43;
        java.util.regex.Pattern $r10;
        java.util.ArrayList $r0;
        java.lang.String $r2, $r8, $r15, $r19, $r20, $r23, $r25, $r28, $r32, $r33, $r35, $r39, $r44, $r48, r49;
        thredds.catalog.InvDatasetFeatureCollection$State r7;
        thredds.catalog.InvService $r22, $r24, $r47;
        thredds.catalog.ThreddsMetadata $r21, $r45, $r46;
        thredds.catalog.InvDatasetImpl $r26;

        r1 := @this: thredds.catalog.InvDatasetFcPoint;

        r7 := @parameter0: thredds.catalog.InvDatasetFeatureCollection$State;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<thredds.catalog.InvDatasetFcPoint: java.lang.String getID()>();

        r49 = $r2;

        if $r2 != null goto label1;

        r49 = virtualinvoke r1.<thredds.catalog.InvDatasetFcPoint: java.lang.String getPath()>();

     label1:
        $r4 = r1.<thredds.catalog.InvDatasetFcPoint: java.util.Set wantDatasets>;

        $r3 = <thredds.inventory.FeatureCollectionConfig$PointDatasetType: thredds.inventory.FeatureCollectionConfig$PointDatasetType cdmrFeature>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r26 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r26.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDataset,java.lang.String)>(r1, "Feature Collection");

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke r1.<thredds.catalog.InvDatasetFcPoint: java.lang.String getName()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fc.cdmr");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        $r33 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>($r32, 32, "_");

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = r1.<thredds.catalog.InvDatasetFcPoint: java.lang.String path>;

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<thredds.catalog.InvDatasetImpl: void setUrlPath(java.lang.String)>($r39);

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r49);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<thredds.catalog.InvDatasetImpl: void setID(java.lang.String)>($r44);

        $r45 = virtualinvoke $r26.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadata()>();

        virtualinvoke $r45.<thredds.catalog.ThreddsMetadata: void addDocumentation(java.lang.String,java.lang.String)>("summary", "Feature Collection. \'Nuff said");

        $r46 = virtualinvoke $r26.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        $r47 = <thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvService collectionService>;

        $r48 = virtualinvoke $r47.<thredds.catalog.InvService: java.lang.String getName()>();

        virtualinvoke $r46.<thredds.catalog.ThreddsMetadata: void setServiceName(java.lang.String)>($r48);

        virtualinvoke $r26.<thredds.catalog.InvDatasetImpl: boolean finish()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r26);

     label2:
        $r6 = r1.<thredds.catalog.InvDatasetFcPoint: java.util.Set wantDatasets>;

        $r5 = <thredds.inventory.FeatureCollectionConfig$PointDatasetType: thredds.inventory.FeatureCollectionConfig$PointDatasetType Files>;

        $z1 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        if $z1 == 0 goto label3;

        $r8 = r1.<thredds.catalog.InvDatasetFcPoint: java.lang.String topDirectory>;

        if $r8 == null goto label3;

        $r9 = new thredds.catalog.InvDatasetFeatureCollection$ScanFilter;

        $r10 = r1.<thredds.catalog.InvDatasetFcPoint: java.util.regex.Pattern filter>;

        specialinvoke $r9.<thredds.catalog.InvDatasetFeatureCollection$ScanFilter: void <init>(java.util.regex.Pattern,long)>($r10, -1L);

        $r11 = new thredds.catalog.InvDatasetScan;

        $r12 = virtualinvoke r1.<thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvCatalog getParentCatalog()>();

        $r14 = (thredds.catalog.InvCatalogImpl) $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = r1.<thredds.catalog.InvDatasetFcPoint: java.lang.String path>;

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("files");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = r1.<thredds.catalog.InvDatasetFcPoint: java.lang.String topDirectory>;

        specialinvoke $r11.<thredds.catalog.InvDatasetScan: void <init>(thredds.catalog.InvCatalogImpl,thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String,java.lang.String,thredds.crawlabledataset.CrawlableDatasetFilter,boolean,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String)>($r14, r1, "File_Access", $r19, $r20, $r9, 1, "true", 0, null, null, null);

        $r21 = virtualinvoke $r11.<thredds.catalog.InvDatasetScan: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        $r22 = <thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvService fileService>;

        $r23 = virtualinvoke $r22.<thredds.catalog.InvService: java.lang.String getName()>();

        virtualinvoke $r21.<thredds.catalog.ThreddsMetadata: void setServiceName(java.lang.String)>($r23);

        virtualinvoke $r21.<thredds.catalog.ThreddsMetadata: void addDocumentation(java.lang.String,java.lang.String)>("summary", "Individual data file, which comprise the Forecast Model Run Collection.");

        virtualinvoke $r21.<thredds.catalog.ThreddsMetadata: void setGeospatialCoverage(thredds.catalog.ThreddsMetadata$GeospatialCoverage)>(null);

        virtualinvoke $r21.<thredds.catalog.ThreddsMetadata: void setTimeCoverage(ucar.nc2.units.DateRange)>(null);

        $r24 = <thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvService fileService>;

        $r25 = virtualinvoke $r24.<thredds.catalog.InvService: java.lang.String getName()>();

        virtualinvoke $r11.<thredds.catalog.InvDatasetScan: void setServiceName(java.lang.String)>($r25);

        virtualinvoke $r11.<thredds.catalog.InvDatasetScan: boolean finish()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

        r7.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.InvDatasetScan scan> = $r11;

     label3:
        r7.<thredds.catalog.InvDatasetFeatureCollection$State: java.util.List datasets> = $r0;

        r1.<thredds.catalog.InvDatasetFcPoint: java.util.List datasets> = $r0;

        virtualinvoke r1.<thredds.catalog.InvDatasetFcPoint: boolean finish()>();

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        thredds.catalog.InvService $r1, $r4, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        thredds.catalog.ServiceType $r2, $r5;
        java.lang.String $r3, $r6;

        <thredds.catalog.InvDatasetFcPoint: java.lang.String FC> = "fc.cdmr";

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/catalog/InvDatasetFcPoint;");

        <thredds.catalog.InvDatasetFcPoint: org.slf4j.Logger logger> = $r0;

        $r1 = new thredds.catalog.InvService;

        $r2 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType COMPOUND>;

        $r3 = virtualinvoke $r2.<thredds.catalog.ServiceType: java.lang.String toString()>();

        specialinvoke $r1.<thredds.catalog.InvService: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("collectionService", $r3, "", "", "");

        <thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvService collectionService> = $r1;

        $r4 = new thredds.catalog.InvService;

        $r5 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType COMPOUND>;

        $r6 = virtualinvoke $r5.<thredds.catalog.ServiceType: java.lang.String toString()>();

        specialinvoke $r4.<thredds.catalog.InvService: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("fileService", $r6, "", "", "");

        <thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvService fileService> = $r4;

        $r8 = <thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvService collectionService>;

        $r7 = <thredds.catalog.InvService: thredds.catalog.InvService cdmrfeature>;

        virtualinvoke $r8.<thredds.catalog.InvService: void addService(thredds.catalog.InvService)>($r7);

        $r10 = <thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvService fileService>;

        $r9 = <thredds.catalog.InvService: thredds.catalog.InvService cdmremote>;

        virtualinvoke $r10.<thredds.catalog.InvService: void addService(thredds.catalog.InvService)>($r9);

        $r12 = <thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvService fileService>;

        $r11 = <thredds.catalog.InvService: thredds.catalog.InvService fileServer>;

        virtualinvoke $r12.<thredds.catalog.InvService: void addService(thredds.catalog.InvService)>($r11);

        $r14 = <thredds.catalog.InvDatasetFcPoint: thredds.catalog.InvService fileService>;

        $r13 = <thredds.catalog.InvService: thredds.catalog.InvService opendap>;

        virtualinvoke $r14.<thredds.catalog.InvService: void addService(thredds.catalog.InvService)>($r13);

        return;
    }
}
