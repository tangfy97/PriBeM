public class kodkod.ast.Decls extends kodkod.ast.Node implements java.lang.Iterable
{
    private final kodkod.ast.Decl[] decls;

    void <init>()
    {
        kodkod.ast.Decl $r2;
        kodkod.ast.Decls r0;
        kodkod.ast.Decl[] $r1;

        r0 := @this: kodkod.ast.Decls;

        specialinvoke r0.<kodkod.ast.Node: void <init>()>();

        $r1 = newarray (kodkod.ast.Decl)[1];

        $r2 = (kodkod.ast.Decl) r0;

        $r1[0] = $r2;

        r0.<kodkod.ast.Decls: kodkod.ast.Decl[] decls> = $r1;

        return;
    }

    private void <init>(kodkod.ast.Decls, kodkod.ast.Decls)
    {
        kodkod.ast.Decls r0, r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        kodkod.ast.Decl[] $r3, $r4, $r5, $r6, $r7;

        r0 := @this: kodkod.ast.Decls;

        r1 := @parameter0: kodkod.ast.Decls;

        r2 := @parameter1: kodkod.ast.Decls;

        specialinvoke r0.<kodkod.ast.Node: void <init>()>();

        $i0 = virtualinvoke r1.<kodkod.ast.Decls: int size()>();

        $i1 = virtualinvoke r2.<kodkod.ast.Decls: int size()>();

        $i2 = $i0 + $i1;

        $r3 = newarray (kodkod.ast.Decl)[$i2];

        r0.<kodkod.ast.Decls: kodkod.ast.Decl[] decls> = $r3;

        $r4 = r1.<kodkod.ast.Decls: kodkod.ast.Decl[] decls>;

        $r5 = r0.<kodkod.ast.Decls: kodkod.ast.Decl[] decls>;

        $i3 = virtualinvoke r1.<kodkod.ast.Decls: int size()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, 0, $i3);

        $r6 = r2.<kodkod.ast.Decls: kodkod.ast.Decl[] decls>;

        $r7 = r0.<kodkod.ast.Decls: kodkod.ast.Decl[] decls>;

        $i4 = virtualinvoke r1.<kodkod.ast.Decls: int size()>();

        $i5 = virtualinvoke r2.<kodkod.ast.Decls: int size()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, $i4, $i5);

        return;
    }

    public int size()
    {
        int $i0;
        kodkod.ast.Decls r0;
        kodkod.ast.Decl[] $r1;

        r0 := @this: kodkod.ast.Decls;

        $r1 = r0.<kodkod.ast.Decls: kodkod.ast.Decl[] decls>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public kodkod.ast.Decl get(int)
    {
        int i0;
        kodkod.ast.Decl $r2;
        kodkod.ast.Decls r0;
        kodkod.ast.Decl[] $r1;

        r0 := @this: kodkod.ast.Decls;

        i0 := @parameter0: int;

        $r1 = r0.<kodkod.ast.Decls: kodkod.ast.Decl[] decls>;

        $r2 = $r1[i0];

        return $r2;
    }

    public java.util.Iterator iterator()
    {
        kodkod.ast.Decls r0;
        java.util.Iterator $r2;
        kodkod.ast.Decl[] $r1;

        r0 := @this: kodkod.ast.Decls;

        $r1 = r0.<kodkod.ast.Decls: kodkod.ast.Decl[] decls>;

        $r2 = staticinvoke <kodkod.util.collections.Containers: java.util.Iterator iterate(java.lang.Object[])>($r1);

        return $r2;
    }

    public final kodkod.ast.Decls and(kodkod.ast.Decls)
    {
        kodkod.ast.Decls $r0, r1, r2;

        r1 := @this: kodkod.ast.Decls;

        r2 := @parameter0: kodkod.ast.Decls;

        $r0 = new kodkod.ast.Decls;

        specialinvoke $r0.<kodkod.ast.Decls: void <init>(kodkod.ast.Decls,kodkod.ast.Decls)>(r1, r2);

        return $r0;
    }

    public java.lang.Object accept(kodkod.ast.visitor.ReturnVisitor)
    {
        java.lang.Object $r2;
        kodkod.ast.Decls r1;
        kodkod.ast.visitor.ReturnVisitor r0;

        r1 := @this: kodkod.ast.Decls;

        r0 := @parameter0: kodkod.ast.visitor.ReturnVisitor;

        $r2 = interfaceinvoke r0.<kodkod.ast.visitor.ReturnVisitor: java.lang.Object visit(kodkod.ast.Decls)>(r1);

        return $r2;
    }

    public void accept(kodkod.ast.visitor.VoidVisitor)
    {
        kodkod.ast.Decls r1;
        kodkod.ast.visitor.VoidVisitor r0;

        r1 := @this: kodkod.ast.Decls;

        r0 := @parameter0: kodkod.ast.visitor.VoidVisitor;

        interfaceinvoke r0.<kodkod.ast.visitor.VoidVisitor: void visit(kodkod.ast.Decls)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        kodkod.ast.Decls r0;
        java.lang.String $r2;
        kodkod.ast.Decl[] $r1;

        r0 := @this: kodkod.ast.Decls;

        $r1 = r0.<kodkod.ast.Decls: kodkod.ast.Decl[] decls>;

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r1);

        return $r2;
    }
}
