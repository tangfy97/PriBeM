public class ucar.nc2.ncml.AggregationFmrc extends ucar.nc2.ncml.AggregationOuterDimension
{
    protected static java.util.Set fmrcEnhanceMode;
    private boolean debug;
    private ucar.nc2.ft.fmrc.Fmrc fmrc;
    private java.lang.String runMatcher;

    public void <init>(ucar.nc2.dataset.NetcdfDataset, java.lang.String, java.lang.String)
    {
        ucar.nc2.ncml.Aggregation$Type $r4;
        java.lang.String r2, r3;
        ucar.nc2.dataset.NetcdfDataset r1;
        ucar.nc2.ncml.AggregationFmrc r0;

        r0 := @this: ucar.nc2.ncml.AggregationFmrc;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type forecastModelRunCollection>;

        specialinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension: void <init>(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.ncml.Aggregation$Type,java.lang.String)>(r1, r2, $r4, r3);

        r0.<ucar.nc2.ncml.AggregationFmrc: boolean debug> = 0;

        return;
    }

    public void addDirectoryScanFmrc(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        ucar.nc2.ncml.AggregationFmrc r0;
        thredds.inventory.DateExtractorFromName $r8;
        thredds.inventory.DatasetCollectionManager $r7, $r9;
        java.lang.String r1, r2, r3, r4, r5, r6, r10, r11;

        r0 := @this: ucar.nc2.ncml.AggregationFmrc;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        r1 := @parameter5: java.lang.String;

        r10 := @parameter6: java.lang.String;

        r11 := @parameter7: java.lang.String;

        r0.<ucar.nc2.ncml.AggregationFmrc: java.lang.String runMatcher> = r1;

        r0.<ucar.nc2.ncml.AggregationFmrc: boolean isDate> = 1;

        $r7 = r0.<ucar.nc2.ncml.AggregationFmrc: thredds.inventory.DatasetCollectionManager datasetManager>;

        virtualinvoke $r7.<thredds.inventory.DatasetCollectionManager: void addDirectoryScan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(r2, r3, r4, r5, r6, null);

        if r1 == null goto label1;

        $r8 = new thredds.inventory.DateExtractorFromName;

        specialinvoke $r8.<thredds.inventory.DateExtractorFromName: void <init>(java.lang.String,boolean)>(r1, 0);

        $r9 = r0.<ucar.nc2.ncml.AggregationFmrc: thredds.inventory.DatasetCollectionManager datasetManager>;

        virtualinvoke $r9.<thredds.inventory.DatasetCollectionManager: void setDateExtractor(thredds.inventory.DateExtractor)>($r8);

     label1:
        return;
    }

    protected void makeDatasets(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.util.Iterator $r3;
        java.util.Set $r6;
        ucar.nc2.ncml.AggregationFmrc r0;
        java.util.List $r2;
        ucar.nc2.ncml.Aggregation$Dataset r5;
        ucar.nc2.util.CancelTask r1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: ucar.nc2.ncml.AggregationFmrc;

        r1 := @parameter0: ucar.nc2.util.CancelTask;

        specialinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension: void makeDatasets(ucar.nc2.util.CancelTask)>(r1);

        $r2 = r0.<ucar.nc2.ncml.AggregationFmrc: java.util.List datasets>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (ucar.nc2.ncml.Aggregation$Dataset) $r4;

        $r6 = <ucar.nc2.ncml.AggregationFmrc: java.util.Set fmrcEnhanceMode>;

        r5.<ucar.nc2.ncml.Aggregation$Dataset: java.util.Set enhance> = $r6;

        goto label1;

     label2:
        return;
    }

    public void getDetailInfo(java.util.Formatter)
    {
        java.lang.Object[] $r3;
        java.lang.String $r2, $r4;
        ucar.nc2.ncml.AggregationFmrc r0;
        java.util.Formatter r1;

        r0 := @this: ucar.nc2.ncml.AggregationFmrc;

        r1 := @parameter0: java.util.Formatter;

        specialinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension: void getDetailInfo(java.util.Formatter)>(r1);

        $r2 = r0.<ucar.nc2.ncml.AggregationFmrc: java.lang.String runMatcher>;

        if $r2 == null goto label1;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = r0.<ucar.nc2.ncml.AggregationFmrc: java.lang.String runMatcher>;

        $r3[0] = $r4;

        virtualinvoke r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("  runMatcher=%s%n", $r3);

     label1:
        return;
    }

    protected void buildNetcdfDataset(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        thredds.inventory.FeatureCollectionConfig $r11;
        ucar.nc2.ft.fmrc.Fmrc $r9, $r12;
        ucar.nc2.ncml.AggregationFmrc r0;
        thredds.inventory.DateExtractorFromName $r3, $r5, r8;
        thredds.inventory.DatasetCollectionManager $r10;
        ucar.nc2.util.CancelTask r7;
        java.lang.String $r1, $r2, $r4, $r6;
        ucar.nc2.dataset.NetcdfDataset $r13;

        r0 := @this: ucar.nc2.ncml.AggregationFmrc;

        r7 := @parameter0: ucar.nc2.util.CancelTask;

        r8 = null;

        $r1 = r0.<ucar.nc2.ncml.AggregationFmrc: java.lang.String runMatcher>;

        if $r1 == null goto label1;

        $r5 = new thredds.inventory.DateExtractorFromName;

        $r6 = r0.<ucar.nc2.ncml.AggregationFmrc: java.lang.String runMatcher>;

        specialinvoke $r5.<thredds.inventory.DateExtractorFromName: void <init>(java.lang.String,boolean)>($r6, 0);

        r8 = $r5;

     label1:
        if r8 != null goto label2;

        $r2 = r0.<ucar.nc2.ncml.AggregationFmrc: java.lang.String dateFormatMark>;

        if $r2 == null goto label2;

        $r3 = new thredds.inventory.DateExtractorFromName;

        $r4 = r0.<ucar.nc2.ncml.AggregationFmrc: java.lang.String dateFormatMark>;

        specialinvoke $r3.<thredds.inventory.DateExtractorFromName: void <init>(java.lang.String,boolean)>($r4, 1);

     label2:
        $r9 = new ucar.nc2.ft.fmrc.Fmrc;

        $r10 = r0.<ucar.nc2.ncml.AggregationFmrc: thredds.inventory.DatasetCollectionManager datasetManager>;

        $r11 = new thredds.inventory.FeatureCollectionConfig;

        specialinvoke $r11.<thredds.inventory.FeatureCollectionConfig: void <init>()>();

        specialinvoke $r9.<ucar.nc2.ft.fmrc.Fmrc: void <init>(thredds.inventory.DatasetCollectionManager,thredds.inventory.FeatureCollectionConfig)>($r10, $r11);

        r0.<ucar.nc2.ncml.AggregationFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc> = $r9;

        $r12 = r0.<ucar.nc2.ncml.AggregationFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        $r13 = r0.<ucar.nc2.ncml.AggregationFmrc: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        virtualinvoke $r12.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.dt.GridDataset getDataset2D(ucar.nc2.dataset.NetcdfDataset)>($r13);

        return;
    }

    protected void rebuildDataset() throws java.io.IOException
    {
        java.lang.UnsupportedOperationException $r0;
        ucar.nc2.ncml.AggregationFmrc r1;

        r1 := @this: ucar.nc2.ncml.AggregationFmrc;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        ucar.nc2.dt.GridDatatype $r2;
        java.util.Date $r13, $r21;
        java.lang.String[] r0;
        ucar.nc2.dataset.CoordinateAxis $r5;
        int $i0, $i1, i2, $i3, i4;
        java.lang.String $r15, $r23, $r24;
        ucar.nc2.dataset.CoordinateAxis1DTime $r4, $r16;
        java.io.PrintStream $r7, $r8, $r11, $r19;
        ucar.nc2.dt.grid.GridDataset $r1;
        ucar.ma2.Array $r6;
        ucar.nc2.dt.GridCoordSystem $r3;
        java.util.Date[] $r9, $r17;
        java.lang.StringBuilder $r10, $r12, $r14, $r18, $r20, $r22;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 <= 0 goto label1;

        $r24 = r0[0];

        goto label2;

     label1:
        $r24 = "C:/data/rap/fmrc.xml";

     label2:
        $r1 = staticinvoke <ucar.nc2.dt.grid.GridDataset: ucar.nc2.dt.grid.GridDataset open(java.lang.String)>($r24);

        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.GridDataset: ucar.nc2.dt.GridDatatype findGridDatatype(java.lang.String)>("T");

        $r3 = interfaceinvoke $r2.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r4 = interfaceinvoke $r3.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1DTime getRunTimeAxis()>();

        $r5 = interfaceinvoke $r3.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getTimeAxis()>();

        $r6 = virtualinvoke $r5.<ucar.nc2.dataset.CoordinateAxis: ucar.ma2.Array read()>();

        $r7 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <ucar.nc2.NCdump: void printArray(ucar.ma2.Array,java.lang.String,java.io.PrintStream,ucar.nc2.util.CancelTask)>($r6, "2D time array", $r7, null);

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("Run Time, Valid Times");

        $r9 = virtualinvoke $r4.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] getTimeDates()>();

        i2 = 0;

     label3:
        $i3 = lengthof $r9;

        if i2 >= $i3 goto label6;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = $r9[i2];

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r16 = interfaceinvoke $r3.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1DTime getTimeAxisForRun(int)>(i2);

        $r17 = virtualinvoke $r16.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] getTimeDates()>();

        i4 = 0;

     label4:
        $i1 = lengthof $r17;

        if i4 >= $i1 goto label5;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

        $r21 = $r17[i4];

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r23);

        i4 = i4 + 1;

        goto label4;

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        return;
    }

    static void <clinit>()
    {
        java.util.Set $r0;

        $r0 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: java.util.Set getDefaultEnhanceMode()>();

        <ucar.nc2.ncml.AggregationFmrc: java.util.Set fmrcEnhanceMode> = $r0;

        return;
    }
}
