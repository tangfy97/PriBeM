public class org.bouncycastle.crypto.engines.NaccacheSternEngine extends java.lang.Object implements org.bouncycastle.crypto.AsymmetricBlockCipher
{
    private boolean forEncryption;
    private org.bouncycastle.crypto.params.NaccacheSternKeyParameters key;
    private java.util.Vector[] lookup;
    private boolean debug;
    private static java.math.BigInteger ZERO;
    private static java.math.BigInteger ONE;

    public void <init>()
    {
        org.bouncycastle.crypto.engines.NaccacheSternEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.NaccacheSternEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: java.util.Vector[] lookup> = null;

        r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean debug> = 0;

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        org.bouncycastle.crypto.engines.NaccacheSternEngine r0;
        java.util.Vector $r3, $r7, $r11, $r16;
        org.bouncycastle.crypto.params.ParametersWithRandom $r27;
        java.math.BigInteger r6, $r10, $r12, $r13, $r14, $r17, $r18, $r19, r29;
        org.bouncycastle.crypto.params.NaccacheSternKeyParameters $r1, $r2;
        boolean z0, $z1, $z2, $z3, $z4;
        org.bouncycastle.crypto.CipherParameters r28;
        org.bouncycastle.crypto.params.NaccacheSternPrivateKeyParameters $r26;
        java.lang.StringBuilder $r20, $r22, $r23;
        int $i0, $i1, i2, $i3, i4;
        java.lang.String $r24;
        java.io.PrintStream $r21, $r25;
        java.util.Vector[] $r4, $r8, $r9, $r15;
        java.lang.Object $r5;

        r0 := @this: org.bouncycastle.crypto.engines.NaccacheSternEngine;

        z0 := @parameter0: boolean;

        r28 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean forEncryption> = z0;

        $z1 = r28 instanceof org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label1;

        $r27 = (org.bouncycastle.crypto.params.ParametersWithRandom) r28;

        r28 = virtualinvoke $r27.<org.bouncycastle.crypto.params.ParametersWithRandom: org.bouncycastle.crypto.CipherParameters getParameters()>();

     label1:
        $r1 = (org.bouncycastle.crypto.params.NaccacheSternKeyParameters) r28;

        r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: org.bouncycastle.crypto.params.NaccacheSternKeyParameters key> = $r1;

        $z2 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean forEncryption>;

        if $z2 != 0 goto label7;

        $z3 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean debug>;

        if $z3 == 0 goto label2;

        $r25 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>("Constructing lookup Array");

     label2:
        $r2 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: org.bouncycastle.crypto.params.NaccacheSternKeyParameters key>;

        $r26 = (org.bouncycastle.crypto.params.NaccacheSternPrivateKeyParameters) $r2;

        $r3 = virtualinvoke $r26.<org.bouncycastle.crypto.params.NaccacheSternPrivateKeyParameters: java.util.Vector getSmallPrimes()>();

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        $r4 = newarray (java.util.Vector)[$i0];

        r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: java.util.Vector[] lookup> = $r4;

        i2 = 0;

     label3:
        $i3 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if i2 >= $i3 goto label7;

        $r5 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r6 = (java.math.BigInteger) $r5;

        $i1 = virtualinvoke r6.<java.math.BigInteger: int intValue()>();

        $r8 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: java.util.Vector[] lookup>;

        $r7 = new java.util.Vector;

        specialinvoke $r7.<java.util.Vector: void <init>()>();

        $r8[i2] = $r7;

        $r9 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: java.util.Vector[] lookup>;

        $r11 = $r9[i2];

        $r10 = <org.bouncycastle.crypto.engines.NaccacheSternEngine: java.math.BigInteger ONE>;

        virtualinvoke $r11.<java.util.Vector: void addElement(java.lang.Object)>($r10);

        $z4 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean debug>;

        if $z4 == 0 goto label4;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constructing lookup ArrayList for ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r24);

     label4:
        r29 = <org.bouncycastle.crypto.engines.NaccacheSternEngine: java.math.BigInteger ZERO>;

        i4 = 1;

     label5:
        if i4 >= $i1 goto label6;

        $r12 = virtualinvoke $r26.<org.bouncycastle.crypto.params.NaccacheSternPrivateKeyParameters: java.math.BigInteger getPhi_n()>();

        $r13 = virtualinvoke r29.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r12);

        r29 = $r13;

        $r14 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(r6);

        $r15 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: java.util.Vector[] lookup>;

        $r16 = $r15[i2];

        $r17 = virtualinvoke $r26.<org.bouncycastle.crypto.params.NaccacheSternPrivateKeyParameters: java.math.BigInteger getG()>();

        $r18 = virtualinvoke $r26.<org.bouncycastle.crypto.params.NaccacheSternPrivateKeyParameters: java.math.BigInteger getModulus()>();

        $r19 = virtualinvoke $r17.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r14, $r18);

        virtualinvoke $r16.<java.util.Vector: void addElement(java.lang.Object)>($r19);

        i4 = i4 + 1;

        goto label5;

     label6:
        i2 = i2 + 1;

        goto label3;

     label7:
        return;
    }

    public void setDebug(boolean)
    {
        org.bouncycastle.crypto.engines.NaccacheSternEngine r0;
        boolean z0;

        r0 := @this: org.bouncycastle.crypto.engines.NaccacheSternEngine;

        z0 := @parameter0: boolean;

        r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean debug> = z0;

        return;
    }

    public int getInputBlockSize()
    {
        byte[] $r3;
        org.bouncycastle.crypto.engines.NaccacheSternEngine r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.math.BigInteger $r2;
        org.bouncycastle.crypto.params.NaccacheSternKeyParameters $r1, $r4;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.engines.NaccacheSternEngine;

        $z0 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: org.bouncycastle.crypto.params.NaccacheSternKeyParameters key>;

        $i1 = virtualinvoke $r4.<org.bouncycastle.crypto.params.NaccacheSternKeyParameters: int getLowerSigmaBound()>();

        $i2 = $i1 + 7;

        $i3 = $i2 / 8;

        $i4 = $i3 - 1;

        return $i4;

     label1:
        $r1 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: org.bouncycastle.crypto.params.NaccacheSternKeyParameters key>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.crypto.params.NaccacheSternKeyParameters: java.math.BigInteger getModulus()>();

        $r3 = virtualinvoke $r2.<java.math.BigInteger: byte[] toByteArray()>();

        $i0 = lengthof $r3;

        return $i0;
    }

    public int getOutputBlockSize()
    {
        byte[] $r4;
        org.bouncycastle.crypto.engines.NaccacheSternEngine r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.math.BigInteger $r3;
        org.bouncycastle.crypto.params.NaccacheSternKeyParameters $r1, $r2;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.engines.NaccacheSternEngine;

        $z0 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: org.bouncycastle.crypto.params.NaccacheSternKeyParameters key>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.crypto.params.NaccacheSternKeyParameters: java.math.BigInteger getModulus()>();

        $r4 = virtualinvoke $r3.<java.math.BigInteger: byte[] toByteArray()>();

        $i4 = lengthof $r4;

        return $i4;

     label1:
        $r1 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: org.bouncycastle.crypto.params.NaccacheSternKeyParameters key>;

        $i0 = virtualinvoke $r1.<org.bouncycastle.crypto.params.NaccacheSternKeyParameters: int getLowerSigmaBound()>();

        $i1 = $i0 + 7;

        $i2 = $i1 / 8;

        $i3 = $i2 - 1;

        return $i3;
    }

    public byte[] processBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] r2, $r79, r83, r84;
        org.bouncycastle.crypto.DataLengthException $r86;
        java.util.Vector $r7, r16, $r18, $r41, $r46, $r48, $r63, $r90;
        java.math.BigInteger $r8, $r9, $r11, $r12, $r13, $r14, $r20, $r21, $r55, $r59, $r88;
        java.lang.StringBuilder $r25, $r27, $r31, $r32, $r36, $r38, $r39, $r42, $r43, $r53, $r56, $r57, $r60, $r61, $r64, $r68, $r70, $r71, $r72, $r76, $r77, $r89, $r91, $r92, $r94, $r95, $r96;
        long $l8;
        org.bouncycastle.crypto.InvalidCipherTextException $r87, $r93, $r97;
        java.lang.String $r28, $r33, $r44, $r65, $r73, $r78;
        java.util.Vector[] $r15, $r17, $r40, $r45, $r47, $r62;
        java.lang.IllegalStateException $r85;
        org.bouncycastle.crypto.engines.NaccacheSternEngine r0;
        org.bouncycastle.crypto.params.NaccacheSternKeyParameters $r1, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.bouncycastle.crypto.params.NaccacheSternPrivateKeyParameters r6;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, $i20;
        java.io.PrintStream $r24, $r30, $r35, $r49, $r67, $r75;
        java.lang.Object $r10, $r19, $r26, $r37, $r50, $r54, $r58, $r69;

        r0 := @this: org.bouncycastle.crypto.engines.NaccacheSternEngine;

        r2 := @parameter0: byte[];

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: org.bouncycastle.crypto.params.NaccacheSternKeyParameters key>;

        if $r1 != null goto label01;

        $r85 = new java.lang.IllegalStateException;

        specialinvoke $r85.<java.lang.IllegalStateException: void <init>(java.lang.String)>("NaccacheStern engine not initialised");

        throw $r85;

     label01:
        $i1 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>();

        $i2 = $i1 + 1;

        if i0 <= $i2 goto label02;

        $r86 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r86.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input too large for Naccache-Stern cipher.\n");

        throw $r86;

     label02:
        $z0 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean forEncryption>;

        if $z0 != 0 goto label03;

        $i16 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>();

        if i0 >= $i16 goto label03;

        $r87 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r87.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("BlockLength does not match modulus for Naccache-Stern cipher.\n");

        throw $r87;

     label03:
        if i3 != 0 goto label04;

        $i15 = lengthof r2;

        if i0 == $i15 goto label05;

     label04:
        $r79 = newarray (byte)[i0];

        r83 = $r79;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i3, $r79, 0, i0);

        goto label06;

     label05:
        r83 = r2;

     label06:
        $r88 = new java.math.BigInteger;

        specialinvoke $r88.<java.math.BigInteger: void <init>(int,byte[])>(1, r83);

        $z1 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean debug>;

        if $z1 == 0 goto label07;

        $r75 = <java.lang.System: java.io.PrintStream out>;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("input as BigInteger: ");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r88);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r75.<java.io.PrintStream: void println(java.lang.String)>($r78);

     label07:
        $z2 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean forEncryption>;

        if $z2 == 0 goto label08;

        r84 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: byte[] encrypt(java.math.BigInteger)>($r88);

        goto label16;

     label08:
        $r90 = new java.util.Vector;

        specialinvoke $r90.<java.util.Vector: void <init>()>();

        $r5 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: org.bouncycastle.crypto.params.NaccacheSternKeyParameters key>;

        r6 = (org.bouncycastle.crypto.params.NaccacheSternPrivateKeyParameters) $r5;

        $r7 = virtualinvoke r6.<org.bouncycastle.crypto.params.NaccacheSternPrivateKeyParameters: java.util.Vector getSmallPrimes()>();

        i17 = 0;

     label09:
        $i4 = virtualinvoke $r7.<java.util.Vector: int size()>();

        if i17 >= $i4 goto label15;

        $r9 = virtualinvoke r6.<org.bouncycastle.crypto.params.NaccacheSternPrivateKeyParameters: java.math.BigInteger getPhi_n()>();

        $r10 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(i17);

        $r11 = (java.math.BigInteger) $r10;

        $r12 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r11);

        $r13 = virtualinvoke r6.<org.bouncycastle.crypto.params.NaccacheSternPrivateKeyParameters: java.math.BigInteger getModulus()>();

        $r14 = virtualinvoke $r88.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r12, $r13);

        $r15 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: java.util.Vector[] lookup>;

        r16 = $r15[i17];

        $r17 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: java.util.Vector[] lookup>;

        $r18 = $r17[i17];

        $i5 = virtualinvoke $r18.<java.util.Vector: int size()>();

        $r19 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(i17);

        $r20 = (java.math.BigInteger) $r19;

        $i6 = virtualinvoke $r20.<java.math.BigInteger: int intValue()>();

        if $i5 == $i6 goto label11;

        $z4 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean debug>;

        if $z4 == 0 goto label10;

        $r67 = <java.lang.System: java.io.PrintStream out>;

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Prime is ");

        $r69 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(i17);

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r69);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lookup table has size ");

        $i14 = virtualinvoke r16.<java.util.Vector: int size()>();

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>($r73);

     label10:
        $r93 = new org.bouncycastle.crypto.InvalidCipherTextException;

        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in lookup Array for ");

        $r54 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(i17);

        $r55 = (java.math.BigInteger) $r54;

        $i11 = virtualinvoke $r55.<java.math.BigInteger: int intValue()>();

        $r56 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Size mismatch. Expected ArrayList with length ");

        $r58 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(i17);

        $r59 = (java.math.BigInteger) $r58;

        $i12 = virtualinvoke $r59.<java.math.BigInteger: int intValue()>();

        $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but found ArrayList of length ");

        $r62 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: java.util.Vector[] lookup>;

        $r63 = $r62[i17];

        $i13 = virtualinvoke $r63.<java.util.Vector: int size()>();

        $r64 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r93.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>($r65);

        throw $r93;

     label11:
        $i7 = virtualinvoke r16.<java.util.Vector: int indexOf(java.lang.Object)>($r14);

        $i20 = (int) -1;

        if $i7 != $i20 goto label14;

        $z3 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean debug>;

        if $z3 == 0 goto label13;

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Actual prime is ");

        $r26 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(i17);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r28);

        $r30 = <java.lang.System: java.io.PrintStream out>;

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Decrypted value is ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r33);

        $r35 = <java.lang.System: java.io.PrintStream out>;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LookupList for ");

        $r37 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(i17);

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with size ");

        $r40 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: java.util.Vector[] lookup>;

        $r41 = $r40[i17];

        $i9 = virtualinvoke $r41.<java.util.Vector: int size()>();

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is: ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r44);

        i18 = 0;

     label12:
        $r45 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: java.util.Vector[] lookup>;

        $r46 = $r45[i17];

        $i10 = virtualinvoke $r46.<java.util.Vector: int size()>();

        if i18 >= $i10 goto label13;

        $r49 = <java.lang.System: java.io.PrintStream out>;

        $r47 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: java.util.Vector[] lookup>;

        $r48 = $r47[i17];

        $r50 = virtualinvoke $r48.<java.util.Vector: java.lang.Object elementAt(int)>(i18);

        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.Object)>($r50);

        i18 = i18 + 1;

        goto label12;

     label13:
        $r97 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r97.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("Lookup failed");

        throw $r97;

     label14:
        $l8 = (long) $i7;

        $r21 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l8);

        virtualinvoke $r90.<java.util.Vector: void addElement(java.lang.Object)>($r21);

        i17 = i17 + 1;

        goto label09;

     label15:
        $r8 = staticinvoke <org.bouncycastle.crypto.engines.NaccacheSternEngine: java.math.BigInteger chineseRemainder(java.util.Vector,java.util.Vector)>($r90, $r7);

        r84 = virtualinvoke $r8.<java.math.BigInteger: byte[] toByteArray()>();

     label16:
        return r84;
    }

    public byte[] encrypt(java.math.BigInteger)
    {
        byte[] $r3, $r10;
        org.bouncycastle.crypto.engines.NaccacheSternEngine r0;
        int $i0, $i1, $i2, $i3;
        java.math.BigInteger $r2, $r5, r6, $r8, $r9, $r14;
        org.bouncycastle.crypto.params.NaccacheSternKeyParameters $r1, $r4, $r7;
        java.lang.String $r16;
        boolean $z0;
        java.io.PrintStream $r12;
        java.lang.StringBuilder $r11, $r13, $r15;

        r0 := @this: org.bouncycastle.crypto.engines.NaccacheSternEngine;

        r6 := @parameter0: java.math.BigInteger;

        $r1 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: org.bouncycastle.crypto.params.NaccacheSternKeyParameters key>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.crypto.params.NaccacheSternKeyParameters: java.math.BigInteger getModulus()>();

        $r3 = virtualinvoke $r2.<java.math.BigInteger: byte[] toByteArray()>();

        staticinvoke <org.bouncycastle.util.Arrays: void fill(byte[],byte)>($r3, 0);

        $r4 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: org.bouncycastle.crypto.params.NaccacheSternKeyParameters key>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.crypto.params.NaccacheSternKeyParameters: java.math.BigInteger getG()>();

        $r7 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: org.bouncycastle.crypto.params.NaccacheSternKeyParameters key>;

        $r8 = virtualinvoke $r7.<org.bouncycastle.crypto.params.NaccacheSternKeyParameters: java.math.BigInteger getModulus()>();

        $r9 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>(r6, $r8);

        $r10 = virtualinvoke $r9.<java.math.BigInteger: byte[] toByteArray()>();

        $i1 = lengthof $r3;

        $i0 = lengthof $r10;

        $i3 = $i1 - $i0;

        $i2 = lengthof $r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r3, $i3, $i2);

        $z0 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean debug>;

        if $z0 == 0 goto label1;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encrypted value is:  ");

        $r14 = new java.math.BigInteger;

        specialinvoke $r14.<java.math.BigInteger: void <init>(byte[])>($r3);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label1:
        return $r3;
    }

    public byte[] addCryptedBlocks(byte[], byte[]) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] r1, r3, $r12, $r13, $r14, $r15;
        org.bouncycastle.crypto.engines.NaccacheSternEngine r0;
        java.math.BigInteger $r4, $r5, $r6, $r8, $r9, $r11;
        org.bouncycastle.crypto.params.NaccacheSternKeyParameters $r7, $r10;
        boolean $z0, $z1;
        java.lang.StringBuilder $r16, $r18, $r19, $r21, $r23, $r24, $r26, $r28, $r29;
        org.bouncycastle.crypto.InvalidCipherTextException $r2, $r31;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r20, $r25, $r30;
        java.io.PrintStream $r17, $r22, $r27;

        r0 := @this: org.bouncycastle.crypto.engines.NaccacheSternEngine;

        r1 := @parameter0: byte[];

        r3 := @parameter1: byte[];

        $z0 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean forEncryption>;

        if $z0 == 0 goto label2;

        $i8 = lengthof r1;

        $i9 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: int getOutputBlockSize()>();

        if $i8 > $i9 goto label1;

        $i10 = lengthof r3;

        $i11 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: int getOutputBlockSize()>();

        if $i10 <= $i11 goto label4;

     label1:
        $r31 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r31.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("BlockLength too large for simple addition.\n");

        throw $r31;

     label2:
        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>();

        if $i0 > $i1 goto label3;

        $i2 = lengthof r3;

        $i3 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>();

        if $i2 <= $i3 goto label4;

     label3:
        $r2 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r2.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("BlockLength too large for simple addition.\n");

        throw $r2;

     label4:
        $r4 = new java.math.BigInteger;

        specialinvoke $r4.<java.math.BigInteger: void <init>(int,byte[])>(1, r1);

        $r5 = new java.math.BigInteger;

        specialinvoke $r5.<java.math.BigInteger: void <init>(int,byte[])>(1, r3);

        $r6 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r5);

        $r7 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: org.bouncycastle.crypto.params.NaccacheSternKeyParameters key>;

        $r8 = virtualinvoke $r7.<org.bouncycastle.crypto.params.NaccacheSternKeyParameters: java.math.BigInteger getModulus()>();

        $r9 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r8);

        $z1 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean debug>;

        if $z1 == 0 goto label5;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c(m1) as BigInteger:....... ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c(m2) as BigInteger:....... ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r25);

        $r27 = <java.lang.System: java.io.PrintStream out>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c(m1)*c(m2)%n = c(m1+m2)%n: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r30);

     label5:
        $r10 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: org.bouncycastle.crypto.params.NaccacheSternKeyParameters key>;

        $r11 = virtualinvoke $r10.<org.bouncycastle.crypto.params.NaccacheSternKeyParameters: java.math.BigInteger getModulus()>();

        $r12 = virtualinvoke $r11.<java.math.BigInteger: byte[] toByteArray()>();

        staticinvoke <org.bouncycastle.util.Arrays: void fill(byte[],byte)>($r12, 0);

        $r13 = virtualinvoke $r9.<java.math.BigInteger: byte[] toByteArray()>();

        $i4 = lengthof $r12;

        $r14 = virtualinvoke $r9.<java.math.BigInteger: byte[] toByteArray()>();

        $i5 = lengthof $r14;

        $i6 = $i4 - $i5;

        $r15 = virtualinvoke $r9.<java.math.BigInteger: byte[] toByteArray()>();

        $i7 = lengthof $r15;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, $r12, $i6, $i7);

        return $r12;
    }

    public byte[] processData(byte[]) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] r1, $r2, $r35, r37, r38;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r12, $r14, $r15, $r17, $r19, $r20, $r21, $r23, $r25, $r26, $r27, $r29, $r31, $r32, $r33;
        org.bouncycastle.crypto.InvalidCipherTextException $r10;
        java.lang.String $r9, $r16, $r22, $r28, $r34;
        org.bouncycastle.crypto.engines.NaccacheSternEngine r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, $i21;
        java.io.PrintStream $r3, $r5, $r11, $r13, $r18, $r24, $r30, $r36;

        r0 := @this: org.bouncycastle.crypto.engines.NaccacheSternEngine;

        r1 := @parameter0: byte[];

        $z0 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean debug>;

        if $z0 == 0 goto label01;

        $r36 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r36.<java.io.PrintStream: void println()>();

     label01:
        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>();

        if $i0 <= $i1 goto label12;

        $i3 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>();

        $i4 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: int getOutputBlockSize()>();

        $z2 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean debug>;

        if $z2 == 0 goto label02;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input blocksize is:  ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r22);

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Output blocksize is: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r28);

        $r30 = <java.lang.System: java.io.PrintStream out>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data has length:.... ");

        $i18 = lengthof r1;

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r34);

     label02:
        i19 = 0;

        i20 = 0;

        $i5 = lengthof r1;

        $i6 = $i5 / $i3;

        $i7 = $i6 + 1;

        $i8 = $i7 * $i4;

        $r35 = newarray (byte)[$i8];

     label03:
        $i21 = lengthof r1;

        if i19 >= $i21 goto label10;

        $i11 = i19 + $i3;

        $i10 = lengthof r1;

        if $i11 >= $i10 goto label04;

        r37 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: byte[] processBlock(byte[],int,int)>(r1, i19, $i3);

        i19 = i19 + $i3;

        goto label05;

     label04:
        $i12 = lengthof r1;

        $i13 = $i12 - i19;

        r37 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: byte[] processBlock(byte[],int,int)>(r1, i19, $i13);

        $i14 = lengthof r1;

        $i15 = $i14 - i19;

        i19 = i19 + $i15;

     label05:
        $z4 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean debug>;

        if $z4 == 0 goto label06;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new datapos is ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label06:
        if r37 == null goto label07;

        $i16 = lengthof r37;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r37, 0, $r35, i20, $i16);

        $i17 = lengthof r37;

        i20 = i20 + $i17;

        goto label09;

     label07:
        $z5 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean debug>;

        if $z5 == 0 goto label08;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("cipher returned null");

     label08:
        $r10 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r10.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("cipher returned null");

        throw $r10;

     label09:
        goto label03;

     label10:
        r38 = newarray (byte)[i20];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r35, 0, r38, 0, i20);

        $z3 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean debug>;

        if $z3 == 0 goto label11;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("returning ");

        $i9 = lengthof r38;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label11:
        return r38;

     label12:
        $z1 = r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: boolean debug>;

        if $z1 == 0 goto label13;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("data size is less then input block size, processing directly");

     label13:
        $i2 = lengthof r1;

        $r2 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: byte[] processBlock(byte[],int,int)>(r1, 0, $i2);

        return $r2;
    }

    private static java.math.BigInteger chineseRemainder(java.util.Vector, java.util.Vector)
    {
        java.util.Vector r0, r7;
        int $i0, $i1, i2, i3;
        java.math.BigInteger $r1, r3, $r4, $r5, $r6, $r9, $r10, $r12, r13, r14;
        java.lang.Object $r2, $r8, $r11;

        r7 := @parameter0: java.util.Vector;

        r0 := @parameter1: java.util.Vector;

        r13 = <org.bouncycastle.crypto.engines.NaccacheSternEngine: java.math.BigInteger ZERO>;

        r14 = <org.bouncycastle.crypto.engines.NaccacheSternEngine: java.math.BigInteger ONE>;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.util.Vector: int size()>();

        if i2 >= $i0 goto label2;

        $r11 = virtualinvoke r0.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r12 = (java.math.BigInteger) $r11;

        r14 = virtualinvoke r14.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r12);

        i2 = i2 + 1;

        goto label1;

     label2:
        i3 = 0;

     label3:
        $i1 = virtualinvoke r0.<java.util.Vector: int size()>();

        if i3 >= $i1 goto label4;

        $r2 = virtualinvoke r0.<java.util.Vector: java.lang.Object elementAt(int)>(i3);

        r3 = (java.math.BigInteger) $r2;

        $r4 = virtualinvoke r14.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(r3);

        $r5 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>(r3);

        $r6 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r5);

        $r8 = virtualinvoke r7.<java.util.Vector: java.lang.Object elementAt(int)>(i3);

        $r9 = (java.math.BigInteger) $r8;

        $r10 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r9);

        r13 = virtualinvoke r13.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r10);

        i3 = i3 + 1;

        goto label3;

     label4:
        $r1 = virtualinvoke r13.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r14);

        return $r1;
    }

    static void <clinit>()
    {
        java.math.BigInteger $r0, $r1;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(0L);

        <org.bouncycastle.crypto.engines.NaccacheSternEngine: java.math.BigInteger ZERO> = $r0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        <org.bouncycastle.crypto.engines.NaccacheSternEngine: java.math.BigInteger ONE> = $r1;

        return;
    }
}
