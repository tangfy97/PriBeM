public class com.jhlabs.image.CausticsFilter extends com.jhlabs.image.WholeImageFilter
{
    private float scale;
    private float angle;
    public int brightness;
    public float amount;
    public float turbulence;
    public float dispersion;
    public float time;
    private int samples;
    private int bgColor;
    private float s;
    private float c;

    public void <init>()
    {
        com.jhlabs.image.CausticsFilter r0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        specialinvoke r0.<com.jhlabs.image.WholeImageFilter: void <init>()>();

        r0.<com.jhlabs.image.CausticsFilter: float scale> = 32.0F;

        r0.<com.jhlabs.image.CausticsFilter: float angle> = 0.0F;

        r0.<com.jhlabs.image.CausticsFilter: int brightness> = 10;

        r0.<com.jhlabs.image.CausticsFilter: float amount> = 1.0F;

        r0.<com.jhlabs.image.CausticsFilter: float turbulence> = 1.0F;

        r0.<com.jhlabs.image.CausticsFilter: float dispersion> = 0.0F;

        r0.<com.jhlabs.image.CausticsFilter: float time> = 0.0F;

        r0.<com.jhlabs.image.CausticsFilter: int samples> = 2;

        r0.<com.jhlabs.image.CausticsFilter: int bgColor> = -8806401;

        return;
    }

    public void setScale(float)
    {
        com.jhlabs.image.CausticsFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.CausticsFilter: float scale> = f0;

        return;
    }

    public float getScale()
    {
        com.jhlabs.image.CausticsFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        $f0 = r0.<com.jhlabs.image.CausticsFilter: float scale>;

        return $f0;
    }

    public void setBrightness(int)
    {
        int i0;
        com.jhlabs.image.CausticsFilter r0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.CausticsFilter: int brightness> = i0;

        return;
    }

    public int getBrightness()
    {
        int $i0;
        com.jhlabs.image.CausticsFilter r0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        $i0 = r0.<com.jhlabs.image.CausticsFilter: int brightness>;

        return $i0;
    }

    public void setTurbulence(float)
    {
        com.jhlabs.image.CausticsFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.CausticsFilter: float turbulence> = f0;

        return;
    }

    public float getTurbulence()
    {
        com.jhlabs.image.CausticsFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        $f0 = r0.<com.jhlabs.image.CausticsFilter: float turbulence>;

        return $f0;
    }

    public void setAmount(float)
    {
        com.jhlabs.image.CausticsFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.CausticsFilter: float amount> = f0;

        return;
    }

    public float getAmount()
    {
        com.jhlabs.image.CausticsFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        $f0 = r0.<com.jhlabs.image.CausticsFilter: float amount>;

        return $f0;
    }

    public void setDispersion(float)
    {
        com.jhlabs.image.CausticsFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.CausticsFilter: float dispersion> = f0;

        return;
    }

    public float getDispersion()
    {
        com.jhlabs.image.CausticsFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        $f0 = r0.<com.jhlabs.image.CausticsFilter: float dispersion>;

        return $f0;
    }

    public void setTime(float)
    {
        com.jhlabs.image.CausticsFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.CausticsFilter: float time> = f0;

        return;
    }

    public float getTime()
    {
        com.jhlabs.image.CausticsFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        $f0 = r0.<com.jhlabs.image.CausticsFilter: float time>;

        return $f0;
    }

    public void setSamples(int)
    {
        int i0;
        com.jhlabs.image.CausticsFilter r0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.CausticsFilter: int samples> = i0;

        return;
    }

    public int getSamples()
    {
        int $i0;
        com.jhlabs.image.CausticsFilter r0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        $i0 = r0.<com.jhlabs.image.CausticsFilter: int samples>;

        return $i0;
    }

    public void setBgColor(int)
    {
        int i0;
        com.jhlabs.image.CausticsFilter r0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.CausticsFilter: int bgColor> = i0;

        return;
    }

    public int getBgColor()
    {
        int $i0;
        com.jhlabs.image.CausticsFilter r0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        $i0 = r0.<com.jhlabs.image.CausticsFilter: int bgColor>;

        return $i0;
    }

    protected int[] filterPixels(int, int, int[], java.awt.Rectangle)
    {
        byte $b8, $b9, $b11, $b12, $b14, $b25, $b27, $b28, $b30;
        com.jhlabs.image.CausticsFilter r1;
        java.util.Random $r7;
        int[] r5, r6;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i10, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i29, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74;
        float $f0, $f1, $f2, $f3, $f4, f5, $f6, $f7, f8, f9, f10, $f11, f12, $f13, $f14, $f15, $f16, f17, $f18, $f19, $f20, $f21, f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, f46, f47, f48, f49, f50;
        java.awt.Rectangle $r2, $r3, r4;
        double $d0, $d1;

        r1 := @this: com.jhlabs.image.CausticsFilter;

        i43 := @parameter0: int;

        i44 := @parameter1: int;

        r6 := @parameter2: int[];

        r4 := @parameter3: java.awt.Rectangle;

        $r7 = new java.util.Random;

        specialinvoke $r7.<java.util.Random: void <init>(long)>(0L);

        $d0 = staticinvoke <java.lang.Math: double sin(double)>(0.1);

        $f0 = (float) $d0;

        r1.<com.jhlabs.image.CausticsFilter: float s> = $f0;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>(0.1);

        $f1 = (float) $d1;

        r1.<com.jhlabs.image.CausticsFilter: float c> = $f1;

        $r2 = r1.<com.jhlabs.image.WholeImageFilter: java.awt.Rectangle originalSpace>;

        i0 = $r2.<java.awt.Rectangle: int width>;

        $r3 = r1.<com.jhlabs.image.WholeImageFilter: java.awt.Rectangle originalSpace>;

        i1 = $r3.<java.awt.Rectangle: int height>;

        i2 = r4.<java.awt.Rectangle: int width>;

        i3 = r4.<java.awt.Rectangle: int height>;

        i45 = 0;

        $i4 = i2 * i3;

        r5 = newarray (int)[$i4];

        i46 = 0;

     label01:
        if i46 >= i3 goto label04;

        i47 = 0;

     label02:
        if i47 >= i2 goto label03;

        $i41 = i45;

        i45 = i45 + 1;

        $i42 = r1.<com.jhlabs.image.CausticsFilter: int bgColor>;

        r5[$i41] = $i42;

        i47 = i47 + 1;

        goto label02;

     label03:
        i46 = i46 + 1;

        goto label01;

     label04:
        $i6 = r1.<com.jhlabs.image.CausticsFilter: int brightness>;

        $i5 = r1.<com.jhlabs.image.CausticsFilter: int samples>;

        i48 = $i6 / $i5;

        if i48 != 0 goto label05;

        i48 = 1;

     label05:
        $f2 = r1.<com.jhlabs.image.CausticsFilter: float scale>;

        $f45 = 1.0F / $f2;

        i49 = 0;

     label06:
        if i49 >= i3 goto label27;

        i50 = 0;

     label07:
        if i50 >= i2 goto label26;

        i51 = 0;

     label08:
        $i7 = r1.<com.jhlabs.image.CausticsFilter: int samples>;

        if i51 >= $i7 goto label25;

        $f3 = (float) i50;

        $f4 = virtualinvoke $r7.<java.util.Random: float nextFloat()>();

        f5 = $f3 + $f4;

        $f6 = (float) i49;

        $f7 = virtualinvoke $r7.<java.util.Random: float nextFloat()>();

        f8 = $f6 + $f7;

        f9 = f5 * $f45;

        f10 = f8 * $f45;

        $f11 = r1.<com.jhlabs.image.CausticsFilter: float amount>;

        f12 = 0.1F + $f11;

        $f13 = f9 - 0.95F;

        $f14 = virtualinvoke r1.<com.jhlabs.image.CausticsFilter: float evaluate(float,float)>($f13, f10);

        $f15 = f9 + 0.95F;

        $f16 = virtualinvoke r1.<com.jhlabs.image.CausticsFilter: float evaluate(float,float)>($f15, f10);

        f17 = $f14 - $f16;

        $f18 = f10 + 0.95F;

        $f19 = virtualinvoke r1.<com.jhlabs.image.CausticsFilter: float evaluate(float,float)>(f9, $f18);

        $f20 = f10 - 0.95F;

        $f21 = virtualinvoke r1.<com.jhlabs.image.CausticsFilter: float evaluate(float,float)>(f9, $f20);

        f22 = $f19 - $f21;

        $f23 = r1.<com.jhlabs.image.CausticsFilter: float dispersion>;

        $b8 = $f23 cmpl 0.0F;

        $i66 = (int) $b8;

        if $i66 <= 0 goto label19;

        i52 = 0;

     label09:
        if i52 >= 3 goto label18;

        $f33 = (float) i52;

        $f32 = r1.<com.jhlabs.image.CausticsFilter: float dispersion>;

        $f34 = $f33 * $f32;

        f46 = 1.0F + $f34;

        $f35 = r1.<com.jhlabs.image.CausticsFilter: float scale>;

        $f36 = $f35 * f12;

        $f37 = $f36 * f17;

        $f38 = $f37 * f46;

        f47 = f5 + $f38;

        $f39 = r1.<com.jhlabs.image.CausticsFilter: float scale>;

        $f40 = $f39 * f12;

        $f41 = $f40 * f22;

        $f42 = $f41 * f46;

        f48 = f8 + $f42;

        $b25 = f47 cmpg 0.0F;

        $i67 = (int) $b25;

        if $i67 < 0 goto label17;

        $i26 = i2 - 1;

        $f43 = (float) $i26;

        $b27 = f47 cmpl $f43;

        $i68 = (int) $b27;

        if $i68 >= 0 goto label17;

        $b28 = f48 cmpg 0.0F;

        $i69 = (int) $b28;

        if $i69 < 0 goto label17;

        $i29 = i3 - 1;

        $f44 = (float) $i29;

        $b30 = f48 cmpl $f44;

        $i70 = (int) $b30;

        if $i70 < 0 goto label10;

        goto label17;

     label10:
        $i31 = (int) f48;

        $i33 = $i31 * i2;

        $i32 = (int) f47;

        i53 = $i33 + $i32;

        i54 = r5[i53];

        $i34 = i54 >> 16;

        i55 = $i34 & 255;

        $i35 = i54 >> 8;

        i56 = $i35 & 255;

        i57 = i54 & 255;

        if i52 != 2 goto label11;

        i55 = i55 + i48;

        goto label13;

     label11:
        if i52 != 1 goto label12;

        i56 = i56 + i48;

        goto label13;

     label12:
        i57 = i57 + i48;

     label13:
        if i55 <= 255 goto label14;

        i55 = 255;

     label14:
        if i56 <= 255 goto label15;

        i56 = 255;

     label15:
        if i57 <= 255 goto label16;

        i57 = 255;

     label16:
        $i36 = i55 << 16;

        $i38 = -16777216 | $i36;

        $i37 = i56 << 8;

        $i39 = $i38 | $i37;

        $i40 = $i39 | i57;

        r5[i53] = $i40;

     label17:
        i52 = i52 + 1;

        goto label09;

     label18:
        goto label24;

     label19:
        $f24 = r1.<com.jhlabs.image.CausticsFilter: float scale>;

        $f25 = $f24 * f12;

        $f26 = $f25 * f17;

        f49 = f5 + $f26;

        $f27 = r1.<com.jhlabs.image.CausticsFilter: float scale>;

        $f28 = $f27 * f12;

        $f29 = $f28 * f22;

        f50 = f8 + $f29;

        $b9 = f49 cmpg 0.0F;

        $i71 = (int) $b9;

        if $i71 < 0 goto label24;

        $i10 = i2 - 1;

        $f30 = (float) $i10;

        $b11 = f49 cmpl $f30;

        $i72 = (int) $b11;

        if $i72 >= 0 goto label24;

        $b12 = f50 cmpg 0.0F;

        $i73 = (int) $b12;

        if $i73 < 0 goto label24;

        $i13 = i3 - 1;

        $f31 = (float) $i13;

        $b14 = f50 cmpl $f31;

        $i74 = (int) $b14;

        if $i74 < 0 goto label20;

        goto label24;

     label20:
        $i15 = (int) f50;

        $i17 = $i15 * i2;

        $i16 = (int) f49;

        i58 = $i17 + $i16;

        i59 = r5[i58];

        $i18 = i59 >> 16;

        i60 = $i18 & 255;

        $i19 = i59 >> 8;

        i61 = $i19 & 255;

        i62 = i59 & 255;

        i63 = i60 + i48;

        i64 = i61 + i48;

        i65 = i62 + i48;

        if i63 <= 255 goto label21;

        i63 = 255;

     label21:
        if i64 <= 255 goto label22;

        i64 = 255;

     label22:
        if i65 <= 255 goto label23;

        i65 = 255;

     label23:
        $i20 = i63 << 16;

        $i22 = -16777216 | $i20;

        $i21 = i64 << 8;

        $i23 = $i22 | $i21;

        $i24 = $i23 | i65;

        r5[i58] = $i24;

     label24:
        i51 = i51 + 1;

        goto label08;

     label25:
        i50 = i50 + 1;

        goto label07;

     label26:
        i49 = i49 + 1;

        goto label06;

     label27:
        return r5;
    }

    private static int add(int, float)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $i1 = i0 >> 16;

        i8 = $i1 & 255;

        $i2 = i0 >> 8;

        i9 = $i2 & 255;

        i10 = i0 & 255;

        $f1 = (float) i8;

        $f2 = $f1 + f0;

        i11 = (int) $f2;

        $f3 = (float) i9;

        $f4 = $f3 + f0;

        i12 = (int) $f4;

        $f5 = (float) i10;

        $f6 = $f5 + f0;

        i13 = (int) $f6;

        if i11 <= 255 goto label1;

        i11 = 255;

     label1:
        if i12 <= 255 goto label2;

        i12 = 255;

     label2:
        if i13 <= 255 goto label3;

        i13 = 255;

     label3:
        $i3 = i11 << 16;

        $i5 = -16777216 | $i3;

        $i4 = i12 << 8;

        $i6 = $i5 | $i4;

        $i7 = $i6 | i13;

        return $i7;
    }

    private static int add(int, float, int)
    {
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        i3 := @parameter2: int;

        $i1 = i0 >> 16;

        i9 = $i1 & 255;

        $i2 = i0 >> 8;

        i10 = $i2 & 255;

        i11 = i0 & 255;

        if i3 != 2 goto label1;

        $f5 = (float) i9;

        $f6 = $f5 + f0;

        i9 = (int) $f6;

        goto label3;

     label1:
        if i3 != 1 goto label2;

        $f3 = (float) i10;

        $f4 = $f3 + f0;

        i10 = (int) $f4;

        goto label3;

     label2:
        $f1 = (float) i11;

        $f2 = $f1 + f0;

        i11 = (int) $f2;

     label3:
        if i9 <= 255 goto label4;

        i9 = 255;

     label4:
        if i10 <= 255 goto label5;

        i10 = 255;

     label5:
        if i11 <= 255 goto label6;

        i11 = 255;

     label6:
        $i4 = i9 << 16;

        $i6 = -16777216 | $i4;

        $i5 = i10 << 8;

        $i7 = $i6 | $i5;

        $i8 = $i7 | i11;

        return $i8;
    }

    public static float turbulence2(float, float, float, float)
    {
        byte $b2;
        int $i0, $i1, i3;
        float f0, $f1, f2, f3, $f4, $f5, $f6, $f7, $f8, f9, f10, f11, f12, f13, f14;

        f9 := @parameter0: float;

        f10 := @parameter1: float;

        f3 := @parameter2: float;

        f0 := @parameter3: float;

        f11 = 0.0F;

        f12 = 1.0F;

        f13 = f9 + 371.0F;

        f14 = f10 + 529.0F;

        i3 = 0;

     label1:
        $i0 = (int) f0;

        if i3 >= $i0 goto label2;

        $f7 = staticinvoke <com.jhlabs.math.Noise: float noise3(float,float,float)>(f13, f14, f3);

        $f8 = $f7 / f12;

        f11 = f11 + $f8;

        f13 = f13 * 2.0F;

        f14 = f14 * 2.0F;

        f12 = f12 * 2.0F;

        i3 = i3 + 1;

        goto label1;

     label2:
        $i1 = (int) f0;

        $f1 = (float) $i1;

        f2 = f0 - $f1;

        $b2 = f2 cmpl 0.0F;

        if $b2 == 0 goto label3;

        $f4 = staticinvoke <com.jhlabs.math.Noise: float noise3(float,float,float)>(f13, f14, f3);

        $f5 = f2 * $f4;

        $f6 = $f5 / f12;

        f11 = f11 + $f6;

     label3:
        return f11;
    }

    protected float evaluate(float, float)
    {
        com.jhlabs.image.CausticsFilter r0;
        byte $b0;
        double $d0;
        float f0, $f1, $f2, $f3, $f4, $f5, f6, $f7, $f8, $f9, $f10, $f11, f12, $f13, f14, $f15, $f16;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        f0 := @parameter0: float;

        f14 := @parameter1: float;

        $f1 = r0.<com.jhlabs.image.CausticsFilter: float s>;

        $f5 = $f1 * f0;

        $f3 = r0.<com.jhlabs.image.CausticsFilter: float c>;

        $f2 = r0.<com.jhlabs.image.CausticsFilter: float time>;

        $f4 = $f3 * $f2;

        f6 = $f5 + $f4;

        $f7 = r0.<com.jhlabs.image.CausticsFilter: float c>;

        $f11 = $f7 * f0;

        $f9 = r0.<com.jhlabs.image.CausticsFilter: float c>;

        $f8 = r0.<com.jhlabs.image.CausticsFilter: float time>;

        $f10 = $f9 * $f8;

        f12 = $f11 - $f10;

        $f13 = r0.<com.jhlabs.image.CausticsFilter: float turbulence>;

        $d0 = (double) $f13;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $f16 = staticinvoke <com.jhlabs.math.Noise: float noise3(float,float,float)>(f6, f14, f12);

        goto label2;

     label1:
        $f15 = r0.<com.jhlabs.image.CausticsFilter: float turbulence>;

        $f16 = staticinvoke <com.jhlabs.image.CausticsFilter: float turbulence2(float,float,float,float)>(f6, f14, f12, $f15);

     label2:
        return $f16;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.CausticsFilter r0;

        r0 := @this: com.jhlabs.image.CausticsFilter;

        return "Texture/Caustics...";
    }
}
