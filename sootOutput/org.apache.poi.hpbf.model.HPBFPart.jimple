public abstract class org.apache.poi.hpbf.model.HPBFPart extends java.lang.Object
{
    protected byte[] data;

    public void <init>(org.apache.poi.poifs.filesystem.DirectoryNode, java.lang.String[]) throws java.io.IOException
    {
        byte[] $r7, $r9;
        org.apache.poi.poifs.filesystem.Entry $r5;
        java.lang.String[] r1;
        int $i0, $i1, $i2;
        java.lang.String r4, $r16;
        org.apache.poi.poifs.filesystem.DocumentEntry r6;
        org.apache.poi.hpbf.model.HPBFPart r0;
        java.lang.IllegalArgumentException $r11;
        java.io.FileNotFoundException $r10;
        org.apache.poi.poifs.filesystem.DirectoryNode r2, $r3;
        java.lang.StringBuilder $r12, $r13, $r14, $r15;
        org.apache.poi.poifs.filesystem.DocumentInputStream $r8;

        r0 := @this: org.apache.poi.hpbf.model.HPBFPart;

        r2 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryNode;

        r1 := @parameter1: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = specialinvoke r0.<org.apache.poi.hpbf.model.HPBFPart: org.apache.poi.poifs.filesystem.DirectoryNode getDir(java.lang.String[],org.apache.poi.poifs.filesystem.DirectoryNode)>(r1, r2);

        $i0 = lengthof r1;

        $i1 = $i0 - 1;

        r4 = r1[$i1];

     label1:
        $r5 = virtualinvoke $r3.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>(r4);

        r6 = (org.apache.poi.poifs.filesystem.DocumentEntry) $r5;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File invalid - failed to find document entry \'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label4:
        $i2 = interfaceinvoke r6.<org.apache.poi.poifs.filesystem.DocumentEntry: int getSize()>();

        $r7 = newarray (byte)[$i2];

        r0.<org.apache.poi.hpbf.model.HPBFPart: byte[] data> = $r7;

        $r8 = virtualinvoke $r3.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.DocumentInputStream createDocumentInputStream(java.lang.String)>(r4);

        $r9 = r0.<org.apache.poi.hpbf.model.HPBFPart: byte[] data>;

        virtualinvoke $r8.<org.apache.poi.poifs.filesystem.DocumentInputStream: int read(byte[])>($r9);

        return;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    private org.apache.poi.poifs.filesystem.DirectoryNode getDir(java.lang.String[], org.apache.poi.poifs.filesystem.DirectoryNode)
    {
        org.apache.poi.poifs.filesystem.Entry $r3;
        java.lang.String[] r1;
        int $i0, $i1, i2;
        java.lang.String $r2, $r8, $r11;
        org.apache.poi.hpbf.model.HPBFPart r12;
        java.lang.IllegalArgumentException $r5;
        java.io.FileNotFoundException $r4;
        org.apache.poi.poifs.filesystem.DirectoryNode r0, r13;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;

        r12 := @this: org.apache.poi.hpbf.model.HPBFPart;

        r1 := @parameter0: java.lang.String[];

        r0 := @parameter1: org.apache.poi.poifs.filesystem.DirectoryNode;

        r13 = r0;

        i2 = 0;

     label1:
        $i0 = lengthof r1;

        $i1 = $i0 - 1;

        if i2 >= $i1 goto label6;

     label2:
        $r2 = r1[i2];

        $r3 = virtualinvoke r13.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>($r2);

        r13 = (org.apache.poi.poifs.filesystem.DirectoryNode) $r3;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File invalid - failed to find directory entry \'");

        $r8 = r1[i2];

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return r13;

        catch java.io.FileNotFoundException from label2 to label3 with label4;
    }

    public void writeOut(org.apache.poi.poifs.filesystem.DirectoryNode) throws java.io.IOException
    {
        byte[] $r4;
        org.apache.poi.poifs.filesystem.Entry $r7;
        java.lang.String[] $r1;
        java.io.ByteArrayInputStream $r3;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r5, $r6, $r9;
        org.apache.poi.hpbf.model.HPBFPart r0;
        java.io.FileNotFoundException $r8;
        org.apache.poi.poifs.filesystem.DirectoryNode r2, r10;

        r0 := @this: org.apache.poi.hpbf.model.HPBFPart;

        r2 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryNode;

        $r1 = virtualinvoke r0.<org.apache.poi.hpbf.model.HPBFPart: java.lang.String[] getPath()>();

        r10 = r2;

        i4 = 0;

     label1:
        $i0 = lengthof $r1;

        $i1 = $i0 - 1;

        if i4 >= $i1 goto label6;

     label2:
        $r6 = $r1[i4];

        $r7 = virtualinvoke r10.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>($r6);

        r10 = (org.apache.poi.poifs.filesystem.DirectoryNode) $r7;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r9 = $r1[i4];

        virtualinvoke r10.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry createDirectory(java.lang.String)>($r9);

     label5:
        i4 = i4 + 1;

        goto label1;

     label6:
        virtualinvoke r0.<org.apache.poi.hpbf.model.HPBFPart: void generateData()>();

        $r3 = new java.io.ByteArrayInputStream;

        $r4 = r0.<org.apache.poi.hpbf.model.HPBFPart: byte[] data>;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        $i2 = lengthof $r1;

        $i3 = $i2 - 1;

        $r5 = $r1[$i3];

        virtualinvoke r10.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.DocumentEntry createDocument(java.lang.String,java.io.InputStream)>($r5, $r3);

        return;

        catch java.io.FileNotFoundException from label2 to label3 with label4;
    }

    protected abstract void generateData();

    public byte[] getData()
    {
        org.apache.poi.hpbf.model.HPBFPart r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.hpbf.model.HPBFPart;

        $r1 = r0.<org.apache.poi.hpbf.model.HPBFPart: byte[] data>;

        return $r1;
    }

    public final java.lang.String[] getPath()
    {
        org.apache.poi.hpbf.model.HPBFPart r0;

        r0 := @this: org.apache.poi.hpbf.model.HPBFPart;

        return null;
    }
}
