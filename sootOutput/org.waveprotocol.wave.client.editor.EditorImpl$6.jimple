class org.waveprotocol.wave.client.editor.EditorImpl$6 extends java.lang.Object implements org.waveprotocol.wave.client.editor.extract.RepairListener
{
    final org.waveprotocol.wave.client.editor.EditorImpl this$0;

    void <init>(org.waveprotocol.wave.client.editor.EditorImpl)
    {
        org.waveprotocol.wave.client.editor.EditorImpl$6 r0;
        org.waveprotocol.wave.client.editor.EditorImpl r1;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorImpl$6;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.EditorImpl;

        r0.<org.waveprotocol.wave.client.editor.EditorImpl$6: org.waveprotocol.wave.client.editor.EditorImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onFullDocumentRevert(org.waveprotocol.wave.model.document.ReadableDocument)
    {
        org.waveprotocol.wave.client.editor.EditorInstrumentor$Action $r4;
        org.waveprotocol.wave.client.editor.EditorImpl $r1;
        org.waveprotocol.wave.model.document.ReadableDocument r5;
        org.waveprotocol.wave.client.editor.EditorImpl$6 r0;
        org.waveprotocol.wave.client.editor.EditorSettings $r2;
        org.waveprotocol.wave.client.editor.EditorInstrumentor $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorImpl$6;

        r5 := @parameter0: org.waveprotocol.wave.model.document.ReadableDocument;

        $r1 = r0.<org.waveprotocol.wave.client.editor.EditorImpl$6: org.waveprotocol.wave.client.editor.EditorImpl this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.EditorImpl: org.waveprotocol.wave.client.editor.EditorSettings access$1700(org.waveprotocol.wave.client.editor.EditorImpl)>($r1);

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.client.editor.EditorSettings: org.waveprotocol.wave.client.editor.EditorInstrumentor getInstrumentor()>();

        $r4 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action FULL_REPAIR>;

        interfaceinvoke $r3.<org.waveprotocol.wave.client.editor.EditorInstrumentor: void record(org.waveprotocol.wave.client.editor.EditorInstrumentor$Action)>($r4);

        return;
    }

    public void onRangeRevert(org.waveprotocol.wave.model.document.util.Point$El, org.waveprotocol.wave.model.document.util.Point$El)
    {
        org.waveprotocol.wave.client.editor.EditorInstrumentor$Action $r4;
        org.waveprotocol.wave.client.editor.EditorImpl $r1;
        org.waveprotocol.wave.client.editor.EditorImpl$6 r0;
        org.waveprotocol.wave.client.editor.EditorSettings $r2;
        org.waveprotocol.wave.client.editor.EditorInstrumentor $r3;
        org.waveprotocol.wave.model.document.util.Point$El r5, r6;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorImpl$6;

        r5 := @parameter0: org.waveprotocol.wave.model.document.util.Point$El;

        r6 := @parameter1: org.waveprotocol.wave.model.document.util.Point$El;

        $r1 = r0.<org.waveprotocol.wave.client.editor.EditorImpl$6: org.waveprotocol.wave.client.editor.EditorImpl this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.EditorImpl: org.waveprotocol.wave.client.editor.EditorSettings access$1700(org.waveprotocol.wave.client.editor.EditorImpl)>($r1);

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.client.editor.EditorSettings: org.waveprotocol.wave.client.editor.EditorInstrumentor getInstrumentor()>();

        $r4 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action PARTIAL_REPAIR>;

        interfaceinvoke $r3.<org.waveprotocol.wave.client.editor.EditorInstrumentor: void record(org.waveprotocol.wave.client.editor.EditorInstrumentor$Action)>($r4);

        return;
    }
}
