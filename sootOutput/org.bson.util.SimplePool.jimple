public abstract class org.bson.util.SimplePool extends java.lang.Object
{
    final int _max;
    private java.util.LinkedList _stored;

    public void <init>(int)
    {
        int i0;
        org.bson.util.SimplePool r0;
        java.util.LinkedList $r1;

        r0 := @this: org.bson.util.SimplePool;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.bson.util.SimplePool: java.util.LinkedList _stored> = $r1;

        r0.<org.bson.util.SimplePool: int _max> = i0;

        return;
    }

    public void <init>()
    {
        org.bson.util.SimplePool r0;
        java.util.LinkedList $r1;

        r0 := @this: org.bson.util.SimplePool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.bson.util.SimplePool: java.util.LinkedList _stored> = $r1;

        r0.<org.bson.util.SimplePool: int _max> = 1000;

        return;
    }

    protected abstract java.lang.Object createNew();

    protected boolean ok(java.lang.Object)
    {
        java.lang.Object r1;
        org.bson.util.SimplePool r0;

        r0 := @this: org.bson.util.SimplePool;

        r1 := @parameter0: java.lang.Object;

        return 1;
    }

    public java.lang.Object get()
    {
        java.lang.Throwable $r6;
        org.bson.util.SimplePool r0;
        int $i0;
        java.lang.Object $r3, $r5;
        java.util.LinkedList $r1, $r2, $r4;

        r0 := @this: org.bson.util.SimplePool;

        $r1 = r0.<org.bson.util.SimplePool: java.util.LinkedList _stored>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.bson.util.SimplePool: java.util.LinkedList _stored>;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i0 <= 0 goto label3;

        $r4 = r0.<org.bson.util.SimplePool: java.util.LinkedList _stored>;

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.lang.Object removeFirst()>();

        exitmonitor $r1;

     label2:
        return $r5;

     label3:
        exitmonitor $r1;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

     label7:
        $r3 = virtualinvoke r0.<org.bson.util.SimplePool: java.lang.Object createNew()>();

        return $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void done(java.lang.Object)
    {
        java.lang.Throwable $r5;
        org.bson.util.SimplePool r0;
        int $i0, $i1;
        java.lang.Object r1;
        java.util.LinkedList $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.bson.util.SimplePool;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.bson.util.SimplePool: boolean ok(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<org.bson.util.SimplePool: java.util.LinkedList _stored>;

        entermonitor $r2;

     label2:
        $r3 = r0.<org.bson.util.SimplePool: java.util.LinkedList _stored>;

        $i0 = virtualinvoke $r3.<java.util.LinkedList: int size()>();

        $i1 = r0.<org.bson.util.SimplePool: int _max>;

        if $i0 <= $i1 goto label4;

        exitmonitor $r2;

     label3:
        return;

     label4:
        $r4 = r0.<org.bson.util.SimplePool: java.util.LinkedList _stored>;

        virtualinvoke $r4.<java.util.LinkedList: void addFirst(java.lang.Object)>(r1);

        exitmonitor $r2;

     label5:
        goto label8;

     label6:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label7:
        throw $r5;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }
}
