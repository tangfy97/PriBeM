public class org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator extends java.lang.Object implements org.apache.commons.collections.MapIterator, org.apache.commons.collections.ResettableIterator
{
    protected final org.apache.commons.collections.bidimap.AbstractDualBidiMap parent;
    protected java.util.Iterator iterator;
    protected java.util.Map$Entry last;
    protected boolean canRemove;

    protected void <init>(org.apache.commons.collections.bidimap.AbstractDualBidiMap)
    {
        java.util.Map[] $r2;
        java.util.Iterator $r5;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator r0;
        java.util.Map $r3;
        java.util.Set $r4;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap r1;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator;

        r1 := @parameter0: org.apache.commons.collections.bidimap.AbstractDualBidiMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Map$Entry last> = null;

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: boolean canRemove> = 0;

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: org.apache.commons.collections.bidimap.AbstractDualBidiMap parent> = r1;

        $r2 = r1.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: java.util.Map[] maps>;

        $r3 = $r2[0];

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Iterator iterator> = $r5;

        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r1;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator;

        $r1 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Iterator iterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.Map$Entry $r3, $r4;
        java.util.Iterator $r1;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator r0;
        java.lang.Object $r2, $r5;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator;

        $r1 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Iterator iterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.Map$Entry) $r2;

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Map$Entry last> = $r3;

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: boolean canRemove> = 1;

        $r4 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Map$Entry last>;

        $r5 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r5;
    }

    public void remove()
    {
        java.lang.IllegalStateException $r7;
        java.util.Map$Entry $r1;
        java.util.Iterator $r3;
        java.util.Map[] $r5;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator r0;
        java.util.Map $r6;
        java.lang.Object $r2;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator;

        $z0 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: boolean canRemove>;

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Iterator remove() can only be called once after next()");

        throw $r7;

     label1:
        $r1 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Map$Entry last>;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r3 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Iterator iterator>;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        $r4 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: org.apache.commons.collections.bidimap.AbstractDualBidiMap parent>;

        $r5 = $r4.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: java.util.Map[] maps>;

        $r6 = $r5[1];

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Map$Entry last> = null;

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: boolean canRemove> = 0;

        return;
    }

    public java.lang.Object getKey()
    {
        java.lang.IllegalStateException $r4;
        java.util.Map$Entry $r1, $r2;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator r0;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator;

        $r1 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Map$Entry last>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Iterator getKey() can only be called after next() and before remove()");

        throw $r4;

     label1:
        $r2 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Map$Entry last>;

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r3;
    }

    public java.lang.Object getValue()
    {
        java.lang.IllegalStateException $r4;
        java.util.Map$Entry $r1, $r2;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator r0;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator;

        $r1 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Map$Entry last>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Iterator getValue() can only be called after next() and before remove()");

        throw $r4;

     label1:
        $r2 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Map$Entry last>;

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        return $r3;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        java.lang.IllegalStateException $r17;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator r0;
        java.util.Map $r5, $r12;
        boolean $z0;
        java.util.Map$Entry $r1, $r6, $r14;
        java.util.Map[] $r3, $r11;
        java.lang.IllegalArgumentException $r16;
        java.lang.Object r4, $r8, $r9, $r13, $r15;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap $r2, $r7, $r10;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator;

        r4 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Map$Entry last>;

        if $r1 != null goto label1;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Iterator setValue() can only be called after next() and before remove()");

        throw $r17;

     label1:
        $r2 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: org.apache.commons.collections.bidimap.AbstractDualBidiMap parent>;

        $r3 = $r2.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: java.util.Map[] maps>;

        $r5 = $r3[1];

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        $r10 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: org.apache.commons.collections.bidimap.AbstractDualBidiMap parent>;

        $r11 = $r10.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: java.util.Map[] maps>;

        $r12 = $r11[1];

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $r14 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Map$Entry last>;

        $r15 = interfaceinvoke $r14.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r13 == $r15 goto label2;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot use setValue() when the object being set is already in the map");

        throw $r16;

     label2:
        $r7 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: org.apache.commons.collections.bidimap.AbstractDualBidiMap parent>;

        $r6 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Map$Entry last>;

        $r8 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = virtualinvoke $r7.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r4);

        return $r9;
    }

    public void reset()
    {
        java.util.Map[] $r2;
        java.util.Iterator $r5;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator r0;
        java.util.Map $r3;
        java.util.Set $r4;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap $r1;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator;

        $r1 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: org.apache.commons.collections.bidimap.AbstractDualBidiMap parent>;

        $r2 = $r1.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: java.util.Map[] maps>;

        $r3 = $r2[0];

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Iterator iterator> = $r5;

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Map$Entry last> = null;

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: boolean canRemove> = 0;

        return;
    }

    public java.lang.String toString()
    {
        java.util.Map$Entry $r1;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator r0;
        java.lang.StringBuffer $r2, $r3, $r5, $r6, $r8, $r9;
        java.lang.Object $r4, $r7;
        java.lang.String $r10;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator;

        $r1 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.util.Map$Entry last>;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("MapIterator[");

        $r4 = virtualinvoke r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.lang.Object getKey()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r7 = virtualinvoke r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$BidiMapIterator: java.lang.Object getValue()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;

     label1:
        return "MapIterator[]";
    }
}
