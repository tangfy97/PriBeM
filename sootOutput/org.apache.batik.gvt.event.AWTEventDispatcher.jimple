public class org.apache.batik.gvt.event.AWTEventDispatcher extends org.apache.batik.gvt.event.AbstractAWTEventDispatcher
{

    public void <init>()
    {
        org.apache.batik.gvt.event.AWTEventDispatcher r0;

        r0 := @this: org.apache.batik.gvt.event.AWTEventDispatcher;

        specialinvoke r0.<org.apache.batik.gvt.event.AbstractAWTEventDispatcher: void <init>()>();

        return;
    }

    protected void dispatchKeyEvent(java.awt.event.KeyEvent)
    {
        org.apache.batik.gvt.GraphicsNode $r1, $r2, $r5;
        org.apache.batik.gvt.event.AWTEventDispatcher r0;
        long $l1;
        char $c5;
        java.awt.event.KeyEvent r4;
        org.apache.batik.gvt.event.GraphicsNodeKeyEvent $r3;
        int $i0, $i2, $i3, $i4;

        r0 := @this: org.apache.batik.gvt.event.AWTEventDispatcher;

        r4 := @parameter0: java.awt.event.KeyEvent;

        $r1 = r0.<org.apache.batik.gvt.event.AbstractAWTEventDispatcher: org.apache.batik.gvt.GraphicsNode lastHit>;

        r0.<org.apache.batik.gvt.event.AbstractAWTEventDispatcher: org.apache.batik.gvt.GraphicsNode currentKeyEventTarget> = $r1;

        $r2 = r0.<org.apache.batik.gvt.event.AbstractAWTEventDispatcher: org.apache.batik.gvt.GraphicsNode currentKeyEventTarget>;

        if $r2 != null goto label1;

        $r5 = r0.<org.apache.batik.gvt.event.AbstractAWTEventDispatcher: org.apache.batik.gvt.GraphicsNode root>;

        goto label2;

     label1:
        $r5 = r0.<org.apache.batik.gvt.event.AbstractAWTEventDispatcher: org.apache.batik.gvt.GraphicsNode currentKeyEventTarget>;

     label2:
        $r3 = new org.apache.batik.gvt.event.GraphicsNodeKeyEvent;

        $i0 = virtualinvoke r4.<java.awt.AWTEvent: int getID()>();

        $l1 = virtualinvoke r4.<java.awt.event.InputEvent: long getWhen()>();

        $i2 = virtualinvoke r4.<java.awt.event.InputEvent: int getModifiers()>();

        $i3 = virtualinvoke r0.<org.apache.batik.gvt.event.AbstractAWTEventDispatcher: int getCurrentLockState()>();

        $i4 = virtualinvoke r4.<java.awt.event.KeyEvent: int getKeyCode()>();

        $c5 = virtualinvoke r4.<java.awt.event.KeyEvent: char getKeyChar()>();

        specialinvoke $r3.<org.apache.batik.gvt.event.GraphicsNodeKeyEvent: void <init>(org.apache.batik.gvt.GraphicsNode,int,long,int,int,int,char,int)>($r5, $i0, $l1, $i2, $i3, $i4, $c5, 0);

        virtualinvoke r0.<org.apache.batik.gvt.event.AbstractAWTEventDispatcher: void processKeyEvent(org.apache.batik.gvt.event.GraphicsNodeKeyEvent)>($r3);

        return;
    }

    protected int getModifiers(java.awt.event.InputEvent)
    {
        java.awt.event.InputEvent r0;
        int $i0;
        org.apache.batik.gvt.event.AWTEventDispatcher r1;

        r1 := @this: org.apache.batik.gvt.event.AWTEventDispatcher;

        r0 := @parameter0: java.awt.event.InputEvent;

        $i0 = virtualinvoke r0.<java.awt.event.InputEvent: int getModifiers()>();

        return $i0;
    }

    protected int getButton(java.awt.event.MouseEvent)
    {
        org.apache.batik.gvt.event.AWTEventDispatcher r1;
        java.awt.event.MouseEvent r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r1 := @this: org.apache.batik.gvt.event.AWTEventDispatcher;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $i0 = virtualinvoke r0.<java.awt.event.InputEvent: int getModifiers()>();

        $i1 = $i0 & 16;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        $i2 = virtualinvoke r0.<java.awt.event.InputEvent: int getModifiers()>();

        $i3 = $i2 & 8;

        if $i3 == 0 goto label2;

        return 2;

     label2:
        $i4 = virtualinvoke r0.<java.awt.event.InputEvent: int getModifiers()>();

        $i5 = $i4 & 4;

        if $i5 == 0 goto label3;

        return 3;

     label3:
        return 0;
    }

    protected static boolean isMetaDown(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
