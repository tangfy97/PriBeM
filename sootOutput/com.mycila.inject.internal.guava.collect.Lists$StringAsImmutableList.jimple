final class com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList extends com.mycila.inject.internal.guava.collect.ImmutableList
{
    private final java.lang.String string;
    int hash;

    void <init>(java.lang.String)
    {
        com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList r0;
        java.lang.String r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableList: void <init>()>();

        r0.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: int hash> = 0;

        r0.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: java.lang.String string> = r1;

        return;
    }

    public boolean contains(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList r0;
        int $i0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: int indexOf(java.lang.Object)>(r1);

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int indexOf(java.lang.Object)
    {
        char $c0;
        com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList r1;
        java.lang.Character $r2;
        int $i1, $i2, $i4;
        java.lang.Object r0;
        java.lang.String $r3;
        boolean $z0;

        r1 := @this: com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Character;

        if $z0 == 0 goto label1;

        $r3 = r1.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: java.lang.String string>;

        $r2 = (java.lang.Character) r0;

        $c0 = virtualinvoke $r2.<java.lang.Character: char charValue()>();

        $i2 = (int) $c0;

        $i1 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>($i2);

        goto label2;

     label1:
        $i4 = (int) -1;

        $i1 = $i4;

     label2:
        return $i1;
    }

    public int lastIndexOf(java.lang.Object)
    {
        char $c0;
        com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList r1;
        java.lang.Character $r2;
        int $i1, $i2, $i4;
        java.lang.Object r0;
        java.lang.String $r3;
        boolean $z0;

        r1 := @this: com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Character;

        if $z0 == 0 goto label1;

        $r3 = r1.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: java.lang.String string>;

        $r2 = (java.lang.Character) r0;

        $c0 = virtualinvoke $r2.<java.lang.Character: char charValue()>();

        $i2 = (int) $c0;

        $i1 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(int)>($i2);

        goto label2;

     label1:
        $i4 = (int) -1;

        $i1 = $i4;

     label2:
        return $i1;
    }

    public com.mycila.inject.internal.guava.collect.UnmodifiableListIterator listIterator(int)
    {
        com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList r1;
        com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList$1 $r0;
        int $i0, i1;

        r1 := @this: com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList;

        i1 := @parameter0: int;

        $r0 = new com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList$1;

        $i0 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: int size()>();

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList$1: void <init>(com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList,int,int)>(r1, $i0, i1);

        return $r0;
    }

    public com.mycila.inject.internal.guava.collect.ImmutableList subList(int, int)
    {
        com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList r0;
        int i0, i1;
        java.lang.String $r1, $r2;
        com.mycila.inject.internal.guava.collect.ImmutableList $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: java.lang.String string>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        $r3 = staticinvoke <com.mycila.inject.internal.guava.collect.Lists: com.mycila.inject.internal.guava.collect.ImmutableList charactersOf(java.lang.String)>($r2);

        return $r3;
    }

    boolean isPartialView()
    {
        com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList;

        return 0;
    }

    public java.lang.Character get(int)
    {
        com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList r0;
        java.lang.Character $r2;
        int i0;
        char $c1;
        java.lang.String $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList;

        i0 := @parameter0: int;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: java.lang.String string>;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r2;
    }

    public int size()
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList r0;
        java.lang.String $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: java.lang.String string>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Character $r6;
        int $i0, $i1, i4, $i5, $i6;
        java.lang.String $r3, $r7;
        boolean $z0, $z1;
        java.util.Iterator $r4;
        char $c2, $c3;
        java.util.List r1;
        com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList r2;
        java.lang.Object r0, $r5;

        r2 := @this: com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.List;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (java.util.List) r0;

        $r3 = r2.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: java.lang.String string>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label2;

        return 0;

     label2:
        $r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

        i4 = 0;

     label3:
        if i4 >= $i0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $z1 = $r5 instanceof java.lang.Character;

        if $z1 == 0 goto label4;

        $r6 = (java.lang.Character) $r5;

        $c2 = virtualinvoke $r6.<java.lang.Character: char charValue()>();

        $r7 = r2.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: java.lang.String string>;

        $c3 = virtualinvoke $r7.<java.lang.String: char charAt(int)>(i4);

        $i5 = (int) $c2;

        $i6 = (int) $c3;

        if $i5 == $i6 goto label5;

     label4:
        return 0;

     label5:
        i4 = i4 + 1;

        goto label3;

     label6:
        return 1;
    }

    public int hashCode()
    {
        char $c2;
        com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList r0;
        int $i0, $i1, i3, i4, $i5;
        java.lang.String $r1, $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList;

        i3 = r0.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: int hash>;

        if i3 != 0 goto label3;

        i3 = 1;

        i4 = 0;

     label1:
        $r1 = r0.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: java.lang.String string>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i4 >= $i0 goto label2;

        $i1 = i3 * 31;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: java.lang.String string>;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i4);

        $i5 = (int) $c2;

        i3 = $i1 + $i5;

        i4 = i4 + 1;

        goto label1;

     label2:
        r0.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: int hash> = i3;

     label3:
        return i3;
    }

    public volatile java.util.List subList(int, int)
    {
        com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList r0;
        int i0, i1;
        com.mycila.inject.internal.guava.collect.ImmutableList $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList subList(int,int)>(i0, i1);

        return $r1;
    }

    public volatile java.util.ListIterator listIterator(int)
    {
        int i0;
        com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList r0;
        com.mycila.inject.internal.guava.collect.UnmodifiableListIterator $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: com.mycila.inject.internal.guava.collect.UnmodifiableListIterator listIterator(int)>(i0);

        return $r1;
    }

    public volatile java.lang.Object get(int)
    {
        int i0;
        com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList r0;
        java.lang.Character $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: java.lang.Character get(int)>(i0);

        return $r1;
    }

    static java.lang.String access$000(com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList)
    {
        com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList r0;
        java.lang.String $r1;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Lists$StringAsImmutableList: java.lang.String string>;

        return $r1;
    }
}
