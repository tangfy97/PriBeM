public class org.apache.batik.dom.AbstractDocument$DocumentConfiguration extends java.lang.Object implements org.w3c.dom.DOMConfiguration
{
    protected java.lang.String[] booleanParamNames;
    protected boolean[] booleanParamValues;
    protected boolean[] booleanParamReadOnly;
    protected java.util.Map booleanParamIndexes;
    protected java.lang.Object errorHandler;
    protected org.apache.batik.dom.AbstractDocument$DocumentConfiguration$ParameterNameList paramNameList;
    private final org.apache.batik.dom.AbstractDocument this$0;

    protected void <init>(org.apache.batik.dom.AbstractDocument)
    {
        boolean[] $r3, $r4;
        org.apache.batik.dom.AbstractDocument r1;
        java.lang.String[] $r2, $r6, $r7;
        java.util.HashMap $r5;
        java.lang.Integer $r8;
        java.util.Map $r9;
        org.apache.batik.dom.AbstractDocument$DocumentConfiguration r0;
        int $i0, i1;
        java.lang.String $r10;

        r0 := @this: org.apache.batik.dom.AbstractDocument$DocumentConfiguration;

        r1 := @parameter0: org.apache.batik.dom.AbstractDocument;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: org.apache.batik.dom.AbstractDocument this$0> = r1;

        $r2 = newarray (java.lang.String)[15];

        $r2[0] = "canonical-form";

        $r2[1] = "cdata-sections";

        $r2[2] = "check-character-normalization";

        $r2[3] = "comments";

        $r2[4] = "datatype-normalization";

        $r2[5] = "element-content-whitespace";

        $r2[6] = "entities";

        $r2[7] = "infoset";

        $r2[8] = "namespaces";

        $r2[9] = "namespace-declarations";

        $r2[10] = "normalize-characters";

        $r2[11] = "split-cdata-sections";

        $r2[12] = "validate";

        $r2[13] = "validate-if-schema";

        $r2[14] = "well-formed";

        r0.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: java.lang.String[] booleanParamNames> = $r2;

        $r3 = newarray (boolean)[15];

        $r3[0] = 0;

        $r3[1] = 1;

        $r3[2] = 0;

        $r3[3] = 1;

        $r3[4] = 0;

        $r3[5] = 0;

        $r3[6] = 1;

        $r3[7] = 0;

        $r3[8] = 1;

        $r3[9] = 1;

        $r3[10] = 0;

        $r3[11] = 1;

        $r3[12] = 0;

        $r3[13] = 0;

        $r3[14] = 1;

        r0.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: boolean[] booleanParamValues> = $r3;

        $r4 = newarray (boolean)[15];

        $r4[0] = 1;

        $r4[1] = 0;

        $r4[2] = 1;

        $r4[3] = 0;

        $r4[4] = 1;

        $r4[5] = 0;

        $r4[6] = 0;

        $r4[7] = 0;

        $r4[8] = 0;

        $r4[9] = 0;

        $r4[10] = 1;

        $r4[11] = 0;

        $r4[12] = 1;

        $r4[13] = 1;

        $r4[14] = 0;

        r0.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: boolean[] booleanParamReadOnly> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: java.util.Map booleanParamIndexes> = $r5;

        i1 = 0;

        goto label2;

     label1:
        $r9 = r0.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: java.util.Map booleanParamIndexes>;

        $r7 = r0.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: java.lang.String[] booleanParamNames>;

        $r10 = $r7[i1];

        $r8 = new java.lang.Integer;

        specialinvoke $r8.<java.lang.Integer: void <init>(int)>(i1);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r8);

        i1 = i1 + 1;

     label2:
        $r6 = r0.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: java.lang.String[] booleanParamNames>;

        $i0 = lengthof $r6;

        if i1 < $i0 goto label1;

        return;
    }

    public void setParameter(java.lang.String, java.lang.Object)
    {
        java.lang.Integer r5;
        java.util.Map $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object[] $r19, $r22, $r25, $r28, $r31;
        org.w3c.dom.DOMException $r21, $r24, $r27, $r30, $r33;
        org.apache.batik.dom.AbstractDocument$DocumentConfiguration r2;
        int $i0;
        java.lang.Boolean $r7, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.String r0, $r1;
        boolean[] $r8, $r9, $r18;
        org.apache.batik.dom.AbstractDocument $r20, $r23, $r26, $r29, $r32;
        java.lang.Object $r4, r6;

        r2 := @this: org.apache.batik.dom.AbstractDocument$DocumentConfiguration;

        r0 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.Object;

        $r1 = "error-handler";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        if r6 == null goto label1;

        $z6 = r6 instanceof org.w3c.dom.DOMErrorHandler;

        if $z6 != 0 goto label1;

        $r32 = r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: org.apache.batik.dom.AbstractDocument this$0>;

        $r31 = newarray (java.lang.Object)[1];

        $r31[0] = r0;

        $r33 = virtualinvoke $r32.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(17, "domconfig.param.type", $r31);

        throw $r33;

     label1:
        r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: java.lang.Object errorHandler> = r6;

        return;

     label2:
        $r3 = r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: java.util.Map booleanParamIndexes>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r5 = (java.lang.Integer) $r4;

        if r5 != null goto label3;

        $r29 = r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: org.apache.batik.dom.AbstractDocument this$0>;

        $r28 = newarray (java.lang.Object)[1];

        $r28[0] = r0;

        $r30 = virtualinvoke $r29.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(8, "domconfig.param.not.found", $r28);

        throw $r30;

     label3:
        if r6 != null goto label4;

        $r26 = r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: org.apache.batik.dom.AbstractDocument this$0>;

        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = r0;

        $r27 = virtualinvoke $r26.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(9, "domconfig.param.value", $r25);

        throw $r27;

     label4:
        $z1 = r6 instanceof java.lang.Boolean;

        if $z1 != 0 goto label5;

        $r23 = r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: org.apache.batik.dom.AbstractDocument this$0>;

        $r22 = newarray (java.lang.Object)[1];

        $r22[0] = r0;

        $r24 = virtualinvoke $r23.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(17, "domconfig.param.type", $r22);

        throw $r24;

     label5:
        $i0 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        $r7 = (java.lang.Boolean) r6;

        $z2 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        $r8 = r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: boolean[] booleanParamReadOnly>;

        $z3 = $r8[$i0];

        if $z3 == 0 goto label6;

        $r18 = r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: boolean[] booleanParamValues>;

        $z5 = $r18[$i0];

        if $z5 == $z2 goto label6;

        $r20 = r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: org.apache.batik.dom.AbstractDocument this$0>;

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = r0;

        $r21 = virtualinvoke $r20.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(9, "domconfig.param.value", $r19);

        throw $r21;

     label6:
        $r9 = r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: boolean[] booleanParamValues>;

        $r9[$i0] = $z2;

        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("infoset");

        if $z4 == 0 goto label7;

        $r10 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: void setParameter(java.lang.String,java.lang.Object)>("validate-if-schema", $r10);

        $r11 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: void setParameter(java.lang.String,java.lang.Object)>("entities", $r11);

        $r12 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: void setParameter(java.lang.String,java.lang.Object)>("datatype-normalization", $r12);

        $r13 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: void setParameter(java.lang.String,java.lang.Object)>("cdata-sections", $r13);

        $r14 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: void setParameter(java.lang.String,java.lang.Object)>("well-formed", $r14);

        $r15 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: void setParameter(java.lang.String,java.lang.Object)>("element-content-whitespace", $r15);

        $r16 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: void setParameter(java.lang.String,java.lang.Object)>("comments", $r16);

        $r17 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: void setParameter(java.lang.String,java.lang.Object)>("namespaces", $r17);

     label7:
        return;
    }

    public java.lang.Object getParameter(java.lang.String)
    {
        java.lang.Object[] $r7;
        boolean[] $r6;
        org.apache.batik.dom.AbstractDocument $r8;
        java.lang.Integer r5;
        java.util.Map $r3;
        org.w3c.dom.DOMException $r9;
        org.apache.batik.dom.AbstractDocument$DocumentConfiguration r2;
        int $i0;
        java.lang.Boolean $r11;
        java.lang.Object $r4, $r10;
        java.lang.String r0, $r1;
        boolean $z0, $z1;

        r2 := @this: org.apache.batik.dom.AbstractDocument$DocumentConfiguration;

        r0 := @parameter0: java.lang.String;

        $r1 = "error-handler";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r10 = r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: java.lang.Object errorHandler>;

        return $r10;

     label1:
        $r3 = r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: java.util.Map booleanParamIndexes>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r5 = (java.lang.Integer) $r4;

        if r5 != null goto label2;

        $r8 = r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: org.apache.batik.dom.AbstractDocument this$0>;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r0;

        $r9 = virtualinvoke $r8.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(8, "domconfig.param.not.found", $r7);

        throw $r9;

     label2:
        $r6 = r2.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: boolean[] booleanParamValues>;

        $i0 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        $z1 = $r6[$i0];

        if $z1 == 0 goto label3;

        $r11 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label4;

     label3:
        $r11 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label4:
        return $r11;
    }

    public boolean getBooleanParameter(java.lang.String)
    {
        org.apache.batik.dom.AbstractDocument$DocumentConfiguration r0;
        java.lang.Boolean r3;
        java.lang.Object $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.AbstractDocument$DocumentConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: java.lang.Object getParameter(java.lang.String)>(r1);

        r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public boolean canSetParameter(java.lang.String, java.lang.Object)
    {
        java.lang.Integer r4;
        java.util.Map $r2;
        org.apache.batik.dom.AbstractDocument$DocumentConfiguration r1;
        int $i0;
        java.lang.Boolean $r6;
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        boolean[] $r7, $r8;
        java.lang.Object $r3, r5;

        r1 := @this: org.apache.batik.dom.AbstractDocument$DocumentConfiguration;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("error-handler");

        if $z0 == 0 goto label4;

        if r5 == null goto label1;

        $z5 = r5 instanceof org.w3c.dom.DOMErrorHandler;

        if $z5 == 0 goto label2;

     label1:
        $z6 = 1;

        goto label3;

     label2:
        $z6 = 0;

     label3:
        return $z6;

     label4:
        $r2 = r1.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: java.util.Map booleanParamIndexes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r4 = (java.lang.Integer) $r3;

        if r4 == null goto label5;

        if r5 == null goto label5;

        $z1 = r5 instanceof java.lang.Boolean;

        if $z1 != 0 goto label6;

     label5:
        return 0;

     label6:
        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $r6 = (java.lang.Boolean) r5;

        $z2 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        $r7 = r1.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: boolean[] booleanParamReadOnly>;

        $z3 = $r7[$i0];

        if $z3 == 0 goto label7;

        $r8 = r1.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: boolean[] booleanParamValues>;

        $z4 = $r8[$i0];

        if $z4 != $z2 goto label8;

     label7:
        $z7 = 1;

        goto label9;

     label8:
        $z7 = 0;

     label9:
        return $z7;
    }

    public org.w3c.dom.DOMStringList getParameterNames()
    {
        org.apache.batik.dom.AbstractDocument$DocumentConfiguration r0;
        org.apache.batik.dom.AbstractDocument$DocumentConfiguration$ParameterNameList $r1, $r2, $r3;

        r0 := @this: org.apache.batik.dom.AbstractDocument$DocumentConfiguration;

        $r1 = r0.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: org.apache.batik.dom.AbstractDocument$DocumentConfiguration$ParameterNameList paramNameList>;

        if $r1 != null goto label1;

        $r3 = new org.apache.batik.dom.AbstractDocument$DocumentConfiguration$ParameterNameList;

        specialinvoke $r3.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration$ParameterNameList: void <init>(org.apache.batik.dom.AbstractDocument$DocumentConfiguration)>(r0);

        r0.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: org.apache.batik.dom.AbstractDocument$DocumentConfiguration$ParameterNameList paramNameList> = $r3;

     label1:
        $r2 = r0.<org.apache.batik.dom.AbstractDocument$DocumentConfiguration: org.apache.batik.dom.AbstractDocument$DocumentConfiguration$ParameterNameList paramNameList>;

        return $r2;
    }
}
