public class ucar.nc2.geotiff.GeotiffWriter extends java.lang.Object
{
    private java.lang.String fileOut;
    private ucar.nc2.geotiff.GeoTiff geotiff;
    private short pageNumber;

    public void <init>(java.lang.String)
    {
        ucar.nc2.geotiff.GeoTiff $r2;
        java.lang.String r1;
        ucar.nc2.geotiff.GeotiffWriter r0;

        r0 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.geotiff.GeotiffWriter: short pageNumber> = 1;

        r0.<ucar.nc2.geotiff.GeotiffWriter: java.lang.String fileOut> = r1;

        $r2 = new ucar.nc2.geotiff.GeoTiff;

        specialinvoke $r2.<ucar.nc2.geotiff.GeoTiff: void <init>(java.lang.String)>(r1);

        r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff> = $r2;

        return;
    }

    public void writeGrid(ucar.nc2.dt.GridDataset, ucar.nc2.dt.GridDatatype, ucar.ma2.Array, boolean) throws java.io.IOException
    {
        ucar.nc2.dt.GridDatatype r0;
        ucar.nc2.geotiff.GeoTiff $r13;
        ucar.nc2.dataset.CoordinateAxis $r2, $r4;
        byte $b0;
        ucar.nc2.dataset.CoordinateAxis1D r3, r5;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        ucar.nc2.dt.GridCoordSystem $r1;
        java.lang.StringBuilder $r8, $r10, $r17, $r19, $r23, $r25;
        long $l6;
        short $s1, $s2, $s3, $s5;
        int $i4, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String $r9, $r11, $r18, $r20;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d11, d12, $d13, $d14, $d15, $d16, $d17;
        ucar.nc2.geotiff.GeotiffWriter r12;
        java.lang.IllegalArgumentException $r24, $r26;
        ucar.ma2.Array $r14, r22;
        ucar.nc2.dt.GridDataset r21;

        r12 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r21 := @parameter0: ucar.nc2.dt.GridDataset;

        r0 := @parameter1: ucar.nc2.dt.GridDatatype;

        r22 := @parameter2: ucar.ma2.Array;

        z5 := @parameter3: boolean;

        $r1 = interfaceinvoke r0.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $z0 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: boolean isRegularSpatial()>();

        if $z0 != 0 goto label1;

        $r24 = new java.lang.IllegalArgumentException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must have 1D x and y axes for ");

        $r18 = interfaceinvoke r0.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r24;

     label1:
        $r2 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getXHorizAxis()>();

        r3 = (ucar.nc2.dataset.CoordinateAxis1D) $r2;

        $r4 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getYHorizAxis()>();

        r5 = (ucar.nc2.dataset.CoordinateAxis1D) $r4;

        $z1 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: boolean isLatLon()>();

        if $z1 == 0 goto label2;

        $d17 = 1.0;

        $d16 = 1.0;

        $d15 = 1.0;

        $d14 = 1.0;

        $d13 = 1.0;

        goto label3;

     label2:
        $d17 = 1000.0;

        $d16 = 1000.0;

        $d15 = 1000.0;

        $d14 = 1000.0;

        $d13 = 1000.0;

     label3:
        $d0 = virtualinvoke r3.<ucar.nc2.dataset.CoordinateAxis1D: double getCoordValue(int)>(0);

        d11 = $d0 * $d14;

        $d1 = virtualinvoke r5.<ucar.nc2.dataset.CoordinateAxis1D: double getCoordValue(int)>(0);

        d12 = $d1 * $d13;

        $d2 = virtualinvoke r3.<ucar.nc2.dataset.CoordinateAxis1D: double getIncrement()>();

        $d8 = $d2 * $d17;

        $d3 = virtualinvoke r5.<ucar.nc2.dataset.CoordinateAxis1D: double getIncrement()>();

        $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3);

        $d9 = $d4 * $d16;

        $d5 = virtualinvoke r5.<ucar.nc2.dataset.CoordinateAxis1D: double getCoordValue(int)>(0);

        $d6 = virtualinvoke r5.<ucar.nc2.dataset.CoordinateAxis1D: double getCoordValue(int)>(1);

        $b0 = $d5 cmpg $d6;

        $i9 = (int) $b0;

        if $i9 >= 0 goto label4;

        r22 = virtualinvoke r22.<ucar.ma2.Array: ucar.ma2.Array flip(int)>(0);

        $l6 = virtualinvoke r5.<ucar.nc2.dataset.CoordinateAxis1D: long getSize()>();

        $i7 = (int) $l6;

        $i8 = $i7 - 1;

        $d7 = virtualinvoke r5.<ucar.nc2.dataset.CoordinateAxis1D: double getCoordValue(int)>($i8);

        d12 = $d7 * $d15;

     label4:
        $z2 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: boolean isLatLon()>();

        if $z2 == 0 goto label5;

        $r14 = virtualinvoke r3.<ucar.nc2.dataset.CoordinateAxis1D: ucar.ma2.Array read()>();

        r22 = specialinvoke r12.<ucar.nc2.geotiff.GeotiffWriter: ucar.ma2.Array geoShiftDataAtLon(ucar.ma2.Array,ucar.ma2.Array)>(r22, $r14);

        d11 = specialinvoke r12.<ucar.nc2.geotiff.GeotiffWriter: double geoShiftGetXstart(ucar.ma2.Array,double)>($r14, $d8);

     label5:
        $z3 = virtualinvoke r3.<ucar.nc2.dataset.CoordinateAxis1D: boolean isRegular()>();

        if $z3 == 0 goto label6;

        $z4 = virtualinvoke r5.<ucar.nc2.dataset.CoordinateAxis1D: boolean isRegular()>();

        if $z4 != 0 goto label7;

     label6:
        $r26 = new java.lang.IllegalArgumentException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must be evenly spaced grid = ");

        $r9 = interfaceinvoke r0.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r26;

     label7:
        $s1 = r12.<ucar.nc2.geotiff.GeotiffWriter: short pageNumber>;

        $i10 = (int) $s1;

        if $i10 <= 1 goto label8;

        $r13 = r12.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        virtualinvoke $r13.<ucar.nc2.geotiff.GeoTiff: void initTags()>();

     label8:
        $s2 = r12.<ucar.nc2.geotiff.GeotiffWriter: short pageNumber>;

        $i11 = (int) $s2;

        virtualinvoke r12.<ucar.nc2.geotiff.GeotiffWriter: void writeGrid(ucar.nc2.dt.GridDatatype,ucar.ma2.Array,boolean,double,double,double,double,int)>(r0, r22, z5, d11, d12, $d8, $d9, $i11);

        $s3 = r12.<ucar.nc2.geotiff.GeotiffWriter: short pageNumber>;

        $i12 = (int) $s3;

        $i4 = $i12 + 1;

        $s5 = (short) $i4;

        r12.<ucar.nc2.geotiff.GeotiffWriter: short pageNumber> = $s5;

        return;
    }

    public void writeGrid(java.lang.String, java.lang.String, int, int, boolean, ucar.unidata.geoloc.LatLonRect) throws java.io.IOException
    {
        ucar.nc2.dt.GridDatatype $r3;
        ucar.nc2.dataset.CoordinateAxis $r6, $r7;
        byte $b2;
        ucar.unidata.geoloc.ProjectionPointImpl $r24, $r30;
        ucar.nc2.dt.grid.GridDataset $r1;
        ucar.nc2.Attribute $r31;
        ucar.nc2.dt.GridCoordSystem $r4;
        java.lang.StringBuilder $r11, $r13, $r34, $r36, $r41, $r42, $r43, $r50, $r52, $r54;
        double[] $r26, r27, $r29, r49;
        short $s3, $s4, $s5, $s7;
        java.lang.String r0, r2, $r12, $r14, $r35, $r37, $r38, $r44;
        ucar.nc2.geotiff.GeotiffWriter r21;
        ucar.ma2.Array $r15, $r16, $r17, $r22, r46, r47, r48;
        ucar.unidata.geoloc.LatLonRect r18;
        ucar.unidata.geoloc.LatLonPointImpl $r19, $r20;
        ucar.nc2.geotiff.GeoTiff $r23;
        ucar.unidata.geoloc.ProjectionImpl $r5;
        ucar.nc2.dataset.CoordinateAxis1D r8, r45;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7;
        int i0, i1, $i6, i8, i9, i10, i11, $i13, $i15, $i16, $i17, $i18, $i19;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17, d18, d19, d20, d21;
        java.lang.IllegalArgumentException $r51, $r53, $r55;
        java.lang.Object $r25, $r28;

        r21 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z6 := @parameter4: boolean;

        r18 := @parameter5: ucar.unidata.geoloc.LatLonRect;

        $r1 = staticinvoke <ucar.nc2.dt.grid.GridDataset: ucar.nc2.dt.grid.GridDataset open(java.lang.String)>(r0);

        $r3 = interfaceinvoke $r1.<ucar.nc2.dt.GridDataset: ucar.nc2.dt.GridDatatype findGridDatatype(java.lang.String)>(r2);

        $r4 = interfaceinvoke $r3.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r5 = interfaceinvoke $r3.<ucar.nc2.dt.GridDatatype: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        if $r3 != null goto label01;

        $r51 = new java.lang.IllegalArgumentException;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No grid named ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in fileName");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r51.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r44);

        throw $r51;

     label01:
        $z0 = interfaceinvoke $r4.<ucar.nc2.dt.GridCoordSystem: boolean isRegularSpatial()>();

        if $z0 != 0 goto label03;

        $r31 = interfaceinvoke $r1.<ucar.nc2.dt.GridDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("datasetId");

        if $r31 == null goto label02;

        $r38 = virtualinvoke $r31.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z7 = virtualinvoke $r38.<java.lang.String: boolean contains(java.lang.CharSequence)>("DMSP");

        if $z7 == 0 goto label02;

        virtualinvoke r21.<ucar.nc2.geotiff.GeotiffWriter: void writeSwathGrid(java.lang.String,java.lang.String,int,int,boolean,ucar.unidata.geoloc.LatLonRect)>(r0, r2, i0, i1, z6, r18);

        return;

     label02:
        $r53 = new java.lang.IllegalArgumentException;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must have 1D x and y axes for ");

        $r35 = interfaceinvoke $r3.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r53.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r37);

        throw $r53;

     label03:
        $r6 = interfaceinvoke $r4.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getXHorizAxis()>();

        r45 = (ucar.nc2.dataset.CoordinateAxis1D) $r6;

        $r7 = interfaceinvoke $r4.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getYHorizAxis()>();

        r8 = (ucar.nc2.dataset.CoordinateAxis1D) $r7;

        $z1 = virtualinvoke r45.<ucar.nc2.dataset.CoordinateAxis1D: boolean isRegular()>();

        if $z1 == 0 goto label04;

        $z2 = virtualinvoke r8.<ucar.nc2.dataset.CoordinateAxis1D: boolean isRegular()>();

        if $z2 != 0 goto label05;

     label04:
        $r55 = new java.lang.IllegalArgumentException;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must be evenly spaced grid = ");

        $r12 = interfaceinvoke $r3.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r55.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r55;

     label05:
        $i13 = (int) -1;

        $i15 = (int) -1;

        $r15 = interfaceinvoke $r3.<ucar.nc2.dt.GridDatatype: ucar.ma2.Array readDataSlice(int,int,int,int)>(i0, i1, $i13, $i15);

        r46 = $r15;

        $r16 = virtualinvoke r45.<ucar.nc2.dataset.CoordinateAxis1D: ucar.ma2.Array read()>();

        r47 = $r16;

        $r17 = virtualinvoke r8.<ucar.nc2.dataset.CoordinateAxis1D: ucar.ma2.Array read()>();

        r48 = $r17;

        $z3 = interfaceinvoke $r4.<ucar.nc2.dt.GridCoordSystem: boolean isLatLon()>();

        if $z3 == 0 goto label06;

        d17 = 1.0;

        d21 = 1.0;

        d20 = 1.0;

        goto label07;

     label06:
        d17 = 1000.0;

        d21 = 1000.0;

        d20 = 1000.0;

     label07:
        $d0 = virtualinvoke r8.<ucar.nc2.dataset.CoordinateAxis1D: double getCoordValue(int)>(0);

        $d1 = virtualinvoke r8.<ucar.nc2.dataset.CoordinateAxis1D: double getCoordValue(int)>(1);

        $b2 = $d0 cmpg $d1;

        $i16 = (int) $b2;

        if $i16 >= 0 goto label08;

        r46 = virtualinvoke $r15.<ucar.ma2.Array: ucar.ma2.Array flip(int)>(0);

        r48 = virtualinvoke $r17.<ucar.ma2.Array: ucar.ma2.Array flip(int)>(0);

     label08:
        $z4 = interfaceinvoke $r4.<ucar.nc2.dt.GridCoordSystem: boolean isLatLon()>();

        if $z4 == 0 goto label09;

        r46 = specialinvoke r21.<ucar.nc2.geotiff.GeotiffWriter: ucar.ma2.Array geoShiftDataAtLon(ucar.ma2.Array,ucar.ma2.Array)>(r46, $r16);

        r47 = specialinvoke r21.<ucar.nc2.geotiff.GeotiffWriter: ucar.ma2.Array geoShiftLon(ucar.ma2.Array)>($r16);

     label09:
        $r19 = virtualinvoke r18.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getLowerLeftPoint()>();

        $r20 = virtualinvoke r18.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getUpperRightPoint()>();

        $d2 = virtualinvoke $r19.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $d3 = virtualinvoke $r19.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $d4 = virtualinvoke $r20.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $d5 = virtualinvoke $r20.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $z5 = interfaceinvoke $r4.<ucar.nc2.dt.GridCoordSystem: boolean isLatLon()>();

        if $z5 != 0 goto label10;

        $r24 = virtualinvoke $r5.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPointImpl latLonToProj(double,double)>($d5, $d2);

        $r25 = virtualinvoke r47.<ucar.ma2.Array: java.lang.Object copyTo1DJavaArray()>();

        $r26 = (double[]) $r25;

        r27 = (double[]) $r26;

        $r28 = virtualinvoke r48.<ucar.ma2.Array: java.lang.Object copyTo1DJavaArray()>();

        $r29 = (double[]) $r28;

        r49 = (double[]) $r29;

        $d9 = interfaceinvoke $r24.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        i8 = virtualinvoke r21.<ucar.nc2.geotiff.GeotiffWriter: int getXIndex(ucar.ma2.Array,double,int)>(r47, $d9, 0);

        $d10 = interfaceinvoke $r24.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        i9 = virtualinvoke r21.<ucar.nc2.geotiff.GeotiffWriter: int getYIndex(ucar.ma2.Array,double,int)>(r48, $d10, 0);

        $d11 = interfaceinvoke $r24.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        d18 = $d11 * 1000.0;

        $d12 = interfaceinvoke $r24.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        d19 = $d12 * 1000.0;

        $r30 = virtualinvoke $r5.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPointImpl latLonToProj(double,double)>($d3, $d4);

        $d13 = interfaceinvoke $r30.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        i10 = virtualinvoke r21.<ucar.nc2.geotiff.GeotiffWriter: int getXIndex(ucar.ma2.Array,double,int)>(r47, $d13, 1);

        $d14 = interfaceinvoke $r30.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        i11 = virtualinvoke r21.<ucar.nc2.geotiff.GeotiffWriter: int getYIndex(ucar.ma2.Array,double,int)>(r48, $d14, 1);

        goto label11;

     label10:
        d19 = $d2;

        d18 = $d5;

        i8 = virtualinvoke r21.<ucar.nc2.geotiff.GeotiffWriter: int getLonIndex(ucar.ma2.Array,double,int)>(r47, $d2, 0);

        i9 = virtualinvoke r21.<ucar.nc2.geotiff.GeotiffWriter: int getLatIndex(ucar.ma2.Array,double,int)>(r48, $d5, 0);

        i10 = virtualinvoke r21.<ucar.nc2.geotiff.GeotiffWriter: int getLonIndex(ucar.ma2.Array,double,int)>(r47, $d4, 1);

        i11 = virtualinvoke r21.<ucar.nc2.geotiff.GeotiffWriter: int getLatIndex(ucar.ma2.Array,double,int)>(r48, $d3, 1);

     label11:
        $d6 = virtualinvoke r45.<ucar.nc2.dataset.CoordinateAxis1D: double getIncrement()>();

        $d15 = $d6 * d21;

        $d7 = virtualinvoke r8.<ucar.nc2.dataset.CoordinateAxis1D: double getIncrement()>();

        $d8 = staticinvoke <java.lang.Math: double abs(double)>($d7);

        $d16 = $d8 * d20;

        $r22 = virtualinvoke r21.<ucar.nc2.geotiff.GeotiffWriter: ucar.ma2.Array getYXDataInBox(ucar.ma2.Array,int,int,int,int)>(r46, i8, i10, i9, i11);

        $s3 = r21.<ucar.nc2.geotiff.GeotiffWriter: short pageNumber>;

        $i17 = (int) $s3;

        if $i17 <= 1 goto label12;

        $r23 = r21.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        virtualinvoke $r23.<ucar.nc2.geotiff.GeoTiff: void initTags()>();

     label12:
        $s4 = r21.<ucar.nc2.geotiff.GeotiffWriter: short pageNumber>;

        $i18 = (int) $s4;

        virtualinvoke r21.<ucar.nc2.geotiff.GeotiffWriter: void writeGrid(ucar.nc2.dt.GridDatatype,ucar.ma2.Array,boolean,double,double,double,double,int)>($r3, $r22, z6, d19, d18, $d15, $d16, $i18);

        $s5 = r21.<ucar.nc2.geotiff.GeotiffWriter: short pageNumber>;

        $i19 = (int) $s5;

        $i6 = $i19 + 1;

        $s7 = (short) $i6;

        r21.<ucar.nc2.geotiff.GeotiffWriter: short pageNumber> = $s7;

        return;
    }

    public void writeSwathGrid(java.lang.String, java.lang.String, int, int, boolean, ucar.unidata.geoloc.LatLonRect) throws java.io.IOException
    {
        ucar.nc2.dt.GridDatatype $r3;
        ucar.nc2.dataset.CoordinateAxis $r6, $r8;
        byte $b2, $b3, $b4, $b5;
        ucar.unidata.geoloc.ProjectionPointImpl $r27, $r28;
        ucar.nc2.dt.grid.GridDataset $r1;
        ucar.nc2.dt.GridCoordSystem $r4;
        double[] $r14;
        short $s6, $s7, $s8, $s10;
        java.lang.String r0, r2;
        ucar.nc2.geotiff.GeotiffWriter r13;
        ucar.ma2.Array $r10, $r11, $r12, $r15, $r23, $r24, $r25, r30, r31;
        ucar.unidata.geoloc.LatLonRect r16, $r22, $r34;
        ucar.unidata.geoloc.LatLonPointImpl $r17, $r18, $r32, $r33;
        ucar.nc2.geotiff.GeoTiff $r26;
        ucar.unidata.geoloc.ProjectionImpl $r5;
        boolean $z0, $z1, $z2, z3;
        ucar.nc2.dataset.CoordinateAxis2D r7, r9;
        int i0, i1, $i9, i11, i12, i13, i14, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, d46, d47, d48, d49, d50, d51, d52, $d53, $d54, $d55, $d56, d57, d58;
        java.lang.IllegalArgumentException $r35;

        r13 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z3 := @parameter4: boolean;

        r16 := @parameter5: ucar.unidata.geoloc.LatLonRect;

        $r1 = staticinvoke <ucar.nc2.dt.grid.GridDataset: ucar.nc2.dt.grid.GridDataset open(java.lang.String)>(r0);

        $r3 = interfaceinvoke $r1.<ucar.nc2.dt.GridDataset: ucar.nc2.dt.GridDatatype findGridDatatype(java.lang.String)>(r2);

        $r4 = interfaceinvoke $r3.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r5 = interfaceinvoke $r3.<ucar.nc2.dt.GridDatatype: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $r6 = interfaceinvoke $r4.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getXHorizAxis()>();

        r7 = (ucar.nc2.dataset.CoordinateAxis2D) $r6;

        $r8 = interfaceinvoke $r4.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getYHorizAxis()>();

        r9 = (ucar.nc2.dataset.CoordinateAxis2D) $r8;

        $i16 = (int) -1;

        $i18 = (int) -1;

        $r10 = interfaceinvoke $r3.<ucar.nc2.dt.GridDatatype: ucar.ma2.Array readDataSlice(int,int,int,int)>(i0, i1, $i16, $i18);

        $r11 = virtualinvoke r7.<ucar.nc2.dataset.CoordinateAxis2D: ucar.ma2.Array read()>();

        r30 = $r11;

        $r12 = virtualinvoke r9.<ucar.nc2.dataset.CoordinateAxis2D: ucar.ma2.Array read()>();

        $r14 = virtualinvoke r13.<ucar.nc2.geotiff.GeotiffWriter: double[] getSwathLatLonInformation(ucar.ma2.Array,ucar.ma2.Array)>($r12, $r11);

        $z0 = interfaceinvoke $r4.<ucar.nc2.dt.GridCoordSystem: boolean isLatLon()>();

        if $z0 == 0 goto label01;

        d46 = 1.0;

        d58 = 1.0;

        d57 = 1.0;

        goto label02;

     label01:
        d46 = 1000.0;

        d58 = 1000.0;

        d57 = 1000.0;

     label02:
        $r15 = virtualinvoke $r10.<ucar.ma2.Array: ucar.ma2.Array flip(int)>(0);

        r31 = $r15;

        $z1 = interfaceinvoke $r4.<ucar.nc2.dt.GridCoordSystem: boolean isLatLon()>();

        if $z1 == 0 goto label03;

        r31 = specialinvoke r13.<ucar.nc2.geotiff.GeotiffWriter: ucar.ma2.Array geoShiftDataAtLon(ucar.ma2.Array,ucar.ma2.Array)>($r15, $r11);

        r30 = specialinvoke r13.<ucar.nc2.geotiff.GeotiffWriter: ucar.ma2.Array geoShiftLon(ucar.ma2.Array)>($r11);

     label03:
        $d0 = $r14[0];

        $d44 = $d0 * d57;

        $d1 = $r14[1];

        $d45 = $d1 * d58;

        if r16 != null goto label04;

        d47 = $r14[4];

        d48 = $r14[2];

        d49 = $r14[5];

        d50 = $r14[3];

        d51 = d47;

        d52 = d50;

        i11 = 0;

        i12 = 0;

        $d38 = d49 - d47;

        $d39 = $d38 / $d44;

        $d40 = $d39 + 0.5;

        i13 = (int) $d40;

        $d41 = d50 - d48;

        $d42 = $d41 / $d45;

        $d43 = $d42 + 0.5;

        i14 = (int) $d43;

        goto label14;

     label04:
        $r17 = virtualinvoke r16.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getLowerLeftPoint()>();

        $r18 = virtualinvoke r16.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getUpperRightPoint()>();

        $d2 = virtualinvoke $r17.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $d3 = $r14[4];

        $b2 = $d2 cmpg $d3;

        $i19 = (int) $b2;

        if $i19 >= 0 goto label05;

        $d53 = $r14[4];

        goto label06;

     label05:
        $d53 = virtualinvoke $r17.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

     label06:
        d47 = $d53;

        $d4 = virtualinvoke $r17.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $d5 = $r14[2];

        $b3 = $d4 cmpg $d5;

        $i20 = (int) $b3;

        if $i20 >= 0 goto label07;

        $d54 = $r14[2];

        goto label08;

     label07:
        $d54 = virtualinvoke $r17.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

     label08:
        d48 = $d54;

        $d6 = virtualinvoke $r18.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $d7 = $r14[5];

        $b4 = $d6 cmpl $d7;

        $i21 = (int) $b4;

        if $i21 <= 0 goto label09;

        $d55 = $r14[5];

        goto label10;

     label09:
        $d55 = virtualinvoke $r18.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

     label10:
        d49 = $d55;

        $d8 = virtualinvoke $r18.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $d9 = $r14[3];

        $b5 = $d8 cmpl $d9;

        $i22 = (int) $b5;

        if $i22 <= 0 goto label11;

        $d56 = $r14[3];

        goto label12;

     label11:
        $d56 = virtualinvoke $r18.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

     label12:
        d50 = $d56;

        $r32 = new ucar.unidata.geoloc.LatLonPointImpl;

        $d11 = $r14[3];

        $d10 = $r14[4];

        specialinvoke $r32.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d11, $d10);

        $r33 = new ucar.unidata.geoloc.LatLonPointImpl;

        $d13 = $r14[2];

        $d12 = $r14[5];

        specialinvoke $r33.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d13, $d12);

        $r34 = new ucar.unidata.geoloc.LatLonRect;

        specialinvoke $r34.<ucar.unidata.geoloc.LatLonRect: void <init>(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.LatLonPoint)>($r32, $r33);

        $r22 = virtualinvoke $r34.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonRect intersect(ucar.unidata.geoloc.LatLonRect)>(r16);

        if $r22 != null goto label13;

        $r35 = new java.lang.IllegalArgumentException;

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The assigned extent of latitude and longitude is unvalid. No intersection with the swath extent");

        throw $r35;

     label13:
        d51 = d47;

        d52 = $d56;

        $d14 = $r14[4];

        $d15 = d47 - $d14;

        $d16 = $d15 / $d44;

        $d17 = $d16 + 0.5;

        i11 = (int) $d17;

        $d18 = $r14[3];

        $d19 = $d56 - $d18;

        $d20 = $d19 / $d45;

        $d21 = $d20 + 0.5;

        $d22 = staticinvoke <java.lang.Math: double abs(double)>($d21);

        i12 = (int) $d22;

        $d23 = $r14[4];

        $d24 = d49 - $d23;

        $d25 = $d24 / $d44;

        $d26 = $d25 + 0.5;

        i13 = (int) $d26;

        $d27 = $r14[3];

        $d28 = d48 - $d27;

        $d29 = $d28 / $d45;

        $d30 = $d29 + 0.5;

        $d31 = staticinvoke <java.lang.Math: double abs(double)>($d30);

        i14 = (int) $d31;

     label14:
        $z2 = interfaceinvoke $r4.<ucar.nc2.dt.GridCoordSystem: boolean isLatLon()>();

        if $z2 != 0 goto label15;

        $r27 = virtualinvoke $r5.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPointImpl latLonToProj(double,double)>(d50, d47);

        $d32 = interfaceinvoke $r27.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        i11 = virtualinvoke r13.<ucar.nc2.geotiff.GeotiffWriter: int getXIndex(ucar.ma2.Array,double,int)>(r30, $d32, 0);

        $d33 = interfaceinvoke $r27.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        i12 = virtualinvoke r13.<ucar.nc2.geotiff.GeotiffWriter: int getYIndex(ucar.ma2.Array,double,int)>($r12, $d33, 0);

        $d34 = interfaceinvoke $r27.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        d52 = $d34 * 1000.0;

        $d35 = interfaceinvoke $r27.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        d51 = $d35 * 1000.0;

        $r28 = virtualinvoke $r5.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPointImpl latLonToProj(double,double)>(d48, d49);

        $d36 = interfaceinvoke $r28.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        i13 = virtualinvoke r13.<ucar.nc2.geotiff.GeotiffWriter: int getXIndex(ucar.ma2.Array,double,int)>(r30, $d36, 1);

        $d37 = interfaceinvoke $r28.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        i14 = virtualinvoke r13.<ucar.nc2.geotiff.GeotiffWriter: int getYIndex(ucar.ma2.Array,double,int)>($r12, $d37, 1);

     label15:
        $r23 = virtualinvoke r13.<ucar.nc2.geotiff.GeotiffWriter: ucar.ma2.Array getTargetImagerFromSwath(ucar.ma2.Array,ucar.ma2.Array,ucar.ma2.Array,double[])>($r12, r30, r31, $r14);

        $r24 = virtualinvoke r13.<ucar.nc2.geotiff.GeotiffWriter: ucar.ma2.Array interpolation(ucar.ma2.Array)>($r23);

        $r25 = virtualinvoke r13.<ucar.nc2.geotiff.GeotiffWriter: ucar.ma2.Array getClippedImageFrominterpolation(ucar.ma2.Array,int,int,int,int)>($r24, i11, i13, i12, i14);

        $s6 = r13.<ucar.nc2.geotiff.GeotiffWriter: short pageNumber>;

        $i23 = (int) $s6;

        if $i23 <= 1 goto label16;

        $r26 = r13.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        virtualinvoke $r26.<ucar.nc2.geotiff.GeoTiff: void initTags()>();

     label16:
        $s7 = r13.<ucar.nc2.geotiff.GeotiffWriter: short pageNumber>;

        $i24 = (int) $s7;

        virtualinvoke r13.<ucar.nc2.geotiff.GeotiffWriter: void writeGrid(ucar.nc2.dt.GridDatatype,ucar.ma2.Array,boolean,double,double,double,double,int)>($r3, $r25, z3, d51, d52, $d44, $d45, $i24);

        $s8 = r13.<ucar.nc2.geotiff.GeotiffWriter: short pageNumber>;

        $i25 = (int) $s8;

        $i9 = $i25 + 1;

        $s10 = (short) $i9;

        r13.<ucar.nc2.geotiff.GeotiffWriter: short pageNumber> = $s10;

        return;
    }

    int getXIndex(ucar.ma2.Array, double, int)
    {
        byte $b0, $b1, $b4, $b5;
        int i2, $i3, i6, $i7, $i8;
        double d0, d1;
        boolean z0, $z1;
        ucar.ma2.IndexIterator $r1;
        ucar.nc2.geotiff.GeotiffWriter r2;
        ucar.ma2.Array r0;
        float $f0, $f1;

        r2 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r0 := @parameter0: ucar.ma2.Array;

        d0 := @parameter1: double;

        i2 := @parameter2: int;

        $r1 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        i6 = 0;

        z0 = 0;

        $f0 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: float getFloatNext()>();

        d1 = (double) $f0;

        $b0 = d1 cmpl d0;

        if $b0 == 0 goto label1;

        $b1 = d1 cmpl d0;

        $i7 = (int) $b1;

        if $i7 <= 0 goto label2;

     label1:
        return 0;

     label2:
        $z1 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $b4 = d1 cmpg d0;

        $i8 = (int) $b4;

        if $i8 >= 0 goto label3;

        i6 = i6 + 1;

        $f1 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: float getFloatNext()>();

        d1 = (double) $f1;

        $b5 = d1 cmpl d0;

        if $b5 != 0 goto label2;

        z0 = 1;

        goto label2;

     label3:
        if z0 != 1 goto label4;

        i6 = i6 + i2;

     label4:
        $i3 = i6 - i2;

        return $i3;
    }

    int getYIndex(ucar.ma2.Array, double, int)
    {
        byte $b0, $b1, $b4, $b5;
        int i2, $i3, i6, $i7, $i8;
        double d0, d1;
        boolean z0, $z1;
        ucar.ma2.IndexIterator $r1;
        ucar.nc2.geotiff.GeotiffWriter r2;
        ucar.ma2.Array r0;
        float $f0, $f1;

        r2 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r0 := @parameter0: ucar.ma2.Array;

        d0 := @parameter1: double;

        i2 := @parameter2: int;

        $r1 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        i6 = 0;

        z0 = 0;

        $f0 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: float getFloatNext()>();

        d1 = (double) $f0;

        $b0 = d1 cmpl d0;

        if $b0 == 0 goto label1;

        $b1 = d1 cmpg d0;

        $i7 = (int) $b1;

        if $i7 >= 0 goto label2;

     label1:
        return 0;

     label2:
        $z1 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $b4 = d1 cmpl d0;

        $i8 = (int) $b4;

        if $i8 <= 0 goto label3;

        i6 = i6 + 1;

        $f1 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: float getFloatNext()>();

        d1 = (double) $f1;

        $b5 = d1 cmpl d0;

        if $b5 != 0 goto label2;

        z0 = 1;

        goto label2;

     label3:
        if z0 != 1 goto label4;

        i6 = i6 + i2;

     label4:
        $i3 = i6 - i2;

        return $i3;
    }

    int getLatIndex(ucar.ma2.Array, double, int)
    {
        byte $b0, $b3, $b4;
        int i1, $i2, i5, $i6;
        double d0, d1;
        boolean z0, $z1;
        ucar.ma2.IndexIterator $r1;
        ucar.nc2.geotiff.GeotiffWriter r2;
        ucar.ma2.Array r0;
        float $f0, $f1;

        r2 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r0 := @parameter0: ucar.ma2.Array;

        d0 := @parameter1: double;

        i1 := @parameter2: int;

        virtualinvoke r0.<ucar.ma2.Array: int[] getShape()>();

        $r1 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        i5 = 0;

        z0 = 0;

        $f0 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: float getFloatNext()>();

        d1 = (double) $f0;

        $b0 = d1 cmpl d0;

        if $b0 != 0 goto label1;

        return 0;

     label1:
        $z1 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $b3 = d1 cmpl d0;

        $i6 = (int) $b3;

        if $i6 <= 0 goto label2;

        i5 = i5 + 1;

        $f1 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: float getFloatNext()>();

        d1 = (double) $f1;

        $b4 = d1 cmpl d0;

        if $b4 != 0 goto label1;

        z0 = 1;

        goto label1;

     label2:
        if z0 != 1 goto label3;

        i5 = i5 + i1;

     label3:
        $i2 = i5 - i1;

        return $i2;
    }

    int getLonIndex(ucar.ma2.Array, double, int)
    {
        byte $b0, $b1, $b4, $b5, $b6;
        int i2, $i3, i7, $i8, $i9, $i10;
        double d0, $d1, $d2, $d3;
        boolean z0, $z1;
        ucar.ma2.IndexIterator $r1;
        ucar.nc2.geotiff.GeotiffWriter r2;
        ucar.ma2.Array r0;
        float $f0, $f1, f2;

        r2 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r0 := @parameter0: ucar.ma2.Array;

        d0 := @parameter1: double;

        i2 := @parameter2: int;

        virtualinvoke r0.<ucar.ma2.Array: int[] getShape()>();

        $r1 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        i7 = 0;

        z0 = 0;

        $f0 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: float getFloatNext()>();

        f2 = $f0;

        $b0 = $f0 cmpl 180.0F;

        $i8 = (int) $b0;

        if $i8 <= 0 goto label1;

        f2 = $f0 - 360.0F;

     label1:
        $d1 = (double) f2;

        $b1 = $d1 cmpl d0;

        if $b1 != 0 goto label2;

        return 0;

     label2:
        $z1 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $d2 = (double) f2;

        $b4 = $d2 cmpg d0;

        $i9 = (int) $b4;

        if $i9 >= 0 goto label4;

        i7 = i7 + 1;

        $f1 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: float getFloatNext()>();

        f2 = $f1;

        $b5 = $f1 cmpl 180.0F;

        $i10 = (int) $b5;

        if $i10 <= 0 goto label3;

        f2 = $f1 - 360.0F;

     label3:
        $d3 = (double) f2;

        $b6 = $d3 cmpl d0;

        if $b6 != 0 goto label2;

        z0 = 1;

        goto label2;

     label4:
        if z0 != 1 goto label5;

        i7 = i7 + i2;

     label5:
        $i3 = i7 - i2;

        return $i3;
    }

    public ucar.ma2.Array getYXDataInBox(ucar.ma2.Array, int, int, int, int) throws java.io.IOException
    {
        int[] r1, r2;
        int $i0, i1, i2, i3, $i4, i5, $i6, i7;
        java.lang.String $r5;
        java.io.IOException $r4;
        ucar.nc2.geotiff.GeotiffWriter r6;
        ucar.ma2.Array r0, $r7;
        java.lang.Exception $r3;

        r6 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r0 := @parameter0: ucar.ma2.Array;

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        i1 := @parameter3: int;

        i5 := @parameter4: int;

        $i0 = virtualinvoke r0.<ucar.ma2.Array: int getRank()>();

        r1 = newarray (int)[$i0];

        r2 = newarray (int)[$i0];

        i7 = 0;

     label1:
        if i7 >= $i0 goto label2;

        r1[i7] = 0;

        r2[i7] = 1;

        i7 = i7 + 1;

        goto label1;

     label2:
        if i1 < 0 goto label3;

        if i5 < 0 goto label3;

        r1[0] = i1;

        $i6 = i5 - i1;

        r2[0] = $i6;

     label3:
        if i2 < 0 goto label4;

        if i3 < 0 goto label4;

        r1[1] = i2;

        $i4 = i3 - i2;

        r2[1] = $i4;

     label4:
        $r7 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.Array section(int[],int[])>(r1, r2);

     label5:
        goto label7;

     label6:
        $r3 := @caughtexception;

        $r4 = new java.io.IOException;

        $r5 = virtualinvoke $r3.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label7:
        return $r7;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    public ucar.ma2.Array getClippedImageFrominterpolation(ucar.ma2.Array, int, int, int, int)
    {
        int[] $r1, r2, r3;
        ucar.ma2.DataType $r5;
        float $f0;
        int $i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25;
        ucar.nc2.geotiff.GeotiffWriter r4;
        ucar.ma2.Array r0, $r6;

        r4 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r0 := @parameter0: ucar.ma2.Array;

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        i1 := @parameter3: int;

        i3 := @parameter4: int;

        $r1 = virtualinvoke r0.<ucar.ma2.Array: int[] getShape()>();

        $i0 = virtualinvoke r0.<ucar.ma2.Array: int getRank()>();

        r2 = newarray (int)[$i0];

        r3 = newarray (int)[$i0];

        i21 = 0;

     label01:
        if i21 >= $i0 goto label02;

        r2[i21] = 0;

        r3[i21] = 1;

        i21 = i21 + 1;

        goto label01;

     label02:
        if i1 < 0 goto label03;

        if i3 < 0 goto label03;

        r2[0] = i1;

        $i20 = i3 - i1;

        r3[0] = $i20;

     label03:
        if i2 < 0 goto label04;

        if i4 < 0 goto label04;

        r2[1] = i2;

        $i19 = i4 - i2;

        r3[1] = $i19;

     label04:
        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r6 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r5, r3);

        i22 = 0;

        i23 = i1;

     label05:
        if i23 >= i3 goto label10;

        i24 = i2;

     label06:
        if i24 >= i4 goto label09;

        $i5 = $r1[1];

        $i6 = i23 * $i5;

        i25 = $i6 + i24;

        $i8 = $r1[0];

        $i7 = $r1[1];

        $i9 = $i8 * $i7;

        if i25 < $i9 goto label07;

        $i17 = $r1[0];

        $i16 = $r1[1];

        $i18 = $i17 * $i16;

        i25 = $i18 - 1;

     label07:
        $f0 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(int)>(i25);

        $i11 = r3[0];

        $i10 = r3[1];

        $i12 = $i11 * $i10;

        if i22 < $i12 goto label08;

        $i14 = r3[0];

        $i13 = r3[1];

        $i15 = $i14 * $i13;

        i22 = $i15 - 1;

     label08:
        virtualinvoke $r6.<ucar.ma2.Array: void setFloat(int,float)>(i22, $f0);

        i22 = i22 + 1;

        i24 = i24 + 1;

        goto label06;

     label09:
        i23 = i23 + 1;

        goto label05;

     label10:
        return $r6;
    }

    public ucar.ma2.Array getTargetImagerFromSwath(ucar.ma2.Array, ucar.ma2.Array, ucar.ma2.Array, double[])
    {
        byte $b5;
        int[] $r1, $r2, $r4;
        boolean $z0, $z1, $z2;
        ucar.ma2.DataType $r5;
        java.lang.Exception $r13;
        float $f0, $f1, $f2, $f3, $f4, f5;
        double[] r3;
        int i0, i1, i2, i3, $i4, i6, i7, $i8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, d13, $d14, $d15, $d16, $d17;
        ucar.ma2.IndexIterator $r7, $r9, $r11;
        ucar.nc2.geotiff.GeotiffWriter r12;
        ucar.ma2.Array r0, $r6, r8, r10;

        r12 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r8 := @parameter0: ucar.ma2.Array;

        r10 := @parameter1: ucar.ma2.Array;

        r0 := @parameter2: ucar.ma2.Array;

        r3 := @parameter3: double[];

        $r1 = virtualinvoke r0.<ucar.ma2.Array: int[] getShape()>();

        i0 = $r1[0];

        $r2 = virtualinvoke r0.<ucar.ma2.Array: int[] getShape()>();

        i1 = $r2[1];

        $d1 = r3[3];

        $d0 = r3[2];

        $d3 = $d1 - $d0;

        $d2 = r3[1];

        $d4 = $d3 / $d2;

        $d5 = $d4 + 0.5;

        i2 = (int) $d5;

        $d7 = r3[5];

        $d6 = r3[4];

        $d9 = $d7 - $d6;

        $d8 = r3[0];

        $d10 = $d9 / $d8;

        $d11 = $d10 + 0.5;

        i3 = (int) $d11;

        $r4 = newarray (int)[2];

        $r4[0] = i2;

        $r4[1] = i3;

        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r6 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r5, $r4);

        d12 = r3[4];

        d13 = r3[3];

        $r7 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r9 = virtualinvoke r8.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r11 = virtualinvoke r10.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        i6 = 0;

     label01:
        if i6 >= i0 goto label12;

        i7 = 0;

     label02:
        if i7 >= i1 goto label11;

     label03:
        $z0 = interfaceinvoke $r9.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $z1 = interfaceinvoke $r11.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $z2 = interfaceinvoke $r7.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $f0 = interfaceinvoke $r9.<ucar.ma2.IndexIterator: float getFloatNext()>();

        $f1 = interfaceinvoke $r11.<ucar.ma2.IndexIterator: float getFloatNext()>();

        $f2 = interfaceinvoke $r7.<ucar.ma2.IndexIterator: float getFloatNext()>();

        $d17 = r3[1];

        $d16 = r3[0];

        $d15 = (double) $f0;

        $d14 = (double) $f1;

        $i4 = virtualinvoke r12.<ucar.nc2.geotiff.GeotiffWriter: int getIndexOfBBFromLatlonOfOri(double,double,double,double,double,double,int,int)>(d13, d12, $d17, $d16, $d15, $d14, i2, i3);

     label04:
        f5 = virtualinvoke $r6.<ucar.ma2.Array: float getFloat(int)>($i4);

     label05:
        goto label07;

     label06:
        $r13 := @caughtexception;

        f5 = 0.0F;

     label07:
        $b5 = f5 cmpl 0.0F;

        $i8 = (int) $b5;

        if $i8 <= 0 goto label08;

        $f3 = $f2 + f5;

        $f4 = $f3 / 2.0F;

        virtualinvoke $r6.<ucar.ma2.Array: void setFloat(int,float)>($i4, $f4);

        goto label09;

     label08:
        virtualinvoke $r6.<ucar.ma2.Array: void setFloat(int,float)>($i4, $f2);

     label09:
        goto label03;

     label10:
        i7 = i7 + 1;

        goto label02;

     label11:
        i6 = i6 + 1;

        goto label01;

     label12:
        return $r6;

        catch java.lang.Exception from label04 to label05 with label06;
    }

    int getIndexOfBBFromLatlonOfOri(double, double, double, double, double, double, int, int)
    {
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        double d0, d1, d2, $d3, $d4, $d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13;
        ucar.nc2.geotiff.GeotiffWriter r0;

        r0 := @this: ucar.nc2.geotiff.GeotiffWriter;

        d7 := @parameter0: double;

        d1 := @parameter1: double;

        d8 := @parameter2: double;

        d2 := @parameter3: double;

        d6 := @parameter4: double;

        d0 := @parameter5: double;

        i3 := @parameter6: int;

        i0 := @parameter7: int;

        $d3 = d0 - d1;

        $d4 = $d3 / d2;

        $d5 = staticinvoke <java.lang.Math: double abs(double)>($d4);

        $d9 = d6 - d7;

        $d10 = $d9 / d8;

        $d11 = staticinvoke <java.lang.Math: double abs(double)>($d10);

        $d12 = $d5 + 0.5;

        i9 = (int) $d12;

        $i1 = i0 - 1;

        if i9 < $i1 goto label1;

        i9 = i0 - 2;

     label1:
        if i9 != 0 goto label2;

        i9 = 1;

     label2:
        $d13 = $d11 + 0.5;

        $i7 = (int) $d13;

        $i2 = $i7 * i0;

        $i8 = $i2 + i9;

        i10 = $i8;

        $i4 = i3 * i0;

        if $i8 < $i4 goto label3;

        $i5 = $i7 - 1;

        $i6 = $i5 * i0;

        i10 = $i6 + i9;

     label3:
        return i10;
    }

    public ucar.ma2.Array interpolation(ucar.ma2.Array)
    {
        byte $b5, $b11, $b16, $b21, $b26, $b29, $b32, $b35, $b38, $b53;
        ucar.nc2.geotiff.GeotiffWriter r4;
        ucar.ma2.Array r0, $r3;
        int[] $r1;
        ucar.ma2.DataType $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, f11;
        int i0, i1, i2, $i3, i4, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i27, $i28, $i30, $i31, $i33, $i34, $i36, $i37, i39, i40, i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62;

        r4 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r0 := @parameter0: ucar.ma2.Array;

        $r1 = virtualinvoke r0.<ucar.ma2.Array: int[] getShape()>();

        i0 = $r1[1];

        i1 = $r1[0];

        i2 = i0 * i1;

        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r3 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r2, $r1);

        i39 = 0;

     label01:
        if i39 >= i1 goto label15;

        i40 = 0;

     label02:
        if i40 >= i0 goto label14;

        $i3 = i39 * i0;

        i4 = $i3 + i40;

        $f0 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(int)>(i4);

        $b5 = $f0 cmpl 0.0F;

        if $b5 != 0 goto label12;

        f11 = 0.0F;

        i41 = 0;

        $i6 = i4 - 1;

        if $i6 < 0 goto label03;

        $i36 = i4 - 1;

        if $i36 >= i2 goto label03;

        $i37 = i4 - 1;

        $f10 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(int)>($i37);

        $b38 = $f10 cmpl 0.0F;

        $i54 = (int) $b38;

        if $i54 <= 0 goto label03;

        f11 = 0.0F + $f10;

        i41 = 1;

     label03:
        $i42 = i4 + 1;

        if $i42 < 0 goto label04;

        $i33 = i4 + 1;

        if $i33 >= i2 goto label04;

        $i34 = i4 + 1;

        $f9 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(int)>($i34);

        $b35 = $f9 cmpl 0.0F;

        $i55 = (int) $b35;

        if $i55 <= 0 goto label04;

        f11 = f11 + $f9;

        i41 = i41 + 1;

     label04:
        $i43 = i4 - i0;

        if $i43 < 0 goto label05;

        $i30 = i4 - i0;

        if $i30 >= i2 goto label05;

        $i31 = i4 - i0;

        $f8 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(int)>($i31);

        $b32 = $f8 cmpl 0.0F;

        $i56 = (int) $b32;

        if $i56 <= 0 goto label05;

        f11 = f11 + $f8;

        i41 = i41 + 1;

     label05:
        $i44 = i4 + i0;

        if $i44 < 0 goto label06;

        $i27 = i4 + i0;

        if $i27 >= i2 goto label06;

        $i28 = i4 + i0;

        $f7 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(int)>($i28);

        $b29 = $f7 cmpl 0.0F;

        $i57 = (int) $b29;

        if $i57 <= 0 goto label06;

        f11 = f11 + $f7;

        i41 = i41 + 1;

     label06:
        $i45 = i4 - i0;

        $i46 = $i45 - 1;

        if $i46 < 0 goto label07;

        $i22 = i4 - i0;

        $i23 = $i22 - 1;

        if $i23 >= i2 goto label07;

        $i24 = i4 - i0;

        $i25 = $i24 - 1;

        $f6 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(int)>($i25);

        $b26 = $f6 cmpl 0.0F;

        $i58 = (int) $b26;

        if $i58 <= 0 goto label07;

        f11 = f11 + $f6;

        i41 = i41 + 1;

     label07:
        $i47 = i4 - i0;

        $i48 = $i47 + 1;

        if $i48 < 0 goto label08;

        $i17 = i4 - i0;

        $i18 = $i17 + 1;

        if $i18 >= i2 goto label08;

        $i19 = i4 - i0;

        $i20 = $i19 + 1;

        $f5 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(int)>($i20);

        $b21 = $f5 cmpl 0.0F;

        $i59 = (int) $b21;

        if $i59 <= 0 goto label08;

        f11 = f11 + $f5;

        i41 = i41 + 1;

     label08:
        $i49 = i4 + i0;

        $i50 = $i49 - 1;

        if $i50 < 0 goto label09;

        $i12 = i4 + i0;

        $i13 = $i12 - 1;

        if $i13 >= i2 goto label09;

        $i14 = i4 + i0;

        $i15 = $i14 - 1;

        $f4 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(int)>($i15);

        $b16 = $f4 cmpl 0.0F;

        $i60 = (int) $b16;

        if $i60 <= 0 goto label09;

        f11 = f11 + $f4;

        i41 = i41 + 1;

     label09:
        $i51 = i4 + i0;

        $i52 = $i51 + 1;

        if $i52 < 0 goto label10;

        $i7 = i4 + i0;

        $i8 = $i7 + 1;

        if $i8 >= i2 goto label10;

        $i9 = i4 + i0;

        $i10 = $i9 + 1;

        $f3 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(int)>($i10);

        $b11 = $f3 cmpl 0.0F;

        $i61 = (int) $b11;

        if $i61 <= 0 goto label10;

        f11 = f11 + $f3;

        i41 = i41 + 1;

     label10:
        $b53 = f11 cmpl 0.0F;

        $i62 = (int) $b53;

        if $i62 <= 0 goto label11;

        $f1 = (float) i41;

        $f2 = f11 / $f1;

        virtualinvoke $r3.<ucar.ma2.Array: void setFloat(int,float)>(i4, $f2);

     label11:
        goto label13;

     label12:
        virtualinvoke $r3.<ucar.ma2.Array: void setFloat(int,float)>(i4, $f0);

     label13:
        i40 = i40 + 1;

        goto label02;

     label14:
        i39 = i39 + 1;

        goto label01;

     label15:
        return $r3;
    }

    public double[] getSwathLatLonInformation(ucar.ma2.Array, ucar.ma2.Array)
    {
        byte $b3, $b4, $b5, $b6;
        double[] $r0, $r7, $r8;
        ucar.nc2.geotiff.GeotiffWriter r9;
        ucar.ma2.Array r1, r3;
        int[] $r5, $r6;
        boolean $z0, $z1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, f10, f11, f12, f13, f14, f15, f16, f17;
        int i0, i1, $i2, $i7, $i8, $i9, $i10, i11, i12, i13, $i14, $i15, $i16, $i17;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17, d18, d19, d20, $d21, $d22, $d23, $d24, d25;
        ucar.ma2.IndexIterator $r2, $r4;

        r9 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r1 := @parameter0: ucar.ma2.Array;

        r3 := @parameter1: ucar.ma2.Array;

        $r0 = newarray (double)[8];

        $r0[0] = 0.0;

        $r0[1] = 0.0;

        $r0[2] = 0.0;

        $r0[3] = 0.0;

        $r0[4] = 0.0;

        $r0[5] = 0.0;

        $r0[6] = 0.0;

        $r0[7] = 0.0;

        $r2 = virtualinvoke r1.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r4 = virtualinvoke r3.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r5 = virtualinvoke r1.<ucar.ma2.Array: int[] getShape()>();

        i0 = $r5[0];

        $r6 = virtualinvoke r1.<ucar.ma2.Array: int[] getShape()>();

        i1 = $r6[1];

        d17 = -91.0;

        d18 = 91.0;

        d19 = -181.0;

        d20 = 181.0;

        f10 = 0.0F;

        f11 = 0.0F;

        f12 = 0.0F;

        f13 = 0.0F;

        f14 = 0.0F;

        f15 = 0.0F;

        f16 = 0.0F;

        f17 = 0.0F;

        i11 = 0;

     label01:
        if i11 >= i0 goto label08;

        i12 = 0;

     label02:
        if i12 >= i1 goto label07;

        $z0 = interfaceinvoke $r2.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $z1 = interfaceinvoke $r4.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $f8 = interfaceinvoke $r2.<ucar.ma2.IndexIterator: float getFloatNext()>();

        $f9 = interfaceinvoke $r4.<ucar.ma2.IndexIterator: float getFloatNext()>();

        if i11 != 0 goto label03;

        if i12 != 0 goto label03;

        f10 = $f8;

        f11 = $f9;

        goto label06;

     label03:
        if i11 != 0 goto label04;

        $i10 = i1 - 1;

        if i12 != $i10 goto label04;

        f12 = $f8;

        f13 = $f9;

        goto label06;

     label04:
        $i7 = i0 - 1;

        if i11 != $i7 goto label05;

        if i12 != 0 goto label05;

        f14 = $f8;

        f15 = $f9;

        goto label06;

     label05:
        $i8 = i0 - 1;

        if i11 != $i8 goto label06;

        $i9 = i1 - 1;

        if i12 != $i9 goto label06;

        f16 = $f8;

        f17 = $f9;

     label06:
        i12 = i12 + 1;

        goto label02;

     label07:
        i11 = i11 + 1;

        goto label01;

     label08:
        $r7 = newarray (double)[4];

        $d0 = (double) f10;

        $r7[0] = $d0;

        $d1 = (double) f12;

        $r7[1] = $d1;

        $d2 = (double) f14;

        $r7[2] = $d2;

        $d3 = (double) f16;

        $r7[3] = $d3;

        $r8 = newarray (double)[4];

        $d4 = (double) f11;

        $r8[0] = $d4;

        $d5 = (double) f13;

        $r8[1] = $d5;

        $d6 = (double) f15;

        $r8[2] = $d6;

        $d7 = (double) f17;

        $r8[3] = $d7;

        i13 = 0;

     label09:
        $i2 = lengthof $r7;

        if i13 >= $i2 goto label18;

        $d13 = $r7[i13];

        $b3 = d17 cmpl $d13;

        $i14 = (int) $b3;

        if $i14 <= 0 goto label10;

        $d21 = d17;

        goto label11;

     label10:
        $d21 = $r7[i13];

     label11:
        d17 = $d21;

        $d14 = $r7[i13];

        $b4 = d18 cmpg $d14;

        $i15 = (int) $b4;

        if $i15 >= 0 goto label12;

        $d22 = d18;

        goto label13;

     label12:
        $d22 = $r7[i13];

     label13:
        d18 = $d22;

        $d15 = $r8[i13];

        $b5 = d19 cmpl $d15;

        $i16 = (int) $b5;

        if $i16 <= 0 goto label14;

        $d23 = d19;

        goto label15;

     label14:
        $d23 = $r8[i13];

     label15:
        d19 = $d23;

        $d16 = $r8[i13];

        $b6 = d20 cmpg $d16;

        $i17 = (int) $b6;

        if $i17 >= 0 goto label16;

        $d24 = d20;

        goto label17;

     label16:
        $d24 = $r8[i13];

     label17:
        d20 = $d24;

        i13 = i13 + 1;

        goto label09;

     label18:
        $f1 = f13 - f11;

        $f0 = (float) i1;

        $f2 = $f1 / $f0;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        d25 = (double) $f3;

        $f5 = f14 - f10;

        $f4 = (float) i0;

        $f6 = $f5 / $f4;

        $f7 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        d8 = (double) $f7;

        $r0[0] = d25;

        $r0[1] = d8;

        $r0[2] = d18;

        $r0[3] = d17;

        $r0[4] = d20;

        $r0[5] = d19;

        $d9 = d19 - d20;

        $d10 = $d9 / d25;

        $r0[6] = $d10;

        $d11 = d17 - d18;

        $d12 = $d11 / d8;

        $r0[7] = $d12;

        return $r0;
    }

    public void writeGrid(ucar.nc2.dt.GridDatatype, ucar.ma2.Array, boolean, double, double, double, double, int) throws java.io.IOException
    {
        ucar.nc2.dt.GridDatatype r0;
        byte[] $r151, $r152;
        byte $b11, b12;
        ucar.unidata.geoloc.projection.TransverseMercator $r114;
        java.lang.StringBuilder $r159, $r160, $r164;
        ucar.nc2.geotiff.Tag $r13, $r18, $r23, $r28, $r33, $r38, $r43, $r48, $r53, $r58, $r63, $r68, $r73, $r78, $r83, $r89, $r94, $r99, $r123, $r128, $r133, $r138, $r143;
        float[] $r7, $r8;
        ucar.ma2.Array r3;
        ucar.nc2.geotiff.IFDEntry $r11, $r15, $r16, $r20, $r21, $r25, $r26, $r30, $r31, $r35, $r36, $r40, $r41, $r45, $r46, $r50, $r51, $r55, $r56, $r60, $r61, $r65, $r66, $r70, $r71, $r75, $r76, $r80, $r81, $r85, $r87, $r91, $r92, $r96, $r97, $r101, $r121, $r125, $r126, $r130, $r131, $r135, $r136, $r140, $r141, $r145;
        ucar.nc2.geotiff.GeoTiff $r5, $r14, $r19, $r24, $r29, $r34, $r39, $r44, $r49, $r54, $r59, $r64, $r69, $r74, $r79, $r84, $r90, $r95, $r100, $r102, $r124, $r129, $r134, $r139, $r144, $r149, $r166;
        int[] $r9, $r10, $r146, $r147;
        ucar.ma2.MAMath$MinMax $r86;
        ucar.unidata.geoloc.projection.AlbersEqualArea $r112;
        ucar.unidata.geoloc.projection.proj4.AlbersEqualAreaEllipse $r110;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i13;
        ucar.unidata.geoloc.projection.LambertConformal $r120;
        java.lang.Object $r6, $r150;
        java.lang.Class $r162;
        ucar.ma2.ArrayByte $r148;
        ucar.ma2.ArrayFloat $r4;
        ucar.nc2.dt.GridCoordSystem $r1;
        java.lang.String $r163, $r165;
        ucar.nc2.geotiff.GeotiffWriter r2;
        ucar.unidata.geoloc.ProjectionImpl $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r111, $r113, $r115, $r117, $r119, $r153, $r154, $r155, $r156, $r157, $r161;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        ucar.unidata.geoloc.projection.Stereographic $r118;
        ucar.nc2.geotiff.FieldType $r12, $r17, $r22, $r27, $r32, $r37, $r42, $r47, $r52, $r57, $r62, $r67, $r72, $r77, $r82, $r88, $r93, $r98, $r122, $r127, $r132, $r137, $r142;
        float f0, f1, $f2;
        ucar.unidata.geoloc.projection.Mercator $r116;
        double $d0, $d1, $d2, $d3, $d4, d5, d6, d7, d8;
        java.lang.IllegalArgumentException $r158;

        r2 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r0 := @parameter0: ucar.nc2.dt.GridDatatype;

        r3 := @parameter1: ucar.ma2.Array;

        z1 := @parameter2: boolean;

        d5 := @parameter3: double;

        d6 := @parameter4: double;

        d7 := @parameter5: double;

        d8 := @parameter6: double;

        i0 := @parameter7: int;

        $r1 = interfaceinvoke r0.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $z0 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: boolean isLatLon()>();

        if $z0 != 0 goto label01;

        $r153 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $z9 = $r153 instanceof ucar.unidata.geoloc.projection.LambertConformal;

        if $z9 != 0 goto label01;

        $r154 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $z10 = $r154 instanceof ucar.unidata.geoloc.projection.Stereographic;

        if $z10 != 0 goto label01;

        $r155 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $z11 = $r155 instanceof ucar.unidata.geoloc.projection.Mercator;

        if $z11 != 0 goto label01;

        $r156 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $z12 = $r156 instanceof ucar.unidata.geoloc.projection.proj4.AlbersEqualAreaEllipse;

        if $z12 != 0 goto label01;

        $r157 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $z13 = $r157 instanceof ucar.unidata.geoloc.projection.AlbersEqualArea;

        if $z13 != 0 goto label01;

        $r158 = new java.lang.IllegalArgumentException;

        $r159 = new java.lang.StringBuilder;

        specialinvoke $r159.<java.lang.StringBuilder: void <init>()>();

        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must be lat/lon or LambertConformal or Mercator and grid = ");

        $r161 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $r162 = virtualinvoke $r161.<java.lang.Object: java.lang.Class getClass()>();

        $r163 = virtualinvoke $r162.<java.lang.Class: java.lang.String getName()>();

        $r164 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r163);

        $r165 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r158.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r165);

        throw $r158;

     label01:
        if z1 == 0 goto label02;

        $r148 = specialinvoke r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.ma2.ArrayByte replaceMissingValuesAndScale(ucar.nc2.dt.GridDatatype,ucar.ma2.Array)>(r0, r3);

        $r149 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r150 = virtualinvoke $r148.<ucar.ma2.ArrayByte: java.lang.Object getStorage()>();

        $r151 = (byte[]) $r150;

        $r152 = (byte[]) $r151;

        i10 = virtualinvoke $r149.<ucar.nc2.geotiff.GeoTiff: int writeData(byte[],int)>($r152, i0);

        goto label03;

     label02:
        $r4 = specialinvoke r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.ma2.ArrayFloat replaceMissingValues(ucar.nc2.dt.GridDatatype,ucar.ma2.Array)>(r0, r3);

        $r5 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r6 = virtualinvoke $r4.<ucar.ma2.ArrayFloat: java.lang.Object getStorage()>();

        $r7 = (float[]) $r6;

        $r8 = (float[]) $r7;

        i10 = virtualinvoke $r5.<ucar.nc2.geotiff.GeoTiff: int writeData(float[],int)>($r8, i0);

     label03:
        if z1 == 0 goto label04;

        $b11 = 1;

        goto label05;

     label04:
        $b11 = 4;

     label05:
        b12 = $b11;

        $r9 = virtualinvoke r3.<ucar.ma2.Array: int[] getShape()>();

        $i7 = $r9[0];

        $r10 = virtualinvoke r3.<ucar.ma2.Array: int[] getShape()>();

        $i8 = $r10[1];

        $r14 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r11 = new ucar.nc2.geotiff.IFDEntry;

        $r13 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag ImageWidth>;

        $r12 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType SHORT>;

        specialinvoke $r11.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r13, $r12);

        $r15 = virtualinvoke $r11.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int)>($i8);

        virtualinvoke $r14.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r15);

        $r19 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r16 = new ucar.nc2.geotiff.IFDEntry;

        $r18 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag ImageLength>;

        $r17 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType SHORT>;

        specialinvoke $r16.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r18, $r17);

        $r20 = virtualinvoke $r16.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int)>($i7);

        virtualinvoke $r19.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r20);

        $i9 = i0 - 1;

        $r24 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r21 = new ucar.nc2.geotiff.IFDEntry;

        $r23 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag NewSubfileType>;

        $r22 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType SHORT>;

        specialinvoke $r21.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r23, $r22);

        $r25 = virtualinvoke $r21.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int)>(2);

        virtualinvoke $r24.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r25);

        $r29 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r26 = new ucar.nc2.geotiff.IFDEntry;

        $r28 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag PageNumber>;

        $r27 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType SHORT>;

        specialinvoke $r26.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r28, $r27);

        $r30 = virtualinvoke $r26.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int,int)>($i9, 2);

        virtualinvoke $r29.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r30);

        $r34 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r31 = new ucar.nc2.geotiff.IFDEntry;

        $r33 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag RowsPerStrip>;

        $r32 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType SHORT>;

        specialinvoke $r31.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r33, $r32);

        $r35 = virtualinvoke $r31.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int)>(1);

        virtualinvoke $r34.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r35);

        $r146 = newarray (int)[$i7];

        $r147 = newarray (int)[$i7];

        if i0 != 1 goto label06;

        $r146[0] = 8;

        goto label07;

     label06:
        $r146[0] = i10;

     label07:
        $i1 = $i8 * b12;

        $r147[0] = $i1;

        i13 = 1;

     label08:
        if i13 >= $i7 goto label09;

        $i2 = i13 - 1;

        $i4 = $r146[$i2];

        $i3 = $i8 * b12;

        $i5 = $i4 + $i3;

        $r146[i13] = $i5;

        $i6 = $i8 * b12;

        $r147[i13] = $i6;

        i13 = i13 + 1;

        goto label08;

     label09:
        $r39 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r36 = new ucar.nc2.geotiff.IFDEntry;

        $r38 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag StripByteCounts>;

        $r37 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType LONG>;

        specialinvoke $r36.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType,int)>($r38, $r37, $i8);

        $r40 = virtualinvoke $r36.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int[])>($r147);

        virtualinvoke $r39.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r40);

        $r44 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r41 = new ucar.nc2.geotiff.IFDEntry;

        $r43 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag StripOffsets>;

        $r42 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType LONG>;

        specialinvoke $r41.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType,int)>($r43, $r42, $i8);

        $r45 = virtualinvoke $r41.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int[])>($r146);

        virtualinvoke $r44.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r45);

        $r49 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r46 = new ucar.nc2.geotiff.IFDEntry;

        $r48 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag Orientation>;

        $r47 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType SHORT>;

        specialinvoke $r46.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r48, $r47);

        $r50 = virtualinvoke $r46.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int)>(1);

        virtualinvoke $r49.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r50);

        $r54 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r51 = new ucar.nc2.geotiff.IFDEntry;

        $r53 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag Compression>;

        $r52 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType SHORT>;

        specialinvoke $r51.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r53, $r52);

        $r55 = virtualinvoke $r51.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int)>(1);

        virtualinvoke $r54.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r55);

        $r59 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r56 = new ucar.nc2.geotiff.IFDEntry;

        $r58 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag Software>;

        $r57 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType ASCII>;

        specialinvoke $r56.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r58, $r57);

        $r60 = virtualinvoke $r56.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(java.lang.String)>("nc2geotiff");

        virtualinvoke $r59.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r60);

        $r64 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r61 = new ucar.nc2.geotiff.IFDEntry;

        $r63 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag PhotometricInterpretation>;

        $r62 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType SHORT>;

        specialinvoke $r61.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r63, $r62);

        $r65 = virtualinvoke $r61.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int)>(1);

        virtualinvoke $r64.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r65);

        $r69 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r66 = new ucar.nc2.geotiff.IFDEntry;

        $r68 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag PlanarConfiguration>;

        $r67 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType SHORT>;

        specialinvoke $r66.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r68, $r67);

        $r70 = virtualinvoke $r66.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int)>(1);

        virtualinvoke $r69.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r70);

        if z1 == 0 goto label10;

        $r124 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r121 = new ucar.nc2.geotiff.IFDEntry;

        $r123 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag BitsPerSample>;

        $r122 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType SHORT>;

        specialinvoke $r121.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r123, $r122);

        $r125 = virtualinvoke $r121.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int)>(8);

        virtualinvoke $r124.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r125);

        $r129 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r126 = new ucar.nc2.geotiff.IFDEntry;

        $r128 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag SamplesPerPixel>;

        $r127 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType SHORT>;

        specialinvoke $r126.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r128, $r127);

        $r130 = virtualinvoke $r126.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int)>(1);

        virtualinvoke $r129.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r130);

        $r134 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r131 = new ucar.nc2.geotiff.IFDEntry;

        $r133 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag XResolution>;

        $r132 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType RATIONAL>;

        specialinvoke $r131.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r133, $r132);

        $r135 = virtualinvoke $r131.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int,int)>(1, 1);

        virtualinvoke $r134.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r135);

        $r139 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r136 = new ucar.nc2.geotiff.IFDEntry;

        $r138 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag YResolution>;

        $r137 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType RATIONAL>;

        specialinvoke $r136.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r138, $r137);

        $r140 = virtualinvoke $r136.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int,int)>(1, 1);

        virtualinvoke $r139.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r140);

        $r144 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r141 = new ucar.nc2.geotiff.IFDEntry;

        $r143 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag ResolutionUnit>;

        $r142 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType SHORT>;

        specialinvoke $r141.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r143, $r142);

        $r145 = virtualinvoke $r141.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int)>(1);

        virtualinvoke $r144.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r145);

        goto label11;

     label10:
        $r74 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r71 = new ucar.nc2.geotiff.IFDEntry;

        $r73 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag BitsPerSample>;

        $r72 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType SHORT>;

        specialinvoke $r71.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r73, $r72);

        $r75 = virtualinvoke $r71.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int)>(32);

        virtualinvoke $r74.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r75);

        $r79 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r76 = new ucar.nc2.geotiff.IFDEntry;

        $r78 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag SampleFormat>;

        $r77 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType SHORT>;

        specialinvoke $r76.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r78, $r77);

        $r80 = virtualinvoke $r76.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int)>(3);

        virtualinvoke $r79.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r80);

        $r84 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r81 = new ucar.nc2.geotiff.IFDEntry;

        $r83 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag SamplesPerPixel>;

        $r82 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType SHORT>;

        specialinvoke $r81.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r83, $r82);

        $r85 = virtualinvoke $r81.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(int)>(1);

        virtualinvoke $r84.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r85);

        $r86 = interfaceinvoke r0.<ucar.nc2.dt.GridDatatype: ucar.ma2.MAMath$MinMax getMinMaxSkipMissingData(ucar.ma2.Array)>(r3);

        $d0 = $r86.<ucar.ma2.MAMath$MinMax: double min>;

        f0 = (float) $d0;

        $d1 = $r86.<ucar.ma2.MAMath$MinMax: double max>;

        f1 = (float) $d1;

        $r90 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r87 = new ucar.nc2.geotiff.IFDEntry;

        $r89 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag SMinSampleValue>;

        $r88 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType FLOAT>;

        specialinvoke $r87.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r89, $r88);

        $d2 = (double) f0;

        $r91 = virtualinvoke $r87.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(double)>($d2);

        virtualinvoke $r90.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r91);

        $r95 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r92 = new ucar.nc2.geotiff.IFDEntry;

        $r94 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag SMaxSampleValue>;

        $r93 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType FLOAT>;

        specialinvoke $r92.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r94, $r93);

        $d3 = (double) f1;

        $r96 = virtualinvoke $r92.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(double)>($d3);

        virtualinvoke $r95.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r96);

        $r100 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r97 = new ucar.nc2.geotiff.IFDEntry;

        $r99 = <ucar.nc2.geotiff.Tag: ucar.nc2.geotiff.Tag GDALNoData>;

        $r98 = <ucar.nc2.geotiff.FieldType: ucar.nc2.geotiff.FieldType FLOAT>;

        specialinvoke $r97.<ucar.nc2.geotiff.IFDEntry: void <init>(ucar.nc2.geotiff.Tag,ucar.nc2.geotiff.FieldType)>($r99, $r98);

        $f2 = f0 - 1.0F;

        $d4 = (double) $f2;

        $r101 = virtualinvoke $r97.<ucar.nc2.geotiff.IFDEntry: ucar.nc2.geotiff.IFDEntry setValue(double)>($d4);

        virtualinvoke $r100.<ucar.nc2.geotiff.GeoTiff: void addTag(ucar.nc2.geotiff.IFDEntry)>($r101);

     label11:
        $r102 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        virtualinvoke $r102.<ucar.nc2.geotiff.GeoTiff: void setTransform(double,double,double,double)>(d5, d6, d7, d8);

        $z2 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: boolean isLatLon()>();

        if $z2 == 0 goto label12;

        specialinvoke r2.<ucar.nc2.geotiff.GeotiffWriter: void addLatLonTags()>();

        goto label18;

     label12:
        $r103 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $z3 = $r103 instanceof ucar.unidata.geoloc.projection.LambertConformal;

        if $z3 == 0 goto label13;

        $r119 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $r120 = (ucar.unidata.geoloc.projection.LambertConformal) $r119;

        specialinvoke r2.<ucar.nc2.geotiff.GeotiffWriter: void addLambertConformalTags(ucar.unidata.geoloc.projection.LambertConformal,double,double)>($r120, d5, d6);

        goto label18;

     label13:
        $r104 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $z4 = $r104 instanceof ucar.unidata.geoloc.projection.Stereographic;

        if $z4 == 0 goto label14;

        $r117 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $r118 = (ucar.unidata.geoloc.projection.Stereographic) $r117;

        specialinvoke r2.<ucar.nc2.geotiff.GeotiffWriter: void addPolarStereographicTags(ucar.unidata.geoloc.projection.Stereographic,double,double)>($r118, d5, d6);

        goto label18;

     label14:
        $r105 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $z5 = $r105 instanceof ucar.unidata.geoloc.projection.Mercator;

        if $z5 == 0 goto label15;

        $r115 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $r116 = (ucar.unidata.geoloc.projection.Mercator) $r115;

        specialinvoke r2.<ucar.nc2.geotiff.GeotiffWriter: void addMercatorTags(ucar.unidata.geoloc.projection.Mercator)>($r116);

        goto label18;

     label15:
        $r106 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $z6 = $r106 instanceof ucar.unidata.geoloc.projection.TransverseMercator;

        if $z6 == 0 goto label16;

        $r113 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $r114 = (ucar.unidata.geoloc.projection.TransverseMercator) $r113;

        specialinvoke r2.<ucar.nc2.geotiff.GeotiffWriter: void addTransverseMercatorTags(ucar.unidata.geoloc.projection.TransverseMercator)>($r114);

        goto label18;

     label16:
        $r107 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $z7 = $r107 instanceof ucar.unidata.geoloc.projection.AlbersEqualArea;

        if $z7 == 0 goto label17;

        $r111 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $r112 = (ucar.unidata.geoloc.projection.AlbersEqualArea) $r111;

        specialinvoke r2.<ucar.nc2.geotiff.GeotiffWriter: void addAlbersEqualAreaTags(ucar.unidata.geoloc.projection.AlbersEqualArea)>($r112);

        goto label18;

     label17:
        $r108 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $z8 = $r108 instanceof ucar.unidata.geoloc.projection.proj4.AlbersEqualAreaEllipse;

        if $z8 == 0 goto label18;

        $r109 = interfaceinvoke $r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $r110 = (ucar.unidata.geoloc.projection.proj4.AlbersEqualAreaEllipse) $r109;

        specialinvoke r2.<ucar.nc2.geotiff.GeotiffWriter: void addAlbersEqualAreaEllipseTags(ucar.unidata.geoloc.projection.proj4.AlbersEqualAreaEllipse)>($r110);

     label18:
        $r166 = r2.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        virtualinvoke $r166.<ucar.nc2.geotiff.GeoTiff: void writeMetadata(int)>(i0);

        return;
    }

    public void close() throws java.io.IOException
    {
        ucar.nc2.geotiff.GeoTiff $r1;
        ucar.nc2.geotiff.GeotiffWriter r0;

        r0 := @this: ucar.nc2.geotiff.GeotiffWriter;

        $r1 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        virtualinvoke $r1.<ucar.nc2.geotiff.GeoTiff: void close()>();

        return;
    }

    private ucar.ma2.ArrayFloat replaceMissingValues(ucar.nc2.dt.GridDatatype, ucar.ma2.Array)
    {
        ucar.nc2.dt.GridDatatype r0;
        ucar.ma2.ArrayFloat r6;
        int[] $r4;
        double $d0, $d1, $d2;
        boolean $z0, $z1;
        ucar.ma2.MAMath$MinMax $r2;
        ucar.ma2.IndexIterator $r7, $r8;
        ucar.nc2.geotiff.GeotiffWriter r9;
        ucar.ma2.Array r1, $r5;
        float f0, $f1, f2;
        java.lang.Class $r3;

        r9 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r0 := @parameter0: ucar.nc2.dt.GridDatatype;

        r1 := @parameter1: ucar.ma2.Array;

        $r2 = interfaceinvoke r0.<ucar.nc2.dt.GridDatatype: ucar.ma2.MAMath$MinMax getMinMaxSkipMissingData(ucar.ma2.Array)>(r1);

        $d0 = $r2.<ucar.ma2.MAMath$MinMax: double min>;

        $d1 = $d0 - 1.0;

        f0 = (float) $d1;

        $r3 = <java.lang.Float: java.lang.Class TYPE>;

        $r4 = virtualinvoke r1.<ucar.ma2.Array: int[] getShape()>();

        $r5 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r3, $r4);

        r6 = (ucar.ma2.ArrayFloat) $r5;

        $r7 = virtualinvoke r1.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r8 = virtualinvoke r6.<ucar.ma2.ArrayFloat: ucar.ma2.IndexIterator getIndexIterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $f1 = interfaceinvoke $r7.<ucar.ma2.IndexIterator: float getFloatNext()>();

        f2 = $f1;

        $d2 = (double) $f1;

        $z1 = interfaceinvoke r0.<ucar.nc2.dt.GridDatatype: boolean isMissingData(double)>($d2);

        if $z1 == 0 goto label2;

        f2 = f0;

     label2:
        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setFloatNext(float)>(f2);

        goto label1;

     label3:
        return r6;
    }

    private ucar.ma2.ArrayByte replaceMissingValuesAndScale(ucar.nc2.dt.GridDatatype, ucar.ma2.Array)
    {
        ucar.nc2.dt.GridDatatype r0;
        ucar.ma2.ArrayByte r6;
        byte b2;
        int[] $r4;
        int i0, $i1;
        double $d0, $d1, $d2, d3, $d4, $d5, $d6, $d7, $d8;
        boolean $z0, $z1;
        ucar.ma2.MAMath$MinMax $r2;
        ucar.ma2.IndexIterator $r7, $r8;
        ucar.nc2.geotiff.GeotiffWriter r9;
        ucar.ma2.Array r1, $r5;
        java.lang.Class $r3;

        r9 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r0 := @parameter0: ucar.nc2.dt.GridDatatype;

        r1 := @parameter1: ucar.ma2.Array;

        $r2 = interfaceinvoke r0.<ucar.nc2.dt.GridDatatype: ucar.ma2.MAMath$MinMax getMinMaxSkipMissingData(ucar.ma2.Array)>(r1);

        $d1 = $r2.<ucar.ma2.MAMath$MinMax: double max>;

        $d0 = $r2.<ucar.ma2.MAMath$MinMax: double min>;

        $d2 = $d1 - $d0;

        d3 = 254.0 / $d2;

        $r3 = <java.lang.Byte: java.lang.Class TYPE>;

        $r4 = virtualinvoke r1.<ucar.ma2.Array: int[] getShape()>();

        $r5 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r3, $r4);

        r6 = (ucar.ma2.ArrayByte) $r5;

        $r7 = virtualinvoke r1.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r8 = virtualinvoke r6.<ucar.ma2.ArrayByte: ucar.ma2.IndexIterator getIndexIterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $d4 = interfaceinvoke $r7.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        $z1 = interfaceinvoke r0.<ucar.nc2.dt.GridDatatype: boolean isMissingData(double)>($d4);

        if $z1 == 0 goto label2;

        b2 = 0;

        goto label3;

     label2:
        $d5 = $r2.<ucar.ma2.MAMath$MinMax: double min>;

        $d6 = $d4 - $d5;

        $d7 = $d6 * d3;

        $d8 = $d7 + 1.0;

        i0 = (int) $d8;

        $i1 = i0 & 255;

        b2 = (byte) $i1;

     label3:
        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setByteNext(byte)>(b2);

        goto label1;

     label4:
        return r6;
    }

    private void addLatLonTags1()
    {
        ucar.nc2.geotiff.GeoKey$Tag $r3, $r7;
        ucar.nc2.geotiff.GeoTiff $r4, $r8;
        ucar.nc2.geotiff.GeotiffWriter r0;
        ucar.nc2.geotiff.GeoKey$TagValue $r2, $r6;
        ucar.nc2.geotiff.GeoKey $r1, $r5;

        r0 := @this: ucar.nc2.geotiff.GeotiffWriter;

        $r4 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r1 = new ucar.nc2.geotiff.GeoKey;

        $r3 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GTModelTypeGeoKey>;

        $r2 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ModelType_Geographic>;

        specialinvoke $r1.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r3, $r2);

        virtualinvoke $r4.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r1);

        $r8 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r5 = new ucar.nc2.geotiff.GeoKey;

        $r7 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeogGeodeticDatumGeoKey>;

        $r6 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue GeogGeodeticDatum6267>;

        specialinvoke $r5.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r7, $r6);

        virtualinvoke $r8.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r5);

        return;
    }

    private void addLatLonTags()
    {
        ucar.nc2.geotiff.GeoTiff $r4, $r8, $r12, $r16, $r20;
        ucar.nc2.geotiff.GeoKey $r1, $r5, $r9, $r13, $r17;
        ucar.nc2.geotiff.GeoKey$Tag $r3, $r7, $r11, $r15, $r19;
        ucar.nc2.geotiff.GeotiffWriter r0;
        ucar.nc2.geotiff.GeoKey$TagValue $r2, $r6, $r10, $r14, $r18;

        r0 := @this: ucar.nc2.geotiff.GeotiffWriter;

        $r4 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r1 = new ucar.nc2.geotiff.GeoKey;

        $r3 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GTModelTypeGeoKey>;

        $r2 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ModelType_Geographic>;

        specialinvoke $r1.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r3, $r2);

        virtualinvoke $r4.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r1);

        $r8 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r5 = new ucar.nc2.geotiff.GeoKey;

        $r7 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GTRasterTypeGeoKey>;

        $r6 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue RasterType_Area>;

        specialinvoke $r5.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r7, $r6);

        virtualinvoke $r8.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r5);

        $r12 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r9 = new ucar.nc2.geotiff.GeoKey;

        $r11 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeographicTypeGeoKey>;

        $r10 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue GeographicType_WGS_84>;

        specialinvoke $r9.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r11, $r10);

        virtualinvoke $r12.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r9);

        $r16 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r13 = new ucar.nc2.geotiff.GeoKey;

        $r15 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeogPrimeMeridianGeoKey>;

        $r14 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue GeogPrimeMeridian_GREENWICH>;

        specialinvoke $r13.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r15, $r14);

        virtualinvoke $r16.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r13);

        $r20 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r17 = new ucar.nc2.geotiff.GeoKey;

        $r19 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeogAngularUnitsGeoKey>;

        $r18 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue GeogAngularUnits_DEGREE>;

        specialinvoke $r17.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r19, $r18);

        virtualinvoke $r20.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r17);

        return;
    }

    private void addPolarStereographicTags(ucar.unidata.geoloc.projection.Stereographic, double, double)
    {
        ucar.nc2.geotiff.GeoTiff $r4, $r8, $r12, $r16, $r19, $r23, $r27, $r31, $r34, $r37, $r40, $r43, $r46;
        ucar.nc2.geotiff.GeoKey$Tag $r3, $r7, $r11, $r15, $r18, $r22, $r26, $r30, $r33, $r36, $r39, $r42, $r45;
        ucar.unidata.geoloc.projection.Stereographic r47;
        ucar.nc2.geotiff.GeoKey $r1, $r5, $r9, $r13, $r17, $r20, $r24, $r28, $r32, $r35, $r38, $r41, $r44;
        double d0, d1;
        ucar.nc2.geotiff.GeotiffWriter r0;
        ucar.nc2.geotiff.GeoKey$TagValue $r2, $r6, $r10, $r14, $r21, $r25, $r29;

        r0 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r47 := @parameter0: ucar.unidata.geoloc.projection.Stereographic;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $r4 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r1 = new ucar.nc2.geotiff.GeoKey;

        $r3 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GTModelTypeGeoKey>;

        $r2 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ModelType_Projected>;

        specialinvoke $r1.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r3, $r2);

        virtualinvoke $r4.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r1);

        $r8 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r5 = new ucar.nc2.geotiff.GeoKey;

        $r7 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GTRasterTypeGeoKey>;

        $r6 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue RasterType_Area>;

        specialinvoke $r5.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r7, $r6);

        virtualinvoke $r8.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r5);

        $r12 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r9 = new ucar.nc2.geotiff.GeoKey;

        $r11 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeographicTypeGeoKey>;

        $r10 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue GeographicType_WGS_84>;

        specialinvoke $r9.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r11, $r10);

        virtualinvoke $r12.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r9);

        $r16 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r13 = new ucar.nc2.geotiff.GeoKey;

        $r15 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjectedCSTypeGeoKey>;

        $r14 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjectedCSType_UserDefined>;

        specialinvoke $r13.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r15, $r14);

        virtualinvoke $r16.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r13);

        $r19 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r17 = new ucar.nc2.geotiff.GeoKey;

        $r18 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag PCSCitationGeoKey>;

        specialinvoke $r17.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,java.lang.String)>($r18, "Snyder");

        virtualinvoke $r19.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r17);

        $r23 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r20 = new ucar.nc2.geotiff.GeoKey;

        $r22 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjectionGeoKey>;

        $r21 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjectedCSType_UserDefined>;

        specialinvoke $r20.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r22, $r21);

        virtualinvoke $r23.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r20);

        $r27 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r24 = new ucar.nc2.geotiff.GeoKey;

        $r26 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjLinearUnitsGeoKey>;

        $r25 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjLinearUnits_METER>;

        specialinvoke $r24.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r26, $r25);

        virtualinvoke $r27.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r24);

        $r31 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r28 = new ucar.nc2.geotiff.GeoKey;

        $r30 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjCoordTransGeoKey>;

        $r29 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjCoordTrans_Stereographic>;

        specialinvoke $r28.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r30, $r29);

        virtualinvoke $r31.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r28);

        $r34 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r32 = new ucar.nc2.geotiff.GeoKey;

        $r33 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjCenterLongGeoKey>;

        specialinvoke $r32.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r33, 0.0);

        virtualinvoke $r34.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r32);

        $r37 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r35 = new ucar.nc2.geotiff.GeoKey;

        $r36 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjNatOriginLatGeoKey>;

        specialinvoke $r35.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r36, 90.0);

        virtualinvoke $r37.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r35);

        $r40 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r38 = new ucar.nc2.geotiff.GeoKey;

        $r39 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjScaleAtNatOriginGeoKey>;

        specialinvoke $r38.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r39, 1.0);

        virtualinvoke $r40.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r38);

        $r43 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r41 = new ucar.nc2.geotiff.GeoKey;

        $r42 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjFalseEastingGeoKey>;

        specialinvoke $r41.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r42, 0.0);

        virtualinvoke $r43.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r41);

        $r46 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r44 = new ucar.nc2.geotiff.GeoKey;

        $r45 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjFalseNorthingGeoKey>;

        specialinvoke $r44.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r45, 0.0);

        virtualinvoke $r46.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r44);

        return;
    }

    private void addLambertConformalTags(ucar.unidata.geoloc.projection.LambertConformal, double, double)
    {
        ucar.nc2.geotiff.GeotiffWriter r0;
        ucar.nc2.geotiff.GeoKey$TagValue $r2, $r6, $r10, $r14, $r21, $r25, $r29;
        ucar.nc2.geotiff.GeoTiff $r4, $r8, $r12, $r16, $r19, $r23, $r27, $r31, $r34, $r37, $r40, $r43, $r46, $r50, $r53, $r56;
        ucar.nc2.geotiff.GeoKey$Tag $r3, $r7, $r11, $r15, $r18, $r22, $r26, $r30, $r35, $r38, $r41, $r44, $r47, $r49, $r52, $r55;
        ucar.nc2.geotiff.GeoKey $r1, $r5, $r9, $r13, $r17, $r20, $r24, $r28, $r32, $r36, $r39, $r42, $r45, $r48, $r51, $r54;
        double $d0, $d1, $d2, $d3, $d4, d5, d6;
        ucar.unidata.geoloc.projection.LambertConformal r33;

        r0 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r33 := @parameter0: ucar.unidata.geoloc.projection.LambertConformal;

        d5 := @parameter1: double;

        d6 := @parameter2: double;

        $r4 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r1 = new ucar.nc2.geotiff.GeoKey;

        $r3 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GTModelTypeGeoKey>;

        $r2 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ModelType_Projected>;

        specialinvoke $r1.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r3, $r2);

        virtualinvoke $r4.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r1);

        $r8 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r5 = new ucar.nc2.geotiff.GeoKey;

        $r7 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GTRasterTypeGeoKey>;

        $r6 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue RasterType_Area>;

        specialinvoke $r5.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r7, $r6);

        virtualinvoke $r8.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r5);

        $r12 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r9 = new ucar.nc2.geotiff.GeoKey;

        $r11 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeographicTypeGeoKey>;

        $r10 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue GeographicType_WGS_84>;

        specialinvoke $r9.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r11, $r10);

        virtualinvoke $r12.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r9);

        $r16 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r13 = new ucar.nc2.geotiff.GeoKey;

        $r15 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjectedCSTypeGeoKey>;

        $r14 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjectedCSType_UserDefined>;

        specialinvoke $r13.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r15, $r14);

        virtualinvoke $r16.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r13);

        $r19 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r17 = new ucar.nc2.geotiff.GeoKey;

        $r18 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag PCSCitationGeoKey>;

        specialinvoke $r17.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,java.lang.String)>($r18, "Snyder");

        virtualinvoke $r19.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r17);

        $r23 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r20 = new ucar.nc2.geotiff.GeoKey;

        $r22 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjectionGeoKey>;

        $r21 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjectedCSType_UserDefined>;

        specialinvoke $r20.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r22, $r21);

        virtualinvoke $r23.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r20);

        $r27 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r24 = new ucar.nc2.geotiff.GeoKey;

        $r26 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjLinearUnitsGeoKey>;

        $r25 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjLinearUnits_METER>;

        specialinvoke $r24.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r26, $r25);

        virtualinvoke $r27.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r24);

        $r31 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r28 = new ucar.nc2.geotiff.GeoKey;

        $r30 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjCoordTransGeoKey>;

        $r29 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjCoordTrans_LambertConfConic_2SP>;

        specialinvoke $r28.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r30, $r29);

        virtualinvoke $r31.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r28);

        $r34 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r32 = new ucar.nc2.geotiff.GeoKey;

        $r35 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjStdParallel1GeoKey>;

        $d0 = virtualinvoke r33.<ucar.unidata.geoloc.projection.LambertConformal: double getParallelOne()>();

        specialinvoke $r32.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r35, $d0);

        virtualinvoke $r34.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r32);

        $r37 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r36 = new ucar.nc2.geotiff.GeoKey;

        $r38 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjStdParallel2GeoKey>;

        $d1 = virtualinvoke r33.<ucar.unidata.geoloc.projection.LambertConformal: double getParallelTwo()>();

        specialinvoke $r36.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r38, $d1);

        virtualinvoke $r37.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r36);

        $r40 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r39 = new ucar.nc2.geotiff.GeoKey;

        $r41 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjCenterLongGeoKey>;

        $d2 = virtualinvoke r33.<ucar.unidata.geoloc.projection.LambertConformal: double getOriginLon()>();

        specialinvoke $r39.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r41, $d2);

        virtualinvoke $r40.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r39);

        $r43 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r42 = new ucar.nc2.geotiff.GeoKey;

        $r44 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjNatOriginLatGeoKey>;

        $d3 = virtualinvoke r33.<ucar.unidata.geoloc.projection.LambertConformal: double getOriginLat()>();

        specialinvoke $r42.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r44, $d3);

        virtualinvoke $r43.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r42);

        $r46 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r45 = new ucar.nc2.geotiff.GeoKey;

        $r47 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjNatOriginLongGeoKey>;

        $d4 = virtualinvoke r33.<ucar.unidata.geoloc.projection.LambertConformal: double getOriginLon()>();

        specialinvoke $r45.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r47, $d4);

        virtualinvoke $r46.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r45);

        $r50 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r48 = new ucar.nc2.geotiff.GeoKey;

        $r49 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjScaleAtNatOriginGeoKey>;

        specialinvoke $r48.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r49, 1.0);

        virtualinvoke $r50.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r48);

        $r53 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r51 = new ucar.nc2.geotiff.GeoKey;

        $r52 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjFalseEastingGeoKey>;

        specialinvoke $r51.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r52, 0.0);

        virtualinvoke $r53.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r51);

        $r56 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r54 = new ucar.nc2.geotiff.GeoKey;

        $r55 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjFalseNorthingGeoKey>;

        specialinvoke $r54.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r55, 0.0);

        virtualinvoke $r56.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r54);

        return;
    }

    private void addMercatorTags(ucar.unidata.geoloc.projection.Mercator)
    {
        ucar.nc2.geotiff.GeoTiff $r4, $r8, $r12, $r16, $r19, $r23, $r27, $r31, $r34, $r37, $r41, $r44;
        ucar.nc2.geotiff.GeoKey$Tag $r3, $r7, $r11, $r15, $r18, $r22, $r26, $r30, $r35, $r38, $r40, $r43;
        ucar.unidata.geoloc.projection.Mercator r33;
        ucar.nc2.geotiff.GeoKey $r1, $r5, $r9, $r13, $r17, $r20, $r24, $r28, $r32, $r36, $r39, $r42;
        double $d0, $d1;
        ucar.nc2.geotiff.GeotiffWriter r0;
        ucar.nc2.geotiff.GeoKey$TagValue $r2, $r6, $r10, $r14, $r21, $r25, $r29;

        r0 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r33 := @parameter0: ucar.unidata.geoloc.projection.Mercator;

        $r4 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r1 = new ucar.nc2.geotiff.GeoKey;

        $r3 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GTModelTypeGeoKey>;

        $r2 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ModelType_Projected>;

        specialinvoke $r1.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r3, $r2);

        virtualinvoke $r4.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r1);

        $r8 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r5 = new ucar.nc2.geotiff.GeoKey;

        $r7 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GTRasterTypeGeoKey>;

        $r6 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue RasterType_Area>;

        specialinvoke $r5.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r7, $r6);

        virtualinvoke $r8.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r5);

        $r12 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r9 = new ucar.nc2.geotiff.GeoKey;

        $r11 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeographicTypeGeoKey>;

        $r10 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue GeographicType_WGS_84>;

        specialinvoke $r9.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r11, $r10);

        virtualinvoke $r12.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r9);

        $r16 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r13 = new ucar.nc2.geotiff.GeoKey;

        $r15 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjectedCSTypeGeoKey>;

        $r14 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjectedCSType_UserDefined>;

        specialinvoke $r13.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r15, $r14);

        virtualinvoke $r16.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r13);

        $r19 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r17 = new ucar.nc2.geotiff.GeoKey;

        $r18 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag PCSCitationGeoKey>;

        specialinvoke $r17.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,java.lang.String)>($r18, "Mercator");

        virtualinvoke $r19.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r17);

        $r23 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r20 = new ucar.nc2.geotiff.GeoKey;

        $r22 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjectionGeoKey>;

        $r21 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjectedCSType_UserDefined>;

        specialinvoke $r20.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r22, $r21);

        virtualinvoke $r23.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r20);

        $r27 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r24 = new ucar.nc2.geotiff.GeoKey;

        $r26 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjLinearUnitsGeoKey>;

        $r25 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjLinearUnits_METER>;

        specialinvoke $r24.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r26, $r25);

        virtualinvoke $r27.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r24);

        $r31 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r28 = new ucar.nc2.geotiff.GeoKey;

        $r30 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjCoordTransGeoKey>;

        $r29 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjCoordTrans_Mercator>;

        specialinvoke $r28.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r30, $r29);

        virtualinvoke $r31.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r28);

        $r34 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r32 = new ucar.nc2.geotiff.GeoKey;

        $r35 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjNatOriginLongGeoKey>;

        $d0 = virtualinvoke r33.<ucar.unidata.geoloc.projection.Mercator: double getOriginLon()>();

        specialinvoke $r32.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r35, $d0);

        virtualinvoke $r34.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r32);

        $r37 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r36 = new ucar.nc2.geotiff.GeoKey;

        $r38 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjNatOriginLatGeoKey>;

        $d1 = virtualinvoke r33.<ucar.unidata.geoloc.projection.Mercator: double getParallel()>();

        specialinvoke $r36.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r38, $d1);

        virtualinvoke $r37.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r36);

        $r41 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r39 = new ucar.nc2.geotiff.GeoKey;

        $r40 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjFalseEastingGeoKey>;

        specialinvoke $r39.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r40, 0.0);

        virtualinvoke $r41.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r39);

        $r44 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r42 = new ucar.nc2.geotiff.GeoKey;

        $r43 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjFalseNorthingGeoKey>;

        specialinvoke $r42.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r43, 0.0);

        virtualinvoke $r44.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r42);

        return;
    }

    private void addTransverseMercatorTags(ucar.unidata.geoloc.projection.TransverseMercator)
    {
        ucar.nc2.geotiff.GeoTiff $r4, $r8, $r12, $r16, $r20, $r24, $r27, $r31, $r35, $r39, $r42, $r45, $r48, $r52, $r55, $r58;
        ucar.unidata.geoloc.projection.TransverseMercator r41;
        ucar.nc2.geotiff.GeoKey$Tag $r3, $r7, $r11, $r15, $r19, $r23, $r26, $r30, $r34, $r38, $r43, $r46, $r49, $r51, $r54, $r57;
        ucar.nc2.geotiff.GeoKey $r1, $r5, $r9, $r13, $r17, $r21, $r25, $r28, $r32, $r36, $r40, $r44, $r47, $r50, $r53, $r56;
        double $d0, $d1, $d2;
        ucar.nc2.geotiff.GeotiffWriter r0;
        ucar.nc2.geotiff.GeoKey$TagValue $r2, $r6, $r10, $r14, $r18, $r22, $r29, $r33, $r37;

        r0 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r41 := @parameter0: ucar.unidata.geoloc.projection.TransverseMercator;

        $r4 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r1 = new ucar.nc2.geotiff.GeoKey;

        $r3 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GTModelTypeGeoKey>;

        $r2 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ModelType_Projected>;

        specialinvoke $r1.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r3, $r2);

        virtualinvoke $r4.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r1);

        $r8 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r5 = new ucar.nc2.geotiff.GeoKey;

        $r7 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GTRasterTypeGeoKey>;

        $r6 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue RasterType_Area>;

        specialinvoke $r5.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r7, $r6);

        virtualinvoke $r8.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r5);

        $r12 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r9 = new ucar.nc2.geotiff.GeoKey;

        $r11 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeographicTypeGeoKey>;

        $r10 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue GeographicType_WGS_84>;

        specialinvoke $r9.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r11, $r10);

        virtualinvoke $r12.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r9);

        $r16 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r13 = new ucar.nc2.geotiff.GeoKey;

        $r15 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeogLinearUnitsGeoKey>;

        $r14 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjLinearUnits_METER>;

        specialinvoke $r13.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r15, $r14);

        virtualinvoke $r16.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r13);

        $r20 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r17 = new ucar.nc2.geotiff.GeoKey;

        $r19 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeogAngularUnitsGeoKey>;

        $r18 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue GeogAngularUnits_DEGREE>;

        specialinvoke $r17.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r19, $r18);

        virtualinvoke $r20.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r17);

        $r24 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r21 = new ucar.nc2.geotiff.GeoKey;

        $r23 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjectedCSTypeGeoKey>;

        $r22 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjectedCSType_UserDefined>;

        specialinvoke $r21.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r23, $r22);

        virtualinvoke $r24.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r21);

        $r27 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r25 = new ucar.nc2.geotiff.GeoKey;

        $r26 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag PCSCitationGeoKey>;

        specialinvoke $r25.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,java.lang.String)>($r26, "Transvers Mercator");

        virtualinvoke $r27.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r25);

        $r31 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r28 = new ucar.nc2.geotiff.GeoKey;

        $r30 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjectionGeoKey>;

        $r29 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjectedCSType_UserDefined>;

        specialinvoke $r28.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r30, $r29);

        virtualinvoke $r31.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r28);

        $r35 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r32 = new ucar.nc2.geotiff.GeoKey;

        $r34 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjLinearUnitsGeoKey>;

        $r33 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjLinearUnits_METER>;

        specialinvoke $r32.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r34, $r33);

        virtualinvoke $r35.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r32);

        $r39 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r36 = new ucar.nc2.geotiff.GeoKey;

        $r38 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjCoordTransGeoKey>;

        $r37 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjCoordTrans_TransverseMercator>;

        specialinvoke $r36.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r38, $r37);

        virtualinvoke $r39.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r36);

        $r42 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r40 = new ucar.nc2.geotiff.GeoKey;

        $r43 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjNatOriginLatGeoKey>;

        $d0 = virtualinvoke r41.<ucar.unidata.geoloc.projection.TransverseMercator: double getOriginLat()>();

        specialinvoke $r40.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r43, $d0);

        virtualinvoke $r42.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r40);

        $r45 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r44 = new ucar.nc2.geotiff.GeoKey;

        $r46 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjNatOriginLongGeoKey>;

        $d1 = virtualinvoke r41.<ucar.unidata.geoloc.projection.TransverseMercator: double getTangentLon()>();

        specialinvoke $r44.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r46, $d1);

        virtualinvoke $r45.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r44);

        $r48 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r47 = new ucar.nc2.geotiff.GeoKey;

        $r49 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjScaleAtNatOriginGeoKey>;

        $d2 = virtualinvoke r41.<ucar.unidata.geoloc.projection.TransverseMercator: double getScale()>();

        specialinvoke $r47.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r49, $d2);

        virtualinvoke $r48.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r47);

        $r52 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r50 = new ucar.nc2.geotiff.GeoKey;

        $r51 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjScaleAtNatOriginGeoKey>;

        specialinvoke $r50.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r51, 1.0);

        virtualinvoke $r52.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r50);

        $r55 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r53 = new ucar.nc2.geotiff.GeoKey;

        $r54 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjFalseEastingGeoKey>;

        specialinvoke $r53.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r54, 0.0);

        virtualinvoke $r55.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r53);

        $r58 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r56 = new ucar.nc2.geotiff.GeoKey;

        $r57 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjFalseNorthingGeoKey>;

        specialinvoke $r56.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r57, 0.0);

        virtualinvoke $r58.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r56);

        return;
    }

    private void addAlbersEqualAreaEllipseTags(ucar.unidata.geoloc.projection.proj4.AlbersEqualAreaEllipse)
    {
        ucar.unidata.geoloc.Earth $r21, $r25;
        ucar.nc2.geotiff.GeotiffWriter r0;
        ucar.nc2.geotiff.GeoKey$TagValue $r2, $r6, $r10, $r14, $r27, $r31, $r38, $r42, $r46;
        ucar.nc2.geotiff.GeoTiff $r4, $r8, $r12, $r16, $r19, $r23, $r29, $r33, $r36, $r40, $r44, $r48, $r50, $r53, $r56, $r59, $r63, $r66;
        ucar.nc2.geotiff.GeoKey$Tag $r3, $r7, $r11, $r15, $r20, $r24, $r28, $r32, $r35, $r39, $r43, $r47, $r51, $r54, $r57, $r60, $r62, $r65;
        ucar.unidata.geoloc.projection.proj4.AlbersEqualAreaEllipse r18;
        ucar.nc2.geotiff.GeoKey $r1, $r5, $r9, $r13, $r17, $r22, $r26, $r30, $r34, $r37, $r41, $r45, $r49, $r52, $r55, $r58, $r61, $r64;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r18 := @parameter0: ucar.unidata.geoloc.projection.proj4.AlbersEqualAreaEllipse;

        $r4 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r1 = new ucar.nc2.geotiff.GeoKey;

        $r3 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GTModelTypeGeoKey>;

        $r2 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ModelType_Projected>;

        specialinvoke $r1.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r3, $r2);

        virtualinvoke $r4.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r1);

        $r8 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r5 = new ucar.nc2.geotiff.GeoKey;

        $r7 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GTRasterTypeGeoKey>;

        $r6 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue RasterType_Area>;

        specialinvoke $r5.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r7, $r6);

        virtualinvoke $r8.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r5);

        $r12 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r9 = new ucar.nc2.geotiff.GeoKey;

        $r11 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeographicTypeGeoKey>;

        $r10 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue GeographicType_WGS_84>;

        specialinvoke $r9.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r11, $r10);

        virtualinvoke $r12.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r9);

        $r16 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r13 = new ucar.nc2.geotiff.GeoKey;

        $r15 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeogLinearUnitsGeoKey>;

        $r14 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjLinearUnits_METER>;

        specialinvoke $r13.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r15, $r14);

        virtualinvoke $r16.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r13);

        $r19 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r17 = new ucar.nc2.geotiff.GeoKey;

        $r20 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeogSemiMajorAxisGeoKey>;

        $r21 = virtualinvoke r18.<ucar.unidata.geoloc.projection.proj4.AlbersEqualAreaEllipse: ucar.unidata.geoloc.Earth getEarth()>();

        $d0 = virtualinvoke $r21.<ucar.unidata.geoloc.Earth: double getMajor()>();

        specialinvoke $r17.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r20, $d0);

        virtualinvoke $r19.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r17);

        $r23 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r22 = new ucar.nc2.geotiff.GeoKey;

        $r24 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeogSemiMinorAxisGeoKey>;

        $r25 = virtualinvoke r18.<ucar.unidata.geoloc.projection.proj4.AlbersEqualAreaEllipse: ucar.unidata.geoloc.Earth getEarth()>();

        $d1 = virtualinvoke $r25.<ucar.unidata.geoloc.Earth: double getMinor()>();

        specialinvoke $r22.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r24, $d1);

        virtualinvoke $r23.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r22);

        $r29 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r26 = new ucar.nc2.geotiff.GeoKey;

        $r28 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeogAngularUnitsGeoKey>;

        $r27 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue GeogAngularUnits_DEGREE>;

        specialinvoke $r26.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r28, $r27);

        virtualinvoke $r29.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r26);

        $r33 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r30 = new ucar.nc2.geotiff.GeoKey;

        $r32 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjectedCSTypeGeoKey>;

        $r31 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjectedCSType_UserDefined>;

        specialinvoke $r30.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r32, $r31);

        virtualinvoke $r33.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r30);

        $r36 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r34 = new ucar.nc2.geotiff.GeoKey;

        $r35 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag PCSCitationGeoKey>;

        specialinvoke $r34.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,java.lang.String)>($r35, "Albers Conial Equal Area");

        virtualinvoke $r36.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r34);

        $r40 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r37 = new ucar.nc2.geotiff.GeoKey;

        $r39 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjectionGeoKey>;

        $r38 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjectedCSType_UserDefined>;

        specialinvoke $r37.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r39, $r38);

        virtualinvoke $r40.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r37);

        $r44 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r41 = new ucar.nc2.geotiff.GeoKey;

        $r43 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjLinearUnitsGeoKey>;

        $r42 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjLinearUnits_METER>;

        specialinvoke $r41.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r43, $r42);

        virtualinvoke $r44.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r41);

        $r48 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r45 = new ucar.nc2.geotiff.GeoKey;

        $r47 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjCoordTransGeoKey>;

        $r46 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjCoordTrans_AlbersEqualAreaEllipse>;

        specialinvoke $r45.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r47, $r46);

        virtualinvoke $r48.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r45);

        $r50 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r49 = new ucar.nc2.geotiff.GeoKey;

        $r51 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjNatOriginLatGeoKey>;

        $d2 = virtualinvoke r18.<ucar.unidata.geoloc.projection.proj4.AlbersEqualAreaEllipse: double getOriginLat()>();

        specialinvoke $r49.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r51, $d2);

        virtualinvoke $r50.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r49);

        $r53 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r52 = new ucar.nc2.geotiff.GeoKey;

        $r54 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjNatOriginLongGeoKey>;

        $d3 = virtualinvoke r18.<ucar.unidata.geoloc.projection.proj4.AlbersEqualAreaEllipse: double getOriginLon()>();

        specialinvoke $r52.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r54, $d3);

        virtualinvoke $r53.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r52);

        $r56 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r55 = new ucar.nc2.geotiff.GeoKey;

        $r57 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjStdParallel1GeoKey>;

        $d4 = virtualinvoke r18.<ucar.unidata.geoloc.projection.proj4.AlbersEqualAreaEllipse: double getParallelOne()>();

        specialinvoke $r55.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r57, $d4);

        virtualinvoke $r56.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r55);

        $r59 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r58 = new ucar.nc2.geotiff.GeoKey;

        $r60 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjStdParallel2GeoKey>;

        $d5 = virtualinvoke r18.<ucar.unidata.geoloc.projection.proj4.AlbersEqualAreaEllipse: double getParallelTwo()>();

        specialinvoke $r58.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r60, $d5);

        virtualinvoke $r59.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r58);

        $r63 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r61 = new ucar.nc2.geotiff.GeoKey;

        $r62 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjFalseEastingGeoKey>;

        specialinvoke $r61.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r62, 0.0);

        virtualinvoke $r63.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r61);

        $r66 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r64 = new ucar.nc2.geotiff.GeoKey;

        $r65 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjFalseNorthingGeoKey>;

        specialinvoke $r64.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r65, 0.0);

        virtualinvoke $r66.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r64);

        return;
    }

    private void addAlbersEqualAreaTags(ucar.unidata.geoloc.projection.AlbersEqualArea)
    {
        ucar.nc2.geotiff.GeoTiff $r4, $r8, $r12, $r16, $r20, $r24, $r27, $r31, $r35, $r39, $r42, $r45, $r48, $r51, $r55, $r58;
        ucar.nc2.geotiff.GeoKey$Tag $r3, $r7, $r11, $r15, $r19, $r23, $r26, $r30, $r34, $r38, $r43, $r46, $r49, $r52, $r54, $r57;
        ucar.unidata.geoloc.projection.AlbersEqualArea r41;
        ucar.nc2.geotiff.GeoKey $r1, $r5, $r9, $r13, $r17, $r21, $r25, $r28, $r32, $r36, $r40, $r44, $r47, $r50, $r53, $r56;
        double $d0, $d1, $d2, $d3;
        ucar.nc2.geotiff.GeotiffWriter r0;
        ucar.nc2.geotiff.GeoKey$TagValue $r2, $r6, $r10, $r14, $r18, $r22, $r29, $r33, $r37;

        r0 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r41 := @parameter0: ucar.unidata.geoloc.projection.AlbersEqualArea;

        $r4 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r1 = new ucar.nc2.geotiff.GeoKey;

        $r3 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GTModelTypeGeoKey>;

        $r2 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ModelType_Projected>;

        specialinvoke $r1.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r3, $r2);

        virtualinvoke $r4.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r1);

        $r8 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r5 = new ucar.nc2.geotiff.GeoKey;

        $r7 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GTRasterTypeGeoKey>;

        $r6 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue RasterType_Area>;

        specialinvoke $r5.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r7, $r6);

        virtualinvoke $r8.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r5);

        $r12 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r9 = new ucar.nc2.geotiff.GeoKey;

        $r11 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeographicTypeGeoKey>;

        $r10 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue GeographicType_WGS_84>;

        specialinvoke $r9.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r11, $r10);

        virtualinvoke $r12.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r9);

        $r16 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r13 = new ucar.nc2.geotiff.GeoKey;

        $r15 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeogLinearUnitsGeoKey>;

        $r14 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjLinearUnits_METER>;

        specialinvoke $r13.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r15, $r14);

        virtualinvoke $r16.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r13);

        $r20 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r17 = new ucar.nc2.geotiff.GeoKey;

        $r19 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag GeogAngularUnitsGeoKey>;

        $r18 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue GeogAngularUnits_DEGREE>;

        specialinvoke $r17.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r19, $r18);

        virtualinvoke $r20.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r17);

        $r24 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r21 = new ucar.nc2.geotiff.GeoKey;

        $r23 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjectedCSTypeGeoKey>;

        $r22 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjectedCSType_UserDefined>;

        specialinvoke $r21.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r23, $r22);

        virtualinvoke $r24.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r21);

        $r27 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r25 = new ucar.nc2.geotiff.GeoKey;

        $r26 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag PCSCitationGeoKey>;

        specialinvoke $r25.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,java.lang.String)>($r26, "Albers Conial Equal Area");

        virtualinvoke $r27.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r25);

        $r31 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r28 = new ucar.nc2.geotiff.GeoKey;

        $r30 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjectionGeoKey>;

        $r29 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjectedCSType_UserDefined>;

        specialinvoke $r28.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r30, $r29);

        virtualinvoke $r31.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r28);

        $r35 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r32 = new ucar.nc2.geotiff.GeoKey;

        $r34 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjLinearUnitsGeoKey>;

        $r33 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjLinearUnits_METER>;

        specialinvoke $r32.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r34, $r33);

        virtualinvoke $r35.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r32);

        $r39 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r36 = new ucar.nc2.geotiff.GeoKey;

        $r38 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjCoordTransGeoKey>;

        $r37 = <ucar.nc2.geotiff.GeoKey$TagValue: ucar.nc2.geotiff.GeoKey$TagValue ProjCoordTrans_AlbersConicalEqualArea>;

        specialinvoke $r36.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,ucar.nc2.geotiff.GeoKey$TagValue)>($r38, $r37);

        virtualinvoke $r39.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r36);

        $r42 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r40 = new ucar.nc2.geotiff.GeoKey;

        $r43 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjNatOriginLatGeoKey>;

        $d0 = virtualinvoke r41.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getOriginLat()>();

        specialinvoke $r40.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r43, $d0);

        virtualinvoke $r42.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r40);

        $r45 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r44 = new ucar.nc2.geotiff.GeoKey;

        $r46 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjNatOriginLongGeoKey>;

        $d1 = virtualinvoke r41.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getOriginLon()>();

        specialinvoke $r44.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r46, $d1);

        virtualinvoke $r45.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r44);

        $r48 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r47 = new ucar.nc2.geotiff.GeoKey;

        $r49 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjStdParallel1GeoKey>;

        $d2 = virtualinvoke r41.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getParallelOne()>();

        specialinvoke $r47.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r49, $d2);

        virtualinvoke $r48.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r47);

        $r51 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r50 = new ucar.nc2.geotiff.GeoKey;

        $r52 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjStdParallel2GeoKey>;

        $d3 = virtualinvoke r41.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getParallelTwo()>();

        specialinvoke $r50.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r52, $d3);

        virtualinvoke $r51.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r50);

        $r55 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r53 = new ucar.nc2.geotiff.GeoKey;

        $r54 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjFalseEastingGeoKey>;

        specialinvoke $r53.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r54, 0.0);

        virtualinvoke $r55.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r53);

        $r58 = r0.<ucar.nc2.geotiff.GeotiffWriter: ucar.nc2.geotiff.GeoTiff geotiff>;

        $r56 = new ucar.nc2.geotiff.GeoKey;

        $r57 = <ucar.nc2.geotiff.GeoKey$Tag: ucar.nc2.geotiff.GeoKey$Tag ProjFalseNorthingGeoKey>;

        specialinvoke $r56.<ucar.nc2.geotiff.GeoKey: void <init>(ucar.nc2.geotiff.GeoKey$Tag,double)>($r57, 0.0);

        virtualinvoke $r58.<ucar.nc2.geotiff.GeoTiff: void addGeoKey(ucar.nc2.geotiff.GeoKey)>($r56);

        return;
    }

    private void dump(ucar.ma2.Array, int)
    {
        java.io.PrintStream $r5;
        ucar.nc2.geotiff.GeotiffWriter r10;
        ucar.ma2.Array r0;
        int[] $r1;
        ucar.ma2.Index $r2, $r3;
        int $i0, i1, i2;
        float $f0;
        java.lang.StringBuilder $r4, $r6, $r7, $r8;
        java.lang.String $r9;

        r10 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r0 := @parameter0: ucar.ma2.Array;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<ucar.ma2.Array: int[] getShape()>();

        $r2 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        i2 = 0;

     label1:
        $i0 = $r1[0];

        if i2 >= $i0 goto label2;

        $r3 = virtualinvoke $r2.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i2, i1);

        $f0 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r3);

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value= ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private double geoShiftGetXstart(ucar.ma2.Array, double)
    {
        byte $b2, $b3;
        int[] $r2;
        int $i0, $i1, $i4;
        double $d0, $d1, $d2, $d3, d4, $d5, $d6, d7;
        boolean $z0;
        ucar.ma2.IndexIterator $r3;
        ucar.nc2.geotiff.GeotiffWriter r9;
        ucar.ma2.Array r0;
        ucar.ma2.Index $r1, $r5, $r7;
        float $f0, $f1, $f2;
        ucar.unidata.geoloc.LatLonPointImpl $r10, $r11, $r12;

        r9 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r0 := @parameter0: ucar.ma2.Array;

        d4 := @parameter1: double;

        $r1 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r2 = virtualinvoke r0.<ucar.ma2.Array: int[] getShape()>();

        $r3 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r10 = new ucar.unidata.geoloc.LatLonPointImpl;

        $r5 = virtualinvoke $r1.<ucar.ma2.Index: ucar.ma2.Index set(int)>(0);

        $f0 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r5);

        $d0 = (double) $f0;

        specialinvoke $r10.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(0.0, $d0);

        $r11 = new ucar.unidata.geoloc.LatLonPointImpl;

        $i0 = $r2[0];

        $i1 = $i0 - 1;

        $r7 = virtualinvoke $r1.<ucar.ma2.Index: ucar.ma2.Index set(int)>($i1);

        $f1 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r7);

        $d1 = (double) $f1;

        specialinvoke $r11.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(0.0, $d1);

        d7 = interfaceinvoke $r10.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

     label1:
        $z0 = interfaceinvoke $r3.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $f2 = interfaceinvoke $r3.<ucar.ma2.IndexIterator: float getFloatNext()>();

        $r12 = new ucar.unidata.geoloc.LatLonPointImpl;

        $d5 = (double) $f2;

        specialinvoke $r12.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(0.0, $d5);

        $d6 = interfaceinvoke $r12.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $b3 = $d6 cmpg d7;

        $i4 = (int) $b3;

        if $i4 >= 0 goto label2;

        d7 = interfaceinvoke $r12.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

     label2:
        goto label1;

     label3:
        $d2 = interfaceinvoke $r10.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $d3 = interfaceinvoke $r11.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $b2 = $d2 cmpl $d3;

        if $b2 != 0 goto label4;

        d7 = d7 - d4;

     label4:
        return d7;
    }

    private ucar.ma2.Array geoShiftDataAtLon(ucar.ma2.Array, ucar.ma2.Array)
    {
        ucar.ma2.ArrayFloat $r19;
        byte $b4, $b8, $b14;
        int[] $r1, $r5, $r7;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, i15, i16, i17, i18, i19, $i20, i21, $i22;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        ucar.ma2.IndexIterator $r9;
        ucar.nc2.geotiff.GeotiffWriter r18;
        ucar.ma2.Array r0, r3;
        ucar.ma2.Index $r2, $r4, $r8, $r11, $r13, $r14, $r15, $r16, $r17;
        ucar.unidata.geoloc.LatLonPointImpl $r20, $r21;

        r18 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r0 := @parameter0: ucar.ma2.Array;

        r3 := @parameter1: ucar.ma2.Array;

        i15 = 0;

        $r1 = virtualinvoke r0.<ucar.ma2.Array: int[] getShape()>();

        $r2 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r4 = virtualinvoke r3.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r5 = virtualinvoke r3.<ucar.ma2.Array: int[] getShape()>();

        $r19 = new ucar.ma2.ArrayFloat;

        $r7 = newarray (int)[2];

        $i0 = $r1[0];

        $r7[0] = $i0;

        $i1 = $r1[1];

        $r7[1] = $i1;

        specialinvoke $r19.<ucar.ma2.ArrayFloat: void <init>(int[])>($r7);

        $r8 = virtualinvoke $r19.<ucar.ma2.ArrayFloat: ucar.ma2.Index getIndex()>();

        $r9 = virtualinvoke r3.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r20 = new ucar.unidata.geoloc.LatLonPointImpl;

        $i2 = $r5[0];

        $i3 = $i2 - 1;

        $r11 = virtualinvoke $r4.<ucar.ma2.Index: ucar.ma2.Index set(int)>($i3);

        $f0 = virtualinvoke r3.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r11);

        $d0 = (double) $f0;

        specialinvoke $r20.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(0.0, $d0);

        $r21 = new ucar.unidata.geoloc.LatLonPointImpl;

        $r13 = virtualinvoke $r4.<ucar.ma2.Index: ucar.ma2.Index set(int)>(0);

        $f1 = virtualinvoke r3.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r13);

        $d1 = (double) $f1;

        specialinvoke $r21.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(0.0, $d1);

     label01:
        $z0 = interfaceinvoke $r9.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $f4 = interfaceinvoke $r9.<ucar.ma2.IndexIterator: float getFloatNext()>();

        $d6 = (double) $f4;

        $b14 = $d6 cmpl 180.0;

        $i22 = (int) $b14;

        if $i22 <= 0 goto label02;

        i15 = i15 + 1;

     label02:
        goto label01;

     label03:
        $d2 = interfaceinvoke $r20.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $d3 = interfaceinvoke $r21.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $b4 = $d2 cmpl $d3;

        if $b4 != 0 goto label04;

        $i12 = $r1[1];

        $i13 = $i12 - i15;

        i16 = $i13 - 1;

        goto label05;

     label04:
        $i5 = $r1[1];

        i16 = $i5 - i15;

     label05:
        if i15 <= 0 goto label14;

        $i6 = $r1[1];

        if $i6 <= i15 goto label14;

        i17 = 1;

     label06:
        $i7 = $r1[1];

        if i17 >= $i7 goto label11;

        if i17 < i15 goto label07;

        i18 = i17 - i15;

        goto label08;

     label07:
        i18 = i17 + i16;

     label08:
        i19 = 0;

     label09:
        $i20 = $r1[0];

        if i19 >= $i20 goto label10;

        $r16 = virtualinvoke $r2.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i19, i18);

        $f3 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r16);

        $r17 = virtualinvoke $r8.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i19, i17);

        virtualinvoke $r19.<ucar.ma2.ArrayFloat: void setFloat(ucar.ma2.Index,float)>($r17, $f3);

        i19 = i19 + 1;

        goto label09;

     label10:
        i17 = i17 + 1;

        goto label06;

     label11:
        $d4 = interfaceinvoke $r20.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $d5 = interfaceinvoke $r21.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $b8 = $d4 cmpl $d5;

        if $b8 != 0 goto label13;

        i21 = 0;

     label12:
        $i9 = $r1[0];

        if i21 >= $i9 goto label13;

        $i10 = $r1[1];

        $i11 = $i10 - 1;

        $r14 = virtualinvoke $r8.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i21, $i11);

        $f2 = virtualinvoke $r19.<ucar.ma2.ArrayFloat: float getFloat(ucar.ma2.Index)>($r14);

        $r15 = virtualinvoke $r8.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i21, 0);

        virtualinvoke $r19.<ucar.ma2.ArrayFloat: void setFloat(ucar.ma2.Index,float)>($r15, $f2);

        i21 = i21 + 1;

        goto label12;

     label13:
        return $r19;

     label14:
        return r0;
    }

    private ucar.ma2.Array geoShiftLon(ucar.ma2.Array)
    {
        ucar.ma2.ArrayFloat $r17;
        byte $b3, $b7, $b12;
        int[] $r2, $r4;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i8, $i9, $i10, $i11, i13, i14, i15, i16, $i17;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        ucar.ma2.IndexIterator $r6;
        ucar.nc2.geotiff.GeotiffWriter r16;
        ucar.ma2.Array r0;
        ucar.ma2.Index $r1, $r5, $r9, $r11, $r12, $r13, $r14, $r15;
        ucar.unidata.geoloc.LatLonPointImpl $r18, $r19, $r20;

        r16 := @this: ucar.nc2.geotiff.GeotiffWriter;

        r0 := @parameter0: ucar.ma2.Array;

        i13 = 0;

        $r1 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r2 = virtualinvoke r0.<ucar.ma2.Array: int[] getShape()>();

        $r17 = new ucar.ma2.ArrayFloat;

        $r4 = newarray (int)[1];

        $i0 = $r2[0];

        $r4[0] = $i0;

        specialinvoke $r17.<ucar.ma2.ArrayFloat: void <init>(int[])>($r4);

        $r5 = virtualinvoke $r17.<ucar.ma2.ArrayFloat: ucar.ma2.Index getIndex()>();

        $r6 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r18 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r18.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        $r19 = new ucar.unidata.geoloc.LatLonPointImpl;

        $i1 = $r2[0];

        $i2 = $i1 - 1;

        $r9 = virtualinvoke $r1.<ucar.ma2.Index: ucar.ma2.Index set(int)>($i2);

        $f0 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r9);

        $d0 = (double) $f0;

        specialinvoke $r19.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(0.0, $d0);

        $r20 = new ucar.unidata.geoloc.LatLonPointImpl;

        $r11 = virtualinvoke $r1.<ucar.ma2.Index: ucar.ma2.Index set(int)>(0);

        $f1 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r11);

        $d1 = (double) $f1;

        specialinvoke $r20.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(0.0, $d1);

     label01:
        $z0 = interfaceinvoke $r6.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $f7 = interfaceinvoke $r6.<ucar.ma2.IndexIterator: float getFloatNext()>();

        $d10 = (double) $f7;

        $b12 = $d10 cmpl 180.0;

        $i17 = (int) $b12;

        if $i17 <= 0 goto label02;

        i13 = i13 + 1;

     label02:
        goto label01;

     label03:
        $d2 = interfaceinvoke $r19.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $d3 = interfaceinvoke $r20.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $b3 = $d2 cmpl $d3;

        if $b3 != 0 goto label04;

        $i10 = $r2[0];

        $i11 = $i10 - i13;

        i14 = $i11 - 1;

        goto label05;

     label04:
        $i4 = $r2[0];

        i14 = $i4 - i13;

     label05:
        if i13 <= 0 goto label11;

        $i5 = $r2[0];

        if $i5 <= i13 goto label11;

        i15 = 1;

     label06:
        $i6 = $r2[0];

        if i15 >= $i6 goto label09;

        if i15 < i13 goto label07;

        i16 = i15 - i13;

        goto label08;

     label07:
        i16 = i15 + i14;

     label08:
        $r14 = virtualinvoke $r1.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i16);

        $f5 = virtualinvoke r0.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r14);

        $r15 = virtualinvoke $r5.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i15);

        $d8 = (double) $f5;

        $d9 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double lonNormal(double)>($d8);

        $f6 = (float) $d9;

        virtualinvoke $r17.<ucar.ma2.ArrayFloat: void setFloat(ucar.ma2.Index,float)>($r15, $f6);

        i15 = i15 + 1;

        goto label06;

     label09:
        $d4 = interfaceinvoke $r19.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $d5 = interfaceinvoke $r20.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $b7 = $d4 cmpl $d5;

        if $b7 != 0 goto label10;

        $i8 = $r2[0];

        $i9 = $i8 - 1;

        $r12 = virtualinvoke $r5.<ucar.ma2.Index: ucar.ma2.Index set(int)>($i9);

        $f2 = virtualinvoke $r17.<ucar.ma2.ArrayFloat: float getFloat(ucar.ma2.Index)>($r12);

        $r13 = virtualinvoke $r5.<ucar.ma2.Index: ucar.ma2.Index set(int)>(0);

        $d6 = (double) $f2;

        $d7 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double lonNormal(double)>($d6);

        $f3 = (float) $d7;

        $f4 = neg $f3;

        virtualinvoke $r17.<ucar.ma2.ArrayFloat: void setFloat(ucar.ma2.Index,float)>($r13, $f4);

     label10:
        return $r17;

     label11:
        return r0;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.io.PrintStream $r6;
        ucar.nc2.geotiff.GeoTiff $r4;
        java.lang.String[] r11;
        ucar.nc2.geotiff.GeotiffWriter $r3;
        ucar.unidata.geoloc.LatLonRect $r2;
        java.lang.StringBuilder $r5, $r7, $r9;
        ucar.unidata.geoloc.LatLonPointImpl $r0, $r1;
        java.lang.String $r8, $r10;

        r11 := @parameter0: java.lang.String[];

        $r0 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r0.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(-5.0, -52.0);

        $r1 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(25.0, -20.0);

        $r2 = new ucar.unidata.geoloc.LatLonRect;

        specialinvoke $r2.<ucar.unidata.geoloc.LatLonRect: void <init>(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.LatLonPoint)>($r0, $r1);

        $r3 = new ucar.nc2.geotiff.GeotiffWriter;

        specialinvoke $r3.<ucar.nc2.geotiff.GeotiffWriter: void <init>(java.lang.String)>("/home/yuanho/Download/F15_s.tmp_new.tif");

        virtualinvoke $r3.<ucar.nc2.geotiff.GeotiffWriter: void writeGrid(java.lang.String,java.lang.String,int,int,boolean,ucar.unidata.geoloc.LatLonRect)>("/home/yuanho/GIS/DataAndCode/F15_s.tmp", "infraredImagery", 0, 0, 1, $r2);

        virtualinvoke $r3.<ucar.nc2.geotiff.GeotiffWriter: void close()>();

        $r4 = new ucar.nc2.geotiff.GeoTiff;

        specialinvoke $r4.<ucar.nc2.geotiff.GeoTiff: void <init>(java.lang.String)>("/home/yuanho/Download/F15_s.tmp_new.tif");

        virtualinvoke $r4.<ucar.nc2.geotiff.GeoTiff: void read()>();

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("geotiff read in = ");

        $r8 = virtualinvoke $r4.<ucar.nc2.geotiff.GeoTiff: java.lang.String showInfo()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);

        virtualinvoke $r4.<ucar.nc2.geotiff.GeoTiff: void close()>();

        return;
    }
}
