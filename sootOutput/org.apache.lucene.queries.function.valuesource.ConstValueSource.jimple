public class org.apache.lucene.queries.function.valuesource.ConstValueSource extends org.apache.lucene.queries.function.valuesource.ConstNumberSource
{
    final float constant;
    private final double dv;

    public void <init>(float)
    {
        org.apache.lucene.queries.function.valuesource.ConstValueSource r0;
        float f0;
        double $d0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.ConstValueSource;

        f0 := @parameter0: float;

        specialinvoke r0.<org.apache.lucene.queries.function.valuesource.ConstNumberSource: void <init>()>();

        r0.<org.apache.lucene.queries.function.valuesource.ConstValueSource: float constant> = f0;

        $d0 = (double) f0;

        r0.<org.apache.lucene.queries.function.valuesource.ConstValueSource: double dv> = $d0;

        return;
    }

    public java.lang.String description()
    {
        org.apache.lucene.queries.function.valuesource.ConstValueSource r2;
        float $f0;
        java.lang.StringBuilder $r0, $r1, $r3, $r4;
        java.lang.String $r5;

        r2 := @this: org.apache.lucene.queries.function.valuesource.ConstValueSource;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("const(");

        $f0 = r2.<org.apache.lucene.queries.function.valuesource.ConstValueSource: float constant>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public org.apache.lucene.queries.function.FunctionValues getValues(java.util.Map, org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        java.util.Map r2;
        org.apache.lucene.queries.function.valuesource.ConstValueSource$1 $r0;
        org.apache.lucene.queries.function.valuesource.ConstValueSource r1;
        org.apache.lucene.index.AtomicReaderContext r3;

        r1 := @this: org.apache.lucene.queries.function.valuesource.ConstValueSource;

        r2 := @parameter0: java.util.Map;

        r3 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        $r0 = new org.apache.lucene.queries.function.valuesource.ConstValueSource$1;

        specialinvoke $r0.<org.apache.lucene.queries.function.valuesource.ConstValueSource$1: void <init>(org.apache.lucene.queries.function.valuesource.ConstValueSource,org.apache.lucene.queries.function.ValueSource)>(r1, r1);

        return $r0;
    }

    public int hashCode()
    {
        org.apache.lucene.queries.function.valuesource.ConstValueSource r0;
        int $i0, $i1;
        float $f0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.ConstValueSource;

        $f0 = r0.<org.apache.lucene.queries.function.valuesource.ConstValueSource: float constant>;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $i1 = $i0 * 31;

        return $i1;
    }

    public boolean equals(java.lang.Object)
    {
        byte $b0;
        org.apache.lucene.queries.function.valuesource.ConstValueSource r1, r2;
        float $f0, $f1;
        java.lang.Object r0;
        boolean $z0, $z1;

        r2 := @this: org.apache.lucene.queries.function.valuesource.ConstValueSource;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.lucene.queries.function.valuesource.ConstValueSource;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.apache.lucene.queries.function.valuesource.ConstValueSource) r0;

        $f1 = r2.<org.apache.lucene.queries.function.valuesource.ConstValueSource: float constant>;

        $f0 = r1.<org.apache.lucene.queries.function.valuesource.ConstValueSource: float constant>;

        $b0 = $f1 cmpl $f0;

        if $b0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public int getInt()
    {
        org.apache.lucene.queries.function.valuesource.ConstValueSource r0;
        int $i0;
        float $f0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.ConstValueSource;

        $f0 = r0.<org.apache.lucene.queries.function.valuesource.ConstValueSource: float constant>;

        $i0 = (int) $f0;

        return $i0;
    }

    public long getLong()
    {
        org.apache.lucene.queries.function.valuesource.ConstValueSource r0;
        float $f0;
        long $l0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.ConstValueSource;

        $f0 = r0.<org.apache.lucene.queries.function.valuesource.ConstValueSource: float constant>;

        $l0 = (long) $f0;

        return $l0;
    }

    public float getFloat()
    {
        org.apache.lucene.queries.function.valuesource.ConstValueSource r0;
        float $f0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.ConstValueSource;

        $f0 = r0.<org.apache.lucene.queries.function.valuesource.ConstValueSource: float constant>;

        return $f0;
    }

    public double getDouble()
    {
        org.apache.lucene.queries.function.valuesource.ConstValueSource r0;
        double $d0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.ConstValueSource;

        $d0 = r0.<org.apache.lucene.queries.function.valuesource.ConstValueSource: double dv>;

        return $d0;
    }

    public java.lang.Number getNumber()
    {
        org.apache.lucene.queries.function.valuesource.ConstValueSource r0;
        float $f0;
        java.lang.Float $r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.ConstValueSource;

        $f0 = r0.<org.apache.lucene.queries.function.valuesource.ConstValueSource: float constant>;

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r1;
    }

    public boolean getBool()
    {
        byte $b0;
        org.apache.lucene.queries.function.valuesource.ConstValueSource r0;
        float $f0;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.ConstValueSource;

        $f0 = r0.<org.apache.lucene.queries.function.valuesource.ConstValueSource: float constant>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static double access$000(org.apache.lucene.queries.function.valuesource.ConstValueSource)
    {
        org.apache.lucene.queries.function.valuesource.ConstValueSource r0;
        double $d0;

        r0 := @parameter0: org.apache.lucene.queries.function.valuesource.ConstValueSource;

        $d0 = r0.<org.apache.lucene.queries.function.valuesource.ConstValueSource: double dv>;

        return $d0;
    }
}
