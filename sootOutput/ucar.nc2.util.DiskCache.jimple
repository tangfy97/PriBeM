public class ucar.nc2.util.DiskCache extends java.lang.Object
{
    private static java.lang.String root;
    private static boolean standardPolicy;
    private static boolean checkExist;
    public static boolean simulateUnwritableDir;

    public void <init>()
    {
        ucar.nc2.util.DiskCache r0;

        r0 := @this: ucar.nc2.util.DiskCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setRootDirectory(java.lang.String)
    {
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r0, r4;
        boolean $z0;

        r4 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 != 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r0 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>(r4, 92, "/");

        <ucar.nc2.util.DiskCache: java.lang.String root> = $r0;

        staticinvoke <ucar.nc2.util.DiskCache: void makeRootDirectory()>();

        return;
    }

    public static void makeRootDirectory()
    {
        java.lang.IllegalStateException $r2;
        java.io.File $r0;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.String $r1, $r5, $r8;
        boolean $z0, $z1;

        $r0 = new java.io.File;

        $r1 = <ucar.nc2.util.DiskCache: java.lang.String root>;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r0.<java.io.File: boolean mkdirs()>();

        if $z1 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DiskCache.setRootDirectory(): could not create root directory <");

        $r5 = <ucar.nc2.util.DiskCache: java.lang.String root>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label1:
        <ucar.nc2.util.DiskCache: boolean checkExist> = 1;

        return;
    }

    public static java.lang.String getRootDirectory()
    {
        java.lang.String $r0;

        $r0 = <ucar.nc2.util.DiskCache: java.lang.String root>;

        return $r0;
    }

    public static void setCachePolicy(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <ucar.nc2.util.DiskCache: boolean standardPolicy> = z0;

        return;
    }

    public static java.io.File getFileStandardPolicy(java.lang.String)
    {
        java.lang.String r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = <ucar.nc2.util.DiskCache: boolean standardPolicy>;

        $r1 = staticinvoke <ucar.nc2.util.DiskCache: java.io.File getFile(java.lang.String,boolean)>(r0, $z0);

        return $r1;
    }

    public static java.io.File getFile(java.lang.String, boolean)
    {
        java.io.IOException $r4;
        java.io.File $r0, $r2, $r3;
        java.lang.String r1;
        boolean z0, $z1, $z2, $z3;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r3 = staticinvoke <ucar.nc2.util.DiskCache: java.io.File getCacheFile(java.lang.String)>(r1);

        return $r3;

     label1:
        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $z1 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label2;

        return $r0;

     label2:
        $z2 = <ucar.nc2.util.DiskCache: boolean simulateUnwritableDir>;

        if $z2 != 0 goto label4;

        $z3 = virtualinvoke $r0.<java.io.File: boolean createNewFile()>();

        if $z3 == 0 goto label4;

        virtualinvoke $r0.<java.io.File: boolean delete()>();

     label3:
        return $r0;

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

     label6:
        $r2 = staticinvoke <ucar.nc2.util.DiskCache: java.io.File getCacheFile(java.lang.String)>(r1);

        return $r2;

        catch java.io.IOException from label2 to label3 with label5;
    }

    public static java.io.File getCacheFile(java.lang.String)
    {
        long $l0;
        java.lang.String r1, $r2;
        java.io.File $r0, $r3;
        boolean $z0, $z1;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        $r2 = staticinvoke <ucar.nc2.util.DiskCache: java.lang.String makeCachePath(java.lang.String)>(r1);

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r0.<java.io.File: boolean setLastModified(long)>($l0);

     label1:
        $z1 = <ucar.nc2.util.DiskCache: boolean checkExist>;

        if $z1 != 0 goto label2;

        $r3 = virtualinvoke $r0.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

        <ucar.nc2.util.DiskCache: boolean checkExist> = 1;

     label2:
        return $r0;
    }

    private static java.lang.String makeCachePath(java.lang.String)
    {
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r0, $r2, $r5, r7, r8;
        java.io.UnsupportedEncodingException $r6;

        r7 := @parameter0: java.lang.String;

     label1:
        $r0 = virtualinvoke r7.<java.lang.String: java.lang.String replace(char,char)>(92, 47);

        r7 = $r0;

        r8 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF8");

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r8 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>(r7);

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = <ucar.nc2.util.DiskCache: java.lang.String root>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static void showCache(java.io.PrintStream)
    {
        java.util.Date $r10;
        long $l1, $l2;
        int i0, i3;
        java.lang.String $r2, $r5, $r14, r16;
        java.io.PrintStream r0;
        java.io.File $r1, r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11, $r12, $r13;
        java.io.File[] $r3;
        java.io.UnsupportedEncodingException $r15;

        r0 := @parameter0: java.io.PrintStream;

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>("Cache files");

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>("Size   LastModified       Filename");

        $r1 = new java.io.File;

        $r2 = <ucar.nc2.util.DiskCache: java.lang.String root>;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof $r3;

        i3 = 0;

     label1:
        if i3 >= i0 goto label6;

        r4 = $r3[i3];

        r16 = null;

     label2:
        $r5 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        r16 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r5, "UTF8");

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;

        virtualinvoke $r15.<java.io.UnsupportedEncodingException: void printStackTrace()>();

     label5:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $l1 = virtualinvoke r4.<java.io.File: long length()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = new java.util.Date;

        $l2 = virtualinvoke r4.<java.io.File: long lastModified()>();

        specialinvoke $r10.<java.util.Date: void <init>(long)>($l2);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r14);

        i3 = i3 + 1;

        goto label1;

     label6:
        return;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public static void cleanCache(java.util.Date, java.lang.StringBuilder)
    {
        java.util.Date $r5, r6;
        long $l0;
        int $i1, i2;
        java.lang.String $r2;
        boolean $z0;
        java.io.File $r1, r4;
        java.lang.StringBuilder r0, $r7, $r8, $r9, $r10, $r11, $r12;
        java.io.File[] $r3;

        r6 := @parameter0: java.util.Date;

        r0 := @parameter1: java.lang.StringBuilder;

        if r0 == null goto label1;

        $r11 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CleanCache files before ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label1:
        $r1 = new java.io.File;

        $r2 = <ucar.nc2.util.DiskCache: java.lang.String root>;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        $i1 = lengthof $r3;

        i2 = 0;

     label2:
        if i2 >= $i1 goto label4;

        r4 = $r3[i2];

        $r5 = new java.util.Date;

        $l0 = virtualinvoke r4.<java.io.File: long lastModified()>();

        specialinvoke $r5.<java.util.Date: void <init>(long)>($l0);

        $z0 = virtualinvoke $r5.<java.util.Date: boolean before(java.util.Date)>(r6);

        if $z0 == 0 goto label3;

        virtualinvoke r4.<java.io.File: boolean delete()>();

        if r0 == null goto label3;

        $r7 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" delete ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return;
    }

    public static void cleanCache(long, java.lang.StringBuilder)
    {
        long l0;
        java.lang.StringBuilder r1;
        ucar.nc2.util.DiskCache$FileAgeComparator $r0;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.StringBuilder;

        $r0 = new ucar.nc2.util.DiskCache$FileAgeComparator;

        specialinvoke $r0.<ucar.nc2.util.DiskCache$FileAgeComparator: void <init>(ucar.nc2.util.DiskCache$1)>(null);

        staticinvoke <ucar.nc2.util.DiskCache: void cleanCache(long,java.util.Comparator,java.lang.StringBuilder)>(l0, $r0, r1);

        return;
    }

    public static void cleanCache(long, java.util.Comparator, java.lang.StringBuilder)
    {
        byte $b3;
        boolean $z0;
        java.util.List $r4;
        java.lang.StringBuilder r0, $r8, $r9, $r10, $r13, $r14, $r15, $r20, $r21, $r22, $r23, $r24, $r27, $r28, $r29, $r31, $r32, $r34, $r36, $r37, $r38;
        long $l0, l1, $l2, $l4, $l5, $l6, l7, l8;
        int $i9;
        java.lang.String $r2, $r11, $r16, $r25, $r30, $r33;
        java.util.Iterator $r6;
        java.io.File r18, $r35;
        java.lang.Object $r17;
        java.util.Comparator r5;
        java.io.File[] $r3;

        l1 := @parameter0: long;

        r5 := @parameter1: java.util.Comparator;

        r0 := @parameter2: java.lang.StringBuilder;

        if r0 == null goto label1;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DiskCache clean maxBytes= ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("on dir ");

        $r30 = <ucar.nc2.util.DiskCache: java.lang.String root>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

     label1:
        $r35 = new java.io.File;

        $r2 = <ucar.nc2.util.DiskCache: java.lang.String root>;

        specialinvoke $r35.<java.io.File: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r35.<java.io.File: java.io.File[] listFiles()>();

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r4, r5);

        l7 = 0L;

        l8 = 0L;

        $r6 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r17 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.io.File) $r17;

        $l0 = virtualinvoke r18.<java.io.File: long length()>();

        $l2 = $l0 + l7;

        $b3 = $l2 cmp l1;

        $i9 = (int) $b3;

        if $i9 <= 0 goto label4;

        $l5 = virtualinvoke r18.<java.io.File: long length()>();

        l8 = l8 + $l5;

        if r0 == null goto label3;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" delete ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $l6 = virtualinvoke r18.<java.io.File: long length()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

     label3:
        virtualinvoke r18.<java.io.File: boolean delete()>();

        goto label5;

     label4:
        $l4 = virtualinvoke r18.<java.io.File: long length()>();

        l7 = l7 + $l4;

     label5:
        goto label2;

     label6:
        if r0 == null goto label7;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total bytes deleted= ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total bytes left in cache= ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l7);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

     label7:
        return;
    }

    static void make(java.lang.String) throws java.io.IOException
    {
        java.util.Date $r17;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r2, $r4, $r6, $r7, $r8, $r10, $r12, $r13, $r14, $r15, $r16, $r18, $r21, $r23, $r25;
        java.io.UnsupportedEncodingException $r27;
        long $l0;
        java.lang.String r0, $r5, $r9, $r19, $r20, $r24, $r26;
        java.io.PrintStream $r3, $r11, $r22;
        java.io.File $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <ucar.nc2.util.DiskCache: java.io.File getCacheFile(java.lang.String)>(r0);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("make=");

        $r5 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; exists = ");

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $z1 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label1;

        virtualinvoke $r1.<java.io.File: boolean createNewFile()>();

     label1:
        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" canRead= ");

        $z2 = virtualinvoke $r1.<java.io.File: boolean canRead()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" canWrite = ");

        $z3 = virtualinvoke $r1.<java.io.File: boolean canWrite()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lastMod = ");

        $r17 = new java.util.Date;

        $l0 = virtualinvoke $r1.<java.io.File: long lastModified()>();

        specialinvoke $r17.<java.util.Date: void <init>(long)>($l0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label2:
        $r20 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r0, "UTF8");

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" original=");

        $r24 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r20, "UTF8");

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);

     label3:
        goto label5;

     label4:
        $r27 := @caughtexception;

        virtualinvoke $r27.<java.io.UnsupportedEncodingException: void printStackTrace()>();

     label5:
        return;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.io.PrintStream $r0, $r2;
        java.lang.StringBuilder $r1;
        java.lang.String[] r3;

        r3 := @parameter0: java.lang.String[];

        staticinvoke <ucar.nc2.util.DiskCache: void setRootDirectory(java.lang.String)>("C:/temp/chill/");

        staticinvoke <ucar.nc2.util.DiskCache: void make(java.lang.String)>("C:/junk.txt");

        staticinvoke <ucar.nc2.util.DiskCache: void make(java.lang.String)>("C:/some/enchanted/evening/joots+3478.txt");

        staticinvoke <ucar.nc2.util.DiskCache: void make(java.lang.String)>("http://www.unidata.ucar.edu/some/enc hanted/eve\'ning/nowrite.gibberish");

        $r0 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <ucar.nc2.util.DiskCache: void showCache(java.io.PrintStream)>($r0);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <ucar.nc2.util.DiskCache: void cleanCache(long,java.lang.StringBuilder)>(10000000L, $r1);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.Object)>($r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r0, $r1, $r2, $r6, r7, $r8;
        boolean $z0;

        <ucar.nc2.util.DiskCache: java.lang.String root> = null;

        <ucar.nc2.util.DiskCache: boolean standardPolicy> = 0;

        <ucar.nc2.util.DiskCache: boolean checkExist> = 0;

        <ucar.nc2.util.DiskCache: boolean simulateUnwritableDir> = 0;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("nj22.cache");

        <ucar.nc2.util.DiskCache: java.lang.String root> = $r0;

        $r1 = <ucar.nc2.util.DiskCache: java.lang.String root>;

        if $r1 != null goto label3;

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        r7 = $r2;

        if $r2 != null goto label1;

        r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

     label1:
        if r7 != null goto label2;

        r7 = ".";

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/.unidata/cache/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        <ucar.nc2.util.DiskCache: java.lang.String root> = $r6;

     label3:
        $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("nj22.cachePolicy");

        if $r8 == null goto label4;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        <ucar.nc2.util.DiskCache: boolean standardPolicy> = $z0;

     label4:
        return;
    }
}
