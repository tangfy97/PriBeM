final class org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$4 extends java.lang.Object implements org.waveprotocol.wave.client.editor.content.ContentElement$Action
{
    final boolean[] val$applied;
    final org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle val$style;

    void <init>(boolean[], org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle)
    {
        boolean[] r1;
        org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle r2;
        org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$4 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$4;

        r1 := @parameter0: boolean[];

        r2 := @parameter1: org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle;

        r0.<org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$4: boolean[] val$applied> = r1;

        r0.<org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$4: org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle val$style> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle $r3;
        boolean[] $r1, $r4;
        org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$4 r0;
        org.waveprotocol.wave.client.editor.content.ContentElement r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$4;

        r2 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$4: boolean[] val$applied>;

        $z0 = $r1[0];

        $r3 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$4: org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle val$style>;

        $z1 = interfaceinvoke $r3.<org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$LineStyle: boolean isApplied(org.waveprotocol.wave.client.editor.content.ContentElement)>(r2);

        $z2 = $z0 & $z1;

        $r1[0] = $z2;

        $r4 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$4: boolean[] val$applied>;

        $r4[1] = 1;

        return;
    }
}
