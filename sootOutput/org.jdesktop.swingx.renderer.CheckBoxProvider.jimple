public class org.jdesktop.swingx.renderer.CheckBoxProvider extends org.jdesktop.swingx.renderer.ComponentProvider
{
    private boolean borderPainted;

    public void <init>()
    {
        org.jdesktop.swingx.renderer.CheckBoxProvider r0;

        r0 := @this: org.jdesktop.swingx.renderer.CheckBoxProvider;

        specialinvoke r0.<org.jdesktop.swingx.renderer.CheckBoxProvider: void <init>(org.jdesktop.swingx.renderer.StringValue)>(null);

        return;
    }

    public void <init>(org.jdesktop.swingx.renderer.StringValue)
    {
        org.jdesktop.swingx.renderer.CheckBoxProvider r0;
        org.jdesktop.swingx.renderer.StringValue r1;

        r0 := @this: org.jdesktop.swingx.renderer.CheckBoxProvider;

        r1 := @parameter0: org.jdesktop.swingx.renderer.StringValue;

        specialinvoke r0.<org.jdesktop.swingx.renderer.CheckBoxProvider: void <init>(org.jdesktop.swingx.renderer.StringValue,int)>(r1, 0);

        return;
    }

    public void <init>(org.jdesktop.swingx.renderer.StringValue, int)
    {
        org.jdesktop.swingx.renderer.StringValue r1, $r2;
        int i0;
        org.jdesktop.swingx.renderer.CheckBoxProvider r0;

        r0 := @this: org.jdesktop.swingx.renderer.CheckBoxProvider;

        r1 := @parameter0: org.jdesktop.swingx.renderer.StringValue;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        $r2 = <org.jdesktop.swingx.renderer.StringValues: org.jdesktop.swingx.renderer.StringValue EMPTY>;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        specialinvoke r0.<org.jdesktop.swingx.renderer.ComponentProvider: void <init>(org.jdesktop.swingx.renderer.StringValue,int)>($r2, i0);

        virtualinvoke r0.<org.jdesktop.swingx.renderer.CheckBoxProvider: void setBorderPainted(boolean)>(1);

        return;
    }

    public boolean isBorderPainted()
    {
        org.jdesktop.swingx.renderer.CheckBoxProvider r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.renderer.CheckBoxProvider;

        $z0 = r0.<org.jdesktop.swingx.renderer.CheckBoxProvider: boolean borderPainted>;

        return $z0;
    }

    public void setBorderPainted(boolean)
    {
        org.jdesktop.swingx.renderer.CheckBoxProvider r0;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.renderer.CheckBoxProvider;

        z0 := @parameter0: boolean;

        r0.<org.jdesktop.swingx.renderer.CheckBoxProvider: boolean borderPainted> = z0;

        return;
    }

    protected void format(org.jdesktop.swingx.renderer.CellContext)
    {
        javax.swing.JComponent $r1, $r4;
        org.jdesktop.swingx.renderer.CellContext r2;
        org.jdesktop.swingx.renderer.CheckBoxProvider r0;
        javax.swing.AbstractButton $r3, $r5;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.renderer.CheckBoxProvider;

        r2 := @parameter0: org.jdesktop.swingx.renderer.CellContext;

        $r1 = r0.<org.jdesktop.swingx.renderer.CheckBoxProvider: javax.swing.JComponent rendererComponent>;

        $r3 = (javax.swing.AbstractButton) $r1;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.renderer.CheckBoxProvider: boolean getValueAsBoolean(org.jdesktop.swingx.renderer.CellContext)>(r2);

        virtualinvoke $r3.<javax.swing.AbstractButton: void setSelected(boolean)>($z0);

        $r4 = r0.<org.jdesktop.swingx.renderer.CheckBoxProvider: javax.swing.JComponent rendererComponent>;

        $r5 = (javax.swing.AbstractButton) $r4;

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.renderer.CheckBoxProvider: java.lang.String getValueAsString(org.jdesktop.swingx.renderer.CellContext)>(r2);

        virtualinvoke $r5.<javax.swing.AbstractButton: void setText(java.lang.String)>($r6);

        return;
    }

    protected boolean getValueAsBoolean(org.jdesktop.swingx.renderer.CellContext)
    {
        org.jdesktop.swingx.renderer.BooleanValue $r6;
        org.jdesktop.swingx.renderer.CellContext r2;
        org.jdesktop.swingx.renderer.StringValue $r1, $r5;
        java.lang.Boolean $r3;
        org.jdesktop.swingx.renderer.CheckBoxProvider r0;
        java.lang.Object $r4, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jdesktop.swingx.renderer.CheckBoxProvider;

        r2 := @parameter0: org.jdesktop.swingx.renderer.CellContext;

        $r1 = r0.<org.jdesktop.swingx.renderer.CheckBoxProvider: org.jdesktop.swingx.renderer.StringValue formatter>;

        $z0 = $r1 instanceof org.jdesktop.swingx.renderer.BooleanValue;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.jdesktop.swingx.renderer.CheckBoxProvider: org.jdesktop.swingx.renderer.StringValue formatter>;

        $r6 = (org.jdesktop.swingx.renderer.BooleanValue) $r5;

        $r7 = virtualinvoke r2.<org.jdesktop.swingx.renderer.CellContext: java.lang.Object getValue()>();

        $z2 = interfaceinvoke $r6.<org.jdesktop.swingx.renderer.BooleanValue: boolean getBoolean(java.lang.Object)>($r7);

        return $z2;

     label1:
        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r4 = virtualinvoke r2.<org.jdesktop.swingx.renderer.CellContext: java.lang.Object getValue()>();

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }

    protected void configureState(org.jdesktop.swingx.renderer.CellContext)
    {
        javax.swing.JComponent $r1, $r3;
        org.jdesktop.swingx.renderer.CellContext r5;
        int $i0;
        org.jdesktop.swingx.renderer.CheckBoxProvider r0;
        javax.swing.AbstractButton $r2, $r4;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.renderer.CheckBoxProvider;

        r5 := @parameter0: org.jdesktop.swingx.renderer.CellContext;

        $r1 = r0.<org.jdesktop.swingx.renderer.CheckBoxProvider: javax.swing.JComponent rendererComponent>;

        $r2 = (javax.swing.AbstractButton) $r1;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.renderer.CheckBoxProvider: boolean isBorderPainted()>();

        virtualinvoke $r2.<javax.swing.AbstractButton: void setBorderPainted(boolean)>($z0);

        $r3 = r0.<org.jdesktop.swingx.renderer.CheckBoxProvider: javax.swing.JComponent rendererComponent>;

        $r4 = (javax.swing.AbstractButton) $r3;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.renderer.CheckBoxProvider: int getHorizontalAlignment()>();

        virtualinvoke $r4.<javax.swing.AbstractButton: void setHorizontalAlignment(int)>($i0);

        return;
    }

    protected javax.swing.AbstractButton createRendererComponent()
    {
        org.jdesktop.swingx.renderer.JRendererCheckBox $r0;
        org.jdesktop.swingx.renderer.CheckBoxProvider r1;

        r1 := @this: org.jdesktop.swingx.renderer.CheckBoxProvider;

        $r0 = new org.jdesktop.swingx.renderer.JRendererCheckBox;

        specialinvoke $r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: void <init>()>();

        return $r0;
    }

    protected volatile javax.swing.JComponent createRendererComponent()
    {
        org.jdesktop.swingx.renderer.CheckBoxProvider r0;
        javax.swing.AbstractButton $r1;

        r0 := @this: org.jdesktop.swingx.renderer.CheckBoxProvider;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.CheckBoxProvider: javax.swing.AbstractButton createRendererComponent()>();

        return $r1;
    }
}
