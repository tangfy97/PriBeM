public final class org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader extends org.apache.lucene.codecs.StoredFieldsReader implements java.lang.Cloneable, java.io.Closeable
{
    private final org.apache.lucene.index.FieldInfos fieldInfos;
    private final org.apache.lucene.store.IndexInput fieldsStream;
    private final org.apache.lucene.store.IndexInput indexStream;
    private int numTotalDocs;
    private int size;
    private boolean closed;
    static final boolean $assertionsDisabled;

    public org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader clone()
    {
        org.apache.lucene.store.IndexInput $r2, $r4, $r5, $r6;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader r0, $r1;
        int $i0, $i1;
        org.apache.lucene.index.FieldInfos $r3;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: void ensureOpen()>();

        $r1 = new org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.index.FieldInfos fieldInfos>;

        $i0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: int numTotalDocs>;

        $i1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: int size>;

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $r4 = virtualinvoke $r2.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        $r5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        specialinvoke $r1.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: void <init>(org.apache.lucene.index.FieldInfos,int,int,org.apache.lucene.store.IndexInput,org.apache.lucene.store.IndexInput)>($r3, $i0, $i1, $r4, $r6);

        return $r1;
    }

    private void <init>(org.apache.lucene.index.FieldInfos, int, int, org.apache.lucene.store.IndexInput, org.apache.lucene.store.IndexInput)
    {
        org.apache.lucene.store.IndexInput r2, r3;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader r0;
        int i0, i1;
        org.apache.lucene.index.FieldInfos r1;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        r1 := @parameter0: org.apache.lucene.index.FieldInfos;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: org.apache.lucene.store.IndexInput;

        r3 := @parameter4: org.apache.lucene.store.IndexInput;

        specialinvoke r0.<org.apache.lucene.codecs.StoredFieldsReader: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.index.FieldInfos fieldInfos> = r1;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: int numTotalDocs> = i0;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: int size> = i1;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream> = r2;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput indexStream> = r3;

        return;
    }

    public void <init>(org.apache.lucene.store.Directory, org.apache.lucene.index.SegmentInfo, org.apache.lucene.index.FieldInfos, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        org.apache.lucene.index.CorruptIndexException $r13;
        byte $b12, $b16;
        org.apache.lucene.store.Directory r4;
        org.apache.lucene.index.FieldInfos r3;
        org.apache.lucene.store.IOContext r6;
        boolean $z0, $z1;
        org.apache.lucene.index.SegmentInfo r1;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        java.lang.Throwable $r26, $r27, $r28;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader r0;
        long $l0, $l1, $l2, $l6, $l10, $l11, $l13, $l14, $l15;
        java.lang.AssertionError $r23, $r25;
        int $i3, $i4, $i5, $i7, $i8, $i9;
        java.lang.String r2, $r5, $r8, $r21;
        org.apache.lucene.store.IndexInput $r7, $r9, $r10, $r11, $r12, $r22, $r24;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        r4 := @parameter0: org.apache.lucene.store.Directory;

        r1 := @parameter1: org.apache.lucene.index.SegmentInfo;

        r3 := @parameter2: org.apache.lucene.index.FieldInfos;

        r6 := @parameter3: org.apache.lucene.store.IOContext;

        specialinvoke r0.<org.apache.lucene.codecs.StoredFieldsReader: void <init>()>();

        r2 = r1.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.index.FieldInfos fieldInfos> = r3;

     label01:
        $r5 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>(r2, "", "fdt");

        $r7 = virtualinvoke r4.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r5, r6);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream> = $r7;

        $r8 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>(r2, "", "fdx");

        $r9 = virtualinvoke r4.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r8, r6);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput indexStream> = $r9;

        $r10 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r10, "Lucene40StoredFieldsIndex", 0, 0);

        $r11 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r11, "Lucene40StoredFieldsData", 0, 0);

        $z0 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        $l14 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: long HEADER_LENGTH_DAT>;

        $r24 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $l15 = virtualinvoke $r24.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $b16 = $l14 cmp $l15;

        if $b16 == 0 goto label02;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label02:
        $z1 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        $l10 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: long HEADER_LENGTH_IDX>;

        $r22 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        $l11 = virtualinvoke $r22.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $b12 = $l10 cmp $l11;

        if $b12 == 0 goto label03;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label03:
        $r12 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        $l0 = virtualinvoke $r12.<org.apache.lucene.store.IndexInput: long length()>();

        $l1 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: long HEADER_LENGTH_IDX>;

        $l13 = $l0 - $l1;

        $l2 = $l13 >> 3;

        $i3 = (int) $l2;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: int size> = $i3;

        $i4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: int size>;

        $i5 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        if $i4 == $i5 goto label04;

        $r13 = new org.apache.lucene.index.CorruptIndexException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doc counts differ for segment ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": fieldsReader shows ");

        $i8 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: int size>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but segmentInfo shows ");

        $i9 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r21);

        throw $r13;

     label04:
        $l6 = $l13 >> 3;

        $i7 = (int) $l6;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: int numTotalDocs> = $i7;

     label05:
        if 1 != 0 goto label15;

     label06:
        virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: void close()>();

     label07:
        goto label15;

     label08:
        $r28 := @caughtexception;

        goto label15;

     label09:
        $r27 := @caughtexception;

     label10:
        if 0 != 0 goto label14;

     label11:
        virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: void close()>();

     label12:
        goto label14;

     label13:
        $r26 := @caughtexception;

     label14:
        throw $r27;

     label15:
        return;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label05 with label09;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void ensureOpen() throws org.apache.lucene.store.AlreadyClosedException
    {
        org.apache.lucene.store.AlreadyClosedException $r1;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        $z0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: boolean closed>;

        if $z0 == 0 goto label1;

        $r1 = new org.apache.lucene.store.AlreadyClosedException;

        specialinvoke $r1.<org.apache.lucene.store.AlreadyClosedException: void <init>(java.lang.String)>("this FieldsReader is closed");

        throw $r1;

     label1:
        return;
    }

    public final void close() throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput $r2, $r3;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader r0;
        java.io.Closeable[] $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        $z0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: boolean closed>;

        if $z0 != 0 goto label1;

        $r1 = newarray (java.io.Closeable)[2];

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $r1[0] = $r2;

        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        $r1[1] = $r3;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r1);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: boolean closed> = 1;

     label1:
        return;
    }

    public final int size()
    {
        int $i0;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        $i0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: int size>;

        return $i0;
    }

    private void seekIndex(int) throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader r0;
        int i0;
        long $l1, $l2, $l3, $l4;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        $l3 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: long HEADER_LENGTH_IDX>;

        $l1 = (long) i0;

        $l2 = $l1 * 8L;

        $l4 = $l3 + $l2;

        virtualinvoke $r1.<org.apache.lucene.store.IndexInput: void seek(long)>($l4);

        return;
    }

    public final void visitDocument(int, org.apache.lucene.index.StoredFieldVisitor) throws java.io.IOException
    {
        org.apache.lucene.index.StoredFieldVisitor r8;
        org.apache.lucene.index.StoredFieldVisitor$Status $r10;
        byte $b4;
        int[] $r9;
        org.apache.lucene.index.FieldInfos $r5;
        boolean $z0;
        java.lang.StringBuilder $r13, $r15, $r17;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader r0;
        long $l1;
        java.lang.AssertionError $r18;
        short s5, $s9;
        int i0, $i2, $i3, $i6, $i7, i8, $i10, $i11, $i12, $i13;
        java.lang.String $r14, $r16;
        org.apache.lucene.store.IndexInput $r1, $r2, $r3, $r4, $r7;
        org.apache.lucene.index.FieldInfo $r6;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        i0 := @parameter0: int;

        r8 := @parameter1: org.apache.lucene.index.StoredFieldVisitor;

        specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: void seekIndex(int)>(i0);

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        $l1 = virtualinvoke $r1.<org.apache.lucene.store.IndexInput: long readLong()>();

        virtualinvoke $r2.<org.apache.lucene.store.IndexInput: void seek(long)>($l1);

        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $i2 = virtualinvoke $r3.<org.apache.lucene.store.IndexInput: int readVInt()>();

        i8 = 0;

     label1:
        if i8 >= $i2 goto label7;

        $r4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $i3 = virtualinvoke $r4.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(int)>($i3);

        $r7 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $b4 = virtualinvoke $r7.<org.apache.lucene.store.IndexInput: byte readByte()>();

        $s9 = (short) $b4;

        s5 = $s9 & 255;

        $z0 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i10 = (int) s5;

        if $i10 <= 58 goto label2;

        $r18 = new java.lang.AssertionError;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bits=");

        $i11 = (int) s5;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i11);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.AssertionError: void <init>(java.lang.Object)>($r16);

        throw $r18;

     label2:
        $r9 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader$1: int[] $SwitchMap$org$apache$lucene$index$StoredFieldVisitor$Status>;

        $r10 = virtualinvoke r8.<org.apache.lucene.index.StoredFieldVisitor: org.apache.lucene.index.StoredFieldVisitor$Status needsField(org.apache.lucene.index.FieldInfo)>($r6);

        $i6 = virtualinvoke $r10.<org.apache.lucene.index.StoredFieldVisitor$Status: int ordinal()>();

        $i7 = $r9[$i6];

        tableswitch($i7)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label3:
        $i12 = (int) s5;

        specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: void readField(org.apache.lucene.index.StoredFieldVisitor,org.apache.lucene.index.FieldInfo,int)>(r8, $r6, $i12);

        goto label6;

     label4:
        $i13 = (int) s5;

        specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: void skipField(int)>($i13);

        goto label6;

     label5:
        return;

     label6:
        i8 = i8 + 1;

        goto label1;

     label7:
        return;
    }

    private void readField(org.apache.lucene.index.StoredFieldVisitor, org.apache.lucene.index.FieldInfo, int) throws java.io.IOException
    {
        byte[] r2;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader r0;
        org.apache.lucene.index.StoredFieldVisitor r4;
        long $l5, $l7;
        org.apache.lucene.index.CorruptIndexException $r12;
        java.nio.charset.Charset $r7;
        int i0, i1, $i2, $i3, $i4, $i6, $i8;
        java.lang.String $r6, $r15, $r17;
        double $d0;
        org.apache.lucene.store.IndexInput $r1, $r3, $r8, $r9, $r10, $r11;
        org.apache.lucene.index.FieldInfo r5;
        float $f0;
        java.lang.StringBuilder $r13, $r14, $r16;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        r4 := @parameter0: org.apache.lucene.index.StoredFieldVisitor;

        r5 := @parameter1: org.apache.lucene.index.FieldInfo;

        i0 := @parameter2: int;

        i1 = i0 & 56;

        if i1 == 0 goto label6;

        lookupswitch(i1)
        {
            case 8: goto label1;
            case 16: goto label2;
            case 24: goto label3;
            case 32: goto label4;
            default: goto label5;
        };

     label1:
        $r11 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $i8 = virtualinvoke $r11.<org.apache.lucene.store.IndexInput: int readInt()>();

        virtualinvoke r4.<org.apache.lucene.index.StoredFieldVisitor: void intField(org.apache.lucene.index.FieldInfo,int)>(r5, $i8);

        return;

     label2:
        $r10 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $l7 = virtualinvoke $r10.<org.apache.lucene.store.IndexInput: long readLong()>();

        virtualinvoke r4.<org.apache.lucene.index.StoredFieldVisitor: void longField(org.apache.lucene.index.FieldInfo,long)>(r5, $l7);

        return;

     label3:
        $r9 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $i6 = virtualinvoke $r9.<org.apache.lucene.store.IndexInput: int readInt()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i6);

        virtualinvoke r4.<org.apache.lucene.index.StoredFieldVisitor: void floatField(org.apache.lucene.index.FieldInfo,float)>(r5, $f0);

        return;

     label4:
        $r8 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $l5 = virtualinvoke $r8.<org.apache.lucene.store.IndexInput: long readLong()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l5);

        virtualinvoke r4.<org.apache.lucene.index.StoredFieldVisitor: void doubleField(org.apache.lucene.index.FieldInfo,double)>(r5, $d0);

        return;

     label5:
        $r12 = new org.apache.lucene.index.CorruptIndexException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid numeric type: ");

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label6:
        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $i2 = virtualinvoke $r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        r2 = newarray (byte)[$i2];

        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        virtualinvoke $r3.<org.apache.lucene.store.IndexInput: void readBytes(byte[],int,int)>(r2, 0, $i2);

        $i3 = i0 & 2;

        if $i3 == 0 goto label7;

        virtualinvoke r4.<org.apache.lucene.index.StoredFieldVisitor: void binaryField(org.apache.lucene.index.FieldInfo,byte[])>(r5, r2);

        goto label8;

     label7:
        $r6 = new java.lang.String;

        $i4 = lengthof r2;

        $r7 = <org.apache.lucene.util.IOUtils: java.nio.charset.Charset CHARSET_UTF_8>;

        specialinvoke $r6.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r2, 0, $i4, $r7);

        virtualinvoke r4.<org.apache.lucene.index.StoredFieldVisitor: void stringField(org.apache.lucene.index.FieldInfo,java.lang.String)>(r5, $r6);

     label8:
        return;
    }

    private void skipField(int) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader r0;
        long $l3, $l4, $l5;
        org.apache.lucene.index.CorruptIndexException $r6;
        int i0, i1, $i2;
        java.lang.String $r9, $r11;
        org.apache.lucene.store.IndexInput $r1, $r2, $r3, $r4, $r5;
        java.lang.StringBuilder $r7, $r8, $r10;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        i0 := @parameter0: int;

        i1 = i0 & 56;

        if i1 == 0 goto label4;

        lookupswitch(i1)
        {
            case 8: goto label1;
            case 16: goto label2;
            case 24: goto label1;
            case 32: goto label2;
            default: goto label3;
        };

     label1:
        $r5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        virtualinvoke $r5.<org.apache.lucene.store.IndexInput: int readInt()>();

        return;

     label2:
        $r4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        virtualinvoke $r4.<org.apache.lucene.store.IndexInput: long readLong()>();

        return;

     label3:
        $r6 = new org.apache.lucene.index.CorruptIndexException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid numeric type: ");

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label4:
        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $i2 = virtualinvoke $r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        $l3 = virtualinvoke $r2.<org.apache.lucene.store.IndexInput: long getFilePointer()>();

        $l4 = (long) $i2;

        $l5 = $l3 + $l4;

        virtualinvoke $r3.<org.apache.lucene.store.IndexInput: void seek(long)>($l5);

        return;
    }

    public final org.apache.lucene.store.IndexInput rawDocs(int[], int, int) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader r0;
        long $l1, $l7, l10, l12;
        java.lang.AssertionError $r7;
        int[] r5;
        int i0, i2, $i3, i4, $i5, $i6, $i8, $i9, i11;
        boolean $z0;
        org.apache.lucene.store.IndexInput $r1, $r2, $r3, $r4, $r6;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        r5 := @parameter0: int[];

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: void seekIndex(int)>(i0);

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        $l1 = virtualinvoke $r1.<org.apache.lucene.store.IndexInput: long readLong()>();

        l10 = $l1;

        i11 = 0;

     label1:
        if i11 >= i2 goto label5;

        $i3 = i0 + i11;

        i4 = $i3 + 1;

        $z0 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i9 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: int numTotalDocs>;

        if i4 <= $i9 goto label2;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label2:
        $i5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: int numTotalDocs>;

        if i4 >= $i5 goto label3;

        $r6 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput indexStream>;

        l12 = virtualinvoke $r6.<org.apache.lucene.store.IndexInput: long readLong()>();

        goto label4;

     label3:
        $r4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        l12 = virtualinvoke $r4.<org.apache.lucene.store.IndexInput: long length()>();

     label4:
        $i6 = i11;

        i11 = i11 + 1;

        $l7 = l12 - l10;

        $i8 = (int) $l7;

        r5[$i6] = $i8;

        l10 = l12;

        goto label1;

     label5:
        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        virtualinvoke $r2.<org.apache.lucene.store.IndexInput: void seek(long)>($l1);

        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput fieldsStream>;

        return $r3;
    }

    public volatile org.apache.lucene.codecs.StoredFieldsReader clone()
    {
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader r0, $r1;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        $r1 = virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader clone()>();

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader r0, $r1;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        $r1 = virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader clone()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: boolean $assertionsDisabled> = $z1;

        return;
    }
}
