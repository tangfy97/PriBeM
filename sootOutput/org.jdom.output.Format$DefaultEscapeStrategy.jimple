class org.jdom.output.Format$DefaultEscapeStrategy extends java.lang.Object implements org.jdom.output.EscapeStrategy
{
    private final org.jdom.output.Format this$0;
    private int bits;
    java.lang.Object encoder;
    java.lang.reflect.Method canEncode;

    public void <init>(org.jdom.output.Format, java.lang.String)
    {
        java.lang.Object[] $r14;
        org.jdom.output.Format r1;
        java.lang.String r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.reflect.Method $r13, $r16, $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Class[] $r11, $r18;
        java.lang.Exception $r21;
        java.lang.Class $r9, $r10, $r12, $r19, $r22;
        java.lang.Object $r15, $r17;
        org.jdom.output.Format$DefaultEscapeStrategy r0;

        r0 := @this: org.jdom.output.Format$DefaultEscapeStrategy;

        r1 := @parameter0: org.jdom.output.Format;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom.output.Format$DefaultEscapeStrategy: org.jdom.output.Format this$0> = r1;

        $r3 = "UTF-8";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z0 != 0 goto label01;

        $r4 = "UTF-16";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z1 == 0 goto label02;

     label01:
        r0.<org.jdom.output.Format$DefaultEscapeStrategy: int bits> = 16;

        goto label12;

     label02:
        $r5 = "ISO-8859-1";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z2 != 0 goto label03;

        $r6 = "Latin1";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z3 == 0 goto label04;

     label03:
        r0.<org.jdom.output.Format$DefaultEscapeStrategy: int bits> = 8;

        goto label12;

     label04:
        $r7 = "US-ASCII";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z4 != 0 goto label05;

        $r8 = "ASCII";

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z5 == 0 goto label06;

     label05:
        r0.<org.jdom.output.Format$DefaultEscapeStrategy: int bits> = 7;

        goto label12;

     label06:
        r0.<org.jdom.output.Format$DefaultEscapeStrategy: int bits> = 0;

     label07:
        $r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.nio.charset.Charset");

        $r10 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.nio.charset.CharsetEncoder");

        $r11 = newarray (java.lang.Class)[1];

        $r12 = <org.jdom.output.Format: java.lang.Class class$java$lang$String>;

        if $r12 == null goto label08;

        $r22 = <org.jdom.output.Format: java.lang.Class class$java$lang$String>;

        goto label09;

     label08:
        $r22 = staticinvoke <org.jdom.output.Format: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.jdom.output.Format: java.lang.Class class$java$lang$String> = $r22;

     label09:
        $r11[0] = $r22;

        $r13 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("forName", $r11);

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r2;

        $r15 = virtualinvoke $r13.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r14);

        $r16 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("newEncoder", null);

        $r17 = virtualinvoke $r16.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r15, null);

        r0.<org.jdom.output.Format$DefaultEscapeStrategy: java.lang.Object encoder> = $r17;

        $r18 = newarray (java.lang.Class)[1];

        $r19 = <java.lang.Character: java.lang.Class TYPE>;

        $r18[0] = $r19;

        $r20 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("canEncode", $r18);

        r0.<org.jdom.output.Format$DefaultEscapeStrategy: java.lang.reflect.Method canEncode> = $r20;

     label10:
        goto label12;

     label11:
        $r21 := @caughtexception;

        goto label12;

     label12:
        return;

        catch java.lang.Exception from label07 to label10 with label11;
    }

    public boolean shouldEscape(char)
    {
        java.lang.Object[] $r3;
        java.lang.Character $r10;
        int $i0, $i1, $i2, $i4, $i5;
        java.lang.Boolean r8;
        java.lang.reflect.Method $r1, $r5;
        boolean $z0, $z1;
        char c3;
        java.lang.Exception $r9;
        java.lang.Object $r2, $r6, $r7;
        org.jdom.output.Format$DefaultEscapeStrategy r0;

        r0 := @this: org.jdom.output.Format$DefaultEscapeStrategy;

        c3 := @parameter0: char;

        $i0 = r0.<org.jdom.output.Format$DefaultEscapeStrategy: int bits>;

        if $i0 != 16 goto label1;

        return 0;

     label1:
        $i1 = r0.<org.jdom.output.Format$DefaultEscapeStrategy: int bits>;

        if $i1 != 8 goto label3;

        $i4 = (int) c3;

        if $i4 <= 255 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $i2 = r0.<org.jdom.output.Format$DefaultEscapeStrategy: int bits>;

        if $i2 != 7 goto label5;

        $i5 = (int) c3;

        if $i5 <= 127 goto label4;

        return 1;

     label4:
        return 0;

     label5:
        $r1 = r0.<org.jdom.output.Format$DefaultEscapeStrategy: java.lang.reflect.Method canEncode>;

        if $r1 == null goto label8;

        $r2 = r0.<org.jdom.output.Format$DefaultEscapeStrategy: java.lang.Object encoder>;

        if $r2 == null goto label8;

     label6:
        $r5 = r0.<org.jdom.output.Format$DefaultEscapeStrategy: java.lang.reflect.Method canEncode>;

        $r6 = r0.<org.jdom.output.Format$DefaultEscapeStrategy: java.lang.Object encoder>;

        $r3 = newarray (java.lang.Object)[1];

        $r10 = new java.lang.Character;

        specialinvoke $r10.<java.lang.Character: void <init>(char)>(c3);

        $r3[0] = $r10;

        $r7 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r3);

        r8 = (java.lang.Boolean) $r7;

        $z0 = virtualinvoke r8.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = $z0 ^ 1;

        return $z1;

     label7:
        $r9 := @caughtexception;

        goto label8;

     label8:
        return 0;

        catch java.lang.Exception from label6 to label7 with label7;
    }
}
