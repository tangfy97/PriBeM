public class org.apache.poi.ddf.EscherBitmapBlip extends org.apache.poi.ddf.EscherBlipRecord
{
    public static final short RECORD_ID_JPEG;
    public static final short RECORD_ID_PNG;
    public static final short RECORD_ID_DIB;
    private static final int HEADER_SIZE;
    private byte[] field_1_UID;
    private byte field_2_marker;

    public void <init>()
    {
        org.apache.poi.ddf.EscherBitmapBlip r0;

        r0 := @this: org.apache.poi.ddf.EscherBitmapBlip;

        specialinvoke r0.<org.apache.poi.ddf.EscherBlipRecord: void <init>()>();

        r0.<org.apache.poi.ddf.EscherBitmapBlip: byte field_2_marker> = -1;

        return;
    }

    public int fillFields(byte[], int, org.apache.poi.ddf.EscherRecordFactory)
    {
        org.apache.poi.ddf.EscherRecordFactory r7;
        byte[] r1, $r2, $r3, $r4, $r5, $r6;
        byte $b2;
        int i0, $i1, $i3, $i4, $i5, i6, i7, i8;
        org.apache.poi.ddf.EscherBitmapBlip r0;

        r0 := @this: org.apache.poi.ddf.EscherBitmapBlip;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r7 := @parameter2: org.apache.poi.ddf.EscherRecordFactory;

        $i1 = virtualinvoke r0.<org.apache.poi.ddf.EscherBitmapBlip: int readHeader(byte[],int)>(r1, i0);

        i6 = i0 + 8;

        $r2 = newarray (byte)[16];

        r0.<org.apache.poi.ddf.EscherBitmapBlip: byte[] field_1_UID> = $r2;

        $r3 = r0.<org.apache.poi.ddf.EscherBitmapBlip: byte[] field_1_UID>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i6, $r3, 0, 16);

        i7 = i6 + 16;

        $b2 = r1[i7];

        r0.<org.apache.poi.ddf.EscherBitmapBlip: byte field_2_marker> = $b2;

        i8 = i7 + 1;

        $i3 = $i1 - 17;

        $r4 = newarray (byte)[$i3];

        r0.<org.apache.poi.ddf.EscherBitmapBlip: byte[] field_pictureData> = $r4;

        $r6 = r0.<org.apache.poi.ddf.EscherBitmapBlip: byte[] field_pictureData>;

        $r5 = r0.<org.apache.poi.ddf.EscherBitmapBlip: byte[] field_pictureData>;

        $i4 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i8, $r6, 0, $i4);

        $i5 = $i1 + 8;

        return $i5;
    }

    public int serialize(int, byte[], org.apache.poi.ddf.EscherSerializationListener)
    {
        byte[] r2, $r3, $r4, $r5, $r6;
        org.apache.poi.ddf.EscherSerializationListener r0;
        short $s1, $s2, $s4, $s15;
        byte $b9;
        int i0, $i3, $i5, $i6, $i7, i8, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18;
        org.apache.poi.ddf.EscherBitmapBlip r1;

        r1 := @this: org.apache.poi.ddf.EscherBitmapBlip;

        i0 := @parameter0: int;

        r2 := @parameter1: byte[];

        r0 := @parameter2: org.apache.poi.ddf.EscherSerializationListener;

        $s1 = virtualinvoke r1.<org.apache.poi.ddf.EscherBitmapBlip: short getRecordId()>();

        interfaceinvoke r0.<org.apache.poi.ddf.EscherSerializationListener: void beforeRecordSerialize(int,short,org.apache.poi.ddf.EscherRecord)>(i0, $s1, r1);

        $s2 = virtualinvoke r1.<org.apache.poi.ddf.EscherBitmapBlip: short getOptions()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r2, i0, $s2);

        $i3 = i0 + 2;

        $s4 = virtualinvoke r1.<org.apache.poi.ddf.EscherBitmapBlip: short getRecordId()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r2, $i3, $s4);

        $i5 = i0 + 4;

        $i6 = virtualinvoke r1.<org.apache.poi.ddf.EscherBitmapBlip: int getRecordSize()>();

        $i7 = $i6 - 8;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, $i5, $i7);

        i8 = i0 + 8;

        $r3 = r1.<org.apache.poi.ddf.EscherBitmapBlip: byte[] field_1_UID>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, i8, 16);

        $i10 = i8 + 16;

        $b9 = r1.<org.apache.poi.ddf.EscherBitmapBlip: byte field_2_marker>;

        r2[$i10] = $b9;

        $r5 = r1.<org.apache.poi.ddf.EscherBitmapBlip: byte[] field_pictureData>;

        $i12 = i8 + 17;

        $r4 = r1.<org.apache.poi.ddf.EscherBitmapBlip: byte[] field_pictureData>;

        $i11 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r2, $i12, $i11);

        $i13 = virtualinvoke r1.<org.apache.poi.ddf.EscherBitmapBlip: int getRecordSize()>();

        $i14 = i0 + $i13;

        $s15 = virtualinvoke r1.<org.apache.poi.ddf.EscherBitmapBlip: short getRecordId()>();

        $i16 = virtualinvoke r1.<org.apache.poi.ddf.EscherBitmapBlip: int getRecordSize()>();

        interfaceinvoke r0.<org.apache.poi.ddf.EscherSerializationListener: void afterRecordSerialize(int,short,int,org.apache.poi.ddf.EscherRecord)>($i14, $s15, $i16, r1);

        $r6 = r1.<org.apache.poi.ddf.EscherBitmapBlip: byte[] field_pictureData>;

        $i17 = lengthof $r6;

        $i18 = 25 + $i17;

        return $i18;
    }

    public int getRecordSize()
    {
        byte[] $r1;
        int $i0, $i1;
        org.apache.poi.ddf.EscherBitmapBlip r0;

        r0 := @this: org.apache.poi.ddf.EscherBitmapBlip;

        $r1 = r0.<org.apache.poi.ddf.EscherBitmapBlip: byte[] field_pictureData>;

        $i0 = lengthof $r1;

        $i1 = 25 + $i0;

        return $i1;
    }

    public byte[] getUID()
    {
        byte[] $r1;
        org.apache.poi.ddf.EscherBitmapBlip r0;

        r0 := @this: org.apache.poi.ddf.EscherBitmapBlip;

        $r1 = r0.<org.apache.poi.ddf.EscherBitmapBlip: byte[] field_1_UID>;

        return $r1;
    }

    public void setUID(byte[])
    {
        byte[] r1;
        org.apache.poi.ddf.EscherBitmapBlip r0;

        r0 := @this: org.apache.poi.ddf.EscherBitmapBlip;

        r1 := @parameter0: byte[];

        r0.<org.apache.poi.ddf.EscherBitmapBlip: byte[] field_1_UID> = r1;

        return;
    }

    public byte getMarker()
    {
        org.apache.poi.ddf.EscherBitmapBlip r0;
        byte $b0;

        r0 := @this: org.apache.poi.ddf.EscherBitmapBlip;

        $b0 = r0.<org.apache.poi.ddf.EscherBitmapBlip: byte field_2_marker>;

        return $b0;
    }

    public void setMarker(byte)
    {
        org.apache.poi.ddf.EscherBitmapBlip r0;
        byte b0;

        r0 := @this: org.apache.poi.ddf.EscherBitmapBlip;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.ddf.EscherBitmapBlip: byte field_2_marker> = b0;

        return;
    }

    public java.lang.String toString()
    {
        byte[] $r3, $r23;
        byte $b3;
        org.apache.poi.ddf.EscherBitmapBlip r2;
        java.lang.Exception $r35;
        java.lang.StringBuilder $r4, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r20, $r21, $r22, $r25, $r26, $r27, $r29, $r30, $r31, $r32, $r33;
        java.io.ByteArrayOutputStream $r1;
        short $s0, $s1, $s2;
        java.lang.String $r0, $r6, $r11, $r15, $r19, $r24, $r28, $r34, r36;
        java.lang.Class $r5;

        r2 := @this: org.apache.poi.ddf.EscherBitmapBlip;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        $r3 = r2.<org.apache.poi.ddf.EscherBitmapBlip: byte[] field_pictureData>;

        staticinvoke <org.apache.poi.util.HexDump: void dump(byte[],long,java.io.OutputStream,int)>($r3, 0L, $r1, 0);

        r36 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

     label2:
        goto label4;

     label3:
        $r35 := @caughtexception;

        r36 = virtualinvoke $r35.<java.lang.Exception: java.lang.String toString()>();

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  RecordId: 0x");

        $s0 = virtualinvoke r2.<org.apache.poi.ddf.EscherBitmapBlip: short getRecordId()>();

        $r11 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s0);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Version: 0x");

        $s1 = virtualinvoke r2.<org.apache.poi.ddf.EscherBitmapBlip: short getVersion()>();

        $r15 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Instance: 0x");

        $s2 = virtualinvoke r2.<org.apache.poi.ddf.EscherBitmapBlip: short getInstance()>();

        $r19 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s2);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  UID: 0x");

        $r23 = r2.<org.apache.poi.ddf.EscherBitmapBlip: byte[] field_1_UID>;

        $r24 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte[])>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Marker: 0x");

        $b3 = r2.<org.apache.poi.ddf.EscherBitmapBlip: byte field_2_marker>;

        $r28 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte)>($b3);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Extra Data:");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r34;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String toXml(java.lang.String)
    {
        byte[] $r2, $r16;
        byte $b3;
        org.apache.poi.ddf.EscherBitmapBlip r1;
        java.lang.Exception $r36;
        java.lang.StringBuilder $r3, $r5, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r34;
        java.io.ByteArrayOutputStream $r0;
        short $s0, $s1, $s2;
        java.lang.String r4, $r7, $r8, $r9, $r10, $r11, $r17, $r23, $r33, $r35, r37;
        java.lang.Class $r6, $r32;

        r1 := @this: org.apache.poi.ddf.EscherBitmapBlip;

        r4 := @parameter0: java.lang.String;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        $r2 = r1.<org.apache.poi.ddf.EscherBitmapBlip: byte[] field_pictureData>;

        staticinvoke <org.apache.poi.util.HexDump: void dump(byte[],long,java.io.OutputStream,int)>($r2, 0L, $r0, 0);

        r37 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

     label2:
        goto label4;

     label3:
        $r36 := @caughtexception;

        r37 = virtualinvoke $r36.<java.lang.Exception: java.lang.String toString()>();

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        $s0 = virtualinvoke r1.<org.apache.poi.ddf.EscherBitmapBlip: short getRecordId()>();

        $r8 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s0);

        $s1 = virtualinvoke r1.<org.apache.poi.ddf.EscherBitmapBlip: short getVersion()>();

        $r9 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s1);

        $s2 = virtualinvoke r1.<org.apache.poi.ddf.EscherBitmapBlip: short getInstance()>();

        $r10 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s2);

        $r11 = virtualinvoke r1.<org.apache.poi.ddf.EscherBitmapBlip: java.lang.String formatXmlRecordHeader(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r7, $r8, $r9, $r10);

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<UID>0x");

        $r16 = r1.<org.apache.poi.ddf.EscherBitmapBlip: byte[] field_1_UID>;

        $r17 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte[])>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</UID>\n");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Marker>0x");

        $b3 = r1.<org.apache.poi.ddf.EscherBitmapBlip: byte field_2_marker>;

        $r23 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte)>($b3);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</Marker>\n");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<ExtraData>");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</ExtraData>\n");

        $r30 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r32 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r33 = virtualinvoke $r32.<java.lang.Class: java.lang.String getSimpleName()>();

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r35 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r35;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.poi.ddf.EscherBitmapBlip: int HEADER_SIZE> = 8;

        <org.apache.poi.ddf.EscherBitmapBlip: short RECORD_ID_DIB> = -4065;

        <org.apache.poi.ddf.EscherBitmapBlip: short RECORD_ID_PNG> = -4066;

        <org.apache.poi.ddf.EscherBitmapBlip: short RECORD_ID_JPEG> = -4067;

        return;
    }
}
