public class org.apache.xpath.functions.FunctionOneArg extends org.apache.xpath.functions.Function implements org.apache.xpath.ExpressionOwner
{
    org.apache.xpath.Expression m_arg0;

    public void <init>()
    {
        org.apache.xpath.functions.FunctionOneArg r0;

        r0 := @this: org.apache.xpath.functions.FunctionOneArg;

        specialinvoke r0.<org.apache.xpath.functions.Function: void <init>()>();

        return;
    }

    public org.apache.xpath.Expression getArg0()
    {
        org.apache.xpath.Expression $r1;
        org.apache.xpath.functions.FunctionOneArg r0;

        r0 := @this: org.apache.xpath.functions.FunctionOneArg;

        $r1 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        return $r1;
    }

    public void setArg(org.apache.xpath.Expression, int) throws org.apache.xpath.functions.WrongNumberArgsException
    {
        int i0;
        org.apache.xpath.Expression r1;
        org.apache.xpath.functions.FunctionOneArg r0;

        r0 := @this: org.apache.xpath.functions.FunctionOneArg;

        r1 := @parameter0: org.apache.xpath.Expression;

        i0 := @parameter1: int;

        if 0 != i0 goto label1;

        r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0> = r1;

        virtualinvoke r1.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.xpath.functions.FunctionOneArg: void reportWrongNumberArgs()>();

     label2:
        return;
    }

    public void checkNumberArgs(int) throws org.apache.xpath.functions.WrongNumberArgsException
    {
        int i0;
        org.apache.xpath.functions.FunctionOneArg r0;

        r0 := @this: org.apache.xpath.functions.FunctionOneArg;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        virtualinvoke r0.<org.apache.xpath.functions.FunctionOneArg: void reportWrongNumberArgs()>();

     label1:
        return;
    }

    protected void reportWrongNumberArgs() throws org.apache.xpath.functions.WrongNumberArgsException
    {
        org.apache.xpath.functions.WrongNumberArgsException $r0;
        java.lang.String $r1;
        org.apache.xpath.functions.FunctionOneArg r2;

        r2 := @this: org.apache.xpath.functions.FunctionOneArg;

        $r0 = new org.apache.xpath.functions.WrongNumberArgsException;

        $r1 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("one", null);

        specialinvoke $r0.<org.apache.xpath.functions.WrongNumberArgsException: void <init>(java.lang.String)>($r1);

        throw $r0;
    }

    public boolean canTraverseOutsideSubtree()
    {
        org.apache.xpath.Expression $r1;
        org.apache.xpath.functions.FunctionOneArg r0;
        boolean $z0;

        r0 := @this: org.apache.xpath.functions.FunctionOneArg;

        $r1 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        $z0 = virtualinvoke $r1.<org.apache.xpath.Expression: boolean canTraverseOutsideSubtree()>();

        return $z0;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xpath.Expression $r1, $r3;
        java.util.Vector r2;
        int i0;
        org.apache.xpath.functions.FunctionOneArg r0;

        r0 := @this: org.apache.xpath.functions.FunctionOneArg;

        r2 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        if null == $r1 goto label1;

        $r3 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        virtualinvoke $r3.<org.apache.xpath.Expression: void fixupVariables(java.util.Vector,int)>(r2, i0);

     label1:
        return;
    }

    public void callArgVisitors(org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.Expression $r1, $r3;
        org.apache.xpath.XPathVisitor r2;
        org.apache.xpath.functions.FunctionOneArg r0;

        r0 := @this: org.apache.xpath.functions.FunctionOneArg;

        r2 := @parameter0: org.apache.xpath.XPathVisitor;

        $r1 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        if null == $r1 goto label1;

        $r3 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        virtualinvoke $r3.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>(r0, r2);

     label1:
        return;
    }

    public org.apache.xpath.Expression getExpression()
    {
        org.apache.xpath.Expression $r1;
        org.apache.xpath.functions.FunctionOneArg r0;

        r0 := @this: org.apache.xpath.functions.FunctionOneArg;

        $r1 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        return $r1;
    }

    public void setExpression(org.apache.xpath.Expression)
    {
        org.apache.xpath.Expression r0;
        org.apache.xpath.functions.FunctionOneArg r1;

        r1 := @this: org.apache.xpath.functions.FunctionOneArg;

        r0 := @parameter0: org.apache.xpath.Expression;

        virtualinvoke r0.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r1);

        r1.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0> = r0;

        return;
    }

    public boolean deepEquals(org.apache.xpath.Expression)
    {
        org.apache.xpath.Expression r1, $r2, $r4, $r6, $r8, $r9;
        org.apache.xpath.functions.FunctionOneArg r0, $r3, $r5, $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.xpath.functions.FunctionOneArg;

        r1 := @parameter0: org.apache.xpath.Expression;

        $z0 = specialinvoke r0.<org.apache.xpath.functions.Function: boolean deepEquals(org.apache.xpath.Expression)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        if null == $r2 goto label3;

        $r5 = (org.apache.xpath.functions.FunctionOneArg) r1;

        $r6 = $r5.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        if null != $r6 goto label2;

        return 0;

     label2:
        $r9 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        $r7 = (org.apache.xpath.functions.FunctionOneArg) r1;

        $r8 = $r7.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        $z1 = virtualinvoke $r9.<org.apache.xpath.Expression: boolean deepEquals(org.apache.xpath.Expression)>($r8);

        if $z1 != 0 goto label4;

        return 0;

     label3:
        $r3 = (org.apache.xpath.functions.FunctionOneArg) r1;

        $r4 = $r3.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        if null == $r4 goto label4;

        return 0;

     label4:
        return 1;
    }
}
