public class com.hp.hpl.jena.sparql.sse.builders.BuilderLib extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderLib r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderLib;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void checkNode(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isNode()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a node: ");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: java.lang.String shortString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r0, $r5);

        return;
    }

    public static void checkSymbol(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isSymbol()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a symbol: ");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: java.lang.String shortString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r0, $r5);

        return;
    }

    public static void checkTagged(com.hp.hpl.jena.sparql.sse.Item, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.Item r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isTagged(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.ItemLocation,java.lang.String,com.hp.hpl.jena.sparql.sse.Item)>(r0, r2, r0);

        return;
    }

    public static void checkTagged(com.hp.hpl.jena.sparql.sse.Item, int, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.ItemList $r3;
        int $i0, i1;
        com.hp.hpl.jena.sparql.sse.Item r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isTagged(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        $i0 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if $i0 != i1 goto label1;

        return;

     label1:
        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.ItemLocation,java.lang.String,com.hp.hpl.jena.sparql.sse.Item)>(r0, r2, r0);

        return;
    }

    public static void checkTag(com.hp.hpl.jena.sparql.sse.ItemList, java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        com.hp.hpl.jena.sparql.sse.Item $r1;
        int $i0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8;
        java.lang.String r2, $r7, $r9;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if $i0 != 0 goto label1;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.ItemList,java.lang.String)>(r0, "Empty list");

     label1:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.Item: boolean isSymbolIgnoreCase(java.lang.String)>(r2);

        if $z0 != 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("List does not start (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...) : ");

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.lang.String shortString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.ItemList,java.lang.String)>(r0, $r9);

     label2:
        return;
    }

    public static void checkList(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isList()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a list: ");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: java.lang.String shortString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r0, $r5);

        return;
    }

    public static void checkList(com.hp.hpl.jena.sparql.sse.Item, java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.Item r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r8;
        java.lang.String $r3, $r7, r9;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        r9 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isList()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        if r9 != null goto label2;

        $z2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isSymbol()>();

        if $z2 == 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to use a symbol where list expected: ");

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: java.lang.String shortString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        if r9 != null goto label3;

        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isNode()>();

        if $z1 == 0 goto label3;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to use a node where list expected: ");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: java.lang.String shortString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        if r9 != null goto label4;

        r9 = "Not a list";

     label4:
        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r0, r9);

        return;
    }

    public static void warning(com.hp.hpl.jena.sparql.sse.ItemLocation, java.lang.String)
    {
        java.io.PrintStream $r2;
        com.hp.hpl.jena.sparql.sse.ItemLocation r0;
        java.lang.String $r1, r3;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemLocation;

        r3 := @parameter1: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: java.lang.String msg(com.hp.hpl.jena.sparql.sse.ItemLocation,java.lang.String)>(r0, r3);

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;
    }

    public static void checkLength(int, int, com.hp.hpl.jena.sparql.sse.ItemList, java.lang.String)
    {
        int $i0, i1, i2, $i3, $i4;
        java.lang.String $r4, $r14, r16, r17;
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        r0 := @parameter2: com.hp.hpl.jena.sparql.sse.ItemList;

        r16 := @parameter3: java.lang.String;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if $i0 < i1 goto label1;

        $i4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if $i4 > i2 goto label1;

        return;

     label1:
        if r16 != null goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong number of arguments: (");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")/");

        $i3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r14 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.lang.String shortString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.lang.String shortString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r17 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.ItemList,java.lang.String)>(r0, r17);

        return;
    }

    public static void checkLength(int, com.hp.hpl.jena.sparql.sse.ItemList, java.lang.String)
    {
        int $i0, i1, $i2;
        java.lang.String $r4, $r12, r14, r15;
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13;

        i1 := @parameter0: int;

        r0 := @parameter1: com.hp.hpl.jena.sparql.sse.ItemList;

        r14 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if $i0 != i1 goto label1;

        return;

     label1:
        if r14 != null goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong number of arguments: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r12 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.lang.String shortString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.lang.String shortString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r15 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.ItemList,java.lang.String)>(r0, r15);

        return;
    }

    public static void checkLengthAtLeast(int, com.hp.hpl.jena.sparql.sse.ItemList, java.lang.String)
    {
        int $i0, i1, $i2;
        java.lang.String $r4, $r12, r14, r15;
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13;

        i1 := @parameter0: int;

        r0 := @parameter1: com.hp.hpl.jena.sparql.sse.ItemList;

        r14 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if $i0 < i1 goto label1;

        return;

     label1:
        if r14 != null goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too few arguments: want > ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :got : ");

        $i2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r12 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.lang.String shortString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.lang.String shortString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r15 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.ItemList,java.lang.String)>(r0, r15);

        return;
    }

    public static void broken(com.hp.hpl.jena.sparql.sse.Item, java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.Item r0;
        java.lang.String r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        r1 := @parameter1: java.lang.String;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.ItemLocation,java.lang.String,com.hp.hpl.jena.sparql.sse.Item)>(r0, r1, r0);

        return;
    }

    public static void broken(java.lang.String)
    {
        java.io.PrintStream $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(r0);

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void exception(java.lang.String)>(r0);

        return;
    }

    public static void exception(java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.builders.ExprBuildException $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new com.hp.hpl.jena.sparql.sse.builders.ExprBuildException;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.sse.builders.ExprBuildException: void <init>(java.lang.String)>(r1);

        throw $r0;
    }

    public static void broken(com.hp.hpl.jena.sparql.sse.ItemLocation, java.lang.String, com.hp.hpl.jena.sparql.sse.Item)
    {
        java.io.PrintStream $r3;
        com.hp.hpl.jena.sparql.sse.Item r6;
        com.hp.hpl.jena.sparql.sse.ItemLocation r0;
        java.lang.StringBuilder $r2, $r4, $r5, $r8;
        java.lang.String $r1, $r7, $r9, r10;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemLocation;

        r10 := @parameter1: java.lang.String;

        r6 := @parameter2: com.hp.hpl.jena.sparql.sse.Item;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: java.lang.String msg(com.hp.hpl.jena.sparql.sse.ItemLocation,java.lang.String)>(r0, r10);

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke r6.<com.hp.hpl.jena.sparql.sse.Item: java.lang.String shortString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9);

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void exception(java.lang.String)>($r1);

        return;
    }

    public static void broken(com.hp.hpl.jena.sparql.sse.ItemList, java.lang.String)
    {
        java.lang.String r1;
        com.hp.hpl.jena.sparql.sse.ItemList r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        r1 := @parameter1: java.lang.String;

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.ItemLocation,java.lang.String,com.hp.hpl.jena.sparql.sse.ItemList)>(r0, r1, r0);

        return;
    }

    public static void broken(com.hp.hpl.jena.sparql.sse.ItemLocation, java.lang.String, com.hp.hpl.jena.sparql.sse.ItemList)
    {
        java.io.PrintStream $r3;
        com.hp.hpl.jena.sparql.sse.ItemList r6;
        com.hp.hpl.jena.sparql.sse.ItemLocation r0;
        java.lang.StringBuilder $r2, $r4, $r5, $r8;
        java.lang.String $r1, $r7, $r9, r10;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemLocation;

        r10 := @parameter1: java.lang.String;

        r6 := @parameter2: com.hp.hpl.jena.sparql.sse.ItemList;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: java.lang.String msg(com.hp.hpl.jena.sparql.sse.ItemLocation,java.lang.String)>(r0, r10);

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke r6.<com.hp.hpl.jena.sparql.sse.ItemList: java.lang.String shortString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9);

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void exception(java.lang.String)>($r1);

        return;
    }

    public static void broken(com.hp.hpl.jena.sparql.sse.ItemLocation, java.lang.String)
    {
        java.io.PrintStream $r2;
        com.hp.hpl.jena.sparql.sse.ItemLocation r0;
        java.lang.String $r1, r3;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemLocation;

        r3 := @parameter1: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: java.lang.String msg(com.hp.hpl.jena.sparql.sse.ItemLocation,java.lang.String)>(r0, r3);

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void exception(java.lang.String)>($r1);

        return;
    }

    public static java.lang.String msg(com.hp.hpl.jena.sparql.sse.ItemLocation, java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.ItemLocation r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5;
        java.lang.String $r2, r6;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemLocation;

        r6 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemLocation: java.lang.String location()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return r6;
    }

    public static com.hp.hpl.jena.sparql.sse.ItemList skipTag(com.hp.hpl.jena.sparql.sse.ItemList, java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.ItemList r2;
        int $i0;
        com.hp.hpl.jena.sparql.sse.Item $r0;
        java.lang.String r1;
        boolean $z0;

        r2 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r2.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if $i0 <= 0 goto label1;

        $r0 = virtualinvoke r2.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        $z0 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isSymbol(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        r2 = virtualinvoke r2.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.ItemList cdr()>();

     label1:
        return r2;
    }
}
