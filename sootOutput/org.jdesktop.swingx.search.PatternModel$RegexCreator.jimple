public class org.jdesktop.swingx.search.PatternModel$RegexCreator extends java.lang.Object
{
    protected java.lang.String matchRule;
    private java.util.List rules;

    public void <init>()
    {
        org.jdesktop.swingx.search.PatternModel$RegexCreator r0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel$RegexCreator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getMatchRule()
    {
        org.jdesktop.swingx.search.PatternModel$RegexCreator r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: org.jdesktop.swingx.search.PatternModel$RegexCreator;

        $r1 = r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.lang.String matchRule>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.lang.String getDefaultMatchRule()>();

        r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.lang.String matchRule> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.lang.String matchRule>;

        return $r2;
    }

    public boolean isAutoDetect()
    {
        org.jdesktop.swingx.search.PatternModel$RegexCreator r0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel$RegexCreator;

        return 0;
    }

    public java.lang.String createRegEx(java.lang.String)
    {
        org.jdesktop.swingx.search.PatternModel$RegexCreator r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, r9, $r10, $r11, $r12, $r13;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.jdesktop.swingx.search.PatternModel$RegexCreator;

        r9 := @parameter0: java.lang.String;

        $r1 = "contains";

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.lang.String getMatchRule()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r13 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.lang.String createContainedRegEx(java.lang.String)>(r9);

        return $r13;

     label1:
        $r3 = "equals";

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.lang.String getMatchRule()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        $r12 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.lang.String createEqualsRegEx(java.lang.String)>(r9);

        return $r12;

     label2:
        $r5 = "startsWith";

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.lang.String getMatchRule()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label3;

        $r11 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.lang.String createStartsAnchoredRegEx(java.lang.String)>(r9);

        return $r11;

     label3:
        $r7 = "endsWith";

        $r8 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.lang.String getMatchRule()>();

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label4;

        $r10 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.lang.String createEndAnchoredRegEx(java.lang.String)>(r9);

        return $r10;

     label4:
        return r9;
    }

    protected java.lang.String createEndAnchoredRegEx(java.lang.String)
    {
        org.jdesktop.swingx.search.PatternModel$RegexCreator r6;
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String r1, $r2, $r5;

        r6 := @this: org.jdesktop.swingx.search.PatternModel$RegexCreator;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r1);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected java.lang.String createStartsAnchoredRegEx(java.lang.String)
    {
        org.jdesktop.swingx.search.PatternModel$RegexCreator r6;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String r2, $r3, $r5;

        r6 := @this: org.jdesktop.swingx.search.PatternModel$RegexCreator;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^");

        $r3 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r2);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected java.lang.String createEqualsRegEx(java.lang.String)
    {
        org.jdesktop.swingx.search.PatternModel$RegexCreator r7;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String r2, $r3, $r6;

        r7 := @this: org.jdesktop.swingx.search.PatternModel$RegexCreator;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^");

        $r3 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r2);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    protected java.lang.String createContainedRegEx(java.lang.String)
    {
        org.jdesktop.swingx.search.PatternModel$RegexCreator r2;
        java.lang.String r0, $r1;

        r2 := @this: org.jdesktop.swingx.search.PatternModel$RegexCreator;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r0);

        return $r1;
    }

    public void setMatchRule(java.lang.String)
    {
        org.jdesktop.swingx.search.PatternModel$RegexCreator r0;
        java.lang.String r1;

        r0 := @this: org.jdesktop.swingx.search.PatternModel$RegexCreator;

        r1 := @parameter0: java.lang.String;

        r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.lang.String matchRule> = r1;

        return;
    }

    protected java.lang.String getDefaultMatchRule()
    {
        org.jdesktop.swingx.search.PatternModel$RegexCreator r0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel$RegexCreator;

        return "contains";
    }

    public java.util.List getMatchRules()
    {
        java.util.List $r1, $r2, $r3;
        org.jdesktop.swingx.search.PatternModel$RegexCreator r0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel$RegexCreator;

        $r1 = r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.util.List rules>;

        if $r1 != null goto label1;

        $r3 = specialinvoke r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.util.List createAndInitRules()>();

        r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.util.List rules> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.util.List rules>;

        return $r2;
    }

    private java.util.List createAndInitRules()
    {
        java.util.List $r2;
        org.jdesktop.swingx.search.PatternModel$RegexCreator r0;
        boolean $z0;
        java.util.ArrayList $r1;

        r0 := @this: org.jdesktop.swingx.search.PatternModel$RegexCreator;

        $z0 = specialinvoke r0.<org.jdesktop.swingx.search.PatternModel$RegexCreator: boolean supportsRules()>();

        if $z0 != 0 goto label1;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r2;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("contains");

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("equals");

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("startsWith");

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("endsWith");

        return $r1;
    }

    private boolean supportsRules()
    {
        org.jdesktop.swingx.search.PatternModel$RegexCreator r0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel$RegexCreator;

        return 1;
    }
}
