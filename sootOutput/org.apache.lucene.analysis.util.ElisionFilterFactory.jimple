public class org.apache.lucene.analysis.util.ElisionFilterFactory extends org.apache.lucene.analysis.util.TokenFilterFactory implements org.apache.lucene.analysis.util.ResourceLoaderAware, org.apache.lucene.analysis.util.MultiTermAwareComponent
{
    private final java.lang.String articlesFile;
    private final boolean ignoreCase;
    private org.apache.lucene.analysis.util.CharArraySet articles;

    public void <init>(java.util.Map)
    {
        java.lang.IllegalArgumentException $r3;
        org.apache.lucene.analysis.util.ElisionFilterFactory r0;
        java.util.Map r1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r2, $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.analysis.util.ElisionFilterFactory;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.lucene.analysis.util.TokenFilterFactory: void <init>(java.util.Map)>(r1);

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.util.ElisionFilterFactory: java.lang.String get(java.util.Map,java.lang.String)>(r1, "articles");

        r0.<org.apache.lucene.analysis.util.ElisionFilterFactory: java.lang.String articlesFile> = $r2;

        $z0 = virtualinvoke r0.<org.apache.lucene.analysis.util.ElisionFilterFactory: boolean getBoolean(java.util.Map,java.lang.String,boolean)>(r1, "ignoreCase", 0);

        r0.<org.apache.lucene.analysis.util.ElisionFilterFactory: boolean ignoreCase> = $z0;

        $z1 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown parameters: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        return;
    }

    public void inform(org.apache.lucene.analysis.util.ResourceLoader) throws java.io.IOException
    {
        org.apache.lucene.analysis.util.ResourceLoader r2;
        org.apache.lucene.analysis.util.CharArraySet $r4, $r5;
        java.lang.String $r1, $r3;
        org.apache.lucene.analysis.util.ElisionFilterFactory r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.util.ElisionFilterFactory;

        r2 := @parameter0: org.apache.lucene.analysis.util.ResourceLoader;

        $r1 = r0.<org.apache.lucene.analysis.util.ElisionFilterFactory: java.lang.String articlesFile>;

        if $r1 != null goto label1;

        $r5 = <org.apache.lucene.analysis.fr.FrenchAnalyzer: org.apache.lucene.analysis.util.CharArraySet DEFAULT_ARTICLES>;

        r0.<org.apache.lucene.analysis.util.ElisionFilterFactory: org.apache.lucene.analysis.util.CharArraySet articles> = $r5;

        goto label2;

     label1:
        $r3 = r0.<org.apache.lucene.analysis.util.ElisionFilterFactory: java.lang.String articlesFile>;

        $z0 = r0.<org.apache.lucene.analysis.util.ElisionFilterFactory: boolean ignoreCase>;

        $r4 = virtualinvoke r0.<org.apache.lucene.analysis.util.ElisionFilterFactory: org.apache.lucene.analysis.util.CharArraySet getWordSet(org.apache.lucene.analysis.util.ResourceLoader,java.lang.String,boolean)>(r2, $r3, $z0);

        r0.<org.apache.lucene.analysis.util.ElisionFilterFactory: org.apache.lucene.analysis.util.CharArraySet articles> = $r4;

     label2:
        return;
    }

    public org.apache.lucene.analysis.util.ElisionFilter create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.TokenStream r1;
        org.apache.lucene.analysis.util.CharArraySet $r3;
        org.apache.lucene.analysis.util.ElisionFilterFactory r2;
        org.apache.lucene.analysis.util.ElisionFilter $r0;

        r2 := @this: org.apache.lucene.analysis.util.ElisionFilterFactory;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r0 = new org.apache.lucene.analysis.util.ElisionFilter;

        $r3 = r2.<org.apache.lucene.analysis.util.ElisionFilterFactory: org.apache.lucene.analysis.util.CharArraySet articles>;

        specialinvoke $r0.<org.apache.lucene.analysis.util.ElisionFilter: void <init>(org.apache.lucene.analysis.TokenStream,org.apache.lucene.analysis.util.CharArraySet)>(r1, $r3);

        return $r0;
    }

    public org.apache.lucene.analysis.util.AbstractAnalysisFactory getMultiTermComponent()
    {
        org.apache.lucene.analysis.util.ElisionFilterFactory r0;

        r0 := @this: org.apache.lucene.analysis.util.ElisionFilterFactory;

        return r0;
    }

    public volatile org.apache.lucene.analysis.TokenStream create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.TokenStream r1;
        org.apache.lucene.analysis.util.ElisionFilterFactory r0;
        org.apache.lucene.analysis.util.ElisionFilter $r2;

        r0 := @this: org.apache.lucene.analysis.util.ElisionFilterFactory;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.util.ElisionFilterFactory: org.apache.lucene.analysis.util.ElisionFilter create(org.apache.lucene.analysis.TokenStream)>(r1);

        return $r2;
    }
}
