class com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1 extends com.mycila.inject.internal.guava.collect.UnmodifiableListIterator
{
    final com.mycila.inject.internal.guava.collect.UnmodifiableListIterator val$forward;
    final com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList this$0;

    void <init>(com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList, com.mycila.inject.internal.guava.collect.UnmodifiableListIterator)
    {
        com.mycila.inject.internal.guava.collect.UnmodifiableListIterator r2;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1 r0;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList;

        r2 := @parameter1: com.mycila.inject.internal.guava.collect.UnmodifiableListIterator;

        r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList this$0> = r1;

        r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1: com.mycila.inject.internal.guava.collect.UnmodifiableListIterator val$forward> = r2;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.UnmodifiableListIterator: void <init>()>();

        return;
    }

    public boolean hasNext()
    {
        com.mycila.inject.internal.guava.collect.UnmodifiableListIterator $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1 r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1: com.mycila.inject.internal.guava.collect.UnmodifiableListIterator val$forward>;

        $z0 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.UnmodifiableListIterator: boolean hasPrevious()>();

        return $z0;
    }

    public boolean hasPrevious()
    {
        com.mycila.inject.internal.guava.collect.UnmodifiableListIterator $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1 r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1: com.mycila.inject.internal.guava.collect.UnmodifiableListIterator val$forward>;

        $z0 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.UnmodifiableListIterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        java.lang.Object $r2;
        com.mycila.inject.internal.guava.collect.UnmodifiableListIterator $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1: com.mycila.inject.internal.guava.collect.UnmodifiableListIterator val$forward>;

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.UnmodifiableListIterator: java.lang.Object previous()>();

        return $r2;
    }

    public int nextIndex()
    {
        com.mycila.inject.internal.guava.collect.UnmodifiableListIterator $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1 r0;
        int $i0, $i1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList this$0>;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1: com.mycila.inject.internal.guava.collect.UnmodifiableListIterator val$forward>;

        $i0 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.UnmodifiableListIterator: int previousIndex()>();

        $i1 = staticinvoke <com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: int access$000(com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList,int)>($r2, $i0);

        return $i1;
    }

    public java.lang.Object previous()
    {
        java.lang.Object $r2;
        com.mycila.inject.internal.guava.collect.UnmodifiableListIterator $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1: com.mycila.inject.internal.guava.collect.UnmodifiableListIterator val$forward>;

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.UnmodifiableListIterator: java.lang.Object next()>();

        return $r2;
    }

    public int previousIndex()
    {
        com.mycila.inject.internal.guava.collect.UnmodifiableListIterator $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1 r0;
        int $i0, $i1;
        com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1: com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList this$0>;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList$1: com.mycila.inject.internal.guava.collect.UnmodifiableListIterator val$forward>;

        $i0 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.UnmodifiableListIterator: int nextIndex()>();

        $i1 = staticinvoke <com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList: int access$000(com.mycila.inject.internal.guava.collect.ImmutableList$ReverseImmutableList,int)>($r2, $i0);

        return $i1;
    }
}
