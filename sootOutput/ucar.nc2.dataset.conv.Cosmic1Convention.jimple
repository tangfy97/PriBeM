public class ucar.nc2.dataset.conv.Cosmic1Convention extends ucar.nc2.dataset.CoordSysBuilder
{
    protected static final double RTD;
    protected static final double DTR;

    public static boolean isMine(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Dimension $r1, $r3;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>("MSL_alt");

        if null != $r1 goto label1;

        $r3 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>("time");

        if null != $r3 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "center", null);

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("UCAR/CDAAC");

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void <init>()
    {
        ucar.nc2.dataset.conv.Cosmic1Convention r0;

        r0 := @this: ucar.nc2.dataset.conv.Cosmic1Convention;

        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void <init>()>();

        r0.<ucar.nc2.dataset.conv.Cosmic1Convention: java.lang.String conventionName> = "Cosmic1";

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        byte $b9, $b10;
        ucar.nc2.Attribute $r1, $r84, $r85, $r86, $r87, $r89, $r91, $r93, $r94, $r95;
        ucar.ma2.Array $r23, $r26, $r29, $r32, $r40, $r42, $r44, $r45, $r70, $r75;
        int[] $r21, $r24, $r27, $r30, $r68;
        ucar.nc2.dataset.VariableDS $r83, $r88, $r90, $r92;
        ucar.ma2.DataType $r4, $r10, $r16, $r22, $r25, $r28, $r31, $r62, $r69;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i11, i12, i13, i14, $i15, $i16;
        ucar.nc2.Variable $r34, $r39, $r41, $r43, $r53, $r57, $r74, $r76, r77, r78;
        ucar.nc2.util.CancelTask r72;
        ucar.nc2.constants.AxisType $r7, $r13, $r19, $r37, $r55, $r59, $r66;
        ucar.ma2.ArrayDouble$D1 $r71, r82;
        ucar.ma2.ArrayFloat$D1 r79, r80, r81;
        double[] r49, r50, $r51, $r52;
        java.lang.String $r5, $r8, $r11, $r14, $r17, $r20, $r38, $r56, $r60, $r63, $r67;
        ucar.nc2.Dimension $r2, $r73;
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.nc2.dataset.conv.Cosmic1Convention r33;
        boolean $z0, $z1, $z2, $z3;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        double $d0, $d1, $d2, $d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, d34, d35;
        ucar.ma2.IndexIterator $r46, $r47, $r48;

        r33 := @this: ucar.nc2.dataset.conv.Cosmic1Convention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r72 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("leoId");

        if $r1 != null goto label16;

        $r53 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("time");

        if $r53 != null goto label13;

        $d18 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: double readAttributeDouble(ucar.nc2.Variable,java.lang.String,double)>(null, "start_time", #NaN);

        d34 = $d18;

        $d19 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: double readAttributeDouble(ucar.nc2.Variable,java.lang.String,double)>(null, "stop_time", #NaN);

        d35 = $d19;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d18);

        if $z1 == 0 goto label02;

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d19);

        if $z2 == 0 goto label02;

        $d32 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: double readAttributeDouble(ucar.nc2.Variable,java.lang.String,double)>(null, "toptime", #NaN);

        $d33 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: double readAttributeDouble(ucar.nc2.Variable,java.lang.String,double)>(null, "bottime", #NaN);

        r33.<ucar.nc2.dataset.conv.Cosmic1Convention: java.lang.String conventionName> = "Cosmic2";

        $b9 = $d32 cmpl $d33;

        $i15 = (int) $b9;

        if $i15 <= 0 goto label01;

        d35 = $d32;

        d34 = $d33;

        goto label02;

     label01:
        d35 = $d33;

        d34 = $d32;

     label02:
        $r73 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("MSL_alt");

        $r74 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("MSL_alt");

        $r75 = virtualinvoke $r74.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $f3 = virtualinvoke $r75.<ucar.ma2.Array: float getFloat(int)>(1);

        $f4 = virtualinvoke $r75.<ucar.ma2.Array: float getFloat(int)>(0);

        $f5 = $f3 - $f4;

        $b10 = $f5 cmpl 0.0F;

        $i16 = (int) $b10;

        if $i16 <= 0 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        $i7 = virtualinvoke $r73.<ucar.nc2.Dimension: int getLength()>();

        $d21 = d35 - d34;

        $d20 = (double) $i7;

        $d31 = $d21 / $d20;

        $r83 = new ucar.nc2.dataset.VariableDS;

        $r62 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r63 = virtualinvoke $r73.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r83.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, null, "time", $r62, $r63, "seconds since 1980-01-06 00:00:00", null);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r83);

        $r84 = new ucar.nc2.Attribute;

        specialinvoke $r84.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "seconds since 1980-01-06 00:00:00");

        virtualinvoke $r83.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r84);

        $r85 = new ucar.nc2.Attribute;

        $r66 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r67 = virtualinvoke $r66.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r85.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r67);

        virtualinvoke $r83.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r85);

        $i8 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: int readAttributeInteger(ucar.nc2.Variable,java.lang.String,int)>(null, "irs", 1);

        $r69 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r68 = newarray (int)[1];

        $r68[0] = $i7;

        $r70 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r69, $r68);

        $r71 = (ucar.ma2.ArrayDouble$D1) $r70;

        if $z3 != 0 goto label10;

        if $i8 != 1 goto label07;

        i11 = 0;

     label05:
        if i11 >= $i7 goto label06;

        $d28 = (double) i11;

        $d29 = $d28 * $d31;

        $d30 = d34 + $d29;

        virtualinvoke $r71.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i11, $d30);

        i11 = i11 + 1;

        goto label05;

     label06:
        goto label12;

     label07:
        i12 = 0;

     label08:
        if i12 >= $i7 goto label09;

        $d25 = (double) i12;

        $d26 = $d25 * $d31;

        $d27 = d35 - $d26;

        virtualinvoke $r71.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i12, $d27);

        i12 = i12 + 1;

        goto label08;

     label09:
        goto label12;

     label10:
        i13 = 0;

     label11:
        if i13 >= $i7 goto label12;

        $d22 = (double) i13;

        $d23 = $d22 * $d31;

        $d24 = d35 - $d23;

        virtualinvoke $r71.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i13, $d24);

        i13 = i13 + 1;

        goto label11;

     label12:
        virtualinvoke $r83.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r71, 0);

     label13:
        $r76 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("Lat");

        r77 = $r76;

        if $r76 != null goto label14;

        r77 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("GEO_lat");

     label14:
        $r86 = new ucar.nc2.Attribute;

        $r55 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r56 = virtualinvoke $r55.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r86.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r56);

        virtualinvoke r77.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r86);

        $r57 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("Lon");

        r78 = $r57;

        if $r57 != null goto label15;

        r78 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("GEO_lon");

     label15:
        $r87 = new ucar.nc2.Attribute;

        $r59 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r60 = virtualinvoke $r59.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r87.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r60);

        virtualinvoke r78.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r87);

        goto label19;

     label16:
        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("time");

        $i0 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        $r88 = new ucar.nc2.dataset.VariableDS;

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r5 = virtualinvoke $r2.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r88.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, null, "Lat", $r4, $r5, "degree", null);

        $r89 = new ucar.nc2.Attribute;

        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r8 = virtualinvoke $r7.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r89.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r8);

        virtualinvoke $r88.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r89);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r88);

        $r90 = new ucar.nc2.dataset.VariableDS;

        $r10 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r11 = virtualinvoke $r2.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r90.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, null, "Lon", $r10, $r11, "degree", null);

        $r91 = new ucar.nc2.Attribute;

        $r13 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r14 = virtualinvoke $r13.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r91.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r14);

        virtualinvoke $r90.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r91);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r90);

        $r92 = new ucar.nc2.dataset.VariableDS;

        $r16 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r17 = virtualinvoke $r2.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r92.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, null, "MSL_alt", $r16, $r17, "meter", null);

        $r93 = new ucar.nc2.Attribute;

        $r19 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r20 = virtualinvoke $r19.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r93.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r20);

        virtualinvoke $r92.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r93);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r92);

        $r22 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r21 = newarray (int)[1];

        $r21[0] = $i0;

        $r23 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r22, $r21);

        r79 = (ucar.ma2.ArrayFloat$D1) $r23;

        $r25 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r24 = newarray (int)[1];

        $r24[0] = $i0;

        $r26 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r25, $r24);

        r80 = (ucar.ma2.ArrayFloat$D1) $r26;

        $r28 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r27 = newarray (int)[1];

        $r27[0] = $i0;

        $r29 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r28, $r27);

        r81 = (ucar.ma2.ArrayFloat$D1) $r29;

        $r31 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r30 = newarray (int)[1];

        $r30[0] = $i0;

        $r32 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r31, $r30);

        r82 = (ucar.ma2.ArrayDouble$D1) $r32;

        r33.<ucar.nc2.dataset.conv.Cosmic1Convention: java.lang.String conventionName> = "Cosmic3";

        $i1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: int readAttributeInteger(ucar.nc2.Variable,java.lang.String,int)>(null, "year", 2009);

        $i2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: int readAttributeInteger(ucar.nc2.Variable,java.lang.String,int)>(null, "month", 0);

        $i3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: int readAttributeInteger(ucar.nc2.Variable,java.lang.String,int)>(null, "day", 0);

        $i4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: int readAttributeInteger(ucar.nc2.Variable,java.lang.String,int)>(null, "hour", 0);

        $i5 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: int readAttributeInteger(ucar.nc2.Variable,java.lang.String,int)>(null, "minute", 0);

        $i6 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: int readAttributeInteger(ucar.nc2.Variable,java.lang.String,int)>(null, "second", 0);

        $d0 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: double readAttributeDouble(ucar.nc2.Variable,java.lang.String,double)>(null, "startTime", #NaN);

        $d1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: double readAttributeDouble(ucar.nc2.Variable,java.lang.String,double)>(null, "stopTime", #NaN);

        $d3 = $d1 - $d0;

        $d2 = (double) $i0;

        d4 = $d3 / $d2;

        $d6 = (double) $i6;

        $d5 = (double) 0;

        $d7 = virtualinvoke r33.<ucar.nc2.dataset.conv.Cosmic1Convention: double gast(int,int,int,int,int,double,double)>($i1, $i2, $i3, $i4, $i5, $d6, $d5);

        $r34 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("time");

        virtualinvoke $r34.<ucar.nc2.Variable: boolean removeAttributeIgnoreCase(java.lang.String)>("valid_range");

        virtualinvoke $r34.<ucar.nc2.Variable: boolean removeAttributeIgnoreCase(java.lang.String)>("units");

        $r94 = new ucar.nc2.Attribute;

        specialinvoke $r94.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "seconds since 1980-01-06 00:00:00");

        virtualinvoke $r34.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r94);

        $r95 = new ucar.nc2.Attribute;

        $r37 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r38 = virtualinvoke $r37.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r95.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r38);

        virtualinvoke $r34.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r95);

        $r39 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("xLeo");

        $r40 = virtualinvoke $r39.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r41 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("yLeo");

        $r42 = virtualinvoke $r41.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r43 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("zLeo");

        $r44 = virtualinvoke $r43.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r45 = virtualinvoke $r34.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r46 = virtualinvoke $r40.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r47 = virtualinvoke $r42.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r48 = virtualinvoke $r44.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        i14 = 0;

     label17:
        $z0 = interfaceinvoke $r46.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label18;

        r49 = newarray (double)[3];

        $d8 = interfaceinvoke $r46.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        r49[0] = $d8;

        $d9 = interfaceinvoke $r47.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        r49[1] = $d9;

        $d10 = interfaceinvoke $r48.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        r49[2] = $d10;

        r50 = newarray (double)[3];

        r50[0] = 0.0;

        r50[1] = 0.0;

        r50[2] = 1.0;

        $d11 = -1.0 * $d7;

        $r51 = virtualinvoke r33.<ucar.nc2.dataset.conv.Cosmic1Convention: double[] spin(double[],double[],double)>(r49, r50, $d11);

        $r52 = virtualinvoke r33.<ucar.nc2.dataset.conv.Cosmic1Convention: double[] xyzell(double,double,double[])>(6378.137, 6356.7523142, $r51);

        virtualinvoke $r45.<ucar.ma2.Array: double getDouble(int)>(i14);

        $d12 = $r52[0];

        $f0 = (float) $d12;

        virtualinvoke r79.<ucar.ma2.ArrayFloat$D1: void set(int,float)>(i14, $f0);

        $d13 = $r52[1];

        $f1 = (float) $d13;

        virtualinvoke r80.<ucar.ma2.ArrayFloat$D1: void set(int,float)>(i14, $f1);

        $d14 = $r52[2];

        $f2 = (float) $d14;

        virtualinvoke r81.<ucar.ma2.ArrayFloat$D1: void set(int,float)>(i14, $f2);

        $d15 = (double) i14;

        $d16 = $d15 * d4;

        $d17 = $d0 + $d16;

        virtualinvoke r82.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i14, $d17);

        i14 = i14 + 1;

        goto label17;

     label18:
        virtualinvoke $r88.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>(r79, 0);

        virtualinvoke $r90.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>(r80, 0);

        virtualinvoke $r92.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>(r81, 0);

        virtualinvoke $r34.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>(r82, 0);

     label19:
        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return;
    }

    private visad.DateTime getDateTime(int, int, int, int, int, int) throws java.lang.Exception
    {
        ucar.nc2.dataset.conv.Cosmic1Convention r4;
        java.util.GregorianCalendar $r0;
        java.util.TimeZone $r1;
        java.util.Date $r3;
        int i0, i1, $i2, i3, i4, i5, i6;
        visad.DateTime $r2;

        r4 := @this: ucar.nc2.dataset.conv.Cosmic1Convention;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i3 := @parameter2: int;

        i4 := @parameter3: int;

        i5 := @parameter4: int;

        i6 := @parameter5: int;

        $r0 = new java.util.GregorianCalendar;

        $r1 = <ucar.unidata.util.DateUtil: java.util.TimeZone TIMEZONE_GMT>;

        specialinvoke $r0.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r1);

        virtualinvoke $r0.<java.util.GregorianCalendar: void clear()>();

        virtualinvoke $r0.<java.util.GregorianCalendar: void set(int,int)>(1, i0);

        $i2 = i1 - 1;

        virtualinvoke $r0.<java.util.GregorianCalendar: void set(int,int)>(2, $i2);

        virtualinvoke $r0.<java.util.GregorianCalendar: void set(int,int)>(5, i3);

        virtualinvoke $r0.<java.util.GregorianCalendar: void set(int,int)>(11, i4);

        virtualinvoke $r0.<java.util.GregorianCalendar: void set(int,int)>(12, i5);

        virtualinvoke $r0.<java.util.GregorianCalendar: void set(int,int)>(13, i6);

        $r2 = new visad.DateTime;

        $r3 = virtualinvoke $r0.<java.util.GregorianCalendar: java.util.Date getTime()>();

        specialinvoke $r2.<visad.DateTime: void <init>(java.util.Date)>($r3);

        return $r2;
    }

    protected ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.VariableEnhanced)
    {
        ucar.nc2.dataset.conv.Cosmic1Convention r6;
        ucar.nc2.dataset.VariableEnhanced r0;
        ucar.nc2.constants.AxisType $r2, $r3, $r4, $r5;
        java.lang.String $r1;
        ucar.nc2.dataset.NetcdfDataset r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r6 := @this: ucar.nc2.dataset.conv.Cosmic1Convention;

        r7 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: ucar.nc2.dataset.VariableEnhanced;

        $r1 = interfaceinvoke r0.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getShortName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("time");

        if $z0 == 0 goto label1;

        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        return $r5;

     label1:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Lat");

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("GEO_lat");

        if $z2 == 0 goto label3;

     label2:
        $r2 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        return $r2;

     label3:
        $z3 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Lon");

        if $z3 != 0 goto label4;

        $z4 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("GEO_lon");

        if $z4 == 0 goto label5;

     label4:
        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        return $r3;

     label5:
        $z5 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("MSL_alt");

        if $z5 == 0 goto label6;

        $r4 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        return $r4;

     label6:
        return null;
    }

    public double[] xyzell(double, double, double[])
    {
        byte $b0, $b1;
        double[] r0, r1, r2, r3;
        ucar.nc2.dataset.conv.Cosmic1Convention r4;
        int i2, i3, $i4, $i5;
        double d0, d1, $d2, $d3, $d4, $d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, d42, d43, d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, d57, d58, d59, $d60, $d61, $d62, $d63;

        r4 := @this: ucar.nc2.dataset.conv.Cosmic1Convention;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r3 := @parameter2: double[];

        r0 = newarray (double)[3];

        r1 = newarray (double)[3];

        r2 = newarray (double)[3];

        $d3 = d0 * d0;

        $d2 = d1 * d1;

        $d5 = $d3 - $d2;

        $d4 = d0 * d0;

        d6 = $d5 / $d4;

        $d8 = r3[0];

        $d7 = r3[0];

        $d12 = $d8 * $d7;

        $d10 = r3[1];

        $d9 = r3[1];

        $d11 = $d10 * $d9;

        $d13 = $d12 + $d11;

        $d14 = staticinvoke <java.lang.Math: double sqrt(double)>($d13);

        $d16 = r3[1];

        $d15 = r3[0];

        d57 = staticinvoke <java.lang.Math: double atan2(double,double)>($d16, $d15);

        $d17 = r3[2];

        d18 = $d17 / $d14;

        $d20 = r3[0];

        $d19 = r3[0];

        $d24 = $d20 * $d19;

        $d22 = r3[1];

        $d21 = r3[1];

        $d23 = $d22 * $d21;

        $d28 = $d24 + $d23;

        $d26 = r3[2];

        $d25 = r3[2];

        $d27 = $d26 * $d25;

        $d29 = $d28 + $d27;

        $d30 = staticinvoke <java.lang.Math: double sqrt(double)>($d29);

        d58 = $d30 - d0;

        $d32 = d6 * d0;

        $d31 = d0 + d58;

        $d33 = $d32 / $d31;

        $d34 = 1.0 - $d33;

        $d35 = d18 / $d34;

        d59 = staticinvoke <java.lang.Math: double atan(double)>($d35);

        i2 = 0;

        i3 = 1;

     label1:
        if i3 > 10000000 goto label4;

        $d36 = staticinvoke <java.lang.Math: double sin(double)>(d59);

        $d37 = d6 * $d36;

        $d38 = staticinvoke <java.lang.Math: double sin(double)>(d59);

        $d39 = $d37 * $d38;

        $d40 = 1.0 - $d39;

        $d41 = staticinvoke <java.lang.Math: double sqrt(double)>($d40);

        d42 = d0 / $d41;

        d43 = d58;

        d44 = d59;

        $d45 = staticinvoke <java.lang.Math: double cos(double)>(d59);

        $d46 = $d14 / $d45;

        d58 = $d46 - d42;

        $d48 = d6 * d42;

        $d47 = d42 + d58;

        $d49 = $d48 / $d47;

        $d50 = 1.0 - $d49;

        $d51 = d18 / $d50;

        $d52 = staticinvoke <java.lang.Math: double atan(double)>($d51);

        d59 = $d52;

        i2 = i2 + 1;

        $d53 = d44 - $d52;

        $d54 = staticinvoke <java.lang.Math: double abs(double)>($d53);

        $b0 = $d54 cmpg 1.0E-11;

        $i4 = (int) $b0;

        if $i4 > 0 goto label2;

        $d55 = d43 - d58;

        $d56 = staticinvoke <java.lang.Math: double abs(double)>($d55);

        $b1 = $d56 cmpg 1.0E-5;

        $i5 = (int) $b1;

        if $i5 > 0 goto label2;

        goto label4;

     label2:
        if i2 < 10 goto label3;

        d59 = -999.0;

        d57 = -999.0;

        d58 = -999.0;

        goto label4;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $d60 = d59 * 180.0;

        $d61 = $d60 / 3.1415926;

        r1[0] = $d61;

        $d62 = d57 * 180.0;

        $d63 = $d62 / 3.1415926;

        r1[1] = $d63;

        r1[2] = d58;

        return r1;
    }

    public double gast(int, int, int, int, int, double, double)
    {
        ucar.nc2.dataset.conv.Cosmic1Convention r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        double $d0, $d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, d11, $d12, d13, d14, $d15;

        r0 := @this: ucar.nc2.dataset.conv.Cosmic1Convention;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        d11 := @parameter5: double;

        d14 := @parameter6: double;

        $d0 = virtualinvoke r0.<ucar.nc2.dataset.conv.Cosmic1Convention: double juday(int,int,int)>(i0, i1, i2);

        $d1 = $d0 - 2451545.0;

        d2 = $d1 / 36525.0;

        $d3 = 8640184.812866 * d2;

        $d6 = 24110.54841 + $d3;

        $d4 = 0.093104 * d2;

        $d5 = $d4 * d2;

        $d7 = $d6 + $d5;

        $d8 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, 3.0);

        $d9 = 6.2E-6 * $d8;

        d10 = $d7 - $d9;

        $i6 = i3 * 3600;

        $i5 = i4 * 60;

        $i7 = $i6 + $i5;

        $d12 = (double) $i7;

        d13 = $d12 + d11;

        $d15 = virtualinvoke r0.<ucar.nc2.dataset.conv.Cosmic1Convention: double togreenw(double,double,double)>(d14, d13, d10);

        return $d15;
    }

    public double juday(int, int, int)
    {
        ucar.nc2.dataset.conv.Cosmic1Convention r0;
        long $l10, $l11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i12;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, $d12, $d13, d14;

        r0 := @this: ucar.nc2.dataset.conv.Cosmic1Convention;

        i1 := @parameter0: int;

        i12 := @parameter1: int;

        i0 := @parameter2: int;

        $i2 = 12 - i1;

        $i3 = $i2 / 10;

        $i4 = i0 - $i3;

        d0 = (double) $i4;

        $i8 = i1 + 1;

        $i5 = 12 - i1;

        $i6 = $i5 / 10;

        $i7 = 12 * $i6;

        $i9 = $i8 + $i7;

        d1 = (double) $i9;

        d2 = d0 / 100.0;

        $d4 = 2.0 - d2;

        $d3 = d2 / 4.0;

        $d6 = $d4 + $d3;

        $d5 = 365.25 * d0;

        $l10 = staticinvoke <java.lang.Math: long round(double)>($d5);

        $d7 = (double) $l10;

        $d9 = $d6 + $d7;

        $d8 = 30.6001 * d1;

        $l11 = staticinvoke <java.lang.Math: long round(double)>($d8);

        $d10 = (double) $l11;

        d11 = $d9 + $d10;

        $d12 = (double) i12;

        $d13 = d11 + $d12;

        d14 = $d13 + 1720994.5;

        return d14;
    }

    public double togreenw(double, double, double)
    {
        ucar.nc2.dataset.conv.Cosmic1Convention r0;
        byte $b0, $b1;
        int $i2, $i3;
        double $d0, d1, d2, $d3, d4, $d5, $d6, d7, d8, d9;

        r0 := @this: ucar.nc2.dataset.conv.Cosmic1Convention;

        d2 := @parameter0: double;

        d1 := @parameter1: double;

        d8 := @parameter2: double;

        $d0 = staticinvoke <java.lang.Math: double acos(double)>(-1.0);

        $d3 = d1 + d2;

        d4 = $d3 * 1.0027379093;

        d9 = d8 + d4;

     label1:
        $b0 = d9 cmpg 0.0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label2;

        d9 = d9 + 86400.0;

        goto label1;

     label2:
        $b1 = d9 cmpl 86400.0;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label3;

        d9 = d9 - 86400.0;

        goto label2;

     label3:
        $d5 = d9 * 2.0;

        $d6 = $d5 * $d0;

        d7 = $d6 / 86400.0;

        return d7;
    }

    public double[] spin(double[], double[], double)
    {
        double[][] r4;
        double[] r0, r1, r2, r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, r15, $r16, $r17;
        ucar.nc2.dataset.conv.Cosmic1Convention r18;
        int i0, i1, i2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, $d13, d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86;

        r18 := @this: ucar.nc2.dataset.conv.Cosmic1Convention;

        r15 := @parameter0: double[];

        r3 := @parameter1: double[];

        d12 := @parameter2: double;

        r0 = newarray (double)[3];

        r1 = newarray (double)[3];

        r2 = newarray (double)[3];

        $d1 = r3[0];

        $d0 = r3[0];

        $d5 = $d1 * $d0;

        $d3 = r3[1];

        $d2 = r3[1];

        $d4 = $d3 * $d2;

        $d9 = $d5 + $d4;

        $d7 = r3[2];

        $d6 = r3[2];

        $d8 = $d7 * $d6;

        $d10 = $d9 + $d8;

        $d11 = staticinvoke <java.lang.Math: double sqrt(double)>($d10);

        i0 = 0;

     label1:
        if i0 >= 3 goto label2;

        $d85 = r3[i0];

        $d86 = $d85 / $d11;

        r1[i0] = $d86;

        i0 = i0 + 1;

        goto label1;

     label2:
        $d13 = staticinvoke <java.lang.Math: double cos(double)>(d12);

        d14 = 1.0 - $d13;

        $d15 = staticinvoke <java.lang.Math: double sin(double)>(d12);

        r4 = newmultiarray (double)[3][3];

        $r5 = r4[0];

        $d16 = r1[0];

        $d18 = d14 * $d16;

        $d17 = r1[0];

        $d19 = $d18 * $d17;

        $d20 = $d19 + $d13;

        $r5[0] = $d20;

        $r6 = r4[0];

        $d21 = r1[0];

        $d23 = d14 * $d21;

        $d22 = r1[1];

        $d26 = $d23 * $d22;

        $d24 = r1[2];

        $d25 = $d15 * $d24;

        $d27 = $d26 - $d25;

        $r6[1] = $d27;

        $r7 = r4[0];

        $d28 = r1[0];

        $d30 = d14 * $d28;

        $d29 = r1[2];

        $d33 = $d30 * $d29;

        $d31 = r1[1];

        $d32 = $d15 * $d31;

        $d34 = $d33 + $d32;

        $r7[2] = $d34;

        $r8 = r4[1];

        $d35 = r1[1];

        $d37 = d14 * $d35;

        $d36 = r1[0];

        $d40 = $d37 * $d36;

        $d38 = r1[2];

        $d39 = $d15 * $d38;

        $d41 = $d40 + $d39;

        $r8[0] = $d41;

        $r9 = r4[1];

        $d42 = r1[1];

        $d44 = d14 * $d42;

        $d43 = r1[1];

        $d45 = $d44 * $d43;

        $d46 = $d45 + $d13;

        $r9[1] = $d46;

        $r10 = r4[1];

        $d47 = r1[1];

        $d49 = d14 * $d47;

        $d48 = r1[2];

        $d52 = $d49 * $d48;

        $d50 = r1[0];

        $d51 = $d15 * $d50;

        $d53 = $d52 - $d51;

        $r10[2] = $d53;

        $r11 = r4[2];

        $d54 = r1[2];

        $d56 = d14 * $d54;

        $d55 = r1[0];

        $d59 = $d56 * $d55;

        $d57 = r1[1];

        $d58 = $d15 * $d57;

        $d60 = $d59 - $d58;

        $r11[0] = $d60;

        $r12 = r4[2];

        $d61 = r1[2];

        $d63 = d14 * $d61;

        $d62 = r1[1];

        $d66 = $d63 * $d62;

        $d64 = r1[0];

        $d65 = $d15 * $d64;

        $d67 = $d66 + $d65;

        $r12[1] = $d67;

        $r13 = r4[2];

        $d68 = r1[2];

        $d70 = d14 * $d68;

        $d69 = r1[2];

        $d71 = $d70 * $d69;

        $d72 = $d71 + $d13;

        $r13[2] = $d72;

        i1 = 0;

     label3:
        if i1 >= 3 goto label4;

        $r14 = r4[i1];

        $d75 = $r14[0];

        $d74 = r15[0];

        $d79 = $d75 * $d74;

        $r16 = r4[i1];

        $d77 = $r16[1];

        $d76 = r15[1];

        $d78 = $d77 * $d76;

        $d83 = $d79 + $d78;

        $r17 = r4[i1];

        $d81 = $r17[2];

        $d80 = r15[2];

        $d82 = $d81 * $d80;

        $d84 = $d83 + $d82;

        r2[i1] = $d84;

        i1 = i1 + 1;

        goto label3;

     label4:
        i2 = 0;

     label5:
        if i2 >= 3 goto label6;

        $d73 = r2[i2];

        r0[i2] = $d73;

        i2 = i2 + 1;

        goto label5;

     label6:
        return r0;
    }

    public double[] execute(double[], double)
    {
        ucar.nc2.dataset.conv.Cosmic1Convention r2;
        byte $b1;
        double[] r0, r1;
        int $i0, $i2;
        double d0, d1, d2, d3, $d4, d5, $d6, d7, d8, d9, d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, d38, d39, d40;

        r2 := @this: ucar.nc2.dataset.conv.Cosmic1Convention;

        r0 := @parameter0: double[];

        d3 := @parameter1: double;

        d0 = r0[0];

        d1 = r0[1];

        d2 = r0[2];

        r1 = newarray (double)[3];

        $d4 = d3 / 86400.0;

        $i0 = (int) $d4;

        d5 = (double) $i0;

        $d6 = d5 * 86400.0;

        d7 = d3 - $d6;

        d8 = d5 - 10957.5;

        d9 = d7 / 86400.0;

        d10 = d8 / 36525.0;

        $d11 = d10 * 8640184.812866;

        $d14 = $d11 + 24110.54841;

        $d12 = d10 * d10;

        $d13 = $d12 * 0.093104;

        $d18 = $d14 + $d13;

        $d15 = d10 * d10;

        $d16 = d10 * $d15;

        $d17 = $d16 * 6.2E-6;

        d38 = $d18 - $d17;

        $d19 = d10 * 5.098097E-6;

        $d22 = $d19 + 86636.55536790872;

        $d20 = d10 * d10;

        $d21 = $d20 * 5.09E-10;

        d23 = $d22 - $d21;

        $d24 = d23 * d9;

        $d25 = d38 + $d24;

        d39 = $d25 + 0.0;

        d40 = d39 % 86400.0;

        $b1 = d40 cmpg 0.0;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label1;

        d40 = d40 + 86400.0;

     label1:
        $d26 = d40 / 86400.0;

        $d34 = $d26 * 360.0;

        $d35 = $d34 * 0.017453292519943295;

        $d27 = staticinvoke <java.lang.Math: double cos(double)>($d35);

        $d28 = staticinvoke <java.lang.Math: double sin(double)>($d35);

        $d30 = $d27 * d0;

        $d29 = $d28 * d1;

        $d36 = $d30 + $d29;

        $d31 = neg $d28;

        $d33 = $d31 * d0;

        $d32 = $d27 * d1;

        $d37 = $d33 + $d32;

        r1[0] = $d36;

        r1[1] = $d37;

        r1[2] = d2;

        return r1;
    }

    public static double[] ECFtoLLA(double, double, double, double, double)
    {
        byte $b0, $b1;
        double[] $r0;
        int $i2, $i3;
        double d0, d1, $d2, d3, d4, $d5, $d6, $d7, $d8, d9, $d10, $d11, $d12, $d13, d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, d25, $d26, $d27, $d28, $d29, d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, d38, $d39, $d40, d41, d42;

        d1 := @parameter0: double;

        d0 := @parameter1: double;

        d14 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        $d2 = staticinvoke <java.lang.Math: double atan2(double,double)>(d0, d1);

        d42 = $d2;

        $d6 = d3 * d3;

        $d5 = d4 * d4;

        $d8 = $d6 - $d5;

        $d7 = d4 * d4;

        d9 = $d8 / $d7;

        $d11 = d1 * d1;

        $d10 = d0 * d0;

        $d12 = $d11 + $d10;

        $d13 = staticinvoke <java.lang.Math: double sqrt(double)>($d12);

        $d16 = d14 * d3;

        $d15 = $d13 * d4;

        $d17 = $d16 / $d15;

        $d18 = staticinvoke <java.lang.Math: double atan(double)>($d17);

        $d19 = staticinvoke <java.lang.Math: double sin(double)>($d18);

        $d20 = staticinvoke <java.lang.Math: double cos(double)>($d18);

        $d21 = d9 * d4;

        $d22 = $d21 * $d19;

        $d23 = $d22 * $d19;

        $d24 = $d23 * $d19;

        d25 = d14 + $d24;

        $d26 = 0.0066943799901413165 * d3;

        $d27 = $d26 * $d20;

        $d28 = $d27 * $d20;

        $d29 = $d28 * $d20;

        d30 = $d13 - $d29;

        $d31 = d25 / d30;

        $d32 = staticinvoke <java.lang.Math: double atan(double)>($d31);

        $d33 = staticinvoke <java.lang.Math: double sin(double)>($d32);

        $d34 = 0.0066943799901413165 * $d33;

        $d35 = $d34 * $d33;

        $d36 = 1.0 - $d35;

        $d37 = staticinvoke <java.lang.Math: double sqrt(double)>($d36);

        d38 = d3 / $d37;

        $d39 = staticinvoke <java.lang.Math: double cos(double)>($d32);

        $d40 = $d13 / $d39;

        d41 = $d40 - d38;

        $b0 = $d2 cmpl 3.141592653589793;

        $i2 = (int) $b0;

        if $i2 <= 0 goto label1;

        d42 = $d2 - 6.283185307179586;

        goto label2;

     label1:
        $b1 = $d2 cmpg -3.141592653589793;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label2;

        d42 = $d2 + 6.283185307179586;

     label2:
        $r0 = newarray (double)[3];

        $r0[0] = $d32;

        $r0[1] = d42;

        $r0[2] = d41;

        return $r0;
    }

    public static void <clinit>()
    {
        <ucar.nc2.dataset.conv.Cosmic1Convention: double DTR> = 0.017453292519943295;

        <ucar.nc2.dataset.conv.Cosmic1Convention: double RTD> = 57.29577951308232;

        return;
    }
}
