public class com.hp.hpl.jena.reasoner.rulesys.builtins.Product extends com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin
{

    public void <init>()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.Product r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.Product;

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin: void <init>()>();

        return;
    }

    public java.lang.String getName()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.Product r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.Product;

        return "product";
    }

    public int getArgLength()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.Product r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.Product;

        return 3;
    }

    public boolean bodyCall(com.hp.hpl.jena.graph.Node[], int, com.hp.hpl.jena.reasoner.rulesys.RuleContext)
    {
        com.hp.hpl.jena.reasoner.rulesys.RuleContext r1;
        long $l1, $l2, $l3;
        com.hp.hpl.jena.graph.Node $r4, $r5, $r10, r11;
        com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment $r2;
        int i0;
        java.lang.Number r8, r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        double $d0, $d1, $d2;
        com.hp.hpl.jena.graph.Node[] r3;
        com.hp.hpl.jena.reasoner.rulesys.builtins.Product r0;
        java.lang.Object $r6, $r7;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.Product;

        r3 := @parameter0: com.hp.hpl.jena.graph.Node[];

        i0 := @parameter1: int;

        r1 := @parameter2: com.hp.hpl.jena.reasoner.rulesys.RuleContext;

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.Product: void checkArgs(int,com.hp.hpl.jena.reasoner.rulesys.RuleContext)>(i0, r1);

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.reasoner.rulesys.RuleContext: com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment getEnv()>();

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.Product: com.hp.hpl.jena.graph.Node getArg(int,com.hp.hpl.jena.graph.Node[],com.hp.hpl.jena.reasoner.rulesys.RuleContext)>(0, r3, r1);

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.Product: com.hp.hpl.jena.graph.Node getArg(int,com.hp.hpl.jena.graph.Node[],com.hp.hpl.jena.reasoner.rulesys.RuleContext)>(1, r3, r1);

        $z0 = virtualinvoke $r4.<com.hp.hpl.jena.graph.Node: boolean isLiteral()>();

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke $r5.<com.hp.hpl.jena.graph.Node: boolean isLiteral()>();

        if $z1 == 0 goto label4;

        $r6 = virtualinvoke $r4.<com.hp.hpl.jena.graph.Node: java.lang.Object getLiteralValue()>();

        $r7 = virtualinvoke $r5.<com.hp.hpl.jena.graph.Node: java.lang.Object getLiteralValue()>();

        $z2 = $r6 instanceof java.lang.Number;

        if $z2 == 0 goto label4;

        $z3 = $r7 instanceof java.lang.Number;

        if $z3 == 0 goto label4;

        r8 = (java.lang.Number) $r6;

        r9 = (java.lang.Number) $r7;

        $z4 = $r6 instanceof java.lang.Float;

        if $z4 != 0 goto label1;

        $z6 = $r6 instanceof java.lang.Double;

        if $z6 != 0 goto label1;

        $z7 = $r7 instanceof java.lang.Float;

        if $z7 != 0 goto label1;

        $z8 = $r7 instanceof java.lang.Double;

        if $z8 == 0 goto label2;

     label1:
        $d0 = virtualinvoke r8.<java.lang.Number: double doubleValue()>();

        $d1 = virtualinvoke r9.<java.lang.Number: double doubleValue()>();

        $d2 = $d0 * $d1;

        r11 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.Util: com.hp.hpl.jena.graph.Node makeDoubleNode(double)>($d2);

        goto label3;

     label2:
        $l1 = virtualinvoke r8.<java.lang.Number: long longValue()>();

        $l2 = virtualinvoke r9.<java.lang.Number: long longValue()>();

        $l3 = $l1 * $l2;

        r11 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.Util: com.hp.hpl.jena.graph.Node makeLongNode(long)>($l3);

     label3:
        $r10 = r3[2];

        $z5 = interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment: boolean bind(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r10, r11);

        return $z5;

     label4:
        return 0;
    }
}
