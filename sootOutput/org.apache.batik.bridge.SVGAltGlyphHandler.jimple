public class org.apache.batik.bridge.SVGAltGlyphHandler extends java.lang.Object implements org.apache.batik.gvt.font.AltGlyphHandler, org.apache.batik.util.SVGConstants
{
    private org.apache.batik.bridge.BridgeContext ctx;
    private org.w3c.dom.Element textElement;

    public void <init>(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element)
    {
        org.apache.batik.bridge.SVGAltGlyphHandler r0;
        org.apache.batik.bridge.BridgeContext r1;
        org.w3c.dom.Element r2;

        r0 := @this: org.apache.batik.bridge.SVGAltGlyphHandler;

        r1 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r2 := @parameter1: org.w3c.dom.Element;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.bridge.SVGAltGlyphHandler: org.apache.batik.bridge.BridgeContext ctx> = r1;

        r0.<org.apache.batik.bridge.SVGAltGlyphHandler: org.w3c.dom.Element textElement> = r2;

        return;
    }

    public org.apache.batik.gvt.font.GVTGlyphVector createGlyphVector(java.awt.font.FontRenderContext, float, java.text.AttributedCharacterIterator)
    {
        org.apache.batik.gvt.font.Glyph[] $r13;
        java.lang.SecurityException $r16;
        java.lang.String $r2, $r3, $r5, $r6;
        boolean $z0, $z1;
        org.apache.batik.bridge.BridgeContext $r8, $r12, $r17;
        org.apache.batik.bridge.Bridge $r9;
        org.apache.batik.gvt.font.SVGGVTGlyphVector $r14;
        org.apache.batik.bridge.SVGAltGlyphHandler r0;
        org.apache.batik.bridge.UserAgent $r18;
        org.w3c.dom.Element $r1, $r4, $r7, $r11;
        java.awt.font.FontRenderContext r15;
        java.text.AttributedCharacterIterator r10;
        float f0;
        org.apache.batik.bridge.SVGAltGlyphElementBridge r19;

        r0 := @this: org.apache.batik.bridge.SVGAltGlyphHandler;

        r15 := @parameter0: java.awt.font.FontRenderContext;

        f0 := @parameter1: float;

        r10 := @parameter2: java.text.AttributedCharacterIterator;

     label1:
        $r2 = "http://www.w3.org/2000/svg";

        $r1 = r0.<org.apache.batik.bridge.SVGAltGlyphHandler: org.w3c.dom.Element textElement>;

        $r3 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r5 = "altGlyph";

        $r4 = r0.<org.apache.batik.bridge.SVGAltGlyphHandler: org.w3c.dom.Element textElement>;

        $r6 = interfaceinvoke $r4.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        $r8 = r0.<org.apache.batik.bridge.SVGAltGlyphHandler: org.apache.batik.bridge.BridgeContext ctx>;

        $r7 = r0.<org.apache.batik.bridge.SVGAltGlyphHandler: org.w3c.dom.Element textElement>;

        $r9 = virtualinvoke $r8.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.Bridge getBridge(org.w3c.dom.Element)>($r7);

        r19 = (org.apache.batik.bridge.SVGAltGlyphElementBridge) $r9;

        $r12 = r0.<org.apache.batik.bridge.SVGAltGlyphHandler: org.apache.batik.bridge.BridgeContext ctx>;

        $r11 = r0.<org.apache.batik.bridge.SVGAltGlyphHandler: org.w3c.dom.Element textElement>;

        $r13 = virtualinvoke r19.<org.apache.batik.bridge.SVGAltGlyphElementBridge: org.apache.batik.gvt.font.Glyph[] createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)>($r12, $r11, f0, r10);

        if $r13 == null goto label2;

        $r14 = new org.apache.batik.gvt.font.SVGGVTGlyphVector;

        specialinvoke $r14.<org.apache.batik.gvt.font.SVGGVTGlyphVector: void <init>(org.apache.batik.gvt.font.GVTFont,org.apache.batik.gvt.font.Glyph[],java.awt.font.FontRenderContext)>(null, $r13, r15);

        return $r14;

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        $r17 = r0.<org.apache.batik.bridge.SVGAltGlyphHandler: org.apache.batik.bridge.BridgeContext ctx>;

        $r18 = virtualinvoke $r17.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        interfaceinvoke $r18.<org.apache.batik.bridge.UserAgent: void displayError(java.lang.Exception)>($r16);

        throw $r16;

     label4:
        return null;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }
}
