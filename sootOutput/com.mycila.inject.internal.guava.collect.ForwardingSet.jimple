public abstract class com.mycila.inject.internal.guava.collect.ForwardingSet extends com.mycila.inject.internal.guava.collect.ForwardingCollection implements java.util.Set
{

    protected void <init>()
    {
        com.mycila.inject.internal.guava.collect.ForwardingSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingSet;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingCollection: void <init>()>();

        return;
    }

    protected abstract java.util.Set delegate();

    public boolean equals(java.lang.Object)
    {
        java.util.Set $r2;
        java.lang.Object r0;
        com.mycila.inject.internal.guava.collect.ForwardingSet r1;
        boolean $z0, $z1;

        r1 := @this: com.mycila.inject.internal.guava.collect.ForwardingSet;

        r0 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $r2 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.ForwardingSet: java.util.Set delegate()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public int hashCode()
    {
        int $i0;
        java.util.Set $r1;
        com.mycila.inject.internal.guava.collect.ForwardingSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingSet;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingSet: java.util.Set delegate()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    protected boolean standardEquals(java.lang.Object)
    {
        java.lang.Object r1;
        com.mycila.inject.internal.guava.collect.ForwardingSet r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingSet;

        r1 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <com.mycila.inject.internal.guava.collect.Sets: boolean equalsImpl(java.util.Set,java.lang.Object)>(r0, r1);

        return $z0;
    }

    protected int standardHashCode()
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.ForwardingSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingSet;

        $i0 = staticinvoke <com.mycila.inject.internal.guava.collect.Sets: int hashCodeImpl(java.util.Set)>(r0);

        return $i0;
    }

    protected volatile java.util.Collection delegate()
    {
        java.util.Set $r1;
        com.mycila.inject.internal.guava.collect.ForwardingSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingSet;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingSet: java.util.Set delegate()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        java.util.Set $r1;
        com.mycila.inject.internal.guava.collect.ForwardingSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingSet;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingSet: java.util.Set delegate()>();

        return $r1;
    }
}
