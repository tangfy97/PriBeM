public class org.springframework.jmx.export.NotificationListenerBean extends org.springframework.jmx.support.NotificationListenerHolder implements org.springframework.beans.factory.InitializingBean
{

    public void <init>()
    {
        org.springframework.jmx.export.NotificationListenerBean r0;

        r0 := @this: org.springframework.jmx.export.NotificationListenerBean;

        specialinvoke r0.<org.springframework.jmx.support.NotificationListenerHolder: void <init>()>();

        return;
    }

    public void <init>(javax.management.NotificationListener)
    {
        javax.management.NotificationListener r1;
        org.springframework.jmx.export.NotificationListenerBean r0;

        r0 := @this: org.springframework.jmx.export.NotificationListenerBean;

        r1 := @parameter0: javax.management.NotificationListener;

        specialinvoke r0.<org.springframework.jmx.support.NotificationListenerHolder: void <init>()>();

        virtualinvoke r0.<org.springframework.jmx.export.NotificationListenerBean: void setNotificationListener(javax.management.NotificationListener)>(r1);

        return;
    }

    public void afterPropertiesSet()
    {
        javax.management.NotificationListener $r1;
        java.lang.IllegalArgumentException $r2;
        org.springframework.jmx.export.NotificationListenerBean r0;

        r0 := @this: org.springframework.jmx.export.NotificationListenerBean;

        $r1 = virtualinvoke r0.<org.springframework.jmx.export.NotificationListenerBean: javax.management.NotificationListener getNotificationListener()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Property \'notificationListener\' is required");

        throw $r2;

     label1:
        return;
    }

    void replaceObjectName(java.lang.Object, java.lang.Object)
    {
        java.util.Set $r1, $r3, $r4, $r6;
        java.lang.Object r2, r5;
        org.springframework.jmx.export.NotificationListenerBean r0;
        boolean $z0;

        r0 := @this: org.springframework.jmx.export.NotificationListenerBean;

        r2 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.Object;

        $r1 = r0.<org.springframework.jmx.export.NotificationListenerBean: java.util.Set mappedObjectNames>;

        if $r1 == null goto label1;

        $r3 = r0.<org.springframework.jmx.export.NotificationListenerBean: java.util.Set mappedObjectNames>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r4 = r0.<org.springframework.jmx.export.NotificationListenerBean: java.util.Set mappedObjectNames>;

        interfaceinvoke $r4.<java.util.Set: boolean remove(java.lang.Object)>(r2);

        $r6 = r0.<org.springframework.jmx.export.NotificationListenerBean: java.util.Set mappedObjectNames>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r5);

     label1:
        return;
    }
}
