public class com.jidesoft.converter.ObjectConverterManager extends java.lang.Object
{
    private static com.jidesoft.utils.CacheMap _cache;
    private static com.jidesoft.converter.ObjectConverter _defaultConverter;
    private static boolean _inited;
    private static boolean _initing;
    private static boolean _autoInit;

    public void <init>()
    {
        com.jidesoft.converter.ObjectConverterManager r0;

        r0 := @this: com.jidesoft.converter.ObjectConverterManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void registerConverter(java.lang.Class, com.jidesoft.converter.ObjectConverter, com.jidesoft.converter.ConverterContext)
    {
        com.jidesoft.utils.CacheMap $r4;
        java.lang.IllegalArgumentException $r2;
        com.jidesoft.converter.ConverterContext r3;
        com.jidesoft.converter.ObjectConverter r1;
        java.lang.Class r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: com.jidesoft.converter.ObjectConverter;

        r3 := @parameter2: com.jidesoft.converter.ConverterContext;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter class cannot be null");

        throw $r2;

     label1:
        if r3 != null goto label2;

        r3 = <com.jidesoft.converter.ConverterContext: com.jidesoft.converter.ConverterContext DEFAULT_CONTEXT>;

     label2:
        $z0 = staticinvoke <com.jidesoft.converter.ObjectConverterManager: boolean isAutoInit()>();

        if $z0 == 0 goto label3;

        $z1 = <com.jidesoft.converter.ObjectConverterManager: boolean _inited>;

        if $z1 != 0 goto label3;

        $z2 = <com.jidesoft.converter.ObjectConverterManager: boolean _initing>;

        if $z2 != 0 goto label3;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void initDefaultConverter()>();

     label3:
        $r4 = <com.jidesoft.converter.ObjectConverterManager: com.jidesoft.utils.CacheMap _cache>;

        virtualinvoke $r4.<com.jidesoft.utils.CacheMap: void register(java.lang.Class,java.lang.Object,java.lang.Object)>(r0, r1, r3);

        return;
    }

    public static void registerConverter(java.lang.Class, com.jidesoft.converter.ObjectConverter)
    {
        java.lang.Class r0;
        com.jidesoft.converter.ConverterContext $r2;
        com.jidesoft.converter.ObjectConverter r1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: com.jidesoft.converter.ObjectConverter;

        $r2 = <com.jidesoft.converter.ConverterContext: com.jidesoft.converter.ConverterContext DEFAULT_CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(r0, r1, $r2);

        return;
    }

    public static void unregisterConverter(java.lang.Class, com.jidesoft.converter.ConverterContext)
    {
        com.jidesoft.utils.CacheMap $r2;
        com.jidesoft.converter.ConverterContext r1;
        java.lang.Class r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: com.jidesoft.converter.ConverterContext;

        if r1 != null goto label1;

        r1 = <com.jidesoft.converter.ConverterContext: com.jidesoft.converter.ConverterContext DEFAULT_CONTEXT>;

     label1:
        $z0 = staticinvoke <com.jidesoft.converter.ObjectConverterManager: boolean isAutoInit()>();

        if $z0 == 0 goto label2;

        $z1 = <com.jidesoft.converter.ObjectConverterManager: boolean _inited>;

        if $z1 != 0 goto label2;

        $z2 = <com.jidesoft.converter.ObjectConverterManager: boolean _initing>;

        if $z2 != 0 goto label2;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void initDefaultConverter()>();

     label2:
        $r2 = <com.jidesoft.converter.ObjectConverterManager: com.jidesoft.utils.CacheMap _cache>;

        virtualinvoke $r2.<com.jidesoft.utils.CacheMap: void unregister(java.lang.Class,java.lang.Object)>(r0, r1);

        return;
    }

    public static void unregisterConverter(java.lang.Class)
    {
        java.lang.Class r0;
        com.jidesoft.converter.ConverterContext $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = <com.jidesoft.converter.ConverterContext: com.jidesoft.converter.ConverterContext DEFAULT_CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void unregisterConverter(java.lang.Class,com.jidesoft.converter.ConverterContext)>(r0, $r1);

        return;
    }

    public static void unregisterAllConverters(java.lang.Class)
    {
        java.lang.Class r0;
        com.jidesoft.utils.CacheMap $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = <com.jidesoft.converter.ObjectConverterManager: com.jidesoft.utils.CacheMap _cache>;

        virtualinvoke $r1.<com.jidesoft.utils.CacheMap: void remove(java.lang.Class)>(r0);

        return;
    }

    public static void unregisterAllConverters()
    {
        com.jidesoft.utils.CacheMap $r0;

        $r0 = <com.jidesoft.converter.ObjectConverterManager: com.jidesoft.utils.CacheMap _cache>;

        virtualinvoke $r0.<com.jidesoft.utils.CacheMap: void clear()>();

        return;
    }

    public static com.jidesoft.converter.ObjectConverter getConverter(java.lang.Class, com.jidesoft.converter.ConverterContext)
    {
        com.jidesoft.utils.CacheMap $r1;
        com.jidesoft.converter.DefaultArrayConverter $r4;
        com.jidesoft.converter.ConverterContext r7;
        com.jidesoft.converter.ObjectConverter $r3, $r6;
        java.lang.Class r0, $r5;
        java.lang.Object $r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.Class;

        r7 := @parameter1: com.jidesoft.converter.ConverterContext;

        $z0 = staticinvoke <com.jidesoft.converter.ObjectConverterManager: boolean isAutoInit()>();

        if $z0 == 0 goto label1;

        $z2 = <com.jidesoft.converter.ObjectConverterManager: boolean _inited>;

        if $z2 != 0 goto label1;

        $z3 = <com.jidesoft.converter.ObjectConverterManager: boolean _initing>;

        if $z3 != 0 goto label1;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void initDefaultConverter()>();

     label1:
        if r7 != null goto label2;

        r7 = <com.jidesoft.converter.ConverterContext: com.jidesoft.converter.ConverterContext DEFAULT_CONTEXT>;

     label2:
        $r1 = <com.jidesoft.converter.ObjectConverterManager: com.jidesoft.utils.CacheMap _cache>;

        $r2 = virtualinvoke $r1.<com.jidesoft.utils.CacheMap: java.lang.Object getRegisteredObject(java.lang.Class,java.lang.Object)>(r0, r7);

        $r6 = (com.jidesoft.converter.ObjectConverter) $r2;

        if $r6 == null goto label3;

        return $r6;

     label3:
        if r0 == null goto label4;

        $z1 = virtualinvoke r0.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label4;

        $r4 = new com.jidesoft.converter.DefaultArrayConverter;

        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>();

        specialinvoke $r4.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", $r5);

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(r0, $r4);

        return $r4;

     label4:
        $r3 = <com.jidesoft.converter.ObjectConverterManager: com.jidesoft.converter.ObjectConverter _defaultConverter>;

        return $r3;
    }

    public static com.jidesoft.converter.ObjectConverter getConverter(java.lang.Class)
    {
        java.lang.Class r0;
        com.jidesoft.converter.ConverterContext $r1;
        com.jidesoft.converter.ObjectConverter $r2;

        r0 := @parameter0: java.lang.Class;

        $r1 = <com.jidesoft.converter.ConverterContext: com.jidesoft.converter.ConverterContext DEFAULT_CONTEXT>;

        $r2 = staticinvoke <com.jidesoft.converter.ObjectConverterManager: com.jidesoft.converter.ObjectConverter getConverter(java.lang.Class,com.jidesoft.converter.ConverterContext)>(r0, $r1);

        return $r2;
    }

    public static java.lang.String toString(java.lang.Object)
    {
        com.jidesoft.converter.ConverterContext $r2;
        java.lang.Object r0;
        java.lang.Class $r1;
        java.lang.String $r3;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = <com.jidesoft.converter.ConverterContext: com.jidesoft.converter.ConverterContext DEFAULT_CONTEXT>;

        $r3 = staticinvoke <com.jidesoft.converter.ObjectConverterManager: java.lang.String toString(java.lang.Object,java.lang.Class,com.jidesoft.converter.ConverterContext)>(r0, $r1, $r2);

        return $r3;

     label1:
        return "";
    }

    public static java.lang.String toString(java.lang.Object, java.lang.Class)
    {
        com.jidesoft.converter.ConverterContext $r2;
        java.lang.Object r0;
        java.lang.Class r1;
        java.lang.String $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Class;

        $r2 = <com.jidesoft.converter.ConverterContext: com.jidesoft.converter.ConverterContext DEFAULT_CONTEXT>;

        $r3 = staticinvoke <com.jidesoft.converter.ObjectConverterManager: java.lang.String toString(java.lang.Object,java.lang.Class,com.jidesoft.converter.ConverterContext)>(r0, r1, $r2);

        return $r3;
    }

    public static java.lang.String toString(java.lang.Object, java.lang.Class, com.jidesoft.converter.ConverterContext)
    {
        com.jidesoft.converter.ConverterContext r1;
        com.jidesoft.converter.ObjectConverter $r2;
        java.lang.Class r0;
        java.lang.Object r3;
        java.lang.String $r4, $r5;
        boolean $z0;

        r3 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Class;

        r1 := @parameter2: com.jidesoft.converter.ConverterContext;

        $r2 = staticinvoke <com.jidesoft.converter.ObjectConverterManager: com.jidesoft.converter.ObjectConverter getConverter(java.lang.Class,com.jidesoft.converter.ConverterContext)>(r0, r1);

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<com.jidesoft.converter.ObjectConverter: boolean supportToString(java.lang.Object,com.jidesoft.converter.ConverterContext)>(r3, r1);

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r2.<com.jidesoft.converter.ObjectConverter: java.lang.String toString(java.lang.Object,com.jidesoft.converter.ConverterContext)>(r3, r1);

        return $r5;

     label1:
        if r3 != null goto label2;

        return "";

     label2:
        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.Object fromString(java.lang.String, java.lang.Class)
    {
        com.jidesoft.converter.ConverterContext $r2;
        java.lang.Class r1;
        java.lang.Object $r3;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        $r2 = <com.jidesoft.converter.ConverterContext: com.jidesoft.converter.ConverterContext DEFAULT_CONTEXT>;

        $r3 = staticinvoke <com.jidesoft.converter.ObjectConverterManager: java.lang.Object fromString(java.lang.String,java.lang.Class,com.jidesoft.converter.ConverterContext)>(r0, r1, $r2);

        return $r3;
    }

    public static java.lang.Object fromString(java.lang.String, java.lang.Class, com.jidesoft.converter.ConverterContext)
    {
        java.lang.Float $r7;
        java.lang.Double $r17;
        long $l0;
        java.lang.Integer $r11;
        short $s2;
        byte $b3;
        java.lang.Long $r9;
        java.lang.Short $r13;
        int $i1;
        java.lang.String r2;
        java.lang.Number $r6, $r8, $r10, $r12, $r14, $r16;
        java.lang.Byte $r15;
        boolean $z0, $z1, $z2, $z3;
        double $d0;
        com.jidesoft.converter.ConverterContext r0;
        com.jidesoft.converter.ObjectConverter $r1;
        float $f0;
        java.lang.Object $r3;
        java.lang.Class $r4, $r5, r18;

        r2 := @parameter0: java.lang.String;

        r18 := @parameter1: java.lang.Class;

        r0 := @parameter2: com.jidesoft.converter.ConverterContext;

        $r1 = staticinvoke <com.jidesoft.converter.ObjectConverterManager: com.jidesoft.converter.ObjectConverter getConverter(java.lang.Class,com.jidesoft.converter.ConverterContext)>(r18, r0);

        if $r1 == null goto label7;

        $z0 = interfaceinvoke $r1.<com.jidesoft.converter.ObjectConverter: boolean supportFromString(java.lang.String,com.jidesoft.converter.ConverterContext)>(r2, r0);

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r1.<com.jidesoft.converter.ObjectConverter: java.lang.Object fromString(java.lang.String,com.jidesoft.converter.ConverterContext)>(r2, r0);

        if $r3 == null goto label6;

        if r18 == null goto label6;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke r18.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z1 != 0 goto label6;

        $z2 = staticinvoke <com.jidesoft.utils.TypeUtils: boolean isNumericType(java.lang.Class)>(r18);

        if $z2 == 0 goto label6;

        $z3 = $r3 instanceof java.lang.Number;

        if $z3 == 0 goto label6;

        $r5 = staticinvoke <com.jidesoft.utils.TypeUtils: java.lang.Class convertPrimitiveToWrapperType(java.lang.Class)>(r18);

        if $r5 != class "Ljava/lang/Double;" goto label1;

        $r16 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r16.<java.lang.Number: double doubleValue()>();

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r17;

     label1:
        if $r5 != class "Ljava/lang/Byte;" goto label2;

        $r14 = (java.lang.Number) $r3;

        $b3 = virtualinvoke $r14.<java.lang.Number: byte byteValue()>();

        $r15 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        return $r15;

     label2:
        if $r5 != class "Ljava/lang/Short;" goto label3;

        $r12 = (java.lang.Number) $r3;

        $s2 = virtualinvoke $r12.<java.lang.Number: short shortValue()>();

        $r13 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        return $r13;

     label3:
        if $r5 != class "Ljava/lang/Integer;" goto label4;

        $r10 = (java.lang.Number) $r3;

        $i1 = virtualinvoke $r10.<java.lang.Number: int intValue()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r11;

     label4:
        if $r5 != class "Ljava/lang/Long;" goto label5;

        $r8 = (java.lang.Number) $r3;

        $l0 = virtualinvoke $r8.<java.lang.Number: long longValue()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r9;

     label5:
        if $r5 != class "Ljava/lang/Float;" goto label6;

        $r6 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;

     label6:
        return $r3;

     label7:
        return null;
    }

    public static boolean isAutoInit()
    {
        boolean $z0;

        $z0 = <com.jidesoft.converter.ObjectConverterManager: boolean _autoInit>;

        return $z0;
    }

    public static void setAutoInit(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.jidesoft.converter.ObjectConverterManager: boolean _autoInit> = z0;

        return;
    }

    public static void addRegistrationListener(com.jidesoft.utils.RegistrationListener)
    {
        com.jidesoft.utils.CacheMap $r1;
        com.jidesoft.utils.RegistrationListener r0;

        r0 := @parameter0: com.jidesoft.utils.RegistrationListener;

        $r1 = <com.jidesoft.converter.ObjectConverterManager: com.jidesoft.utils.CacheMap _cache>;

        virtualinvoke $r1.<com.jidesoft.utils.CacheMap: void addRegistrationListener(com.jidesoft.utils.RegistrationListener)>(r0);

        return;
    }

    public static void removeRegistrationListener(com.jidesoft.utils.RegistrationListener)
    {
        com.jidesoft.utils.CacheMap $r1;
        com.jidesoft.utils.RegistrationListener r0;

        r0 := @parameter0: com.jidesoft.utils.RegistrationListener;

        $r1 = <com.jidesoft.converter.ObjectConverterManager: com.jidesoft.utils.CacheMap _cache>;

        virtualinvoke $r1.<com.jidesoft.utils.CacheMap: void removeRegistrationListener(com.jidesoft.utils.RegistrationListener)>(r0);

        return;
    }

    public static com.jidesoft.utils.RegistrationListener[] getRegistrationListeners()
    {
        com.jidesoft.utils.CacheMap $r0;
        com.jidesoft.utils.RegistrationListener[] $r1;

        $r0 = <com.jidesoft.converter.ObjectConverterManager: com.jidesoft.utils.CacheMap _cache>;

        $r1 = virtualinvoke $r0.<com.jidesoft.utils.CacheMap: com.jidesoft.utils.RegistrationListener[] getRegistrationListeners()>();

        return $r1;
    }

    public static com.jidesoft.converter.ConverterContext[] getConverterContexts(java.lang.Class)
    {
        java.lang.Object[] $r3;
        com.jidesoft.utils.CacheMap $r2;
        java.lang.Class r0;
        com.jidesoft.converter.ConverterContext[] $r1, $r4;

        r0 := @parameter0: java.lang.Class;

        $r2 = <com.jidesoft.converter.ObjectConverterManager: com.jidesoft.utils.CacheMap _cache>;

        $r1 = newarray (com.jidesoft.converter.ConverterContext)[0];

        $r3 = virtualinvoke $r2.<com.jidesoft.utils.CacheMap: java.lang.Object[] getKeys(java.lang.Class,java.lang.Object[])>(r0, $r1);

        $r4 = (com.jidesoft.converter.ConverterContext[]) $r3;

        return $r4;
    }

    public static void initDefaultConverter()
    {
        com.jidesoft.converter.PercentConverter $r60;
        com.jidesoft.converter.MultilineStringConverter $r51;
        com.jidesoft.converter.NaturalNumberConverter $r7;
        com.jidesoft.converter.IntegerConverter $r5;
        com.jidesoft.converter.InsetsConverter $r23;
        com.jidesoft.converter.ByteConverter $r19;
        java.lang.Throwable $r99;
        com.jidesoft.converter.DefaultArrayConverter $r75, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r90, $r92, $r94, $r96;
        com.jidesoft.converter.CalendarConverter $r33;
        com.jidesoft.converter.ShortConverter $r17;
        com.jidesoft.converter.DefaultObjectConverter $r0;
        com.jidesoft.converter.ConverterContext $r2, $r4, $r8, $r9, $r29, $r31, $r32, $r34, $r35, $r37, $r40, $r42, $r44, $r47, $r49, $r52, $r54, $r55, $r57, $r58, $r61, $r62, $r64, $r65, $r68, $r69, $r72, $r73;
        com.jidesoft.converter.BooleanConverter $r25;
        com.jidesoft.converter.YearNameConverter $r71;
        com.jidesoft.converter.LongConverter $r11;
        com.jidesoft.converter.QuarterNameConverter $r46;
        com.jidesoft.converter.BigDecimalConverter $r98;
        boolean $z0;
        com.jidesoft.converter.FontConverter $r50;
        com.jidesoft.converter.MonthNameConverter $r67;
        com.jidesoft.converter.RgbColorConverter $r38, $r41;
        com.jidesoft.converter.DateConverter $r30;
        com.jidesoft.converter.StringArrayConverter $r45;
        com.jidesoft.converter.PasswordConverter $r1;
        com.jidesoft.converter.DimensionConverter $r24;
        com.jidesoft.converter.DoubleConverter $r3, $r13;
        com.jidesoft.converter.FontNameConverter $r28;
        com.jidesoft.converter.CurrencyConverter $r53;
        com.jidesoft.converter.FloatConverter $r15;
        com.jidesoft.converter.RectangleConverter $r21;
        com.jidesoft.converter.PointConverter $r22;
        com.jidesoft.converter.HexColorConverter $r39, $r43;
        com.jidesoft.converter.MonthConverter $r36;
        com.jidesoft.converter.FileConverter $r27;
        java.lang.Class $r6, $r10, $r12, $r14, $r16, $r18, $r20, $r26, $r48, $r56, $r59, $r63, $r66, $r70, $r74, $r76, $r89, $r91, $r93, $r95, $r97;

        $z0 = <com.jidesoft.converter.ObjectConverterManager: boolean _inited>;

        if $z0 == 0 goto label1;

        return;

     label1:
        <com.jidesoft.converter.ObjectConverterManager: boolean _initing> = 1;

     label2:
        $r0 = new com.jidesoft.converter.DefaultObjectConverter;

        specialinvoke $r0.<com.jidesoft.converter.DefaultObjectConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/lang/String;", $r0);

        $r1 = new com.jidesoft.converter.PasswordConverter;

        specialinvoke $r1.<com.jidesoft.converter.PasswordConverter: void <init>()>();

        $r2 = <com.jidesoft.converter.PasswordConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "[C", $r1, $r2);

        $r3 = new com.jidesoft.converter.DoubleConverter;

        specialinvoke $r3.<com.jidesoft.converter.DoubleConverter: void <init>()>();

        virtualinvoke $r3.<com.jidesoft.converter.DoubleConverter: void setFractionDigits(int,int)>(2, 2);

        $r4 = <com.jidesoft.converter.NumberConverter: com.jidesoft.converter.ConverterContext CONTEXT_FRACTION_NUMBER>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/lang/Number;", $r3, $r4);

        $r5 = new com.jidesoft.converter.IntegerConverter;

        specialinvoke $r5.<com.jidesoft.converter.IntegerConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/lang/Integer;", $r5);

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>($r6, $r5);

        $r7 = new com.jidesoft.converter.NaturalNumberConverter;

        specialinvoke $r7.<com.jidesoft.converter.NaturalNumberConverter: void <init>()>();

        $r8 = <com.jidesoft.converter.NaturalNumberConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/lang/Integer;", $r7, $r8);

        $r10 = <java.lang.Integer: java.lang.Class TYPE>;

        $r9 = <com.jidesoft.converter.NaturalNumberConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>($r10, $r7, $r9);

        $r11 = new com.jidesoft.converter.LongConverter;

        specialinvoke $r11.<com.jidesoft.converter.LongConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/lang/Long;", $r11);

        $r12 = <java.lang.Long: java.lang.Class TYPE>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>($r12, $r11);

        $r13 = new com.jidesoft.converter.DoubleConverter;

        specialinvoke $r13.<com.jidesoft.converter.DoubleConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/lang/Double;", $r13);

        $r14 = <java.lang.Double: java.lang.Class TYPE>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>($r14, $r13);

        $r15 = new com.jidesoft.converter.FloatConverter;

        specialinvoke $r15.<com.jidesoft.converter.FloatConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/lang/Float;", $r15);

        $r16 = <java.lang.Float: java.lang.Class TYPE>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>($r16, $r15);

        $r17 = new com.jidesoft.converter.ShortConverter;

        specialinvoke $r17.<com.jidesoft.converter.ShortConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/lang/Short;", $r17);

        $r18 = <java.lang.Short: java.lang.Class TYPE>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>($r18, $r17);

        $r19 = new com.jidesoft.converter.ByteConverter;

        specialinvoke $r19.<com.jidesoft.converter.ByteConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/lang/Byte;", $r19);

        $r20 = <java.lang.Byte: java.lang.Class TYPE>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>($r20, $r19);

        $r21 = new com.jidesoft.converter.RectangleConverter;

        specialinvoke $r21.<com.jidesoft.converter.RectangleConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/awt/Rectangle;", $r21);

        $r22 = new com.jidesoft.converter.PointConverter;

        specialinvoke $r22.<com.jidesoft.converter.PointConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/awt/Point;", $r22);

        $r23 = new com.jidesoft.converter.InsetsConverter;

        specialinvoke $r23.<com.jidesoft.converter.InsetsConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/awt/Insets;", $r23);

        $r24 = new com.jidesoft.converter.DimensionConverter;

        specialinvoke $r24.<com.jidesoft.converter.DimensionConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/awt/Dimension;", $r24);

        $r25 = new com.jidesoft.converter.BooleanConverter;

        specialinvoke $r25.<com.jidesoft.converter.BooleanConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/lang/Boolean;", $r25);

        $r26 = <java.lang.Boolean: java.lang.Class TYPE>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>($r26, $r25);

        $r27 = new com.jidesoft.converter.FileConverter;

        specialinvoke $r27.<com.jidesoft.converter.FileConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/io/File;", $r27);

        $r28 = new com.jidesoft.converter.FontNameConverter;

        specialinvoke $r28.<com.jidesoft.converter.FontNameConverter: void <init>()>();

        $r29 = <com.jidesoft.converter.FontNameConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/lang/String;", $r28, $r29);

        $r30 = new com.jidesoft.converter.DateConverter;

        specialinvoke $r30.<com.jidesoft.converter.DateConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/util/Date;", $r30);

        $r31 = <com.jidesoft.converter.DateConverter: com.jidesoft.converter.ConverterContext DATETIME_CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/util/Date;", $r30, $r31);

        $r32 = <com.jidesoft.converter.DateConverter: com.jidesoft.converter.ConverterContext TIME_CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/util/Date;", $r30, $r32);

        $r33 = new com.jidesoft.converter.CalendarConverter;

        specialinvoke $r33.<com.jidesoft.converter.CalendarConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/util/Calendar;", $r33);

        $r34 = <com.jidesoft.converter.DateConverter: com.jidesoft.converter.ConverterContext DATETIME_CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/util/Calendar;", $r33, $r34);

        $r35 = <com.jidesoft.converter.DateConverter: com.jidesoft.converter.ConverterContext TIME_CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/util/Calendar;", $r33, $r35);

        $r36 = new com.jidesoft.converter.MonthConverter;

        specialinvoke $r36.<com.jidesoft.converter.MonthConverter: void <init>()>();

        $r37 = <com.jidesoft.converter.MonthConverter: com.jidesoft.converter.ConverterContext CONTEXT_MONTH>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/util/Calendar;", $r36, $r37);

        $r38 = new com.jidesoft.converter.RgbColorConverter;

        specialinvoke $r38.<com.jidesoft.converter.RgbColorConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/awt/Color;", $r38);

        $r39 = new com.jidesoft.converter.HexColorConverter;

        specialinvoke $r39.<com.jidesoft.converter.HexColorConverter: void <init>()>();

        $r40 = <com.jidesoft.converter.ColorConverter: com.jidesoft.converter.ConverterContext CONTEXT_HEX>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/awt/Color;", $r39, $r40);

        $r41 = new com.jidesoft.converter.RgbColorConverter;

        specialinvoke $r41.<com.jidesoft.converter.RgbColorConverter: void <init>(boolean)>(1);

        $r42 = <com.jidesoft.converter.ColorConverter: com.jidesoft.converter.ConverterContext CONTEXT_RGBA>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/awt/Color;", $r41, $r42);

        $r43 = new com.jidesoft.converter.HexColorConverter;

        specialinvoke $r43.<com.jidesoft.converter.HexColorConverter: void <init>(boolean)>(1);

        $r44 = <com.jidesoft.converter.ColorConverter: com.jidesoft.converter.ConverterContext CONTEXT_HEX_WITH_ALPHA>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/awt/Color;", $r43, $r44);

        $r45 = new com.jidesoft.converter.StringArrayConverter;

        specialinvoke $r45.<com.jidesoft.converter.StringArrayConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[Ljava/lang/String;", $r45);

        $r46 = new com.jidesoft.converter.QuarterNameConverter;

        specialinvoke $r46.<com.jidesoft.converter.QuarterNameConverter: void <init>()>();

        $r48 = <java.lang.Integer: java.lang.Class TYPE>;

        $r47 = <com.jidesoft.converter.QuarterNameConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>($r48, $r46, $r47);

        $r49 = <com.jidesoft.converter.QuarterNameConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/lang/Integer;", $r46, $r49);

        $r50 = new com.jidesoft.converter.FontConverter;

        specialinvoke $r50.<com.jidesoft.converter.FontConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/awt/Font;", $r50);

        $r51 = new com.jidesoft.converter.MultilineStringConverter;

        specialinvoke $r51.<com.jidesoft.converter.MultilineStringConverter: void <init>()>();

        $r52 = <com.jidesoft.converter.MultilineStringConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/lang/String;", $r51, $r52);

        $r53 = new com.jidesoft.converter.CurrencyConverter;

        specialinvoke $r53.<com.jidesoft.converter.CurrencyConverter: void <init>()>();

        $r54 = <com.jidesoft.converter.CurrencyConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/lang/Float;", $r53, $r54);

        $r56 = <java.lang.Float: java.lang.Class TYPE>;

        $r55 = <com.jidesoft.converter.CurrencyConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>($r56, $r53, $r55);

        $r57 = <com.jidesoft.converter.CurrencyConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/lang/Double;", $r53, $r57);

        $r59 = <java.lang.Double: java.lang.Class TYPE>;

        $r58 = <com.jidesoft.converter.CurrencyConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>($r59, $r53, $r58);

        $r60 = new com.jidesoft.converter.PercentConverter;

        specialinvoke $r60.<com.jidesoft.converter.PercentConverter: void <init>()>();

        $r61 = <com.jidesoft.converter.PercentConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/lang/Float;", $r60, $r61);

        $r63 = <java.lang.Float: java.lang.Class TYPE>;

        $r62 = <com.jidesoft.converter.PercentConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>($r63, $r60, $r62);

        $r64 = <com.jidesoft.converter.PercentConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/lang/Double;", $r60, $r64);

        $r66 = <java.lang.Double: java.lang.Class TYPE>;

        $r65 = <com.jidesoft.converter.PercentConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>($r66, $r60, $r65);

        $r67 = new com.jidesoft.converter.MonthNameConverter;

        specialinvoke $r67.<com.jidesoft.converter.MonthNameConverter: void <init>()>();

        $r68 = <com.jidesoft.converter.MonthNameConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/lang/Integer;", $r67, $r68);

        $r70 = <java.lang.Integer: java.lang.Class TYPE>;

        $r69 = <com.jidesoft.converter.MonthNameConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>($r70, $r67, $r69);

        $r71 = new com.jidesoft.converter.YearNameConverter;

        specialinvoke $r71.<com.jidesoft.converter.YearNameConverter: void <init>()>();

        $r72 = <com.jidesoft.converter.YearNameConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>(class "Ljava/lang/Integer;", $r71, $r72);

        $r74 = <java.lang.Integer: java.lang.Class TYPE>;

        $r73 = <com.jidesoft.converter.YearNameConverter: com.jidesoft.converter.ConverterContext CONTEXT>;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter,com.jidesoft.converter.ConverterContext)>($r74, $r71, $r73);

        $r75 = new com.jidesoft.converter.DefaultArrayConverter;

        $r76 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r75.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", $r76);

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[I", $r75);

        $r77 = new com.jidesoft.converter.DefaultArrayConverter;

        specialinvoke $r77.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", class "Ljava/lang/Object;");

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[Ljava/lang/Object;", $r77);

        $r78 = new com.jidesoft.converter.DefaultArrayConverter;

        specialinvoke $r78.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", class "Ljava/lang/Enum;");

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[Ljava/lang/Enum;", $r78);

        $r79 = new com.jidesoft.converter.DefaultArrayConverter;

        specialinvoke $r79.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", class "Ljava/lang/String;");

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[Ljava/lang/String;", $r79);

        $r80 = new com.jidesoft.converter.DefaultArrayConverter;

        specialinvoke $r80.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", class "Ljava/util/Date;");

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[Ljava/util/Date;", $r80);

        $r81 = new com.jidesoft.converter.DefaultArrayConverter;

        specialinvoke $r81.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", class "Ljava/util/Calendar;");

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[Ljava/util/Calendar;", $r81);

        $r82 = new com.jidesoft.converter.DefaultArrayConverter;

        specialinvoke $r82.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", class "Ljava/lang/Number;");

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[Ljava/lang/Number;", $r82);

        $r83 = new com.jidesoft.converter.DefaultArrayConverter;

        specialinvoke $r83.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", class "Ljava/lang/Integer;");

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[Ljava/lang/Integer;", $r83);

        $r84 = new com.jidesoft.converter.DefaultArrayConverter;

        specialinvoke $r84.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", class "Ljava/lang/Float;");

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[Ljava/lang/Float;", $r84);

        $r85 = new com.jidesoft.converter.DefaultArrayConverter;

        specialinvoke $r85.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", class "Ljava/lang/Double;");

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[Ljava/lang/Double;", $r85);

        $r86 = new com.jidesoft.converter.DefaultArrayConverter;

        specialinvoke $r86.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", class "Ljava/lang/Long;");

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[Ljava/lang/Long;", $r86);

        $r87 = new com.jidesoft.converter.DefaultArrayConverter;

        specialinvoke $r87.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", class "Ljava/lang/Short;");

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[Ljava/lang/Short;", $r87);

        $r88 = new com.jidesoft.converter.DefaultArrayConverter;

        $r89 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r88.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", $r89);

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[I", $r88);

        $r90 = new com.jidesoft.converter.DefaultArrayConverter;

        $r91 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r90.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", $r91);

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[F", $r90);

        $r92 = new com.jidesoft.converter.DefaultArrayConverter;

        $r93 = <java.lang.Double: java.lang.Class TYPE>;

        specialinvoke $r92.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", $r93);

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[D", $r92);

        $r94 = new com.jidesoft.converter.DefaultArrayConverter;

        $r95 = <java.lang.Long: java.lang.Class TYPE>;

        specialinvoke $r94.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", $r95);

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[J", $r94);

        $r96 = new com.jidesoft.converter.DefaultArrayConverter;

        $r97 = <java.lang.Short: java.lang.Class TYPE>;

        specialinvoke $r96.<com.jidesoft.converter.DefaultArrayConverter: void <init>(java.lang.String,java.lang.Class)>("; ", $r97);

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "[S", $r96);

        $r98 = new com.jidesoft.converter.BigDecimalConverter;

        specialinvoke $r98.<com.jidesoft.converter.BigDecimalConverter: void <init>()>();

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void registerConverter(java.lang.Class,com.jidesoft.converter.ObjectConverter)>(class "Ljava/math/BigDecimal;", $r98);

     label3:
        <com.jidesoft.converter.ObjectConverterManager: boolean _initing> = 0;

        <com.jidesoft.converter.ObjectConverterManager: boolean _inited> = 1;

        goto label6;

     label4:
        $r99 := @caughtexception;

     label5:
        <com.jidesoft.converter.ObjectConverterManager: boolean _initing> = 0;

        <com.jidesoft.converter.ObjectConverterManager: boolean _inited> = 1;

        throw $r99;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void resetInit()
    {
        <com.jidesoft.converter.ObjectConverterManager: boolean _inited> = 0;

        return;
    }

    public static void clear()
    {
        com.jidesoft.utils.CacheMap $r0;

        staticinvoke <com.jidesoft.converter.ObjectConverterManager: void resetInit()>();

        $r0 = <com.jidesoft.converter.ObjectConverterManager: com.jidesoft.utils.CacheMap _cache>;

        virtualinvoke $r0.<com.jidesoft.utils.CacheMap: void clear()>();

        return;
    }

    static void <clinit>()
    {
        com.jidesoft.utils.CacheMap $r0;
        com.jidesoft.converter.ConverterContext $r1;
        com.jidesoft.converter.DefaultObjectConverter $r2;

        $r0 = new com.jidesoft.utils.CacheMap;

        $r1 = <com.jidesoft.converter.ConverterContext: com.jidesoft.converter.ConverterContext DEFAULT_CONTEXT>;

        specialinvoke $r0.<com.jidesoft.utils.CacheMap: void <init>(java.lang.Object)>($r1);

        <com.jidesoft.converter.ObjectConverterManager: com.jidesoft.utils.CacheMap _cache> = $r0;

        $r2 = new com.jidesoft.converter.DefaultObjectConverter;

        specialinvoke $r2.<com.jidesoft.converter.DefaultObjectConverter: void <init>()>();

        <com.jidesoft.converter.ObjectConverterManager: com.jidesoft.converter.ObjectConverter _defaultConverter> = $r2;

        <com.jidesoft.converter.ObjectConverterManager: boolean _inited> = 0;

        <com.jidesoft.converter.ObjectConverterManager: boolean _initing> = 0;

        <com.jidesoft.converter.ObjectConverterManager: boolean _autoInit> = 1;

        return;
    }
}
