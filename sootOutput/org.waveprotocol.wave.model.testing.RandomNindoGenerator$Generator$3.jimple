class org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$3 extends java.lang.Object implements org.waveprotocol.wave.model.testing.RandomNindoGenerator$Mapper
{
    final org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0;

    void <init>(org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator)
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator r1;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$3 r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$3;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator;

        r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$3: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomizerMutationComponent map(org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomMutationComponentGenerator)
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator $r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters $r3;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomMutationComponentGenerator r0;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomizerMutationComponent $r4;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$3 r1;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$3;

        r0 := @parameter0: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomMutationComponentGenerator;

        $r2 = r1.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$3: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0>;

        $r3 = $r2.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters p>;

        $z0 = virtualinvoke $r3.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: boolean getValidity()>();

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomMutationComponentGenerator: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomizerMutationComponent generate(boolean)>($z0);

        return $r4;
    }

    public volatile java.lang.Object map(java.lang.Object)
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomMutationComponentGenerator $r2;
        java.lang.Object r1;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomizerMutationComponent $r3;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$3 r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomMutationComponentGenerator) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$3: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomizerMutationComponent map(org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomMutationComponentGenerator)>($r2);

        return $r3;
    }
}
