public class org.codehaus.groovy.runtime.ReflectionMethodInvoker extends java.lang.Object
{

    public void <init>()
    {
        org.codehaus.groovy.runtime.ReflectionMethodInvoker r0;

        r0 := @this: org.codehaus.groovy.runtime.ReflectionMethodInvoker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object invoke(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        java.lang.Throwable $r8;
        java.lang.Object[] r0;
        java.lang.Class[] r10;
        int $i0, $i1, i2;
        java.lang.Object r1, $r5, $r6, $r9;
        java.lang.Class $r2, $r7;
        java.lang.String r3;
        java.lang.reflect.Method $r4;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.Object[];

     label1:
        $i0 = lengthof r0;

        r10 = newarray (java.lang.Class)[$i0];

        i2 = 0;

     label2:
        $i1 = lengthof r10;

        if i2 >= $i1 goto label3;

        $r6 = r0[i2];

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        r10[i2] = $r7;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r3, r10);

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, r0);

     label4:
        return $r5;

     label5:
        $r8 := @caughtexception;

        $r9 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r1, r3, r0);

        return $r9;

        catch java.lang.Throwable from label1 to label4 with label5;
    }
}
