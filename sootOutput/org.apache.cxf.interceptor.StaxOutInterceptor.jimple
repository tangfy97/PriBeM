public class org.apache.cxf.interceptor.StaxOutInterceptor extends org.apache.cxf.phase.AbstractPhaseInterceptor
{
    public static final java.lang.String OUTPUT_STREAM_HOLDER;
    public static final java.lang.String WRITER_HOLDER;
    public static final java.lang.String FORCE_START_DOCUMENT;
    public static final org.apache.cxf.interceptor.StaxOutEndingInterceptor ENDING;
    private static final java.util.ResourceBundle BUNDLE;
    private static java.util.Map factories;

    public void <init>()
    {
        java.lang.Class $r1;
        java.lang.String $r2;
        org.apache.cxf.interceptor.StaxOutInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.StaxOutInterceptor;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>("pre-stream");

        $r1 = class "Lorg/apache/cxf/interceptor/AttachmentOutInterceptor;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.cxf.interceptor.StaxOutInterceptor: void addAfter(java.lang.String)>($r2);

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message)
    {
        java.lang.Throwable $r18;
        java.lang.Object[] $r16;
        org.apache.cxf.interceptor.InterceptorChain $r6;
        org.apache.cxf.common.i18n.Message $r15;
        org.apache.cxf.interceptor.StaxOutEndingInterceptor $r7;
        org.apache.cxf.interceptor.Fault $r14;
        java.util.ResourceBundle $r17;
        javax.xml.stream.XMLStreamException $r13;
        javax.xml.stream.XMLStreamWriter r20, r22;
        java.lang.String $r4, $r8, $r9;
        boolean $z0;
        java.io.OutputStream $r10, $r11, r19;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.interceptor.StaxOutInterceptor r3;
        javax.xml.stream.XMLOutputFactory $r5;
        java.io.Writer r21;
        java.lang.Object $r1, $r2, $r12;

        r3 := @this: org.apache.cxf.interceptor.StaxOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/OutputStream;");

        r19 = (java.io.OutputStream) $r1;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamWriter;");

        r20 = (javax.xml.stream.XMLStreamWriter) $r2;

        r21 = null;

        if r19 != null goto label01;

        $r12 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/Writer;");

        r21 = (java.io.Writer) $r12;

     label01:
        if r19 != null goto label02;

        if r21 == null goto label03;

     label02:
        if r20 == null goto label04;

     label03:
        return;

     label04:
        $r4 = specialinvoke r3.<org.apache.cxf.interceptor.StaxOutInterceptor: java.lang.String getEncoding(org.apache.cxf.message.Message)>(r0);

     label05:
        $r5 = staticinvoke <org.apache.cxf.interceptor.StaxOutInterceptor: javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)>(r0);

        if $r5 != null goto label07;

        if r21 != null goto label06;

        $r11 = specialinvoke r3.<org.apache.cxf.interceptor.StaxOutInterceptor: java.io.OutputStream setupOutputStream(org.apache.cxf.message.Message,java.io.OutputStream)>(r0, r19);

        r19 = $r11;

        r22 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)>($r11, $r4);

        goto label14;

     label06:
        r22 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)>(r21);

        goto label14;

     label07:
        entermonitor $r5;

     label08:
        if r21 != null goto label09;

        $r10 = specialinvoke r3.<org.apache.cxf.interceptor.StaxOutInterceptor: java.io.OutputStream setupOutputStream(org.apache.cxf.message.Message,java.io.OutputStream)>(r0, r19);

        r19 = $r10;

        r22 = virtualinvoke $r5.<javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)>($r10, $r4);

        goto label10;

     label09:
        r22 = virtualinvoke $r5.<javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)>(r21);

     label10:
        exitmonitor $r5;

     label11:
        goto label14;

     label12:
        $r18 := @caughtexception;

        exitmonitor $r5;

     label13:
        throw $r18;

     label14:
        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean getContextualBoolean(org.apache.cxf.message.Message,java.lang.String,boolean)>(r0, "org.apache.cxf.stax.force-start-document", 0);

        if $z0 == 0 goto label15;

        interfaceinvoke r22.<javax.xml.stream.XMLStreamWriter: void writeStartDocument(java.lang.String,java.lang.String)>($r4, "1.0");

        interfaceinvoke r0.<org.apache.cxf.message.Message: void removeContent(java.lang.Class)>(class "Ljava/io/OutputStream;");

        $r8 = <org.apache.cxf.interceptor.StaxOutInterceptor: java.lang.String OUTPUT_STREAM_HOLDER>;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r19);

        interfaceinvoke r0.<org.apache.cxf.message.Message: void removeContent(java.lang.Class)>(class "Ljava/io/Writer;");

        $r9 = <org.apache.cxf.interceptor.StaxOutInterceptor: java.lang.String WRITER_HOLDER>;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r21);

     label15:
        goto label17;

     label16:
        $r13 := @caughtexception;

        $r14 = new org.apache.cxf.interceptor.Fault;

        $r15 = new org.apache.cxf.common.i18n.Message;

        $r17 = <org.apache.cxf.interceptor.StaxOutInterceptor: java.util.ResourceBundle BUNDLE>;

        $r16 = newarray (java.lang.Object)[0];

        specialinvoke $r15.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("STREAM_CREATE_EXC", $r17, $r16);

        specialinvoke $r14.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message,java.lang.Throwable)>($r15, $r13);

        throw $r14;

     label17:
        interfaceinvoke r0.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljavax/xml/stream/XMLStreamWriter;", r22);

        $r6 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        $r7 = <org.apache.cxf.interceptor.StaxOutInterceptor: org.apache.cxf.interceptor.StaxOutEndingInterceptor ENDING>;

        interfaceinvoke $r6.<org.apache.cxf.interceptor.InterceptorChain: void add(org.apache.cxf.interceptor.Interceptor)>($r7);

        return;

        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch javax.xml.stream.XMLStreamException from label05 to label15 with label16;
    }

    private java.io.OutputStream setupOutputStream(org.apache.cxf.message.Message, java.io.OutputStream)
    {
        java.io.OutputStream r4;
        org.apache.cxf.message.Message r3;
        org.apache.cxf.interceptor.StaxOutInterceptor$1 $r1;
        org.apache.cxf.interceptor.StaxOutInterceptor r2;
        org.apache.cxf.io.AbstractWrappedOutputStream $r0;
        boolean $z0;

        r2 := @this: org.apache.cxf.interceptor.StaxOutInterceptor;

        r3 := @parameter0: org.apache.cxf.message.Message;

        r4 := @parameter1: java.io.OutputStream;

        $z0 = r4 instanceof org.apache.cxf.io.AbstractWrappedOutputStream;

        if $z0 != 0 goto label1;

        $r1 = new org.apache.cxf.interceptor.StaxOutInterceptor$1;

        specialinvoke $r1.<org.apache.cxf.interceptor.StaxOutInterceptor$1: void <init>(org.apache.cxf.interceptor.StaxOutInterceptor,java.io.OutputStream)>(r2, r4);

        r4 = $r1;

     label1:
        $r0 = (org.apache.cxf.io.AbstractWrappedOutputStream) r4;

        virtualinvoke $r0.<org.apache.cxf.io.AbstractWrappedOutputStream: void allowFlush(boolean)>(0);

        return r4;
    }

    public void handleFault(org.apache.cxf.message.Message)
    {
        java.io.OutputStream r4;
        org.apache.cxf.message.Message r1;
        org.apache.cxf.interceptor.StaxOutInterceptor r0;
        java.io.Writer $r7;
        java.lang.Object $r3, $r6;
        java.lang.String $r2, $r5;

        r0 := @this: org.apache.cxf.interceptor.StaxOutInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void handleFault(org.apache.cxf.message.Message)>(r1);

        $r2 = <org.apache.cxf.interceptor.StaxOutInterceptor: java.lang.String OUTPUT_STREAM_HOLDER>;

        $r3 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (java.io.OutputStream) $r3;

        if r4 == null goto label1;

        interfaceinvoke r1.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/io/OutputStream;", r4);

     label1:
        $r5 = <org.apache.cxf.interceptor.StaxOutInterceptor: java.lang.String WRITER_HOLDER>;

        $r6 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (java.io.Writer) $r6;

        if $r7 == null goto label2;

        interfaceinvoke r1.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/io/Writer;", $r7);

     label2:
        return;
    }

    private java.lang.String getEncoding(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0, $r5, $r6;
        org.apache.cxf.interceptor.StaxOutInterceptor r10;
        org.apache.cxf.message.Exchange $r1;
        java.lang.Object $r3, $r8;
        java.lang.String $r2, $r4, $r7, $r9, r11;

        r10 := @this: org.apache.cxf.interceptor.StaxOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = <org.apache.cxf.message.Message: java.lang.String ENCODING>;

        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r2);

        r11 = (java.lang.String) $r3;

        if r11 != null goto label1;

        $r5 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        if $r5 == null goto label1;

        $r6 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r7 = <org.apache.cxf.message.Message: java.lang.String ENCODING>;

        $r8 = interfaceinvoke $r6.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r7);

        r11 = (java.lang.String) $r8;

        $r9 = <org.apache.cxf.message.Message: java.lang.String ENCODING>;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r11);

     label1:
        if r11 != null goto label2;

        r11 = "UTF-8";

        $r4 = <org.apache.cxf.message.Message: java.lang.String ENCODING>;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, "UTF-8");

     label2:
        return r11;
    }

    public static javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        java.lang.Object[] $r10;
        org.apache.cxf.common.i18n.Message $r9;
        org.apache.cxf.interceptor.Fault $r8, $r21, $r23, $r25;
        java.util.ResourceBundle $r11;
        java.util.Map $r4, $r15;
        java.lang.InstantiationException $r22;
        java.lang.Boolean $r6, $r7, $r17, $r18;
        java.lang.String $r2, $r12;
        boolean $z0, $z1, $z2;
        java.lang.IllegalAccessException $r20;
        org.apache.cxf.message.Message r0;
        javax.xml.stream.XMLOutputFactory $r14, $r16, $r19, r26;
        java.lang.Class $r1, r27;
        java.lang.Object $r3, $r5, $r13;
        java.lang.ClassNotFoundException $r24;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = class "Ljavax/xml/stream/XMLOutputFactory;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>($r2);

        $z0 = $r3 instanceof javax.xml.stream.XMLOutputFactory;

        if $z0 == 0 goto label01;

        $r17 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("disable.outputstream.optimization", $r17);

        $r18 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.stax.force-start-document", $r18);

        $r19 = (javax.xml.stream.XMLOutputFactory) $r3;

        return $r19;

     label01:
        if $r3 == null goto label12;

        $r4 = <org.apache.cxf.interceptor.StaxOutInterceptor: java.util.Map factories>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r26 = (javax.xml.stream.XMLOutputFactory) $r5;

        if r26 != null goto label11;

        $z1 = $r3 instanceof java.lang.Class;

        if $z1 == 0 goto label02;

        r27 = (java.lang.Class) $r3;

        goto label07;

     label02:
        $z2 = $r3 instanceof java.lang.String;

        if $z2 == 0 goto label06;

     label03:
        $r12 = (java.lang.String) $r3;

        r27 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>($r12, class "Lorg/apache/cxf/interceptor/StaxInInterceptor;");

     label04:
        goto label07;

     label05:
        $r24 := @caughtexception;

        $r25 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r25.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r24);

        throw $r25;

     label06:
        $r8 = new org.apache.cxf.interceptor.Fault;

        $r9 = new org.apache.cxf.common.i18n.Message;

        $r11 = <org.apache.cxf.interceptor.StaxOutInterceptor: java.util.ResourceBundle BUNDLE>;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = $r3;

        specialinvoke $r9.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("INVALID_INPUT_FACTORY", $r11, $r10);

        specialinvoke $r8.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message)>($r9);

        throw $r8;

     label07:
        $r13 = virtualinvoke r27.<java.lang.Class: java.lang.Object newInstance()>();

        $r14 = (javax.xml.stream.XMLOutputFactory) $r13;

        $r16 = (javax.xml.stream.XMLOutputFactory) $r14;

        r26 = $r16;

        $r15 = <org.apache.cxf.interceptor.StaxOutInterceptor: java.util.Map factories>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r16);

     label08:
        goto label11;

     label09:
        $r22 := @caughtexception;

        $r23 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r23.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r22);

        throw $r23;

     label10:
        $r20 := @caughtexception;

        $r21 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r21.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r20);

        throw $r21;

     label11:
        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("disable.outputstream.optimization", $r6);

        $r7 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.stax.force-start-document", $r7);

        return r26;

     label12:
        return null;

        catch java.lang.ClassNotFoundException from label03 to label04 with label05;
        catch java.lang.InstantiationException from label07 to label08 with label09;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
    }

    static void <clinit>()
    {
        java.util.HashMap $r16;
        org.apache.cxf.interceptor.StaxOutEndingInterceptor $r12;
        java.util.ResourceBundle $r15;
        java.lang.String $r2, $r5, $r8, $r11, $r13, $r14;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r9, $r10;
        java.lang.Class $r1, $r7;

        <org.apache.cxf.interceptor.StaxOutInterceptor: java.lang.String FORCE_START_DOCUMENT> = "org.apache.cxf.stax.force-start-document";

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = class "Lorg/apache/cxf/interceptor/StaxOutInterceptor;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".outputstream");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.cxf.interceptor.StaxOutInterceptor: java.lang.String OUTPUT_STREAM_HOLDER> = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = class "Lorg/apache/cxf/interceptor/StaxOutInterceptor;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".writer");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.cxf.interceptor.StaxOutInterceptor: java.lang.String WRITER_HOLDER> = $r11;

        $r12 = new org.apache.cxf.interceptor.StaxOutEndingInterceptor;

        $r14 = <org.apache.cxf.interceptor.StaxOutInterceptor: java.lang.String OUTPUT_STREAM_HOLDER>;

        $r13 = <org.apache.cxf.interceptor.StaxOutInterceptor: java.lang.String WRITER_HOLDER>;

        specialinvoke $r12.<org.apache.cxf.interceptor.StaxOutEndingInterceptor: void <init>(java.lang.String,java.lang.String)>($r14, $r13);

        <org.apache.cxf.interceptor.StaxOutInterceptor: org.apache.cxf.interceptor.StaxOutEndingInterceptor ENDING> = $r12;

        $r15 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/interceptor/StaxOutInterceptor;");

        <org.apache.cxf.interceptor.StaxOutInterceptor: java.util.ResourceBundle BUNDLE> = $r15;

        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        <org.apache.cxf.interceptor.StaxOutInterceptor: java.util.Map factories> = $r16;

        return;
    }
}
