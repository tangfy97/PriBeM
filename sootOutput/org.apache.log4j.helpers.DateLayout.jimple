public abstract class org.apache.log4j.helpers.DateLayout extends org.apache.log4j.Layout
{
    public static final java.lang.String NULL_DATE_FORMAT;
    public static final java.lang.String RELATIVE_TIME_DATE_FORMAT;
    protected java.text.FieldPosition pos;
    public static final java.lang.String DATE_FORMAT_OPTION;
    public static final java.lang.String TIMEZONE_OPTION;
    private java.lang.String timeZoneID;
    private java.lang.String dateFormatOption;
    protected java.text.DateFormat dateFormat;
    protected java.util.Date date;

    public void <init>()
    {
        java.text.FieldPosition $r1;
        java.util.Date $r2;
        org.apache.log4j.helpers.DateLayout r0;

        r0 := @this: org.apache.log4j.helpers.DateLayout;

        specialinvoke r0.<org.apache.log4j.Layout: void <init>()>();

        $r1 = new java.text.FieldPosition;

        specialinvoke $r1.<java.text.FieldPosition: void <init>(int)>(0);

        r0.<org.apache.log4j.helpers.DateLayout: java.text.FieldPosition pos> = $r1;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        r0.<org.apache.log4j.helpers.DateLayout: java.util.Date date> = $r2;

        return;
    }

    public java.lang.String[] getOptionStrings()
    {
        java.lang.String[] $r0;
        org.apache.log4j.helpers.DateLayout r1;

        r1 := @this: org.apache.log4j.helpers.DateLayout;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "DateFormat";

        $r0[1] = "TimeZone";

        return $r0;
    }

    public void setOption(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r2, $r3;
        boolean $z0, $z1;
        org.apache.log4j.helpers.DateLayout r1;

        r1 := @this: org.apache.log4j.helpers.DateLayout;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("DateFormat");

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>();

        r1.<org.apache.log4j.helpers.DateLayout: java.lang.String dateFormatOption> = $r3;

        goto label2;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TimeZone");

        if $z1 == 0 goto label2;

        r1.<org.apache.log4j.helpers.DateLayout: java.lang.String timeZoneID> = r2;

     label2:
        return;
    }

    public void setDateFormat(java.lang.String)
    {
        java.util.TimeZone $r3;
        java.lang.String r0, $r2;
        org.apache.log4j.helpers.DateLayout r1;

        r1 := @this: org.apache.log4j.helpers.DateLayout;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        r1.<org.apache.log4j.helpers.DateLayout: java.lang.String dateFormatOption> = r0;

     label1:
        $r2 = r1.<org.apache.log4j.helpers.DateLayout: java.lang.String dateFormatOption>;

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        virtualinvoke r1.<org.apache.log4j.helpers.DateLayout: void setDateFormat(java.lang.String,java.util.TimeZone)>($r2, $r3);

        return;
    }

    public java.lang.String getDateFormat()
    {
        java.lang.String $r1;
        org.apache.log4j.helpers.DateLayout r0;

        r0 := @this: org.apache.log4j.helpers.DateLayout;

        $r1 = r0.<org.apache.log4j.helpers.DateLayout: java.lang.String dateFormatOption>;

        return $r1;
    }

    public void setTimeZone(java.lang.String)
    {
        java.lang.String r1;
        org.apache.log4j.helpers.DateLayout r0;

        r0 := @this: org.apache.log4j.helpers.DateLayout;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.helpers.DateLayout: java.lang.String timeZoneID> = r1;

        return;
    }

    public java.lang.String getTimeZone()
    {
        java.lang.String $r1;
        org.apache.log4j.helpers.DateLayout r0;

        r0 := @this: org.apache.log4j.helpers.DateLayout;

        $r1 = r0.<org.apache.log4j.helpers.DateLayout: java.lang.String timeZoneID>;

        return $r1;
    }

    public void activateOptions()
    {
        java.util.TimeZone $r6;
        java.lang.String $r1, $r2, $r4;
        java.text.DateFormat $r3, $r5;
        org.apache.log4j.helpers.DateLayout r0;

        r0 := @this: org.apache.log4j.helpers.DateLayout;

        $r1 = r0.<org.apache.log4j.helpers.DateLayout: java.lang.String dateFormatOption>;

        virtualinvoke r0.<org.apache.log4j.helpers.DateLayout: void setDateFormat(java.lang.String)>($r1);

        $r2 = r0.<org.apache.log4j.helpers.DateLayout: java.lang.String timeZoneID>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.log4j.helpers.DateLayout: java.text.DateFormat dateFormat>;

        if $r3 == null goto label1;

        $r5 = r0.<org.apache.log4j.helpers.DateLayout: java.text.DateFormat dateFormat>;

        $r4 = r0.<org.apache.log4j.helpers.DateLayout: java.lang.String timeZoneID>;

        $r6 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r4);

        virtualinvoke $r5.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($r6);

     label1:
        return;
    }

    public void dateFormat(java.lang.StringBuffer, org.apache.log4j.spi.LoggingEvent)
    {
        java.util.Date $r3, $r6;
        org.apache.log4j.spi.LoggingEvent r2;
        long $l0;
        java.text.FieldPosition $r5;
        java.lang.StringBuffer r4;
        java.text.DateFormat $r1, $r7;
        org.apache.log4j.helpers.DateLayout r0;

        r0 := @this: org.apache.log4j.helpers.DateLayout;

        r4 := @parameter0: java.lang.StringBuffer;

        r2 := @parameter1: org.apache.log4j.spi.LoggingEvent;

        $r1 = r0.<org.apache.log4j.helpers.DateLayout: java.text.DateFormat dateFormat>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.log4j.helpers.DateLayout: java.util.Date date>;

        $l0 = r2.<org.apache.log4j.spi.LoggingEvent: long timeStamp>;

        virtualinvoke $r3.<java.util.Date: void setTime(long)>($l0);

        $r7 = r0.<org.apache.log4j.helpers.DateLayout: java.text.DateFormat dateFormat>;

        $r6 = r0.<org.apache.log4j.helpers.DateLayout: java.util.Date date>;

        $r5 = r0.<org.apache.log4j.helpers.DateLayout: java.text.FieldPosition pos>;

        virtualinvoke $r7.<java.text.DateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>($r6, r4, $r5);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label1:
        return;
    }

    public void setDateFormat(java.text.DateFormat, java.util.TimeZone)
    {
        java.util.TimeZone r2;
        java.text.DateFormat r1, $r3;
        org.apache.log4j.helpers.DateLayout r0;

        r0 := @this: org.apache.log4j.helpers.DateLayout;

        r1 := @parameter0: java.text.DateFormat;

        r2 := @parameter1: java.util.TimeZone;

        r0.<org.apache.log4j.helpers.DateLayout: java.text.DateFormat dateFormat> = r1;

        $r3 = r0.<org.apache.log4j.helpers.DateLayout: java.text.DateFormat dateFormat>;

        virtualinvoke $r3.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r2);

        return;
    }

    public void setDateFormat(java.lang.String, java.util.TimeZone)
    {
        java.util.TimeZone r3;
        java.text.SimpleDateFormat $r2;
        org.apache.log4j.helpers.ISO8601DateFormat $r5;
        org.apache.log4j.helpers.AbsoluteTimeDateFormat $r7;
        org.apache.log4j.helpers.RelativeTimeDateFormat $r8;
        org.apache.log4j.helpers.DateTimeDateFormat $r6;
        java.lang.String r0;
        java.text.DateFormat $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.log4j.helpers.DateLayout r1;

        r1 := @this: org.apache.log4j.helpers.DateLayout;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.TimeZone;

        if r0 != null goto label1;

        r1.<org.apache.log4j.helpers.DateLayout: java.text.DateFormat dateFormat> = null;

        return;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("NULL");

        if $z0 == 0 goto label2;

        r1.<org.apache.log4j.helpers.DateLayout: java.text.DateFormat dateFormat> = null;

        goto label7;

     label2:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("RELATIVE");

        if $z1 == 0 goto label3;

        $r8 = new org.apache.log4j.helpers.RelativeTimeDateFormat;

        specialinvoke $r8.<org.apache.log4j.helpers.RelativeTimeDateFormat: void <init>()>();

        r1.<org.apache.log4j.helpers.DateLayout: java.text.DateFormat dateFormat> = $r8;

        goto label7;

     label3:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ABSOLUTE");

        if $z2 == 0 goto label4;

        $r7 = new org.apache.log4j.helpers.AbsoluteTimeDateFormat;

        specialinvoke $r7.<org.apache.log4j.helpers.AbsoluteTimeDateFormat: void <init>(java.util.TimeZone)>(r3);

        r1.<org.apache.log4j.helpers.DateLayout: java.text.DateFormat dateFormat> = $r7;

        goto label7;

     label4:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("DATE");

        if $z3 == 0 goto label5;

        $r6 = new org.apache.log4j.helpers.DateTimeDateFormat;

        specialinvoke $r6.<org.apache.log4j.helpers.DateTimeDateFormat: void <init>(java.util.TimeZone)>(r3);

        r1.<org.apache.log4j.helpers.DateLayout: java.text.DateFormat dateFormat> = $r6;

        goto label7;

     label5:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ISO8601");

        if $z4 == 0 goto label6;

        $r5 = new org.apache.log4j.helpers.ISO8601DateFormat;

        specialinvoke $r5.<org.apache.log4j.helpers.ISO8601DateFormat: void <init>(java.util.TimeZone)>(r3);

        r1.<org.apache.log4j.helpers.DateLayout: java.text.DateFormat dateFormat> = $r5;

        goto label7;

     label6:
        $r2 = new java.text.SimpleDateFormat;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(r0);

        r1.<org.apache.log4j.helpers.DateLayout: java.text.DateFormat dateFormat> = $r2;

        $r4 = r1.<org.apache.log4j.helpers.DateLayout: java.text.DateFormat dateFormat>;

        virtualinvoke $r4.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r3);

     label7:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.log4j.helpers.DateLayout: java.lang.String TIMEZONE_OPTION> = "TimeZone";

        <org.apache.log4j.helpers.DateLayout: java.lang.String DATE_FORMAT_OPTION> = "DateFormat";

        <org.apache.log4j.helpers.DateLayout: java.lang.String RELATIVE_TIME_DATE_FORMAT> = "RELATIVE";

        <org.apache.log4j.helpers.DateLayout: java.lang.String NULL_DATE_FORMAT> = "NULL";

        return;
    }
}
