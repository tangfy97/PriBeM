public class org.apache.xalan.processor.TransformerFactoryImpl extends javax.xml.transform.sax.SAXTransformerFactory
{
    public static final java.lang.String XSLT_PROPERTIES;
    public static final java.lang.String FEATURE_INCREMENTAL;
    public static final java.lang.String FEATURE_OPTIMIZE;
    public static final java.lang.String FEATURE_SOURCE_LOCATION;
    private java.lang.String m_DOMsystemID;
    public static boolean m_optimize;
    public static boolean m_source_location;
    javax.xml.transform.URIResolver m_uriResolver;
    private javax.xml.transform.ErrorListener m_errorListener;

    public void <init>()
    {
        org.apache.xml.utils.DefaultErrorHandler $r1;
        org.apache.xalan.processor.TransformerFactoryImpl r0;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        specialinvoke r0.<javax.xml.transform.sax.SAXTransformerFactory: void <init>()>();

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String m_DOMsystemID> = null;

        $r1 = new org.apache.xml.utils.DefaultErrorHandler;

        specialinvoke $r1.<org.apache.xml.utils.DefaultErrorHandler: void <init>()>();

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener> = $r1;

        return;
    }

    public javax.xml.transform.Templates processFromNode(org.w3c.dom.Node) throws javax.xml.transform.TransformerConfigurationException
    {
        javax.xml.transform.Templates $r6;
        javax.xml.transform.TransformerException $r7, $r13, $r16, $r22;
        javax.xml.transform.sax.TemplatesHandler $r1;
        org.apache.xml.utils.DOM2Helper $r3;
        javax.xml.transform.ErrorListener $r10, $r14, $r19, $r23;
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        org.w3c.dom.Node r5;
        java.lang.String $r4, $r12, $r21;
        javax.xml.transform.TransformerConfigurationException $r8, $r11, $r15, $r17, $r20;
        java.lang.Exception $r9;
        org.apache.xml.utils.TreeWalker $r2;
        org.xml.sax.SAXException $r18;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r5 := @parameter0: org.w3c.dom.Node;

     label01:
        $r1 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.sax.TemplatesHandler newTemplatesHandler()>();

        $r2 = new org.apache.xml.utils.TreeWalker;

        $r3 = new org.apache.xml.utils.DOM2Helper;

        specialinvoke $r3.<org.apache.xml.utils.DOM2Helper: void <init>()>();

        $r4 = interfaceinvoke $r1.<javax.xml.transform.sax.TemplatesHandler: java.lang.String getSystemId()>();

        specialinvoke $r2.<org.apache.xml.utils.TreeWalker: void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper,java.lang.String)>($r1, $r3, $r4);

        virtualinvoke $r2.<org.apache.xml.utils.TreeWalker: void traverse(org.w3c.dom.Node)>(r5);

        $r6 = interfaceinvoke $r1.<javax.xml.transform.sax.TemplatesHandler: javax.xml.transform.Templates getTemplates()>();

        return $r6;

     label02:
        $r18 := @caughtexception;

        $r19 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r19 == null goto label07;

     label03:
        $r23 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        $r22 = new javax.xml.transform.TransformerException;

        specialinvoke $r22.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r18);

        interfaceinvoke $r23.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r22);

     label04:
        goto label06;

     label05:
        $r16 := @caughtexception;

        $r17 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r17.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>($r16);

        throw $r17;

     label06:
        return null;

     label07:
        $r20 = new javax.xml.transform.TransformerConfigurationException;

        $r21 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_PROCESSFROMNODE_FAILED", null);

        specialinvoke $r20.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r21, $r18);

        throw $r20;

     label08:
        $r15 := @caughtexception;

        throw $r15;

     label09:
        $r9 := @caughtexception;

        $r10 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r10 == null goto label14;

     label10:
        $r14 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        $r13 = new javax.xml.transform.TransformerException;

        specialinvoke $r13.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r9);

        interfaceinvoke $r14.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r13);

     label11:
        goto label13;

     label12:
        $r7 := @caughtexception;

        $r8 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r8.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label13:
        return null;

     label14:
        $r11 = new javax.xml.transform.TransformerConfigurationException;

        $r12 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_PROCESSFROMNODE_FAILED", null);

        specialinvoke $r11.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r9);

        throw $r11;

        catch org.xml.sax.SAXException from label01 to label02 with label02;
        catch javax.xml.transform.TransformerException from label03 to label04 with label05;
        catch javax.xml.transform.TransformerConfigurationException from label01 to label02 with label08;
        catch java.lang.Exception from label01 to label02 with label09;
        catch javax.xml.transform.TransformerException from label10 to label11 with label12;
    }

    java.lang.String getDOMsystemID()
    {
        java.lang.String $r1;
        org.apache.xalan.processor.TransformerFactoryImpl r0;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r1 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String m_DOMsystemID>;

        return $r1;
    }

    javax.xml.transform.Templates processFromNode(org.w3c.dom.Node, java.lang.String) throws javax.xml.transform.TransformerConfigurationException
    {
        javax.xml.transform.Templates $r3;
        org.w3c.dom.Node r2;
        java.lang.String r1;
        org.apache.xalan.processor.TransformerFactoryImpl r0;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r2 := @parameter0: org.w3c.dom.Node;

        r1 := @parameter1: java.lang.String;

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String m_DOMsystemID> = r1;

        $r3 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Templates processFromNode(org.w3c.dom.Node)>(r2);

        return $r3;
    }

    public javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.transform.TransformerConfigurationException
    {
        java.lang.AbstractMethodError $r19;
        javax.xml.parsers.SAXParser $r9;
        boolean $z0;
        org.xml.sax.SAXException $r16, $r22, $r25;
        javax.xml.transform.dom.DOMSource r29;
        javax.xml.transform.URIResolver $r7, $r13;
        javax.xml.parsers.SAXParserFactory $r8;
        javax.xml.transform.Source r0, $r10;
        org.apache.xml.utils.DOM2Helper $r12;
        org.apache.xalan.processor.TransformerFactoryImpl r6;
        org.apache.xml.utils.StopParseException $r18;
        org.xml.sax.XMLReader r28;
        org.w3c.dom.Node r27;
        java.lang.String r3, r4, r5, $r23, r30;
        org.xml.sax.InputSource $r1, r26;
        org.apache.xml.utils.StylesheetPIHandler $r2;
        javax.xml.transform.TransformerConfigurationException $r15, $r17;
        java.lang.NoSuchMethodError $r20;
        java.io.IOException $r14;
        javax.xml.parsers.FactoryConfigurationError $r21;
        org.apache.xml.utils.TreeWalker $r11;
        javax.xml.parsers.ParserConfigurationException $r24;

        r6 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r0 := @parameter0: javax.xml.transform.Source;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r26 = null;

        r27 = null;

        r28 = null;

        $z0 = r0 instanceof javax.xml.transform.dom.DOMSource;

        if $z0 == 0 goto label01;

        r29 = (javax.xml.transform.dom.DOMSource) r0;

        r27 = virtualinvoke r29.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        r30 = virtualinvoke r29.<javax.xml.transform.dom.DOMSource: java.lang.String getSystemId()>();

        goto label02;

     label01:
        $r1 = staticinvoke <javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource sourceToInputSource(javax.xml.transform.Source)>(r0);

        r26 = $r1;

        r30 = virtualinvoke $r1.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

     label02:
        $r2 = new org.apache.xml.utils.StylesheetPIHandler;

        specialinvoke $r2.<org.apache.xml.utils.StylesheetPIHandler: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r30, r3, r4, r5);

        $r7 = r6.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver>;

        if $r7 == null goto label03;

        $r13 = r6.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver>;

        virtualinvoke $r2.<org.apache.xml.utils.StylesheetPIHandler: void setURIResolver(javax.xml.transform.URIResolver)>($r13);

     label03:
        if null == r27 goto label04;

        $r11 = new org.apache.xml.utils.TreeWalker;

        $r12 = new org.apache.xml.utils.DOM2Helper;

        specialinvoke $r12.<org.apache.xml.utils.DOM2Helper: void <init>()>();

        specialinvoke $r11.<org.apache.xml.utils.TreeWalker: void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper,java.lang.String)>($r2, $r12, r30);

        virtualinvoke $r11.<org.apache.xml.utils.TreeWalker: void traverse(org.w3c.dom.Node)>(r27);

        goto label12;

     label04:
        $r8 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke $r8.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        $r9 = virtualinvoke $r8.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        r28 = virtualinvoke $r9.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label05:
        goto label10;

     label06:
        $r24 := @caughtexception;

        $r25 = new org.xml.sax.SAXException;

        specialinvoke $r25.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r24);

        throw $r25;

     label07:
        $r21 := @caughtexception;

        $r22 = new org.xml.sax.SAXException;

        $r23 = virtualinvoke $r21.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r22.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label08:
        $r20 := @caughtexception;

        goto label10;

     label09:
        $r19 := @caughtexception;

     label10:
        if null != r28 goto label11;

        r28 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()>();

     label11:
        interfaceinvoke r28.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r2);

        interfaceinvoke r28.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r26);

     label12:
        goto label16;

     label13:
        $r18 := @caughtexception;

        goto label16;

     label14:
        $r16 := @caughtexception;

        $r17 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r17.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("getAssociatedStylesheets failed", $r16);

        throw $r17;

     label15:
        $r14 := @caughtexception;

        $r15 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r15.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("getAssociatedStylesheets failed", $r14);

        throw $r15;

     label16:
        $r10 = virtualinvoke $r2.<org.apache.xml.utils.StylesheetPIHandler: javax.xml.transform.Source getAssociatedStylesheet()>();

        return $r10;

        catch javax.xml.parsers.ParserConfigurationException from label04 to label05 with label06;
        catch javax.xml.parsers.FactoryConfigurationError from label04 to label05 with label07;
        catch java.lang.NoSuchMethodError from label04 to label05 with label08;
        catch java.lang.AbstractMethodError from label04 to label05 with label09;
        catch org.apache.xml.utils.StopParseException from label03 to label12 with label13;
        catch org.xml.sax.SAXException from label03 to label12 with label14;
        catch java.io.IOException from label03 to label12 with label15;
    }

    public javax.xml.transform.sax.TemplatesHandler newTemplatesHandler() throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.StylesheetHandler $r0;
        org.apache.xalan.processor.TransformerFactoryImpl r1;

        r1 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r0 = new org.apache.xalan.processor.StylesheetHandler;

        specialinvoke $r0.<org.apache.xalan.processor.StylesheetHandler: void <init>(org.apache.xalan.processor.TransformerFactoryImpl)>(r1);

        return $r0;
    }

    public boolean getFeature(java.lang.String)
    {
        org.apache.xalan.processor.TransformerFactoryImpl r9;
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r9 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r0 := @parameter0: java.lang.String;

        if "http://javax.xml.transform.dom.DOMResult/feature" == r0 goto label1;

        if "http://javax.xml.transform.dom.DOMSource/feature" == r0 goto label1;

        if "http://javax.xml.transform.sax.SAXResult/feature" == r0 goto label1;

        if "http://javax.xml.transform.sax.SAXSource/feature" == r0 goto label1;

        if "http://javax.xml.transform.stream.StreamResult/feature" == r0 goto label1;

        if "http://javax.xml.transform.stream.StreamSource/feature" == r0 goto label1;

        if "http://javax.xml.transform.sax.SAXTransformerFactory/feature" == r0 goto label1;

        if "http://javax.xml.transform.sax.SAXTransformerFactory/feature/xmlfilter" != r0 goto label2;

     label1:
        return 1;

     label2:
        $r1 = "http://javax.xml.transform.dom.DOMResult/feature";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label3;

        $r2 = "http://javax.xml.transform.dom.DOMSource/feature";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label3;

        $r3 = "http://javax.xml.transform.sax.SAXResult/feature";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 != 0 goto label3;

        $r4 = "http://javax.xml.transform.sax.SAXSource/feature";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 != 0 goto label3;

        $r5 = "http://javax.xml.transform.stream.StreamResult/feature";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 != 0 goto label3;

        $r6 = "http://javax.xml.transform.stream.StreamSource/feature";

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z5 != 0 goto label3;

        $r7 = "http://javax.xml.transform.sax.SAXTransformerFactory/feature";

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z6 != 0 goto label3;

        $r8 = "http://javax.xml.transform.sax.SAXTransformerFactory/feature/xmlfilter";

        $z7 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z7 == 0 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }

    public void setAttribute(java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        java.lang.Object[] $r2, $r6, $r12, $r18;
        org.apache.xalan.processor.TransformerFactoryImpl r23;
        java.lang.Boolean $r8, $r10, $r14, $r16, $r20, $r22;
        java.lang.String r0, $r3, $r7, $r9, $r13, $r15, $r19, $r21;
        java.lang.IllegalArgumentException $r1, $r5, $r11, $r17;
        java.lang.Object r4;

        r23 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/features/incremental");

        if $z0 == 0 goto label03;

        $z13 = r4 instanceof java.lang.Boolean;

        if $z13 == 0 goto label01;

        $r22 = (java.lang.Boolean) r4;

        $z16 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <org.apache.xml.dtm.DTMManager: void setIncremental(boolean)>($z16);

        goto label10;

     label01:
        $z14 = r4 instanceof java.lang.String;

        if $z14 == 0 goto label02;

        $r20 = new java.lang.Boolean;

        $r21 = (java.lang.String) r4;

        specialinvoke $r20.<java.lang.Boolean: void <init>(java.lang.String)>($r21);

        $z15 = virtualinvoke $r20.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <org.apache.xml.dtm.DTMManager: void setIncremental(boolean)>($z15);

        goto label10;

     label02:
        $r17 = new java.lang.IllegalArgumentException;

        $r18 = newarray (java.lang.Object)[2];

        $r18[0] = r0;

        $r18[1] = r4;

        $r19 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_BAD_VALUE", $r18);

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r17;

     label03:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/features/optimize");

        if $z1 == 0 goto label06;

        $z9 = r4 instanceof java.lang.Boolean;

        if $z9 == 0 goto label04;

        $r16 = (java.lang.Boolean) r4;

        $z12 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        <org.apache.xalan.processor.TransformerFactoryImpl: boolean m_optimize> = $z12;

        goto label10;

     label04:
        $z10 = r4 instanceof java.lang.String;

        if $z10 == 0 goto label05;

        $r14 = new java.lang.Boolean;

        $r15 = (java.lang.String) r4;

        specialinvoke $r14.<java.lang.Boolean: void <init>(java.lang.String)>($r15);

        $z11 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        <org.apache.xalan.processor.TransformerFactoryImpl: boolean m_optimize> = $z11;

        goto label10;

     label05:
        $r11 = new java.lang.IllegalArgumentException;

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = r0;

        $r12[1] = r4;

        $r13 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_BAD_VALUE", $r12);

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r11;

     label06:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/properties/source-location");

        if $z2 == 0 goto label09;

        $z3 = r4 instanceof java.lang.Boolean;

        if $z3 == 0 goto label07;

        $r10 = (java.lang.Boolean) r4;

        $z7 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        <org.apache.xalan.processor.TransformerFactoryImpl: boolean m_source_location> = $z7;

        $z8 = <org.apache.xalan.processor.TransformerFactoryImpl: boolean m_source_location>;

        staticinvoke <org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void setUseSourceLocation(boolean)>($z8);

        goto label10;

     label07:
        $z4 = r4 instanceof java.lang.String;

        if $z4 == 0 goto label08;

        $r8 = new java.lang.Boolean;

        $r9 = (java.lang.String) r4;

        specialinvoke $r8.<java.lang.Boolean: void <init>(java.lang.String)>($r9);

        $z5 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        <org.apache.xalan.processor.TransformerFactoryImpl: boolean m_source_location> = $z5;

        $z6 = <org.apache.xalan.processor.TransformerFactoryImpl: boolean m_source_location>;

        staticinvoke <org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void setUseSourceLocation(boolean)>($z6);

        goto label10;

     label08:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r0;

        $r6[1] = r4;

        $r7 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_BAD_VALUE", $r6);

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label09:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r0;

        $r3 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NOT_SUPPORTED", $r2);

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label10:
        return;
    }

    public java.lang.Object getAttribute(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.Object[] $r2;
        java.lang.IllegalArgumentException $r1;
        org.apache.xalan.processor.TransformerFactoryImpl r7;
        java.lang.Boolean $r4, $r5, $r6;
        java.lang.String r0, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r7 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/features/incremental");

        if $z0 == 0 goto label1;

        $r6 = new java.lang.Boolean;

        $z5 = staticinvoke <org.apache.xml.dtm.DTMManager: boolean getIncremental()>();

        specialinvoke $r6.<java.lang.Boolean: void <init>(boolean)>($z5);

        return $r6;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/features/optimize");

        if $z1 == 0 goto label2;

        $r5 = new java.lang.Boolean;

        $z4 = <org.apache.xalan.processor.TransformerFactoryImpl: boolean m_optimize>;

        specialinvoke $r5.<java.lang.Boolean: void <init>(boolean)>($z4);

        return $r5;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/properties/source-location");

        if $z2 == 0 goto label3;

        $r4 = new java.lang.Boolean;

        $z3 = <org.apache.xalan.processor.TransformerFactoryImpl: boolean m_source_location>;

        specialinvoke $r4.<java.lang.Boolean: void <init>(boolean)>($z3);

        return $r4;

     label3:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r0;

        $r3 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ATTRIB_VALUE_NOT_RECOGNIZED", $r2);

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;
    }

    public org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException
    {
        javax.xml.transform.Templates $r2;
        org.xml.sax.XMLFilter $r3;
        javax.xml.transform.Source r1;
        org.apache.xalan.processor.TransformerFactoryImpl r0;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        $r2 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)>($r2);

        return $r3;
    }

    public org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates) throws javax.xml.transform.TransformerConfigurationException
    {
        javax.xml.transform.Templates r1;
        javax.xml.transform.TransformerException $r2;
        javax.xml.transform.TransformerConfigurationException $r3, $r4;
        javax.xml.transform.ErrorListener $r6, $r7;
        org.apache.xalan.processor.TransformerFactoryImpl r5;
        org.apache.xalan.transformer.TrAXFilter $r0;

        r5 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Templates;

     label1:
        $r0 = new org.apache.xalan.transformer.TrAXFilter;

        specialinvoke $r0.<org.apache.xalan.transformer.TrAXFilter: void <init>(javax.xml.transform.Templates)>(r1);

        return $r0;

     label2:
        $r4 := @caughtexception;

        $r6 = r5.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r6 == null goto label5;

     label3:
        $r7 = r5.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        interfaceinvoke $r7.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r4);

        return null;

     label4:
        $r2 := @caughtexception;

        $r3 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r3.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>($r2);

     label5:
        throw $r4;

        catch javax.xml.transform.TransformerConfigurationException from label1 to label2 with label2;
        catch javax.xml.transform.TransformerException from label3 to label4 with label4;
    }

    public javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException
    {
        javax.xml.transform.Templates $r2;
        javax.xml.transform.Source r1;
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.sax.TransformerHandler $r3;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        $r2 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)>($r2);

        return $r3;
    }

    public javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates) throws javax.xml.transform.TransformerConfigurationException
    {
        javax.xml.transform.Transformer $r1;
        javax.xml.transform.Templates r0;
        javax.xml.transform.TransformerException $r5;
        javax.xml.transform.TransformerConfigurationException $r6, $r7, r12;
        javax.xml.transform.URIResolver $r3;
        javax.xml.transform.ErrorListener $r8, $r9;
        org.apache.xalan.processor.TransformerFactoryImpl r2;
        org.xml.sax.ContentHandler $r4;
        javax.xml.transform.sax.TransformerHandler r11;
        org.apache.xalan.transformer.TransformerImpl r10;

        r2 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r0 := @parameter0: javax.xml.transform.Templates;

     label1:
        $r1 = interfaceinvoke r0.<javax.xml.transform.Templates: javax.xml.transform.Transformer newTransformer()>();

        r10 = (org.apache.xalan.transformer.TransformerImpl) $r1;

        $r3 = r2.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver>;

        virtualinvoke r10.<org.apache.xalan.transformer.TransformerImpl: void setURIResolver(javax.xml.transform.URIResolver)>($r3);

        $r4 = virtualinvoke r10.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler getInputContentHandler(boolean)>(1);

        r11 = (javax.xml.transform.sax.TransformerHandler) $r4;

        return r11;

     label2:
        $r7 := @caughtexception;

        r12 = $r7;

        $r8 = r2.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r8 == null goto label5;

     label3:
        $r9 = r2.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        interfaceinvoke $r9.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r7);

        return null;

     label4:
        $r5 := @caughtexception;

        $r6 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r6.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>($r5);

        r12 = $r6;

     label5:
        throw r12;

        catch javax.xml.transform.TransformerConfigurationException from label1 to label2 with label2;
        catch javax.xml.transform.TransformerException from label3 to label4 with label4;
    }

    public javax.xml.transform.sax.TransformerHandler newTransformerHandler() throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.transformer.TransformerIdentityImpl $r0;
        org.apache.xalan.processor.TransformerFactoryImpl r1;

        r1 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r0 = new org.apache.xalan.transformer.TransformerIdentityImpl;

        specialinvoke $r0.<org.apache.xalan.transformer.TransformerIdentityImpl: void <init>()>();

        return $r0;
    }

    public javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException
    {
        javax.xml.transform.Transformer $r3;
        javax.xml.transform.Templates $r2;
        javax.xml.transform.TransformerException $r5;
        javax.xml.transform.TransformerConfigurationException $r6, $r7, r10;
        javax.xml.transform.URIResolver $r4;
        javax.xml.transform.Source r1;
        javax.xml.transform.ErrorListener $r8, $r9;
        org.apache.xalan.processor.TransformerFactoryImpl r0;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Source;

     label1:
        $r2 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)>(r1);

        if $r2 != null goto label2;

        return null;

     label2:
        $r3 = interfaceinvoke $r2.<javax.xml.transform.Templates: javax.xml.transform.Transformer newTransformer()>();

        $r4 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver>;

        virtualinvoke $r3.<javax.xml.transform.Transformer: void setURIResolver(javax.xml.transform.URIResolver)>($r4);

        return $r3;

     label3:
        $r7 := @caughtexception;

        r10 = $r7;

        $r8 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r8 == null goto label6;

     label4:
        $r9 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        interfaceinvoke $r9.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r7);

        return null;

     label5:
        $r5 := @caughtexception;

        $r6 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r6.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>($r5);

        r10 = $r6;

     label6:
        throw r10;

        catch javax.xml.transform.TransformerConfigurationException from label1 to label3 with label3;
        catch javax.xml.transform.TransformerException from label4 to label5 with label5;
    }

    public javax.xml.transform.Transformer newTransformer() throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.transformer.TransformerIdentityImpl $r0;
        org.apache.xalan.processor.TransformerFactoryImpl r1;

        r1 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r0 = new org.apache.xalan.transformer.TransformerIdentityImpl;

        specialinvoke $r0.<org.apache.xalan.transformer.TransformerIdentityImpl: void <init>()>();

        return $r0;
    }

    public javax.xml.transform.Templates newTemplates(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException
    {
        javax.xml.transform.Templates $r5, $r12;
        javax.xml.transform.sax.TemplatesHandler $r3;
        java.lang.AbstractMethodError $r29;
        javax.xml.parsers.SAXParser $r7;
        boolean $z0, $z1;
        java.lang.Exception $r15;
        org.xml.sax.SAXException $r23, $r32, $r35;
        javax.xml.transform.dom.DOMSource r37;
        javax.xml.transform.TransformerException $r13, $r19, $r21, $r27;
        javax.xml.parsers.SAXParserFactory $r6;
        javax.xml.transform.Source r0;
        javax.xml.transform.ErrorListener $r16, $r20, $r24, $r28;
        org.apache.xalan.processor.TransformerFactoryImpl r2;
        org.xml.sax.XMLReader r38;
        org.w3c.dom.Node $r9;
        java.lang.String $r1, $r10, $r18, $r26, $r33, r36;
        org.xml.sax.InputSource $r4;
        javax.xml.transform.TransformerConfigurationException $r14, $r17, $r22, $r25;
        java.lang.NoSuchMethodError $r30;
        java.lang.IllegalArgumentException $r11;
        javax.xml.parsers.FactoryConfigurationError $r31;
        javax.xml.transform.sax.SAXSource $r8;
        javax.xml.parsers.ParserConfigurationException $r34;

        r2 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r0 := @parameter0: javax.xml.transform.Source;

        $r1 = interfaceinvoke r0.<javax.xml.transform.Source: java.lang.String getSystemId()>();

        r36 = $r1;

        if null == $r1 goto label01;

        r36 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String)>($r1);

     label01:
        $z0 = r0 instanceof javax.xml.transform.dom.DOMSource;

        if $z0 == 0 goto label03;

        r37 = (javax.xml.transform.dom.DOMSource) r0;

        $r9 = virtualinvoke r37.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        if null == $r9 goto label02;

        $r12 = virtualinvoke r2.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Templates processFromNode(org.w3c.dom.Node,java.lang.String)>($r9, r36);

        return $r12;

     label02:
        $r10 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_DOMSOURCE_INPUT", null);

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r11;

     label03:
        $r3 = virtualinvoke r2.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.sax.TemplatesHandler newTemplatesHandler()>();

        interfaceinvoke $r3.<javax.xml.transform.sax.TemplatesHandler: void setSystemId(java.lang.String)>(r36);

     label04:
        $r4 = staticinvoke <javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource sourceToInputSource(javax.xml.transform.Source)>(r0);

        virtualinvoke $r4.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>(r36);

        r38 = null;

        $z1 = r0 instanceof javax.xml.transform.sax.SAXSource;

        if $z1 == 0 goto label05;

        $r8 = (javax.xml.transform.sax.SAXSource) r0;

        r38 = virtualinvoke $r8.<javax.xml.transform.sax.SAXSource: org.xml.sax.XMLReader getXMLReader()>();

     label05:
        if null != r38 goto label12;

     label06:
        $r6 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke $r6.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        $r7 = virtualinvoke $r6.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        r38 = virtualinvoke $r7.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label07:
        goto label12;

     label08:
        $r34 := @caughtexception;

        $r35 = new org.xml.sax.SAXException;

        specialinvoke $r35.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r34);

        throw $r35;

     label09:
        $r31 := @caughtexception;

        $r32 = new org.xml.sax.SAXException;

        $r33 = virtualinvoke $r31.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r32.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r33);

        throw $r32;

     label10:
        $r30 := @caughtexception;

        goto label12;

     label11:
        $r29 := @caughtexception;

     label12:
        if null != r38 goto label13;

        r38 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()>();

     label13:
        interfaceinvoke r38.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r3);

        interfaceinvoke r38.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r4);

     label14:
        goto label25;

     label15:
        $r23 := @caughtexception;

        $r24 = r2.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r24 == null goto label20;

     label16:
        $r28 = r2.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        $r27 = new javax.xml.transform.TransformerException;

        specialinvoke $r27.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r23);

        interfaceinvoke $r28.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r27);

     label17:
        goto label19;

     label18:
        $r21 := @caughtexception;

        $r22 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r22.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>($r21);

        throw $r22;

     label19:
        goto label25;

     label20:
        $r25 = new javax.xml.transform.TransformerConfigurationException;

        $r26 = virtualinvoke $r23.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        specialinvoke $r25.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r26, $r23);

        throw $r25;

     label21:
        $r15 := @caughtexception;

        $r16 = r2.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r16 == null goto label24;

     label22:
        $r20 = r2.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        $r19 = new javax.xml.transform.TransformerException;

        specialinvoke $r19.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r15);

        interfaceinvoke $r20.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r19);

        return null;

     label23:
        $r13 := @caughtexception;

        $r14 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r14.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>($r13);

        throw $r14;

     label24:
        $r17 = new javax.xml.transform.TransformerConfigurationException;

        $r18 = virtualinvoke $r15.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r17.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r15);

        throw $r17;

     label25:
        $r5 = interfaceinvoke $r3.<javax.xml.transform.sax.TemplatesHandler: javax.xml.transform.Templates getTemplates()>();

        return $r5;

        catch javax.xml.parsers.ParserConfigurationException from label06 to label07 with label08;
        catch javax.xml.parsers.FactoryConfigurationError from label06 to label07 with label09;
        catch java.lang.NoSuchMethodError from label06 to label07 with label10;
        catch java.lang.AbstractMethodError from label06 to label07 with label11;
        catch org.xml.sax.SAXException from label04 to label14 with label15;
        catch javax.xml.transform.TransformerException from label16 to label17 with label18;
        catch java.lang.Exception from label04 to label14 with label21;
        catch javax.xml.transform.TransformerException from label22 to label23 with label23;
    }

    public void setURIResolver(javax.xml.transform.URIResolver)
    {
        javax.xml.transform.URIResolver r1;
        org.apache.xalan.processor.TransformerFactoryImpl r0;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.URIResolver;

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver> = r1;

        return;
    }

    public javax.xml.transform.URIResolver getURIResolver()
    {
        javax.xml.transform.URIResolver $r1;
        org.apache.xalan.processor.TransformerFactoryImpl r0;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r1 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver>;

        return $r1;
    }

    public javax.xml.transform.ErrorListener getErrorListener()
    {
        javax.xml.transform.ErrorListener $r1;
        org.apache.xalan.processor.TransformerFactoryImpl r0;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r1 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        return $r1;
    }

    public void setErrorListener(javax.xml.transform.ErrorListener) throws java.lang.IllegalArgumentException
    {
        java.lang.String $r3;
        javax.xml.transform.ErrorListener r0;
        java.lang.IllegalArgumentException $r2;
        org.apache.xalan.processor.TransformerFactoryImpl r1;

        r1 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r0 := @parameter0: javax.xml.transform.ErrorListener;

        if null != r0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ERRORLISTENER", null);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        r1.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener> = r0;

        return;
    }

    static void <clinit>()
    {
        <org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String FEATURE_SOURCE_LOCATION> = "http://xml.apache.org/xalan/properties/source-location";

        <org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String FEATURE_OPTIMIZE> = "http://xml.apache.org/xalan/features/optimize";

        <org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String FEATURE_INCREMENTAL> = "http://xml.apache.org/xalan/features/incremental";

        <org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String XSLT_PROPERTIES> = "org/apache/xalan/res/XSLTInfo.properties";

        <org.apache.xalan.processor.TransformerFactoryImpl: boolean m_optimize> = 1;

        <org.apache.xalan.processor.TransformerFactoryImpl: boolean m_source_location> = 0;

        return;
    }
}
