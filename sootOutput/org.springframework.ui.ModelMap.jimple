public class org.springframework.ui.ModelMap extends java.util.LinkedHashMap
{

    public void <init>()
    {
        org.springframework.ui.ModelMap r0;

        r0 := @this: org.springframework.ui.ModelMap;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        org.springframework.ui.ModelMap r0;

        r0 := @this: org.springframework.ui.ModelMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>()>();

        virtualinvoke r0.<org.springframework.ui.ModelMap: org.springframework.ui.ModelMap addAttribute(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.ui.ModelMap r0;

        r0 := @this: org.springframework.ui.ModelMap;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>()>();

        virtualinvoke r0.<org.springframework.ui.ModelMap: org.springframework.ui.ModelMap addAttribute(java.lang.Object)>(r1);

        return;
    }

    public org.springframework.ui.ModelMap addAttribute(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r0;
        org.springframework.ui.ModelMap r1;

        r1 := @this: org.springframework.ui.ModelMap;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Model attribute name must not be null");

        virtualinvoke r1.<org.springframework.ui.ModelMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2);

        return r1;
    }

    public org.springframework.ui.ModelMap addAttribute(java.lang.Object)
    {
        java.util.Collection $r4;
        java.lang.Object r0;
        java.lang.String $r2;
        org.springframework.ui.ModelMap r1, $r3;
        boolean $z0, $z1;

        r1 := @this: org.springframework.ui.ModelMap;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Model object must not be null");

        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r4 = (java.util.Collection) r0;

        $z1 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        return r1;

     label1:
        $r2 = staticinvoke <org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)>(r0);

        $r3 = virtualinvoke r1.<org.springframework.ui.ModelMap: org.springframework.ui.ModelMap addAttribute(java.lang.String,java.lang.Object)>($r2, r0);

        return $r3;
    }

    public org.springframework.ui.ModelMap addAllAttributes(java.util.Collection)
    {
        java.util.Iterator $r2;
        java.util.Collection r0;
        java.lang.Object $r3;
        org.springframework.ui.ModelMap r1;
        boolean $z0;

        r1 := @this: org.springframework.ui.ModelMap;

        r0 := @parameter0: java.util.Collection;

        if r0 == null goto label3;

        $r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r1.<org.springframework.ui.ModelMap: org.springframework.ui.ModelMap addAttribute(java.lang.Object)>($r3);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

     label3:
        return r1;
    }

    public org.springframework.ui.ModelMap addAllAttributes(java.util.Map)
    {
        org.springframework.ui.ModelMap r1;
        java.util.Map r0;

        r1 := @this: org.springframework.ui.ModelMap;

        r0 := @parameter0: java.util.Map;

        if r0 == null goto label1;

        virtualinvoke r1.<org.springframework.ui.ModelMap: void putAll(java.util.Map)>(r0);

     label1:
        return r1;
    }

    public org.springframework.ui.ModelMap mergeAttributes(java.util.Map)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        org.springframework.ui.ModelMap r1;
        java.util.Map r0;
        java.lang.Object $r4, $r6;
        java.lang.String r5;
        boolean $z0, $z1;

        r1 := @this: org.springframework.ui.ModelMap;

        r0 := @parameter0: java.util.Map;

        if r0 == null goto label3;

        $r2 = interfaceinvoke r0.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z0 = virtualinvoke r1.<org.springframework.ui.ModelMap: boolean containsKey(java.lang.Object)>(r5);

        if $z0 != 0 goto label2;

        $r6 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        virtualinvoke r1.<org.springframework.ui.ModelMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r6);

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

     label3:
        return r1;
    }

    public boolean containsAttribute(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.ui.ModelMap r0;
        boolean $z0;

        r0 := @this: org.springframework.ui.ModelMap;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.springframework.ui.ModelMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public org.springframework.ui.ModelMap addObject(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        org.springframework.ui.ModelMap r0, $r3;

        r0 := @this: org.springframework.ui.ModelMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.springframework.ui.ModelMap: org.springframework.ui.ModelMap addAttribute(java.lang.String,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public org.springframework.ui.ModelMap addObject(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.ui.ModelMap r0, $r2;

        r0 := @this: org.springframework.ui.ModelMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.springframework.ui.ModelMap: org.springframework.ui.ModelMap addAttribute(java.lang.Object)>(r1);

        return $r2;
    }

    public org.springframework.ui.ModelMap addAllObjects(java.util.Collection)
    {
        org.springframework.ui.ModelMap r0, $r2;
        java.util.Collection r1;

        r0 := @this: org.springframework.ui.ModelMap;

        r1 := @parameter0: java.util.Collection;

        $r2 = virtualinvoke r0.<org.springframework.ui.ModelMap: org.springframework.ui.ModelMap addAllAttributes(java.util.Collection)>(r1);

        return $r2;
    }

    public org.springframework.ui.ModelMap addAllObjects(java.util.Map)
    {
        org.springframework.ui.ModelMap r0, $r2;
        java.util.Map r1;

        r0 := @this: org.springframework.ui.ModelMap;

        r1 := @parameter0: java.util.Map;

        $r2 = virtualinvoke r0.<org.springframework.ui.ModelMap: org.springframework.ui.ModelMap addAllAttributes(java.util.Map)>(r1);

        return $r2;
    }
}
