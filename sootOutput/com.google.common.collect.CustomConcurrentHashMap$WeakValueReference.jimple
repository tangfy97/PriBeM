class com.google.common.collect.CustomConcurrentHashMap$WeakValueReference extends com.google.common.base.FinalizableWeakReference implements com.google.common.collect.CustomConcurrentHashMap$ValueReference
{
    final com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry entry;

    void <init>(java.lang.Object, com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)
    {
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry r3;
        com.google.common.collect.CustomConcurrentHashMap$WeakValueReference r0;
        com.google.common.base.FinalizableReferenceQueue $r2;
        java.lang.Object r1;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$WeakValueReference;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry;

        $r2 = <com.google.common.collect.CustomConcurrentHashMap$QueueHolder: com.google.common.base.FinalizableReferenceQueue queue>;

        specialinvoke r0.<com.google.common.base.FinalizableWeakReference: void <init>(java.lang.Object,com.google.common.base.FinalizableReferenceQueue)>(r1, $r2);

        r0.<com.google.common.collect.CustomConcurrentHashMap$WeakValueReference: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry entry> = r3;

        return;
    }

    public void notifyValueReclaimed()
    {
        com.google.common.collect.CustomConcurrentHashMap$WeakValueReference r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$WeakValueReference;

        virtualinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$WeakValueReference: void finalizeReferent()>();

        return;
    }

    public void finalizeReferent()
    {
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry $r1;
        com.google.common.collect.CustomConcurrentHashMap$WeakValueReference r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$WeakValueReference;

        $r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$WeakValueReference: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry entry>;

        interfaceinvoke $r1.<com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry: void notifyValueReclaimed(com.google.common.collect.CustomConcurrentHashMap$ValueReference)>(r0);

        return;
    }

    public com.google.common.collect.CustomConcurrentHashMap$ValueReference copyFor(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)
    {
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry r3;
        com.google.common.collect.CustomConcurrentHashMap$WeakValueReference $r0, r1;
        java.lang.Object $r2;

        r1 := @this: com.google.common.collect.CustomConcurrentHashMap$WeakValueReference;

        r3 := @parameter0: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry;

        $r0 = new com.google.common.collect.CustomConcurrentHashMap$WeakValueReference;

        $r2 = virtualinvoke r1.<com.google.common.collect.CustomConcurrentHashMap$WeakValueReference: java.lang.Object get()>();

        specialinvoke $r0.<com.google.common.collect.CustomConcurrentHashMap$WeakValueReference: void <init>(java.lang.Object,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)>($r2, r3);

        return $r0;
    }

    public boolean isComputingReference()
    {
        com.google.common.collect.CustomConcurrentHashMap$WeakValueReference r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$WeakValueReference;

        return 0;
    }

    public java.lang.Object waitForValue()
    {
        java.lang.Object $r1;
        com.google.common.collect.CustomConcurrentHashMap$WeakValueReference r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$WeakValueReference;

        $r1 = virtualinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$WeakValueReference: java.lang.Object get()>();

        return $r1;
    }
}
