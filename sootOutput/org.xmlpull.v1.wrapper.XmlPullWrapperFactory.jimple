public class org.xmlpull.v1.wrapper.XmlPullWrapperFactory extends java.lang.Object
{
    private static final boolean DEBUG;
    protected org.xmlpull.v1.XmlPullParserFactory f;

    public static org.xmlpull.v1.wrapper.XmlPullWrapperFactory newInstance() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.XmlPullWrapperFactory $r0;

        $r0 = new org.xmlpull.v1.wrapper.XmlPullWrapperFactory;

        specialinvoke $r0.<org.xmlpull.v1.wrapper.XmlPullWrapperFactory: void <init>(org.xmlpull.v1.XmlPullParserFactory)>(null);

        return $r0;
    }

    public static org.xmlpull.v1.wrapper.XmlPullWrapperFactory newInstance(org.xmlpull.v1.XmlPullParserFactory) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.XmlPullWrapperFactory $r0;
        org.xmlpull.v1.XmlPullParserFactory r1;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParserFactory;

        $r0 = new org.xmlpull.v1.wrapper.XmlPullWrapperFactory;

        specialinvoke $r0.<org.xmlpull.v1.wrapper.XmlPullWrapperFactory: void <init>(org.xmlpull.v1.XmlPullParserFactory)>(r1);

        return $r0;
    }

    public static org.xmlpull.v1.wrapper.XmlPullWrapperFactory newInstance(java.lang.String, java.lang.Class) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory $r2;
        org.xmlpull.v1.wrapper.XmlPullWrapperFactory $r3;
        java.lang.Class r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String,java.lang.Class)>(r0, r1);

        $r3 = new org.xmlpull.v1.wrapper.XmlPullWrapperFactory;

        specialinvoke $r3.<org.xmlpull.v1.wrapper.XmlPullWrapperFactory: void <init>(org.xmlpull.v1.XmlPullParserFactory)>($r2);

        return $r3;
    }

    protected void <init>(org.xmlpull.v1.XmlPullParserFactory) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.XmlPullWrapperFactory r0;
        org.xmlpull.v1.XmlPullParserFactory r1, $r2;

        r0 := @this: org.xmlpull.v1.wrapper.XmlPullWrapperFactory;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        r0.<org.xmlpull.v1.wrapper.XmlPullWrapperFactory: org.xmlpull.v1.XmlPullParserFactory f> = r1;

        goto label2;

     label1:
        $r2 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        r0.<org.xmlpull.v1.wrapper.XmlPullWrapperFactory: org.xmlpull.v1.XmlPullParserFactory f> = $r2;

     label2:
        return;
    }

    public org.xmlpull.v1.XmlPullParserFactory getFactory() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.XmlPullWrapperFactory r0;
        org.xmlpull.v1.XmlPullParserFactory $r1;

        r0 := @this: org.xmlpull.v1.wrapper.XmlPullWrapperFactory;

        $r1 = r0.<org.xmlpull.v1.wrapper.XmlPullWrapperFactory: org.xmlpull.v1.XmlPullParserFactory f>;

        return $r1;
    }

    public void setFeature(java.lang.String, boolean) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.XmlPullWrapperFactory r0;
        org.xmlpull.v1.XmlPullParserFactory $r2;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.xmlpull.v1.wrapper.XmlPullWrapperFactory;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.xmlpull.v1.wrapper.XmlPullWrapperFactory: org.xmlpull.v1.XmlPullParserFactory f>;

        virtualinvoke $r2.<org.xmlpull.v1.XmlPullParserFactory: void setFeature(java.lang.String,boolean)>(r1, z0);

        return;
    }

    public boolean getFeature(java.lang.String)
    {
        org.xmlpull.v1.wrapper.XmlPullWrapperFactory r0;
        org.xmlpull.v1.XmlPullParserFactory $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.wrapper.XmlPullWrapperFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.wrapper.XmlPullWrapperFactory: org.xmlpull.v1.XmlPullParserFactory f>;

        $z0 = virtualinvoke $r2.<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)>(r1);

        return $z0;
    }

    public void setNamespaceAware(boolean)
    {
        org.xmlpull.v1.wrapper.XmlPullWrapperFactory r0;
        org.xmlpull.v1.XmlPullParserFactory $r1;
        boolean z0;

        r0 := @this: org.xmlpull.v1.wrapper.XmlPullWrapperFactory;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.xmlpull.v1.wrapper.XmlPullWrapperFactory: org.xmlpull.v1.XmlPullParserFactory f>;

        virtualinvoke $r1.<org.xmlpull.v1.XmlPullParserFactory: void setNamespaceAware(boolean)>(z0);

        return;
    }

    public boolean isNamespaceAware()
    {
        org.xmlpull.v1.wrapper.XmlPullWrapperFactory r0;
        org.xmlpull.v1.XmlPullParserFactory $r1;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.wrapper.XmlPullWrapperFactory;

        $r1 = r0.<org.xmlpull.v1.wrapper.XmlPullWrapperFactory: org.xmlpull.v1.XmlPullParserFactory f>;

        $z0 = virtualinvoke $r1.<org.xmlpull.v1.XmlPullParserFactory: boolean isNamespaceAware()>();

        return $z0;
    }

    public void setValidating(boolean)
    {
        org.xmlpull.v1.wrapper.XmlPullWrapperFactory r0;
        org.xmlpull.v1.XmlPullParserFactory $r1;
        boolean z0;

        r0 := @this: org.xmlpull.v1.wrapper.XmlPullWrapperFactory;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.xmlpull.v1.wrapper.XmlPullWrapperFactory: org.xmlpull.v1.XmlPullParserFactory f>;

        virtualinvoke $r1.<org.xmlpull.v1.XmlPullParserFactory: void setValidating(boolean)>(z0);

        return;
    }

    public boolean isValidating()
    {
        org.xmlpull.v1.wrapper.XmlPullWrapperFactory r0;
        org.xmlpull.v1.XmlPullParserFactory $r1;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.wrapper.XmlPullWrapperFactory;

        $r1 = r0.<org.xmlpull.v1.wrapper.XmlPullWrapperFactory: org.xmlpull.v1.XmlPullParserFactory f>;

        $z0 = virtualinvoke $r1.<org.xmlpull.v1.XmlPullParserFactory: boolean isValidating()>();

        return $z0;
    }

    public org.xmlpull.v1.wrapper.XmlPullParserWrapper newPullParserWrapper() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.XmlPullWrapperFactory r0;
        org.xmlpull.v1.XmlPullParserFactory $r1;
        org.xmlpull.v1.wrapper.classic.StaticXmlPullParserWrapper $r3;
        org.xmlpull.v1.XmlPullParser $r2;

        r0 := @this: org.xmlpull.v1.wrapper.XmlPullWrapperFactory;

        $r1 = r0.<org.xmlpull.v1.wrapper.XmlPullWrapperFactory: org.xmlpull.v1.XmlPullParserFactory f>;

        $r2 = virtualinvoke $r1.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r3 = new org.xmlpull.v1.wrapper.classic.StaticXmlPullParserWrapper;

        specialinvoke $r3.<org.xmlpull.v1.wrapper.classic.StaticXmlPullParserWrapper: void <init>(org.xmlpull.v1.XmlPullParser)>($r2);

        return $r3;
    }

    public org.xmlpull.v1.wrapper.XmlPullParserWrapper newPullParserWrapper(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.XmlPullWrapperFactory r2;
        org.xmlpull.v1.wrapper.classic.StaticXmlPullParserWrapper $r0;
        org.xmlpull.v1.XmlPullParser r1;

        r2 := @this: org.xmlpull.v1.wrapper.XmlPullWrapperFactory;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r0 = new org.xmlpull.v1.wrapper.classic.StaticXmlPullParserWrapper;

        specialinvoke $r0.<org.xmlpull.v1.wrapper.classic.StaticXmlPullParserWrapper: void <init>(org.xmlpull.v1.XmlPullParser)>(r1);

        return $r0;
    }

    public org.xmlpull.v1.wrapper.XmlSerializerWrapper newSerializerWrapper() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.XmlPullWrapperFactory r0;
        org.xmlpull.v1.XmlPullParserFactory $r1;
        org.xmlpull.v1.XmlSerializer $r2;
        org.xmlpull.v1.wrapper.classic.StaticXmlSerializerWrapper $r3;

        r0 := @this: org.xmlpull.v1.wrapper.XmlPullWrapperFactory;

        $r1 = r0.<org.xmlpull.v1.wrapper.XmlPullWrapperFactory: org.xmlpull.v1.XmlPullParserFactory f>;

        $r2 = virtualinvoke $r1.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlSerializer newSerializer()>();

        $r3 = new org.xmlpull.v1.wrapper.classic.StaticXmlSerializerWrapper;

        specialinvoke $r3.<org.xmlpull.v1.wrapper.classic.StaticXmlSerializerWrapper: void <init>(org.xmlpull.v1.XmlSerializer,org.xmlpull.v1.wrapper.XmlPullWrapperFactory)>($r2, r0);

        return $r3;
    }

    public org.xmlpull.v1.wrapper.XmlSerializerWrapper newSerializerWrapper(org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.classic.StaticXmlSerializerWrapper $r0;
        org.xmlpull.v1.XmlSerializer r1;
        org.xmlpull.v1.wrapper.XmlPullWrapperFactory r2;

        r2 := @this: org.xmlpull.v1.wrapper.XmlPullWrapperFactory;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r0 = new org.xmlpull.v1.wrapper.classic.StaticXmlSerializerWrapper;

        specialinvoke $r0.<org.xmlpull.v1.wrapper.classic.StaticXmlSerializerWrapper: void <init>(org.xmlpull.v1.XmlSerializer,org.xmlpull.v1.wrapper.XmlPullWrapperFactory)>(r1, r2);

        return $r0;
    }

    public static void <clinit>()
    {
        <org.xmlpull.v1.wrapper.XmlPullWrapperFactory: boolean DEBUG> = 0;

        return;
    }
}
