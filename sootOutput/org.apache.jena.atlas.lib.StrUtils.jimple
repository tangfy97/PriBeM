public class org.apache.jena.atlas.lib.StrUtils extends java.lang.Object
{
    public static final int CMP_GREATER;
    public static final int CMP_EQUAL;
    public static final int CMP_LESS;
    public static final int CMP_UNEQUAL;
    public static final int CMP_INDETERMINATE;

    private void <init>()
    {
        org.apache.jena.atlas.lib.StrUtils r0;

        r0 := @this: org.apache.jena.atlas.lib.StrUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static transient java.lang.String strjoinNL(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.String[];

        $r1 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String join(java.lang.String,java.lang.String[])>("\n", r0);

        return $r1;
    }

    public static java.lang.String strjoinNL(java.util.List)
    {
        java.util.List r0;
        java.lang.String $r1;

        r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String join(java.lang.String,java.util.List)>("\n", r0);

        return $r1;
    }

    public static transient java.lang.String strjoin(java.lang.String, java.lang.String[])
    {
        java.lang.String[] r1;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        $r2 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String join(java.lang.String,java.lang.String[])>(r0, r1);

        return $r2;
    }

    public static java.lang.String strjoin(java.lang.String, java.util.List)
    {
        java.util.List r1;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $r2 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String join(java.lang.String,java.util.List)>(r0, r1);

        return $r2;
    }

    private static java.lang.String join(java.lang.String, java.util.List)
    {
        java.util.List r1;
        java.lang.Object[] $r3;
        java.lang.String[] $r2, $r4;
        java.lang.String r0, $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $r2 = newarray (java.lang.String)[0];

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (java.lang.String[]) $r3;

        $r5 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String join(java.lang.String,java.lang.String[])>(r0, $r4);

        return $r5;
    }

    private static transient java.lang.String join(java.lang.String, java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.StringBuffer $r1;
        int $i0, $i1, $i2, i3;
        java.lang.String $r2, $r3, r4, $r5, $r6;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        return "";

     label1:
        $i1 = lengthof r0;

        if $i1 != 1 goto label2;

        $r6 = r0[0];

        return $r6;

     label2:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = r0[0];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        i3 = 1;

     label3:
        $i2 = lengthof r0;

        if i3 >= $i2 goto label5;

        if r4 == null goto label4;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

     label4:
        $r5 = r0[i3];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        i3 = i3 + 1;

        goto label3;

     label5:
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static int strCompare(java.lang.String, java.lang.String)
    {
        int $i0, $i2;
        java.lang.String r0, r1;
        org.apache.jena.atlas.lib.InternalErrorException $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int compareTo(java.lang.String)>(r1);

        if $i0 >= 0 goto label1;

        $i2 = (int) -1;

        return $i2;

     label1:
        if $i0 <= 0 goto label2;

        return 1;

     label2:
        if $i0 != 0 goto label3;

        return 0;

     label3:
        $r3 = new org.apache.jena.atlas.lib.InternalErrorException;

        specialinvoke $r3.<org.apache.jena.atlas.lib.InternalErrorException: void <init>(java.lang.String)>("String comparison failure");

        throw $r3;
    }

    public static int strCompareIgnoreCase(java.lang.String, java.lang.String)
    {
        int $i0, $i2;
        java.lang.String r0, r1;
        org.apache.jena.atlas.lib.InternalErrorException $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int compareToIgnoreCase(java.lang.String)>(r1);

        if $i0 >= 0 goto label1;

        $i2 = (int) -1;

        return $i2;

     label1:
        if $i0 <= 0 goto label2;

        return 1;

     label2:
        if $i0 != 0 goto label3;

        return 0;

     label3:
        $r3 = new org.apache.jena.atlas.lib.InternalErrorException;

        specialinvoke $r3.<org.apache.jena.atlas.lib.InternalErrorException: void <init>(java.lang.String)>("String comparison failure");

        throw $r3;
    }

    public static byte[] asUTF8bytes(java.lang.String)
    {
        byte[] $r1;
        java.lang.String r0;
        org.apache.jena.atlas.lib.InternalErrorException $r3;
        java.io.UnsupportedEncodingException $r2;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.apache.jena.atlas.lib.InternalErrorException;

        specialinvoke $r3.<org.apache.jena.atlas.lib.InternalErrorException: void <init>(java.lang.String)>("UTF-8 not supported!");

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String fromUTF8bytes(byte[])
    {
        byte[] r1;
        java.lang.String $r0;
        org.apache.jena.atlas.lib.InternalErrorException $r3;
        java.io.UnsupportedEncodingException $r2;

        r1 := @parameter0: byte[];

     label1:
        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>(r1, "UTF-8");

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.apache.jena.atlas.lib.InternalErrorException;

        specialinvoke $r3.<org.apache.jena.atlas.lib.InternalErrorException: void <init>(java.lang.String)>("UTF-8 not supported!");

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String str(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return "<null>";

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String[] split(java.lang.String, java.lang.String)
    {
        int $i0, i1;
        java.lang.String[] $r2;
        java.lang.String r0, r1, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(r1);

        i1 = 0;

     label1:
        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = $r2[i1];

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r2[i1] = $r4;

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final boolean contains(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(r1);

        return $z0;
    }

    public static final java.lang.String replace(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(r1, r2);

        return $r3;
    }

    public static java.lang.String substitute(java.lang.String, java.util.Map)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.lang.CharSequence $r8;
        java.util.Set $r1;
        java.util.Map r0;
        java.lang.Object $r3, $r5, $r7;
        java.lang.String r6, r9;
        boolean $z0, $z1;

        r9 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r5;

        $z1 = virtualinvoke r9.<java.lang.String: boolean contains(java.lang.CharSequence)>(r6);

        if $z1 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.lang.CharSequence) $r7;

        r9 = virtualinvoke r9.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(r6, $r8);

     label2:
        goto label1;

     label3:
        return r9;
    }

    public static transient java.lang.String strform(java.util.Map, java.lang.String[])
    {
        java.util.Map r2;
        java.lang.String[] r0;
        java.lang.String $r1, $r3;

        r2 := @parameter0: java.util.Map;

        r0 := @parameter1: java.lang.String[];

        $r1 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoinNL(java.lang.String[])>(r0);

        $r3 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String substitute(java.lang.String,java.util.Map)>($r1, r2);

        return $r3;
    }

    public static java.lang.String chop(java.lang.String)
    {
        int $i0, $i1, $i2;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return r0;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        return $r1;
    }

    public static java.lang.String noNewlineEnding(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("\n");

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("\r");

        if $z1 == 0 goto label3;

     label2:
        r0 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String chop(java.lang.String)>(r0);

        goto label1;

     label3:
        return r0;
    }

    public static java.util.List toCharList(java.lang.String)
    {
        char $c2;
        java.util.ArrayList $r0;
        java.lang.Character $r3;
        int $i0, i1, i3;
        char[] $r2;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        i1 = lengthof $r2;

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        $c2 = $r2[i3];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        i3 = i3 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public static java.lang.String encodeHex(java.lang.String, char, char[])
    {
        char $c1, c2, $c3;
        int $i0, i4, $i5, $i6;
        char[] r3;
        java.lang.StringBuilder $r4;
        java.lang.String r0, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        c2 := @parameter1: char;

        r3 := @parameter2: char[];

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i4 = 0;

     label1:
        if i4 >= $i0 goto label3;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i5 = (int) $c3;

        $z1 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean charInArray(int,char[])>($i5, r3);

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        if i4 != $i0 goto label4;

        return r0;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r0, 0, i4);

     label5:
        if i4 >= $i0 goto label8;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i6 = (int) $c1;

        $z0 = staticinvoke <org.apache.jena.riot.system.RiotChars: boolean charInArray(int,char[])>($i6, r3);

        if $z0 == 0 goto label6;

        staticinvoke <org.apache.jena.atlas.lib.Chars: void encodeAsHex(java.lang.StringBuilder,char,char)>($r4, c2, $c1);

        goto label7;

     label6:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

     label7:
        i4 = i4 + 1;

        goto label5;

     label8:
        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String decodeHex(java.lang.String, char)
    {
        int $i1, $i2, $i4, $i6, $i8, $i9, $i10, $i11, i13, $i14, $i16, $i17, $i18;
        java.lang.String r0, $r2;
        char c0, $c3, $c5, $c7, c12;
        java.lang.StringBuilder $r3;

        r0 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        $i14 = (int) c0;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>($i14);

        i13 = $i1;

        $i16 = (int) -1;

        if $i1 != $i16 goto label1;

        return r0;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r0, 0, $i1);

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

     label2:
        if i13 >= $i2 goto label5;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i13);

        $i17 = (int) $c3;

        $i18 = (int) c0;

        if $i17 == $i18 goto label3;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        goto label4;

     label3:
        $i4 = i13 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $i6 = i13 + 2;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $i8 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: int hexDecode(char)>($c5);

        $i9 = $i8 << 4;

        $i10 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: int hexDecode(char)>($c7);

        $i11 = $i9 | $i10;

        c12 = (char) $i11;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c12);

        i13 = i13 + 2;

     label4:
        i13 = i13 + 1;

        goto label2;

     label5:
        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private static int hexDecode(char)
    {
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16;
        char c0;

        c0 := @parameter0: char;

        $i6 = (int) c0;

        if $i6 < 48 goto label1;

        $i7 = (int) c0;

        if $i7 > 57 goto label1;

        $i8 = (int) c0;

        $i5 = $i8 - 48;

        return $i5;

     label1:
        $i9 = (int) c0;

        if $i9 < 65 goto label2;

        $i10 = (int) c0;

        if $i10 > 70 goto label2;

        $i11 = (int) c0;

        $i3 = $i11 - 65;

        $i4 = $i3 + 10;

        return $i4;

     label2:
        $i12 = (int) c0;

        if $i12 < 97 goto label3;

        $i13 = (int) c0;

        if $i13 > 102 goto label3;

        $i14 = (int) c0;

        $i1 = $i14 - 97;

        $i2 = $i1 + 10;

        return $i2;

     label3:
        $i16 = (int) -1;

        return $i16;
    }

    public static java.lang.String escapeString(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.jena.riot.out.EscapeStr: java.lang.String stringEsc(java.lang.String)>(r0);

        return $r1;
    }

    public static java.lang.String unescapeString(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.jena.riot.out.EscapeStr: java.lang.String unescapeStr(java.lang.String)>(r0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.jena.atlas.lib.StrUtils: int CMP_INDETERMINATE> = 2;

        <org.apache.jena.atlas.lib.StrUtils: int CMP_UNEQUAL> = -9;

        <org.apache.jena.atlas.lib.StrUtils: int CMP_LESS> = -1;

        <org.apache.jena.atlas.lib.StrUtils: int CMP_EQUAL> = 0;

        <org.apache.jena.atlas.lib.StrUtils: int CMP_GREATER> = 1;

        return;
    }
}
