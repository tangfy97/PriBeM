public class org.codehaus.jackson.map.deser.std.MapDeserializer extends org.codehaus.jackson.map.deser.std.ContainerDeserializerBase implements org.codehaus.jackson.map.ResolvableDeserializer
{
    protected final org.codehaus.jackson.type.JavaType _mapType;
    protected final org.codehaus.jackson.map.KeyDeserializer _keyDeserializer;
    protected final org.codehaus.jackson.map.JsonDeserializer _valueDeserializer;
    protected final org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer;
    protected final org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator;
    protected final boolean _hasDefaultCreator;
    protected org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator;
    protected org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer;
    protected java.util.HashSet _ignorableProperties;

    protected void <init>(org.codehaus.jackson.type.JavaType, java.lang.reflect.Constructor, org.codehaus.jackson.map.KeyDeserializer, org.codehaus.jackson.map.JsonDeserializer, org.codehaus.jackson.map.TypeDeserializer)
    {
        org.codehaus.jackson.map.deser.std.MapDeserializer r0;
        java.lang.reflect.Constructor r6;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r7;
        org.codehaus.jackson.map.TypeDeserializer r4;
        org.codehaus.jackson.map.KeyDeserializer r2;
        org.codehaus.jackson.type.JavaType r1;
        org.codehaus.jackson.map.JsonDeserializer r3;
        org.codehaus.jackson.map.deser.std.StdValueInstantiator $r5;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r6 := @parameter1: java.lang.reflect.Constructor;

        r2 := @parameter2: org.codehaus.jackson.map.KeyDeserializer;

        r3 := @parameter3: org.codehaus.jackson.map.JsonDeserializer;

        r4 := @parameter4: org.codehaus.jackson.map.TypeDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.ContainerDeserializerBase: void <init>(java.lang.Class)>(class "Ljava/util/Map;");

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.type.JavaType _mapType> = r1;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.KeyDeserializer _keyDeserializer> = r2;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer> = r3;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer> = r4;

        $r5 = new org.codehaus.jackson.map.deser.std.StdValueInstantiator;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>(null, r1);

        if r6 == null goto label1;

        $r7 = new org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        specialinvoke $r7.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: void <init>(java.lang.reflect.Constructor,org.codehaus.jackson.map.introspect.AnnotationMap,org.codehaus.jackson.map.introspect.AnnotationMap[])>(r6, null, null);

        virtualinvoke $r5.<org.codehaus.jackson.map.deser.std.StdValueInstantiator: void configureFromObjectSettings(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.deser.impl.CreatorProperty[])>($r7, null, null, null, null);

     label1:
        if r6 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: boolean _hasDefaultCreator> = $z0;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator> = $r5;

        return;
    }

    public void <init>(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.deser.ValueInstantiator, org.codehaus.jackson.map.KeyDeserializer, org.codehaus.jackson.map.JsonDeserializer, org.codehaus.jackson.map.TypeDeserializer)
    {
        org.codehaus.jackson.map.deser.ValueInstantiator r5;
        org.codehaus.jackson.map.deser.std.MapDeserializer r0;
        org.codehaus.jackson.map.TypeDeserializer r4;
        org.codehaus.jackson.map.deser.impl.PropertyBasedCreator $r6;
        org.codehaus.jackson.map.KeyDeserializer r2;
        org.codehaus.jackson.type.JavaType r1;
        org.codehaus.jackson.map.JsonDeserializer r3;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r5 := @parameter1: org.codehaus.jackson.map.deser.ValueInstantiator;

        r2 := @parameter2: org.codehaus.jackson.map.KeyDeserializer;

        r3 := @parameter3: org.codehaus.jackson.map.JsonDeserializer;

        r4 := @parameter4: org.codehaus.jackson.map.TypeDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.ContainerDeserializerBase: void <init>(java.lang.Class)>(class "Ljava/util/Map;");

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.type.JavaType _mapType> = r1;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.KeyDeserializer _keyDeserializer> = r2;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer> = r3;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer> = r4;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator> = r5;

        $z0 = virtualinvoke r5.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateFromObjectWith()>();

        if $z0 == 0 goto label1;

        $r6 = new org.codehaus.jackson.map.deser.impl.PropertyBasedCreator;

        specialinvoke $r6.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: void <init>(org.codehaus.jackson.map.deser.ValueInstantiator)>(r5);

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator> = $r6;

        goto label2;

     label1:
        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator> = null;

     label2:
        $z1 = virtualinvoke r5.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateUsingDefault()>();

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: boolean _hasDefaultCreator> = $z1;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.deser.std.MapDeserializer)
    {
        org.codehaus.jackson.map.deser.ValueInstantiator $r7;
        org.codehaus.jackson.map.deser.std.MapDeserializer r0, r1;
        java.util.HashSet $r10;
        org.codehaus.jackson.map.TypeDeserializer $r6;
        org.codehaus.jackson.map.deser.impl.PropertyBasedCreator $r8;
        org.codehaus.jackson.map.KeyDeserializer $r4;
        org.codehaus.jackson.type.JavaType $r3;
        java.lang.Class $r2;
        org.codehaus.jackson.map.JsonDeserializer $r5, $r9;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        r1 := @parameter0: org.codehaus.jackson.map.deser.std.MapDeserializer;

        $r2 = r1.<org.codehaus.jackson.map.deser.std.MapDeserializer: java.lang.Class _valueClass>;

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.ContainerDeserializerBase: void <init>(java.lang.Class)>($r2);

        $r3 = r1.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.type.JavaType _mapType>;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.type.JavaType _mapType> = $r3;

        $r4 = r1.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.KeyDeserializer _keyDeserializer>;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.KeyDeserializer _keyDeserializer> = $r4;

        $r5 = r1.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer>;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer> = $r5;

        $r6 = r1.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer>;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer> = $r6;

        $r7 = r1.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator> = $r7;

        $r8 = r1.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator> = $r8;

        $r9 = r1.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer> = $r9;

        $z0 = r1.<org.codehaus.jackson.map.deser.std.MapDeserializer: boolean _hasDefaultCreator>;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: boolean _hasDefaultCreator> = $z0;

        $r10 = r1.<org.codehaus.jackson.map.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties>;

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties> = $r10;

        return;
    }

    public void setIgnorableProperties(java.lang.String[])
    {
        java.util.HashSet $r2;
        int $i0;
        java.lang.String[] r1;
        org.codehaus.jackson.map.deser.std.MapDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        r1 := @parameter0: java.lang.String[];

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 != 0 goto label2;

     label1:
        $r2 = null;

        goto label3;

     label2:
        $r2 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.util.HashSet arrayToSet(java.lang.Object[])>(r1);

     label3:
        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties> = $r2;

        return;
    }

    public void resolve(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty r30;
        org.codehaus.jackson.map.deser.std.MapDeserializer r0;
        boolean $z0, $z1, $z2;
        org.codehaus.jackson.map.DeserializerProvider r8;
        java.util.Collection $r4;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams $r15;
        org.codehaus.jackson.map.deser.impl.PropertyBasedCreator $r2, $r3, $r9;
        java.lang.StringBuilder $r19, $r20, $r22, $r23, $r27, $r28;
        org.codehaus.jackson.map.DeserializationConfig r7;
        org.codehaus.jackson.type.JavaType $r10, $r13, $r21;
        org.codehaus.jackson.map.JsonDeserializer $r11, $r17;
        java.lang.String $r26, $r29;
        java.util.Iterator $r5;
        org.codehaus.jackson.map.deser.ValueInstantiator $r1, $r12, $r14, $r24;
        java.lang.IllegalArgumentException $r18;
        java.lang.Object $r6;
        java.lang.Class $r25;
        org.codehaus.jackson.map.BeanProperty$Std $r16;

        r0 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        r7 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r8 := @parameter1: org.codehaus.jackson.map.DeserializerProvider;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateUsingDelegate()>();

        if $z0 == 0 goto label2;

        $r12 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r13 = virtualinvoke $r12.<org.codehaus.jackson.map.deser.ValueInstantiator: org.codehaus.jackson.type.JavaType getDelegateType()>();

        if $r13 != null goto label1;

        $r18 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid delegate-creator definition for ");

        $r21 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.type.JavaType _mapType>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": value instantiator (");

        $r24 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r25 = virtualinvoke $r24.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") returned true for \'canCreateUsingDelegate()\', but null for \'getDelegateType()\'");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29);

        throw $r18;

     label1:
        $r14 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r15 = virtualinvoke $r14.<org.codehaus.jackson.map.deser.ValueInstantiator: org.codehaus.jackson.map.introspect.AnnotatedWithParams getDelegateCreator()>();

        $r16 = new org.codehaus.jackson.map.BeanProperty$Std;

        specialinvoke $r16.<org.codehaus.jackson.map.BeanProperty$Std: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember)>(null, $r13, null, $r15);

        $r17 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>(r7, r8, $r13, $r16);

        r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer> = $r17;

     label2:
        $r2 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        if $r2 == null goto label5;

        $r3 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: java.util.Collection getCreatorProperties()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r30 = (org.codehaus.jackson.map.deser.SettableBeanProperty) $r6;

        $z2 = virtualinvoke r30.<org.codehaus.jackson.map.deser.SettableBeanProperty: boolean hasValueDeserializer()>();

        if $z2 != 0 goto label4;

        $r9 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        $r10 = virtualinvoke r30.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.type.JavaType getType()>();

        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>(r7, r8, $r10, r30);

        virtualinvoke $r9.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: void assignDeserializer(org.codehaus.jackson.map.deser.SettableBeanProperty,org.codehaus.jackson.map.JsonDeserializer)>(r30, $r11);

     label4:
        goto label3;

     label5:
        return;
    }

    public org.codehaus.jackson.type.JavaType getContentType()
    {
        org.codehaus.jackson.type.JavaType $r1, $r2;
        org.codehaus.jackson.map.deser.std.MapDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.type.JavaType _mapType>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType getContentType()>();

        return $r2;
    }

    public org.codehaus.jackson.map.JsonDeserializer getContentDeserializer()
    {
        org.codehaus.jackson.map.JsonDeserializer $r1;
        org.codehaus.jackson.map.deser.std.MapDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer>;

        return $r1;
    }

    public java.util.Map deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r4, $r5, $r7, $r8, $r9;
        org.codehaus.jackson.map.deser.std.MapDeserializer r0;
        org.codehaus.jackson.map.DeserializationContext r6;
        org.codehaus.jackson.map.JsonMappingException $r11, $r17;
        java.util.Map $r15, $r22, $r23, $r26;
        org.codehaus.jackson.map.JsonDeserializer $r2, $r18;
        java.lang.String $r13;
        org.codehaus.jackson.JsonParser r3;
        boolean $z0;
        org.codehaus.jackson.map.deser.ValueInstantiator $r12, $r19, $r24;
        org.codehaus.jackson.map.deser.impl.PropertyBasedCreator $r1;
        java.lang.Class $r10, $r16;
        java.lang.Object $r14, $r20, $r21, $r25;

        r0 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        r3 := @parameter0: org.codehaus.jackson.JsonParser;

        r6 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        if $r1 == null goto label1;

        $r23 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: java.util.Map _deserializeUsingCreator(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r3, r6);

        return $r23;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        if $r2 == null goto label2;

        $r19 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r18 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        $r20 = virtualinvoke $r18.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r3, r6);

        $r21 = virtualinvoke $r19.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDelegate(java.lang.Object)>($r20);

        $r22 = (java.util.Map) $r21;

        return $r22;

     label2:
        $z0 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: boolean _hasDefaultCreator>;

        if $z0 != 0 goto label3;

        $r16 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: java.lang.Class getMapClass()>();

        $r17 = virtualinvoke r6.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.String)>($r16, "No default constructor found");

        throw $r17;

     label3:
        $r4 = virtualinvoke r3.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r4 == $r5 goto label5;

        $r7 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if $r4 == $r7 goto label5;

        $r8 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r4 == $r8 goto label5;

        $r9 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_STRING>;

        if $r4 != $r9 goto label4;

        $r12 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r13 = virtualinvoke r3.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

        $r14 = virtualinvoke $r12.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createFromString(java.lang.String)>($r13);

        $r15 = (java.util.Map) $r14;

        return $r15;

     label4:
        $r10 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: java.lang.Class getMapClass()>();

        $r11 = virtualinvoke r6.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r10);

        throw $r11;

     label5:
        $r24 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r25 = virtualinvoke $r24.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDefault()>();

        $r26 = (java.util.Map) $r25;

        virtualinvoke r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: void _readAndBind(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map)>(r3, r6, $r26);

        return $r26;
    }

    public java.util.Map deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.util.Map) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r1, $r2, $r6;
        org.codehaus.jackson.map.deser.std.MapDeserializer r3;
        org.codehaus.jackson.map.DeserializationContext r4;
        org.codehaus.jackson.map.JsonMappingException $r8;
        java.util.Map r5;
        java.lang.Class $r7;
        org.codehaus.jackson.JsonParser r0;

        r3 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        r4 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r5 := @parameter2: java.util.Map;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r1 == $r2 goto label1;

        $r6 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if $r1 == $r6 goto label1;

        $r7 = virtualinvoke r3.<org.codehaus.jackson.map.deser.std.MapDeserializer: java.lang.Class getMapClass()>();

        $r8 = virtualinvoke r4.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r7);

        throw $r8;

     label1:
        virtualinvoke r3.<org.codehaus.jackson.map.deser.std.MapDeserializer: void _readAndBind(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map)>(r0, r4, r5);

        return r5;
    }

    public java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.TypeDeserializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.TypeDeserializer r0;
        java.lang.Object $r3;
        org.codehaus.jackson.map.deser.std.MapDeserializer r4;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r4 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r0 := @parameter2: org.codehaus.jackson.map.TypeDeserializer;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.TypeDeserializer: java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }

    public final java.lang.Class getMapClass()
    {
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Class $r2;
        org.codehaus.jackson.map.deser.std.MapDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.type.JavaType _mapType>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        return $r2;
    }

    public org.codehaus.jackson.type.JavaType getValueType()
    {
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.deser.std.MapDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.type.JavaType _mapType>;

        return $r1;
    }

    protected final void _readAndBind(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.util.Map) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r1, $r2, $r7, $r9, r15, $r16;
        org.codehaus.jackson.map.deser.std.MapDeserializer r3;
        org.codehaus.jackson.map.DeserializationContext r5;
        java.util.HashSet $r8, $r11;
        java.util.Map r10;
        org.codehaus.jackson.map.JsonDeserializer $r13;
        java.lang.String $r4;
        org.codehaus.jackson.JsonParser r0;
        boolean $z0;
        org.codehaus.jackson.map.TypeDeserializer $r14;
        org.codehaus.jackson.map.KeyDeserializer $r12;
        java.lang.Object $r6, r17;

        r3 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        r5 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r10 := @parameter2: java.util.Map;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        r15 = $r1;

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r1 != $r2 goto label1;

        r15 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

     label1:
        $r12 = r3.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.KeyDeserializer _keyDeserializer>;

        $r13 = r3.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer>;

        $r14 = r3.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer>;

     label2:
        $r16 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if r15 != $r16 goto label8;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        $r6 = virtualinvoke $r12.<org.codehaus.jackson.map.KeyDeserializer: java.lang.Object deserializeKey(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r4, r5);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r8 = r3.<org.codehaus.jackson.map.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties>;

        if $r8 == null goto label3;

        $r11 = r3.<org.codehaus.jackson.map.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties>;

        $z0 = virtualinvoke $r11.<java.util.HashSet: boolean contains(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

        goto label7;

     label3:
        $r9 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r7 != $r9 goto label4;

        r17 = null;

        goto label6;

     label4:
        if $r14 != null goto label5;

        r17 = virtualinvoke $r13.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r0, r5);

        goto label6;

     label5:
        r17 = virtualinvoke $r13.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>(r0, r5, $r14);

     label6:
        interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r17);

     label7:
        r15 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label2;

     label8:
        return;
    }

    public java.util.Map _deserializeUsingCreator(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r5, $r6, $r10, $r16, r28, $r29;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r12;
        org.codehaus.jackson.map.deser.std.MapDeserializer r0;
        java.util.Map $r8, r30;
        org.codehaus.jackson.map.deser.impl.PropertyValueBuffer $r4;
        boolean $z0, $z1;
        java.lang.Exception $r22, $r25;
        org.codehaus.jackson.map.deser.impl.PropertyBasedCreator r1;
        org.codehaus.jackson.map.KeyDeserializer $r14;
        org.codehaus.jackson.map.DeserializationContext r3;
        java.util.HashSet $r11, $r19;
        int $i0;
        org.codehaus.jackson.type.JavaType $r23, $r26;
        org.codehaus.jackson.map.JsonDeserializer $r20;
        java.lang.String $r9, $r13;
        org.codehaus.jackson.JsonParser r2;
        org.codehaus.jackson.map.TypeDeserializer $r21;
        java.lang.Object $r7, $r15, $r17, $r18, r31;
        java.lang.Class $r24, $r27;

        r0 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        r3 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r1 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        $r4 = virtualinvoke r1.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: org.codehaus.jackson.map.deser.impl.PropertyValueBuffer startBuilding(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, r3);

        $r5 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        r28 = $r5;

        $r6 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r5 != $r6 goto label01;

        r28 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

     label01:
        $r20 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer>;

        $r21 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer>;

     label02:
        $r29 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if r28 != $r29 goto label13;

        $r9 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        $r10 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r11 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties>;

        if $r11 == null goto label03;

        $r19 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: java.util.HashSet _ignorableProperties>;

        $z1 = virtualinvoke $r19.<java.util.HashSet: boolean contains(java.lang.Object)>($r9);

        if $z1 == 0 goto label03;

        virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

        goto label12;

     label03:
        $r12 = virtualinvoke r1.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: org.codehaus.jackson.map.deser.SettableBeanProperty findCreatorProperty(java.lang.String)>($r9);

        if $r12 == null goto label08;

        $r17 = virtualinvoke $r12.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, r3);

        $i0 = virtualinvoke $r12.<org.codehaus.jackson.map.deser.SettableBeanProperty: int getPropertyIndex()>();

        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.deser.impl.PropertyValueBuffer: boolean assignParameter(int,java.lang.Object)>($i0, $r17);

        if $z0 == 0 goto label12;

        virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

     label04:
        $r18 = virtualinvoke r1.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: java.lang.Object build(org.codehaus.jackson.map.deser.impl.PropertyValueBuffer)>($r4);

        r30 = (java.util.Map) $r18;

     label05:
        goto label07;

     label06:
        $r25 := @caughtexception;

        $r26 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.type.JavaType _mapType>;

        $r27 = virtualinvoke $r26.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        virtualinvoke r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object)>($r25, $r27);

        return null;

     label07:
        virtualinvoke r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: void _readAndBind(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map)>(r2, r3, r30);

        return r30;

     label08:
        $r13 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        $r14 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.map.KeyDeserializer _keyDeserializer>;

        $r15 = virtualinvoke $r14.<org.codehaus.jackson.map.KeyDeserializer: java.lang.Object deserializeKey(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r13, r3);

        $r16 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r10 != $r16 goto label09;

        r31 = null;

        goto label11;

     label09:
        if $r21 != null goto label10;

        r31 = virtualinvoke $r20.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, r3);

        goto label11;

     label10:
        r31 = virtualinvoke $r20.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>(r2, r3, $r21);

     label11:
        virtualinvoke $r4.<org.codehaus.jackson.map.deser.impl.PropertyValueBuffer: void bufferMapProperty(java.lang.Object,java.lang.Object)>($r15, r31);

     label12:
        r28 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label02;

     label13:
        $r7 = virtualinvoke r1.<org.codehaus.jackson.map.deser.impl.PropertyBasedCreator: java.lang.Object build(org.codehaus.jackson.map.deser.impl.PropertyValueBuffer)>($r4);

        $r8 = (java.util.Map) $r7;

     label14:
        return $r8;

     label15:
        $r22 := @caughtexception;

        $r23 = r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: org.codehaus.jackson.type.JavaType _mapType>;

        $r24 = virtualinvoke $r23.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        virtualinvoke r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object)>($r22, $r24);

        return null;

        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    protected void wrapAndThrow(java.lang.Throwable, java.lang.Object) throws java.io.IOException
    {
        java.lang.Throwable $r4, r6;
        java.lang.Error $r3;
        java.io.IOException $r2;
        org.codehaus.jackson.map.deser.std.MapDeserializer r5;
        org.codehaus.jackson.map.JsonMappingException $r1;
        java.lang.Object r0;
        boolean $z0, $z1, $z2, $z3;

        r5 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        r6 := @parameter0: java.lang.Throwable;

        r0 := @parameter1: java.lang.Object;

     label1:
        $z0 = r6 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r6.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r4 == null goto label2;

        r6 = virtualinvoke r6.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label2:
        $z1 = r6 instanceof java.lang.Error;

        if $z1 == 0 goto label3;

        $r3 = (java.lang.Error) r6;

        throw $r3;

     label3:
        $z2 = r6 instanceof java.io.IOException;

        if $z2 == 0 goto label4;

        $z3 = r6 instanceof org.codehaus.jackson.map.JsonMappingException;

        if $z3 != 0 goto label4;

        $r2 = (java.io.IOException) r6;

        throw $r2;

     label4:
        $r1 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)>(r6, r0, null);

        throw $r1;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.util.Map $r4, $r5;
        java.lang.Object r3;
        org.codehaus.jackson.map.deser.std.MapDeserializer r0;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r0 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r3 := @parameter2: java.lang.Object;

        $r4 = (java.util.Map) r3;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: java.util.Map deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map)>(r1, r2, $r4);

        return $r5;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.util.Map $r3;
        org.codehaus.jackson.map.deser.std.MapDeserializer r0;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r0 := @this: org.codehaus.jackson.map.deser.std.MapDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.MapDeserializer: java.util.Map deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }
}
