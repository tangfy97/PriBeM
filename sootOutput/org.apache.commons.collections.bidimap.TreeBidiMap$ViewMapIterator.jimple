class org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator extends org.apache.commons.collections.bidimap.TreeBidiMap$ViewIterator implements org.apache.commons.collections.OrderedMapIterator
{
    private final int oppositeType;

    void <init>(org.apache.commons.collections.bidimap.TreeBidiMap, int)
    {
        org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator r0;
        int i0, $i1, $i2;
        org.apache.commons.collections.bidimap.TreeBidiMap r1;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator;

        r1 := @parameter0: org.apache.commons.collections.bidimap.TreeBidiMap;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.commons.collections.bidimap.TreeBidiMap$ViewIterator: void <init>(org.apache.commons.collections.bidimap.TreeBidiMap,int,int)>(r1, i0, i0);

        $i1 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator: int dataType>;

        $i2 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap: int access$2300(int)>($i1);

        r0.<org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator: int oppositeType> = $i2;

        return;
    }

    public java.lang.Object getKey()
    {
        java.lang.IllegalStateException $r4;
        org.apache.commons.collections.bidimap.TreeBidiMap$Node $r1, $r2;
        org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator r0;
        int $i0;
        java.lang.Comparable $r3;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator;

        $r1 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator: org.apache.commons.collections.bidimap.TreeBidiMap$Node lastReturnedNode>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Iterator getKey() can only be called after next() and before remove()");

        throw $r4;

     label1:
        $r2 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator: org.apache.commons.collections.bidimap.TreeBidiMap$Node lastReturnedNode>;

        $i0 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator: int dataType>;

        $r3 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap$Node: java.lang.Comparable access$000(org.apache.commons.collections.bidimap.TreeBidiMap$Node,int)>($r2, $i0);

        return $r3;
    }

    public java.lang.Object getValue()
    {
        java.lang.IllegalStateException $r4;
        org.apache.commons.collections.bidimap.TreeBidiMap$Node $r1, $r2;
        org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator r0;
        int $i0;
        java.lang.Comparable $r3;

        r0 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator;

        $r1 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator: org.apache.commons.collections.bidimap.TreeBidiMap$Node lastReturnedNode>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Iterator getValue() can only be called after next() and before remove()");

        throw $r4;

     label1:
        $r2 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator: org.apache.commons.collections.bidimap.TreeBidiMap$Node lastReturnedNode>;

        $i0 = r0.<org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator: int oppositeType>;

        $r3 = staticinvoke <org.apache.commons.collections.bidimap.TreeBidiMap$Node: java.lang.Comparable access$000(org.apache.commons.collections.bidimap.TreeBidiMap$Node,int)>($r2, $i0);

        return $r3;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator r1;

        r1 := @this: org.apache.commons.collections.bidimap.TreeBidiMap$ViewMapIterator;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
