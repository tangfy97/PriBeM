public class com.hp.hpl.jena.rdf.arp.states.OuterXMLLiteral extends com.hp.hpl.jena.rdf.arp.states.AbsXMLLiteral
{
    final java.lang.String parseType;

    public void <init>(com.hp.hpl.jena.rdf.arp.states.WantsObjectFrameI, com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext, java.lang.String)
    {
        com.hp.hpl.jena.rdf.arp.states.OuterXMLLiteral r0;
        com.hp.hpl.jena.rdf.arp.states.WantsObjectFrameI r1;
        java.lang.StringBuffer $r3;
        java.lang.String r4;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.states.OuterXMLLiteral;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.states.WantsObjectFrameI;

        r2 := @parameter1: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        r4 := @parameter2: java.lang.String;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.states.AbsXMLLiteral: void <init>(com.hp.hpl.jena.rdf.arp.states.FrameI,com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext,java.lang.StringBuffer)>(r1, r2, $r3);

        r0.<com.hp.hpl.jena.rdf.arp.states.OuterXMLLiteral: java.lang.String parseType> = r4;

        return;
    }

    public void endElement() throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint $r5;
        com.hp.hpl.jena.rdf.arp.states.WantsObjectFrameI $r7;
        com.hp.hpl.jena.rdf.arp.states.OuterXMLLiteral r1;
        com.hp.hpl.jena.rdf.arp.states.FrameI $r6;
        java.lang.StringBuffer $r2;
        com.hp.hpl.jena.rdf.arp.impl.ARPString $r0;
        java.lang.String $r3, $r4;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.rdf.arp.states.OuterXMLLiteral;

        $r0 = new com.hp.hpl.jena.rdf.arp.impl.ARPString;

        $r2 = r1.<com.hp.hpl.jena.rdf.arp.states.OuterXMLLiteral: java.lang.StringBuffer rslt>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = r1.<com.hp.hpl.jena.rdf.arp.states.OuterXMLLiteral: java.lang.String parseType>;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.arp.impl.ARPString: void <init>(com.hp.hpl.jena.rdf.arp.states.Frame,java.lang.String,java.lang.String)>(r1, $r3, $r4);

        $r5 = r1.<com.hp.hpl.jena.rdf.arp.states.OuterXMLLiteral: com.hp.hpl.jena.rdf.arp.impl.Taint taint>;

        $z0 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.arp.impl.Taint: boolean isTainted()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<com.hp.hpl.jena.rdf.arp.impl.ARPString: void taint()>();

     label1:
        $r6 = virtualinvoke r1.<com.hp.hpl.jena.rdf.arp.states.OuterXMLLiteral: com.hp.hpl.jena.rdf.arp.states.FrameI getParent()>();

        $r7 = (com.hp.hpl.jena.rdf.arp.states.WantsObjectFrameI) $r6;

        interfaceinvoke $r7.<com.hp.hpl.jena.rdf.arp.states.WantsObjectFrameI: void theObject(com.hp.hpl.jena.rdf.arp.impl.ANode)>($r0);

        return;
    }
}
