public class repackage.Repackage extends java.lang.Object
{
    private java.io.File _sourceBase;
    private java.io.File _targetBase;
    private java.util.List _fromPackages;
    private java.util.List _toPackages;
    private java.util.regex.Pattern _packagePattern;
    private repackage.Repackager _repackager;
    private java.util.Map _movedDirs;
    private java.util.List _moveAlongFiles;
    private int _skippedFiles;

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r1;
        repackage.Repackage $r0;

        r1 := @parameter0: java.lang.String[];

        $r0 = new repackage.Repackage;

        specialinvoke $r0.<repackage.Repackage: void <init>(java.lang.String[])>(r1);

        virtualinvoke $r0.<repackage.Repackage: void repackage()>();

        return;
    }

    private void <init>(java.lang.String[])
    {
        java.lang.String[] r1;
        repackage.Repackager $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.String $r5, $r6, $r7, r8, r9, r10;
        repackage.Repackage r0;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6;
        java.lang.RuntimeException $r11;
        java.io.File $r3, $r4;

        r0 := @this: repackage.Repackage;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r8 = null;

        r9 = null;

        r10 = null;

        z3 = 0;

        i7 = 0;

     label01:
        $i0 = lengthof r1;

        if i7 >= $i0 goto label06;

        $r5 = r1[i7];

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("-repackage");

        if $z0 == 0 goto label02;

        $i6 = i7 + 1;

        $i5 = lengthof r1;

        if $i6 >= $i5 goto label02;

        i7 = i7 + 1;

        r10 = r1[i7];

        goto label05;

     label02:
        $r6 = r1[i7];

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z1 == 0 goto label03;

        $i4 = i7 + 1;

        $i3 = lengthof r1;

        if $i4 >= $i3 goto label03;

        i7 = i7 + 1;

        r8 = r1[i7];

        goto label05;

     label03:
        $r7 = r1[i7];

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("-t");

        if $z2 == 0 goto label04;

        $i2 = i7 + 1;

        $i1 = lengthof r1;

        if $i2 >= $i1 goto label04;

        i7 = i7 + 1;

        r9 = r1[i7];

        goto label05;

     label04:
        z3 = 1;

     label05:
        i7 = i7 + 1;

        goto label01;

     label06:
        if z3 != 0 goto label11;

        if r10 == null goto label11;

        if r8 != null goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        if r9 != null goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        $z6 = $z4 ^ $z5;

        if $z6 == 0 goto label12;

     label11:
        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>("Usage: repackage -repackage [spec] [ -f [sourcedir] -t [targetdir] ]");

        throw $r11;

     label12:
        $r2 = new repackage.Repackager;

        specialinvoke $r2.<repackage.Repackager: void <init>(java.lang.String)>(r10);

        r0.<repackage.Repackage: repackage.Repackager _repackager> = $r2;

        if r8 == null goto label13;

        if r9 != null goto label14;

     label13:
        return;

     label14:
        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r8);

        r0.<repackage.Repackage: java.io.File _sourceBase> = $r3;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(r9);

        r0.<repackage.Repackage: java.io.File _targetBase> = $r4;

        return;
    }

    public void repackage() throws java.lang.Exception
    {
        repackage.Repackager $r4, $r9, $r11;
        java.util.List $r10, $r12;
        java.util.regex.Pattern $r13;
        java.util.HashMap $r15;
        java.util.ArrayList $r14, $r17;
        java.lang.StringBuffer $r5, $r6, $r19, $r21, $r22, $r23, $r27, $r29, $r30, $r31;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r7, $r24, $r26, $r32, $r35, $r36;
        repackage.Repackage r0;
        java.io.PrintStream $r3, $r20, $r28;
        java.io.File $r1, $r8, $r16, $r18, $r25, r34;
        java.lang.Object $r33;
        java.io.InputStream $r2;

        r0 := @this: repackage.Repackage;

        $r1 = r0.<repackage.Repackage: java.io.File _sourceBase>;

        if $r1 == null goto label1;

        $r8 = r0.<repackage.Repackage: java.io.File _targetBase>;

        if $r8 != null goto label2;

     label1:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = r0.<repackage.Repackage: repackage.Repackager _repackager>;

        $r2 = <java.lang.System: java.io.InputStream in>;

        $r5 = virtualinvoke r0.<repackage.Repackage: java.lang.StringBuffer readInputStream(java.io.InputStream)>($r2);

        $r6 = virtualinvoke $r4.<repackage.Repackager: java.lang.StringBuffer repackage(java.lang.StringBuffer)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);

        return;

     label2:
        $r9 = r0.<repackage.Repackage: repackage.Repackager _repackager>;

        $r10 = virtualinvoke $r9.<repackage.Repackager: java.util.List getFromPackages()>();

        r0.<repackage.Repackage: java.util.List _fromPackages> = $r10;

        $r11 = r0.<repackage.Repackage: repackage.Repackager _repackager>;

        $r12 = virtualinvoke $r11.<repackage.Repackager: java.util.List getToPackages()>();

        r0.<repackage.Repackage: java.util.List _toPackages> = $r12;

        $r13 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("^\\s*package\\s+((?:\\w|\\.)*)\\s*;", 8);

        r0.<repackage.Repackage: java.util.regex.Pattern _packagePattern> = $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<repackage.Repackage: java.util.List _moveAlongFiles> = $r14;

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        r0.<repackage.Repackage: java.util.Map _movedDirs> = $r15;

        $r16 = r0.<repackage.Repackage: java.io.File _targetBase>;

        virtualinvoke $r16.<java.io.File: boolean mkdirs()>();

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        $r18 = r0.<repackage.Repackage: java.io.File _sourceBase>;

        virtualinvoke r0.<repackage.Repackage: void fillFiles(java.util.ArrayList,java.io.File)>($r17, $r18);

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Repackaging ");

        $i0 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" files ...");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r24);

        $r25 = r0.<repackage.Repackage: java.io.File _sourceBase>;

        $r26 = virtualinvoke $r25.<java.io.File: java.lang.String getCanonicalPath()>();

        $i1 = virtualinvoke $r26.<java.lang.String: int length()>();

        i6 = 0;

     label3:
        $i2 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        if i6 >= $i2 goto label4;

        $r33 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r34 = (java.io.File) $r33;

        $r35 = virtualinvoke r34.<java.io.File: java.lang.String getCanonicalPath()>();

        $i5 = $i1 + 1;

        $r36 = virtualinvoke $r35.<java.lang.String: java.lang.String substring(int)>($i5);

        virtualinvoke r0.<repackage.Repackage: void repackageFile(java.lang.String)>($r36);

        i6 = i6 + 1;

        goto label3;

     label4:
        virtualinvoke r0.<repackage.Repackage: void finishMovingFiles()>();

        $i3 = r0.<repackage.Repackage: int _skippedFiles>;

        if $i3 <= 0 goto label5;

        $r28 = <java.lang.System: java.io.PrintStream out>;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Skipped ");

        $i4 = r0.<repackage.Repackage: int _skippedFiles>;

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" unmodified files.");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r32);

     label5:
        return;
    }

    private boolean fileIsUnchanged(java.lang.String)
    {
        long $l0, $l1;
        java.io.File $r3, $r5, $r6, $r7;
        byte $b2;
        int $i3;
        java.lang.String r2;
        repackage.Repackage r1;
        boolean $z0;

        r1 := @this: repackage.Repackage;

        r2 := @parameter0: java.lang.String;

        $r6 = new java.io.File;

        $r3 = r1.<repackage.Repackage: java.io.File _sourceBase>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, r2);

        $r7 = new java.io.File;

        $r5 = r1.<repackage.Repackage: java.io.File _targetBase>;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, r2);

        $l0 = virtualinvoke $r6.<java.io.File: long lastModified()>();

        $l1 = virtualinvoke $r7.<java.io.File: long lastModified()>();

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void repackageFile(java.lang.String) throws java.io.IOException
    {
        char $c0;
        java.lang.StringBuffer $r2, $r3, $r4;
        java.lang.String r0, $r5;
        repackage.Repackage r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: repackage.Repackage;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".java");

        if $z0 == 0 goto label1;

        virtualinvoke r1.<repackage.Repackage: void repackageJavaFile(java.lang.String)>(r0);

        goto label5;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".xsdconfig");

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".g");

        if $z3 == 0 goto label3;

     label2:
        virtualinvoke r1.<repackage.Repackage: void repackageNonJavaFile(java.lang.String)>(r0);

        goto label5;

     label3:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("bin");

        $c0 = <java.io.File: char separatorChar>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $z4 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>($r5);

        if $z4 == 0 goto label4;

        virtualinvoke r1.<repackage.Repackage: void repackageNonJavaFile(java.lang.String)>(r0);

        goto label5;

     label4:
        virtualinvoke r1.<repackage.Repackage: void moveAlongWithJavaFiles(java.lang.String)>(r0);

     label5:
        return;
    }

    public void moveAlongWithJavaFiles(java.lang.String)
    {
        java.util.List $r2;
        java.lang.String r1;
        repackage.Repackage r0;

        r0 := @this: repackage.Repackage;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<repackage.Repackage: java.util.List _moveAlongFiles>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void finishMovingFiles() throws java.io.IOException
    {
        java.util.Iterator $r2;
        java.io.File $r9, $r10;
        java.util.List $r1;
        java.util.Map $r6;
        java.lang.Object $r3, $r7;
        java.lang.String r4, $r5, r8, $r11, r12;
        repackage.Repackage r0;
        boolean $z0, $z1;

        r0 := @this: repackage.Repackage;

        $r1 = r0.<repackage.Repackage: java.util.List _moveAlongFiles>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        r12 = r4;

        $r5 = staticinvoke <repackage.Repackager: java.lang.String dirForPath(java.lang.String)>(r4);

        $r6 = r0.<repackage.Repackage: java.util.Map _movedDirs>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r8 = (java.lang.String) $r7;

        if r8 == null goto label2;

        $r9 = new java.io.File;

        $r10 = new java.io.File;

        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>(r4);

        $r11 = virtualinvoke $r10.<java.io.File: java.lang.String getName()>();

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r8, $r11);

        r12 = virtualinvoke $r9.<java.io.File: java.lang.String toString()>();

     label2:
        $z1 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(".html");

        if $z1 == 0 goto label3;

        virtualinvoke r0.<repackage.Repackage: void repackageNonJavaFile(java.lang.String,java.lang.String)>(r4, r12);

        goto label4;

     label3:
        virtualinvoke r0.<repackage.Repackage: void justMoveNonJavaFile(java.lang.String,java.lang.String)>(r4, r12);

     label4:
        goto label1;

     label5:
        return;
    }

    public void repackageNonJavaFile(java.lang.String) throws java.io.IOException
    {
        long $l0, $l1;
        java.io.File $r3, $r5, $r9, $r10;
        byte $b2;
        repackage.Repackager $r6;
        java.lang.StringBuffer $r7, $r8;
        int $i3, $i4, $i5;
        java.lang.String r2;
        repackage.Repackage r1;

        r1 := @this: repackage.Repackage;

        r2 := @parameter0: java.lang.String;

        $r9 = new java.io.File;

        $r3 = r1.<repackage.Repackage: java.io.File _sourceBase>;

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, r2);

        $r10 = new java.io.File;

        $r5 = r1.<repackage.Repackage: java.io.File _targetBase>;

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, r2);

        $l0 = virtualinvoke $r9.<java.io.File: long lastModified()>();

        $l1 = virtualinvoke $r10.<java.io.File: long lastModified()>();

        $b2 = $l0 cmp $l1;

        $i5 = (int) $b2;

        if $i5 >= 0 goto label1;

        $i3 = r1.<repackage.Repackage: int _skippedFiles>;

        $i4 = $i3 + 1;

        r1.<repackage.Repackage: int _skippedFiles> = $i4;

        goto label2;

     label1:
        $r6 = r1.<repackage.Repackage: repackage.Repackager _repackager>;

        $r7 = virtualinvoke r1.<repackage.Repackage: java.lang.StringBuffer readFile(java.io.File)>($r9);

        $r8 = virtualinvoke $r6.<repackage.Repackager: java.lang.StringBuffer repackage(java.lang.StringBuffer)>($r7);

        virtualinvoke r1.<repackage.Repackage: void writeFile(java.io.File,java.lang.StringBuffer)>($r10, $r8);

     label2:
        return;
    }

    public void repackageNonJavaFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        long $l0, $l1;
        byte $b2;
        repackage.Repackager $r7;
        java.lang.StringBuffer $r8, $r9;
        int $i3, $i4, $i5;
        java.lang.String r2, r5;
        repackage.Repackage r1;
        java.io.File $r3, $r6, $r10, $r11;

        r1 := @this: repackage.Repackage;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r10 = new java.io.File;

        $r3 = r1.<repackage.Repackage: java.io.File _sourceBase>;

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, r2);

        $r11 = new java.io.File;

        $r6 = r1.<repackage.Repackage: java.io.File _targetBase>;

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, r5);

        $l0 = virtualinvoke $r10.<java.io.File: long lastModified()>();

        $l1 = virtualinvoke $r11.<java.io.File: long lastModified()>();

        $b2 = $l0 cmp $l1;

        $i5 = (int) $b2;

        if $i5 >= 0 goto label1;

        $i3 = r1.<repackage.Repackage: int _skippedFiles>;

        $i4 = $i3 + 1;

        r1.<repackage.Repackage: int _skippedFiles> = $i4;

        goto label2;

     label1:
        $r7 = r1.<repackage.Repackage: repackage.Repackager _repackager>;

        $r8 = virtualinvoke r1.<repackage.Repackage: java.lang.StringBuffer readFile(java.io.File)>($r10);

        $r9 = virtualinvoke $r7.<repackage.Repackager: java.lang.StringBuffer repackage(java.lang.StringBuffer)>($r8);

        virtualinvoke r1.<repackage.Repackage: void writeFile(java.io.File,java.lang.StringBuffer)>($r11, $r9);

     label2:
        return;
    }

    public void justMoveNonJavaFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        long $l0, $l1;
        java.io.File $r3, $r6, $r7, $r8;
        byte $b2;
        int $i3, $i4, $i5;
        java.lang.String r2, r5;
        repackage.Repackage r1;

        r1 := @this: repackage.Repackage;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r7 = new java.io.File;

        $r3 = r1.<repackage.Repackage: java.io.File _sourceBase>;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, r2);

        $r8 = new java.io.File;

        $r6 = r1.<repackage.Repackage: java.io.File _targetBase>;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, r5);

        $l0 = virtualinvoke $r7.<java.io.File: long lastModified()>();

        $l1 = virtualinvoke $r8.<java.io.File: long lastModified()>();

        $b2 = $l0 cmp $l1;

        $i5 = (int) $b2;

        if $i5 >= 0 goto label1;

        $i3 = r1.<repackage.Repackage: int _skippedFiles>;

        $i4 = $i3 + 1;

        r1.<repackage.Repackage: int _skippedFiles> = $i4;

        goto label2;

     label1:
        staticinvoke <repackage.Repackage: void copyFile(java.io.File,java.io.File)>($r7, $r8);

     label2:
        return;
    }

    public void repackageJavaFile(java.lang.String) throws java.io.IOException
    {
        byte $b40;
        java.util.Map $r28;
        long $l38, $l39;
        java.lang.StringBuffer $r3, $r9, $r16, $r17, $r21, $r22, $r25, $r30, $r31, $r34, $r36, $r37, $r40, $r44, $r45, $r46, $r48, $r50, $r52, $r54, $r56, $r57, $r59, $r60, $r71, $r72, $r78, $r79, $r92, $r94, $r96, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29, $i30, i31, i32, i33, i34, i35, i36, i37, $i42, $i44, $i46, $i47;
        java.lang.Object $r23, $r32, $r38, $r42, $r49, $r53, $r62, $r64, $r65, $r66, $r67, $r68, $r74, $r75;
        java.util.regex.Matcher $r5;
        java.util.ArrayList $r11, $r13;
        java.lang.String $r10, $r12, $r18, $r24, $r26, $r27, $r33, $r39, $r43, $r73, $r80, r81, r82, r83, r87, r88;
        java.lang.RuntimeException $r93, $r95, $r97;
        java.io.File $r2, $r7, $r90, $r91, $r106, $r107;
        repackage.Repackager $r8;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.util.List $r19, $r61, $r63, r84, r85, r86;
        java.util.regex.Pattern $r4;
        repackage.Repackage r1;
        char $c4, $c16, $c19, $c20, $c21;

        r1 := @this: repackage.Repackage;

        r81 := @parameter0: java.lang.String;

        $r91 = new java.io.File;

        $r2 = r1.<repackage.Repackage: java.io.File _sourceBase>;

        specialinvoke $r91.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, r81);

        $r3 = virtualinvoke r1.<repackage.Repackage: java.lang.StringBuffer readFile(java.io.File)>($r91);

        $r4 = r1.<repackage.Repackage: java.util.regex.Pattern _packagePattern>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label26;

        $r10 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $i2 = virtualinvoke $r5.<java.util.regex.Matcher: int start(int)>(1);

        $i3 = virtualinvoke $r5.<java.util.regex.Matcher: int end(int)>(1);

        $z1 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z1 == 0 goto label01;

        $r93 = new java.lang.RuntimeException;

        $r92 = new java.lang.StringBuffer;

        specialinvoke $r92.<java.lang.StringBuffer: void <init>()>();

        $r78 = virtualinvoke $r92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Two package specifications found: ");

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r81);

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r93.<java.lang.RuntimeException: void <init>(java.lang.String)>($r80);

        throw $r93;

     label01:
        $c4 = <java.io.File: char separatorChar>;

        $r11 = staticinvoke <repackage.Repackager: java.util.ArrayList splitPath(java.lang.String,char)>(r81, $c4);

        $r12 = staticinvoke <repackage.Repackager: java.lang.String dirForPath(java.lang.String)>(r81);

     label02:
        z5 = 0;

        i29 = 1;

     label03:
        $i30 = interfaceinvoke $r11.<java.util.List: int size()>();

        if i29 >= $i30 goto label05;

        $i25 = i29 - 1;

        $r74 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i25);

        r82 = (java.lang.String) $r74;

        $r75 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i29);

        r83 = (java.lang.String) $r75;

        $i26 = virtualinvoke r82.<java.lang.String: int indexOf(int)>(58);

        $i27 = virtualinvoke r83.<java.lang.String: int indexOf(int)>(58);

        if $i26 >= $i27 goto label04;

        $i28 = i29 - 1;

        interfaceinvoke $r11.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i28, r83);

        interfaceinvoke $r11.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i29, r82);

        z5 = 1;

     label04:
        i29 = i29 + 1;

        goto label03;

     label05:
        if z5 != 0 goto label06;

        goto label07;

     label06:
        goto label02;

     label07:
        $r13 = staticinvoke <repackage.Repackager: java.util.ArrayList splitPath(java.lang.String,char)>($r10, 46);

        $i5 = interfaceinvoke $r11.<java.util.List: int size()>();

        i31 = $i5 - 2;

        if i31 < 0 goto label08;

        $i6 = interfaceinvoke $r11.<java.util.List: int size()>();

        $i7 = $i6 - 1;

        $i8 = interfaceinvoke $r13.<java.util.List: int size()>();

        if $i7 >= $i8 goto label09;

     label08:
        $r95 = new java.lang.RuntimeException;

        $r94 = new java.lang.StringBuffer;

        specialinvoke $r94.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r94.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Package spec differs from file path: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r81);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r95.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);

        throw $r95;

     label09:
        $i9 = interfaceinvoke $r13.<java.util.List: int size()>();

        i32 = $i9 - 1;

     label10:
        if i32 < 0 goto label12;

        $r67 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i32);

        $r68 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i31);

        $z4 = virtualinvoke $r67.<java.lang.Object: boolean equals(java.lang.Object)>($r68);

        if $z4 != 0 goto label11;

        $r97 = new java.lang.RuntimeException;

        $r96 = new java.lang.StringBuffer;

        specialinvoke $r96.<java.lang.StringBuffer: void <init>()>();

        $r71 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Package spec differs from file path: ");

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r81);

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r97.<java.lang.RuntimeException: void <init>(java.lang.String)>($r73);

        throw $r97;

     label11:
        $i42 = (int) -1;

        i31 = i31 + $i42;

        $i44 = (int) -1;

        i32 = i32 + $i44;

        goto label10;

     label12:
        r84 = null;

        r85 = null;

        i33 = 0;

     label13:
        $r19 = r1.<repackage.Repackage: java.util.List _fromPackages>;

        $i10 = interfaceinvoke $r19.<java.util.List: int size()>();

        if i33 >= $i10 goto label18;

        $r61 = r1.<repackage.Repackage: java.util.List _fromPackages>;

        $r62 = interfaceinvoke $r61.<java.util.List: java.lang.Object get(int)>(i33);

        r86 = (java.util.List) $r62;

        $i22 = interfaceinvoke r86.<java.util.List: int size()>();

        $i23 = interfaceinvoke $r13.<java.util.List: int size()>();

        if $i22 > $i23 goto label17;

        i34 = 0;

     label14:
        $i24 = interfaceinvoke r86.<java.util.List: int size()>();

        if i34 >= $i24 goto label16;

        $r65 = interfaceinvoke r86.<java.util.List: java.lang.Object get(int)>(i34);

        $r66 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i34);

        $z3 = virtualinvoke $r65.<java.lang.Object: boolean equals(java.lang.Object)>($r66);

        if $z3 != 0 goto label15;

        goto label17;

     label15:
        i34 = i34 + 1;

        goto label14;

     label16:
        r85 = r86;

        $r63 = r1.<repackage.Repackage: java.util.List _toPackages>;

        $r64 = interfaceinvoke $r63.<java.util.List: java.lang.Object get(int)>(i33);

        r84 = (java.util.List) $r64;

        goto label18;

     label17:
        i33 = i33 + 1;

        goto label13;

     label18:
        if r84 == null goto label26;

        r87 = "";

        r88 = "";

        i35 = 0;

     label19:
        $i11 = interfaceinvoke r84.<java.util.List: int size()>();

        if i35 >= $i11 goto label21;

        if i35 <= 0 goto label20;

        $r98 = new java.lang.StringBuffer;

        specialinvoke $r98.<java.lang.StringBuffer: void <init>()>();

        $r56 = virtualinvoke $r98.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r87);

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        r87 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.String toString()>();

        $r99 = new java.lang.StringBuffer;

        specialinvoke $r99.<java.lang.StringBuffer: void <init>()>();

        $r59 = virtualinvoke $r99.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r88);

        $c21 = <java.io.File: char separatorChar>;

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c21);

        r88 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.String toString()>();

     label20:
        $r100 = new java.lang.StringBuffer;

        specialinvoke $r100.<java.lang.StringBuffer: void <init>()>();

        $r48 = virtualinvoke $r100.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r87);

        $r49 = interfaceinvoke r84.<java.util.List: java.lang.Object get(int)>(i35);

        $r50 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r49);

        r87 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.String toString()>();

        $r101 = new java.lang.StringBuffer;

        specialinvoke $r101.<java.lang.StringBuffer: void <init>()>();

        $r52 = virtualinvoke $r101.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r88);

        $r53 = interfaceinvoke r84.<java.util.List: java.lang.Object get(int)>(i35);

        $r54 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r53);

        r88 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.String toString()>();

        i35 = i35 + 1;

        goto label19;

     label21:
        $i12 = interfaceinvoke $r11.<java.util.List: int size()>();

        $i13 = interfaceinvoke $r13.<java.util.List: int size()>();

        $i14 = $i12 - $i13;

        i36 = $i14 - 2;

     label22:
        if i36 < 0 goto label23;

        $r102 = new java.lang.StringBuffer;

        specialinvoke $r102.<java.lang.StringBuffer: void <init>()>();

        $r42 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i36);

        $r43 = (java.lang.String) $r42;

        $r44 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43);

        $c20 = <java.io.File: char separatorChar>;

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c20);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r88);

        r88 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        $i46 = (int) -1;

        i36 = i36 + $i46;

        goto label22;

     label23:
        i37 = interfaceinvoke r85.<java.util.List: int size()>();

     label24:
        $i15 = interfaceinvoke $r13.<java.util.List: int size()>();

        if i37 >= $i15 goto label25;

        $r103 = new java.lang.StringBuffer;

        specialinvoke $r103.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r103.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r88);

        $c19 = <java.io.File: char separatorChar>;

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c19);

        $r32 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i37);

        $r33 = (java.lang.String) $r32;

        $r34 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        r88 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        $r104 = new java.lang.StringBuffer;

        specialinvoke $r104.<java.lang.StringBuffer: void <init>()>();

        $r36 = virtualinvoke $r104.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r87);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r38 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i37);

        $r39 = (java.lang.String) $r38;

        $r40 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        r87 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        i37 = i37 + 1;

        goto label24;

     label25:
        $r105 = new java.lang.StringBuffer;

        specialinvoke $r105.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r105.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r88);

        $c16 = <java.io.File: char separatorChar>;

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c16);

        $i17 = interfaceinvoke $r11.<java.util.List: int size()>();

        $i18 = $i17 - 1;

        $r23 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i18);

        $r24 = (java.lang.String) $r23;

        $r25 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>($i2, $i3, r87);

        r81 = $r26;

        $r27 = staticinvoke <repackage.Repackager: java.lang.String dirForPath(java.lang.String)>($r26);

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z2 != 0 goto label26;

        $r28 = r1.<repackage.Repackage: java.util.Map _movedDirs>;

        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r27);

     label26:
        $r106 = new java.io.File;

        $r90 = r1.<repackage.Repackage: java.io.File _targetBase>;

        specialinvoke $r106.<java.io.File: void <init>(java.io.File,java.lang.String)>($r90, r81);

        $l38 = virtualinvoke $r91.<java.io.File: long lastModified()>();

        $l39 = virtualinvoke $r106.<java.io.File: long lastModified()>();

        $b40 = $l38 cmp $l39;

        $i47 = (int) $b40;

        if $i47 >= 0 goto label27;

        $i0 = r1.<repackage.Repackage: int _skippedFiles>;

        $i1 = $i0 + 1;

        r1.<repackage.Repackage: int _skippedFiles> = $i1;

        return;

     label27:
        $r107 = new java.io.File;

        $r7 = r1.<repackage.Repackage: java.io.File _targetBase>;

        specialinvoke $r107.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, r81);

        $r8 = r1.<repackage.Repackage: repackage.Repackager _repackager>;

        $r9 = virtualinvoke $r8.<repackage.Repackager: java.lang.StringBuffer repackage(java.lang.StringBuffer)>($r3);

        virtualinvoke r1.<repackage.Repackage: void writeFile(java.io.File,java.lang.StringBuffer)>($r107, $r9);

        return;
    }

    void writeFile(java.io.File, java.lang.StringBuffer) throws java.io.IOException
    {
        java.io.FileOutputStream $r2;
        java.io.File r0, $r1;
        java.io.StringReader $r4;
        java.lang.StringBuffer r5;
        java.io.OutputStreamWriter $r3;
        java.lang.String $r6;
        repackage.Repackage r7;

        r7 := @this: repackage.Repackage;

        r0 := @parameter0: java.io.File;

        r5 := @parameter1: java.lang.StringBuffer;

        $r1 = virtualinvoke r0.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>(r0);

        $r3 = new java.io.OutputStreamWriter;

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r2);

        $r4 = new java.io.StringReader;

        $r6 = virtualinvoke r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.io.StringReader: void <init>(java.lang.String)>($r6);

        staticinvoke <repackage.Repackage: void copy(java.io.Reader,java.io.Writer)>($r4, $r3);

        virtualinvoke $r4.<java.io.Reader: void close()>();

        virtualinvoke $r3.<java.io.Writer: void close()>();

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        return;
    }

    java.lang.StringBuffer readFile(java.io.File) throws java.io.IOException
    {
        java.lang.StringBuffer $r4;
        java.io.StringWriter $r3;
        java.io.FileInputStream $r0;
        repackage.Repackage r5;
        java.io.InputStreamReader $r2;
        java.io.File r1;

        r5 := @this: repackage.Repackage;

        r1 := @parameter0: java.io.File;

        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

        $r3 = new java.io.StringWriter;

        specialinvoke $r3.<java.io.StringWriter: void <init>()>();

        staticinvoke <repackage.Repackage: void copy(java.io.Reader,java.io.Writer)>($r2, $r3);

        virtualinvoke $r3.<java.io.StringWriter: void close()>();

        virtualinvoke $r2.<java.io.Reader: void close()>();

        virtualinvoke $r0.<java.io.InputStream: void close()>();

        $r4 = virtualinvoke $r3.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        return $r4;
    }

    java.lang.StringBuffer readInputStream(java.io.InputStream) throws java.io.IOException
    {
        java.lang.StringBuffer $r3;
        java.io.StringWriter $r2;
        repackage.Repackage r4;
        java.io.InputStreamReader $r0;
        java.io.InputStream r1;

        r4 := @this: repackage.Repackage;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new java.io.InputStreamReader;

        specialinvoke $r0.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r1);

        $r2 = new java.io.StringWriter;

        specialinvoke $r2.<java.io.StringWriter: void <init>()>();

        staticinvoke <repackage.Repackage: void copy(java.io.Reader,java.io.Writer)>($r0, $r2);

        virtualinvoke $r2.<java.io.StringWriter: void close()>();

        virtualinvoke $r0.<java.io.Reader: void close()>();

        $r3 = virtualinvoke $r2.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        return $r3;
    }

    public static void copyFile(java.io.File, java.io.File) throws java.io.IOException
    {
        java.io.FileOutputStream $r4;
        java.io.FileInputStream $r2;
        java.io.File r0, $r1, r3;

        r3 := @parameter0: java.io.File;

        r0 := @parameter1: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

        $r4 = new java.io.FileOutputStream;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.io.File)>(r0);

        staticinvoke <repackage.Repackage: void copy(java.io.InputStream,java.io.OutputStream)>($r2, $r4);

        virtualinvoke $r4.<java.io.FileOutputStream: void close()>();

        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

        return;
    }

    public static void copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] r0;
        int $i0, $i1;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        r0 = newarray (byte)[16384];

     label1:
        $i0 = lengthof r0;

        $i1 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r0, 0, $i0);

        if $i1 >= 0 goto label2;

        goto label3;

     label2:
        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r0, 0, $i1);

        goto label1;

     label3:
        return;
    }

    public static void copy(java.io.Reader, java.io.Writer) throws java.io.IOException
    {
        int $i0, $i1;
        java.io.Writer r2;
        char[] r0;
        java.io.Reader r1;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.io.Writer;

        r0 = newarray (char)[16384];

     label1:
        $i0 = lengthof r0;

        $i1 = virtualinvoke r1.<java.io.Reader: int read(char[],int,int)>(r0, 0, $i0);

        if $i1 >= 0 goto label2;

        goto label3;

     label2:
        virtualinvoke r2.<java.io.Writer: void write(char[],int,int)>(r0, 0, $i1);

        goto label1;

     label3:
        return;
    }

    public void fillFiles(java.util.ArrayList, java.io.File) throws java.io.IOException
    {
        java.lang.String[] $r3;
        java.io.File r0, $r6;
        java.util.ArrayList r5;
        int $i0, i1;
        java.lang.String $r1, $r2, $r7;
        repackage.Repackage r4;
        boolean $z0, $z1, $z2;

        r4 := @this: repackage.Repackage;

        r5 := @parameter0: java.util.ArrayList;

        r0 := @parameter1: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label1;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        return;

     label1:
        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("build");

        if $z1 == 0 goto label2;

        return;

     label2:
        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("CVS");

        if $z2 == 0 goto label3;

        return;

     label3:
        $r3 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>();

        i1 = 0;

     label4:
        $i0 = lengthof $r3;

        if i1 >= $i0 goto label5;

        $r6 = new java.io.File;

        $r7 = $r3[i1];

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r7);

        virtualinvoke r4.<repackage.Repackage: void fillFiles(java.util.ArrayList,java.io.File)>(r5, $r6);

        i1 = i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void recursiveDelete(java.io.File) throws java.io.IOException
    {
        java.lang.String[] $r1;
        java.io.File r0, $r3;
        int $i0, i1;
        java.lang.String $r4;
        repackage.Repackage r2;
        boolean $z0, $z1;

        r2 := @this: repackage.Repackage;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label3;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>();

        i1 = 0;

     label2:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        $r3 = new java.io.File;

        $r4 = $r1[i1];

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r4);

        virtualinvoke r2.<repackage.Repackage: void recursiveDelete(java.io.File)>($r3);

        i1 = i1 + 1;

        goto label2;

     label3:
        virtualinvoke r0.<java.io.File: boolean delete()>();

        return;
    }
}
