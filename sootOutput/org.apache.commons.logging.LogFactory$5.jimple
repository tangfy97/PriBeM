class org.apache.commons.logging.LogFactory$5 extends java.lang.Object implements java.security.PrivilegedAction
{
    private final java.net.URL val$url;

    void <init>(java.net.URL)
    {
        org.apache.commons.logging.LogFactory$5 r0;
        java.net.URL r1;

        r0 := @this: org.apache.commons.logging.LogFactory$5;

        r1 := @parameter0: java.net.URL;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.logging.LogFactory$5: java.net.URL val$url> = r1;

        return;
    }

    public java.lang.Object run()
    {
        java.util.Properties $r3;
        java.net.URL $r1, $r7;
        java.io.IOException $r4;
        org.apache.commons.logging.LogFactory$5 r0;
        java.lang.StringBuffer $r5, $r6, $r8;
        java.lang.String $r9;
        java.io.InputStream $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.logging.LogFactory$5;

     label1:
        $r1 = r0.<org.apache.commons.logging.LogFactory$5: java.net.URL val$url>;

        $r2 = virtualinvoke $r1.<java.net.URL: java.io.InputStream openStream()>();

        if $r2 == null goto label3;

        $r3 = new java.util.Properties;

        specialinvoke $r3.<java.util.Properties: void <init>()>();

        virtualinvoke $r3.<java.util.Properties: void load(java.io.InputStream)>($r2);

        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label2:
        return $r3;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>();

        if $z0 == 0 goto label5;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to read URL ");

        $r7 = r0.<org.apache.commons.logging.LogFactory$5: java.net.URL val$url>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r9);

     label5:
        return null;

        catch java.io.IOException from label1 to label2 with label4;
    }
}
