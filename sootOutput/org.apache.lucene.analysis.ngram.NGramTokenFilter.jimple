public final class org.apache.lucene.analysis.ngram.NGramTokenFilter extends org.apache.lucene.analysis.TokenFilter
{
    public static final int DEFAULT_MIN_NGRAM_SIZE;
    public static final int DEFAULT_MAX_NGRAM_SIZE;
    private int minGram;
    private int maxGram;
    private char[] curTermBuffer;
    private int curTermLength;
    private int curGramSize;
    private int curPos;
    private int tokStart;
    private int tokEnd;
    private boolean hasIllegalOffsets;
    private final org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt;
    private final org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt;

    public void <init>(org.apache.lucene.analysis.TokenStream, int, int)
    {
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r3;
        org.apache.lucene.analysis.ngram.NGramTokenFilter r0;
        org.apache.lucene.analysis.TokenStream r1;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r5;
        java.lang.IllegalArgumentException $r6, $r7;
        int i0, i1;
        org.apache.lucene.util.Attribute $r2, $r4;

        r0 := @this: org.apache.lucene.analysis.ngram.NGramTokenFilter;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.lucene.analysis.TokenFilter: void <init>(org.apache.lucene.analysis.TokenStream)>(r1);

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r3 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r2;

        r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r3;

        $r4 = virtualinvoke r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        $r5 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r4;

        r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt> = $r5;

        if i0 >= 1 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("minGram must be greater than zero");

        throw $r7;

     label1:
        if i0 <= i1 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("minGram must not be greater than maxGram");

        throw $r6;

     label2:
        r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int minGram> = i0;

        r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int maxGram> = i1;

        return;
    }

    public void <init>(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.ngram.NGramTokenFilter r0;
        org.apache.lucene.analysis.TokenStream r1;

        r0 := @this: org.apache.lucene.analysis.ngram.NGramTokenFilter;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        specialinvoke r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: void <init>(org.apache.lucene.analysis.TokenStream,int,int)>(r1, 1, 2);

        return;
    }

    public final boolean incrementToken() throws java.io.IOException
    {
        boolean $z0, $z1, $z2;
        org.apache.lucene.analysis.ngram.NGramTokenFilter r0;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r4, $r5, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r3, $r7, $r11;
        org.apache.lucene.analysis.TokenStream $r6;
        char[] $r1, $r2, $r8, $r10;
        java.lang.Object $r9;

        r0 := @this: org.apache.lucene.analysis.ngram.NGramTokenFilter;

     label1:
        $r1 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: char[] curTermBuffer>;

        if $r1 != null goto label5;

        $r6 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: org.apache.lucene.analysis.TokenStream input>;

        $z1 = virtualinvoke $r6.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r7 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r8 = interfaceinvoke $r7.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] buffer()>();

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Object clone()>();

        $r10 = (char[]) $r9;

        r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: char[] curTermBuffer> = $r10;

        $r11 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $i20 = interfaceinvoke $r11.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: int length()>();

        r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curTermLength> = $i20;

        $i21 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int minGram>;

        r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curGramSize> = $i21;

        r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curPos> = 0;

        $r12 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i22 = interfaceinvoke $r12.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int startOffset()>();

        r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int tokStart> = $i22;

        $r13 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i23 = interfaceinvoke $r13.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int endOffset()>();

        r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int tokEnd> = $i23;

        $i25 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int tokStart>;

        $i24 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curTermLength>;

        $i27 = $i25 + $i24;

        $i26 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int tokEnd>;

        if $i27 == $i26 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: boolean hasIllegalOffsets> = $z2;

     label5:
        $i28 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curGramSize>;

        $i29 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int maxGram>;

        if $i28 > $i29 goto label9;

        $i1 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curPos>;

        $i0 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curGramSize>;

        $i3 = $i1 + $i0;

        $i2 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curTermLength>;

        if $i3 > $i2 goto label8;

        virtualinvoke r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: void clearAttributes()>();

        $r3 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r2 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: char[] curTermBuffer>;

        $i7 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curPos>;

        $i6 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curGramSize>;

        interfaceinvoke $r3.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: void copyBuffer(char[],int,int)>($r2, $i7, $i6);

        $z0 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: boolean hasIllegalOffsets>;

        if $z0 == 0 goto label6;

        $r5 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i19 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int tokStart>;

        $i18 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int tokEnd>;

        interfaceinvoke $r5.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i19, $i18);

        goto label7;

     label6:
        $r4 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i9 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int tokStart>;

        $i8 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curPos>;

        $i15 = $i9 + $i8;

        $i11 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int tokStart>;

        $i10 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curPos>;

        $i13 = $i11 + $i10;

        $i12 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curGramSize>;

        $i14 = $i13 + $i12;

        interfaceinvoke $r4.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i15, $i14);

     label7:
        $i16 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curPos>;

        $i17 = $i16 + 1;

        r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curPos> = $i17;

        return 1;

     label8:
        $i4 = r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curGramSize>;

        $i5 = $i4 + 1;

        r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curGramSize> = $i5;

        r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: int curPos> = 0;

        goto label5;

     label9:
        r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: char[] curTermBuffer> = null;

        goto label1;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.lucene.analysis.ngram.NGramTokenFilter r0;

        r0 := @this: org.apache.lucene.analysis.ngram.NGramTokenFilter;

        specialinvoke r0.<org.apache.lucene.analysis.TokenFilter: void reset()>();

        r0.<org.apache.lucene.analysis.ngram.NGramTokenFilter: char[] curTermBuffer> = null;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.analysis.ngram.NGramTokenFilter: int DEFAULT_MAX_NGRAM_SIZE> = 2;

        <org.apache.lucene.analysis.ngram.NGramTokenFilter: int DEFAULT_MIN_NGRAM_SIZE> = 1;

        return;
    }
}
