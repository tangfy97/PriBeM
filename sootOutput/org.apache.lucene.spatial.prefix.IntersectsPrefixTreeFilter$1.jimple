class org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1 extends org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate
{
    private org.apache.lucene.util.FixedBitSet results;
    final org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter this$0;

    void <init>(org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter, org.apache.lucene.index.AtomicReaderContext, org.apache.lucene.util.Bits, boolean)
    {
        org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1 r0;
        org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter r1;
        org.apache.lucene.util.Bits r3;
        org.apache.lucene.index.AtomicReaderContext r2;
        boolean z0;

        r0 := @this: org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1;

        r1 := @parameter0: org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter;

        r2 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        r3 := @parameter2: org.apache.lucene.util.Bits;

        z0 := @parameter3: boolean;

        r0.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1: org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter this$0> = r1;

        specialinvoke r0.<org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VisitorTemplate: void <init>(org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter,org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits,boolean)>(r1, r2, r3, z0);

        return;
    }

    protected void start()
    {
        int $i0;
        org.apache.lucene.util.FixedBitSet $r1;
        org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1 r0;

        r0 := @this: org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1;

        $r1 = new org.apache.lucene.util.FixedBitSet;

        $i0 = r0.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1: int maxDoc>;

        specialinvoke $r1.<org.apache.lucene.util.FixedBitSet: void <init>(int)>($i0);

        r0.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1: org.apache.lucene.util.FixedBitSet results> = $r1;

        return;
    }

    protected org.apache.lucene.search.DocIdSet finish()
    {
        org.apache.lucene.util.FixedBitSet $r1;
        org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1 r0;

        r0 := @this: org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1;

        $r1 = r0.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1: org.apache.lucene.util.FixedBitSet results>;

        return $r1;
    }

    protected boolean visit(org.apache.lucene.spatial.prefix.tree.Cell) throws java.io.IOException
    {
        org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1 r3;
        org.apache.lucene.util.FixedBitSet $r4;
        org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter $r5;
        org.apache.lucene.spatial.prefix.tree.Cell r0;
        int $i0, $i1;
        com.spatial4j.core.shape.SpatialRelation $r1, $r2;

        r3 := @this: org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1;

        r0 := @parameter0: org.apache.lucene.spatial.prefix.tree.Cell;

        $r1 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: com.spatial4j.core.shape.SpatialRelation getShapeRel()>();

        $r2 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation WITHIN>;

        if $r1 == $r2 goto label1;

        $i0 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: int getLevel()>();

        $r5 = r3.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1: org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter this$0>;

        $i1 = $r5.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter: int detailLevel>;

        if $i0 != $i1 goto label2;

     label1:
        $r4 = r3.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1: org.apache.lucene.util.FixedBitSet results>;

        virtualinvoke r3.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1: void collectDocs(org.apache.lucene.util.FixedBitSet)>($r4);

        return 0;

     label2:
        return 1;
    }

    protected void visitLeaf(org.apache.lucene.spatial.prefix.tree.Cell) throws java.io.IOException
    {
        org.apache.lucene.util.FixedBitSet $r1;
        org.apache.lucene.spatial.prefix.tree.Cell r2;
        org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1 r0;

        r0 := @this: org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1;

        r2 := @parameter0: org.apache.lucene.spatial.prefix.tree.Cell;

        $r1 = r0.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1: org.apache.lucene.util.FixedBitSet results>;

        virtualinvoke r0.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1: void collectDocs(org.apache.lucene.util.FixedBitSet)>($r1);

        return;
    }

    protected void visitScanned(org.apache.lucene.spatial.prefix.tree.Cell) throws java.io.IOException
    {
        org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree $r3;
        org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1 r1;
        org.apache.lucene.util.FixedBitSet $r4;
        org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter $r2, $r6;
        org.apache.lucene.spatial.prefix.tree.Cell r0;
        com.spatial4j.core.shape.Shape r5, $r7;
        int $i0, $i1;
        com.spatial4j.core.shape.SpatialRelation $r8;
        boolean $z0, $z1;

        r1 := @this: org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1;

        r0 := @parameter0: org.apache.lucene.spatial.prefix.tree.Cell;

        $i0 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: int getLevel()>();

        $r2 = r1.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1: org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter this$0>;

        $r3 = $r2.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter: org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree grid>;

        $i1 = virtualinvoke $r3.<org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree: int getMaxLevels()>();

        if $i0 != $i1 goto label1;

        $z0 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: boolean isLeaf()>();

        if $z0 != 0 goto label1;

        r5 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: com.spatial4j.core.shape.Point getCenter()>();

        goto label2;

     label1:
        r5 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.tree.Cell: com.spatial4j.core.shape.Shape getShape()>();

     label2:
        $r6 = r1.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1: org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter this$0>;

        $r7 = $r6.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter: com.spatial4j.core.shape.Shape queryShape>;

        $r8 = interfaceinvoke $r7.<com.spatial4j.core.shape.Shape: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Shape)>(r5);

        $z1 = virtualinvoke $r8.<com.spatial4j.core.shape.SpatialRelation: boolean intersects()>();

        if $z1 == 0 goto label3;

        $r4 = r1.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1: org.apache.lucene.util.FixedBitSet results>;

        virtualinvoke r1.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter$1: void collectDocs(org.apache.lucene.util.FixedBitSet)>($r4);

     label3:
        return;
    }
}
