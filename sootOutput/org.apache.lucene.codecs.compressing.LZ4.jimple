final class org.apache.lucene.codecs.compressing.LZ4 extends java.lang.Object
{
    static final int MEMORY_USAGE;
    static final int MIN_MATCH;
    static final int MAX_DISTANCE;
    static final int LAST_LITERALS;
    static final int HASH_LOG_HC;
    static final int HASH_TABLE_SIZE_HC;
    static final int OPTIMAL_ML;
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        org.apache.lucene.codecs.compressing.LZ4 r0;

        r0 := @this: org.apache.lucene.codecs.compressing.LZ4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int hash(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = i0 * -1640531535;

        $i2 = 32 - i1;

        $i4 = $i3 >>> $i2;

        return $i4;
    }

    private static int hashHC(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int hash(int,int)>(i0, 15);

        return $i1;
    }

    private static int readInt(byte[], int)
    {
        byte[] r0;
        short $s2, $s5, $s10, $s15, $s18, $s20, $s22, $s24;
        byte $b1, $b4, $b9, $b14;
        int i0, $i3, $i6, $i7, $i8, $i11, $i12, $i13, $i16, $i17, $i19, $i21, $i23, $i25;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s18 = (short) $b1;

        $s2 = $s18 & 255;

        $i19 = (int) $s2;

        $i7 = $i19 << 24;

        $i3 = i0 + 1;

        $b4 = r0[$i3];

        $s20 = (short) $b4;

        $s5 = $s20 & 255;

        $i21 = (int) $s5;

        $i6 = $i21 << 16;

        $i12 = $i7 | $i6;

        $i8 = i0 + 2;

        $b9 = r0[$i8];

        $s22 = (short) $b9;

        $s10 = $s22 & 255;

        $i23 = (int) $s10;

        $i11 = $i23 << 8;

        $i16 = $i12 | $i11;

        $i13 = i0 + 3;

        $b14 = r0[$i13];

        $s24 = (short) $b14;

        $s15 = $s24 & 255;

        $i25 = (int) $s15;

        $i17 = $i16 | $i25;

        return $i17;
    }

    private static boolean readIntEquals(byte[], int, int)
    {
        byte[] r0;
        int i0, $i1, i2, $i3;
        boolean $z0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $i1 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int readInt(byte[],int)>(r0, i0);

        $i3 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int readInt(byte[],int)>(r0, i2);

        if $i1 != $i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static int commonBytes(byte[], int, int, int)
    {
        byte[] r0;
        java.lang.AssertionError $r2;
        byte $b3, $b4;
        int i0, $i1, $i2, i5, i6, i7, $i8, $i9;
        boolean $z0;

        r0 := @parameter0: byte[];

        i5 := @parameter1: int;

        i6 := @parameter2: int;

        i0 := @parameter3: int;

        $z0 = <org.apache.lucene.codecs.compressing.LZ4: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i5 < i6 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        i7 = 0;

     label2:
        if i6 >= i0 goto label3;

        $i1 = i5;

        i5 = i5 + 1;

        $b4 = r0[$i1];

        $i2 = i6;

        i6 = i6 + 1;

        $b3 = r0[$i2];

        $i8 = (int) $b4;

        $i9 = (int) $b3;

        if $i8 != $i9 goto label3;

        i7 = i7 + 1;

        goto label2;

     label3:
        return i7;
    }

    private static int commonBytesBackward(byte[], int, int, int, int)
    {
        byte[] r0;
        byte $b2, $b3;
        int i0, i1, i4, i5, i6, $i8, $i10, $i11, $i12;

        r0 := @parameter0: byte[];

        i4 := @parameter1: int;

        i5 := @parameter2: int;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i6 = 0;

     label1:
        if i4 <= i0 goto label2;

        if i5 <= i1 goto label2;

        $i8 = (int) -1;

        i4 = i4 + $i8;

        $b3 = r0[i4];

        $i10 = (int) -1;

        i5 = i5 + $i10;

        $b2 = r0[i5];

        $i11 = (int) $b3;

        $i12 = (int) $b2;

        if $i11 != $i12 goto label2;

        i6 = i6 + 1;

        goto label1;

     label2:
        return i6;
    }

    public static int decompress(org.apache.lucene.store.DataInput, int, byte[], int) throws java.io.IOException
    {
        byte[] r0;
        byte $b1, $b3, $b5, $b11, $b15, $b19;
        boolean $z0;
        org.apache.lucene.store.DataInput r1;
        java.lang.AssertionError $r3;
        short $s4, $s6, $s9, $s16, $s18, $s20, $s27, $s32, $s34, $s35, $s43;
        int i0, i2, $i7, $i8, $i10, $i12, $i13, $i14, $i17, i21, i22, i23, i24, i25, i26, $i28, $i29, $i31, $i33, $i36, $i37, $i38, $i39, $i40, $i42, $i44, $i46;

        r1 := @parameter0: org.apache.lucene.store.DataInput;

        i2 := @parameter1: int;

        r0 := @parameter2: byte[];

        i21 := @parameter3: int;

        i0 = lengthof r0;

     label01:
        $b1 = virtualinvoke r1.<org.apache.lucene.store.DataInput: byte readByte()>();

        $s27 = (short) $b1;

        $s9 = $s27 & 255;

        $i28 = (int) $s9;

        $i10 = $i28 >>> 4;

        i22 = $i10;

        if $i10 == 0 goto label05;

        if $i10 != 15 goto label04;

     label02:
        $b19 = virtualinvoke r1.<org.apache.lucene.store.DataInput: byte readByte()>();

        $i29 = (int) $b19;

        $i31 = (int) -1;

        if $i29 != $i31 goto label03;

        i22 = i22 + 255;

        goto label02;

     label03:
        $s32 = (short) $b19;

        $s20 = $s32 & 255;

        $i33 = (int) $s20;

        i22 = i22 + $i33;

     label04:
        virtualinvoke r1.<org.apache.lucene.store.DataInput: void readBytes(byte[],int,int)>(r0, i21, i22);

        i21 = i21 + i22;

     label05:
        if i21 < i2 goto label06;

        goto label16;

     label06:
        $b3 = virtualinvoke r1.<org.apache.lucene.store.DataInput: byte readByte()>();

        $s34 = (short) $b3;

        $s4 = $s34 & 255;

        $b5 = virtualinvoke r1.<org.apache.lucene.store.DataInput: byte readByte()>();

        $s35 = (short) $b5;

        $s6 = $s35 & 255;

        $i36 = (int) $s6;

        $i7 = $i36 << 8;

        $i37 = (int) $s4;

        i23 = $i37 | $i7;

        $z0 = <org.apache.lucene.codecs.compressing.LZ4: boolean $assertionsDisabled>;

        if $z0 != 0 goto label07;

        if i23 > 0 goto label07;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label07:
        $s18 = $s9 & 15;

        $i38 = (int) $s18;

        i24 = $i38;

        $i39 = (int) $s18;

        if $i39 != 15 goto label10;

     label08:
        $b15 = virtualinvoke r1.<org.apache.lucene.store.DataInput: byte readByte()>();

        $i40 = (int) $b15;

        $i42 = (int) -1;

        if $i40 != $i42 goto label09;

        i24 = i24 + 255;

        goto label08;

     label09:
        $s43 = (short) $b15;

        $s16 = $s43 & 255;

        $i44 = (int) $s16;

        i24 = i24 + $i44;

     label10:
        i25 = i24 + 4;

        $i8 = i25 + 7;

        $i46 = (int) -8;

        $i17 = $i8 & $i46;

        if i23 < i25 goto label11;

        $i12 = i21 + $i17;

        if $i12 <= i0 goto label14;

     label11:
        i26 = i21 - i23;

        $i14 = i21 + i25;

     label12:
        if i21 >= $i14 goto label13;

        $b11 = r0[i26];

        r0[i21] = $b11;

        i26 = i26 + 1;

        i21 = i21 + 1;

        goto label12;

     label13:
        goto label15;

     label14:
        $i13 = i21 - i23;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i13, r0, i21, $i17);

        i21 = i21 + i25;

     label15:
        if i21 < i2 goto label01;

     label16:
        return i21;
    }

    private static void encodeLen(int, org.apache.lucene.store.DataOutput) throws java.io.IOException
    {
        byte $b0;
        org.apache.lucene.store.DataOutput r0;
        int i1, $i3;

        i1 := @parameter0: int;

        r0 := @parameter1: org.apache.lucene.store.DataOutput;

     label1:
        if i1 < 255 goto label2;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeByte(byte)>(-1);

        $i3 = (int) -255;

        i1 = i1 + $i3;

        goto label1;

     label2:
        $b0 = (byte) i1;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeByte(byte)>($b0);

        return;
    }

    private static void encodeLiterals(byte[], int, int, int, org.apache.lucene.store.DataOutput) throws java.io.IOException
    {
        byte[] r1;
        byte $b1;
        org.apache.lucene.store.DataOutput r0;
        int i0, i2, i3, $i4;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        i2 := @parameter3: int;

        r0 := @parameter4: org.apache.lucene.store.DataOutput;

        $b1 = (byte) i0;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeByte(byte)>($b1);

        if i2 < 15 goto label1;

        $i4 = i2 - 15;

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void encodeLen(int,org.apache.lucene.store.DataOutput)>($i4, r0);

     label1:
        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeBytes(byte[],int,int)>(r1, i3, i2);

        return;
    }

    private static void encodeLastLiterals(byte[], int, int, org.apache.lucene.store.DataOutput) throws java.io.IOException
    {
        byte[] r0;
        org.apache.lucene.store.DataOutput r1;
        int i0, $i1, i2, i3;

        r0 := @parameter0: byte[];

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: org.apache.lucene.store.DataOutput;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(i0, 15);

        i2 = $i1 << 4;

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void encodeLiterals(byte[],int,int,int,org.apache.lucene.store.DataOutput)>(r0, i2, i3, i0, r1);

        return;
    }

    private static void encodeSequence(byte[], int, int, int, int, org.apache.lucene.store.DataOutput) throws java.io.IOException
    {
        byte[] r0;
        org.apache.lucene.store.DataOutput r1;
        java.lang.AssertionError $r2, $r3;
        byte $b9, $b11;
        int i0, i1, i2, $i3, i4, $i5, $i6, $i7, i8, $i10, $i12, $i13, $i14, $i15;
        boolean $z0, $z1;

        r0 := @parameter0: byte[];

        i1 := @parameter1: int;

        i8 := @parameter2: int;

        i0 := @parameter3: int;

        i4 := @parameter4: int;

        r1 := @parameter5: org.apache.lucene.store.DataOutput;

        i2 = i0 - i1;

        $z0 = <org.apache.lucene.codecs.compressing.LZ4: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i4 >= 4 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i2, 15);

        $i6 = $i3 << 4;

        $i5 = i4 - 4;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i5, 15);

        $i14 = $i6 | $i7;

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void encodeLiterals(byte[],int,int,int,org.apache.lucene.store.DataOutput)>(r0, $i14, i1, i2, r1);

        $i15 = i0 - i8;

        $z1 = <org.apache.lucene.codecs.compressing.LZ4: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        if $i15 <= 0 goto label2;

        if $i15 < 65536 goto label3;

     label2:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label3:
        $b9 = (byte) $i15;

        virtualinvoke r1.<org.apache.lucene.store.DataOutput: void writeByte(byte)>($b9);

        $i10 = $i15 >>> 8;

        $b11 = (byte) $i10;

        virtualinvoke r1.<org.apache.lucene.store.DataOutput: void writeByte(byte)>($b11);

        if i4 < 19 goto label4;

        $i12 = i4 - 15;

        $i13 = $i12 - 4;

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void encodeLen(int,org.apache.lucene.store.DataOutput)>($i13, r1);

     label4:
        return;
    }

    public static void compress(byte[], int, int, org.apache.lucene.store.DataOutput, org.apache.lucene.codecs.compressing.LZ4$HashTable) throws java.io.IOException
    {
        byte[] r0;
        org.apache.lucene.codecs.compressing.LZ4$HashTable r3;
        org.apache.lucene.util.packed.PackedInts$Mutable $r4;
        boolean $z0, $z1;
        org.apache.lucene.store.DataOutput r1;
        long $l6, $l10, $l17;
        java.lang.AssertionError $r2, $r5;
        int i0, i1, i2, $i3, $i4, $i5, $i7, i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, i20, i21, i22, i23, i24, $i25, $i26;

        r0 := @parameter0: byte[];

        i20 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: org.apache.lucene.store.DataOutput;

        r3 := @parameter4: org.apache.lucene.codecs.compressing.LZ4$HashTable;

        i1 = i20 + i0;

        i21 = i20 + 1;

        i22 = i20;

        if i0 <= 9 goto label7;

        i23 = i1 - 5;

        i2 = i23 - 4;

        virtualinvoke r3.<org.apache.lucene.codecs.compressing.LZ4$HashTable: void reset(int)>(i0);

        $i3 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4$HashTable: int access$000(org.apache.lucene.codecs.compressing.LZ4$HashTable)>(r3);

        $r4 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4$HashTable: org.apache.lucene.util.packed.PackedInts$Mutable access$100(org.apache.lucene.codecs.compressing.LZ4$HashTable)>(r3);

     label1:
        if i21 >= i23 goto label7;

     label2:
        if i21 < i2 goto label3;

        goto label7;

     label3:
        $i4 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int readInt(byte[],int)>(r0, i21);

        $i5 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int hash(int,int)>($i4, $i3);

        $l6 = interfaceinvoke $r4.<org.apache.lucene.util.packed.PackedInts$Mutable: long get(int)>($i5);

        $i7 = (int) $l6;

        i8 = i20 + $i7;

        $z0 = <org.apache.lucene.codecs.compressing.LZ4: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $i16 = i21 - i20;

        $l17 = (long) $i16;

        $i18 = staticinvoke <org.apache.lucene.util.packed.PackedInts: int bitsRequired(long)>($l17);

        $i19 = interfaceinvoke $r4.<org.apache.lucene.util.packed.PackedInts$Mutable: int getBitsPerValue()>();

        if $i18 <= $i19 goto label4;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label4:
        $i9 = i21 - i20;

        $l10 = (long) $i9;

        interfaceinvoke $r4.<org.apache.lucene.util.packed.PackedInts$Mutable: void set(int,long)>($i5, $l10);

        $i11 = i21 - i8;

        if $i11 >= 65536 goto label5;

        $i12 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int readInt(byte[],int)>(r0, i8);

        if $i12 != $i4 goto label5;

        goto label6;

     label5:
        i21 = i21 + 1;

        goto label2;

     label6:
        $i14 = i8 + 4;

        $i13 = i21 + 4;

        $i15 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int commonBytes(byte[],int,int,int)>(r0, $i14, $i13, i23);

        i24 = 4 + $i15;

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void encodeSequence(byte[],int,int,int,int,org.apache.lucene.store.DataOutput)>(r0, i22, i8, i21, i24, r1);

        i21 = i21 + i24;

        i22 = i21;

        goto label1;

     label7:
        $i25 = i1 - i22;

        $z1 = <org.apache.lucene.codecs.compressing.LZ4: boolean $assertionsDisabled>;

        if $z1 != 0 goto label8;

        if $i25 >= 5 goto label8;

        if $i25 == i0 goto label8;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label8:
        $i26 = i1 - i22;

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void encodeLastLiterals(byte[],int,int,org.apache.lucene.store.DataOutput)>(r0, i22, $i26, r1);

        return;
    }

    private static void copyTo(org.apache.lucene.codecs.compressing.LZ4$Match, org.apache.lucene.codecs.compressing.LZ4$Match)
    {
        org.apache.lucene.codecs.compressing.LZ4$Match r0, r1;
        int $i0, $i1, $i2;

        r1 := @parameter0: org.apache.lucene.codecs.compressing.LZ4$Match;

        r0 := @parameter1: org.apache.lucene.codecs.compressing.LZ4$Match;

        $i0 = r1.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int len> = $i0;

        $i1 = r1.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int start> = $i1;

        $i2 = r1.<org.apache.lucene.codecs.compressing.LZ4$Match: int ref>;

        r0.<org.apache.lucene.codecs.compressing.LZ4$Match: int ref> = $i2;

        return;
    }

    public static void compressHC(byte[], int, int, org.apache.lucene.store.DataOutput, org.apache.lucene.codecs.compressing.LZ4$HCHashTable) throws java.io.IOException
    {
        byte[] r5;
        org.apache.lucene.store.DataOutput r6;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, i94, i95, $i96, $i97, $i98, i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, i111, $i112, $i113, $i114, $i115, $i116, $i117;
        org.apache.lucene.codecs.compressing.LZ4$HCHashTable r0;
        java.lang.AssertionError $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.codecs.compressing.LZ4$Match $r1, $r2, $r3, $r4;

        r5 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r6 := @parameter3: org.apache.lucene.store.DataOutput;

        r0 := @parameter4: org.apache.lucene.codecs.compressing.LZ4$HCHashTable;

        i2 = i0 + i1;

        i3 = i2 - 5;

        i94 = i0 + 1;

        i95 = i0;

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4$HCHashTable: void access$700(org.apache.lucene.codecs.compressing.LZ4$HCHashTable,int)>(r0, i0);

        $r1 = new org.apache.lucene.codecs.compressing.LZ4$Match;

        specialinvoke $r1.<org.apache.lucene.codecs.compressing.LZ4$Match: void <init>(org.apache.lucene.codecs.compressing.LZ4$1)>(null);

        $r2 = new org.apache.lucene.codecs.compressing.LZ4$Match;

        specialinvoke $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: void <init>(org.apache.lucene.codecs.compressing.LZ4$1)>(null);

        $r3 = new org.apache.lucene.codecs.compressing.LZ4$Match;

        specialinvoke $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: void <init>(org.apache.lucene.codecs.compressing.LZ4$1)>(null);

        $r4 = new org.apache.lucene.codecs.compressing.LZ4$Match;

        specialinvoke $r4.<org.apache.lucene.codecs.compressing.LZ4$Match: void <init>(org.apache.lucene.codecs.compressing.LZ4$1)>(null);

     label01:
        if i94 >= i3 goto label27;

        $z0 = virtualinvoke r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: boolean insertAndFindBestMatch(byte[],int,int,org.apache.lucene.codecs.compressing.LZ4$Match)>(r5, i94, i3, $r2);

        if $z0 != 0 goto label02;

        i94 = i94 + 1;

        goto label01;

     label02:
        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void copyTo(org.apache.lucene.codecs.compressing.LZ4$Match,org.apache.lucene.codecs.compressing.LZ4$Match)>($r2, $r1);

     label03:
        $z3 = <org.apache.lucene.codecs.compressing.LZ4: boolean $assertionsDisabled>;

        if $z3 != 0 goto label04;

        $i93 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        if $i93 >= i95 goto label04;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label04:
        $i5 = virtualinvoke $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        if $i5 >= i3 goto label05;

        $i10 = virtualinvoke $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        $i14 = $i10 - 2;

        $i11 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i13 = $i11 + 1;

        $i12 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        $z1 = virtualinvoke r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: boolean insertAndFindWiderMatch(byte[],int,int,int,int,org.apache.lucene.codecs.compressing.LZ4$Match)>(r5, $i14, $i13, i3, $i12, $r3);

        if $z1 != 0 goto label06;

     label05:
        $i8 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int ref>;

        $i7 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i6 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void encodeSequence(byte[],int,int,int,int,org.apache.lucene.store.DataOutput)>(r5, i95, $i8, $i7, $i6, r6);

        $i9 = virtualinvoke $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        i94 = $i9;

        i95 = $i9;

        goto label01;

     label06:
        $i16 = $r1.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i15 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        if $i16 >= $i15 goto label07;

        $i92 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i90 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i89 = $r1.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        $i91 = $i90 + $i89;

        if $i92 >= $i91 goto label07;

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void copyTo(org.apache.lucene.codecs.compressing.LZ4$Match,org.apache.lucene.codecs.compressing.LZ4$Match)>($r1, $r2);

     label07:
        $z4 = <org.apache.lucene.codecs.compressing.LZ4: boolean $assertionsDisabled>;

        if $z4 != 0 goto label08;

        $i88 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i87 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        if $i88 > $i87 goto label08;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label08:
        $i18 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i17 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i19 = $i18 - $i17;

        if $i19 >= 3 goto label09;

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void copyTo(org.apache.lucene.codecs.compressing.LZ4$Match,org.apache.lucene.codecs.compressing.LZ4$Match)>($r3, $r2);

        goto label03;

     label09:
        $i96 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i97 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i98 = $i96 - $i97;

        if $i98 >= 18 goto label12;

        i99 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        if i99 <= 18 goto label10;

        i99 = 18;

     label10:
        $i74 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i75 = $i74 + i99;

        $i76 = virtualinvoke $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        $i77 = $i76 - 4;

        if $i75 <= $i77 goto label11;

        $i82 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i81 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i84 = $i82 - $i81;

        $i83 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        $i85 = $i84 + $i83;

        i99 = $i85 - 4;

     label11:
        $i79 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i78 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i80 = $i79 - $i78;

        $i86 = i99 - $i80;

        if $i86 <= 0 goto label12;

        virtualinvoke $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: void fix(int)>($i86);

     label12:
        $i100 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i101 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        $i102 = $i100 + $i101;

        if $i102 >= i3 goto label13;

        $i41 = virtualinvoke $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        $i44 = $i41 - 3;

        $i43 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i42 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        $z2 = virtualinvoke r0.<org.apache.lucene.codecs.compressing.LZ4$HCHashTable: boolean insertAndFindWiderMatch(byte[],int,int,int,int,org.apache.lucene.codecs.compressing.LZ4$Match)>(r5, $i44, $i43, i3, $i42, $r4);

        if $z2 != 0 goto label19;

     label13:
        $i20 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i21 = virtualinvoke $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        if $i20 >= $i21 goto label18;

        $i23 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i22 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i24 = $i23 - $i22;

        if $i24 >= 18 goto label17;

        $i28 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        if $i28 <= 18 goto label14;

        $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int len> = 18;

     label14:
        $i29 = virtualinvoke $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        $i30 = virtualinvoke $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        $i31 = $i30 - 4;

        if $i29 <= $i31 goto label15;

        $i36 = virtualinvoke $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        $i37 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i38 = $i36 - $i37;

        $i39 = $i38 - 4;

        $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int len> = $i39;

     label15:
        $i35 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        $i33 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i32 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i34 = $i33 - $i32;

        $i40 = $i35 - $i34;

        if $i40 <= 0 goto label16;

        virtualinvoke $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: void fix(int)>($i40);

     label16:
        goto label18;

     label17:
        $i26 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i25 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i27 = $i26 - $i25;

        $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int len> = $i27;

     label18:
        $i103 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int ref>;

        $i104 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i105 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void encodeSequence(byte[],int,int,int,int,org.apache.lucene.store.DataOutput)>(r5, i95, $i103, $i104, $i105, r6);

        $i106 = virtualinvoke $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        $i107 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int ref>;

        $i108 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i109 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void encodeSequence(byte[],int,int,int,int,org.apache.lucene.store.DataOutput)>(r5, $i106, $i107, $i108, $i109, r6);

        $i110 = virtualinvoke $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        i94 = $i110;

        i95 = $i110;

        goto label01;

     label19:
        $i45 = $r4.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i46 = virtualinvoke $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        $i47 = $i46 + 3;

        if $i45 >= $i47 goto label22;

        $i67 = $r4.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i68 = virtualinvoke $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        if $i67 < $i68 goto label21;

        $i69 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i70 = virtualinvoke $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        if $i69 >= $i70 goto label20;

        $i71 = virtualinvoke $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        $i72 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        i111 = $i71 - $i72;

        virtualinvoke $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: void fix(int)>(i111);

        $i73 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        if $i73 >= 4 goto label20;

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void copyTo(org.apache.lucene.codecs.compressing.LZ4$Match,org.apache.lucene.codecs.compressing.LZ4$Match)>($r4, $r3);

     label20:
        $i112 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int ref>;

        $i113 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i114 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void encodeSequence(byte[],int,int,int,int,org.apache.lucene.store.DataOutput)>(r5, i95, $i112, $i113, $i114, r6);

        i95 = virtualinvoke $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void copyTo(org.apache.lucene.codecs.compressing.LZ4$Match,org.apache.lucene.codecs.compressing.LZ4$Match)>($r4, $r2);

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void copyTo(org.apache.lucene.codecs.compressing.LZ4$Match,org.apache.lucene.codecs.compressing.LZ4$Match)>($r3, $r1);

        goto label03;

     label21:
        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void copyTo(org.apache.lucene.codecs.compressing.LZ4$Match,org.apache.lucene.codecs.compressing.LZ4$Match)>($r4, $r3);

        goto label09;

     label22:
        $i48 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i49 = virtualinvoke $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        if $i48 >= $i49 goto label26;

        $i51 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i50 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i52 = $i51 - $i50;

        if $i52 >= 15 goto label25;

        $i56 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        if $i56 <= 18 goto label23;

        $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int len> = 18;

     label23:
        $i57 = virtualinvoke $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        $i58 = virtualinvoke $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        $i59 = $i58 - 4;

        if $i57 <= $i59 goto label24;

        $i62 = virtualinvoke $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        $i63 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i64 = $i62 - $i63;

        $i65 = $i64 - 4;

        $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int len> = $i65;

     label24:
        $i60 = virtualinvoke $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        $i61 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i66 = $i60 - $i61;

        virtualinvoke $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: void fix(int)>($i66);

        goto label26;

     label25:
        $i54 = $r3.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i53 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i55 = $i54 - $i53;

        $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int len> = $i55;

     label26:
        $i115 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int ref>;

        $i116 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int start>;

        $i117 = $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int len>;

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void encodeSequence(byte[],int,int,int,int,org.apache.lucene.store.DataOutput)>(r5, i95, $i115, $i116, $i117, r6);

        i95 = virtualinvoke $r2.<org.apache.lucene.codecs.compressing.LZ4$Match: int end()>();

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void copyTo(org.apache.lucene.codecs.compressing.LZ4$Match,org.apache.lucene.codecs.compressing.LZ4$Match)>($r3, $r2);

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void copyTo(org.apache.lucene.codecs.compressing.LZ4$Match,org.apache.lucene.codecs.compressing.LZ4$Match)>($r4, $r3);

        goto label09;

     label27:
        $i4 = i2 - i95;

        staticinvoke <org.apache.lucene.codecs.compressing.LZ4: void encodeLastLiterals(byte[],int,int,org.apache.lucene.store.DataOutput)>(r5, i95, $i4, r6);

        return;
    }

    static int access$200(byte[], int)
    {
        int i0, $i1;
        byte[] r0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int readInt(byte[],int)>(r0, i0);

        return $i1;
    }

    static int access$300(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int hashHC(int)>(i0);

        return $i1;
    }

    static boolean access$400(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: boolean readIntEquals(byte[],int,int)>(r0, i0, i1);

        return $z0;
    }

    static int access$500(byte[], int, int, int)
    {
        byte[] r0;
        int i0, i1, i2, $i3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int commonBytes(byte[],int,int,int)>(r0, i0, i1, i2);

        return $i3;
    }

    static int access$600(byte[], int, int, int, int)
    {
        byte[] r0;
        int i0, i1, i2, i3, $i4;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i4 = staticinvoke <org.apache.lucene.codecs.compressing.LZ4: int commonBytesBackward(byte[],int,int,int,int)>(r0, i0, i1, i2, i3);

        return $i4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.codecs.compressing.LZ4: int OPTIMAL_ML> = 18;

        <org.apache.lucene.codecs.compressing.LZ4: int HASH_TABLE_SIZE_HC> = 32768;

        <org.apache.lucene.codecs.compressing.LZ4: int HASH_LOG_HC> = 15;

        <org.apache.lucene.codecs.compressing.LZ4: int LAST_LITERALS> = 5;

        <org.apache.lucene.codecs.compressing.LZ4: int MAX_DISTANCE> = 65536;

        <org.apache.lucene.codecs.compressing.LZ4: int MIN_MATCH> = 4;

        <org.apache.lucene.codecs.compressing.LZ4: int MEMORY_USAGE> = 14;

        $r0 = class "Lorg/apache/lucene/codecs/compressing/LZ4;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.compressing.LZ4: boolean $assertionsDisabled> = $z1;

        return;
    }
}
