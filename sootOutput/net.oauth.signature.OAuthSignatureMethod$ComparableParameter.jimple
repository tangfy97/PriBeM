class net.oauth.signature.OAuthSignatureMethod$ComparableParameter extends java.lang.Object implements java.lang.Comparable
{
    final java.util.Map$Entry value;
    private final java.lang.String key;

    void <init>(java.util.Map$Entry)
    {
        net.oauth.signature.OAuthSignatureMethod$ComparableParameter r0;
        java.util.Map$Entry r1;
        java.lang.Object $r2, $r4;
        java.lang.StringBuilder $r6, $r8, $r9, $r11;
        java.lang.String $r3, $r5, $r7, $r10, $r12;

        r0 := @this: net.oauth.signature.OAuthSignatureMethod$ComparableParameter;

        r1 := @parameter0: java.util.Map$Entry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.oauth.signature.OAuthSignatureMethod$ComparableParameter: java.util.Map$Entry value> = r1;

        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = staticinvoke <net.oauth.signature.OAuthSignatureMethod$ComparableParameter: java.lang.String toString(java.lang.Object)>($r2);

        $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = staticinvoke <net.oauth.signature.OAuthSignatureMethod$ComparableParameter: java.lang.String toString(java.lang.Object)>($r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <net.oauth.OAuth: java.lang.String percentEncode(java.lang.String)>($r3);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r10 = staticinvoke <net.oauth.OAuth: java.lang.String percentEncode(java.lang.String)>($r5);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<net.oauth.signature.OAuthSignatureMethod$ComparableParameter: java.lang.String key> = $r12;

        return;
    }

    private static java.lang.String toString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r1;
    }

    public int compareTo(net.oauth.signature.OAuthSignatureMethod$ComparableParameter)
    {
        net.oauth.signature.OAuthSignatureMethod$ComparableParameter r0, r1;
        int $i0;
        java.lang.String $r2, $r3;

        r0 := @this: net.oauth.signature.OAuthSignatureMethod$ComparableParameter;

        r1 := @parameter0: net.oauth.signature.OAuthSignatureMethod$ComparableParameter;

        $r3 = r0.<net.oauth.signature.OAuthSignatureMethod$ComparableParameter: java.lang.String key>;

        $r2 = r1.<net.oauth.signature.OAuthSignatureMethod$ComparableParameter: java.lang.String key>;

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r2);

        return $i0;
    }

    public java.lang.String toString()
    {
        net.oauth.signature.OAuthSignatureMethod$ComparableParameter r0;
        java.lang.String $r1;

        r0 := @this: net.oauth.signature.OAuthSignatureMethod$ComparableParameter;

        $r1 = r0.<net.oauth.signature.OAuthSignatureMethod$ComparableParameter: java.lang.String key>;

        return $r1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        net.oauth.signature.OAuthSignatureMethod$ComparableParameter r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: net.oauth.signature.OAuthSignatureMethod$ComparableParameter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (net.oauth.signature.OAuthSignatureMethod$ComparableParameter) r1;

        $i0 = virtualinvoke r0.<net.oauth.signature.OAuthSignatureMethod$ComparableParameter: int compareTo(net.oauth.signature.OAuthSignatureMethod$ComparableParameter)>($r2);

        return $i0;
    }
}
