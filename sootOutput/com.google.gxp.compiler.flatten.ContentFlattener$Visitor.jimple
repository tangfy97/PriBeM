class com.google.gxp.compiler.flatten.ContentFlattener$Visitor extends com.google.gxp.compiler.base.ExhaustiveExpressionVisitor
{
    private final com.google.gxp.compiler.alerts.AlertSink alertSink;

    void <init>(com.google.gxp.compiler.alerts.AlertSink)
    {
        com.google.gxp.compiler.alerts.AlertSink r1, $r3;
        com.google.gxp.compiler.flatten.ContentFlattener$Visitor r0;
        java.lang.Object $r2;

        r0 := @this: com.google.gxp.compiler.flatten.ContentFlattener$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.alerts.AlertSink;

        specialinvoke r0.<com.google.gxp.compiler.base.ExhaustiveExpressionVisitor: void <init>()>();

        $r2 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (com.google.gxp.compiler.alerts.AlertSink) $r2;

        r0.<com.google.gxp.compiler.flatten.ContentFlattener$Visitor: com.google.gxp.compiler.alerts.AlertSink alertSink> = $r3;

        return;
    }

    private com.google.gxp.compiler.base.Expression flattenDocType(com.google.gxp.compiler.base.OutputElement, com.google.gxp.compiler.schema.DocType)
    {
        com.google.gxp.compiler.base.Expression r18;
        java.lang.Object[] $r6;
        com.google.gxp.compiler.base.Conditional $r12;
        com.google.gxp.compiler.schema.Schema $r1;
        com.google.gxp.compiler.base.IsXmlExpression $r13;
        com.google.gxp.compiler.base.ExceptionExpression$Kind $r11;
        java.lang.String $r4, $r5, $r7, $r8, $r15, $r16;
        com.google.gxp.compiler.schema.DocType r3;
        boolean $z0;
        com.google.gxp.compiler.alerts.SourcePosition $r10;
        com.google.gxp.compiler.base.ExceptionExpression $r9;
        com.google.gxp.compiler.flatten.ContentFlattener$Visitor r17;
        com.google.gxp.compiler.base.StringConstant $r2, $r14;
        com.google.gxp.compiler.base.OutputElement r0;

        r17 := @this: com.google.gxp.compiler.flatten.ContentFlattener$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.OutputElement;

        r3 := @parameter1: com.google.gxp.compiler.schema.DocType;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r2 = new com.google.gxp.compiler.base.StringConstant;

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.base.OutputElement: java.lang.String getLocalName()>();

        $r5 = virtualinvoke r3.<com.google.gxp.compiler.schema.DocType: java.lang.String toXml(java.lang.String)>($r4);

        specialinvoke $r2.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r0, $r1, $r5);

        $z0 = virtualinvoke r3.<com.google.gxp.compiler.schema.DocType: boolean isSgmlCompatible()>();

        if $z0 == 0 goto label1;

        $r14 = new com.google.gxp.compiler.base.StringConstant;

        $r15 = virtualinvoke r0.<com.google.gxp.compiler.base.OutputElement: java.lang.String getLocalName()>();

        $r16 = virtualinvoke r3.<com.google.gxp.compiler.schema.DocType: java.lang.String toSgml(java.lang.String)>($r15);

        specialinvoke $r14.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r0, $r1, $r16);

        r18 = $r14;

        goto label2;

     label1:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke r3.<com.google.gxp.compiler.schema.DocType: java.lang.String getName()>();

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Doctype \'%s\' incompatible with non-XML syntax", $r6);

        $r9 = new com.google.gxp.compiler.base.ExceptionExpression;

        $r10 = virtualinvoke r0.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r11 = <com.google.gxp.compiler.base.ExceptionExpression$Kind: com.google.gxp.compiler.base.ExceptionExpression$Kind NOT_SUPPORTED_IN_SGML_MODE>;

        specialinvoke $r9.<com.google.gxp.compiler.base.ExceptionExpression: void <init>(com.google.gxp.compiler.alerts.SourcePosition,com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.ExceptionExpression$Kind,java.lang.String)>($r10, $r1, $r11, $r8);

        r18 = $r9;

     label2:
        $r12 = new com.google.gxp.compiler.base.Conditional;

        $r13 = new com.google.gxp.compiler.base.IsXmlExpression;

        specialinvoke $r13.<com.google.gxp.compiler.base.IsXmlExpression: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema)>(r0, $r1);

        specialinvoke $r12.<com.google.gxp.compiler.base.Conditional: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>(r0, $r1, $r13, $r2, r18);

        return $r12;
    }

    private com.google.gxp.compiler.base.Expression flattenXmlns(com.google.gxp.compiler.base.OutputElement)
    {
        com.google.gxp.compiler.base.Expression $r14;
        com.google.gxp.compiler.base.Conditional $r11;
        com.google.gxp.compiler.schema.Schema $r1;
        com.google.gxp.compiler.base.IsXmlExpression $r12;
        java.util.ArrayList $r3;
        java.lang.String $r2, $r5, $r9, $r18;
        com.google.gxp.com.google.common.base.CharEscaper $r8;
        com.google.gxp.compiler.alerts.SourcePosition $r13;
        com.google.gxp.compiler.flatten.ContentFlattener$Visitor r19;
        com.google.gxp.compiler.base.StringConstant $r4, $r6, $r7, $r10, $r15, $r16, $r17;
        com.google.gxp.compiler.base.OutputElement r0;

        r19 := @this: com.google.gxp.compiler.flatten.ContentFlattener$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.OutputElement;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r2 = virtualinvoke $r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getNamespaceUri()>();

        $r3 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r4 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r4.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r0, $r1, " xmlns");

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getTagPrefix()>();

        if $r5 == null goto label1;

        $r16 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r16.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r0, $r1, ":");

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r17 = new com.google.gxp.compiler.base.StringConstant;

        $r18 = virtualinvoke $r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getTagPrefix()>();

        specialinvoke $r17.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r0, $r1, $r18);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r17);

     label1:
        $r6 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r6.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r0, $r1, "=\"");

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = new com.google.gxp.compiler.base.StringConstant;

        $r8 = staticinvoke <com.google.gxp.com.google.common.base.CharEscapers: com.google.gxp.com.google.common.base.CharEscaper xmlEscaper()>();

        $r9 = virtualinvoke $r8.<com.google.gxp.com.google.common.base.CharEscaper: java.lang.String escape(java.lang.String)>($r2);

        specialinvoke $r7.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r0, $r1, $r9);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r10 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r10.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r0, $r1, "\"");

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r11 = new com.google.gxp.compiler.base.Conditional;

        $r12 = new com.google.gxp.compiler.base.IsXmlExpression;

        specialinvoke $r12.<com.google.gxp.compiler.base.IsXmlExpression: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema)>(r0, $r1);

        $r13 = virtualinvoke r0.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r14 = staticinvoke <com.google.gxp.compiler.base.Concatenation: com.google.gxp.compiler.base.Expression create(com.google.gxp.compiler.alerts.SourcePosition,com.google.gxp.compiler.schema.Schema,java.util.List)>($r13, $r1, $r3);

        $r15 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r15.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r0, $r1, "");

        specialinvoke $r11.<com.google.gxp.compiler.base.Conditional: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>(r0, $r1, $r12, $r14, $r15);

        return $r11;
    }

    public com.google.gxp.compiler.base.Expression visitOutputElement(com.google.gxp.compiler.base.OutputElement)
    {
        com.google.gxp.compiler.schema.Schema $r3;
        java.lang.StringBuilder $r21, $r23, $r24, $r27, $r28, $r29, $r55, $r56, $r57;
        com.google.gxp.compiler.schema.ElementValidator$Flag $r13, $r18;
        com.google.gxp.compiler.base.AttrBundleReference $r37;
        com.google.gxp.compiler.base.Expression $r15, $r44, $r45, $r47, $r48, $r51, $r52, $r53, $r59, r61, $r65;
        com.google.gxp.compiler.base.IsXmlExpression $r32;
        com.google.gxp.compiler.base.ConvertibleToContent r62;
        java.util.ArrayList $r0;
        java.lang.String $r4, $r8, $r22, $r25, $r30, $r39, $r43, $r58, r63;
        com.google.gxp.compiler.base.EscapeExpression $r36;
        com.google.gxp.compiler.reparent.Attribute r60;
        com.google.gxp.compiler.base.OutputElement r1;
        com.google.gxp.compiler.base.Conditional $r31, $r46, $r50;
        com.google.gxp.compiler.schema.DocType $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.google.gxp.compiler.flatten.ContentFlattener$Visitor r16;
        java.util.List $r9, $r11;
        com.google.gxp.compiler.schema.AttributeValidator$Flag $r42;
        com.google.gxp.compiler.schema.ElementValidator $r2;
        com.google.gxp.compiler.alerts.SourcePosition $r64;
        java.util.Iterator $r10, $r12;
        com.google.gxp.compiler.base.StringConstant $r6, $r7, $r14, $r19, $r20, $r26, $r33, $r34, $r41, $r54;
        com.google.gxp.compiler.schema.AttributeValidator $r40;
        java.lang.Object $r17, $r35, $r38, $r49;

        r16 := @this: com.google.gxp.compiler.flatten.ContentFlattener$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.OutputElement;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.schema.ElementValidator getValidator()>();

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r4 = virtualinvoke $r3.<com.google.gxp.compiler.schema.Schema: java.lang.String getTagPrefix()>();

        $r5 = virtualinvoke r1.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.schema.DocType getDocType()>();

        if $r5 == null goto label01;

        $r59 = specialinvoke r16.<com.google.gxp.compiler.flatten.ContentFlattener$Visitor: com.google.gxp.compiler.base.Expression flattenDocType(com.google.gxp.compiler.base.OutputElement,com.google.gxp.compiler.schema.DocType)>(r1, $r5);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r59);

     label01:
        $r6 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r6.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r1, $r3, "<");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        if $r4 == null goto label02;

        $r54 = new com.google.gxp.compiler.base.StringConstant;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r1, $r3, $r58);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r54);

     label02:
        $r7 = new com.google.gxp.compiler.base.StringConstant;

        $r8 = virtualinvoke r1.<com.google.gxp.compiler.base.OutputElement: java.lang.String getLocalName()>();

        specialinvoke $r7.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r1, $r3, $r8);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        if $r5 == null goto label03;

        $r53 = specialinvoke r16.<com.google.gxp.compiler.flatten.ContentFlattener$Visitor: com.google.gxp.compiler.base.Expression flattenXmlns(com.google.gxp.compiler.base.OutputElement)>(r1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r53);

     label03:
        $r9 = virtualinvoke r1.<com.google.gxp.compiler.base.OutputElement: java.util.List getAttributes()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z6 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label11;

        $r38 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r60 = (com.google.gxp.compiler.reparent.Attribute) $r38;

        $r39 = virtualinvoke r60.<com.google.gxp.compiler.reparent.Attribute: java.lang.String getName()>();

        $r40 = virtualinvoke $r2.<com.google.gxp.compiler.schema.ElementValidator: com.google.gxp.compiler.schema.AttributeValidator getAttributeValidator(java.lang.String)>($r39);

        $r41 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r41.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r60, $r3, "");

        $r42 = <com.google.gxp.compiler.schema.AttributeValidator$Flag: com.google.gxp.compiler.schema.AttributeValidator$Flag BOOLEAN>;

        $z3 = virtualinvoke $r40.<com.google.gxp.compiler.schema.AttributeValidator: boolean isFlagSet(com.google.gxp.compiler.schema.AttributeValidator$Flag)>($r42);

        if $z3 == 0 goto label08;

        $r48 = virtualinvoke r60.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        $r49 = virtualinvoke $r48.<com.google.gxp.compiler.base.Expression: java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)>(r16);

        r61 = (com.google.gxp.compiler.base.Expression) $r49;

        $z4 = virtualinvoke r61.<com.google.gxp.compiler.base.Expression: boolean hasStaticString()>();

        if $z4 == 0 goto label05;

        $r52 = specialinvoke r16.<com.google.gxp.compiler.flatten.ContentFlattener$Visitor: com.google.gxp.compiler.base.Expression buildBooleanAttrExpression(com.google.gxp.compiler.reparent.Attribute,com.google.gxp.compiler.base.OutputElement)>(r60, r1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r52);

        goto label07;

     label05:
        $z5 = r61 instanceof com.google.gxp.compiler.base.ConvertibleToContent;

        if $z5 == 0 goto label06;

        r62 = (com.google.gxp.compiler.base.ConvertibleToContent) r61;

        r61 = virtualinvoke r62.<com.google.gxp.compiler.base.ConvertibleToContent: com.google.gxp.compiler.base.Expression getSubexpression()>();

     label06:
        $r50 = new com.google.gxp.compiler.base.Conditional;

        $r51 = specialinvoke r16.<com.google.gxp.compiler.flatten.ContentFlattener$Visitor: com.google.gxp.compiler.base.Expression buildBooleanAttrExpression(com.google.gxp.compiler.reparent.Attribute,com.google.gxp.compiler.base.OutputElement)>(r60, r1);

        specialinvoke $r50.<com.google.gxp.compiler.base.Conditional: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>(r1, $r3, r61, $r51, $r41);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r50);

     label07:
        goto label10;

     label08:
        $r43 = virtualinvoke $r40.<com.google.gxp.compiler.schema.AttributeValidator: java.lang.String getExample()>();

        $r44 = virtualinvoke r60.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getCondition()>();

        if $r44 == null goto label09;

        $r46 = new com.google.gxp.compiler.base.Conditional;

        $r47 = specialinvoke r16.<com.google.gxp.compiler.flatten.ContentFlattener$Visitor: com.google.gxp.compiler.base.Expression buildAttrExpression(com.google.gxp.compiler.reparent.Attribute,com.google.gxp.compiler.base.OutputElement,java.lang.String)>(r60, r1, $r43);

        specialinvoke $r46.<com.google.gxp.compiler.base.Conditional: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>(r1, $r3, $r44, $r47, $r41);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r46);

        goto label10;

     label09:
        $r45 = specialinvoke r16.<com.google.gxp.compiler.flatten.ContentFlattener$Visitor: com.google.gxp.compiler.base.Expression buildAttrExpression(com.google.gxp.compiler.reparent.Attribute,com.google.gxp.compiler.base.OutputElement,java.lang.String)>(r60, r1, $r43);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r45);

     label10:
        goto label04;

     label11:
        $r11 = virtualinvoke r1.<com.google.gxp.compiler.base.OutputElement: java.util.List getAttrBundles()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r35 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r63 = (java.lang.String) $r35;

        $r36 = new com.google.gxp.compiler.base.EscapeExpression;

        $r37 = new com.google.gxp.compiler.base.AttrBundleReference;

        specialinvoke $r37.<com.google.gxp.compiler.base.AttrBundleReference: void <init>(com.google.gxp.compiler.base.Node,java.lang.String)>(r1, r63);

        specialinvoke $r36.<com.google.gxp.compiler.base.EscapeExpression: void <init>(com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.Expression)>($r3, $r37);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r36);

        goto label12;

     label13:
        $r13 = <com.google.gxp.compiler.schema.ElementValidator$Flag: com.google.gxp.compiler.schema.ElementValidator$Flag NOENDTAG>;

        $z1 = virtualinvoke $r2.<com.google.gxp.compiler.schema.ElementValidator: boolean isFlagSet(com.google.gxp.compiler.schema.ElementValidator$Flag)>($r13);

        if $z1 == 0 goto label14;

        $r31 = new com.google.gxp.compiler.base.Conditional;

        $r32 = new com.google.gxp.compiler.base.IsXmlExpression;

        specialinvoke $r32.<com.google.gxp.compiler.base.IsXmlExpression: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema)>(r1, $r3);

        $r33 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r33.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r1, $r3, " /");

        $r34 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r34.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r1, $r3, "");

        specialinvoke $r31.<com.google.gxp.compiler.base.Conditional: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>(r1, $r3, $r32, $r33, $r34);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r31);

     label14:
        $r14 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r14.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r1, $r3, ">");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = virtualinvoke r1.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.base.Expression getContent()>();

        $r17 = virtualinvoke $r15.<com.google.gxp.compiler.base.Expression: java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)>(r16);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r18 = <com.google.gxp.compiler.schema.ElementValidator$Flag: com.google.gxp.compiler.schema.ElementValidator$Flag NOENDTAG>;

        $z2 = virtualinvoke $r2.<com.google.gxp.compiler.schema.ElementValidator: boolean isFlagSet(com.google.gxp.compiler.schema.ElementValidator$Flag)>($r18);

        if $z2 != 0 goto label16;

        $r19 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r19.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r1, $r3, "</");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r19);

        if $r4 == null goto label15;

        $r26 = new com.google.gxp.compiler.base.StringConstant;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r1, $r3, $r30);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r26);

     label15:
        $r20 = new com.google.gxp.compiler.base.StringConstant;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke r1.<com.google.gxp.compiler.base.OutputElement: java.lang.String getLocalName()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r1, $r3, $r25);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r20);

     label16:
        $r64 = virtualinvoke r1.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r65 = staticinvoke <com.google.gxp.compiler.base.Concatenation: com.google.gxp.compiler.base.Expression create(com.google.gxp.compiler.alerts.SourcePosition,com.google.gxp.compiler.schema.Schema,java.util.List)>($r64, $r3, $r0);

        return $r65;
    }

    private com.google.gxp.compiler.base.Expression buildAttrExpression(com.google.gxp.compiler.reparent.Attribute, com.google.gxp.compiler.base.OutputElement, java.lang.String)
    {
        com.google.gxp.compiler.base.Expression $r11, r16, $r21, $r22;
        com.google.gxp.compiler.schema.Schema $r4, $r18, $r20;
        java.util.ArrayList $r0;
        java.lang.String $r7, $r10, r14;
        boolean $z0, z1;
        com.google.gxp.compiler.alerts.SourcePosition $r19;
        com.google.gxp.compiler.base.ExampleExpression $r25, $r27;
        com.google.gxp.compiler.flatten.ContentFlattener$Visitor r12;
        com.google.gxp.compiler.base.StringConstant $r24, $r26;
        com.google.gxp.compiler.reparent.Attribute r2;
        com.google.gxp.compiler.base.OutputElement r3;
        java.lang.StringBuilder $r6, $r8, $r9, $r23;
        java.lang.Object $r13;

        r12 := @this: com.google.gxp.compiler.flatten.ContentFlattener$Visitor;

        r2 := @parameter0: com.google.gxp.compiler.reparent.Attribute;

        r3 := @parameter1: com.google.gxp.compiler.base.OutputElement;

        r14 := @parameter2: java.lang.String;

        z1 = 0;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r24 = new com.google.gxp.compiler.base.StringConstant;

        $r4 = virtualinvoke r3.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke r2.<com.google.gxp.compiler.reparent.Attribute: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r2, $r4, $r10);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r24);

        $r11 = virtualinvoke r2.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        $r13 = virtualinvoke $r11.<com.google.gxp.compiler.base.Expression: java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)>(r12);

        r16 = (com.google.gxp.compiler.base.Expression) $r13;

        $z0 = virtualinvoke r16.<com.google.gxp.compiler.base.Expression: boolean hasStaticString()>();

        if $z0 != 0 goto label2;

        if r14 == null goto label1;

        $r25 = new com.google.gxp.compiler.base.ExampleExpression;

        specialinvoke $r25.<com.google.gxp.compiler.base.ExampleExpression: void <init>(com.google.gxp.compiler.base.Expression,java.lang.String)>(r16, r14);

        r16 = $r25;

        goto label2;

     label1:
        z1 = 1;

     label2:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r16);

        $r26 = new com.google.gxp.compiler.base.StringConstant;

        $r18 = virtualinvoke r3.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.schema.Schema getSchema()>();

        specialinvoke $r26.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r2, $r18, "\"");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r26);

        $r19 = virtualinvoke r3.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r20 = virtualinvoke r3.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r21 = staticinvoke <com.google.gxp.compiler.base.Concatenation: com.google.gxp.compiler.base.Expression create(com.google.gxp.compiler.alerts.SourcePosition,com.google.gxp.compiler.schema.Schema,java.util.List)>($r19, $r20, $r0);

        if z1 == 0 goto label3;

        $r27 = new com.google.gxp.compiler.base.ExampleExpression;

        $r22 = $r27;

        specialinvoke $r27.<com.google.gxp.compiler.base.ExampleExpression: void <init>(com.google.gxp.compiler.base.Expression,java.lang.String)>($r21, "");

        goto label4;

     label3:
        $r22 = $r21;

     label4:
        return $r22;
    }

    private com.google.gxp.compiler.base.Expression buildBooleanAttrExpression(com.google.gxp.compiler.reparent.Attribute, com.google.gxp.compiler.base.OutputElement)
    {
        com.google.gxp.compiler.base.Expression $r21;
        com.google.gxp.compiler.base.Conditional $r10;
        com.google.gxp.compiler.schema.Schema $r1;
        com.google.gxp.compiler.base.IsXmlExpression $r11;
        java.util.ArrayList $r2;
        java.lang.String $r7, $r9, $r15, $r18;
        com.google.gxp.compiler.alerts.SourcePosition $r20;
        com.google.gxp.compiler.flatten.ContentFlattener$Visitor r22;
        com.google.gxp.compiler.base.StringConstant $r3, $r12, $r19;
        com.google.gxp.compiler.reparent.Attribute r4;
        com.google.gxp.compiler.base.OutputElement r0;
        java.lang.StringBuilder $r5, $r6, $r8, $r13, $r14, $r16, $r17;

        r22 := @this: com.google.gxp.compiler.flatten.ContentFlattener$Visitor;

        r4 := @parameter0: com.google.gxp.compiler.reparent.Attribute;

        r0 := @parameter1: com.google.gxp.compiler.base.OutputElement;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r3 = new com.google.gxp.compiler.base.StringConstant;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke r4.<com.google.gxp.compiler.reparent.Attribute: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r4, $r1, $r9);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r10 = new com.google.gxp.compiler.base.Conditional;

        $r11 = new com.google.gxp.compiler.base.IsXmlExpression;

        specialinvoke $r11.<com.google.gxp.compiler.base.IsXmlExpression: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema)>(r4, $r1);

        $r12 = new com.google.gxp.compiler.base.StringConstant;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");

        $r15 = virtualinvoke r4.<com.google.gxp.compiler.reparent.Attribute: java.lang.String getName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r4, $r1, $r18);

        $r19 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r19.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r4, $r1, "");

        specialinvoke $r10.<com.google.gxp.compiler.base.Conditional: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>(r4, $r1, $r11, $r12, $r19);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r20 = virtualinvoke r4.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r21 = staticinvoke <com.google.gxp.compiler.base.Concatenation: com.google.gxp.compiler.base.Expression create(com.google.gxp.compiler.alerts.SourcePosition,com.google.gxp.compiler.schema.Schema,java.util.List)>($r20, $r1, $r2);

        return $r21;
    }

    public volatile java.lang.Object visitOutputElement(com.google.gxp.compiler.base.OutputElement)
    {
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.OutputElement r1;
        com.google.gxp.compiler.flatten.ContentFlattener$Visitor r0;

        r0 := @this: com.google.gxp.compiler.flatten.ContentFlattener$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.OutputElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.flatten.ContentFlattener$Visitor: com.google.gxp.compiler.base.Expression visitOutputElement(com.google.gxp.compiler.base.OutputElement)>(r1);

        return $r2;
    }
}
