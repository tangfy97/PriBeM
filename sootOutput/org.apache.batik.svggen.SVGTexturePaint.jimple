public class org.apache.batik.svggen.SVGTexturePaint extends org.apache.batik.svggen.AbstractSVGConverter
{

    public void <init>(org.apache.batik.svggen.SVGGeneratorContext)
    {
        org.apache.batik.svggen.SVGTexturePaint r0;
        org.apache.batik.svggen.SVGGeneratorContext r1;

        r0 := @this: org.apache.batik.svggen.SVGTexturePaint;

        r1 := @parameter0: org.apache.batik.svggen.SVGGeneratorContext;

        specialinvoke r0.<org.apache.batik.svggen.AbstractSVGConverter: void <init>(org.apache.batik.svggen.SVGGeneratorContext)>(r1);

        return;
    }

    public org.apache.batik.svggen.SVGDescriptor toSVG(org.apache.batik.ext.awt.g2d.GraphicContext)
    {
        java.awt.TexturePaint $r3;
        org.apache.batik.svggen.SVGPaintDescriptor $r4;
        java.awt.Paint $r2;
        org.apache.batik.svggen.SVGTexturePaint r0;
        org.apache.batik.ext.awt.g2d.GraphicContext r1;

        r0 := @this: org.apache.batik.svggen.SVGTexturePaint;

        r1 := @parameter0: org.apache.batik.ext.awt.g2d.GraphicContext;

        $r2 = virtualinvoke r1.<org.apache.batik.ext.awt.g2d.GraphicContext: java.awt.Paint getPaint()>();

        $r3 = (java.awt.TexturePaint) $r2;

        $r4 = virtualinvoke r0.<org.apache.batik.svggen.SVGTexturePaint: org.apache.batik.svggen.SVGPaintDescriptor toSVG(java.awt.TexturePaint)>($r3);

        return $r4;
    }

    public org.apache.batik.svggen.SVGPaintDescriptor toSVG(java.awt.TexturePaint)
    {
        java.awt.geom.Rectangle2D $r6;
        byte $b3, $b4, $b5, $b13;
        org.w3c.dom.Document r5;
        java.util.Map $r2, $r34;
        org.apache.batik.svggen.SVGTexturePaint r0;
        org.apache.batik.svggen.SVGGeneratorContext $r4, $r17, $r19, $r21, $r23, $r24;
        java.lang.StringBuffer $r28, $r30, $r31, $r37;
        java.lang.String $r8, $r9, $r10, $r11, $r26, $r29, $r32;
        org.apache.batik.svggen.SVGIDGenerator $r25;
        org.apache.batik.svggen.GenericImageHandler $r18, $r22;
        java.awt.image.BufferedImage $r12, r16, $r36;
        java.util.List $r35;
        org.apache.batik.svggen.SVGPaintDescriptor r15, $r38;
        java.awt.TexturePaint r1;
        java.awt.Graphics2D $r14;
        int $i0, $i1, $i2, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, d19;
        org.w3c.dom.Element $r7, $r20;
        java.lang.Object $r3;

        r0 := @this: org.apache.batik.svggen.SVGTexturePaint;

        r1 := @parameter0: java.awt.TexturePaint;

        $r2 = r0.<org.apache.batik.svggen.AbstractSVGConverter: java.util.Map descMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r15 = (org.apache.batik.svggen.SVGPaintDescriptor) $r3;

        $r4 = r0.<org.apache.batik.svggen.AbstractSVGConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        r5 = $r4.<org.apache.batik.svggen.SVGGeneratorContext: org.w3c.dom.Document domFactory>;

        if r15 != null goto label3;

        $r6 = virtualinvoke r1.<java.awt.TexturePaint: java.awt.geom.Rectangle2D getAnchorRect()>();

        $r7 = interfaceinvoke r5.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "pattern");

        interfaceinvoke $r7.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "patternUnits", "userSpaceOnUse");

        $d0 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getX()>();

        $r8 = virtualinvoke r0.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d0);

        interfaceinvoke $r7.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "x", $r8);

        $d1 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getY()>();

        $r9 = virtualinvoke r0.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d1);

        interfaceinvoke $r7.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "y", $r9);

        $d2 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getWidth()>();

        $r10 = virtualinvoke r0.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d2);

        interfaceinvoke $r7.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "width", $r10);

        $d3 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getHeight()>();

        $r11 = virtualinvoke r0.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d3);

        interfaceinvoke $r7.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "height", $r11);

        $r12 = virtualinvoke r1.<java.awt.TexturePaint: java.awt.image.BufferedImage getImage()>();

        r16 = $r12;

        $i0 = virtualinvoke $r12.<java.awt.image.BufferedImage: int getWidth()>();

        if $i0 <= 0 goto label2;

        $i1 = virtualinvoke $r12.<java.awt.image.BufferedImage: int getHeight()>();

        if $i1 <= 0 goto label2;

        $i2 = virtualinvoke $r12.<java.awt.image.BufferedImage: int getWidth()>();

        $d4 = (double) $i2;

        $d5 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getWidth()>();

        $b3 = $d4 cmpl $d5;

        if $b3 != 0 goto label1;

        $i12 = virtualinvoke $r12.<java.awt.image.BufferedImage: int getHeight()>();

        $d17 = (double) $i12;

        $d18 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getHeight()>();

        $b13 = $d17 cmpl $d18;

        if $b13 == 0 goto label2;

     label1:
        $d6 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getWidth()>();

        $b4 = $d6 cmpl 0.0;

        $i16 = (int) $b4;

        if $i16 <= 0 goto label2;

        $d7 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getHeight()>();

        $b5 = $d7 cmpl 0.0;

        $i17 = (int) $b5;

        if $i17 <= 0 goto label2;

        $d8 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getWidth()>();

        $i6 = virtualinvoke $r12.<java.awt.image.BufferedImage: int getWidth()>();

        $d9 = (double) $i6;

        d19 = $d8 / $d9;

        $d10 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getHeight()>();

        $i7 = virtualinvoke $r12.<java.awt.image.BufferedImage: int getHeight()>();

        $d11 = (double) $i7;

        d12 = $d10 / $d11;

        $r36 = new java.awt.image.BufferedImage;

        $i8 = virtualinvoke $r12.<java.awt.image.BufferedImage: int getWidth()>();

        $d13 = (double) $i8;

        $d14 = d19 * $d13;

        $i9 = (int) $d14;

        $i10 = virtualinvoke $r12.<java.awt.image.BufferedImage: int getHeight()>();

        $d15 = (double) $i10;

        $d16 = d12 * $d15;

        $i11 = (int) $d16;

        specialinvoke $r36.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i9, $i11, 2);

        $r14 = virtualinvoke $r36.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        virtualinvoke $r14.<java.awt.Graphics2D: void scale(double,double)>(d19, d12);

        virtualinvoke $r14.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>($r12, 0, 0, null);

        virtualinvoke $r14.<java.awt.Graphics: void dispose()>();

        r16 = $r36;

     label2:
        $r17 = r0.<org.apache.batik.svggen.AbstractSVGConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r18 = $r17.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.GenericImageHandler genericImageHandler>;

        $r19 = r0.<org.apache.batik.svggen.AbstractSVGConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r20 = interfaceinvoke $r18.<org.apache.batik.svggen.GenericImageHandler: org.w3c.dom.Element createElement(org.apache.batik.svggen.SVGGeneratorContext)>($r19);

        $r21 = r0.<org.apache.batik.svggen.AbstractSVGConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r22 = $r21.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.GenericImageHandler genericImageHandler>;

        $i14 = virtualinvoke r16.<java.awt.image.BufferedImage: int getWidth()>();

        $i15 = virtualinvoke r16.<java.awt.image.BufferedImage: int getHeight()>();

        $r23 = r0.<org.apache.batik.svggen.AbstractSVGConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        interfaceinvoke $r22.<org.apache.batik.svggen.GenericImageHandler: java.awt.geom.AffineTransform handleImage(java.awt.image.RenderedImage,org.w3c.dom.Element,int,int,int,int,org.apache.batik.svggen.SVGGeneratorContext)>(r16, $r20, 0, 0, $i14, $i15, $r23);

        interfaceinvoke $r7.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r20);

        $r24 = r0.<org.apache.batik.svggen.AbstractSVGConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r25 = $r24.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.SVGIDGenerator idGenerator>;

        $r26 = virtualinvoke $r25.<org.apache.batik.svggen.SVGIDGenerator: java.lang.String generateID(java.lang.String)>("pattern");

        interfaceinvoke $r7.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r26);

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("url(#");

        $r29 = interfaceinvoke $r7.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "id");

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        $r38 = new org.apache.batik.svggen.SVGPaintDescriptor;

        specialinvoke $r38.<org.apache.batik.svggen.SVGPaintDescriptor: void <init>(java.lang.String,java.lang.String,org.w3c.dom.Element)>($r32, "1", $r7);

        r15 = $r38;

        $r34 = r0.<org.apache.batik.svggen.AbstractSVGConverter: java.util.Map descMap>;

        interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r38);

        $r35 = r0.<org.apache.batik.svggen.AbstractSVGConverter: java.util.List defSet>;

        interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>($r7);

     label3:
        return r15;
    }
}
