public class com.ctc.wstx.evt.DefaultEventAllocator extends com.ctc.wstx.sr.ElemCallback implements javax.xml.stream.util.XMLEventAllocator, javax.xml.stream.XMLStreamConstants
{
    static final com.ctc.wstx.evt.DefaultEventAllocator sStdInstance;
    protected final boolean mAccurateLocation;
    protected javax.xml.stream.Location mLastLocation;

    protected void <init>(boolean)
    {
        com.ctc.wstx.evt.DefaultEventAllocator r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.evt.DefaultEventAllocator;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.sr.ElemCallback: void <init>()>();

        r0.<com.ctc.wstx.evt.DefaultEventAllocator: javax.xml.stream.Location mLastLocation> = null;

        r0.<com.ctc.wstx.evt.DefaultEventAllocator: boolean mAccurateLocation> = z0;

        return;
    }

    public static com.ctc.wstx.evt.DefaultEventAllocator getDefaultInstance()
    {
        com.ctc.wstx.evt.DefaultEventAllocator $r0;

        $r0 = <com.ctc.wstx.evt.DefaultEventAllocator: com.ctc.wstx.evt.DefaultEventAllocator sStdInstance>;

        return $r0;
    }

    public static com.ctc.wstx.evt.DefaultEventAllocator getFastInstance()
    {
        com.ctc.wstx.evt.DefaultEventAllocator $r0;

        $r0 = new com.ctc.wstx.evt.DefaultEventAllocator;

        specialinvoke $r0.<com.ctc.wstx.evt.DefaultEventAllocator: void <init>(boolean)>(0);

        return $r0;
    }

    public javax.xml.stream.events.XMLEvent allocate(javax.xml.stream.XMLStreamReader) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WComment $r31;
        com.ctc.wstx.evt.WStartDocument $r28;
        org.codehaus.stax2.DTDInfo $r6;
        com.ctc.wstx.compat.JdkImpl $r39;
        javax.xml.namespace.NamespaceContext r69;
        com.ctc.wstx.evt.WEndElement $r38;
        com.ctc.wstx.evt.WCharacters $r2, $r29, $r33;
        javax.xml.namespace.QName $r42, $r47;
        java.lang.Error $r58;
        java.util.ArrayList $r41, r71;
        java.lang.StringBuffer $r15, $r16, $r18, $r53, $r54, $r56, $r59, $r60, $r61, $r62;
        java.lang.String $r3, $r5, $r8, $r9, $r10, $r11, $r17, $r19, $r21, $r26, $r30, $r32, $r34, $r36, $r37, $r44, $r45, $r49, $r55, $r57, $r63;
        com.ctc.wstx.evt.WAttribute $r48;
        com.ctc.wstx.evt.WEntityReference $r20, $r24, $r25;
        org.codehaus.stax2.XMLStreamReader2 $r50, r66;
        com.ctc.wstx.evt.WProcInstr $r35;
        com.ctc.wstx.ent.EntityDecl $r23;
        javax.xml.stream.XMLStreamReader r1;
        com.ctc.wstx.sr.StreamReaderImpl $r22, r67;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.ctc.wstx.evt.BaseStartElement r68;
        com.ctc.wstx.evt.DefaultEventAllocator r0;
        java.util.HashMap $r40, r70;
        com.ctc.wstx.evt.WNamespace $r46;
        com.ctc.wstx.dtd.DTDSubset $r13;
        com.ctc.wstx.evt.WDTD $r4, $r7;
        com.ctc.wstx.exc.WstxException $r14, $r52;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        com.ctc.wstx.evt.WEndDocument $r27;
        javax.xml.stream.Location $r64, r65;
        java.lang.Object $r12, $r51;
        com.ctc.wstx.evt.SimpleStartElement $r43;

        r0 := @this: com.ctc.wstx.evt.DefaultEventAllocator;

        r1 := @parameter0: javax.xml.stream.XMLStreamReader;

        $z0 = r0.<com.ctc.wstx.evt.DefaultEventAllocator: boolean mAccurateLocation>;

        if $z0 == 0 goto label01;

        r65 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: javax.xml.stream.Location getLocation()>();

        goto label02;

     label01:
        r65 = r0.<com.ctc.wstx.evt.DefaultEventAllocator: javax.xml.stream.Location mLastLocation>;

        if r65 != null goto label02;

        $r64 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: javax.xml.stream.Location getLocation()>();

        r0.<com.ctc.wstx.evt.DefaultEventAllocator: javax.xml.stream.Location mLastLocation> = $r64;

        r65 = $r64;

     label02:
        $i5 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: int getEventType()>();

        tableswitch($i5)
        {
            case 1: goto label13;
            case 2: goto label09;
            case 3: goto label10;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label11;
            case 7: goto label12;
            case 8: goto label08;
            case 9: goto label23;
            case 10: goto label26;
            case 11: goto label06;
            case 12: goto label03;
            case 13: goto label26;
            case 14: goto label26;
            case 15: goto label26;
            default: goto label27;
        };

     label03:
        $r2 = new com.ctc.wstx.evt.WCharacters;

        $r3 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        specialinvoke $r2.<com.ctc.wstx.evt.WCharacters: void <init>(javax.xml.stream.Location,java.lang.String,boolean)>(r65, $r3, 1);

        return $r2;

     label04:
        $r33 = new com.ctc.wstx.evt.WCharacters;

        $r34 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        specialinvoke $r33.<com.ctc.wstx.evt.WCharacters: void <init>(javax.xml.stream.Location,java.lang.String,boolean)>(r65, $r34, 0);

        return $r33;

     label05:
        $r31 = new com.ctc.wstx.evt.WComment;

        $r32 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        specialinvoke $r31.<com.ctc.wstx.evt.WComment: void <init>(javax.xml.stream.Location,java.lang.String)>(r65, $r32);

        return $r31;

     label06:
        $z1 = r1 instanceof org.codehaus.stax2.XMLStreamReader2;

        if $z1 == 0 goto label07;

        r66 = (org.codehaus.stax2.XMLStreamReader2) r1;

        $r6 = interfaceinvoke r66.<org.codehaus.stax2.XMLStreamReader2: org.codehaus.stax2.DTDInfo getDTDInfo()>();

        $r7 = new com.ctc.wstx.evt.WDTD;

        $r8 = interfaceinvoke $r6.<org.codehaus.stax2.DTDInfo: java.lang.String getDTDRootName()>();

        $r9 = interfaceinvoke $r6.<org.codehaus.stax2.DTDInfo: java.lang.String getDTDSystemId()>();

        $r10 = interfaceinvoke $r6.<org.codehaus.stax2.DTDInfo: java.lang.String getDTDPublicId()>();

        $r11 = interfaceinvoke $r6.<org.codehaus.stax2.DTDInfo: java.lang.String getDTDInternalSubset()>();

        $r12 = interfaceinvoke $r6.<org.codehaus.stax2.DTDInfo: java.lang.Object getProcessedDTD()>();

        $r13 = (com.ctc.wstx.dtd.DTDSubset) $r12;

        specialinvoke $r7.<com.ctc.wstx.evt.WDTD: void <init>(javax.xml.stream.Location,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.ctc.wstx.dtd.DTDSubset)>(r65, $r8, $r9, $r10, $r11, $r13);

        return $r7;

     label07:
        $r4 = new com.ctc.wstx.evt.WDTD;

        $r5 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        specialinvoke $r4.<com.ctc.wstx.evt.WDTD: void <init>(javax.xml.stream.Location,java.lang.String,java.lang.String)>(r65, null, $r5);

        return $r4;

     label08:
        $r27 = new com.ctc.wstx.evt.WEndDocument;

        specialinvoke $r27.<com.ctc.wstx.evt.WEndDocument: void <init>(javax.xml.stream.Location)>(r65);

        return $r27;

     label09:
        $r38 = new com.ctc.wstx.evt.WEndElement;

        specialinvoke $r38.<com.ctc.wstx.evt.WEndElement: void <init>(javax.xml.stream.Location,javax.xml.stream.XMLStreamReader)>(r65, r1);

        return $r38;

     label10:
        $r35 = new com.ctc.wstx.evt.WProcInstr;

        $r36 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getPITarget()>();

        $r37 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getPIData()>();

        specialinvoke $r35.<com.ctc.wstx.evt.WProcInstr: void <init>(javax.xml.stream.Location,java.lang.String,java.lang.String)>(r65, $r36, $r37);

        return $r35;

     label11:
        $r29 = new com.ctc.wstx.evt.WCharacters;

        $r30 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        specialinvoke $r29.<com.ctc.wstx.evt.WCharacters: void <init>(javax.xml.stream.Location,java.lang.String,boolean)>(r65, $r30, 0);

        virtualinvoke $r29.<com.ctc.wstx.evt.WCharacters: void setWhitespaceStatus(boolean)>(1);

        return $r29;

     label12:
        $r28 = new com.ctc.wstx.evt.WStartDocument;

        specialinvoke $r28.<com.ctc.wstx.evt.WStartDocument: void <init>(javax.xml.stream.Location,javax.xml.stream.XMLStreamReader)>(r65, r1);

        return $r28;

     label13:
        $z3 = r1 instanceof com.ctc.wstx.sr.StreamReaderImpl;

        if $z3 == 0 goto label15;

        r67 = (com.ctc.wstx.sr.StreamReaderImpl) r1;

        $r51 = interfaceinvoke r67.<com.ctc.wstx.sr.StreamReaderImpl: java.lang.Object withStartElement(com.ctc.wstx.sr.ElemCallback,javax.xml.stream.Location)>(r0, r65);

        r68 = (com.ctc.wstx.evt.BaseStartElement) $r51;

        if r68 != null goto label14;

        $r52 = new com.ctc.wstx.exc.WstxException;

        $r53 = new java.lang.StringBuffer;

        specialinvoke $r53.<java.lang.StringBuffer: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Trying to create START_ELEMENT when current event is ");

        $i3 = interfaceinvoke r67.<com.ctc.wstx.sr.StreamReaderImpl: int getEventType()>();

        $r55 = staticinvoke <com.ctc.wstx.cfg.ErrorConsts: java.lang.String tokenTypeDesc(int)>($i3);

        $r56 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r52.<com.ctc.wstx.exc.WstxException: void <init>(java.lang.String,javax.xml.stream.Location)>($r57, r65);

        throw $r52;

     label14:
        return r68;

     label15:
        r69 = null;

        $z4 = r1 instanceof org.codehaus.stax2.XMLStreamReader2;

        if $z4 == 0 goto label16;

        $r50 = (org.codehaus.stax2.XMLStreamReader2) r1;

        r69 = interfaceinvoke $r50.<org.codehaus.stax2.XMLStreamReader2: javax.xml.namespace.NamespaceContext getNonTransientNamespaceContext()>();

     label16:
        $i1 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: int getAttributeCount()>();

        if $i1 >= 1 goto label17;

        r70 = null;

        goto label19;

     label17:
        $r39 = staticinvoke <com.ctc.wstx.compat.JdkFeatures: com.ctc.wstx.compat.JdkImpl getInstance()>();

        $r40 = virtualinvoke $r39.<com.ctc.wstx.compat.JdkImpl: java.util.HashMap getInsertOrderedMap()>();

        r70 = $r40;

        i6 = 0;

     label18:
        if i6 >= $i1 goto label19;

        $r47 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getAttributeName(int)>(i6);

        $r48 = new com.ctc.wstx.evt.WAttribute;

        $r49 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(int)>(i6);

        $z5 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: boolean isAttributeSpecified(int)>(i6);

        specialinvoke $r48.<com.ctc.wstx.evt.WAttribute: void <init>(javax.xml.stream.Location,javax.xml.namespace.QName,java.lang.String,boolean)>(r65, $r47, $r49, $z5);

        interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r47, $r48);

        i6 = i6 + 1;

        goto label18;

     label19:
        $i2 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: int getNamespaceCount()>();

        if $i2 >= 1 goto label20;

        r71 = null;

        goto label22;

     label20:
        $r41 = new java.util.ArrayList;

        specialinvoke $r41.<java.util.ArrayList: void <init>(int)>($i2);

        r71 = $r41;

        i7 = 0;

     label21:
        if i7 >= $i2 goto label22;

        $r44 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespacePrefix(int)>(i7);

        $r45 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI(int)>(i7);

        $r46 = staticinvoke <com.ctc.wstx.evt.WNamespace: com.ctc.wstx.evt.WNamespace constructFor(javax.xml.stream.Location,java.lang.String,java.lang.String)>(r65, $r44, $r45);

        interfaceinvoke $r41.<java.util.List: boolean add(java.lang.Object)>($r46);

        i7 = i7 + 1;

        goto label21;

     label22:
        $r42 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getName()>();

        $r43 = staticinvoke <com.ctc.wstx.evt.SimpleStartElement: com.ctc.wstx.evt.SimpleStartElement construct(javax.xml.stream.Location,javax.xml.namespace.QName,java.util.Map,java.util.List,javax.xml.namespace.NamespaceContext)>(r65, $r42, r70, r71, r69);

        return $r43;

     label23:
        $z2 = r1 instanceof com.ctc.wstx.sr.StreamReaderImpl;

        if $z2 == 0 goto label25;

        $r22 = (com.ctc.wstx.sr.StreamReaderImpl) r1;

        $r23 = interfaceinvoke $r22.<com.ctc.wstx.sr.StreamReaderImpl: com.ctc.wstx.ent.EntityDecl getCurrentEntityDecl()>();

        if $r23 != null goto label24;

        $r25 = new com.ctc.wstx.evt.WEntityReference;

        $r26 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getLocalName()>();

        specialinvoke $r25.<com.ctc.wstx.evt.WEntityReference: void <init>(javax.xml.stream.Location,java.lang.String)>(r65, $r26);

        return $r25;

     label24:
        $r24 = new com.ctc.wstx.evt.WEntityReference;

        specialinvoke $r24.<com.ctc.wstx.evt.WEntityReference: void <init>(javax.xml.stream.Location,javax.xml.stream.events.EntityDeclaration)>(r65, $r23);

        return $r24;

     label25:
        $r20 = new com.ctc.wstx.evt.WEntityReference;

        $r21 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getLocalName()>();

        specialinvoke $r20.<com.ctc.wstx.evt.WEntityReference: void <init>(javax.xml.stream.Location,java.lang.String)>(r65, $r21);

        return $r20;

     label26:
        $r14 = new com.ctc.wstx.exc.WstxException;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal error: should not get ");

        $i0 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: int getEventType()>();

        $r17 = staticinvoke <com.ctc.wstx.cfg.ErrorConsts: java.lang.String tokenTypeDesc(int)>($i0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<com.ctc.wstx.exc.WstxException: void <init>(java.lang.String)>($r19);

        throw $r14;

     label27:
        $r58 = new java.lang.Error;

        $r59 = new java.lang.StringBuffer;

        specialinvoke $r59.<java.lang.StringBuffer: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized event type ");

        $i4 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: int getEventType()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r58.<java.lang.Error: void <init>(java.lang.String)>($r63);

        throw $r58;
    }

    public void allocate(javax.xml.stream.XMLStreamReader, javax.xml.stream.util.XMLEventConsumer) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.events.XMLEvent $r3;
        javax.xml.stream.XMLStreamReader r2;
        com.ctc.wstx.evt.DefaultEventAllocator r1;
        javax.xml.stream.util.XMLEventConsumer r0;

        r1 := @this: com.ctc.wstx.evt.DefaultEventAllocator;

        r2 := @parameter0: javax.xml.stream.XMLStreamReader;

        r0 := @parameter1: javax.xml.stream.util.XMLEventConsumer;

        $r3 = virtualinvoke r1.<com.ctc.wstx.evt.DefaultEventAllocator: javax.xml.stream.events.XMLEvent allocate(javax.xml.stream.XMLStreamReader)>(r2);

        interfaceinvoke r0.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r3);

        return;
    }

    public javax.xml.stream.util.XMLEventAllocator newInstance()
    {
        com.ctc.wstx.evt.DefaultEventAllocator r0;

        r0 := @this: com.ctc.wstx.evt.DefaultEventAllocator;

        return r0;
    }

    public java.lang.Object withStartElement(javax.xml.stream.Location, javax.xml.namespace.QName, com.ctc.wstx.util.BaseNsContext, com.ctc.wstx.sr.ElemAttrs, boolean)
    {
        com.ctc.wstx.sr.ElemAttrs r4;
        com.ctc.wstx.evt.DefaultEventAllocator r5;
        javax.xml.stream.Location r1;
        javax.xml.namespace.QName r2;
        com.ctc.wstx.evt.CompactStartElement $r0;
        com.ctc.wstx.util.BaseNsContext r3;
        boolean z0;

        r5 := @this: com.ctc.wstx.evt.DefaultEventAllocator;

        r1 := @parameter0: javax.xml.stream.Location;

        r2 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: com.ctc.wstx.util.BaseNsContext;

        r4 := @parameter3: com.ctc.wstx.sr.ElemAttrs;

        z0 := @parameter4: boolean;

        $r0 = new com.ctc.wstx.evt.CompactStartElement;

        specialinvoke $r0.<com.ctc.wstx.evt.CompactStartElement: void <init>(javax.xml.stream.Location,javax.xml.namespace.QName,com.ctc.wstx.util.BaseNsContext,com.ctc.wstx.sr.ElemAttrs)>(r1, r2, r3, r4);

        return $r0;
    }

    static void <clinit>()
    {
        com.ctc.wstx.evt.DefaultEventAllocator $r0;

        $r0 = new com.ctc.wstx.evt.DefaultEventAllocator;

        specialinvoke $r0.<com.ctc.wstx.evt.DefaultEventAllocator: void <init>(boolean)>(1);

        <com.ctc.wstx.evt.DefaultEventAllocator: com.ctc.wstx.evt.DefaultEventAllocator sStdInstance> = $r0;

        return;
    }
}
