class org.apache.lucene.index.FrozenBufferedDeletes extends java.lang.Object
{
    static final int BYTES_PER_DEL_QUERY;
    final org.apache.lucene.index.PrefixCodedTerms terms;
    int termCount;
    final org.apache.lucene.search.Query[] queries;
    final int[] queryLimits;
    final int bytesUsed;
    final int numTermDeletes;
    private long gen;
    final boolean isSegmentPrivate;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.index.BufferedDeletes, boolean)
    {
        org.apache.lucene.search.Query $r16;
        org.apache.lucene.index.BufferedDeletes r1;
        org.apache.lucene.index.Term r20;
        java.lang.Integer $r19;
        int[] $r6, $r17;
        java.util.concurrent.atomic.AtomicInteger $r12;
        java.util.Map $r3, $r5, $r7, $r21, $r23, $r25;
        org.apache.lucene.index.Term[] $r26, $r28;
        boolean z0, $z1, $z2;
        org.apache.lucene.search.Query[] $r4, $r11, $r14;
        java.util.Set $r8, $r24;
        java.lang.Object[] $r27;
        long $l2;
        java.lang.AssertionError $r22;
        org.apache.lucene.index.PrefixCodedTerms $r2, $r10;
        org.apache.lucene.index.FrozenBufferedDeletes r0;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        org.apache.lucene.index.PrefixCodedTerms$Builder $r29;
        java.util.Map$Entry r30;
        java.util.Iterator $r9;
        java.lang.Object $r13, $r15, $r18;

        r0 := @this: org.apache.lucene.index.FrozenBufferedDeletes;

        r1 := @parameter0: org.apache.lucene.index.BufferedDeletes;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.FrozenBufferedDeletes: long gen> = -1L;

        r0.<org.apache.lucene.index.FrozenBufferedDeletes: boolean isSegmentPrivate> = z0;

        $z1 = <org.apache.lucene.index.FrozenBufferedDeletes: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        if z0 == 0 goto label1;

        $r21 = r1.<org.apache.lucene.index.BufferedDeletes: java.util.Map terms>;

        $i10 = interfaceinvoke $r21.<java.util.Map: int size()>();

        if $i10 == 0 goto label1;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>(java.lang.Object)>("segment private package should only have del queries");

        throw $r22;

     label1:
        $r23 = r1.<org.apache.lucene.index.BufferedDeletes: java.util.Map terms>;

        $r24 = interfaceinvoke $r23.<java.util.Map: java.util.Set keySet()>();

        $r25 = r1.<org.apache.lucene.index.BufferedDeletes: java.util.Map terms>;

        $i11 = interfaceinvoke $r25.<java.util.Map: int size()>();

        $r26 = newarray (org.apache.lucene.index.Term)[$i11];

        $r27 = interfaceinvoke $r24.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r26);

        $r28 = (org.apache.lucene.index.Term[]) $r27;

        $i12 = lengthof $r28;

        r0.<org.apache.lucene.index.FrozenBufferedDeletes: int termCount> = $i12;

        staticinvoke <org.apache.lucene.util.ArrayUtil: void mergeSort(java.lang.Comparable[])>($r28);

        $r29 = new org.apache.lucene.index.PrefixCodedTerms$Builder;

        specialinvoke $r29.<org.apache.lucene.index.PrefixCodedTerms$Builder: void <init>()>();

        $i13 = lengthof $r28;

        i14 = 0;

     label2:
        if i14 >= $i13 goto label3;

        r20 = $r28[i14];

        virtualinvoke $r29.<org.apache.lucene.index.PrefixCodedTerms$Builder: void add(org.apache.lucene.index.Term)>(r20);

        i14 = i14 + 1;

        goto label2;

     label3:
        $r2 = virtualinvoke $r29.<org.apache.lucene.index.PrefixCodedTerms$Builder: org.apache.lucene.index.PrefixCodedTerms finish()>();

        r0.<org.apache.lucene.index.FrozenBufferedDeletes: org.apache.lucene.index.PrefixCodedTerms terms> = $r2;

        $r3 = r1.<org.apache.lucene.index.BufferedDeletes: java.util.Map queries>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = newarray (org.apache.lucene.search.Query)[$i0];

        r0.<org.apache.lucene.index.FrozenBufferedDeletes: org.apache.lucene.search.Query[] queries> = $r4;

        $r5 = r1.<org.apache.lucene.index.BufferedDeletes: java.util.Map queries>;

        $i1 = interfaceinvoke $r5.<java.util.Map: int size()>();

        $r6 = newarray (int)[$i1];

        r0.<org.apache.lucene.index.FrozenBufferedDeletes: int[] queryLimits> = $r6;

        i15 = 0;

        $r7 = r1.<org.apache.lucene.index.BufferedDeletes: java.util.Map queries>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r13 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.util.Map$Entry) $r13;

        $r14 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: org.apache.lucene.search.Query[] queries>;

        $r15 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (org.apache.lucene.search.Query) $r15;

        $r14[i15] = $r16;

        $r17 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: int[] queryLimits>;

        $r18 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (java.lang.Integer) $r18;

        $i9 = virtualinvoke $r19.<java.lang.Integer: int intValue()>();

        $r17[i15] = $i9;

        i15 = i15 + 1;

        goto label4;

     label5:
        $r10 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: org.apache.lucene.index.PrefixCodedTerms terms>;

        $l2 = virtualinvoke $r10.<org.apache.lucene.index.PrefixCodedTerms: long getSizeInBytes()>();

        $i6 = (int) $l2;

        $r11 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: org.apache.lucene.search.Query[] queries>;

        $i4 = lengthof $r11;

        $i3 = <org.apache.lucene.index.FrozenBufferedDeletes: int BYTES_PER_DEL_QUERY>;

        $i5 = $i4 * $i3;

        $i7 = $i6 + $i5;

        r0.<org.apache.lucene.index.FrozenBufferedDeletes: int bytesUsed> = $i7;

        $r12 = r1.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicInteger numTermDeletes>;

        $i8 = virtualinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        r0.<org.apache.lucene.index.FrozenBufferedDeletes: int numTermDeletes> = $i8;

        return;
    }

    public void setDelGen(long)
    {
        byte $b2;
        org.apache.lucene.index.FrozenBufferedDeletes r0;
        long l0, $l1;
        java.lang.AssertionError $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.FrozenBufferedDeletes;

        l0 := @parameter0: long;

        $z0 = <org.apache.lucene.index.FrozenBufferedDeletes: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $l1 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: long gen>;

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        r0.<org.apache.lucene.index.FrozenBufferedDeletes: long gen> = l0;

        return;
    }

    public long delGen()
    {
        byte $b2;
        org.apache.lucene.index.FrozenBufferedDeletes r0;
        long $l0, $l1;
        java.lang.AssertionError $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.FrozenBufferedDeletes;

        $z0 = <org.apache.lucene.index.FrozenBufferedDeletes: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $l1 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: long gen>;

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $l0 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: long gen>;

        return $l0;
    }

    public java.lang.Iterable termsIterable()
    {
        org.apache.lucene.index.FrozenBufferedDeletes$1 $r0;
        org.apache.lucene.index.FrozenBufferedDeletes r1;

        r1 := @this: org.apache.lucene.index.FrozenBufferedDeletes;

        $r0 = new org.apache.lucene.index.FrozenBufferedDeletes$1;

        specialinvoke $r0.<org.apache.lucene.index.FrozenBufferedDeletes$1: void <init>(org.apache.lucene.index.FrozenBufferedDeletes)>(r1);

        return $r0;
    }

    public java.lang.Iterable queriesIterable()
    {
        org.apache.lucene.index.FrozenBufferedDeletes$2 $r0;
        org.apache.lucene.index.FrozenBufferedDeletes r1;

        r1 := @this: org.apache.lucene.index.FrozenBufferedDeletes;

        $r0 = new org.apache.lucene.index.FrozenBufferedDeletes$2;

        specialinvoke $r0.<org.apache.lucene.index.FrozenBufferedDeletes$2: void <init>(org.apache.lucene.index.FrozenBufferedDeletes)>(r1);

        return $r0;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.index.FrozenBufferedDeletes r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String r19;
        org.apache.lucene.search.Query[] $r1, $r9;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        r0 := @this: org.apache.lucene.index.FrozenBufferedDeletes;

        r19 = "";

        $i0 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: int numTermDeletes>;

        if $i0 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i5 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: int numTermDeletes>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deleted terms (unique count=");

        $i6 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: int termCount>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r1 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: org.apache.lucene.search.Query[] queries>;

        $i1 = lengthof $r1;

        if $i1 == 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: org.apache.lucene.search.Query[] queries>;

        $i4 = lengthof $r9;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deleted queries");

        r19 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $i2 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: int bytesUsed>;

        if $i2 == 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytesUsed=");

        $i3 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: int bytesUsed>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        r19 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return r19;
    }

    boolean any()
    {
        org.apache.lucene.index.FrozenBufferedDeletes r0;
        int $i0, $i1;
        org.apache.lucene.search.Query[] $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.FrozenBufferedDeletes;

        $i0 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: int termCount>;

        if $i0 > 0 goto label1;

        $r1 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: org.apache.lucene.search.Query[] queries>;

        $i1 = lengthof $r1;

        if $i1 <= 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    static void <clinit>()
    {
        int $i0, $i1, $i2;
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/FrozenBufferedDeletes;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.FrozenBufferedDeletes: boolean $assertionsDisabled> = $z1;

        $i0 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_REF>;

        $i1 = $i0 + 4;

        $i2 = $i1 + 24;

        <org.apache.lucene.index.FrozenBufferedDeletes: int BYTES_PER_DEL_QUERY> = $i2;

        return;
    }
}
