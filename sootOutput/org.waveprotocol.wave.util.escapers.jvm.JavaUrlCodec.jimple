public class org.waveprotocol.wave.util.escapers.jvm.JavaUrlCodec extends java.lang.Object implements org.waveprotocol.wave.model.id.URIEncoderDecoder$PercentEncoderDecoder
{

    public void <init>()
    {
        org.waveprotocol.wave.util.escapers.jvm.JavaUrlCodec r0;

        r0 := @this: org.waveprotocol.wave.util.escapers.jvm.JavaUrlCodec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String decode(java.lang.String) throws org.waveprotocol.wave.model.id.URIEncoderDecoder$EncodingException
    {
        org.waveprotocol.wave.util.escapers.jvm.JavaUrlCodec r10;
        org.waveprotocol.wave.model.id.URIEncoderDecoder$EncodingException $r13, $r14;
        int $i0, $i2, $i4;
        java.lang.StringBuilder $r4, $r5, $r6, $r12;
        java.lang.String $r0, $r1, $r7, r11;
        java.io.UnsupportedEncodingException $r8;

        r10 := @this: org.waveprotocol.wave.util.escapers.jvm.JavaUrlCodec;

        r11 := @parameter0: java.lang.String;

     label1:
        $r0 = virtualinvoke r11.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("+", "%2B");

        $r1 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r0, "UTF-8");

        $i2 = (int) 65533;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($i2);

        $i4 = (int) -1;

        if $i0 == $i4 goto label2;

        $r13 = new org.waveprotocol.wave.model.id.URIEncoderDecoder$EncodingException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to decode value ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" it contains invalid UTF-8");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.waveprotocol.wave.model.id.URIEncoderDecoder$EncodingException: void <init>(java.lang.String)>($r7);

        throw $r13;

     label2:
        return $r1;

     label3:
        $r8 := @caughtexception;

        $r14 = new org.waveprotocol.wave.model.id.URIEncoderDecoder$EncodingException;

        specialinvoke $r14.<org.waveprotocol.wave.model.id.URIEncoderDecoder$EncodingException: void <init>(java.lang.Throwable)>($r8);

        throw $r14;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public java.lang.String encode(java.lang.String) throws org.waveprotocol.wave.model.id.URIEncoderDecoder$EncodingException
    {
        org.waveprotocol.wave.model.id.URIEncoderDecoder$EncodingException $r3;
        org.waveprotocol.wave.util.escapers.jvm.JavaUrlCodec r4;
        java.lang.String r0, $r1;
        java.io.UnsupportedEncodingException $r2;

        r4 := @this: org.waveprotocol.wave.util.escapers.jvm.JavaUrlCodec;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r0, "UTF-8");

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.waveprotocol.wave.model.id.URIEncoderDecoder$EncodingException;

        specialinvoke $r3.<org.waveprotocol.wave.model.id.URIEncoderDecoder$EncodingException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
}
