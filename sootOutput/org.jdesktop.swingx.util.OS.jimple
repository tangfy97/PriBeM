public class org.jdesktop.swingx.util.OS extends java.lang.Object
{
    private static final boolean osIsMacOsX;
    private static final boolean osIsWindows;
    private static final boolean osIsWindowsXP;
    private static final boolean osIsWindows2003;
    private static final boolean osIsWindowsVista;
    private static final boolean osIsLinux;

    public void <init>()
    {
        org.jdesktop.swingx.util.OS r0;

        r0 := @this: org.jdesktop.swingx.util.OS;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isMacOSX()
    {
        boolean $z0;

        $z0 = <org.jdesktop.swingx.util.OS: boolean osIsMacOsX>;

        return $z0;
    }

    public static boolean isWindows()
    {
        boolean $z0;

        $z0 = <org.jdesktop.swingx.util.OS: boolean osIsWindows>;

        return $z0;
    }

    public static boolean isWindowsXP()
    {
        boolean $z0;

        $z0 = <org.jdesktop.swingx.util.OS: boolean osIsWindowsXP>;

        return $z0;
    }

    public static boolean isWindows2003()
    {
        boolean $z0;

        $z0 = <org.jdesktop.swingx.util.OS: boolean osIsWindows2003>;

        return $z0;
    }

    public static boolean isWindowsVista()
    {
        boolean $z0;

        $z0 = <org.jdesktop.swingx.util.OS: boolean osIsWindowsVista>;

        return $z0;
    }

    public static boolean isLinux()
    {
        boolean $z0;

        $z0 = <org.jdesktop.swingx.util.OS: boolean osIsLinux>;

        return $z0;
    }

    public static boolean isUsingWindowsVisualStyles()
    {
        java.lang.RuntimeException $r4;
        java.lang.Boolean $r0;
        java.lang.Object $r2;
        java.lang.String $r3;
        boolean $z0, $z1, $z2;
        java.awt.Toolkit $r1;

        $z0 = staticinvoke <org.jdesktop.swingx.util.OS: boolean isWindows()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r0 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r1 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r2 = virtualinvoke $r1.<java.awt.Toolkit: java.lang.Object getDesktopProperty(java.lang.String)>("win.xpstyle.themeActive");

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean equals(java.lang.Object)>($r2);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("swing.noxp");

        if $r3 != null goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;

     label5:
        $r4 := @caughtexception;

        return 1;

        catch java.lang.RuntimeException from label2 to label4 with label5;
    }

    public static java.lang.String getWindowsVisualStyle()
    {
        java.lang.Object $r2;
        java.lang.String $r0, r3;
        java.awt.Toolkit $r1;

        $r0 = staticinvoke <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>("win.xpstyle.name");

        r3 = $r0;

        if $r0 != null goto label1;

        $r1 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r2 = virtualinvoke $r1.<java.awt.Toolkit: java.lang.Object getDesktopProperty(java.lang.String)>("win.xpstyle.colorName");

        r3 = (java.lang.String) $r2;

     label1:
        return r3;
    }

    static void <clinit>()
    {
        int $i0, $i1, $i3, $i5;
        java.lang.String $r0, $r1, r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name");

        r2 = $r0;

        if $r0 == null goto label1;

        r2 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

     label1:
        $r1 = "mac os x";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        <org.jdesktop.swingx.util.OS: boolean osIsMacOsX> = $z0;

        if r2 == null goto label2;

        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("windows");

        $i3 = (int) -1;

        if $i1 == $i3 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        <org.jdesktop.swingx.util.OS: boolean osIsWindows> = $z1;

        $r3 = "windows xp";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        <org.jdesktop.swingx.util.OS: boolean osIsWindowsXP> = $z2;

        $r4 = "windows 2003";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        <org.jdesktop.swingx.util.OS: boolean osIsWindows2003> = $z3;

        $r5 = "windows vista";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        <org.jdesktop.swingx.util.OS: boolean osIsWindowsVista> = $z4;

        if r2 == null goto label4;

        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("linux");

        $i5 = (int) -1;

        if $i0 == $i5 goto label4;

        $z5 = 1;

        goto label5;

     label4:
        $z5 = 0;

     label5:
        <org.jdesktop.swingx.util.OS: boolean osIsLinux> = $z5;

        return;
    }
}
