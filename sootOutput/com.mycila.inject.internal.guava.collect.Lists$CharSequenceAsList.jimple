final class com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList extends java.util.AbstractList
{
    private final java.lang.CharSequence sequence;

    void <init>(java.lang.CharSequence)
    {
        java.lang.CharSequence r1;
        com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList: java.lang.CharSequence sequence> = r1;

        return;
    }

    public java.lang.Character get(int)
    {
        java.lang.CharSequence $r1;
        java.lang.Character $r2;
        int i0;
        char $c1;
        com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList;

        i0 := @parameter0: int;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList: java.lang.CharSequence sequence>;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r2;
    }

    public boolean contains(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList: int indexOf(java.lang.Object)>(r1);

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int indexOf(java.lang.Object)
    {
        java.lang.CharSequence $r3, $r4;
        char $c0, $c2;
        java.lang.Character $r1;
        int $i1, i3, $i4, $i5, $i7;
        java.lang.Object r0;
        com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList r2;
        boolean $z0;

        r2 := @this: com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Character;

        if $z0 == 0 goto label3;

        $r1 = (java.lang.Character) r0;

        $c0 = virtualinvoke $r1.<java.lang.Character: char charValue()>();

        i3 = 0;

     label1:
        $r3 = r2.<com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList: java.lang.CharSequence sequence>;

        $i1 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        if i3 >= $i1 goto label3;

        $r4 = r2.<com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList: java.lang.CharSequence sequence>;

        $c2 = interfaceinvoke $r4.<java.lang.CharSequence: char charAt(int)>(i3);

        $i4 = (int) $c2;

        $i5 = (int) $c0;

        if $i4 != $i5 goto label2;

        return i3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $i7 = (int) -1;

        return $i7;
    }

    public int lastIndexOf(java.lang.Object)
    {
        java.lang.CharSequence $r3, $r4;
        char $c0, $c2;
        java.lang.Character $r1;
        int $i1, i3, $i4, $i5, $i7, $i9;
        java.lang.Object r0;
        com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList r2;
        boolean $z0;

        r2 := @this: com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Character;

        if $z0 == 0 goto label3;

        $r1 = (java.lang.Character) r0;

        $c0 = virtualinvoke $r1.<java.lang.Character: char charValue()>();

        $r3 = r2.<com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList: java.lang.CharSequence sequence>;

        $i1 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        i3 = $i1 - 1;

     label1:
        if i3 < 0 goto label3;

        $r4 = r2.<com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList: java.lang.CharSequence sequence>;

        $c2 = interfaceinvoke $r4.<java.lang.CharSequence: char charAt(int)>(i3);

        $i4 = (int) $c2;

        $i5 = (int) $c0;

        if $i4 != $i5 goto label2;

        return i3;

     label2:
        $i7 = (int) -1;

        i3 = i3 + $i7;

        goto label1;

     label3:
        $i9 = (int) -1;

        return $i9;
    }

    public int size()
    {
        int $i0;
        java.lang.CharSequence $r1;
        com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList: java.lang.CharSequence sequence>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        return $i0;
    }

    public java.util.List subList(int, int)
    {
        java.util.List $r3;
        java.lang.CharSequence $r1, $r2;
        int i0, i1;
        com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList: java.lang.CharSequence sequence>;

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        $r3 = staticinvoke <com.mycila.inject.internal.guava.collect.Lists: java.util.List charactersOf(java.lang.CharSequence)>($r2);

        return $r3;
    }

    public int hashCode()
    {
        java.lang.CharSequence $r1, $r2;
        char $c2;
        int $i0, $i1, i3, i4, $i5;
        com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList;

        i3 = 1;

        i4 = 0;

     label1:
        $r1 = r0.<com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList: java.lang.CharSequence sequence>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if i4 >= $i0 goto label2;

        $i1 = i3 * 31;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList: java.lang.CharSequence sequence>;

        $c2 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>(i4);

        $i5 = (int) $c2;

        i3 = $i1 + $i5;

        i4 = i4 + 1;

        goto label1;

     label2:
        return i3;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Character $r6;
        int $i0, $i1, i4, $i5, $i6;
        boolean $z0, $z1;
        java.lang.CharSequence $r3, $r7;
        java.util.Iterator $r4;
        char $c2, $c3;
        java.util.List r1;
        java.lang.Object r0, $r5;
        com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList r2;

        r2 := @this: com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.List;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (java.util.List) r0;

        $r3 = r2.<com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList: java.lang.CharSequence sequence>;

        $i0 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label2;

        return 0;

     label2:
        $r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

        i4 = 0;

     label3:
        if i4 >= $i0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $z1 = $r5 instanceof java.lang.Character;

        if $z1 == 0 goto label4;

        $r6 = (java.lang.Character) $r5;

        $c2 = virtualinvoke $r6.<java.lang.Character: char charValue()>();

        $r7 = r2.<com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList: java.lang.CharSequence sequence>;

        $c3 = interfaceinvoke $r7.<java.lang.CharSequence: char charAt(int)>(i4);

        $i5 = (int) $c2;

        $i6 = (int) $c3;

        if $i5 == $i6 goto label5;

     label4:
        return 0;

     label5:
        i4 = i4 + 1;

        goto label3;

     label6:
        return 1;
    }

    public volatile java.lang.Object get(int)
    {
        int i0;
        java.lang.Character $r1;
        com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Lists$CharSequenceAsList: java.lang.Character get(int)>(i0);

        return $r1;
    }
}
