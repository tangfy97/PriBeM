public class com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableStrategy extends com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy
{
    private com.mycila.inject.internal.cglib.transform.ClassTransformer t;
    private static final com.mycila.inject.internal.cglib.transform.MethodFilter TRANSFORM_FILTER;

    public void <init>(java.lang.Class)
    {
        com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableTransformer $r1;
        java.lang.Class r2;
        com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableStrategy r0;
        com.mycila.inject.internal.cglib.transform.MethodFilter $r5;
        com.mycila.inject.internal.cglib.transform.ClassTransformer $r4;
        com.mycila.inject.internal.cglib.transform.MethodFilterTransformer $r3;

        r0 := @this: com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableStrategy;

        r2 := @parameter0: java.lang.Class;

        specialinvoke r0.<com.mycila.inject.internal.cglib.core.DefaultGeneratorStrategy: void <init>()>();

        $r1 = new com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableTransformer;

        specialinvoke $r1.<com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableTransformer: void <init>(java.lang.Class)>(r2);

        r0.<com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableStrategy: com.mycila.inject.internal.cglib.transform.ClassTransformer t> = $r1;

        $r3 = new com.mycila.inject.internal.cglib.transform.MethodFilterTransformer;

        $r5 = <com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableStrategy: com.mycila.inject.internal.cglib.transform.MethodFilter TRANSFORM_FILTER>;

        $r4 = r0.<com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableStrategy: com.mycila.inject.internal.cglib.transform.ClassTransformer t>;

        specialinvoke $r3.<com.mycila.inject.internal.cglib.transform.MethodFilterTransformer: void <init>(com.mycila.inject.internal.cglib.transform.MethodFilter,com.mycila.inject.internal.cglib.transform.ClassTransformer)>($r5, $r4);

        r0.<com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableStrategy: com.mycila.inject.internal.cglib.transform.ClassTransformer t> = $r3;

        return;
    }

    protected com.mycila.inject.internal.cglib.core.ClassGenerator transform(com.mycila.inject.internal.cglib.core.ClassGenerator) throws java.lang.Exception
    {
        com.mycila.inject.internal.cglib.core.ClassGenerator r1;
        com.mycila.inject.internal.cglib.transform.TransformingClassGenerator $r0;
        com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableStrategy r2;
        com.mycila.inject.internal.cglib.transform.ClassTransformer $r3;

        r2 := @this: com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableStrategy;

        r1 := @parameter0: com.mycila.inject.internal.cglib.core.ClassGenerator;

        $r0 = new com.mycila.inject.internal.cglib.transform.TransformingClassGenerator;

        $r3 = r2.<com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableStrategy: com.mycila.inject.internal.cglib.transform.ClassTransformer t>;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.transform.TransformingClassGenerator: void <init>(com.mycila.inject.internal.cglib.core.ClassGenerator,com.mycila.inject.internal.cglib.transform.ClassTransformer)>(r1, $r3);

        return $r0;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableStrategy$1 $r0;

        $r0 = new com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableStrategy$1;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableStrategy$1: void <init>()>();

        <com.mycila.inject.internal.cglib.transform.impl.UndeclaredThrowableStrategy: com.mycila.inject.internal.cglib.transform.MethodFilter TRANSFORM_FILTER> = $r0;

        return;
    }
}
