public class com.hp.hpl.jena.reasoner.rulesys.RuleDerivation extends java.lang.Object implements com.hp.hpl.jena.reasoner.Derivation
{
    protected com.hp.hpl.jena.reasoner.rulesys.Rule rule;
    protected com.hp.hpl.jena.graph.Triple conclusion;
    protected java.util.List matches;
    protected com.hp.hpl.jena.reasoner.InfGraph infGraph;

    public void <init>(com.hp.hpl.jena.reasoner.rulesys.Rule, com.hp.hpl.jena.graph.Triple, java.util.List, com.hp.hpl.jena.reasoner.InfGraph)
    {
        com.hp.hpl.jena.reasoner.rulesys.Rule r1;
        java.util.List r3;
        com.hp.hpl.jena.reasoner.rulesys.RuleDerivation r0;
        com.hp.hpl.jena.reasoner.InfGraph r4;
        com.hp.hpl.jena.graph.Triple r2;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.RuleDerivation;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.Rule;

        r2 := @parameter1: com.hp.hpl.jena.graph.Triple;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: com.hp.hpl.jena.reasoner.InfGraph;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: com.hp.hpl.jena.reasoner.rulesys.Rule rule> = r1;

        r0.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: com.hp.hpl.jena.graph.Triple conclusion> = r2;

        r0.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: java.util.List matches> = r3;

        r0.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: com.hp.hpl.jena.reasoner.InfGraph infGraph> = r4;

        return;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.reasoner.rulesys.RuleDerivation r0;
        com.hp.hpl.jena.reasoner.rulesys.Rule $r1, $r4;
        java.lang.StringBuilder $r2, $r3, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.RuleDerivation;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: com.hp.hpl.jena.reasoner.rulesys.Rule rule>;

        if $r1 != null goto label1;

        return "DUMMY";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rule ");

        $r4 = r0.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: com.hp.hpl.jena.reasoner.rulesys.Rule rule>;

        $r5 = virtualinvoke $r4.<com.hp.hpl.jena.reasoner.rulesys.Rule: java.lang.String toShortString()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public void printTrace(java.io.PrintWriter, boolean)
    {
        java.io.PrintWriter r1;
        java.util.HashSet $r2;
        com.hp.hpl.jena.reasoner.rulesys.RuleDerivation r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.RuleDerivation;

        r1 := @parameter0: java.io.PrintWriter;

        z0 := @parameter1: boolean;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)>(r1, z0, 0, $r2);

        return;
    }

    protected void printTrace(java.io.PrintWriter, boolean, int, java.util.HashSet)
    {
        com.hp.hpl.jena.reasoner.rulesys.RuleDerivation r1, r36;
        com.hp.hpl.jena.reasoner.rulesys.ClauseEntry $r14;
        boolean z0, $z1, $z2, $z3;
        java.io.PrintWriter r0;
        com.hp.hpl.jena.graph.Triple r5, $r31;
        java.util.List $r3, $r35;
        java.lang.StringBuilder $r8, $r9, $r11, $r15, $r18, $r19, $r23, $r24, $r26, $r27, $r29, $r30, $r33;
        com.hp.hpl.jena.reasoner.rulesys.Functor $r16;
        com.hp.hpl.jena.reasoner.InfGraph $r6;
        java.util.HashSet r22;
        int i0, $i1, i2, $i3;
        java.lang.String $r2, $r10, $r12, $r17, $r20, $r25, $r28, $r32, $r34;
        java.util.Iterator $r7;
        com.hp.hpl.jena.reasoner.rulesys.Rule $r13;
        java.lang.Object $r4, $r21;

        r1 := @this: com.hp.hpl.jena.reasoner.rulesys.RuleDerivation;

        r0 := @parameter0: java.io.PrintWriter;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r22 := @parameter3: java.util.HashSet;

        staticinvoke <com.hp.hpl.jena.util.PrintUtil: void printIndent(java.io.PrintWriter,int)>(r0, i0);

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r2);

        if z0 == 0 goto label01;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" concluded ");

        $r31 = r1.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: com.hp.hpl.jena.graph.Triple conclusion>;

        $r32 = staticinvoke <com.hp.hpl.jena.util.PrintUtil: java.lang.String print(com.hp.hpl.jena.graph.Triple)>($r31);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r34);

     label01:
        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" <-");

        $i1 = i0 + 4;

        i2 = 0;

     label02:
        $r35 = r1.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: java.util.List matches>;

        $i3 = interfaceinvoke $r35.<java.util.List: int size()>();

        if i2 >= $i3 goto label10;

        $r3 = r1.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: java.util.List matches>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (com.hp.hpl.jena.graph.Triple) $r4;

        $r6 = r1.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: com.hp.hpl.jena.reasoner.InfGraph infGraph>;

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.reasoner.InfGraph: java.util.Iterator getDerivation(com.hp.hpl.jena.graph.Triple)>(r5);

        if $r7 == null goto label03;

        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label07;

     label03:
        staticinvoke <com.hp.hpl.jena.util.PrintUtil: void printIndent(java.io.PrintWriter,int)>(r0, $i1);

        if r5 != null goto label06;

        $r13 = r1.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: com.hp.hpl.jena.reasoner.rulesys.Rule rule>;

        $r14 = virtualinvoke $r13.<com.hp.hpl.jena.reasoner.rulesys.Rule: com.hp.hpl.jena.reasoner.rulesys.ClauseEntry getBodyElement(int)>(i2);

        $z1 = $r14 instanceof com.hp.hpl.jena.reasoner.rulesys.Functor;

        if $z1 == 0 goto label04;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = (com.hp.hpl.jena.reasoner.rulesys.Functor) $r14;

        $r17 = virtualinvoke $r16.<com.hp.hpl.jena.reasoner.rulesys.Functor: java.lang.String getName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("()");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        goto label05;

     label04:
        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("call to built in");

     label05:
        goto label09;

     label06:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fact ");

        $r10 = staticinvoke <com.hp.hpl.jena.util.PrintUtil: java.lang.String print(com.hp.hpl.jena.graph.Triple)>(r5);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        goto label09;

     label07:
        $r21 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r36 = (com.hp.hpl.jena.reasoner.rulesys.RuleDerivation) $r21;

        $z3 = virtualinvoke r22.<java.util.HashSet: boolean contains(java.lang.Object)>(r36);

        if $z3 == 0 goto label08;

        staticinvoke <com.hp.hpl.jena.util.PrintUtil: void printIndent(java.io.PrintWriter,int)>(r0, $i1);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Known ");

        $r25 = staticinvoke <com.hp.hpl.jena.util.PrintUtil: java.lang.String print(com.hp.hpl.jena.graph.Triple)>(r5);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - already shown");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r28);

        goto label09;

     label08:
        virtualinvoke r22.<java.util.HashSet: boolean add(java.lang.Object)>(r36);

        virtualinvoke r36.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)>(r0, z0, $i1, r22);

     label09:
        i2 = i2 + 1;

        goto label02;

     label10:
        return;
    }

    public com.hp.hpl.jena.graph.Triple getConclusion()
    {
        com.hp.hpl.jena.reasoner.rulesys.RuleDerivation r0;
        com.hp.hpl.jena.graph.Triple $r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.RuleDerivation;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: com.hp.hpl.jena.graph.Triple conclusion>;

        return $r1;
    }

    public java.util.List getMatches()
    {
        java.util.List $r1;
        com.hp.hpl.jena.reasoner.rulesys.RuleDerivation r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.RuleDerivation;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: java.util.List matches>;

        return $r1;
    }

    public com.hp.hpl.jena.reasoner.rulesys.Rule getRule()
    {
        com.hp.hpl.jena.reasoner.rulesys.Rule $r1;
        com.hp.hpl.jena.reasoner.rulesys.RuleDerivation r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.RuleDerivation;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: com.hp.hpl.jena.reasoner.rulesys.Rule rule>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        com.hp.hpl.jena.reasoner.rulesys.RuleDerivation r1, r2;
        com.hp.hpl.jena.graph.Triple $r3, $r4;
        java.util.List $r5, $r6;
        com.hp.hpl.jena.reasoner.rulesys.Rule $r7, $r8;
        java.lang.Object r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r2 := @this: com.hp.hpl.jena.reasoner.rulesys.RuleDerivation;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.hp.hpl.jena.reasoner.rulesys.RuleDerivation;

        if $z0 == 0 goto label3;

        r1 = (com.hp.hpl.jena.reasoner.rulesys.RuleDerivation) r0;

        $r3 = r2.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: com.hp.hpl.jena.graph.Triple conclusion>;

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: com.hp.hpl.jena.graph.Triple getConclusion()>();

        $z1 = virtualinvoke $r3.<com.hp.hpl.jena.graph.Triple: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $r5 = r2.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: java.util.List matches>;

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: java.util.List getMatches()>();

        $z2 = interfaceinvoke $r5.<java.util.List: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label1;

        $r7 = r2.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: com.hp.hpl.jena.reasoner.rulesys.Rule rule>;

        $r8 = virtualinvoke r1.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: com.hp.hpl.jena.reasoner.rulesys.Rule getRule()>();

        $z3 = virtualinvoke $r7.<com.hp.hpl.jena.reasoner.rulesys.Rule: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;

     label3:
        return 0;
    }
}
