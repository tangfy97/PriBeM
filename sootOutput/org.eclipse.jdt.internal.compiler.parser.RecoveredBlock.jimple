public class org.eclipse.jdt.internal.compiler.parser.RecoveredBlock extends org.eclipse.jdt.internal.compiler.parser.RecoveredStatement implements org.eclipse.jdt.internal.compiler.parser.TerminalTokens
{
    public org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration;
    public org.eclipse.jdt.internal.compiler.parser.RecoveredStatement[] statements;
    public int statementCount;
    public boolean preserveContent;
    public org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable pendingArgument;
    int pendingModifiers;
    int pendingModifersSourceStart;
    org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations;
    int pendingAnnotationCount;

    public void <init>(org.eclipse.jdt.internal.compiler.ast.Block, org.eclipse.jdt.internal.compiler.parser.RecoveredElement, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Block r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement r2;
        int i0, $i2;
        org.eclipse.jdt.internal.compiler.parser.Parser $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Block;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.parser.RecoveredElement;

        i0 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: void <init>(org.eclipse.jdt.internal.compiler.ast.Statement,org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int)>(r1, r2, i0);

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: boolean preserveContent> = 0;

        $i2 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingModifersSourceStart> = $i2;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration> = r1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: boolean foundOpeningBrace> = 1;

        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $z0 = $r3.<org.eclipse.jdt.internal.compiler.parser.Parser: boolean methodRecoveryActivated>;

        if $z0 != 0 goto label1;

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $z1 = $r4.<org.eclipse.jdt.internal.compiler.parser.Parser: boolean statementRecoveryActivated>;

        if $z1 != 0 goto label1;

        $z2 = 0;

        goto label2;

     label1:
        $z2 = 1;

     label2:
        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: boolean preserveContent> = $z2;

        return;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0, $r6;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r1, $r3, $r4, $r7, $r8;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod r5;
        int i0;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r2;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        i0 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r1 == null goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $z0 = $r3 instanceof org.eclipse.jdt.internal.compiler.parser.RecoveredMethod;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        r5 = (org.eclipse.jdt.internal.compiler.parser.RecoveredMethod) $r4;

        $r6 = r5.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock methodBody>;

        if $r6 != r0 goto label1;

        $r7 = r5.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r7 != null goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void resetPendingModifiers()>();

        return r0;

     label1:
        $r8 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration,int)>(r2, i0);

        return $r8;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Block $r1, r3, $r7;
        int $i0, i1, $i2, $i3, $i4;
        org.eclipse.jdt.internal.compiler.parser.Parser $r5;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0, $r2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r8, $r9;
        org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable $r4, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Block;

        i1 := @parameter1: int;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void resetPendingModifiers()>();

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        if $i0 == 0 goto label1;

        $i4 = r3.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceStart>;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $i3 = $r7.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        if $i4 <= $i3 goto label1;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block,int)>(r3, i1);

        return $r9;

     label1:
        $r2 = new org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        specialinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void <init>(org.eclipse.jdt.internal.compiler.ast.Block,org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int)>(r3, r0, i1);

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable pendingArgument>;

        if $r4 == null goto label2;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable pendingArgument>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void attach(org.eclipse.jdt.internal.compiler.parser.RecoveredStatement)>($r6);

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable pendingArgument> = null;

     label2:
        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $z0 = $r5.<org.eclipse.jdt.internal.compiler.parser.Parser: boolean statementRecoveryActivated>;

        if $z0 == 0 goto label3;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void addBlockStatement(org.eclipse.jdt.internal.compiler.parser.RecoveredBlock)>($r2);

     label3:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void attach(org.eclipse.jdt.internal.compiler.parser.RecoveredStatement)>($r2);

        $i2 = r3.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        if $i2 != 0 goto label4;

        return $r2;

     label4:
        return r0;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;
        int i0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r2;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration,int,boolean)>(r1, i0, 0);

        return $r2;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration, int, boolean)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] $r4;
        org.eclipse.jdt.internal.compiler.ast.Block $r1, $r5;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, z1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r6, $r7;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration r3;
        org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration;

        i1 := @parameter1: int;

        z1 := @parameter2: boolean;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        if $i0 == 0 goto label2;

        $i8 = r3.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int declarationSourceStart>;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $i7 = $r5.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        if $i8 <= $i7 goto label2;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void resetPendingModifiers()>();

        if z1 == 0 goto label1;

        return r0;

     label1:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration,int)>(r3, i1);

        return $r7;

     label2:
        $r2 = new org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable;

        specialinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable: void <init>(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration,org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int)>(r3, r0, i1);

        $i2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingAnnotationCount>;

        if $i2 <= 0 goto label3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingAnnotationCount>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingModifiers>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingModifersSourceStart>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable: void attach(org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[],int,int,int)>($r4, $i6, $i5, $i4);

     label3:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void resetPendingModifiers()>();

        $z0 = r3 instanceof org.eclipse.jdt.internal.compiler.ast.Argument;

        if $z0 == 0 goto label4;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable pendingArgument> = $r2;

        return r0;

     label4:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void attach(org.eclipse.jdt.internal.compiler.parser.RecoveredStatement)>($r2);

        $i3 = r3.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int declarationSourceEnd>;

        if $i3 != 0 goto label5;

        return $r2;

     label5:
        return r0;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Statement, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;
        int i0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Statement;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Statement,int,boolean)>(r1, i0, 0);

        return $r2;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Statement, int, boolean)
    {
        org.eclipse.jdt.internal.compiler.ast.Block $r1, $r4;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r5, $r6;
        org.eclipse.jdt.internal.compiler.ast.Statement r3;
        int $i0, i1, $i2, $i3, $i4;
        org.eclipse.jdt.internal.compiler.parser.RecoveredStatement $r2;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Statement;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void resetPendingModifiers()>();

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        if $i0 == 0 goto label2;

        $i4 = r3.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceStart>;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $i3 = $r4.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        if $i4 <= $i3 goto label2;

        if z0 == 0 goto label1;

        return r0;

     label1:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Statement,int)>(r3, i1);

        return $r6;

     label2:
        $r2 = new org.eclipse.jdt.internal.compiler.parser.RecoveredStatement;

        specialinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: void <init>(org.eclipse.jdt.internal.compiler.ast.Statement,org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int)>(r3, r0, i1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void attach(org.eclipse.jdt.internal.compiler.parser.RecoveredStatement)>($r2);

        $i2 = r3.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceEnd>;

        if $i2 != 0 goto label3;

        return $r2;

     label3:
        return r0;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;
        int i0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r2;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,int,boolean)>(r1, i0, 0);

        return $r2;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, int, boolean)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] $r4;
        org.eclipse.jdt.internal.compiler.ast.Block $r1, $r5;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.eclipse.jdt.internal.compiler.parser.RecoveredType $r2;
        boolean z0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r6, $r7;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        if $i0 == 0 goto label2;

        $i8 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceStart>;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $i7 = $r5.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        if $i8 <= $i7 goto label2;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void resetPendingModifiers()>();

        if z0 == 0 goto label1;

        return r0;

     label1:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,int)>(r3, i1);

        return $r7;

     label2:
        $r2 = new org.eclipse.jdt.internal.compiler.parser.RecoveredType;

        specialinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredType: void <init>(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int)>(r3, r0, i1);

        $i2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingAnnotationCount>;

        if $i2 <= 0 goto label3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingAnnotationCount>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingModifiers>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingModifersSourceStart>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredType: void attach(org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[],int,int,int)>($r4, $i6, $i5, $i4);

     label3:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void resetPendingModifiers()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void attach(org.eclipse.jdt.internal.compiler.parser.RecoveredStatement)>($r2);

        $i3 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceEnd>;

        if $i3 != 0 goto label4;

        return $r2;

     label4:
        return r0;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement addAnnotationName(int, int, int, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] $r1, $r2, $r3, $r4, $r5, $r7;
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation $r6;
        int $i0, $i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        if $r1 != null goto label1;

        $r5 = newarray (org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation)[5];

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations> = $r5;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingAnnotationCount> = 0;

        goto label2;

     label1:
        $i1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingAnnotationCount>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i0 = lengthof $r2;

        if $i1 != $i0 goto label2;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingAnnotationCount>;

        $i7 = 2 * $i6;

        $r3 = newarray (org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation)[$i7];

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations> = $r3;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingAnnotationCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r3, 0, $i8);

     label2:
        $r6 = new org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation: void <init>(int,int,int,org.eclipse.jdt.internal.compiler.parser.RecoveredElement,int)>(i2, i3, i4, r0, i5);

        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingAnnotationCount>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingAnnotationCount> = $i10;

        $r7[$i9] = $r6;

        return $r6;
    }

    public void addModifier(int, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;
        int i0, $i1, $i2, $i3, i4;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingModifiers>;

        $i2 = $i1 | i0;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingModifiers> = $i2;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingModifersSourceStart>;

        if $i3 >= 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingModifersSourceStart> = i4;

     label1:
        return;
    }

    void attach(org.eclipse.jdt.internal.compiler.parser.RecoveredStatement)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredStatement[] $r1, $r2, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.eclipse.jdt.internal.compiler.parser.RecoveredStatement r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement[] statements>;

        if $r1 != null goto label1;

        $r6 = newarray (org.eclipse.jdt.internal.compiler.parser.RecoveredStatement)[5];

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement[] statements> = $r6;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int statementCount> = 0;

        goto label2;

     label1:
        $i1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int statementCount>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement[] statements>;

        $i0 = lengthof $r2;

        if $i1 != $i0 goto label2;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement[] statements>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int statementCount>;

        $i3 = 2 * $i2;

        $r4 = newarray (org.eclipse.jdt.internal.compiler.parser.RecoveredStatement)[$i3];

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement[] statements> = $r4;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int statementCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, $i4);

     label2:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement[] statements>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int statementCount>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int statementCount> = $i6;

        $r7[$i5] = r3;

        return;
    }

    void attachPendingModifiers(org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[], int, int, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;
        int i0, i1, i2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations> = r1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingAnnotationCount> = i0;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingModifiers> = i1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingModifersSourceStart> = i2;

        return;
    }

    public org.eclipse.jdt.internal.compiler.ast.ASTNode parseTree()
    {
        org.eclipse.jdt.internal.compiler.ast.Block $r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        return $r1;
    }

    public void resetPendingModifiers()
    {
        int $i1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation[] pendingAnnotations> = null;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingAnnotationCount> = 0;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingModifiers> = 0;

        $i1 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int pendingModifersSourceStart> = $i1;

        return;
    }

    public java.lang.String toString(int)
    {
        org.eclipse.jdt.internal.compiler.ast.Block $r3;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r1;
        java.lang.StringBuffer $r0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredStatement[] $r4, $r6;
        int i0, $i1, $i2, $i3, i4;
        org.eclipse.jdt.internal.compiler.parser.RecoveredStatement $r7;
        java.lang.String $r2, $r5, $r8;

        r1 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuffer;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: java.lang.String tabString(int)>(i0);

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Recovered block:\n");

        $r3 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $i1 = i0 + 1;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.Block: java.lang.StringBuffer print(int,java.lang.StringBuffer)>($i1, $r0);

        $r4 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement[] statements>;

        if $r4 == null goto label3;

        i4 = 0;

        goto label2;

     label1:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r6 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement[] statements>;

        $r7 = $r6[i4];

        $i3 = i0 + 1;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: java.lang.String toString(int)>($i3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        i4 = i4 + 1;

     label2:
        $i2 = r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int statementCount>;

        if i4 < $i2 goto label1;

     label3:
        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public org.eclipse.jdt.internal.compiler.ast.Block updatedBlock()
    {
        org.eclipse.jdt.internal.compiler.ast.Statement[] r1, $r14, $r17;
        org.eclipse.jdt.internal.compiler.ast.Block $r6, $r10, $r11, $r12, $r13, $r15, $r16, $r20, $r21, $r32, $r35;
        org.eclipse.jdt.internal.compiler.ast.Statement $r9, $r18, $r19;
        org.eclipse.jdt.internal.compiler.parser.RecoveredStatement[] $r2, $r7;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r25, $r28, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable r30;
        org.eclipse.jdt.internal.compiler.parser.RecoveredStatement r3, $r8;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r34;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, $i20;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0, r31;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration $r22, $r23, $r24, r33;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod $r4;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer $r5;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r26, $r27;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: boolean preserveContent>;

        if $z0 == 0 goto label01;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int statementCount>;

        if $i0 != 0 goto label02;

     label01:
        return null;

     label02:
        $i1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int statementCount>;

        r1 = newarray (org.eclipse.jdt.internal.compiler.ast.Statement)[$i1];

        i16 = 0;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement[] statements>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int statementCount>;

        $i3 = $i2 - 1;

        r3 = $r2[$i3];

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod enclosingMethod()>();

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer enclosingInitializer()>();

        if $r4 == null goto label03;

        $r26 = $r4.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        i17 = $r26.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyEnd>;

        if $r5 == null goto label05;

        $r27 = $r4.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration>;

        $i15 = $r27.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $r28 = $r5.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        $i14 = $r28.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        if $i15 >= $i14 goto label05;

        $r29 = $r5.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        i17 = $r29.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        goto label05;

     label03:
        if $r5 == null goto label04;

        $r25 = $r5.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration>;

        i17 = $r25.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        goto label05;

     label04:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $i4 = $r6.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        i17 = $i4 - 1;

     label05:
        $z5 = r3 instanceof org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable;

        if $z5 == 0 goto label06;

        r30 = (org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable) r3;

        $r22 = r30.<org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration>;

        $i13 = $r22.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int declarationSourceEnd>;

        if $i13 != 0 goto label08;

        $r23 = r30.<org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration>;

        $r23.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int declarationSourceEnd> = i17;

        $r24 = r30.<org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration>;

        $r24.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int declarationEnd> = i17;

        goto label08;

     label06:
        $z1 = r3 instanceof org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        if $z1 == 0 goto label07;

        r31 = (org.eclipse.jdt.internal.compiler.parser.RecoveredBlock) r3;

        $r20 = r31.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $i12 = $r20.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        if $i12 != 0 goto label08;

        $r21 = r31.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $r21.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd> = i17;

        goto label08;

     label07:
        $z2 = r3 instanceof org.eclipse.jdt.internal.compiler.parser.RecoveredType;

        if $z2 != 0 goto label08;

        $r18 = r3.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: org.eclipse.jdt.internal.compiler.ast.Statement statement>;

        $i11 = $r18.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceEnd>;

        if $i11 != 0 goto label08;

        $r19 = r3.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: org.eclipse.jdt.internal.compiler.ast.Statement statement>;

        $r19.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceEnd> = i17;

     label08:
        $r32 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        i18 = $r32.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceStart>;

        i19 = 0;

        goto label13;

     label09:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement[] statements>;

        $r8 = $r7[i19];

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: org.eclipse.jdt.internal.compiler.ast.Statement updatedStatement()>();

        if $r9 == null goto label12;

        $i5 = i16;

        i16 = i16 + 1;

        r1[$i5] = $r9;

        $z3 = $r9 instanceof org.eclipse.jdt.internal.compiler.ast.LocalDeclaration;

        if $z3 == 0 goto label10;

        r33 = (org.eclipse.jdt.internal.compiler.ast.LocalDeclaration) $r9;

        $i8 = r33.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int declarationSourceEnd>;

        if $i8 <= i18 goto label12;

        i18 = r33.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int declarationSourceEnd>;

        goto label12;

     label10:
        $z4 = $r9 instanceof org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        if $z4 == 0 goto label11;

        r34 = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) $r9;

        $i7 = r34.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceEnd>;

        if $i7 <= i18 goto label12;

        i18 = r34.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceEnd>;

        goto label12;

     label11:
        $i6 = $r9.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceEnd>;

        if $i6 <= i18 goto label12;

        i18 = $r9.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceEnd>;

     label12:
        i19 = i19 + 1;

     label13:
        $i20 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int statementCount>;

        if i19 < $i20 goto label09;

        if i16 != 0 goto label14;

        return null;

     label14:
        $i9 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int statementCount>;

        if i16 == $i9 goto label15;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $r14 = newarray (org.eclipse.jdt.internal.compiler.ast.Statement)[i16];

        $r15.<org.eclipse.jdt.internal.compiler.ast.Block: org.eclipse.jdt.internal.compiler.ast.Statement[] statements> = $r14;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $r17 = $r16.<org.eclipse.jdt.internal.compiler.ast.Block: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r17, 0, i16);

        goto label16;

     label15:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $r10.<org.eclipse.jdt.internal.compiler.ast.Block: org.eclipse.jdt.internal.compiler.ast.Statement[] statements> = r1;

     label16:
        $r11 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $i10 = $r11.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        if $i10 != 0 goto label18;

        if i18 >= i17 goto label17;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $r13.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd> = i17;

        goto label18;

     label17:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $r12.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd> = i18;

     label18:
        $r35 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        return $r35;
    }

    public org.eclipse.jdt.internal.compiler.ast.Statement updatedStatement()
    {
        org.eclipse.jdt.internal.compiler.ast.Block $r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block updatedBlock()>();

        return $r1;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement updateOnClosingBrace(int, int)
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0, $r5, $r8;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r1, $r4, $r6, $r7, $r9, $r10;
        org.eclipse.jdt.internal.compiler.parser.RecoveredMethod $r2;
        org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer $r3;
        int $i0, $i1, i2, i3;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int bracketBalance>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int bracketBalance> = $i1;

        if $i1 > 0 goto label3;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        if $r1 == null goto label3;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void updateSourceEndIfNecessary(int,int)>(i2, i3);

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod enclosingMethod()>();

        if $r2 == null goto label1;

        $r8 = $r2.<org.eclipse.jdt.internal.compiler.parser.RecoveredMethod: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock methodBody>;

        if $r8 != r0 goto label1;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement updateOnClosingBrace(int,int)>(i2, i3);

        return $r10;

     label1:
        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer enclosingInitializer()>();

        if $r3 == null goto label2;

        $r5 = $r3.<org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock initializerBody>;

        if $r5 != r0 goto label2;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement updateOnClosingBrace(int,int)>(i2, i3);

        return $r7;

     label2:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        return $r4;

     label3:
        return r0;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement updateOnOpeningBrace(int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Block $r0;
        org.eclipse.jdt.internal.compiler.parser.Scanner $r3;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r1;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r4;
        int $i0, i1, i2;
        org.eclipse.jdt.internal.compiler.parser.Parser $r2;

        r1 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        $r0 = new org.eclipse.jdt.internal.compiler.ast.Block;

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.ast.Block: void <init>(int)>(0);

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.Parser parser()>();

        $r3 = $r2.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.parser.Scanner scanner>;

        $i0 = $r3.<org.eclipse.jdt.internal.compiler.parser.Scanner: int startPosition>;

        $r0.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceStart> = $i0;

        $r4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.Block,int)>($r0, 1);

        return $r4;
    }

    public void updateParseTree()
    {
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block updatedBlock()>();

        return;
    }

    public org.eclipse.jdt.internal.compiler.ast.Statement updateStatement()
    {
        org.eclipse.jdt.internal.compiler.ast.Statement[] r2, $r8, $r11;
        org.eclipse.jdt.internal.compiler.ast.Block $r1, $r6, $r7, $r9, $r10;
        org.eclipse.jdt.internal.compiler.ast.Statement $r5;
        org.eclipse.jdt.internal.compiler.parser.RecoveredStatement[] $r3;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i7;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredStatement $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        if $i0 != 0 goto label1;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int statementCount>;

        if $i1 != 0 goto label2;

     label1:
        return null;

     label2:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int statementCount>;

        r2 = newarray (org.eclipse.jdt.internal.compiler.ast.Statement)[$i2];

        i5 = 0;

        i6 = 0;

        goto label5;

     label3:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredStatement[] statements>;

        $r4 = $r3[i6];

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.parser.RecoveredStatement: org.eclipse.jdt.internal.compiler.ast.Statement updatedStatement()>();

        if $r5 == null goto label4;

        $i3 = i5;

        i5 = i5 + 1;

        r2[$i3] = $r5;

     label4:
        i6 = i6 + 1;

     label5:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int statementCount>;

        if i6 < $i7 goto label3;

        if i5 != 0 goto label6;

        return null;

     label6:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int statementCount>;

        if i5 == $i4 goto label7;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $r8 = newarray (org.eclipse.jdt.internal.compiler.ast.Statement)[i5];

        $r9.<org.eclipse.jdt.internal.compiler.ast.Block: org.eclipse.jdt.internal.compiler.ast.Statement[] statements> = $r8;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $r11 = $r10.<org.eclipse.jdt.internal.compiler.ast.Block: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r11, 0, i5);

        goto label8;

     label7:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $r6.<org.eclipse.jdt.internal.compiler.ast.Block: org.eclipse.jdt.internal.compiler.ast.Statement[] statements> = r2;

     label8:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        return $r7;
    }

    public org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Block $r5, $r6;
        char[][] $r4;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r1;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredBlock r0;
        org.eclipse.jdt.internal.compiler.parser.RecoveredElement $r7, $r8, $r12, $r13;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r9;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r2, $r3;
        char[] $r10, $r11;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.RecoveredBlock;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        i2 := @parameter1: int;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void resetPendingModifiers()>();

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int modifiers>;

        $i11 = (int) -17;

        $i1 = $i0 & $i11;

        if $i1 != 0 goto label1;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r2 == null goto label1;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getTypeName()>();

        $i3 = lengthof $r4;

        if $i3 != 1 goto label2;

        $r10 = $r4[0];

        $r9 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        $r11 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] sourceName()>();

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r10, $r11);

        if $z0 == 0 goto label2;

     label1:
        $i7 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceStart>;

        $i8 = $i7 - 1;

        $i9 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: int previousAvailableLineEnd(int)>($i8);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: void updateSourceEndIfNecessary(int)>($i9);

        $r12 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration,int)>(r1, i2);

        return $r13;

     label2:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $i4 = $r5.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        if $i4 == 0 goto label3;

        $i6 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceStart>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.ast.Block blockDeclaration>;

        $i5 = $r6.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        if $i6 <= $i5 goto label3;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.RecoveredBlock: org.eclipse.jdt.internal.compiler.parser.RecoveredElement parent>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.parser.RecoveredElement: org.eclipse.jdt.internal.compiler.parser.RecoveredElement add(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration,int)>(r1, i2);

        return $r8;

     label3:
        return r0;
    }
}
