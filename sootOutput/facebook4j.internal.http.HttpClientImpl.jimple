public class facebook4j.internal.http.HttpClientImpl extends facebook4j.internal.http.HttpClientBase implements facebook4j.internal.http.HttpClient, facebook4j.internal.http.HttpResponseCode, java.io.Serializable
{
    private static final facebook4j.internal.logging.Logger logger;
    private static boolean isJDK14orEarlier;
    private static final long serialVersionUID;
    private static final java.util.Map instanceMap;

    public void <init>()
    {
        facebook4j.internal.http.HttpClientImpl r0;
        facebook4j.conf.Configuration $r1;

        r0 := @this: facebook4j.internal.http.HttpClientImpl;

        $r1 = staticinvoke <facebook4j.conf.ConfigurationContext: facebook4j.conf.Configuration getInstance()>();

        specialinvoke r0.<facebook4j.internal.http.HttpClientBase: void <init>(facebook4j.internal.http.HttpClientConfiguration)>($r1);

        return;
    }

    public void <init>(facebook4j.internal.http.HttpClientConfiguration)
    {
        facebook4j.internal.http.HttpClientImpl r0;
        facebook4j.internal.http.HttpClientConfiguration r1;
        facebook4j.internal.logging.Logger $r2;
        boolean $z0, $z1;

        r0 := @this: facebook4j.internal.http.HttpClientImpl;

        r1 := @parameter0: facebook4j.internal.http.HttpClientConfiguration;

        specialinvoke r0.<facebook4j.internal.http.HttpClientBase: void <init>(facebook4j.internal.http.HttpClientConfiguration)>(r1);

        $z0 = virtualinvoke r0.<facebook4j.internal.http.HttpClientImpl: boolean isProxyConfigured()>();

        if $z0 == 0 goto label1;

        $z1 = <facebook4j.internal.http.HttpClientImpl: boolean isJDK14orEarlier>;

        if $z1 == 0 goto label1;

        $r2 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        virtualinvoke $r2.<facebook4j.internal.logging.Logger: void warn(java.lang.String)>("HTTP Proxy is not supported on JDK1.4 or earlier. Try facebook4j-httpclient-supoprt artifact");

     label1:
        return;
    }

    public static facebook4j.internal.http.HttpClient getInstance(facebook4j.internal.http.HttpClientConfiguration)
    {
        facebook4j.internal.http.HttpClientImpl $r3;
        facebook4j.internal.http.HttpClientConfiguration r0;
        java.util.Map $r1, $r4;
        java.lang.Object $r2;
        facebook4j.internal.http.HttpClient r5;

        r0 := @parameter0: facebook4j.internal.http.HttpClientConfiguration;

        $r1 = <facebook4j.internal.http.HttpClientImpl: java.util.Map instanceMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r5 = (facebook4j.internal.http.HttpClient) $r2;

        if null != r5 goto label1;

        $r3 = new facebook4j.internal.http.HttpClientImpl;

        specialinvoke $r3.<facebook4j.internal.http.HttpClientImpl: void <init>(facebook4j.internal.http.HttpClientConfiguration)>(r0);

        r5 = $r3;

        $r4 = <facebook4j.internal.http.HttpClientImpl: java.util.Map instanceMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r3);

     label1:
        return r5;
    }

    public facebook4j.internal.http.HttpResponse get(java.lang.String) throws facebook4j.FacebookException
    {
        facebook4j.internal.http.HttpClientImpl r0;
        facebook4j.internal.http.HttpRequest $r1;
        facebook4j.internal.http.HttpResponse $r4;
        java.lang.String r2;
        facebook4j.internal.http.RequestMethod $r3;

        r0 := @this: facebook4j.internal.http.HttpClientImpl;

        r2 := @parameter0: java.lang.String;

        $r1 = new facebook4j.internal.http.HttpRequest;

        $r3 = <facebook4j.internal.http.RequestMethod: facebook4j.internal.http.RequestMethod GET>;

        specialinvoke $r1.<facebook4j.internal.http.HttpRequest: void <init>(facebook4j.internal.http.RequestMethod,java.lang.String,facebook4j.internal.http.HttpParameter[],facebook4j.auth.Authorization,java.util.Map)>($r3, r2, null, null, null);

        $r4 = virtualinvoke r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpResponse request(facebook4j.internal.http.HttpRequest)>($r1);

        return $r4;
    }

    public facebook4j.internal.http.HttpResponse post(java.lang.String, facebook4j.internal.http.HttpParameter[]) throws facebook4j.FacebookException
    {
        facebook4j.internal.http.HttpClientImpl r0;
        facebook4j.internal.http.HttpParameter[] r3;
        facebook4j.internal.http.HttpRequest $r1;
        facebook4j.internal.http.HttpResponse $r5;
        java.lang.String r2;
        facebook4j.internal.http.RequestMethod $r4;

        r0 := @this: facebook4j.internal.http.HttpClientImpl;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: facebook4j.internal.http.HttpParameter[];

        $r1 = new facebook4j.internal.http.HttpRequest;

        $r4 = <facebook4j.internal.http.RequestMethod: facebook4j.internal.http.RequestMethod POST>;

        specialinvoke $r1.<facebook4j.internal.http.HttpRequest: void <init>(facebook4j.internal.http.RequestMethod,java.lang.String,facebook4j.internal.http.HttpParameter[],facebook4j.auth.Authorization,java.util.Map)>($r4, r2, r3, null, null);

        $r5 = virtualinvoke r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpResponse request(facebook4j.internal.http.HttpRequest)>($r1);

        return $r5;
    }

    public facebook4j.internal.http.HttpResponse request(facebook4j.internal.http.HttpRequest) throws facebook4j.FacebookException
    {
        java.net.HttpURLConnection $r4;
        byte[] $r30, $r65;
        java.io.BufferedInputStream $r125;
        java.util.Map $r12;
        facebook4j.internal.http.RequestMethod $r5, $r7, $r8;
        java.lang.StringBuilder $r22, $r23, $r24, $r34, $r35, $r38, $r39, $r42, $r43, $r49, $r50, $r53, $r54, $r57, $r59, $r60, $r67, $r68, $r71, $r73, $r74, $r77, $r78, $r81, $r83, $r84, $r111, $r113, $r114, $r117, $r118, $r119, $r121, $r122, $r123, $r126, $r127, $r128, $r130, $r133;
        facebook4j.internal.http.HttpResponseImpl r97, $r129;
        long $l4, $l15;
        java.io.IOException $r89;
        facebook4j.internal.http.HttpClientImpl r0;
        facebook4j.internal.logging.Logger $r10, $r11, $r19, $r21, $r29, $r62, $r103, $r109;
        int $i0, i1, $i2, $i3, $i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i17, $i19;
        java.io.FileInputStream $r124;
        java.lang.Object $r15, $r16, $r18;
        facebook4j.internal.http.HttpParameter r99;
        facebook4j.internal.http.HttpClientConfiguration $r1, $r9, $r90, $r102, $r112, $r116;
        facebook4j.internal.http.HttpParameter[] $r26, $r27, $r47;
        java.io.DataOutputStream $r120;
        java.util.Set $r13;
        java.lang.Exception $r93, $r95, $r96;
        facebook4j.FacebookException $r131, $r132;
        java.lang.Throwable $r94;
        java.lang.String $r3, $r6, $r25, $r28, $r31, $r36, $r40, $r44, $r51, $r55, $r58, $r61, $r63, $r64, $r69, $r72, $r76, $r79, $r82, $r85, $r92, r104, r106, $r108, $r115;
        java.io.File $r75, $r87;
        facebook4j.internal.http.HttpRequest r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.List r105;
        java.io.OutputStream $r32, $r45, r98;
        java.util.Iterator $r14, $r17;
        java.lang.InterruptedException $r88;
        java.io.InputStream $r100;

        r0 := @this: facebook4j.internal.http.HttpClientImpl;

        r2 := @parameter0: facebook4j.internal.http.HttpRequest;

        $r1 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $i0 = interfaceinvoke $r1.<facebook4j.internal.http.HttpClientConfiguration: int getHttpRetryCount()>();

        i1 = $i0 + 1;

        r97 = null;

        i6 = 0;

     label01:
        if i6 >= i1 goto label42;

        $i17 = (int) -1;

        i7 = $i17;

     label02:
        r98 = null;

     label03:
        $r3 = virtualinvoke r2.<facebook4j.internal.http.HttpRequest: java.lang.String getURL()>();

        $r4 = virtualinvoke r0.<facebook4j.internal.http.HttpClientImpl: java.net.HttpURLConnection getConnection(java.lang.String)>($r3);

        virtualinvoke $r4.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        specialinvoke r0.<facebook4j.internal.http.HttpClientImpl: void setHeaders(facebook4j.internal.http.HttpRequest,java.net.HttpURLConnection)>(r2, $r4);

        $r5 = virtualinvoke r2.<facebook4j.internal.http.HttpRequest: facebook4j.internal.http.RequestMethod getMethod()>();

        $r6 = virtualinvoke $r5.<facebook4j.internal.http.RequestMethod: java.lang.String name()>();

        virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r6);

        $r7 = virtualinvoke r2.<facebook4j.internal.http.HttpRequest: facebook4j.internal.http.RequestMethod getMethod()>();

        $r8 = <facebook4j.internal.http.RequestMethod: facebook4j.internal.http.RequestMethod POST>;

        if $r7 != $r8 goto label14;

        $r26 = virtualinvoke r2.<facebook4j.internal.http.HttpRequest: facebook4j.internal.http.HttpParameter[] getParameters()>();

        $z3 = staticinvoke <facebook4j.internal.http.HttpParameter: boolean containsFile(facebook4j.internal.http.HttpParameter[])>($r26);

        if $z3 == 0 goto label12;

        $r117 = new java.lang.StringBuilder;

        specialinvoke $r117.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("----Facebook4J-upload");

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        $r118 = new java.lang.StringBuilder;

        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multipart/form-data; boundary=");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r40);

        $r119 = new java.lang.StringBuilder;

        specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $r45 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        r98 = $r45;

        $r120 = new java.io.DataOutputStream;

        specialinvoke $r120.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r45);

        $r47 = virtualinvoke r2.<facebook4j.internal.http.HttpRequest: facebook4j.internal.http.HttpParameter[] getParameters()>();

        i8 = lengthof $r47;

        i9 = 0;

     label04:
        if i9 >= i8 goto label11;

        r99 = $r47[i9];

        $z4 = virtualinvoke r99.<facebook4j.internal.http.HttpParameter: boolean isFile()>();

        if $z4 == 0 goto label09;

        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<facebook4j.internal.http.HttpClientImpl: void write(java.io.DataOutputStream,java.lang.String)>($r120, $r69);

        $r122 = new java.lang.StringBuilder;

        specialinvoke $r122.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Disposition: form-data; name=\"");

        $r72 = virtualinvoke r99.<facebook4j.internal.http.HttpParameter: java.lang.String getName()>();

        $r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"; filename=\"");

        $r75 = virtualinvoke r99.<facebook4j.internal.http.HttpParameter: java.io.File getFile()>();

        $r76 = virtualinvoke $r75.<java.io.File: java.lang.String getName()>();

        $r77 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\r\n");

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<facebook4j.internal.http.HttpClientImpl: void write(java.io.DataOutputStream,java.lang.String)>($r120, $r79);

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Type: ");

        $r82 = virtualinvoke r99.<facebook4j.internal.http.HttpParameter: java.lang.String getContentType()>();

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n\r\n");

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<facebook4j.internal.http.HttpClientImpl: void write(java.io.DataOutputStream,java.lang.String)>($r120, $r85);

        $r125 = new java.io.BufferedInputStream;

        $z5 = virtualinvoke r99.<facebook4j.internal.http.HttpParameter: boolean hasFileBody()>();

        if $z5 == 0 goto label05;

        $r100 = virtualinvoke r99.<facebook4j.internal.http.HttpParameter: java.io.InputStream getFileBody()>();

        goto label06;

     label05:
        $r124 = new java.io.FileInputStream;

        $r100 = $r124;

        $r87 = virtualinvoke r99.<facebook4j.internal.http.HttpParameter: java.io.File getFile()>();

        specialinvoke $r124.<java.io.FileInputStream: void <init>(java.io.File)>($r87);

     label06:
        specialinvoke $r125.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r100);

     label07:
        $i10 = virtualinvoke $r125.<java.io.BufferedInputStream: int read()>();

        $i19 = (int) -1;

        if $i10 == $i19 goto label08;

        virtualinvoke $r120.<java.io.DataOutputStream: void write(int)>($i10);

        goto label07;

     label08:
        virtualinvoke r0.<facebook4j.internal.http.HttpClientImpl: void write(java.io.DataOutputStream,java.lang.String)>($r120, "\r\n");

        virtualinvoke $r125.<java.io.BufferedInputStream: void close()>();

        goto label10;

     label09:
        $r126 = new java.lang.StringBuilder;

        specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<facebook4j.internal.http.HttpClientImpl: void write(java.io.DataOutputStream,java.lang.String)>($r120, $r55);

        $r127 = new java.lang.StringBuilder;

        specialinvoke $r127.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Disposition: form-data; name=\"");

        $r58 = virtualinvoke r99.<facebook4j.internal.http.HttpParameter: java.lang.String getName()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\r\n");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<facebook4j.internal.http.HttpClientImpl: void write(java.io.DataOutputStream,java.lang.String)>($r120, $r61);

        virtualinvoke r0.<facebook4j.internal.http.HttpClientImpl: void write(java.io.DataOutputStream,java.lang.String)>($r120, "Content-Type: text/plain; charset=UTF-8\r\n\r\n");

        $r62 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        $r63 = virtualinvoke r99.<facebook4j.internal.http.HttpParameter: java.lang.String getValue()>();

        virtualinvoke $r62.<facebook4j.internal.logging.Logger: void debug(java.lang.String)>($r63);

        $r64 = virtualinvoke r99.<facebook4j.internal.http.HttpParameter: java.lang.String getValue()>();

        $r65 = virtualinvoke $r64.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r120.<java.io.DataOutputStream: void write(byte[])>($r65);

        virtualinvoke r0.<facebook4j.internal.http.HttpClientImpl: void write(java.io.DataOutputStream,java.lang.String)>($r120, "\r\n");

     label10:
        i9 = i9 + 1;

        goto label04;

     label11:
        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--\r\n");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<facebook4j.internal.http.HttpClientImpl: void write(java.io.DataOutputStream,java.lang.String)>($r120, $r51);

        virtualinvoke r0.<facebook4j.internal.http.HttpClientImpl: void write(java.io.DataOutputStream,java.lang.String)>($r120, "\r\n");

        goto label13;

     label12:
        virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-www-form-urlencoded");

        $r27 = virtualinvoke r2.<facebook4j.internal.http.HttpRequest: facebook4j.internal.http.HttpParameter[] getParameters()>();

        $r28 = staticinvoke <facebook4j.internal.http.HttpParameter: java.lang.String encodeParameters(facebook4j.internal.http.HttpParameter[])>($r27);

        $r29 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        virtualinvoke $r29.<facebook4j.internal.logging.Logger: void debug(java.lang.String,java.lang.String)>("Post Params: ", $r28);

        $r30 = virtualinvoke $r28.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i3 = lengthof $r30;

        $r31 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Length", $r31);

        virtualinvoke $r4.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $r32 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        r98 = $r32;

        virtualinvoke $r32.<java.io.OutputStream: void write(byte[])>($r30);

     label13:
        virtualinvoke r98.<java.io.OutputStream: void flush()>();

        virtualinvoke r98.<java.io.OutputStream: void close()>();

     label14:
        $r129 = new facebook4j.internal.http.HttpResponseImpl;

        $r102 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        specialinvoke $r129.<facebook4j.internal.http.HttpResponseImpl: void <init>(java.net.HttpURLConnection,facebook4j.internal.http.HttpClientConfiguration)>($r4, $r102);

        r97 = $r129;

        $i11 = virtualinvoke $r4.<java.net.HttpURLConnection: int getResponseCode()>();

        i7 = $i11;

        $r103 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        $z6 = virtualinvoke $r103.<facebook4j.internal.logging.Logger: boolean isDebugEnabled()>();

        if $z6 == 0 goto label20;

        $r11 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        virtualinvoke $r11.<facebook4j.internal.logging.Logger: void debug(java.lang.String)>("Response: ");

        $r12 = virtualinvoke $r4.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set keySet()>();

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label15:
        $z1 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label20;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r104 = (java.lang.String) $r15;

        $r16 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r104);

        r105 = (java.util.List) $r16;

        $r17 = interfaceinvoke r105.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z2 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label19;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r106 = (java.lang.String) $r18;

        if r104 == null goto label17;

        $r21 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        $r130 = new java.lang.StringBuilder;

        specialinvoke $r130.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r104);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r106);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<facebook4j.internal.logging.Logger: void debug(java.lang.String)>($r25);

        goto label18;

     label17:
        $r19 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        virtualinvoke $r19.<facebook4j.internal.logging.Logger: void debug(java.lang.String)>(r106);

     label18:
        goto label16;

     label19:
        goto label15;

     label20:
        if $i11 < 200 goto label21;

        if $i11 == 302 goto label23;

        if 300 > $i11 goto label23;

     label21:
        if $i11 == 420 goto label22;

        if $i11 == 400 goto label22;

        if $i11 < 500 goto label22;

        $r9 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $i2 = interfaceinvoke $r9.<facebook4j.internal.http.HttpClientConfiguration: int getHttpRetryCount()>();

        if i6 != $i2 goto label27;

     label22:
        $r131 = new facebook4j.FacebookException;

        $r108 = virtualinvoke $r129.<facebook4j.internal.http.HttpResponse: java.lang.String asString()>();

        specialinvoke $r131.<facebook4j.FacebookException: void <init>(java.lang.String,facebook4j.internal.http.HttpResponse)>($r108, $r129);

        throw $r131;

     label23:
        virtualinvoke r98.<java.io.OutputStream: void close()>();

     label24:
        goto label26;

     label25:
        $r96 := @caughtexception;

     label26:
        goto label42;

     label27:
        virtualinvoke r98.<java.io.OutputStream: void close()>();

     label28:
        goto label35;

     label29:
        $r95 := @caughtexception;

        goto label35;

     label30:
        $r94 := @caughtexception;

     label31:
        virtualinvoke r98.<java.io.OutputStream: void close()>();

     label32:
        goto label34;

     label33:
        $r93 := @caughtexception;

     label34:
        throw $r94;

     label35:
        goto label37;

     label36:
        $r89 := @caughtexception;

        $r90 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $i5 = interfaceinvoke $r90.<facebook4j.internal.http.HttpClientConfiguration: int getHttpRetryCount()>();

        if i6 != $i5 goto label37;

        $r132 = new facebook4j.FacebookException;

        $r92 = virtualinvoke $r89.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r132.<facebook4j.FacebookException: void <init>(java.lang.String,java.lang.Throwable,int)>($r92, $r89, i7);

        throw $r132;

     label37:
        $r10 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        $z0 = virtualinvoke $r10.<facebook4j.internal.logging.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label38;

        if r97 == null goto label38;

        virtualinvoke r97.<facebook4j.internal.http.HttpResponse: java.lang.String asString()>();

     label38:
        $r109 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        $r133 = new java.lang.StringBuilder;

        specialinvoke $r133.<java.lang.StringBuilder: void <init>()>();

        $r111 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sleeping ");

        $r112 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $i12 = interfaceinvoke $r112.<facebook4j.internal.http.HttpClientConfiguration: int getHttpRetryIntervalSeconds()>();

        $r113 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds until the next retry.");

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r109.<facebook4j.internal.logging.Logger: void debug(java.lang.String)>($r115);

        $r116 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $i13 = interfaceinvoke $r116.<facebook4j.internal.http.HttpClientConfiguration: int getHttpRetryIntervalSeconds()>();

        $i14 = $i13 * 1000;

        $l15 = (long) $i14;

        staticinvoke <java.lang.Thread: void sleep(long)>($l15);

     label39:
        goto label41;

     label40:
        $r88 := @caughtexception;

     label41:
        i6 = i6 + 1;

        goto label01;

     label42:
        return r97;

        catch java.lang.Exception from label23 to label24 with label25;
        catch java.lang.Exception from label27 to label28 with label29;
        catch java.lang.Throwable from label03 to label23 with label30;
        catch java.lang.Exception from label31 to label32 with label33;
        catch java.lang.Throwable from label30 to label31 with label30;
        catch java.io.IOException from label02 to label26 with label36;
        catch java.io.IOException from label27 to label35 with label36;
        catch java.lang.InterruptedException from label37 to label39 with label40;
    }

    public static java.lang.String encode(java.lang.String)
    {
        java.lang.String r0, $r1;
        java.lang.AssertionError $r3;
        java.io.UnsupportedEncodingException $r2;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r0, "UTF-8");

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("will never happen");

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    private void setHeaders(facebook4j.internal.http.HttpRequest, java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection r8;
        facebook4j.internal.http.HttpRequest r1;
        java.util.Map $r2, $r3, $r9, $r16;
        boolean $z0, $z1;
        facebook4j.internal.http.HttpClientImpl r30;
        java.util.Set $r4;
        facebook4j.internal.http.RequestMethod $r24;
        facebook4j.internal.logging.Logger $r0, $r13, $r21, $r23;
        java.lang.StringBuilder $r12, $r14, $r15, $r19, $r22, $r26, $r27;
        java.lang.String r7, $r11, $r18, $r20, $r25, $r28, $r29;
        java.util.Iterator $r5;
        java.lang.Object $r6, $r10, $r17;

        r30 := @this: facebook4j.internal.http.HttpClientImpl;

        r1 := @parameter0: facebook4j.internal.http.HttpRequest;

        r8 := @parameter1: java.net.HttpURLConnection;

        $r0 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        $z0 = virtualinvoke $r0.<facebook4j.internal.logging.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r21 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        virtualinvoke $r21.<facebook4j.internal.logging.Logger: void debug(java.lang.String)>("Request: ");

        $r23 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke r1.<facebook4j.internal.http.HttpRequest: facebook4j.internal.http.RequestMethod getMethod()>();

        $r25 = virtualinvoke $r24.<facebook4j.internal.http.RequestMethod: java.lang.String name()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = virtualinvoke r1.<facebook4j.internal.http.HttpRequest: java.lang.String getURL()>();

        virtualinvoke $r23.<facebook4j.internal.logging.Logger: void debug(java.lang.String,java.lang.String)>($r28, $r29);

     label1:
        $r2 = virtualinvoke r1.<facebook4j.internal.http.HttpRequest: java.util.Map getRequestHeaders()>();

        if $r2 == null goto label3;

        $r3 = virtualinvoke r1.<facebook4j.internal.http.HttpRequest: java.util.Map getRequestHeaders()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $r9 = virtualinvoke r1.<facebook4j.internal.http.HttpRequest: java.util.Map getRequestHeaders()>();

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        $r11 = (java.lang.String) $r10;

        virtualinvoke r8.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>(r7, $r11);

        $r13 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r16 = virtualinvoke r1.<facebook4j.internal.http.HttpRequest: java.util.Map getRequestHeaders()>();

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        $r18 = (java.lang.String) $r17;

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<facebook4j.internal.logging.Logger: void debug(java.lang.String)>($r20);

        goto label2;

     label3:
        return;
    }

    protected java.net.HttpURLConnection getConnection(java.lang.String) throws java.io.IOException
    {
        java.net.HttpURLConnection r47;
        java.net.URL $r1, $r8;
        facebook4j.internal.http.HttpClientConfiguration $r4, $r5, $r6, $r13, $r17, $r21, $r28, $r35, $r42, $r44, $r48, $r49;
        java.net.Proxy $r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        facebook4j.internal.http.HttpClientImpl r0;
        java.net.InetSocketAddress $r45;
        facebook4j.internal.logging.Logger $r11, $r23, $r26, $r33, $r46;
        java.lang.StringBuilder $r10, $r12, $r15, $r16, $r18, $r19, $r25, $r27, $r30, $r32, $r34, $r38;
        facebook4j.internal.http.HttpClientImpl$1 $r24;
        java.net.Proxy$Type $r41;
        java.net.URLConnection $r3, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String r2, $r7, $r14, $r20, $r22, $r29, $r31, $r36, $r37, $r39, $r43;

        r0 := @this: facebook4j.internal.http.HttpClientImpl;

        r2 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<facebook4j.internal.http.HttpClientImpl: boolean isProxyConfigured()>();

        if $z0 == 0 goto label4;

        $z3 = <facebook4j.internal.http.HttpClientImpl: boolean isJDK14orEarlier>;

        if $z3 != 0 goto label4;

        $r6 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $r7 = interfaceinvoke $r6.<facebook4j.internal.http.HttpClientConfiguration: java.lang.String getHttpProxyUser()>();

        if $r7 == null goto label2;

        $r21 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $r22 = interfaceinvoke $r21.<facebook4j.internal.http.HttpClientConfiguration: java.lang.String getHttpProxyUser()>();

        $z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z4 != 0 goto label2;

        $r23 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        $z5 = virtualinvoke $r23.<facebook4j.internal.logging.Logger: boolean isDebugEnabled()>();

        if $z5 == 0 goto label1;

        $r26 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proxy AuthUser: ");

        $r28 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $r29 = interfaceinvoke $r28.<facebook4j.internal.http.HttpClientConfiguration: java.lang.String getHttpProxyUser()>();

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<facebook4j.internal.logging.Logger: void debug(java.lang.String)>($r31);

        $r33 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proxy AuthPassword: ");

        $r35 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $r36 = interfaceinvoke $r35.<facebook4j.internal.http.HttpClientConfiguration: java.lang.String getHttpProxyPassword()>();

        $r37 = staticinvoke <facebook4j.internal.util.z_F4JInternalStringUtil: java.lang.String maskString(java.lang.String)>($r36);

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<facebook4j.internal.logging.Logger: void debug(java.lang.String)>($r39);

     label1:
        $r24 = new facebook4j.internal.http.HttpClientImpl$1;

        specialinvoke $r24.<facebook4j.internal.http.HttpClientImpl$1: void <init>(facebook4j.internal.http.HttpClientImpl)>(r0);

        staticinvoke <java.net.Authenticator: void setDefault(java.net.Authenticator)>($r24);

     label2:
        $r40 = new java.net.Proxy;

        $r41 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

        $r42 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $r43 = interfaceinvoke $r42.<facebook4j.internal.http.HttpClientConfiguration: java.lang.String getHttpProxyHost()>();

        $r44 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $i3 = interfaceinvoke $r44.<facebook4j.internal.http.HttpClientConfiguration: int getHttpProxyPort()>();

        $r45 = staticinvoke <java.net.InetSocketAddress: java.net.InetSocketAddress createUnresolved(java.lang.String,int)>($r43, $i3);

        specialinvoke $r40.<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>($r41, $r45);

        $r46 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        $z6 = virtualinvoke $r46.<facebook4j.internal.logging.Logger: boolean isDebugEnabled()>();

        if $z6 == 0 goto label3;

        $r11 = <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening proxied connection(");

        $r13 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $r14 = interfaceinvoke $r13.<facebook4j.internal.http.HttpClientConfiguration: java.lang.String getHttpProxyHost()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r17 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $i2 = interfaceinvoke $r17.<facebook4j.internal.http.HttpClientConfiguration: int getHttpProxyPort()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<facebook4j.internal.logging.Logger: void debug(java.lang.String)>($r20);

     label3:
        $r8 = new java.net.URL;

        specialinvoke $r8.<java.net.URL: void <init>(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>($r40);

        r47 = (java.net.HttpURLConnection) $r9;

        goto label5;

     label4:
        $r1 = new java.net.URL;

        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>(r2);

        $r3 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        r47 = (java.net.HttpURLConnection) $r3;

     label5:
        $r48 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $i4 = interfaceinvoke $r48.<facebook4j.internal.http.HttpClientConfiguration: int getHttpConnectionTimeout()>();

        if $i4 <= 0 goto label6;

        $z2 = <facebook4j.internal.http.HttpClientImpl: boolean isJDK14orEarlier>;

        if $z2 != 0 goto label6;

        $r5 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $i1 = interfaceinvoke $r5.<facebook4j.internal.http.HttpClientConfiguration: int getHttpConnectionTimeout()>();

        virtualinvoke r47.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i1);

     label6:
        $r49 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $i5 = interfaceinvoke $r49.<facebook4j.internal.http.HttpClientConfiguration: int getHttpReadTimeout()>();

        if $i5 <= 0 goto label7;

        $z1 = <facebook4j.internal.http.HttpClientImpl: boolean isJDK14orEarlier>;

        if $z1 != 0 goto label7;

        $r4 = r0.<facebook4j.internal.http.HttpClientImpl: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $i0 = interfaceinvoke $r4.<facebook4j.internal.http.HttpClientConfiguration: int getHttpReadTimeout()>();

        virtualinvoke r47.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

     label7:
        virtualinvoke r47.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(0);

        return r47;
    }

    static void <clinit>()
    {
        facebook4j.conf.Configuration $r4;
        java.util.HashMap $r5;
        byte $b0;
        int $i1;
        facebook4j.internal.logging.Logger $r0;
        java.lang.SecurityException $r3;
        java.lang.String $r1;
        double $d0;
        boolean $z0, $z1;

        <facebook4j.internal.http.HttpClientImpl: long serialVersionUID> = -8819171414069621503L;

        $r0 = staticinvoke <facebook4j.internal.logging.Logger: facebook4j.internal.logging.Logger getLogger(java.lang.Class)>(class "Lfacebook4j/internal/http/HttpClientImpl;");

        <facebook4j.internal.http.HttpClientImpl: facebook4j.internal.logging.Logger logger> = $r0;

        <facebook4j.internal.http.HttpClientImpl: boolean isJDK14orEarlier> = 0;

     label1:
        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.specification.version");

        if $r1 == null goto label4;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r1);

        $b0 = 1.5 cmpl $d0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        <facebook4j.internal.http.HttpClientImpl: boolean isJDK14orEarlier> = $z0;

     label4:
        $r4 = staticinvoke <facebook4j.conf.ConfigurationContext: facebook4j.conf.Configuration getInstance()>();

        $z1 = interfaceinvoke $r4.<facebook4j.conf.Configuration: boolean isDalvik()>();

        if $z1 == 0 goto label5;

        <facebook4j.internal.http.HttpClientImpl: boolean isJDK14orEarlier> = 0;

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("http.keepAlive", "false");

     label5:
        goto label7;

     label6:
        $r3 := @caughtexception;

        <facebook4j.internal.http.HttpClientImpl: boolean isJDK14orEarlier> = 1;

     label7:
        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>(int)>(1);

        <facebook4j.internal.http.HttpClientImpl: java.util.Map instanceMap> = $r5;

        return;

        catch java.lang.SecurityException from label1 to label5 with label6;
    }
}
