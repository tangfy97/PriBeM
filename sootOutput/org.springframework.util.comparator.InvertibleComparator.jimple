public class org.springframework.util.comparator.InvertibleComparator extends java.lang.Object implements java.util.Comparator, java.io.Serializable
{
    private final java.util.Comparator comparator;
    private boolean ascending;

    public void <init>(java.util.Comparator)
    {
        java.util.Comparator r1;
        org.springframework.util.comparator.InvertibleComparator r0;

        r0 := @this: org.springframework.util.comparator.InvertibleComparator;

        r1 := @parameter0: java.util.Comparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.util.comparator.InvertibleComparator: boolean ascending> = 1;

        r0.<org.springframework.util.comparator.InvertibleComparator: java.util.Comparator comparator> = r1;

        return;
    }

    public void <init>(java.util.Comparator, boolean)
    {
        java.util.Comparator r1;
        org.springframework.util.comparator.InvertibleComparator r0;
        boolean z0;

        r0 := @this: org.springframework.util.comparator.InvertibleComparator;

        r1 := @parameter0: java.util.Comparator;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.util.comparator.InvertibleComparator: boolean ascending> = 1;

        r0.<org.springframework.util.comparator.InvertibleComparator: java.util.Comparator comparator> = r1;

        virtualinvoke r0.<org.springframework.util.comparator.InvertibleComparator: void setAscending(boolean)>(z0);

        return;
    }

    public void setAscending(boolean)
    {
        org.springframework.util.comparator.InvertibleComparator r0;
        boolean z0;

        r0 := @this: org.springframework.util.comparator.InvertibleComparator;

        z0 := @parameter0: boolean;

        r0.<org.springframework.util.comparator.InvertibleComparator: boolean ascending> = z0;

        return;
    }

    public boolean isAscending()
    {
        org.springframework.util.comparator.InvertibleComparator r0;
        boolean $z0;

        r0 := @this: org.springframework.util.comparator.InvertibleComparator;

        $z0 = r0.<org.springframework.util.comparator.InvertibleComparator: boolean ascending>;

        return $z0;
    }

    public void invertOrder()
    {
        org.springframework.util.comparator.InvertibleComparator r0;
        boolean $z0, $z1;

        r0 := @this: org.springframework.util.comparator.InvertibleComparator;

        $z0 = r0.<org.springframework.util.comparator.InvertibleComparator: boolean ascending>;

        if $z0 == 0 goto label1;

        $z1 = 0;

        goto label2;

     label1:
        $z1 = 1;

     label2:
        r0.<org.springframework.util.comparator.InvertibleComparator: boolean ascending> = $z1;

        return;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        org.springframework.util.comparator.InvertibleComparator r0;
        int $i0, i1, $i3;
        java.lang.Object r1, r2;
        java.util.Comparator $r3;
        boolean $z0;

        r0 := @this: org.springframework.util.comparator.InvertibleComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.springframework.util.comparator.InvertibleComparator: java.util.Comparator comparator>;

        $i0 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, r2);

        i1 = $i0;

        if $i0 == 0 goto label3;

        $z0 = r0.<org.springframework.util.comparator.InvertibleComparator: boolean ascending>;

        if $z0 != 0 goto label2;

        if -2147483648 != $i0 goto label1;

        i1 = 2147483647;

        goto label2;

     label1:
        $i3 = (int) -1;

        i1 = $i0 * $i3;

     label2:
        return i1;

     label3:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.util.comparator.InvertibleComparator r0, r2;
        java.lang.Object r1;
        java.util.Comparator $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.springframework.util.comparator.InvertibleComparator;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.springframework.util.comparator.InvertibleComparator;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.springframework.util.comparator.InvertibleComparator) r1;

        $r4 = r0.<org.springframework.util.comparator.InvertibleComparator: java.util.Comparator comparator>;

        $r3 = r2.<org.springframework.util.comparator.InvertibleComparator: java.util.Comparator comparator>;

        $z1 = interfaceinvoke $r4.<java.util.Comparator: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $z3 = r0.<org.springframework.util.comparator.InvertibleComparator: boolean ascending>;

        $z2 = r2.<org.springframework.util.comparator.InvertibleComparator: boolean ascending>;

        if $z3 != $z2 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        java.util.Comparator $r1;
        org.springframework.util.comparator.InvertibleComparator r0;

        r0 := @this: org.springframework.util.comparator.InvertibleComparator;

        $r1 = r0.<org.springframework.util.comparator.InvertibleComparator: java.util.Comparator comparator>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.springframework.util.comparator.InvertibleComparator r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r5;
        java.lang.String $r6;
        java.util.Comparator $r2;
        boolean $z0;

        r1 := @this: org.springframework.util.comparator.InvertibleComparator;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("InvertibleComparator: [");

        $r2 = r1.<org.springframework.util.comparator.InvertibleComparator: java.util.Comparator comparator>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]; ascending=");

        $z0 = r1.<org.springframework.util.comparator.InvertibleComparator: boolean ascending>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
