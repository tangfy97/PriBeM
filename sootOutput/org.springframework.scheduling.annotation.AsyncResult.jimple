public class org.springframework.scheduling.'annotation'.AsyncResult extends java.lang.Object implements java.util.concurrent.Future
{
    private final java.lang.Object value;

    public void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.scheduling.'annotation'.AsyncResult r0;

        r0 := @this: org.springframework.scheduling.'annotation'.AsyncResult;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.scheduling.'annotation'.AsyncResult: java.lang.Object value> = r1;

        return;
    }

    public boolean cancel(boolean)
    {
        org.springframework.scheduling.'annotation'.AsyncResult r0;
        boolean z0;

        r0 := @this: org.springframework.scheduling.'annotation'.AsyncResult;

        z0 := @parameter0: boolean;

        return 0;
    }

    public boolean isCancelled()
    {
        org.springframework.scheduling.'annotation'.AsyncResult r0;

        r0 := @this: org.springframework.scheduling.'annotation'.AsyncResult;

        return 0;
    }

    public boolean isDone()
    {
        org.springframework.scheduling.'annotation'.AsyncResult r0;

        r0 := @this: org.springframework.scheduling.'annotation'.AsyncResult;

        return 1;
    }

    public java.lang.Object get()
    {
        java.lang.Object $r1;
        org.springframework.scheduling.'annotation'.AsyncResult r0;

        r0 := @this: org.springframework.scheduling.'annotation'.AsyncResult;

        $r1 = r0.<org.springframework.scheduling.'annotation'.AsyncResult: java.lang.Object value>;

        return $r1;
    }

    public java.lang.Object get(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit r2;
        java.lang.Object $r1;
        long l0;
        org.springframework.scheduling.'annotation'.AsyncResult r0;

        r0 := @this: org.springframework.scheduling.'annotation'.AsyncResult;

        l0 := @parameter0: long;

        r2 := @parameter1: java.util.concurrent.TimeUnit;

        $r1 = r0.<org.springframework.scheduling.'annotation'.AsyncResult: java.lang.Object value>;

        return $r1;
    }
}
