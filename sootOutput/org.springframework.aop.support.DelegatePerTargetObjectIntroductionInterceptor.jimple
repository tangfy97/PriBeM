public class org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor extends org.springframework.aop.support.IntroductionInfoSupport implements org.springframework.aop.IntroductionInterceptor
{
    private final java.util.Map delegateMap;
    private java.lang.Class defaultImplType;
    private java.lang.Class interfaceType;

    public void <init>(java.lang.Class, java.lang.Class)
    {
        org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor r0;
        java.lang.Class r2, r3;
        java.lang.Object $r4;
        java.util.WeakHashMap $r1;

        r0 := @this: org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.Class;

        specialinvoke r0.<org.springframework.aop.support.IntroductionInfoSupport: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: java.util.Map delegateMap> = $r1;

        r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: java.lang.Class defaultImplType> = r2;

        r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: java.lang.Class interfaceType> = r3;

        $r4 = specialinvoke r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: java.lang.Object createNewDelegate()>();

        virtualinvoke r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: void implementInterfacesOnObject(java.lang.Object)>($r4);

        virtualinvoke r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: void suppressInterface(java.lang.Class)>(class "Lorg/springframework/aop/IntroductionInterceptor;");

        virtualinvoke r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: void suppressInterface(java.lang.Class)>(class "Lorg/springframework/aop/DynamicIntroductionAdvice;");

        return;
    }

    public java.lang.Object invoke(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable
    {
        org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor r0;
        java.lang.Object[] $r6;
        org.aopalliance.intercept.MethodInvocation r1;
        java.lang.Object $r2, $r3, $r4, $r7, r9;
        org.springframework.aop.ProxyMethodInvocation $r8;
        java.lang.reflect.Method $r5;
        boolean $z0, $z1;

        r0 := @this: org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor;

        r1 := @parameter0: org.aopalliance.intercept.MethodInvocation;

        $z0 = virtualinvoke r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: boolean isMethodOnIntroducedInterface(org.aopalliance.intercept.MethodInvocation)>(r1);

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<org.aopalliance.intercept.MethodInvocation: java.lang.Object getThis()>();

        $r4 = specialinvoke r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: java.lang.Object getIntroductionDelegateFor(java.lang.Object)>($r3);

        $r5 = interfaceinvoke r1.<org.aopalliance.intercept.MethodInvocation: java.lang.reflect.Method getMethod()>();

        $r6 = interfaceinvoke r1.<org.aopalliance.intercept.MethodInvocation: java.lang.Object[] getArguments()>();

        $r7 = staticinvoke <org.springframework.aop.support.AopUtils: java.lang.Object invokeJoinpointUsingReflection(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>($r4, $r5, $r6);

        r9 = $r7;

        if $r7 != $r4 goto label1;

        $z1 = r1 instanceof org.springframework.aop.ProxyMethodInvocation;

        if $z1 == 0 goto label1;

        $r8 = (org.springframework.aop.ProxyMethodInvocation) r1;

        r9 = interfaceinvoke $r8.<org.springframework.aop.ProxyMethodInvocation: java.lang.Object getProxy()>();

     label1:
        return r9;

     label2:
        $r2 = virtualinvoke r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: java.lang.Object doProceed(org.aopalliance.intercept.MethodInvocation)>(r1);

        return $r2;
    }

    protected java.lang.Object doProceed(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable
    {
        org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor r2;
        java.lang.Object $r1;
        org.aopalliance.intercept.MethodInvocation r0;

        r2 := @this: org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor;

        r0 := @parameter0: org.aopalliance.intercept.MethodInvocation;

        $r1 = interfaceinvoke r0.<org.aopalliance.intercept.MethodInvocation: java.lang.Object proceed()>();

        return $r1;
    }

    private java.lang.Object getIntroductionDelegateFor(java.lang.Object)
    {
        java.lang.Throwable $r8;
        org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor r0;
        java.util.Map $r1, $r3, $r5, $r6;
        java.lang.Object r2, $r4, $r7;
        boolean $z0;

        r0 := @this: org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: java.util.Map delegateMap>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: java.util.Map delegateMap>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

        $r6 = r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: java.util.Map delegateMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        exitmonitor $r1;

     label2:
        return $r7;

     label3:
        $r4 = specialinvoke r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: java.lang.Object createNewDelegate()>();

        $r5 = r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: java.util.Map delegateMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r4);

        exitmonitor $r1;

     label4:
        return $r4;

     label5:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private java.lang.Object createNewDelegate()
    {
        java.lang.Throwable $r3;
        org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor r0;
        java.lang.String $r7, $r11, $r15;
        java.lang.IllegalArgumentException $r4;
        java.lang.Class $r1, $r6, $r10;
        java.lang.Object $r2;
        java.lang.StringBuilder $r5, $r8, $r9, $r12, $r13, $r14;

        r0 := @this: org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor;

     label1:
        $r1 = r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: java.lang.Class defaultImplType>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot create default implementation for \'");

        $r6 = r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: java.lang.Class interfaceType>;

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' mixin (");

        $r10 = r0.<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: java.lang.Class defaultImplType>;

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
