public class org.joda.time.format.ISODateTimeFormat extends java.lang.Object
{
    private static org.joda.time.format.DateTimeFormatter ye;
    private static org.joda.time.format.DateTimeFormatter mye;
    private static org.joda.time.format.DateTimeFormatter dme;
    private static org.joda.time.format.DateTimeFormatter we;
    private static org.joda.time.format.DateTimeFormatter wwe;
    private static org.joda.time.format.DateTimeFormatter dwe;
    private static org.joda.time.format.DateTimeFormatter dye;
    private static org.joda.time.format.DateTimeFormatter hde;
    private static org.joda.time.format.DateTimeFormatter mhe;
    private static org.joda.time.format.DateTimeFormatter sme;
    private static org.joda.time.format.DateTimeFormatter fse;
    private static org.joda.time.format.DateTimeFormatter ze;
    private static org.joda.time.format.DateTimeFormatter lte;
    private static org.joda.time.format.DateTimeFormatter ym;
    private static org.joda.time.format.DateTimeFormatter ymd;
    private static org.joda.time.format.DateTimeFormatter ww;
    private static org.joda.time.format.DateTimeFormatter wwd;
    private static org.joda.time.format.DateTimeFormatter hm;
    private static org.joda.time.format.DateTimeFormatter hms;
    private static org.joda.time.format.DateTimeFormatter hmsl;
    private static org.joda.time.format.DateTimeFormatter hmsf;
    private static org.joda.time.format.DateTimeFormatter dh;
    private static org.joda.time.format.DateTimeFormatter dhm;
    private static org.joda.time.format.DateTimeFormatter dhms;
    private static org.joda.time.format.DateTimeFormatter dhmsl;
    private static org.joda.time.format.DateTimeFormatter dhmsf;
    private static org.joda.time.format.DateTimeFormatter t;
    private static org.joda.time.format.DateTimeFormatter tx;
    private static org.joda.time.format.DateTimeFormatter tt;
    private static org.joda.time.format.DateTimeFormatter ttx;
    private static org.joda.time.format.DateTimeFormatter dt;
    private static org.joda.time.format.DateTimeFormatter dtx;
    private static org.joda.time.format.DateTimeFormatter wdt;
    private static org.joda.time.format.DateTimeFormatter wdtx;
    private static org.joda.time.format.DateTimeFormatter od;
    private static org.joda.time.format.DateTimeFormatter odt;
    private static org.joda.time.format.DateTimeFormatter odtx;
    private static org.joda.time.format.DateTimeFormatter bd;
    private static org.joda.time.format.DateTimeFormatter bt;
    private static org.joda.time.format.DateTimeFormatter btx;
    private static org.joda.time.format.DateTimeFormatter btt;
    private static org.joda.time.format.DateTimeFormatter bttx;
    private static org.joda.time.format.DateTimeFormatter bdt;
    private static org.joda.time.format.DateTimeFormatter bdtx;
    private static org.joda.time.format.DateTimeFormatter bod;
    private static org.joda.time.format.DateTimeFormatter bodt;
    private static org.joda.time.format.DateTimeFormatter bodtx;
    private static org.joda.time.format.DateTimeFormatter bwd;
    private static org.joda.time.format.DateTimeFormatter bwdt;
    private static org.joda.time.format.DateTimeFormatter bwdtx;
    private static org.joda.time.format.DateTimeFormatter dpe;
    private static org.joda.time.format.DateTimeFormatter tpe;
    private static org.joda.time.format.DateTimeFormatter dp;
    private static org.joda.time.format.DateTimeFormatter ldp;
    private static org.joda.time.format.DateTimeFormatter tp;
    private static org.joda.time.format.DateTimeFormatter ltp;
    private static org.joda.time.format.DateTimeFormatter dtp;
    private static org.joda.time.format.DateTimeFormatter dotp;
    private static org.joda.time.format.DateTimeFormatter ldotp;

    protected void <init>()
    {
        org.joda.time.format.ISODateTimeFormat r0;

        r0 := @this: org.joda.time.format.ISODateTimeFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.joda.time.format.DateTimeFormatter forFields(java.util.Collection, boolean, boolean)
    {
        org.joda.time.DateTimeFieldType $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8, $z9, z10, $z11;
        java.util.Collection r0;
        org.joda.time.format.DateTimeFormatterBuilder $r3;
        java.util.HashSet $r2;
        java.lang.StringBuffer $r13, $r14, $r15;
        int $i0, $i1, $i2;
        java.lang.String $r16;
        java.lang.UnsupportedOperationException $r19;
        org.joda.time.format.DateTimeFormatter $r11, $r17, $r18;
        java.lang.IllegalArgumentException $r1, $r12;

        r0 := @parameter0: java.util.Collection;

        z7 := @parameter1: boolean;

        z8 := @parameter2: boolean;

        if r0 == null goto label01;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        if $i0 != 0 goto label02;

     label01:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The fields must not be null or empty");

        throw $r1;

     label02:
        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>(r0);

        $i1 = interfaceinvoke $r2.<java.util.Set: int size()>();

        z10 = 0;

        $r3 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r4 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType monthOfYear()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z0 == 0 goto label03;

        z10 = staticinvoke <org.joda.time.format.ISODateTimeFormat: boolean dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)>($r3, $r2, z7, z8);

        goto label09;

     label03:
        $r5 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfYear()>();

        $z1 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        if $z1 == 0 goto label04;

        z10 = staticinvoke <org.joda.time.format.ISODateTimeFormat: boolean dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)>($r3, $r2, z7, z8);

        goto label09;

     label04:
        $r6 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekOfWeekyear()>();

        $z2 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r6);

        if $z2 == 0 goto label05;

        z10 = staticinvoke <org.joda.time.format.ISODateTimeFormat: boolean dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)>($r3, $r2, z7, z8);

        goto label09;

     label05:
        $r7 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfMonth()>();

        $z3 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r7);

        if $z3 == 0 goto label06;

        z10 = staticinvoke <org.joda.time.format.ISODateTimeFormat: boolean dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)>($r3, $r2, z7, z8);

        goto label09;

     label06:
        $r8 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>();

        $z4 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r8);

        if $z4 == 0 goto label07;

        z10 = staticinvoke <org.joda.time.format.ISODateTimeFormat: boolean dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)>($r3, $r2, z7, z8);

        goto label09;

     label07:
        $r9 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType year()>();

        $z5 = interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r9);

        if $z5 == 0 goto label08;

        $r18 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter yearElement()>();

        virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r18);

        z10 = 1;

        goto label09;

     label08:
        $r10 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyear()>();

        $z6 = interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r10);

        if $z6 == 0 goto label09;

        $r17 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter weekyearElement()>();

        virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r17);

        z10 = 1;

     label09:
        $i2 = interfaceinvoke $r2.<java.util.Set: int size()>();

        if $i2 >= $i1 goto label10;

        $z11 = 1;

        goto label11;

     label10:
        $z11 = 0;

     label11:
        staticinvoke <org.joda.time.format.ISODateTimeFormat: void time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)>($r3, $r2, z7, z8, z10, $z11);

        $z9 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: boolean canBuildFormatter()>();

        if $z9 != 0 goto label12;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No valid format for fields: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label12:
        interfaceinvoke r0.<java.util.Collection: boolean retainAll(java.util.Collection)>($r2);

     label13:
        goto label15;

     label14:
        $r19 := @caughtexception;

     label15:
        $r11 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r11;

        catch java.lang.UnsupportedOperationException from label12 to label13 with label14;
    }

    private static boolean dateByMonth(org.joda.time.format.DateTimeFormatterBuilder, java.util.Collection, boolean, boolean)
    {
        org.joda.time.format.DateTimeFormatterBuilder r4;
        org.joda.time.DateTimeFieldType $r1, $r2, $r3, $r5, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6, z7, $z8, z9;
        org.joda.time.format.DateTimeFormatter $r6;
        java.util.Collection r0;

        r4 := @parameter0: org.joda.time.format.DateTimeFormatterBuilder;

        r0 := @parameter1: java.util.Collection;

        z4 := @parameter2: boolean;

        z7 := @parameter3: boolean;

        z9 = 0;

        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType year()>();

        $z0 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        $r6 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter yearElement()>();

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r6);

        $r7 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType monthOfYear()>();

        $z5 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r7);

        if $z5 == 0 goto label2;

        $r9 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfMonth()>();

        $z8 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r9);

        if $z8 == 0 goto label1;

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)>(r4, z4);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendMonthOfYear(int)>(2);

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)>(r4, z4);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfMonth(int)>(2);

        goto label7;

     label1:
        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendMonthOfYear(int)>(2);

        z9 = 1;

        goto label7;

     label2:
        $r8 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfMonth()>();

        $z6 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r8);

        if $z6 == 0 goto label3;

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void checkNotStrictISO(java.util.Collection,boolean)>(r0, z7);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfMonth(int)>(2);

        goto label7;

     label3:
        z9 = 1;

        goto label7;

     label4:
        $r2 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType monthOfYear()>();

        $z1 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r2);

        if $z1 == 0 goto label6;

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendMonthOfYear(int)>(2);

        $r5 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfMonth()>();

        $z3 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r5);

        if $z3 == 0 goto label5;

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)>(r4, z4);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfMonth(int)>(2);

        goto label7;

     label5:
        z9 = 1;

        goto label7;

     label6:
        $r3 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfMonth()>();

        $z2 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r3);

        if $z2 == 0 goto label7;

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfMonth(int)>(2);

     label7:
        return z9;
    }

    private static boolean dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder, java.util.Collection, boolean, boolean)
    {
        org.joda.time.format.DateTimeFormatterBuilder r3;
        org.joda.time.format.DateTimeFormatter $r4;
        java.util.Collection r0;
        org.joda.time.DateTimeFieldType $r1, $r2, $r5;
        boolean $z0, $z1, $z2, z3, z4, z5;

        r3 := @parameter0: org.joda.time.format.DateTimeFormatterBuilder;

        r0 := @parameter1: java.util.Collection;

        z3 := @parameter2: boolean;

        z4 := @parameter3: boolean;

        z5 = 0;

        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType year()>();

        $z0 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter yearElement()>();

        virtualinvoke r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r4);

        $r5 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfYear()>();

        $z2 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r5);

        if $z2 == 0 goto label1;

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)>(r3, z3);

        virtualinvoke r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfYear(int)>(3);

        goto label3;

     label1:
        z5 = 1;

        goto label3;

     label2:
        $r2 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfYear()>();

        $z1 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r2);

        if $z1 == 0 goto label3;

        virtualinvoke r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfYear(int)>(3);

     label3:
        return z5;
    }

    private static boolean dateByWeek(org.joda.time.format.DateTimeFormatterBuilder, java.util.Collection, boolean, boolean)
    {
        org.joda.time.format.DateTimeFormatterBuilder r4;
        org.joda.time.DateTimeFieldType $r1, $r2, $r3, $r5, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6, z7, $z8, z9;
        org.joda.time.format.DateTimeFormatter $r6;
        java.util.Collection r0;

        r4 := @parameter0: org.joda.time.format.DateTimeFormatterBuilder;

        r0 := @parameter1: java.util.Collection;

        z4 := @parameter2: boolean;

        z7 := @parameter3: boolean;

        z9 = 0;

        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyear()>();

        $z0 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        $r6 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter weekyearElement()>();

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r6);

        $r7 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekOfWeekyear()>();

        $z5 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r7);

        if $z5 == 0 goto label2;

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)>(r4, z4);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(87);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendWeekOfWeekyear(int)>(2);

        $r9 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>();

        $z8 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r9);

        if $z8 == 0 goto label1;

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)>(r4, z4);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfWeek(int)>(1);

        goto label7;

     label1:
        z9 = 1;

        goto label7;

     label2:
        $r8 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>();

        $z6 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r8);

        if $z6 == 0 goto label3;

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void checkNotStrictISO(java.util.Collection,boolean)>(r0, z7);

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)>(r4, z4);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(87);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfWeek(int)>(1);

        goto label7;

     label3:
        z9 = 1;

        goto label7;

     label4:
        $r2 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekOfWeekyear()>();

        $z1 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r2);

        if $z1 == 0 goto label6;

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(87);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendWeekOfWeekyear(int)>(2);

        $r5 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>();

        $z3 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r5);

        if $z3 == 0 goto label5;

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)>(r4, z4);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfWeek(int)>(1);

        goto label7;

     label5:
        z9 = 1;

        goto label7;

     label6:
        $r3 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>();

        $z2 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r3);

        if $z2 == 0 goto label7;

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(87);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfWeek(int)>(1);

     label7:
        return z9;
    }

    private static void time(org.joda.time.format.DateTimeFormatterBuilder, java.util.Collection, boolean, boolean, boolean, boolean)
    {
        org.joda.time.format.DateTimeFormatterBuilder r5;
        java.lang.StringBuffer $r7, $r8, $r9, $r12, $r13, $r14, $r17, $r18, $r19;
        org.joda.time.DateTimeFieldType $r1, $r2, $r3, $r4;
        java.lang.String $r10, $r15, $r20;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6, z7;
        java.util.Collection r0;
        java.lang.IllegalArgumentException $r6, $r11, $r16;

        r5 := @parameter0: org.joda.time.format.DateTimeFormatterBuilder;

        r0 := @parameter1: java.util.Collection;

        z6 := @parameter2: boolean;

        z4 := @parameter3: boolean;

        z7 := @parameter4: boolean;

        z5 := @parameter5: boolean;

        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType hourOfDay()>();

        $z0 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r1);

        $r2 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType minuteOfHour()>();

        $z1 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r2);

        $r3 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType secondOfMinute()>();

        $z2 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r3);

        $r4 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType millisOfSecond()>();

        $z3 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>($r4);

        if $z0 != 0 goto label01;

        if $z1 != 0 goto label01;

        if $z2 != 0 goto label01;

        if $z3 != 0 goto label01;

        return;

     label01:
        if $z0 != 0 goto label02;

        if $z1 != 0 goto label02;

        if $z2 != 0 goto label02;

        if $z3 == 0 goto label04;

     label02:
        if z4 == 0 goto label03;

        if z7 == 0 goto label03;

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No valid ISO8601 format for fields because Date was reduced precision: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label03:
        if z5 == 0 goto label04;

        virtualinvoke r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(84);

     label04:
        if $z0 == 0 goto label05;

        if $z1 == 0 goto label05;

        if $z2 != 0 goto label11;

     label05:
        if $z0 == 0 goto label06;

        if $z2 != 0 goto label06;

        if $z3 != 0 goto label06;

        goto label11;

     label06:
        if z4 == 0 goto label07;

        if z5 == 0 goto label07;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No valid ISO8601 format for fields because Time was truncated: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label07:
        if $z0 != 0 goto label10;

        if $z1 == 0 goto label08;

        if $z2 != 0 goto label11;

     label08:
        if $z1 == 0 goto label09;

        if $z3 == 0 goto label11;

     label09:
        if $z2 == 0 goto label10;

        goto label11;

     label10:
        if z4 == 0 goto label11;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No valid ISO8601 format for fields: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label11:
        if $z0 == 0 goto label12;

        virtualinvoke r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendHourOfDay(int)>(2);

        goto label14;

     label12:
        if $z1 != 0 goto label13;

        if $z2 != 0 goto label13;

        if $z3 == 0 goto label14;

     label13:
        virtualinvoke r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

     label14:
        if z6 == 0 goto label15;

        if $z0 == 0 goto label15;

        if $z1 == 0 goto label15;

        virtualinvoke r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(58);

     label15:
        if $z1 == 0 goto label16;

        virtualinvoke r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendMinuteOfHour(int)>(2);

        goto label18;

     label16:
        if $z2 != 0 goto label17;

        if $z3 == 0 goto label18;

     label17:
        virtualinvoke r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

     label18:
        if z6 == 0 goto label19;

        if $z1 == 0 goto label19;

        if $z2 == 0 goto label19;

        virtualinvoke r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(58);

     label19:
        if $z2 == 0 goto label20;

        virtualinvoke r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendSecondOfMinute(int)>(2);

        goto label21;

     label20:
        if $z3 == 0 goto label21;

        virtualinvoke r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

     label21:
        if $z3 == 0 goto label22;

        virtualinvoke r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(46);

        virtualinvoke r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendMillisOfSecond(int)>(3);

     label22:
        return;
    }

    private static void checkNotStrictISO(java.util.Collection, boolean)
    {
        java.lang.StringBuffer $r1, $r2, $r4;
        java.util.Collection r3;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r0;
        boolean z0;

        r3 := @parameter0: java.util.Collection;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No valid ISO8601 format for fields: ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r0;

     label1:
        return;
    }

    private static void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder, boolean)
    {
        org.joda.time.format.DateTimeFormatterBuilder r0;
        boolean z0;

        r0 := @parameter0: org.joda.time.format.DateTimeFormatterBuilder;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

     label1:
        return;
    }

    public static org.joda.time.format.DateTimeFormatter dateParser()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r5, $r7, $r9, $r10;
        org.joda.time.format.DateTimeParser $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r4, $r8, $r11;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dp>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(84);

        $r4 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter offsetElement()>();

        $r5 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r4);

        $r6 = virtualinvoke $r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r7 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r8 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateElementParser()>();

        $r9 = virtualinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r8);

        $r10 = virtualinvoke $r9.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r6);

        $r11 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dp> = $r11;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dp>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter localDateParser()
    {
        org.joda.time.DateTimeZone $r3;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r2, $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ldp>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateElementParser()>();

        $r3 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC>;

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withZone(org.joda.time.DateTimeZone)>($r3);

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ldp> = $r4;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ldp>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter dateElementParser()
    {
        org.joda.time.format.DateTimeParser $r11, $r13, $r15, $r22, $r24, $r30;
        org.joda.time.format.DateTimeParser[] $r3;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r7, $r9, $r12, $r14, $r16, $r18, $r20, $r23, $r25, $r27, $r29, $r31;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5, $r8, $r10, $r17, $r19, $r21, $r26, $r28, $r32;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dpe>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = newarray (org.joda.time.format.DateTimeParser)[3];

        $r4 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter yearElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r8 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter monthElement()>();

        $r9 = virtualinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r8);

        $r10 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dayOfMonthElement()>();

        $r11 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r12 = virtualinvoke $r9.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r11);

        $r13 = virtualinvoke $r12.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r14 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r13);

        $r15 = virtualinvoke $r14.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r3[0] = $r15;

        $r16 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r16.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r17 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter weekyearElement()>();

        $r18 = virtualinvoke $r16.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r17);

        $r19 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter weekElement()>();

        $r20 = virtualinvoke $r18.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r19);

        $r21 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dayOfWeekElement()>();

        $r22 = virtualinvoke $r21.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r23 = virtualinvoke $r20.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r22);

        $r24 = virtualinvoke $r23.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r3[1] = $r24;

        $r25 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r25.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r26 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter yearElement()>();

        $r27 = virtualinvoke $r25.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r26);

        $r28 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dayOfYearElement()>();

        $r29 = virtualinvoke $r27.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r28);

        $r30 = virtualinvoke $r29.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r3[2] = $r30;

        $r31 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])>(null, $r3);

        $r32 = virtualinvoke $r31.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dpe> = $r32;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dpe>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter timeParser()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r5, $r7, $r10;
        org.joda.time.format.DateTimeParser $r4, $r9;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r6, $r8, $r11;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tp>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r5 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r4);

        $r6 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter timeElementParser()>();

        $r7 = virtualinvoke $r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r6);

        $r8 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter offsetElement()>();

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r10 = virtualinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r9);

        $r11 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tp> = $r11;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tp>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter localTimeParser()
    {
        org.joda.time.DateTimeZone $r9;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r5, $r7;
        org.joda.time.format.DateTimeParser $r4;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r6, $r8, $r10;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ltp>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r5 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r4);

        $r6 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter timeElementParser()>();

        $r7 = virtualinvoke $r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r6);

        $r8 = virtualinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        $r9 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC>;

        $r10 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withZone(org.joda.time.DateTimeZone)>($r9);

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ltp> = $r10;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ltp>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter timeElementParser()
    {
        org.joda.time.format.DateTimeParser $r6, $r9, $r11, $r26, $r28, $r32, $r34, $r38;
        org.joda.time.format.DateTimeParser[] $r3, $r15, $r19;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r5, $r7, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r23, $r24, $r25, $r27, $r29, $r30, $r31, $r33, $r35, $r36, $r37, $r39;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r13, $r17, $r21, $r40;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tpe>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = newarray (org.joda.time.format.DateTimeParser)[2];

        $r4 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(46);

        $r6 = virtualinvoke $r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r3[0] = $r6;

        $r7 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(44);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r3[1] = $r9;

        $r10 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])>(null, $r3);

        $r11 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r12 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r12.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r13 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourElement()>();

        $r14 = virtualinvoke $r12.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r13);

        $r15 = newarray (org.joda.time.format.DateTimeParser)[3];

        $r16 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r16.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r17 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter minuteElement()>();

        $r18 = virtualinvoke $r16.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r17);

        $r19 = newarray (org.joda.time.format.DateTimeParser)[3];

        $r20 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r20.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r21 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter secondElement()>();

        $r22 = virtualinvoke $r20.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r21);

        $r23 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r23.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeParser)>($r11);

        $r25 = virtualinvoke $r24.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFractionOfSecond(int,int)>(1, 9);

        $r26 = virtualinvoke $r25.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r27 = virtualinvoke $r22.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r26);

        $r28 = virtualinvoke $r27.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r19[0] = $r28;

        $r29 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r29.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeParser)>($r11);

        $r31 = virtualinvoke $r30.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFractionOfMinute(int,int)>(1, 9);

        $r32 = virtualinvoke $r31.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r19[1] = $r32;

        $r19[2] = null;

        $r33 = virtualinvoke $r18.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])>(null, $r19);

        $r34 = virtualinvoke $r33.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r15[0] = $r34;

        $r35 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r35.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeParser)>($r11);

        $r37 = virtualinvoke $r36.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFractionOfHour(int,int)>(1, 9);

        $r38 = virtualinvoke $r37.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r15[1] = $r38;

        $r15[2] = null;

        $r39 = virtualinvoke $r14.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])>(null, $r15);

        $r40 = virtualinvoke $r39.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tpe> = $r40;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tpe>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter dateTimeParser()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r5, $r8, $r10, $r14;
        org.joda.time.format.DateTimeParser $r7, $r9, $r13;
        org.joda.time.format.DateTimeParser[] $r11;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r4, $r6, $r12, $r15;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dtp>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(84);

        $r4 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter timeElementParser()>();

        $r5 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r4);

        $r6 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter offsetElement()>();

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r8 = virtualinvoke $r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r10 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r11 = newarray (org.joda.time.format.DateTimeParser)[2];

        $r11[0] = $r9;

        $r12 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateOptionalTimeParser()>();

        $r13 = virtualinvoke $r12.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r11[1] = $r13;

        $r14 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])>(null, $r11);

        $r15 = virtualinvoke $r14.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dtp> = $r15;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dtp>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter dateOptionalTimeParser()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r6, $r9, $r11, $r13, $r14;
        org.joda.time.format.DateTimeParser $r5, $r8, $r10;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r4, $r7, $r12, $r15;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dotp>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(84);

        $r4 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter timeElementParser()>();

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r6 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter offsetElement()>();

        $r8 = virtualinvoke $r7.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $r9 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r8);

        $r10 = virtualinvoke $r9.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r11 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r11.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r12 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateElementParser()>();

        $r13 = virtualinvoke $r11.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r12);

        $r14 = virtualinvoke $r13.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r10);

        $r15 = virtualinvoke $r14.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dotp> = $r15;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dotp>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter localDateOptionalTimeParser()
    {
        org.joda.time.DateTimeZone $r12;
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r5, $r7, $r9, $r10;
        org.joda.time.format.DateTimeParser $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r4, $r8, $r11, $r13;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ldotp>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(84);

        $r4 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter timeElementParser()>();

        $r5 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r4);

        $r6 = virtualinvoke $r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeParser toParser()>();

        $r7 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r8 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateElementParser()>();

        $r9 = virtualinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r8);

        $r10 = virtualinvoke $r9.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendOptional(org.joda.time.format.DateTimeParser)>($r6);

        $r11 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        $r12 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC>;

        $r13 = virtualinvoke $r11.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withZone(org.joda.time.DateTimeZone)>($r12);

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ldotp> = $r13;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ldotp>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter date()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter yearMonthDay()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter time()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter t>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter offsetElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter t> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter t>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter timeNoMillis()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourMinuteSecond()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter offsetElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tx> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tx>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter tTime()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter time()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tt> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tt>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter tTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ttx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter timeNoMillis()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ttx> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ttx>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter dateTime()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tTime()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dt> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dt>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter dateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dtx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tTimeNoMillis()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dtx> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dtx>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter ordinalDate()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter od>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter yearElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dayOfYearElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter od> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter od>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter ordinalDateTime()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter odt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ordinalDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tTime()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter odt> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter odt>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter ordinalDateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter odtx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ordinalDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tTimeNoMillis()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter odtx> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter odtx>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter weekDate()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter weekyearWeekDay()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter weekDateTime()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter wdt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter weekDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tTime()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter wdt> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter wdt>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter weekDateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter wdtx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter weekDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter tTimeNoMillis()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter wdtx> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter wdtx>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter basicDate()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r5, $r7;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r8;
        org.joda.time.DateTimeFieldType $r4, $r6;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bd>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendYear(int,int)>(4, 4);

        $r4 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType monthOfYear()>();

        $r5 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r4, 2);

        $r6 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfMonth()>();

        $r7 = virtualinvoke $r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r6, 2);

        $r8 = virtualinvoke $r7.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bd> = $r8;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bd>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter basicTime()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8, $r9, $r10, $r11;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r12;
        org.joda.time.DateTimeFieldType $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType hourOfDay()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r3, 2);

        $r5 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType minuteOfHour()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r5, 2);

        $r7 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType secondOfMinute()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r7, 2);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(46);

        $r10 = virtualinvoke $r9.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFractionOfSecond(int,int)>(3, 9);

        $r11 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendTimeZoneOffset(java.lang.String,boolean,int,int)>("Z", 0, 2, 2);

        $r12 = virtualinvoke $r11.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bt> = $r12;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bt>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter basicTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8, $r9;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r10;
        org.joda.time.DateTimeFieldType $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter btx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType hourOfDay()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r3, 2);

        $r5 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType minuteOfHour()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r5, 2);

        $r7 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType secondOfMinute()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r7, 2);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendTimeZoneOffset(java.lang.String,boolean,int,int)>("Z", 0, 2, 2);

        $r10 = virtualinvoke $r9.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter btx> = $r10;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter btx>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter basicTTime()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter btt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter basicTime()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter btt> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter btt>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter basicTTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bttx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter basicTimeNoMillis()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bttx> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bttx>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter basicDateTime()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bdt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter basicDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter basicTTime()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bdt> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bdt>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter basicDateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bdtx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter basicDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter basicTTimeNoMillis()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bdtx> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bdtx>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter basicOrdinalDate()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r5;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r6;
        org.joda.time.DateTimeFieldType $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bod>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendYear(int,int)>(4, 4);

        $r4 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfYear()>();

        $r5 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r4, 3);

        $r6 = virtualinvoke $r5.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bod> = $r6;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bod>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter basicOrdinalDateTime()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bodt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter basicOrdinalDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter basicTTime()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bodt> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bodt>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter basicOrdinalDateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bodtx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter basicOrdinalDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter basicTTimeNoMillis()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bodtx> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bodtx>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter basicWeekDate()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4, $r6, $r8;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r9;
        org.joda.time.DateTimeFieldType $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bwd>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendWeekyear(int,int)>(4, 4);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(87);

        $r5 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekOfWeekyear()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r5, 2);

        $r7 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFixedDecimal(org.joda.time.DateTimeFieldType,int)>($r7, 1);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bwd> = $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bwd>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter basicWeekDateTime()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bwdt>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter basicWeekDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter basicTTime()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bwdt> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bwdt>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter basicWeekDateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bwdtx>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter basicWeekDate()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter basicTTimeNoMillis()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bwdtx> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter bwdtx>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter year()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter yearElement()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter yearMonth()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ym>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter yearElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter monthElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ym> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ym>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter yearMonthDay()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ymd>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter yearElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter monthElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dayOfMonthElement()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ymd> = $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ymd>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter weekyear()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter weekyearElement()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter weekyearWeek()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ww>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter weekyearElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter weekElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ww> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ww>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter weekyearWeekDay()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter wwd>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter weekyearElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter weekElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dayOfWeekElement()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter wwd> = $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter wwd>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter hour()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourElement()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter hourMinute()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hm>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter minuteElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hm> = $r7;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hm>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter hourMinuteSecond()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hms>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter minuteElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter secondElement()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hms> = $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hms>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter hourMinuteSecondMillis()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8, $r9, $r10;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r11;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hmsl>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter minuteElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter secondElement()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(46);

        $r10 = virtualinvoke $r9.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFractionOfSecond(int,int)>(3, 3);

        $r11 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hmsl> = $r11;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hmsl>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8, $r10;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9, $r11;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hmsf>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourElement()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter minuteElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter secondElement()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter fractionElement()>();

        $r10 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r9);

        $r11 = virtualinvoke $r10.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hmsf> = $r11;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hmsf>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter dateHour()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dh>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hour()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dh> = $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dh>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter dateHourMinute()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dhm>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourMinute()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dhm> = $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dhm>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter dateHourMinuteSecond()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dhms>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourMinuteSecond()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dhms> = $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dhms>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter dateHourMinuteSecondMillis()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dhmsl>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourMinuteSecondMillis()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dhmsl> = $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dhmsl>;

        return $r1;
    }

    public static org.joda.time.format.DateTimeFormatter dateHourMinuteSecondFraction()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r4, $r6, $r8;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r3, $r5, $r7, $r9;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dhmsf>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>();

        $r4 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r3);

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter literalTElement()>();

        $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction()>();

        $r8 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r7);

        $r9 = virtualinvoke $r8.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dhmsf> = $r9;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dhmsf>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter yearElement()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ye>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendYear(int,int)>(4, 9);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ye> = $r4;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ye>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter monthElement()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter mye>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendMonthOfYear(int)>(2);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter mye> = $r5;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter mye>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter dayOfMonthElement()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dme>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfMonth(int)>(2);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dme> = $r5;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dme>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter weekyearElement()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter we>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendWeekyear(int,int)>(4, 9);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter we> = $r4;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter we>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter weekElement()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter wwe>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(java.lang.String)>("-W");

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendWeekOfWeekyear(int)>(2);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter wwe> = $r5;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter wwe>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter dayOfWeekElement()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dwe>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfWeek(int)>(1);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dwe> = $r5;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dwe>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter dayOfYearElement()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dye>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfYear(int)>(3);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dye> = $r5;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dye>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter literalTElement()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter lte>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(84);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter lte> = $r4;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter lte>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter hourElement()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hde>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendHourOfDay(int)>(2);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hde> = $r4;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hde>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter minuteElement()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter mhe>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(58);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendMinuteOfHour(int)>(2);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter mhe> = $r5;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter mhe>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter secondElement()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter sme>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(58);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendSecondOfMinute(int)>(2);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter sme> = $r5;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter sme>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter fractionElement()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3, $r4;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r5;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter fse>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(46);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendFractionOfSecond(int,int)>(3, 9);

        $r5 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter fse> = $r5;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter fse>;

        return $r1;
    }

    private static org.joda.time.format.DateTimeFormatter offsetElement()
    {
        org.joda.time.format.DateTimeFormatterBuilder $r2, $r3;
        org.joda.time.format.DateTimeFormatter $r0, $r1, $r4;

        $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ze>;

        if $r0 != null goto label1;

        $r2 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendTimeZoneOffset(java.lang.String,boolean,int,int)>("Z", 1, 2, 4);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ze> = $r4;

     label1:
        $r1 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ze>;

        return $r1;
    }
}
