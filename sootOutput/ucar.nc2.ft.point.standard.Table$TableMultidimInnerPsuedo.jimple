public class ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo extends ucar.nc2.ft.point.standard.Table$TableStructure
{
    ucar.nc2.Dimension inner;
    ucar.nc2.Dimension outer;
    ucar.ma2.StructureMembers sm;
    static final boolean $assertionsDisabled;

    void <init>(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.ft.point.standard.TableConfig)
    {
        java.lang.AssertionError $r22, $r24;
        ucar.nc2.ft.point.standard.TableConfig r2;
        int[] r14, $r15;
        int $i0, $i1, $i2;
        ucar.nc2.Variable r13;
        java.lang.String $r3, $r5, $r8, $r17, $r18, $r19, $r21, $r23;
        ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo r0;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r11;
        ucar.ma2.DataType $r20;
        java.util.List $r10;
        ucar.ma2.StructureMembers $r7, $r16;
        ucar.nc2.dataset.StructureDS $r9;
        ucar.nc2.Dimension $r4, $r6;
        java.lang.Object $r12;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.ft.point.standard.TableConfig;

        specialinvoke r0.<ucar.nc2.ft.point.standard.Table$TableStructure: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig)>(r1, r2);

        $z0 = <ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r23 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String outerName>;

        if $r23 != null goto label1;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label1:
        $z1 = <ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r21 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String innerName>;

        if $r21 != null goto label2;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label2:
        $r3 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String innerName>;

        $r4 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r3);

        r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo: ucar.nc2.Dimension inner> = $r4;

        $r5 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String outerName>;

        $r6 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r5);

        r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo: ucar.nc2.Dimension outer> = $r6;

        $r7 = new ucar.ma2.StructureMembers;

        $r8 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String name>;

        specialinvoke $r7.<ucar.ma2.StructureMembers: void <init>(java.lang.String)>($r8);

        r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo: ucar.ma2.StructureMembers sm> = $r7;

        $r9 = r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo: ucar.nc2.dataset.StructureDS struct>;

        $r10 = virtualinvoke $r9.<ucar.nc2.dataset.StructureDS: java.util.List getVariables()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (ucar.nc2.Variable) $r12;

        $i0 = virtualinvoke r13.<ucar.nc2.Variable: int getRank()>();

        $i1 = $i0 - 1;

        r14 = newarray (int)[$i1];

        $r15 = virtualinvoke r13.<ucar.nc2.Variable: int[] getShape()>();

        $i2 = $i0 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, 1, r14, 0, $i2);

        $r16 = r0.<ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo: ucar.ma2.StructureMembers sm>;

        $r17 = virtualinvoke r13.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r18 = virtualinvoke r13.<ucar.nc2.Variable: java.lang.String getDescription()>();

        $r19 = virtualinvoke r13.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        $r20 = virtualinvoke r13.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        virtualinvoke $r16.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member addMember(java.lang.String,java.lang.String,java.lang.String,ucar.ma2.DataType,int[])>($r17, $r18, $r19, $r20, r14);

        goto label3;

     label4:
        return;
    }

    public ucar.ma2.StructureDataIterator getStructureDataIterator(ucar.nc2.ft.point.standard.Cursor, int) throws java.io.IOException
    {
        java.lang.IllegalStateException $r19;
        ucar.ma2.StructureDataIterator $r10;
        ucar.ma2.StructureMembers$Member $r17;
        ucar.ma2.StructureData $r3;
        int[] $r5;
        int $i0, $i1, i2;
        java.lang.String $r13, $r16;
        ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo r1;
        boolean $z0;
        ucar.ma2.ArrayStructureMA $r4;
        java.util.Iterator $r9;
        ucar.ma2.Array $r14;
        java.util.List $r8;
        ucar.ma2.InvalidRangeException $r18;
        ucar.nc2.dataset.StructureDS $r2;
        ucar.ma2.StructureMembers $r7, $r15;
        ucar.nc2.VariableSimpleIF r12;
        ucar.nc2.ft.point.standard.Cursor r0;
        ucar.nc2.Dimension $r6;
        java.lang.Object $r11;

        r1 := @this: ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo;

        r0 := @parameter0: ucar.nc2.ft.point.standard.Cursor;

        i2 := @parameter1: int;

        $i0 = virtualinvoke r0.<ucar.nc2.ft.point.standard.Cursor: int getParentRecnum()>();

     label1:
        $r2 = r1.<ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo: ucar.nc2.dataset.StructureDS struct>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.StructureDS: ucar.ma2.StructureData readStructure(int)>($i0);

        $r4 = new ucar.ma2.ArrayStructureMA;

        $r7 = r1.<ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo: ucar.ma2.StructureMembers sm>;

        $r5 = newarray (int)[1];

        $r6 = r1.<ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo: ucar.nc2.Dimension inner>;

        $i1 = virtualinvoke $r6.<ucar.nc2.Dimension: int getLength()>();

        $r5[0] = $i1;

        specialinvoke $r4.<ucar.ma2.ArrayStructureMA: void <init>(ucar.ma2.StructureMembers,int[])>($r7, $r5);

        $r8 = r1.<ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo: java.util.List cols>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r12 = (ucar.nc2.VariableSimpleIF) $r11;

        $r13 = interfaceinvoke r12.<ucar.nc2.VariableSimpleIF: java.lang.String getShortName()>();

        $r14 = virtualinvoke $r3.<ucar.ma2.StructureData: ucar.ma2.Array getArray(java.lang.String)>($r13);

        $r15 = r1.<ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo: ucar.ma2.StructureMembers sm>;

        $r16 = interfaceinvoke r12.<ucar.nc2.VariableSimpleIF: java.lang.String getShortName()>();

        $r17 = virtualinvoke $r15.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r16);

        virtualinvoke $r17.<ucar.ma2.StructureMembers$Member: void setDataArray(ucar.ma2.Array)>($r14);

        goto label2;

     label3:
        $r10 = virtualinvoke $r4.<ucar.ma2.ArrayStructureMA: ucar.ma2.StructureDataIterator getStructureDataIterator()>();

     label4:
        return $r10;

     label5:
        $r18 := @caughtexception;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r18);

        throw $r19;

        catch ucar.ma2.InvalidRangeException from label1 to label4 with label5;
    }

    public java.lang.String getName()
    {
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r9, $r10;
        ucar.nc2.Dimension $r3, $r7;
        java.lang.String $r4, $r8, $r11;
        ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo r2;

        r2 := @this: ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MultidimPseudo(");

        $r3 = r2.<ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo: ucar.nc2.Dimension outer>;

        $r4 = virtualinvoke $r3.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r7 = r2.<ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo: ucar.nc2.Dimension inner>;

        $r8 = virtualinvoke $r7.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/ft/point/standard/Table;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.ft.point.standard.Table$TableMultidimInnerPsuedo: boolean $assertionsDisabled> = $z1;

        return;
    }
}
