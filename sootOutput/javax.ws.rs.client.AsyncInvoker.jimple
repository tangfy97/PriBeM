public interface  javax.ws.rs.client.AsyncInvoker extends java.lang.Object
{

    public abstract java.util.concurrent.Future get();

    public abstract java.util.concurrent.Future get(java.lang.Class);

    public abstract java.util.concurrent.Future get(javax.ws.rs.core.GenericType);

    public abstract java.util.concurrent.Future get(javax.ws.rs.client.InvocationCallback);

    public abstract java.util.concurrent.Future put(javax.ws.rs.client.Entity);

    public abstract java.util.concurrent.Future put(javax.ws.rs.client.Entity, java.lang.Class);

    public abstract java.util.concurrent.Future put(javax.ws.rs.client.Entity, javax.ws.rs.core.GenericType);

    public abstract java.util.concurrent.Future put(javax.ws.rs.client.Entity, javax.ws.rs.client.InvocationCallback);

    public abstract java.util.concurrent.Future post(javax.ws.rs.client.Entity);

    public abstract java.util.concurrent.Future post(javax.ws.rs.client.Entity, java.lang.Class);

    public abstract java.util.concurrent.Future post(javax.ws.rs.client.Entity, javax.ws.rs.core.GenericType);

    public abstract java.util.concurrent.Future post(javax.ws.rs.client.Entity, javax.ws.rs.client.InvocationCallback);

    public abstract java.util.concurrent.Future delete();

    public abstract java.util.concurrent.Future delete(java.lang.Class);

    public abstract java.util.concurrent.Future delete(javax.ws.rs.core.GenericType);

    public abstract java.util.concurrent.Future delete(javax.ws.rs.client.InvocationCallback);

    public abstract java.util.concurrent.Future head();

    public abstract java.util.concurrent.Future head(javax.ws.rs.client.InvocationCallback);

    public abstract java.util.concurrent.Future options();

    public abstract java.util.concurrent.Future options(java.lang.Class);

    public abstract java.util.concurrent.Future options(javax.ws.rs.core.GenericType);

    public abstract java.util.concurrent.Future options(javax.ws.rs.client.InvocationCallback);

    public abstract java.util.concurrent.Future trace();

    public abstract java.util.concurrent.Future trace(java.lang.Class);

    public abstract java.util.concurrent.Future trace(javax.ws.rs.core.GenericType);

    public abstract java.util.concurrent.Future trace(javax.ws.rs.client.InvocationCallback);

    public abstract java.util.concurrent.Future method(java.lang.String);

    public abstract java.util.concurrent.Future method(java.lang.String, java.lang.Class);

    public abstract java.util.concurrent.Future method(java.lang.String, javax.ws.rs.core.GenericType);

    public abstract java.util.concurrent.Future method(java.lang.String, javax.ws.rs.client.InvocationCallback);

    public abstract java.util.concurrent.Future method(java.lang.String, javax.ws.rs.client.Entity);

    public abstract java.util.concurrent.Future method(java.lang.String, javax.ws.rs.client.Entity, java.lang.Class);

    public abstract java.util.concurrent.Future method(java.lang.String, javax.ws.rs.client.Entity, javax.ws.rs.core.GenericType);

    public abstract java.util.concurrent.Future method(java.lang.String, javax.ws.rs.client.Entity, javax.ws.rs.client.InvocationCallback);
}
