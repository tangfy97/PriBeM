class org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2 extends java.lang.Object implements org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Mapper
{
    final org.waveprotocol.wave.model.document.operation.AttributesUpdate val$finalAccu;
    final org.waveprotocol.wave.model.document.operation.Attributes val$oldAttributes;
    final org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AttributesUpdateChecker val$checker;
    final boolean val$valid;
    final org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0;

    void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator, org.waveprotocol.wave.model.document.operation.AttributesUpdate, org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AttributesUpdateChecker, boolean)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2 r0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AttributesUpdateChecker r4;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator r1;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r2;
        org.waveprotocol.wave.model.document.operation.Attributes r3;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        r3 := @parameter2: org.waveprotocol.wave.model.document.operation.Attributes;

        r4 := @parameter3: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AttributesUpdateChecker;

        z0 := @parameter4: boolean;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0> = r1;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2: org.waveprotocol.wave.model.document.operation.AttributesUpdate val$finalAccu> = r2;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2: org.waveprotocol.wave.model.document.operation.Attributes val$oldAttributes> = r3;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AttributesUpdateChecker val$checker> = r4;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2: boolean val$valid> = z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.document.operation.AttributesUpdate map(java.lang.String)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2 r0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters $r4;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider $r5;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator $r2, $r3;
        int $i0, i1;
        java.lang.String r8, $r12;
        boolean $z0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1 $r7;
        java.util.List $r6;
        java.lang.Object $r9;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate $r1, $r10, $r11;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2;

        r8 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r1 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2: org.waveprotocol.wave.model.document.operation.AttributesUpdate val$finalAccu>;

        $i0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: int changeSize()>();

        if i1 >= $i0 goto label3;

        $r11 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2: org.waveprotocol.wave.model.document.operation.AttributesUpdate val$finalAccu>;

        $r12 = interfaceinvoke $r11.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getChangeKey(int)>(i1);

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z0 == 0 goto label2;

        return null;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0>;

        $r5 = $r2.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider r>;

        $r3 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0>;

        $r4 = $r3.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters p>;

        $r6 = virtualinvoke $r4.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List getAttributeValues()>();

        $r7 = new org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1;

        specialinvoke $r7.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1: void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2,java.lang.String)>(r0, r8);

        $r9 = staticinvoke <org.waveprotocol.wave.model.testing.RandomDocOpGenerator: java.lang.Object access$200(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider,java.util.List,org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Mapper)>($r5, $r6, $r7);

        $r10 = (org.waveprotocol.wave.model.document.operation.AttributesUpdate) $r9;

        return $r10;
    }

    public volatile java.lang.Object map(java.lang.Object)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2 r0;
        java.lang.Object r1;
        java.lang.String $r2;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate $r3;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2: org.waveprotocol.wave.model.document.operation.AttributesUpdate map(java.lang.String)>($r2);

        return $r3;
    }
}
