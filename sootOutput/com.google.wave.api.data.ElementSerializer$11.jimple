final class com.google.wave.api.data.ElementSerializer$11 extends com.google.wave.api.data.ElementSerializer
{

    void <init>(java.lang.String, com.google.wave.api.ElementType)
    {
        java.lang.String r1;
        com.google.wave.api.ElementType r2;
        com.google.wave.api.data.ElementSerializer$11 r0;

        r0 := @this: com.google.wave.api.data.ElementSerializer$11;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.google.wave.api.ElementType;

        specialinvoke r0.<com.google.wave.api.data.ElementSerializer: void <init>(java.lang.String,com.google.wave.api.ElementType)>(r1, r2);

        return;
    }

    public org.waveprotocol.wave.model.document.util.XmlStringBuilder toXml(com.google.wave.api.Element)
    {
        org.waveprotocol.wave.model.document.util.XmlStringBuilder $r0, $r8;
        com.google.wave.api.Element r2;
        java.lang.String[] $r1, $r10;
        java.util.ArrayList $r4;
        int $i0;
        java.lang.String $r3, $r5, $r6, $r7, $r9, $r11, $r12;
        com.google.wave.api.data.ElementSerializer$11 r13;

        r13 := @this: com.google.wave.api.data.ElementSerializer$11;

        r2 := @parameter0: com.google.wave.api.Element;

        $r0 = staticinvoke <org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder createEmpty()>();

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "src";

        $r3 = virtualinvoke r2.<com.google.wave.api.Element: java.lang.String getProperty(java.lang.String)>("url");

        $r1[1] = $r3;

        $r4 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r1);

        $r5 = virtualinvoke r2.<com.google.wave.api.Element: java.lang.String getProperty(java.lang.String)>("width");

        if $r5 == null goto label1;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>("width");

        $r12 = virtualinvoke r2.<com.google.wave.api.Element: java.lang.String getProperty(java.lang.String)>("width");

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r12);

     label1:
        $r6 = virtualinvoke r2.<com.google.wave.api.Element: java.lang.String getProperty(java.lang.String)>("height");

        if $r6 == null goto label2;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>("height");

        $r11 = virtualinvoke r2.<com.google.wave.api.Element: java.lang.String getProperty(java.lang.String)>("height");

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r11);

     label2:
        $r7 = virtualinvoke r2.<com.google.wave.api.Element: java.lang.String getProperty(java.lang.String)>("caption");

        if $r7 == null goto label3;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>("alt");

        $r9 = virtualinvoke r2.<com.google.wave.api.Element: java.lang.String getProperty(java.lang.String)>("caption");

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r9);

     label3:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r10 = newarray (java.lang.String)[$i0];

        interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r8 = virtualinvoke $r0.<org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder wrap(java.lang.String,java.lang.String[])>("img", $r10);

        return $r8;
    }

    public com.google.wave.api.Element fromXml(org.waveprotocol.wave.model.document.Document, org.waveprotocol.wave.model.document.Doc$E, org.waveprotocol.wave.model.wave.Wavelet)
    {
        com.google.wave.api.Image $r0;
        org.waveprotocol.wave.model.document.Document r1;
        org.waveprotocol.wave.model.wave.Wavelet r12;
        int $i0, $i1;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        com.google.wave.api.data.ElementSerializer$11 r11;
        org.waveprotocol.wave.model.document.Doc$E r2;

        r11 := @this: com.google.wave.api.data.ElementSerializer$11;

        r1 := @parameter0: org.waveprotocol.wave.model.document.Document;

        r2 := @parameter1: org.waveprotocol.wave.model.document.Doc$E;

        r12 := @parameter2: org.waveprotocol.wave.model.wave.Wavelet;

        $r0 = new com.google.wave.api.Image;

        specialinvoke $r0.<com.google.wave.api.Image: void <init>()>();

        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.Document: java.lang.String getAttribute(java.lang.Object,java.lang.String)>(r2, "src");

        if $r3 == null goto label1;

        $r10 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.Document: java.lang.String getAttribute(java.lang.Object,java.lang.String)>(r2, "src");

        virtualinvoke $r0.<com.google.wave.api.Image: void setUrl(java.lang.String)>($r10);

     label1:
        $r4 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.Document: java.lang.String getAttribute(java.lang.Object,java.lang.String)>(r2, "alt");

        if $r4 == null goto label2;

        $r9 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.Document: java.lang.String getAttribute(java.lang.Object,java.lang.String)>(r2, "alt");

        virtualinvoke $r0.<com.google.wave.api.Image: void setCaption(java.lang.String)>($r9);

     label2:
        $r5 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.Document: java.lang.String getAttribute(java.lang.Object,java.lang.String)>(r2, "width");

        if $r5 == null goto label3;

        $r8 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.Document: java.lang.String getAttribute(java.lang.Object,java.lang.String)>(r2, "width");

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        virtualinvoke $r0.<com.google.wave.api.Image: void setWidth(int)>($i1);

     label3:
        $r6 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.Document: java.lang.String getAttribute(java.lang.Object,java.lang.String)>(r2, "height");

        if $r6 == null goto label4;

        $r7 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.Document: java.lang.String getAttribute(java.lang.Object,java.lang.String)>(r2, "height");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        virtualinvoke $r0.<com.google.wave.api.Image: void setHeight(int)>($i0);

     label4:
        return $r0;
    }
}
