final class org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9 extends org.waveprotocol.wave.model.schema.AbstractXmlSchemaConstraints
{

    void <init>()
    {
        java.lang.String[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9 r0;

        r0 := @this: org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9;

        specialinvoke r0.<org.waveprotocol.wave.model.schema.AbstractXmlSchemaConstraints: void <init>()>();

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "wanted";

        virtualinvoke r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9: void addChildren(java.lang.String,java.lang.String[])>(null, $r1);

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "wavelet_id";

        virtualinvoke r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9: void addAttrs(java.lang.String,java.lang.String[])>("wanted", $r2);

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "certainty";

        virtualinvoke r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9: void addAttrs(java.lang.String,java.lang.String[])>("wanted", $r3);

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "timestamp";

        virtualinvoke r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9: void addAttrs(java.lang.String,java.lang.String[])>("wanted", $r4);

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "agent";

        virtualinvoke r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9: void addAttrs(java.lang.String,java.lang.String[])>("wanted", $r5);

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "comment";

        virtualinvoke r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9: void addAttrs(java.lang.String,java.lang.String[])>("wanted", $r6);

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "ignored";

        virtualinvoke r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9: void addAttrs(java.lang.String,java.lang.String[])>("wanted", $r7);

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = "adder";

        virtualinvoke r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9: void addAttrs(java.lang.String,java.lang.String[])>("wanted", $r8);

        $r9 = <org.waveprotocol.wave.model.schema.SchemaUtils: java.lang.String[] BOOLEAN_VALUES>;

        virtualinvoke r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9: void addAttrWithValues(java.lang.String,java.lang.String,java.lang.String[])>("wanted", "wanted", $r9);

        return;
    }

    public boolean permitsAttribute(java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9 r4;
        java.lang.String r0, $r1, $r2, $r3, r5, r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r4 := @this: org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9;

        r5 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        $r1 = "certainty";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $z6 = staticinvoke <org.waveprotocol.wave.model.schema.SchemaUtils: boolean isDouble(java.lang.String)>(r6);

        return $z6;

     label1:
        $r2 = "timestamp";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        $z5 = staticinvoke <org.waveprotocol.wave.model.schema.SchemaUtils: boolean isLong(java.lang.String)>(r6);

        return $z5;

     label2:
        $r3 = "wavelet_id";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        $z4 = staticinvoke <org.waveprotocol.wave.model.schema.SchemaUtils: boolean isWaveletId(java.lang.String)>(r6);

        return $z4;

     label3:
        $z3 = specialinvoke r4.<org.waveprotocol.wave.model.schema.AbstractXmlSchemaConstraints: boolean permitsAttribute(java.lang.String,java.lang.String,java.lang.String)>(r5, r0, r6);

        return $z3;
    }
}
