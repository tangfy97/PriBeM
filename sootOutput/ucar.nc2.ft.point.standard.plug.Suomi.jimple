public class ucar.nc2.ft.point.standard.plug.Suomi extends ucar.nc2.ft.point.standard.TableConfigurerImpl
{

    public void <init>()
    {
        ucar.nc2.ft.point.standard.plug.Suomi r0;

        r0 := @this: ucar.nc2.ft.point.standard.plug.Suomi;

        specialinvoke r0.<ucar.nc2.ft.point.standard.TableConfigurerImpl: void <init>()>();

        return;
    }

    public boolean isMine(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.ft.point.standard.plug.Suomi r2;
        java.lang.String $r1;
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.nc2.constants.FeatureType r3;
        boolean $z0, $z1;

        r2 := @this: ucar.nc2.ft.point.standard.plug.Suomi;

        r3 := @parameter0: ucar.nc2.constants.FeatureType;

        r0 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "Convention", null);

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Suomi-Station-CDM");

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public ucar.nc2.ft.point.standard.TableConfig getConfig(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.TableConfig $r4;
        ucar.nc2.ft.point.standard.plug.Suomi r5;
        ucar.nc2.ft.point.standard.PointConfigXML $r0;
        ucar.nc2.constants.FeatureType r1;
        ucar.nc2.dataset.NetcdfDataset r2;
        java.util.Formatter r3;

        r5 := @this: ucar.nc2.ft.point.standard.plug.Suomi;

        r1 := @parameter0: ucar.nc2.constants.FeatureType;

        r2 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter2: java.util.Formatter;

        $r0 = new ucar.nc2.ft.point.standard.PointConfigXML;

        specialinvoke $r0.<ucar.nc2.ft.point.standard.PointConfigXML: void <init>()>();

        $r4 = virtualinvoke $r0.<ucar.nc2.ft.point.standard.PointConfigXML: ucar.nc2.ft.point.standard.TableConfig readConfigXMLfromResource(java.lang.String,ucar.nc2.constants.FeatureType,ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>("resources/nj22/pointConfig/Suomi.xml", r1, r2, r3);

        return $r4;
    }
}
