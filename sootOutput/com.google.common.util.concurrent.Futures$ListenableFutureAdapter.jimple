class com.google.common.util.concurrent.Futures$ListenableFutureAdapter extends com.google.common.util.concurrent.ForwardingFuture implements com.google.common.util.concurrent.ListenableFuture
{
    private static final java.util.concurrent.ThreadFactory threadFactory;
    private static final java.util.concurrent.Executor defaultAdapterExecutor;
    private final java.util.concurrent.Executor adapterExecutor;
    private final com.google.common.util.concurrent.ExecutionList executionList;
    private final java.util.concurrent.atomic.AtomicBoolean hasListeners;
    private final java.util.concurrent.Future delegate;

    void <init>(java.util.concurrent.Future)
    {
        java.util.concurrent.Future r1;
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.Futures$ListenableFutureAdapter r0;

        r0 := @this: com.google.common.util.concurrent.Futures$ListenableFutureAdapter;

        r1 := @parameter0: java.util.concurrent.Future;

        $r2 = <com.google.common.util.concurrent.Futures$ListenableFutureAdapter: java.util.concurrent.Executor defaultAdapterExecutor>;

        specialinvoke r0.<com.google.common.util.concurrent.Futures$ListenableFutureAdapter: void <init>(java.util.concurrent.Future,java.util.concurrent.Executor)>(r1, $r2);

        return;
    }

    void <init>(java.util.concurrent.Future, java.util.concurrent.Executor)
    {
        java.util.concurrent.Executor r6, $r8;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        java.util.concurrent.Future r3, $r5;
        java.lang.Object $r4, $r7;
        com.google.common.util.concurrent.ExecutionList $r1;
        com.google.common.util.concurrent.Futures$ListenableFutureAdapter r0;

        r0 := @this: com.google.common.util.concurrent.Futures$ListenableFutureAdapter;

        r3 := @parameter0: java.util.concurrent.Future;

        r6 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<com.google.common.util.concurrent.ForwardingFuture: void <init>()>();

        $r1 = new com.google.common.util.concurrent.ExecutionList;

        specialinvoke $r1.<com.google.common.util.concurrent.ExecutionList: void <init>()>();

        r0.<com.google.common.util.concurrent.Futures$ListenableFutureAdapter: com.google.common.util.concurrent.ExecutionList executionList> = $r1;

        $r2 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.google.common.util.concurrent.Futures$ListenableFutureAdapter: java.util.concurrent.atomic.AtomicBoolean hasListeners> = $r2;

        $r4 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r5 = (java.util.concurrent.Future) $r4;

        r0.<com.google.common.util.concurrent.Futures$ListenableFutureAdapter: java.util.concurrent.Future delegate> = $r5;

        $r7 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r6);

        $r8 = (java.util.concurrent.Executor) $r7;

        r0.<com.google.common.util.concurrent.Futures$ListenableFutureAdapter: java.util.concurrent.Executor adapterExecutor> = $r8;

        return;
    }

    protected java.util.concurrent.Future delegate()
    {
        java.util.concurrent.Future $r1;
        com.google.common.util.concurrent.Futures$ListenableFutureAdapter r0;

        r0 := @this: com.google.common.util.concurrent.Futures$ListenableFutureAdapter;

        $r1 = r0.<com.google.common.util.concurrent.Futures$ListenableFutureAdapter: java.util.concurrent.Future delegate>;

        return $r1;
    }

    public void addListener(java.lang.Runnable, java.util.concurrent.Executor)
    {
        java.util.concurrent.Executor r2, $r7;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        java.lang.Runnable r1;
        java.util.concurrent.Future $r5;
        com.google.common.util.concurrent.Futures$ListenableFutureAdapter$1 $r6;
        com.google.common.util.concurrent.ExecutionList $r3, $r8;
        com.google.common.util.concurrent.Futures$ListenableFutureAdapter r0;
        boolean $z0, $z1;

        r0 := @this: com.google.common.util.concurrent.Futures$ListenableFutureAdapter;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.util.concurrent.Executor;

        $r3 = r0.<com.google.common.util.concurrent.Futures$ListenableFutureAdapter: com.google.common.util.concurrent.ExecutionList executionList>;

        virtualinvoke $r3.<com.google.common.util.concurrent.ExecutionList: void add(java.lang.Runnable,java.util.concurrent.Executor)>(r1, r2);

        $r4 = r0.<com.google.common.util.concurrent.Futures$ListenableFutureAdapter: java.util.concurrent.atomic.AtomicBoolean hasListeners>;

        $z0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label2;

        $r5 = r0.<com.google.common.util.concurrent.Futures$ListenableFutureAdapter: java.util.concurrent.Future delegate>;

        $z1 = interfaceinvoke $r5.<java.util.concurrent.Future: boolean isDone()>();

        if $z1 == 0 goto label1;

        $r8 = r0.<com.google.common.util.concurrent.Futures$ListenableFutureAdapter: com.google.common.util.concurrent.ExecutionList executionList>;

        virtualinvoke $r8.<com.google.common.util.concurrent.ExecutionList: void run()>();

        return;

     label1:
        $r7 = r0.<com.google.common.util.concurrent.Futures$ListenableFutureAdapter: java.util.concurrent.Executor adapterExecutor>;

        $r6 = new com.google.common.util.concurrent.Futures$ListenableFutureAdapter$1;

        specialinvoke $r6.<com.google.common.util.concurrent.Futures$ListenableFutureAdapter$1: void <init>(com.google.common.util.concurrent.Futures$ListenableFutureAdapter)>(r0);

        interfaceinvoke $r7.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

     label2:
        return;
    }

    protected volatile java.lang.Object delegate()
    {
        java.util.concurrent.Future $r1;
        com.google.common.util.concurrent.Futures$ListenableFutureAdapter r0;

        r0 := @this: com.google.common.util.concurrent.Futures$ListenableFutureAdapter;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.Futures$ListenableFutureAdapter: java.util.concurrent.Future delegate()>();

        return $r1;
    }

    static java.util.concurrent.Future access$200(com.google.common.util.concurrent.Futures$ListenableFutureAdapter)
    {
        java.util.concurrent.Future $r1;
        com.google.common.util.concurrent.Futures$ListenableFutureAdapter r0;

        r0 := @parameter0: com.google.common.util.concurrent.Futures$ListenableFutureAdapter;

        $r1 = r0.<com.google.common.util.concurrent.Futures$ListenableFutureAdapter: java.util.concurrent.Future delegate>;

        return $r1;
    }

    static com.google.common.util.concurrent.ExecutionList access$300(com.google.common.util.concurrent.Futures$ListenableFutureAdapter)
    {
        com.google.common.util.concurrent.ExecutionList $r1;
        com.google.common.util.concurrent.Futures$ListenableFutureAdapter r0;

        r0 := @parameter0: com.google.common.util.concurrent.Futures$ListenableFutureAdapter;

        $r1 = r0.<com.google.common.util.concurrent.Futures$ListenableFutureAdapter: com.google.common.util.concurrent.ExecutionList executionList>;

        return $r1;
    }

    static void <clinit>()
    {
        com.google.common.util.concurrent.ThreadFactoryBuilder $r0, $r1;
        java.util.concurrent.ThreadFactory $r2, $r3;
        java.util.concurrent.ExecutorService $r4;

        $r0 = new com.google.common.util.concurrent.ThreadFactoryBuilder;

        specialinvoke $r0.<com.google.common.util.concurrent.ThreadFactoryBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<com.google.common.util.concurrent.ThreadFactoryBuilder: com.google.common.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String)>("ListenableFutureAdapter-thread-%d");

        $r2 = virtualinvoke $r1.<com.google.common.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory build()>();

        <com.google.common.util.concurrent.Futures$ListenableFutureAdapter: java.util.concurrent.ThreadFactory threadFactory> = $r2;

        $r3 = <com.google.common.util.concurrent.Futures$ListenableFutureAdapter: java.util.concurrent.ThreadFactory threadFactory>;

        $r4 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool(java.util.concurrent.ThreadFactory)>($r3);

        <com.google.common.util.concurrent.Futures$ListenableFutureAdapter: java.util.concurrent.Executor defaultAdapterExecutor> = $r4;

        return;
    }
}
