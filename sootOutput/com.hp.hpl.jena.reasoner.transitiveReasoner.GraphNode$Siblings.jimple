class com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings extends java.lang.Object
{
    static final com.hp.hpl.jena.util.iterator.NullIterator noMembers;

    void <init>()
    {
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings r0;

        r0 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    java.util.Set members()
    {
        com.hp.hpl.jena.shared.BrokenException $r0;
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings r1;

        r1 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings;

        $r0 = new com.hp.hpl.jena.shared.BrokenException;

        specialinvoke $r0.<com.hp.hpl.jena.shared.BrokenException: void <init>(java.lang.String)>("cannot ask for components of a raw GraphNode");

        throw $r0;
    }

    void addInto(java.util.Set, com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode)
    {
        java.util.Set r0;
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode r1;
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings r2;

        r2 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    void addSuccessors(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache, java.util.ArrayList)
    {
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache r2;
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings r0;
        java.util.ArrayList r3;

        r0 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache;

        r3 := @parameter2: java.util.ArrayList;

        return;
    }

    java.util.Iterator siblingIterator()
    {
        com.hp.hpl.jena.util.iterator.NullIterator $r0;
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings r1;

        r1 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings;

        $r0 = <com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings: com.hp.hpl.jena.util.iterator.NullIterator noMembers>;

        return $r0;
    }

    com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode leadNode(com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode)
    {
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode r0;
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings r1;

        r1 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings;

        r0 := @parameter0: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode;

        return r0;
    }

    java.lang.String dump()
    {
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings r0;

        r0 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings;

        return "";
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.util.iterator.NullIterator $r0;

        $r0 = staticinvoke <com.hp.hpl.jena.util.iterator.NullIterator: com.hp.hpl.jena.util.iterator.NullIterator instance()>();

        <com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings: com.hp.hpl.jena.util.iterator.NullIterator noMembers> = $r0;

        return;
    }
}
