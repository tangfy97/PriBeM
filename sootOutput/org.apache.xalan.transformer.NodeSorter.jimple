public class org.apache.xalan.transformer.NodeSorter extends java.lang.Object
{
    org.apache.xpath.XPathContext m_execContext;
    java.util.Vector m_keys;

    public void <init>(org.apache.xpath.XPathContext)
    {
        org.apache.xalan.transformer.NodeSorter r0;
        org.apache.xpath.XPathContext r1;

        r0 := @this: org.apache.xalan.transformer.NodeSorter;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.transformer.NodeSorter: org.apache.xpath.XPathContext m_execContext> = r1;

        return;
    }

    public void sort(org.apache.xml.dtm.DTMIterator, java.util.Vector, org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.NodeSorter r0;
        org.apache.xml.dtm.DTMIterator r2;
        java.util.Vector r1, $r3, $r5;
        org.apache.xalan.transformer.NodeSorter$NodeCompareElem $r4, $r8;
        org.apache.xpath.XPathContext r6;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.Object $r7;

        r0 := @this: org.apache.xalan.transformer.NodeSorter;

        r2 := @parameter0: org.apache.xml.dtm.DTMIterator;

        r1 := @parameter1: java.util.Vector;

        r6 := @parameter2: org.apache.xpath.XPathContext;

        r0.<org.apache.xalan.transformer.NodeSorter: java.util.Vector m_keys> = r1;

        $i0 = interfaceinvoke r2.<org.apache.xml.dtm.DTMIterator: int getLength()>();

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        i4 = 0;

        goto label2;

     label1:
        $r4 = new org.apache.xalan.transformer.NodeSorter$NodeCompareElem;

        $i1 = interfaceinvoke r2.<org.apache.xml.dtm.DTMIterator: int item(int)>(i4);

        specialinvoke $r4.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: void <init>(org.apache.xalan.transformer.NodeSorter,int)>(r0, $i1);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        i4 = i4 + 1;

     label2:
        if i4 < $i0 goto label1;

        $r5 = new java.util.Vector;

        specialinvoke $r5.<java.util.Vector: void <init>()>();

        $i2 = $i0 - 1;

        virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: void mergesort(java.util.Vector,java.util.Vector,int,int,org.apache.xpath.XPathContext)>($r3, $r5, 0, $i2, r6);

        i5 = 0;

        goto label4;

     label3:
        $r7 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i5);

        $r8 = (org.apache.xalan.transformer.NodeSorter$NodeCompareElem) $r7;

        $i3 = $r8.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        interfaceinvoke r2.<org.apache.xml.dtm.DTMIterator: void setItem(int,int)>($i3, i5);

        i5 = i5 + 1;

     label4:
        if i5 < $i0 goto label3;

        interfaceinvoke r2.<org.apache.xml.dtm.DTMIterator: void setCurrentPos(int)>(0);

        return;
    }

    int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem, org.apache.xalan.transformer.NodeSorter$NodeCompareElem, int, org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        java.util.Vector $r1, $r20, $r37;
        byte $b11, $b15, $b17, $b18, $b21;
        org.apache.xpath.XPath $r7, $r12, $r31, $r35;
        org.apache.xalan.transformer.NodeSortKey r3;
        java.text.CollationKey r46, r47;
        org.apache.xpath.objects.XObject $r8, $r13, $r32, $r36;
        java.lang.Double $r39, $r41, $r43, $r45;
        org.apache.xpath.XPathContext $r6, $r11, r18, $r30, $r34;
        java.lang.String $r15, $r17, $r21, $r22, $r23, $r24;
        java.text.Collator $r14, $r16;
        org.apache.xml.utils.PrefixResolver $r5, $r10, $r29, $r33;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, i16, $i19, $i20, $i22, $i23;
        double d0, d1, d2;
        org.apache.xalan.transformer.NodeSorter r0;
        org.apache.xalan.transformer.NodeSorter$NodeCompareElem r4, r9;
        org.apache.xml.dtm.DTM $r19;
        java.lang.Object $r2, $r25, $r26, $r27, $r28, $r38, $r40, $r42, $r44;

        r0 := @this: org.apache.xalan.transformer.NodeSorter;

        r4 := @parameter0: org.apache.xalan.transformer.NodeSorter$NodeCompareElem;

        r9 := @parameter1: org.apache.xalan.transformer.NodeSorter$NodeCompareElem;

        i0 := @parameter2: int;

        r18 := @parameter3: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xalan.transformer.NodeSorter: java.util.Vector m_keys>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        r3 = (org.apache.xalan.transformer.NodeSortKey) $r2;

        $z0 = r3.<org.apache.xalan.transformer.NodeSortKey: boolean m_treatAsNumbers>;

        if $z0 == 0 goto label15;

        if i0 != 0 goto label01;

        $r42 = r4.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key1Value>;

        $r43 = (java.lang.Double) $r42;

        d0 = virtualinvoke $r43.<java.lang.Double: double doubleValue()>();

        $r44 = r9.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key1Value>;

        $r45 = (java.lang.Double) $r44;

        d1 = virtualinvoke $r45.<java.lang.Double: double doubleValue()>();

        goto label03;

     label01:
        if i0 != 1 goto label02;

        $r38 = r4.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key2Value>;

        $r39 = (java.lang.Double) $r38;

        d0 = virtualinvoke $r39.<java.lang.Double: double doubleValue()>();

        $r40 = r9.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key2Value>;

        $r41 = (java.lang.Double) $r40;

        d1 = virtualinvoke $r41.<java.lang.Double: double doubleValue()>();

        goto label03;

     label02:
        $r31 = r3.<org.apache.xalan.transformer.NodeSortKey: org.apache.xpath.XPath m_selectPat>;

        $r30 = r0.<org.apache.xalan.transformer.NodeSorter: org.apache.xpath.XPathContext m_execContext>;

        $i9 = r4.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $r29 = r3.<org.apache.xalan.transformer.NodeSortKey: org.apache.xml.utils.PrefixResolver m_namespaceContext>;

        $r32 = virtualinvoke $r31.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r30, $i9, $r29);

        $r35 = r3.<org.apache.xalan.transformer.NodeSortKey: org.apache.xpath.XPath m_selectPat>;

        $r34 = r0.<org.apache.xalan.transformer.NodeSorter: org.apache.xpath.XPathContext m_execContext>;

        $i10 = r9.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $r33 = r3.<org.apache.xalan.transformer.NodeSortKey: org.apache.xml.utils.PrefixResolver m_namespaceContext>;

        $r36 = virtualinvoke $r35.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r34, $i10, $r33);

        d0 = virtualinvoke $r32.<org.apache.xpath.objects.XObject: double num()>();

        d1 = virtualinvoke $r36.<org.apache.xpath.objects.XObject: double num()>();

     label03:
        $b15 = d0 cmpl d1;

        if $b15 != 0 goto label04;

        $i12 = i0 + 1;

        $r37 = r0.<org.apache.xalan.transformer.NodeSorter: java.util.Vector m_keys>;

        $i13 = virtualinvoke $r37.<java.util.Vector: int size()>();

        if $i12 >= $i13 goto label04;

        $i14 = i0 + 1;

        i16 = virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)>(r4, r9, $i14, r18);

        goto label14;

     label04:
        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z3 == 0 goto label06;

        $z7 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z7 == 0 goto label05;

        d2 = 0.0;

        goto label08;

     label05:
        d2 = -1.0;

        goto label08;

     label06:
        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z4 == 0 goto label07;

        d2 = 1.0;

        goto label08;

     label07:
        d2 = d0 - d1;

     label08:
        $b17 = d2 cmpg 0.0;

        $i22 = (int) $b17;

        if $i22 >= 0 goto label10;

        $z6 = r3.<org.apache.xalan.transformer.NodeSortKey: boolean m_descending>;

        if $z6 == 0 goto label09;

        $b18 = 1;

        goto label13;

     label09:
        $b18 = -1;

        goto label13;

     label10:
        $b11 = d2 cmpl 0.0;

        $i23 = (int) $b11;

        if $i23 <= 0 goto label12;

        $z5 = r3.<org.apache.xalan.transformer.NodeSortKey: boolean m_descending>;

        if $z5 == 0 goto label11;

        $b18 = -1;

        goto label13;

     label11:
        $b18 = 1;

        goto label13;

     label12:
        $b18 = 0;

     label13:
        i16 = $b18;

     label14:
        goto label22;

     label15:
        if i0 != 0 goto label16;

        $r27 = r4.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key1Value>;

        r46 = (java.text.CollationKey) $r27;

        $r28 = r9.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key1Value>;

        r47 = (java.text.CollationKey) $r28;

        goto label18;

     label16:
        if i0 != 1 goto label17;

        $r25 = r4.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key2Value>;

        r46 = (java.text.CollationKey) $r25;

        $r26 = r9.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key2Value>;

        r47 = (java.text.CollationKey) $r26;

        goto label18;

     label17:
        $r7 = r3.<org.apache.xalan.transformer.NodeSortKey: org.apache.xpath.XPath m_selectPat>;

        $r6 = r0.<org.apache.xalan.transformer.NodeSorter: org.apache.xpath.XPathContext m_execContext>;

        $i1 = r4.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $r5 = r3.<org.apache.xalan.transformer.NodeSortKey: org.apache.xml.utils.PrefixResolver m_namespaceContext>;

        $r8 = virtualinvoke $r7.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r6, $i1, $r5);

        $r12 = r3.<org.apache.xalan.transformer.NodeSortKey: org.apache.xpath.XPath m_selectPat>;

        $r11 = r0.<org.apache.xalan.transformer.NodeSorter: org.apache.xpath.XPathContext m_execContext>;

        $i2 = r9.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $r10 = r3.<org.apache.xalan.transformer.NodeSortKey: org.apache.xml.utils.PrefixResolver m_namespaceContext>;

        $r13 = virtualinvoke $r12.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r11, $i2, $r10);

        $r14 = r3.<org.apache.xalan.transformer.NodeSortKey: java.text.Collator m_col>;

        $r15 = virtualinvoke $r8.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        r46 = virtualinvoke $r14.<java.text.Collator: java.text.CollationKey getCollationKey(java.lang.String)>($r15);

        $r16 = r3.<org.apache.xalan.transformer.NodeSortKey: java.text.Collator m_col>;

        $r17 = virtualinvoke $r13.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        r47 = virtualinvoke $r16.<java.text.Collator: java.text.CollationKey getCollationKey(java.lang.String)>($r17);

     label18:
        $i19 = virtualinvoke r46.<java.text.CollationKey: int compareTo(java.text.CollationKey)>(r47);

        i16 = $i19;

        $z8 = r3.<org.apache.xalan.transformer.NodeSortKey: boolean m_caseOrderUpper>;

        if $z8 == 0 goto label21;

        $r21 = virtualinvoke r46.<java.text.CollationKey: java.lang.String getSourceString()>();

        $r22 = virtualinvoke $r21.<java.lang.String: java.lang.String toLowerCase()>();

        $r23 = virtualinvoke r47.<java.text.CollationKey: java.lang.String getSourceString()>();

        $r24 = virtualinvoke $r23.<java.lang.String: java.lang.String toLowerCase()>();

        $z2 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z2 == 0 goto label21;

        if $i19 != 0 goto label19;

        $i20 = 0;

        goto label20;

     label19:
        $i20 = neg $i19;

     label20:
        i16 = $i20;

     label21:
        $z9 = r3.<org.apache.xalan.transformer.NodeSortKey: boolean m_descending>;

        if $z9 == 0 goto label22;

        i16 = neg i16;

     label22:
        if 0 != i16 goto label23;

        $i6 = i0 + 1;

        $r20 = r0.<org.apache.xalan.transformer.NodeSorter: java.util.Vector m_keys>;

        $i7 = virtualinvoke $r20.<java.util.Vector: int size()>();

        if $i6 >= $i7 goto label23;

        $i8 = i0 + 1;

        i16 = virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)>(r4, r9, $i8, r18);

     label23:
        if 0 != i16 goto label26;

        $i3 = r4.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $r19 = virtualinvoke r18.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i3);

        $i5 = r4.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $i4 = r9.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $z1 = interfaceinvoke $r19.<org.apache.xml.dtm.DTM: boolean isNodeAfter(int,int)>($i5, $i4);

        if $z1 == 0 goto label24;

        $b21 = -1;

        goto label25;

     label24:
        $b21 = 1;

     label25:
        i16 = $b21;

     label26:
        return i16;
    }

    void mergesort(java.util.Vector, java.util.Vector, int, int, org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        java.util.Vector r1, r2;
        org.apache.xpath.XPathContext r3;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20, i21, i22, $i24, $i26, $i28;
        org.apache.xalan.transformer.NodeSorter r0;
        org.apache.xalan.transformer.NodeSorter$NodeCompareElem $r9, $r11;
        java.lang.Object $r4, $r5, $r6, $r7, $r8, $r10, $r12, $r13;

        r0 := @this: org.apache.xalan.transformer.NodeSorter;

        r1 := @parameter0: java.util.Vector;

        r2 := @parameter1: java.util.Vector;

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        r3 := @parameter4: org.apache.xpath.XPathContext;

        $i2 = i0 - i1;

        if $i2 <= 0 goto label15;

        $i3 = i0 + i1;

        i4 = $i3 / 2;

        virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: void mergesort(java.util.Vector,java.util.Vector,int,int,org.apache.xpath.XPathContext)>(r1, r2, i1, i4, r3);

        $i5 = i4 + 1;

        virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: void mergesort(java.util.Vector,java.util.Vector,int,int,org.apache.xpath.XPathContext)>(r1, r2, $i5, i0, r3);

        i17 = i4;

        goto label04;

     label01:
        $i6 = virtualinvoke r2.<java.util.Vector: int size()>();

        if i17 < $i6 goto label02;

        $r5 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i17);

        virtualinvoke r2.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r5, i17);

        goto label03;

     label02:
        $r4 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i17);

        virtualinvoke r2.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r4, i17);

     label03:
        $i24 = (int) -1;

        i17 = i17 + $i24;

     label04:
        if i17 >= i1 goto label01;

        i18 = i1;

        i19 = i4 + 1;

        goto label08;

     label05:
        $i7 = i0 + i4;

        $i8 = $i7 + 1;

        $i9 = $i8 - i19;

        $i10 = virtualinvoke r2.<java.util.Vector: int size()>();

        if $i9 < $i10 goto label06;

        $r7 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i19);

        $i14 = i0 + i4;

        $i15 = $i14 + 1;

        $i16 = $i15 - i19;

        virtualinvoke r2.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r7, $i16);

        goto label07;

     label06:
        $r6 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i19);

        $i11 = i0 + i4;

        $i12 = $i11 + 1;

        $i13 = $i12 - i19;

        virtualinvoke r2.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r6, $i13);

     label07:
        i19 = i19 + 1;

     label08:
        if i19 <= i0 goto label05;

        i20 = i0;

        i21 = i1;

        goto label14;

     label09:
        if i18 != i20 goto label10;

        $i26 = (int) -1;

        i22 = $i26;

        goto label11;

     label10:
        $r8 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i18);

        $r9 = (org.apache.xalan.transformer.NodeSorter$NodeCompareElem) $r8;

        $r10 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i20);

        $r11 = (org.apache.xalan.transformer.NodeSorter$NodeCompareElem) $r10;

        i22 = virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)>($r9, $r11, 0, r3);

     label11:
        if i22 >= 0 goto label12;

        $r13 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i18);

        virtualinvoke r1.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r13, i21);

        i18 = i18 + 1;

        goto label13;

     label12:
        if i22 <= 0 goto label13;

        $r12 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i20);

        virtualinvoke r1.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r12, i21);

        $i28 = (int) -1;

        i20 = i20 + $i28;

     label13:
        i21 = i21 + 1;

     label14:
        if i21 <= i0 goto label09;

     label15:
        return;
    }
}
