final class com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule extends com.mycila.inject.internal.asm.xml.ASMContentHandler$Rule
{
    private final com.mycila.inject.internal.asm.xml.ASMContentHandler this$0;

    void <init>(com.mycila.inject.internal.asm.xml.ASMContentHandler)
    {
        com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule r0;
        com.mycila.inject.internal.asm.xml.ASMContentHandler r1;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule;

        r1 := @parameter0: com.mycila.inject.internal.asm.xml.ASMContentHandler;

        specialinvoke r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Rule: void <init>(com.mycila.inject.internal.asm.xml.ASMContentHandler)>(r1);

        r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0> = r1;

        return;
    }

    public final void begin(java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.mycila.inject.internal.asm.MethodVisitor $r5, $r9, $r12, $r16, $r19, $r22, $r26, $r28, $r30, $r32;
        java.util.Map $r1;
        com.mycila.inject.internal.asm.xml.ASMContentHandler $r39;
        org.xml.sax.SAXException $r34;
        java.lang.Error $r33;
        java.lang.StringBuffer $r35, $r36, $r37, $r38, $r41;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        org.xml.sax.Attributes r6;
        java.lang.String r0, $r7, $r8, $r10, $r11, $r13, $r14, $r17, $r20, $r21, $r23, $r24, $r25, $r27, $r29, $r31, $r40, $r42, $r43;
        com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule r4;
        com.mycila.inject.internal.asm.xml.ASMContentHandler$Opcode r3;
        com.mycila.inject.internal.asm.Label $r18;
        java.lang.Object $r2, $r15;

        r4 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule;

        r0 := @parameter0: java.lang.String;

        r6 := @parameter1: org.xml.sax.Attributes;

        $r1 = <com.mycila.inject.internal.asm.xml.ASMContentHandler: java.util.Map OPCODES>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (com.mycila.inject.internal.asm.xml.ASMContentHandler$Opcode) $r2;

        if r3 != null goto label01;

        $r34 = new org.xml.sax.SAXException;

        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid element: ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" at ");

        $r39 = r4.<com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0>;

        $r40 = $r39.<com.mycila.inject.internal.asm.xml.ASMContentHandler: java.lang.String match>;

        $r41 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r34.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r42);

        throw $r34;

     label01:
        $i0 = r3.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Opcode: int type>;

        tableswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label04;
            case 2: goto label10;
            case 3: goto label09;
            case 4: goto label03;
            case 5: goto label06;
            case 6: goto label05;
            case 7: goto label12;
            case 8: goto label11;
            case 9: goto label13;
            default: goto label14;
        };

     label02:
        $r32 = virtualinvoke r4.<com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule: com.mycila.inject.internal.asm.MethodVisitor getCodeVisitor()>();

        $i13 = r3.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Opcode: int opcode>;

        interfaceinvoke $r32.<com.mycila.inject.internal.asm.MethodVisitor: void visitInsn(int)>($i13);

        goto label15;

     label03:
        $r22 = virtualinvoke r4.<com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule: com.mycila.inject.internal.asm.MethodVisitor getCodeVisitor()>();

        $i7 = r3.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Opcode: int opcode>;

        $r23 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("owner");

        $r24 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");

        $r25 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("desc");

        interfaceinvoke $r22.<com.mycila.inject.internal.asm.MethodVisitor: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>($i7, $r23, $r24, $r25);

        goto label15;

     label04:
        $r30 = virtualinvoke r4.<com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule: com.mycila.inject.internal.asm.MethodVisitor getCodeVisitor()>();

        $i11 = r3.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Opcode: int opcode>;

        $r31 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("value");

        $i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r31);

        interfaceinvoke $r30.<com.mycila.inject.internal.asm.MethodVisitor: void visitIntInsn(int,int)>($i11, $i12);

        goto label15;

     label05:
        $r16 = virtualinvoke r4.<com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule: com.mycila.inject.internal.asm.MethodVisitor getCodeVisitor()>();

        $i4 = r3.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Opcode: int opcode>;

        $r17 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("label");

        $r18 = virtualinvoke r4.<com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule: com.mycila.inject.internal.asm.Label getLabel(java.lang.Object)>($r17);

        interfaceinvoke $r16.<com.mycila.inject.internal.asm.MethodVisitor: void visitJumpInsn(int,com.mycila.inject.internal.asm.Label)>($i4, $r18);

        goto label15;

     label06:
        $r19 = virtualinvoke r4.<com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule: com.mycila.inject.internal.asm.MethodVisitor getCodeVisitor()>();

        $i6 = r3.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Opcode: int opcode>;

        $i5 = r3.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Opcode: int opcode>;

        if $i5 == 186 goto label07;

        $r43 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("owner");

        goto label08;

     label07:
        $r43 = "java/lang/dyn/Dynamic";

     label08:
        $r20 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");

        $r21 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("desc");

        interfaceinvoke $r19.<com.mycila.inject.internal.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>($i6, $r43, $r20, $r21);

        goto label15;

     label09:
        $r26 = virtualinvoke r4.<com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule: com.mycila.inject.internal.asm.MethodVisitor getCodeVisitor()>();

        $i8 = r3.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Opcode: int opcode>;

        $r27 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("desc");

        interfaceinvoke $r26.<com.mycila.inject.internal.asm.MethodVisitor: void visitTypeInsn(int,java.lang.String)>($i8, $r27);

        goto label15;

     label10:
        $r28 = virtualinvoke r4.<com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule: com.mycila.inject.internal.asm.MethodVisitor getCodeVisitor()>();

        $i9 = r3.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Opcode: int opcode>;

        $r29 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("var");

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r29);

        interfaceinvoke $r28.<com.mycila.inject.internal.asm.MethodVisitor: void visitVarInsn(int,int)>($i9, $i10);

        goto label15;

     label11:
        $r9 = virtualinvoke r4.<com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule: com.mycila.inject.internal.asm.MethodVisitor getCodeVisitor()>();

        $r10 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("var");

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        $r11 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("inc");

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        interfaceinvoke $r9.<com.mycila.inject.internal.asm.MethodVisitor: void visitIincInsn(int,int)>($i2, $i3);

        goto label15;

     label12:
        $r12 = virtualinvoke r4.<com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule: com.mycila.inject.internal.asm.MethodVisitor getCodeVisitor()>();

        $r13 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("desc");

        $r14 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("cst");

        $r15 = virtualinvoke r4.<com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule: java.lang.Object getValue(java.lang.String,java.lang.String)>($r13, $r14);

        interfaceinvoke $r12.<com.mycila.inject.internal.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>($r15);

        goto label15;

     label13:
        $r5 = virtualinvoke r4.<com.mycila.inject.internal.asm.xml.ASMContentHandler$OpcodesRule: com.mycila.inject.internal.asm.MethodVisitor getCodeVisitor()>();

        $r7 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("desc");

        $r8 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("dims");

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        interfaceinvoke $r5.<com.mycila.inject.internal.asm.MethodVisitor: void visitMultiANewArrayInsn(java.lang.String,int)>($r7, $i1);

        goto label15;

     label14:
        $r33 = new java.lang.Error;

        specialinvoke $r33.<java.lang.Error: void <init>(java.lang.String)>("Internal error");

        throw $r33;

     label15:
        return;
    }
}
