public class com.google.gxp.com.google.common.io.ZipFiles extends java.lang.Object
{

    private void <init>()
    {
        com.google.gxp.com.google.common.io.ZipFiles r0;

        r0 := @this: com.google.gxp.com.google.common.io.ZipFiles;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final void unzipFile(java.io.File, java.io.File) throws java.io.IOException
    {
        java.lang.Throwable $r12;
        java.lang.Object[] $r1;
        java.util.Enumeration $r5;
        java.util.zip.ZipFile $r3;
        java.lang.String $r2, $r9;
        java.util.zip.ZipEntry r7;
        boolean $z0, $z1, $z2, $z3;
        com.google.gxp.com.google.common.io.ZipFiles$1 $r10;
        java.io.IOException $r11;
        java.io.File r0, r4, $r8;
        java.lang.Object $r6;

        r4 := @parameter0: java.io.File;

        r0 := @parameter1: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        $r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r1[0] = $r2;

        staticinvoke <com.google.gxp.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "%s is not a valid directory", $r1);

        $r3 = new java.util.zip.ZipFile;

        specialinvoke $r3.<java.util.zip.ZipFile: void <init>(java.io.File)>(r4);

     label1:
        $r5 = virtualinvoke $r3.<java.util.zip.ZipFile: java.util.Enumeration entries()>();

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        r7 = (java.util.zip.ZipEntry) $r6;

        $r8 = new java.io.File;

        $r9 = virtualinvoke r7.<java.util.zip.ZipEntry: java.lang.String getName()>();

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r9);

        $z2 = virtualinvoke r7.<java.util.zip.ZipEntry: boolean isDirectory()>();

        if $z2 == 0 goto label3;

        $z3 = virtualinvoke $r8.<java.io.File: boolean mkdir()>();

        if $z3 != 0 goto label4;

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("Failed to create directory");

        throw $r11;

     label3:
        $r10 = new com.google.gxp.com.google.common.io.ZipFiles$1;

        specialinvoke $r10.<com.google.gxp.com.google.common.io.ZipFiles$1: void <init>(java.util.zip.ZipFile,java.util.zip.ZipEntry)>($r3, r7);

        staticinvoke <com.google.gxp.com.google.common.io.Files: void copy(com.google.gxp.com.google.common.io.IoSupplier,java.io.File)>($r10, $r8);

     label4:
        goto label2;

     label5:
        virtualinvoke $r3.<java.util.zip.ZipFile: void close()>();

        goto label8;

     label6:
        $r12 := @caughtexception;

     label7:
        virtualinvoke $r3.<java.util.zip.ZipFile: void close()>();

        throw $r12;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static final void zipDirectory(java.io.File, java.io.File) throws java.io.IOException
    {
        java.util.zip.ZipOutputStream $r6;
        java.lang.Throwable $r11;
        java.lang.Object[] $r1, $r4;
        java.io.BufferedOutputStream $r7;
        int $i0, i1;
        java.lang.String $r2, $r5;
        boolean $z0, $z1, $z2;
        java.io.FileOutputStream $r8;
        java.io.File r0, r3, r10;
        java.io.File[] $r9;

        r0 := @parameter0: java.io.File;

        r3 := @parameter1: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        $r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r1[0] = $r2;

        staticinvoke <com.google.gxp.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "%s is not a valid directory", $r1);

        $z1 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4[0] = $r5;

        staticinvoke <com.google.gxp.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z2, "%s does already exist, files are not being overwritten", $r4);

        $r6 = new java.util.zip.ZipOutputStream;

        $r7 = new java.io.BufferedOutputStream;

        $r8 = new java.io.FileOutputStream;

        specialinvoke $r8.<java.io.FileOutputStream: void <init>(java.io.File)>(r3);

        specialinvoke $r7.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r8);

        specialinvoke $r6.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>($r7);

     label3:
        $r9 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r9;

        i1 = 0;

     label4:
        if i1 >= $i0 goto label5;

        r10 = $r9[i1];

        staticinvoke <com.google.gxp.com.google.common.io.ZipFiles: void zipDirectoryInternal(java.io.File,java.lang.String,java.util.zip.ZipOutputStream)>(r10, "", $r6);

        i1 = i1 + 1;

        goto label4;

     label5:
        staticinvoke <com.google.gxp.com.google.common.io.Closeables: void close(java.io.Closeable,boolean)>($r6, 0);

        goto label8;

     label6:
        $r11 := @caughtexception;

     label7:
        staticinvoke <com.google.gxp.com.google.common.io.Closeables: void close(java.io.Closeable,boolean)>($r6, 1);

        throw $r11;

     label8:
        return;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private static void zipDirectoryInternal(java.io.File, java.lang.String, java.util.zip.ZipOutputStream) throws java.io.IOException
    {
        java.util.zip.ZipOutputStream r9;
        int i0, i1;
        java.lang.String r0, $r1, $r6, $r14, r17;
        java.util.zip.ZipEntry $r8, $r10;
        boolean $z0, $z1;
        java.io.File r5, r16;
        java.lang.StringBuilder $r2, $r3, $r4, $r7, $r11, $r12, $r13;
        java.io.File[] $r15;

        r5 := @parameter0: java.io.File;

        r0 := @parameter1: java.lang.String;

        r9 := @parameter2: java.util.zip.ZipOutputStream;

        $r1 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        r17 = virtualinvoke r5.<java.io.File: java.lang.String getName()>();

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = virtualinvoke r5.<java.io.File: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r17 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $z1 = virtualinvoke r5.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label5;

        $r10 = new java.util.zip.ZipEntry;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.util.zip.ZipEntry: void <init>(java.lang.String)>($r14);

        virtualinvoke r9.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r10);

        $r15 = virtualinvoke r5.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof $r15;

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        r16 = $r15[i1];

        staticinvoke <com.google.gxp.com.google.common.io.ZipFiles: void zipDirectoryInternal(java.io.File,java.lang.String,java.util.zip.ZipOutputStream)>(r16, r17, r9);

        i1 = i1 + 1;

        goto label3;

     label4:
        goto label6;

     label5:
        $r8 = new java.util.zip.ZipEntry;

        specialinvoke $r8.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(r17);

        virtualinvoke r9.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r8);

        staticinvoke <com.google.gxp.com.google.common.io.Files: void copy(java.io.File,java.io.OutputStream)>(r5, r9);

     label6:
        return;
    }
}
