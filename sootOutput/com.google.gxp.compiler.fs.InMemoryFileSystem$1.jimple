final class com.google.gxp.compiler.fs.InMemoryFileSystem$1 extends java.lang.Object implements com.google.gxp.compiler.fs.FileStore
{
    final com.google.gxp.compiler.fs.InMemoryFileSystem this$0;

    void <init>(com.google.gxp.compiler.fs.InMemoryFileSystem)
    {
        com.google.gxp.compiler.fs.InMemoryFileSystem r1;
        com.google.gxp.compiler.fs.InMemoryFileSystem$1 r0;

        r0 := @this: com.google.gxp.compiler.fs.InMemoryFileSystem$1;

        r1 := @parameter0: com.google.gxp.compiler.fs.InMemoryFileSystem;

        r0.<com.google.gxp.compiler.fs.InMemoryFileSystem$1: com.google.gxp.compiler.fs.InMemoryFileSystem this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.nio.charset.Charset getDefaultCharset()
    {
        com.google.gxp.compiler.fs.InMemoryFileSystem $r1;
        com.google.gxp.compiler.fs.InMemoryFileSystem$1 r0;
        java.nio.charset.Charset $r2;

        r0 := @this: com.google.gxp.compiler.fs.InMemoryFileSystem$1;

        $r1 = r0.<com.google.gxp.compiler.fs.InMemoryFileSystem$1: com.google.gxp.compiler.fs.InMemoryFileSystem this$0>;

        $r2 = virtualinvoke $r1.<com.google.gxp.compiler.fs.InMemoryFileSystem: java.nio.charset.Charset getDefaultCharset()>();

        return $r2;
    }

    public java.net.URI toUri(com.google.gxp.compiler.fs.FileRef)
    {
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r3, $r5;
        java.net.URI $r6;
        com.google.gxp.compiler.fs.InMemoryFileSystem$1 r7;
        com.google.gxp.compiler.fs.FileRef r2;

        r7 := @this: com.google.gxp.compiler.fs.InMemoryFileSystem$1;

        r2 := @parameter0: com.google.gxp.compiler.fs.FileRef;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inmem://");

        $r3 = virtualinvoke r2.<com.google.gxp.compiler.fs.FileRef: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r5);

        return $r6;
    }

    public java.io.InputStream openInputStream(com.google.gxp.compiler.fs.FileRef) throws java.io.IOException
    {
        byte[] $r7;
        java.io.ByteArrayOutputStream r5;
        com.google.gxp.compiler.fs.InMemoryFileSystem $r1;
        java.io.FileNotFoundException $r8;
        java.io.ByteArrayInputStream $r6;
        java.util.Map $r2;
        java.lang.Object $r4;
        com.google.gxp.compiler.fs.InMemoryFileSystem$1 r0;
        com.google.gxp.compiler.fs.FileRef r3;

        r0 := @this: com.google.gxp.compiler.fs.InMemoryFileSystem$1;

        r3 := @parameter0: com.google.gxp.compiler.fs.FileRef;

        $r1 = r0.<com.google.gxp.compiler.fs.InMemoryFileSystem$1: com.google.gxp.compiler.fs.InMemoryFileSystem this$0>;

        $r2 = staticinvoke <com.google.gxp.compiler.fs.InMemoryFileSystem: java.util.Map access$000(com.google.gxp.compiler.fs.InMemoryFileSystem)>($r1);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (java.io.ByteArrayOutputStream) $r4;

        if r5 != null goto label1;

        $r8 = new java.io.FileNotFoundException;

        specialinvoke $r8.<java.io.FileNotFoundException: void <init>()>();

        throw $r8;

     label1:
        $r6 = new java.io.ByteArrayInputStream;

        $r7 = virtualinvoke r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r7);

        return $r6;
    }

    public java.io.OutputStream openOutputStream(com.google.gxp.compiler.fs.FileRef)
    {
        java.io.ByteArrayOutputStream $r12;
        long $l0, $l2;
        byte $b1;
        java.lang.Long $r11;
        java.util.Map $r3, $r7, $r9;
        int $i3;
        com.google.gxp.compiler.fs.FileRef r4;
        com.google.gxp.compiler.fs.InMemoryFileSystem $r2, $r5, $r6, $r8, $r10;
        com.google.gxp.compiler.fs.InMemoryFileSystem$1 r1;

        r1 := @this: com.google.gxp.compiler.fs.InMemoryFileSystem$1;

        r4 := @parameter0: com.google.gxp.compiler.fs.FileRef;

        $r12 = new java.io.ByteArrayOutputStream;

        specialinvoke $r12.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = r1.<com.google.gxp.compiler.fs.InMemoryFileSystem$1: com.google.gxp.compiler.fs.InMemoryFileSystem this$0>;

        $r3 = staticinvoke <com.google.gxp.compiler.fs.InMemoryFileSystem: java.util.Map access$000(com.google.gxp.compiler.fs.InMemoryFileSystem)>($r2);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r12);

        $r5 = r1.<com.google.gxp.compiler.fs.InMemoryFileSystem$1: com.google.gxp.compiler.fs.InMemoryFileSystem this$0>;

        $l0 = staticinvoke <com.google.gxp.compiler.fs.InMemoryFileSystem: long access$100(com.google.gxp.compiler.fs.InMemoryFileSystem)>($r5);

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        $r8 = r1.<com.google.gxp.compiler.fs.InMemoryFileSystem$1: com.google.gxp.compiler.fs.InMemoryFileSystem this$0>;

        $r9 = staticinvoke <com.google.gxp.compiler.fs.InMemoryFileSystem: java.util.Map access$200(com.google.gxp.compiler.fs.InMemoryFileSystem)>($r8);

        $r10 = r1.<com.google.gxp.compiler.fs.InMemoryFileSystem$1: com.google.gxp.compiler.fs.InMemoryFileSystem this$0>;

        $l2 = virtualinvoke $r10.<com.google.gxp.compiler.fs.InMemoryFileSystem: long getCurrentTime()>();

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r11);

        goto label2;

     label1:
        $r6 = r1.<com.google.gxp.compiler.fs.InMemoryFileSystem$1: com.google.gxp.compiler.fs.InMemoryFileSystem this$0>;

        $r7 = staticinvoke <com.google.gxp.compiler.fs.InMemoryFileSystem: java.util.Map access$200(com.google.gxp.compiler.fs.InMemoryFileSystem)>($r6);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r4);

     label2:
        return $r12;
    }

    public java.lang.String toFilename(com.google.gxp.compiler.fs.FileRef)
    {
        java.lang.String $r1;
        com.google.gxp.compiler.fs.InMemoryFileSystem$1 r2;
        com.google.gxp.compiler.fs.FileRef r0;

        r2 := @this: com.google.gxp.compiler.fs.InMemoryFileSystem$1;

        r0 := @parameter0: com.google.gxp.compiler.fs.FileRef;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.fs.FileRef: java.lang.String getName()>();

        return $r1;
    }

    public java.lang.String toRelativeFilename(com.google.gxp.compiler.fs.FileRef)
    {
        java.lang.String $r2;
        com.google.gxp.compiler.fs.InMemoryFileSystem$1 r0;
        com.google.gxp.compiler.fs.FileRef r1;

        r0 := @this: com.google.gxp.compiler.fs.InMemoryFileSystem$1;

        r1 := @parameter0: com.google.gxp.compiler.fs.FileRef;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.fs.InMemoryFileSystem$1: java.lang.String toFilename(com.google.gxp.compiler.fs.FileRef)>(r1);

        return $r2;
    }

    public long getLastModified(com.google.gxp.compiler.fs.FileRef)
    {
        java.lang.Long r5;
        java.util.Map $r2;
        com.google.gxp.compiler.fs.InMemoryFileSystem $r1;
        java.lang.Object $r4;
        long $l0;
        com.google.gxp.compiler.fs.InMemoryFileSystem$1 r0;
        com.google.gxp.compiler.fs.FileRef r3;

        r0 := @this: com.google.gxp.compiler.fs.InMemoryFileSystem$1;

        r3 := @parameter0: com.google.gxp.compiler.fs.FileRef;

        $r1 = r0.<com.google.gxp.compiler.fs.InMemoryFileSystem$1: com.google.gxp.compiler.fs.InMemoryFileSystem this$0>;

        $r2 = staticinvoke <com.google.gxp.compiler.fs.InMemoryFileSystem: java.util.Map access$200(com.google.gxp.compiler.fs.InMemoryFileSystem)>($r1);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (java.lang.Long) $r4;

        if r5 != null goto label1;

        $l0 = 0L;

        goto label2;

     label1:
        $l0 = virtualinvoke r5.<java.lang.Long: long longValue()>();

     label2:
        return $l0;
    }

    public boolean delete(com.google.gxp.compiler.fs.FileRef)
    {
        java.util.Map $r2, $r6;
        com.google.gxp.compiler.fs.InMemoryFileSystem $r1, $r5;
        java.lang.Object $r4;
        com.google.gxp.compiler.fs.InMemoryFileSystem$1 r0;
        com.google.gxp.compiler.fs.FileRef r3;

        r0 := @this: com.google.gxp.compiler.fs.InMemoryFileSystem$1;

        r3 := @parameter0: com.google.gxp.compiler.fs.FileRef;

        $r1 = r0.<com.google.gxp.compiler.fs.InMemoryFileSystem$1: com.google.gxp.compiler.fs.InMemoryFileSystem this$0>;

        $r2 = staticinvoke <com.google.gxp.compiler.fs.InMemoryFileSystem: java.util.Map access$000(com.google.gxp.compiler.fs.InMemoryFileSystem)>($r1);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3);

        if $r4 == null goto label1;

        $r5 = r0.<com.google.gxp.compiler.fs.InMemoryFileSystem$1: com.google.gxp.compiler.fs.InMemoryFileSystem this$0>;

        $r6 = staticinvoke <com.google.gxp.compiler.fs.InMemoryFileSystem: java.util.Map access$200(com.google.gxp.compiler.fs.InMemoryFileSystem)>($r5);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3);

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        int $i0;
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String $r4;
        com.google.gxp.compiler.fs.InMemoryFileSystem$1 r2;

        r2 := @this: com.google.gxp.compiler.fs.InMemoryFileSystem$1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InMemoryFileSystem.FileStore@");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
