public class org.apache.xml.dtm.ref.DTMNodeProxy extends java.lang.Object implements org.w3c.dom.Node, org.w3c.dom.Document, org.w3c.dom.Text, org.w3c.dom.Element, org.w3c.dom.Attr, org.w3c.dom.ProcessingInstruction, org.w3c.dom.Comment, org.w3c.dom.DocumentFragment
{
    public org.apache.xml.dtm.DTM dtm;
    int node;
    static final org.w3c.dom.DOMImplementation implementation;

    public void <init>(org.apache.xml.dtm.DTM, int)
    {
        org.apache.xml.dtm.DTM r1;
        int i0;
        org.apache.xml.dtm.ref.DTMNodeProxy r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.apache.xml.dtm.DTM;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm> = r1;

        r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node> = i0;

        return;
    }

    public final org.apache.xml.dtm.DTM getDTM()
    {
        org.apache.xml.dtm.DTM $r1;
        org.apache.xml.dtm.ref.DTMNodeProxy r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        return $r1;
    }

    public final int getDTMNodeNumber()
    {
        int $i0;
        org.apache.xml.dtm.ref.DTMNodeProxy r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        return $i0;
    }

    public final boolean equals(org.w3c.dom.Node)
    {
        java.lang.ClassCastException $r4;
        org.w3c.dom.Node r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1, r5;
        int $i0, $i1;
        org.apache.xml.dtm.DTM $r2, $r3;
        boolean $z0;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r0 := @parameter0: org.w3c.dom.Node;

     label1:
        r5 = (org.apache.xml.dtm.ref.DTMNodeProxy) r0;

        $i1 = r5.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i0 = r1.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        if $i1 != $i0 goto label2;

        $r3 = r5.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r2 = r1.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        if $r3 != $r2 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label1 to label4 with label4;
    }

    public final boolean equals(java.lang.Object)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node $r2;
        java.lang.Object r1;
        java.lang.ClassCastException $r3;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r2 = (org.w3c.dom.Node) r1;

        $z0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: boolean equals(org.w3c.dom.Node)>($r2);

        return $z0;

     label2:
        $r3 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label1 to label2 with label2;
    }

    public final boolean sameNodeAs(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1, r2;
        org.apache.xml.dtm.DTM $r3, $r4;
        int $i0, $i1;
        boolean $z0, $z1;

        r2 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r0 := @parameter0: org.w3c.dom.Node;

        $z0 = r0 instanceof org.apache.xml.dtm.ref.DTMNodeProxy;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.apache.xml.dtm.ref.DTMNodeProxy) r0;

        $r4 = r2.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r3 = r1.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        if $r4 != $r3 goto label2;

        $i1 = r2.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i0 = r1.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        if $i1 != $i0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public final java.lang.String getNodeName()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeName(int)>($i0);

        return $r2;
    }

    public final java.lang.String getTarget()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeName(int)>($i0);

        return $r2;
    }

    public final java.lang.String getLocalName()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getLocalName(int)>($i0);

        return $r2;
    }

    public final java.lang.String getPrefix()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getPrefix(int)>($i0);

        return $r2;
    }

    public final void setPrefix(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(7);

        throw $r0;
    }

    public final java.lang.String getNamespaceURI()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNamespaceURI(int)>($i0);

        return $r2;
    }

    public final boolean supports(java.lang.String, java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r3;
        java.lang.String r0, r1;
        org.w3c.dom.DOMImplementation $r2;
        boolean $z0;

        r3 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.DOMImplementation implementation>;

        $z0 = interfaceinvoke $r2.<org.w3c.dom.DOMImplementation: boolean hasFeature(java.lang.String,java.lang.String)>(r0, r1);

        return $z0;
    }

    public final boolean isSupported(java.lang.String, java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r3;
        java.lang.String r0, r1;
        org.w3c.dom.DOMImplementation $r2;
        boolean $z0;

        r3 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.DOMImplementation implementation>;

        $z0 = interfaceinvoke $r2.<org.w3c.dom.DOMImplementation: boolean hasFeature(java.lang.String,java.lang.String)>(r0, r1);

        return $z0;
    }

    public final java.lang.String getNodeValue() throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeValue(int)>($i0);

        return $r2;
    }

    public final java.lang.String getStringValue() throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r3;
        org.apache.xml.utils.XMLString $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>($i0);

        $r3 = interfaceinvoke $r2.<org.apache.xml.utils.XMLString: java.lang.String toString()>();

        return $r3;
    }

    public final void setNodeValue(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(7);

        throw $r0;
    }

    public final short getNodeType()
    {
        short $s1;
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $s1 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: short getNodeType(int)>($i0);

        return $s1;
    }

    public final org.w3c.dom.Node getParentNode()
    {
        short $s0;
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node $r3;
        int $i1, $i2, $i3, $i5;
        org.apache.xml.dtm.DTM $r1, $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $s0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: short getNodeType()>();

        $i3 = (int) $s0;

        if $i3 != 2 goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getParent(int)>($i1);

        $i5 = (int) -1;

        if $i2 != $i5 goto label2;

        $r3 = null;

        goto label3;

     label2:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i2);

     label3:
        return $r3;
    }

    public final org.w3c.dom.Node getOwnerNode()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node $r3;
        int $i0, $i1, $i3;
        org.apache.xml.dtm.DTM $r1, $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i1 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getParent(int)>($i0);

        $i3 = (int) -1;

        if $i1 != $i3 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i1);

     label2:
        return $r3;
    }

    public final org.w3c.dom.NodeList getChildNodes()
    {
        org.apache.xml.dtm.ref.DTMChildIterNodeList $r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        int $i0;
        org.apache.xml.dtm.DTM $r2;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r0 = new org.apache.xml.dtm.ref.DTMChildIterNodeList;

        $r2 = r1.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r1.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        specialinvoke $r0.<org.apache.xml.dtm.ref.DTMChildIterNodeList: void <init>(org.apache.xml.dtm.DTM,int)>($r2, $i0);

        return $r0;
    }

    public final org.w3c.dom.Node getFirstChild()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node $r3;
        int $i0, $i1, $i3;
        org.apache.xml.dtm.DTM $r1, $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i1 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getFirstChild(int)>($i0);

        $i3 = (int) -1;

        if $i1 != $i3 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i1);

     label2:
        return $r3;
    }

    public final org.w3c.dom.Node getLastChild()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node $r3;
        int $i0, $i1, $i3;
        org.apache.xml.dtm.DTM $r1, $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i1 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getLastChild(int)>($i0);

        $i3 = (int) -1;

        if $i1 != $i3 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i1);

     label2:
        return $r3;
    }

    public final org.w3c.dom.Node getPreviousSibling()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node $r3;
        int $i0, $i1, $i3;
        org.apache.xml.dtm.DTM $r1, $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i1 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getPreviousSibling(int)>($i0);

        $i3 = (int) -1;

        if $i1 != $i3 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i1);

     label2:
        return $r3;
    }

    public final org.w3c.dom.Node getNextSibling()
    {
        short $s1;
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node $r4;
        int $i0, $i2, $i3, $i4, $i6;
        org.apache.xml.dtm.DTM $r1, $r2, $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $s1 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: short getNodeType(int)>($i0);

        $i4 = (int) $s1;

        if $i4 != 2 goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: int getNextSibling(int)>($i2);

        $i6 = (int) -1;

        if $i3 != $i6 goto label2;

        $r4 = null;

        goto label3;

     label2:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r4 = interfaceinvoke $r3.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i3);

     label3:
        return $r4;
    }

    public final org.w3c.dom.NamedNodeMap getAttributes()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.apache.xml.dtm.ref.DTMNamedNodeMap $r0;
        int $i0;
        org.apache.xml.dtm.DTM $r2;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r0 = new org.apache.xml.dtm.ref.DTMNamedNodeMap;

        $r2 = r1.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r1.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        specialinvoke $r0.<org.apache.xml.dtm.ref.DTMNamedNodeMap: void <init>(org.apache.xml.dtm.DTM,int)>($r2, $i0);

        return $r0;
    }

    public boolean hasAttribute(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0, $i1, $i3;
        org.apache.xml.dtm.DTM $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i1 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: int getAttributeNode(int,java.lang.String,java.lang.String)>($i0, null, r1);

        $i3 = (int) -1;

        if $i3 == $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasAttributeNS(java.lang.String, java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0, $i1, $i3;
        org.apache.xml.dtm.DTM $r3;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i1 = interfaceinvoke $r3.<org.apache.xml.dtm.DTM: int getAttributeNode(int,java.lang.String,java.lang.String)>($i0, r1, r2);

        $i3 = (int) -1;

        if $i3 == $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final org.w3c.dom.Document getOwnerDocument()
    {
        org.w3c.dom.Document $r4;
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node $r3;
        int $i0, $i1;
        org.apache.xml.dtm.DTM $r1, $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i1 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getOwnerDocument(int)>($i0);

        $r3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i1);

        $r4 = (org.w3c.dom.Document) $r3;

        return $r4;
    }

    public final org.w3c.dom.Node insertBefore(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.w3c.dom.Node r2, r3;
        org.apache.xml.dtm.DTMDOMException $r0;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: org.w3c.dom.Node;

        r3 := @parameter1: org.w3c.dom.Node;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(7);

        throw $r0;
    }

    public final org.w3c.dom.Node replaceChild(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.w3c.dom.Node r2, r3;
        org.apache.xml.dtm.DTMDOMException $r0;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: org.w3c.dom.Node;

        r3 := @parameter1: org.w3c.dom.Node;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(7);

        throw $r0;
    }

    public final org.w3c.dom.Node removeChild(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.w3c.dom.Node r2;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: org.w3c.dom.Node;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(7);

        throw $r0;
    }

    public final org.w3c.dom.Node appendChild(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.w3c.dom.Node r2;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: org.w3c.dom.Node;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(7);

        throw $r0;
    }

    public final boolean hasChildNodes()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0, $i1, $i3;
        org.apache.xml.dtm.DTM $r1;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i1 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getFirstChild(int)>($i0);

        $i3 = (int) -1;

        if $i3 == $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final org.w3c.dom.Node cloneNode(boolean)
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        boolean z0;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        z0 := @parameter0: boolean;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.DocumentType getDoctype()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        return null;
    }

    public final org.w3c.dom.DOMImplementation getImplementation()
    {
        org.w3c.dom.DOMImplementation $r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r0 = <org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.DOMImplementation implementation>;

        return $r0;
    }

    public final org.w3c.dom.Element getDocumentElement()
    {
        short $s1;
        org.w3c.dom.Node $r7;
        int $i0, i2, i3, $i5, $i6, $i8, $i10, $i12, $i14, $i16;
        org.w3c.dom.Element $r8;
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.apache.xml.dtm.DTM $r1, $r2, $r3, $r4, $r5, $r6, $r10;
        org.apache.xml.dtm.DTMDOMException $r11;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getDocument()>();

        $i5 = (int) -1;

        i2 = $i5;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        i3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: int getFirstChild(int)>($i0);

        goto label7;

     label1:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $s1 = interfaceinvoke $r3.<org.apache.xml.dtm.DTM: short getNodeType(int)>(i3);

        $i6 = (int) $s1;

        tableswitch($i6)
        {
            case 1: goto label2;
            case 2: goto label5;
            case 3: goto label5;
            case 4: goto label5;
            case 5: goto label5;
            case 6: goto label5;
            case 7: goto label4;
            case 8: goto label4;
            case 9: goto label5;
            case 10: goto label4;
            default: goto label5;
        };

     label2:
        $i8 = (int) -1;

        if i2 == $i8 goto label3;

        $i10 = (int) -1;

        i2 = $i10;

        $r4 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        i3 = interfaceinvoke $r4.<org.apache.xml.dtm.DTM: int getLastChild(int)>($i0);

        goto label6;

     label3:
        i2 = i3;

        goto label6;

     label4:
        goto label6;

     label5:
        $i12 = (int) -1;

        i2 = $i12;

        $r5 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        i3 = interfaceinvoke $r5.<org.apache.xml.dtm.DTM: int getLastChild(int)>($i0);

     label6:
        $r10 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        i3 = interfaceinvoke $r10.<org.apache.xml.dtm.DTM: int getNextSibling(int)>(i3);

     label7:
        $i14 = (int) -1;

        if i3 != $i14 goto label1;

        $i16 = (int) -1;

        if i2 != $i16 goto label8;

        $r11 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r11.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r11;

     label8:
        $r6 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r7 = interfaceinvoke $r6.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>(i2);

        $r8 = (org.w3c.dom.Element) $r7;

        return $r8;
    }

    public final org.w3c.dom.Element createElement(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.DocumentFragment createDocumentFragment()
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.Text createTextNode(java.lang.String)
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.Comment createComment(java.lang.String)
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.CDATASection createCDATASection(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2, r3;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.Attr createAttribute(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.EntityReference createEntityReference(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.NodeList getElementsByTagName(java.lang.String)
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.Node importNode(org.w3c.dom.Node, boolean) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.w3c.dom.Node r2;
        org.apache.xml.dtm.DTMDOMException $r0;
        boolean z0;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: org.w3c.dom.Node;

        z0 := @parameter1: boolean;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(7);

        throw $r0;
    }

    public final org.w3c.dom.Element createElementNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2, r3;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.Attr createAttributeNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2, r3;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String, java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2, r3;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.Element getElementById(java.lang.String)
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.Text splitText(int) throws org.w3c.dom.DOMException
    {
        int i0;
        org.apache.xml.dtm.DTMDOMException $r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        i0 := @parameter0: int;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final java.lang.String getData() throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeValue(int)>($i0);

        return $r2;
    }

    public final void setData(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final int getLength()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0, $i1;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeValue(int)>($i0);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        return $i1;
    }

    public final java.lang.String substringData(int, int) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int i0, i1, $i2;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getData()>();

        $i2 = i0 + i1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i2);

        return $r2;
    }

    public final void appendData(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final void insertData(int, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        int i0;
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final void deleteData(int, int) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        int i0, i1;
        org.apache.xml.dtm.DTMDOMException $r0;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final void replaceData(int, int, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        int i0, i1;
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final java.lang.String getTagName()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeName(int)>($i0);

        return $r2;
    }

    public final java.lang.String getAttribute(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.w3c.dom.Node $r4;
        org.apache.xml.dtm.ref.DTMNamedNodeMap $r0;
        int $i0;
        org.apache.xml.dtm.DTM $r2;
        java.lang.String r3, $r5;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r3 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.ref.DTMNamedNodeMap;

        $r2 = r1.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r1.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        specialinvoke $r0.<org.apache.xml.dtm.ref.DTMNamedNodeMap: void <init>(org.apache.xml.dtm.DTM,int)>($r2, $i0);

        $r4 = virtualinvoke $r0.<org.apache.xml.dtm.ref.DTMNamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>(r3);

        if null != $r4 goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = interfaceinvoke $r4.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

     label2:
        return $r5;
    }

    public final void setAttribute(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2, r3;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final void removeAttribute(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.Attr getAttributeNode(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.w3c.dom.Node $r4;
        org.apache.xml.dtm.ref.DTMNamedNodeMap $r0;
        int $i0;
        org.apache.xml.dtm.DTM $r2;
        java.lang.String r3;
        org.w3c.dom.Attr $r5;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r3 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.ref.DTMNamedNodeMap;

        $r2 = r1.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r1.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        specialinvoke $r0.<org.apache.xml.dtm.ref.DTMNamedNodeMap: void <init>(org.apache.xml.dtm.DTM,int)>($r2, $i0);

        $r4 = virtualinvoke $r0.<org.apache.xml.dtm.ref.DTMNamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>(r3);

        $r5 = (org.w3c.dom.Attr) $r4;

        return $r5;
    }

    public final org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        org.w3c.dom.Attr r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: org.w3c.dom.Attr;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        org.w3c.dom.Attr r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: org.w3c.dom.Attr;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public boolean hasAttributes()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0, $i1, $i3;
        org.apache.xml.dtm.DTM $r1;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i1 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getFirstAttribute(int)>($i0);

        $i3 = (int) -1;

        if $i3 == $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final void normalize()
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final java.lang.String getAttributeNS(java.lang.String, java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNamedNodeMap $r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.w3c.dom.Node $r5;
        int $i0;
        org.apache.xml.dtm.DTM $r2;
        java.lang.String r3, r4, $r6;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r0 = new org.apache.xml.dtm.ref.DTMNamedNodeMap;

        $r2 = r1.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r1.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        specialinvoke $r0.<org.apache.xml.dtm.ref.DTMNamedNodeMap: void <init>(org.apache.xml.dtm.DTM,int)>($r2, $i0);

        $r5 = virtualinvoke $r0.<org.apache.xml.dtm.ref.DTMNamedNodeMap: org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)>(r3, r4);

        if null != $r5 goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r6 = interfaceinvoke $r5.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

     label2:
        return $r6;
    }

    public final void setAttributeNS(java.lang.String, java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2, r3, r4;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final void removeAttributeNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2, r3;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.Attr getAttributeNodeNS(java.lang.String, java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2, r3;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        org.w3c.dom.Attr r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: org.w3c.dom.Attr;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final java.lang.String getName()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeName(int)>($i0);

        return $r2;
    }

    public final boolean getSpecified()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        return 1;
    }

    public final java.lang.String getValue()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeValue(int)>($i0);

        return $r2;
    }

    public final void setValue(java.lang.String)
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public final org.w3c.dom.Element getOwnerElement()
    {
        short $s0;
        org.w3c.dom.Element $r4;
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node $r3;
        int $i1, $i2, $i3, $i5;
        org.apache.xml.dtm.DTM $r1, $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $s0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: short getNodeType()>();

        $i3 = (int) $s0;

        if $i3 == 2 goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getParent(int)>($i1);

        $i5 = (int) -1;

        if $i2 != $i5 goto label2;

        $r4 = null;

        goto label3;

     label2:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i2);

        $r4 = (org.w3c.dom.Element) $r3;

     label3:
        return $r4;
    }

    public org.w3c.dom.Node adoptNode(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        org.w3c.dom.Node r2;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: org.w3c.dom.Node;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public java.lang.String getEncoding()
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public void setEncoding(java.lang.String)
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public boolean getStandalone()
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public void setStandalone(boolean)
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        boolean z0;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        z0 := @parameter0: boolean;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public boolean getStrictErrorChecking()
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public void setStrictErrorChecking(boolean)
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;
        boolean z0;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        z0 := @parameter0: boolean;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public java.lang.String getVersion()
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    public void setVersion(java.lang.String)
    {
        org.apache.xml.dtm.DTMDOMException $r0;
        java.lang.String r2;
        org.apache.xml.dtm.ref.DTMNodeProxy r1;

        r1 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r0.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r0;
    }

    static void <clinit>()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy$DTMNodeProxyImplementation $r0;

        $r0 = new org.apache.xml.dtm.ref.DTMNodeProxy$DTMNodeProxyImplementation;

        specialinvoke $r0.<org.apache.xml.dtm.ref.DTMNodeProxy$DTMNodeProxyImplementation: void <init>()>();

        <org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.DOMImplementation implementation> = $r0;

        return;
    }
}
