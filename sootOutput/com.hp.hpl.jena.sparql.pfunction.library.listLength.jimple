public class com.hp.hpl.jena.sparql.pfunction.library.listLength extends com.hp.hpl.jena.sparql.pfunction.library.ListBase1
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.pfunction.library.listLength r0;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.library.listLength;

        specialinvoke r0.<com.hp.hpl.jena.sparql.pfunction.library.ListBase1: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.sparql.engine.QueryIterator execOneList(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.graph.Node r2, r3, r10;
        com.hp.hpl.jena.sparql.core.Var $r7;
        com.hp.hpl.jena.sparql.pfunction.library.listLength r4;
        com.hp.hpl.jena.sparql.engine.binding.Binding r5;
        com.hp.hpl.jena.sparql.ARQInternalErrorException $r9;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r0;
        com.hp.hpl.jena.graph.Graph $r1;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r6, $r8;
        boolean $z0, $z1;

        r4 := @this: com.hp.hpl.jena.sparql.pfunction.library.listLength;

        r5 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r10 := @parameter2: com.hp.hpl.jena.graph.Node;

        r3 := @parameter3: com.hp.hpl.jena.graph.Node;

        r0 := @parameter4: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.graph.Graph getActiveGraph()>();

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: boolean isVar(com.hp.hpl.jena.graph.Node)>(r2);

        if $z0 == 0 goto label1;

        $r9 = new com.hp.hpl.jena.sparql.ARQInternalErrorException;

        specialinvoke $r9.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void <init>(java.lang.String)>("listLength: Subject is a variable");

        throw $r9;

     label1:
        $z1 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: boolean isVar(com.hp.hpl.jena.graph.Node)>(r3);

        if $z1 == 0 goto label2;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(com.hp.hpl.jena.graph.Node)>(r3);

        $r8 = specialinvoke r4.<com.hp.hpl.jena.sparql.pfunction.library.listLength: com.hp.hpl.jena.sparql.engine.QueryIterator length(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r5, $r1, r2, $r7, r0);

        return $r8;

     label2:
        $r6 = specialinvoke r4.<com.hp.hpl.jena.sparql.pfunction.library.listLength: com.hp.hpl.jena.sparql.engine.QueryIterator verify(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r5, $r1, r2, r3, r0);

        return $r6;
    }

    private com.hp.hpl.jena.sparql.engine.QueryIterator length(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.core.Var, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.graph.Node r2, $r3;
        com.hp.hpl.jena.sparql.core.Var r5;
        com.hp.hpl.jena.sparql.pfunction.library.listLength r9;
        com.hp.hpl.jena.sparql.util.graph.GNode $r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r4;
        int $i0;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r6;
        com.hp.hpl.jena.graph.Graph r1;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r7, $r8;

        r9 := @this: com.hp.hpl.jena.sparql.pfunction.library.listLength;

        r4 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r1 := @parameter1: com.hp.hpl.jena.graph.Graph;

        r2 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.sparql.core.Var;

        r6 := @parameter4: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $r0 = new com.hp.hpl.jena.sparql.util.graph.GNode;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.util.graph.GNode: void <init>(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node)>(r1, r2);

        $i0 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphList: int length(com.hp.hpl.jena.sparql.util.graph.GNode)>($r0);

        if $i0 >= 0 goto label1;

        $r8 = staticinvoke <com.hp.hpl.jena.sparql.util.IterLib: com.hp.hpl.jena.sparql.engine.QueryIterator noResults(com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r6);

        return $r8;

     label1:
        $r3 = staticinvoke <com.hp.hpl.jena.sparql.util.NodeFactoryExtra: com.hp.hpl.jena.graph.Node intToNode(int)>($i0);

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.util.IterLib: com.hp.hpl.jena.sparql.engine.QueryIterator oneResult(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r4, r5, $r3, r6);

        return $r7;
    }

    private com.hp.hpl.jena.sparql.engine.QueryIterator verify(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.graph.Node r2, r3;
        com.hp.hpl.jena.sparql.pfunction.library.listLength r8;
        com.hp.hpl.jena.sparql.util.graph.GNode $r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r6;
        int $i0, $i1;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r4;
        com.hp.hpl.jena.graph.Graph r1;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r5, $r7;

        r8 := @this: com.hp.hpl.jena.sparql.pfunction.library.listLength;

        r6 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r1 := @parameter1: com.hp.hpl.jena.graph.Graph;

        r2 := @parameter2: com.hp.hpl.jena.graph.Node;

        r3 := @parameter3: com.hp.hpl.jena.graph.Node;

        r4 := @parameter4: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $r0 = new com.hp.hpl.jena.sparql.util.graph.GNode;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.util.graph.GNode: void <init>(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node)>(r1, r2);

        $i0 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphList: int length(com.hp.hpl.jena.sparql.util.graph.GNode)>($r0);

        $i1 = staticinvoke <com.hp.hpl.jena.sparql.util.NodeFactoryExtra: int nodeToInt(com.hp.hpl.jena.graph.Node)>(r3);

        if $i0 != $i1 goto label1;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.util.IterLib: com.hp.hpl.jena.sparql.engine.QueryIterator result(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r6, r4);

        return $r7;

     label1:
        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.IterLib: com.hp.hpl.jena.sparql.engine.QueryIterator noResults(com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r4);

        return $r5;
    }

    protected com.hp.hpl.jena.sparql.engine.QueryIterator execObjectBound(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.core.Var, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.graph.Node r5, r8;
        com.hp.hpl.jena.sparql.core.Var r4, $r6;
        com.hp.hpl.jena.sparql.pfunction.library.listLength r2;
        com.hp.hpl.jena.sparql.engine.binding.Binding r3;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r0;
        com.hp.hpl.jena.graph.Graph $r1;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r7;

        r2 := @this: com.hp.hpl.jena.sparql.pfunction.library.listLength;

        r3 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r4 := @parameter1: com.hp.hpl.jena.sparql.core.Var;

        r8 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.graph.Node;

        r0 := @parameter4: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.graph.Graph getActiveGraph()>();

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(com.hp.hpl.jena.graph.Node)>(r5);

        $r7 = specialinvoke r2.<com.hp.hpl.jena.sparql.pfunction.library.listLength: com.hp.hpl.jena.sparql.engine.QueryIterator length(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r3, $r1, r4, $r6, r0);

        return $r7;
    }
}
