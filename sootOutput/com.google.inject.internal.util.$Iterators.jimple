public final class com.google.inject.internal.util.$Iterators extends java.lang.Object
{
    static final java.util.Iterator EMPTY_ITERATOR;
    private static final java.util.ListIterator EMPTY_LIST_ITERATOR;

    private void <init>()
    {
        com.google.inject.internal.util.$Iterators r0;

        r0 := @this: com.google.inject.internal.util.$Iterators;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.inject.internal.util.$UnmodifiableIterator emptyIterator()
    {
        java.util.Iterator $r0;
        com.google.inject.internal.util.$UnmodifiableIterator $r1;

        $r0 = <com.google.inject.internal.util.$Iterators: java.util.Iterator EMPTY_ITERATOR>;

        $r1 = (com.google.inject.internal.util.$UnmodifiableIterator) $r0;

        return $r1;
    }

    public static java.util.ListIterator emptyListIterator()
    {
        java.util.ListIterator $r0;

        $r0 = <com.google.inject.internal.util.$Iterators: java.util.ListIterator EMPTY_LIST_ITERATOR>;

        return $r0;
    }

    public static com.google.inject.internal.util.$UnmodifiableIterator unmodifiableIterator(java.util.Iterator)
    {
        java.util.Iterator r0;
        com.google.inject.internal.util.$Iterators$3 $r1;

        r0 := @parameter0: java.util.Iterator;

        staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r1 = new com.google.inject.internal.util.$Iterators$3;

        specialinvoke $r1.<com.google.inject.internal.util.$Iterators$3: void <init>(java.util.Iterator)>(r0);

        return $r1;
    }

    public static java.lang.String toString(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r6;
        java.lang.Object $r3, $r7;
        java.lang.String $r5;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.Iterator;

        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return "[]";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r3 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

     label2:
        $z1 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r7 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        goto label2;

     label3:
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.Object getOnlyElement(java.util.Iterator)
    {
        int i0;
        java.lang.String $r6, $r8, $r13;
        boolean $z0, $z1, $z2;
        java.util.Iterator r0;
        java.lang.IllegalArgumentException $r7;
        java.lang.Object $r1, $r11;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r9, $r10, $r12;

        r0 := @parameter0: java.util.Iterator;

        $r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected one element but was: <");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        i0 = 0;

     label2:
        if i0 >= 4 goto label3;

        $z2 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r11 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        i0 = i0 + 1;

        goto label2;

     label3:
        $z1 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ...");

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public static java.util.Iterator concat(java.util.Iterator)
    {
        java.util.Iterator r0;
        com.google.inject.internal.util.$Iterators$4 $r1;

        r0 := @parameter0: java.util.Iterator;

        staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r1 = new com.google.inject.internal.util.$Iterators$4;

        specialinvoke $r1.<com.google.inject.internal.util.$Iterators$4: void <init>(java.util.Iterator)>(r0);

        return $r1;
    }

    public static java.util.Iterator transform(java.util.Iterator, com.google.inject.internal.util.$Function)
    {
        com.google.inject.internal.util.$Function r1;
        java.util.Iterator r0;
        com.google.inject.internal.util.$Iterators$5 $r2;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: com.google.inject.internal.util.$Function;

        staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r2 = new com.google.inject.internal.util.$Iterators$5;

        specialinvoke $r2.<com.google.inject.internal.util.$Iterators$5: void <init>(java.util.Iterator,com.google.inject.internal.util.$Function)>(r0, r1);

        return $r2;
    }

    public static transient com.google.inject.internal.util.$UnmodifiableIterator forArray(java.lang.Object[])
    {
        java.lang.Object[] r1;
        com.google.inject.internal.util.$Iterators$6 $r0;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new com.google.inject.internal.util.$Iterators$6;

        specialinvoke $r0.<com.google.inject.internal.util.$Iterators$6: void <init>(java.lang.Object[])>(r1);

        return $r0;
    }

    public static com.google.inject.internal.util.$UnmodifiableIterator forArray(java.lang.Object[], int, int)
    {
        java.lang.Object[] r0;
        com.google.inject.internal.util.$Iterators$7 $r1;
        int i0, i1, $i2, $i3;
        boolean $z0;

        r0 := @parameter0: java.lang.Object[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkArgument(boolean)>($z0);

        $i3 = i1 + i0;

        $i2 = lengthof r0;

        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkPositionIndexes(int,int,int)>(i1, $i3, $i2);

        $r1 = new com.google.inject.internal.util.$Iterators$7;

        specialinvoke $r1.<com.google.inject.internal.util.$Iterators$7: void <init>(int,int,java.lang.Object[])>(i1, $i3, r0);

        return $r1;
    }

    public static com.google.inject.internal.util.$UnmodifiableIterator singletonIterator(java.lang.Object)
    {
        com.google.inject.internal.util.$Iterators$8 $r0;
        java.lang.Object r1;

        r1 := @parameter0: java.lang.Object;

        $r0 = new com.google.inject.internal.util.$Iterators$8;

        specialinvoke $r0.<com.google.inject.internal.util.$Iterators$8: void <init>(java.lang.Object)>(r1);

        return $r0;
    }

    public static java.util.Enumeration asEnumeration(java.util.Iterator)
    {
        com.google.inject.internal.util.$Iterators$9 $r1;
        java.util.Iterator r0;

        r0 := @parameter0: java.util.Iterator;

        staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r1 = new com.google.inject.internal.util.$Iterators$9;

        specialinvoke $r1.<com.google.inject.internal.util.$Iterators$9: void <init>(java.util.Iterator)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        com.google.inject.internal.util.$Iterators$2 $r1;
        com.google.inject.internal.util.$Iterators$1 $r0;

        $r0 = new com.google.inject.internal.util.$Iterators$1;

        specialinvoke $r0.<com.google.inject.internal.util.$Iterators$1: void <init>()>();

        <com.google.inject.internal.util.$Iterators: java.util.Iterator EMPTY_ITERATOR> = $r0;

        $r1 = new com.google.inject.internal.util.$Iterators$2;

        specialinvoke $r1.<com.google.inject.internal.util.$Iterators$2: void <init>()>();

        <com.google.inject.internal.util.$Iterators: java.util.ListIterator EMPTY_LIST_ITERATOR> = $r1;

        return;
    }
}
