class com.mycila.inject.internal.guava.collect.ImmutableMultimap$FieldSettersHolder extends java.lang.Object
{
    static final com.mycila.inject.internal.guava.collect.Serialization$FieldSetter MAP_FIELD_SETTER;
    static final com.mycila.inject.internal.guava.collect.Serialization$FieldSetter SIZE_FIELD_SETTER;

    void <init>()
    {
        com.mycila.inject.internal.guava.collect.ImmutableMultimap$FieldSettersHolder r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableMultimap$FieldSettersHolder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.guava.collect.Serialization$FieldSetter $r0, $r1;

        $r0 = staticinvoke <com.mycila.inject.internal.guava.collect.Serialization: com.mycila.inject.internal.guava.collect.Serialization$FieldSetter getFieldSetter(java.lang.Class,java.lang.String)>(class "Lcom/mycila/inject/internal/guava/collect/ImmutableMultimap;", "map");

        <com.mycila.inject.internal.guava.collect.ImmutableMultimap$FieldSettersHolder: com.mycila.inject.internal.guava.collect.Serialization$FieldSetter MAP_FIELD_SETTER> = $r0;

        $r1 = staticinvoke <com.mycila.inject.internal.guava.collect.Serialization: com.mycila.inject.internal.guava.collect.Serialization$FieldSetter getFieldSetter(java.lang.Class,java.lang.String)>(class "Lcom/mycila/inject/internal/guava/collect/ImmutableMultimap;", "size");

        <com.mycila.inject.internal.guava.collect.ImmutableMultimap$FieldSettersHolder: com.mycila.inject.internal.guava.collect.Serialization$FieldSetter SIZE_FIELD_SETTER> = $r1;

        return;
    }
}
