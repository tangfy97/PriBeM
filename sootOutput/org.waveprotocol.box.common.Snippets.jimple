public final class org.waveprotocol.box.common.Snippets extends java.lang.Object
{

    public static java.lang.String collateTextForWavelet(org.waveprotocol.wave.model.wave.data.ReadableWaveletData)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.ArrayList $r0;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData r1;
        java.lang.Object $r5;
        org.waveprotocol.wave.model.wave.data.ReadableBlipData $r7;
        java.lang.String $r4, r6;
        boolean $z0;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.ReadableWaveletData;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: java.util.Set getDocumentIds()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = interfaceinvoke r1.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableBlipData getDocument(java.lang.String)>(r6);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        $r4 = staticinvoke <org.waveprotocol.box.common.Snippets: java.lang.String collateTextForDocuments(java.lang.Iterable)>($r0);

        return $r4;
    }

    public static java.lang.String collateTextForDocuments(java.lang.Iterable)
    {
        java.util.Iterator $r2;
        org.waveprotocol.wave.model.document.operation.DocInitialization $r7;
        java.lang.Iterable r1;
        java.util.ArrayList $r0;
        org.waveprotocol.wave.model.wave.data.DocumentOperationSink $r6;
        java.lang.Object $r4;
        org.waveprotocol.wave.model.wave.data.ReadableBlipData r5;
        java.lang.String $r3;
        boolean $z0;

        r1 := @parameter0: java.lang.Iterable;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.waveprotocol.wave.model.wave.data.ReadableBlipData) $r4;

        $r6 = interfaceinvoke r5.<org.waveprotocol.wave.model.wave.data.ReadableBlipData: org.waveprotocol.wave.model.wave.data.DocumentOperationSink getContent()>();

        $r7 = interfaceinvoke $r6.<org.waveprotocol.wave.model.wave.data.DocumentOperationSink: org.waveprotocol.wave.model.document.operation.DocInitialization asOperation()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        $r3 = staticinvoke <org.waveprotocol.box.common.Snippets: java.lang.String collateTextForOps(java.lang.Iterable)>($r0);

        return $r3;
    }

    public static java.lang.String collateTextForOps(java.lang.Iterable)
    {
        java.util.Iterator $r2;
        org.waveprotocol.box.common.Snippets$1 $r7;
        org.waveprotocol.wave.model.document.operation.DocOpCursor $r8;
        org.waveprotocol.wave.model.document.operation.DocOp r6;
        java.lang.Iterable r1;
        java.lang.StringBuilder $r0;
        java.lang.Object $r5;
        java.lang.String $r3, $r4;
        boolean $z0;

        r1 := @parameter0: java.lang.Iterable;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.waveprotocol.wave.model.document.operation.DocOp) $r5;

        $r7 = new org.waveprotocol.box.common.Snippets$1;

        specialinvoke $r7.<org.waveprotocol.box.common.Snippets$1: void <init>(java.lang.StringBuilder)>($r0);

        $r8 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.InitializationCursorAdapter: org.waveprotocol.wave.model.document.operation.DocOpCursor adapt(org.waveprotocol.wave.model.document.operation.DocInitializationCursor)>($r7);

        interfaceinvoke r6.<org.waveprotocol.wave.model.document.operation.DocOp: void apply(org.waveprotocol.wave.model.document.operation.DocOpCursor)>($r8);

        goto label1;

     label2:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        return $r4;
    }

    public static java.lang.String renderSnippet(org.waveprotocol.wave.model.wave.data.ReadableWaveletData, int)
    {
        org.waveprotocol.box.common.Snippets$2 $r19;
        long $l2, l4;
        java.util.ArrayList $r7;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData r1;
        byte $b3;
        org.waveprotocol.wave.model.wave.data.DocumentOperationSink $r4;
        int i0, $i1, $i5;
        org.waveprotocol.wave.model.wave.data.ReadableBlipData $r16, r17;
        java.lang.String $r8, $r11, $r12, $r13, r15;
        boolean $z0;
        java.util.Iterator $r3;
        org.waveprotocol.wave.model.document.operation.DocOpCursor $r10;
        java.util.Set $r2;
        org.waveprotocol.wave.model.document.operation.DocInitialization $r5;
        java.lang.Object $r14;
        java.lang.StringBuilder $r18;
        org.waveprotocol.wave.model.document.operation.DocOp[] $r6;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.ReadableWaveletData;

        i0 := @parameter1: int;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: java.util.Set getDocumentIds()>();

        l4 = -1L;

        r17 = null;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r14 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.String) $r14;

        $r16 = interfaceinvoke r1.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableBlipData getDocument(java.lang.String)>(r15);

        $l2 = interfaceinvoke $r16.<org.waveprotocol.wave.model.wave.data.ReadableBlipData: long getLastModifiedTime()>();

        $b3 = $l2 cmp l4;

        $i5 = (int) $b3;

        if $i5 <= 0 goto label2;

        l4 = $l2;

        r17 = $r16;

     label2:
        goto label1;

     label3:
        if r17 != null goto label4;

        $r13 = staticinvoke <org.waveprotocol.box.common.Snippets: java.lang.String collateTextForWavelet(org.waveprotocol.wave.model.wave.data.ReadableWaveletData)>(r1);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        goto label5;

     label4:
        $r4 = interfaceinvoke r17.<org.waveprotocol.wave.model.wave.data.ReadableBlipData: org.waveprotocol.wave.model.wave.data.DocumentOperationSink getContent()>();

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.model.wave.data.DocumentOperationSink: org.waveprotocol.wave.model.document.operation.DocInitialization asOperation()>();

        $r6 = newarray (org.waveprotocol.wave.model.document.operation.DocOp)[1];

        $r6[0] = $r5;

        $r7 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r6);

        $r8 = staticinvoke <org.waveprotocol.box.common.Snippets: java.lang.String collateTextForOps(java.lang.Iterable)>($r7);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r19 = new org.waveprotocol.box.common.Snippets$2;

        specialinvoke $r19.<org.waveprotocol.box.common.Snippets$2: void <init>(java.lang.StringBuilder,int,org.waveprotocol.wave.model.wave.data.ReadableWaveletData)>($r18, i0, r1);

        $r10 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.InitializationCursorAdapter: org.waveprotocol.wave.model.document.operation.DocOpCursor adapt(org.waveprotocol.wave.model.document.operation.DocInitializationCursor)>($r19);

        interfaceinvoke $r5.<org.waveprotocol.wave.model.document.operation.DocOp: void apply(org.waveprotocol.wave.model.document.operation.DocOpCursor)>($r10);

     label5:
        $i1 = virtualinvoke $r18.<java.lang.StringBuilder: int length()>();

        if $i1 <= i0 goto label6;

        $r12 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String substring(int,int)>(0, i0);

        return $r12;

     label6:
        $r11 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    private void <init>()
    {
        org.waveprotocol.box.common.Snippets r0;

        r0 := @this: org.waveprotocol.box.common.Snippets;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
}
