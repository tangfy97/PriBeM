public class org.json.CDL extends java.lang.Object
{

    public void <init>()
    {
        org.json.CDL r0;

        r0 := @this: org.json.CDL;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String getValue(org.json.JSONTokener) throws org.json.JSONException
    {
        org.json.JSONTokener r0;
        int $i1, $i2;
        char $c0;
        java.lang.String $r1, $r2;

        r0 := @parameter0: org.json.JSONTokener;

     label1:
        $c0 = virtualinvoke r0.<org.json.JSONTokener: char next()>();

        $i1 = (int) $c0;

        if $i1 > 32 goto label2;

        if $c0 != 0 goto label1;

     label2:
        $i2 = (int) $c0;

        lookupswitch($i2)
        {
            case 0: goto label3;
            case 34: goto label4;
            case 39: goto label4;
            case 44: goto label5;
            default: goto label6;
        };

     label3:
        return null;

     label4:
        $r1 = virtualinvoke r0.<org.json.JSONTokener: java.lang.String nextString(char)>($c0);

        return $r1;

     label5:
        virtualinvoke r0.<org.json.JSONTokener: void back()>();

        return "";

     label6:
        virtualinvoke r0.<org.json.JSONTokener: void back()>();

        $r2 = virtualinvoke r0.<org.json.JSONTokener: java.lang.String nextTo(char)>(44);

        return $r2;
    }

    public static org.json.JSONArray rowToJSONArray(org.json.JSONTokener) throws org.json.JSONException
    {
        org.json.JSONException $r10;
        int $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r2, $r9;
        org.json.JSONTokener r1;
        char $c0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r12;
        org.json.JSONArray $r11;

        r1 := @parameter0: org.json.JSONTokener;

        $r11 = new org.json.JSONArray;

        specialinvoke $r11.<org.json.JSONArray: void <init>()>();

     label1:
        $r2 = staticinvoke <org.json.CDL: java.lang.String getValue(org.json.JSONTokener)>(r1);

        if $r2 != null goto label2;

        return null;

     label2:
        virtualinvoke $r11.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r2);

     label3:
        $c0 = virtualinvoke r1.<org.json.JSONTokener: char next()>();

        $i1 = (int) $c0;

        if $i1 != 44 goto label4;

        goto label8;

     label4:
        $i2 = (int) $c0;

        if $i2 == 32 goto label7;

        $i3 = (int) $c0;

        if $i3 == 10 goto label5;

        $i4 = (int) $c0;

        if $i4 == 13 goto label5;

        if $c0 != 0 goto label6;

     label5:
        return $r11;

     label6:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad character \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' (");

        $i5 = (int) $c0;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke r1.<org.json.JSONTokener: org.json.JSONException syntaxError(java.lang.String)>($r9);

        throw $r10;

     label7:
        goto label3;

     label8:
        goto label1;
    }

    public static org.json.JSONObject rowToJSONObject(org.json.JSONArray, org.json.JSONTokener) throws org.json.JSONException
    {
        org.json.JSONObject $r3;
        org.json.JSONTokener r0;
        org.json.JSONArray $r1, r2;

        r2 := @parameter0: org.json.JSONArray;

        r0 := @parameter1: org.json.JSONTokener;

        $r1 = staticinvoke <org.json.CDL: org.json.JSONArray rowToJSONArray(org.json.JSONTokener)>(r0);

        if $r1 == null goto label1;

        $r3 = virtualinvoke $r1.<org.json.JSONArray: org.json.JSONObject toJSONObject(org.json.JSONArray)>(r2);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public static org.json.JSONArray toJSONArray(java.lang.String) throws org.json.JSONException
    {
        org.json.JSONTokener $r0;
        java.lang.String r1;
        org.json.JSONArray $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.json.JSONTokener;

        specialinvoke $r0.<org.json.JSONTokener: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <org.json.CDL: org.json.JSONArray toJSONArray(org.json.JSONTokener)>($r0);

        return $r2;
    }

    public static org.json.JSONArray toJSONArray(org.json.JSONTokener) throws org.json.JSONException
    {
        org.json.JSONTokener r0;
        org.json.JSONArray $r1, $r2;

        r0 := @parameter0: org.json.JSONTokener;

        $r1 = staticinvoke <org.json.CDL: org.json.JSONArray rowToJSONArray(org.json.JSONTokener)>(r0);

        $r2 = staticinvoke <org.json.CDL: org.json.JSONArray toJSONArray(org.json.JSONArray,org.json.JSONTokener)>($r1, r0);

        return $r2;
    }

    public static org.json.JSONArray toJSONArray(org.json.JSONArray, java.lang.String) throws org.json.JSONException
    {
        org.json.JSONTokener $r1;
        java.lang.String r2;
        org.json.JSONArray r0, $r3;

        r0 := @parameter0: org.json.JSONArray;

        r2 := @parameter1: java.lang.String;

        $r1 = new org.json.JSONTokener;

        specialinvoke $r1.<org.json.JSONTokener: void <init>(java.lang.String)>(r2);

        $r3 = staticinvoke <org.json.CDL: org.json.JSONArray toJSONArray(org.json.JSONArray,org.json.JSONTokener)>(r0, $r1);

        return $r3;
    }

    public static org.json.JSONArray toJSONArray(org.json.JSONArray, org.json.JSONTokener) throws org.json.JSONException
    {
        org.json.JSONObject $r3;
        int $i0, $i1;
        org.json.JSONTokener r2;
        org.json.JSONArray r0, $r1;

        r0 := @parameter0: org.json.JSONArray;

        r2 := @parameter1: org.json.JSONTokener;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<org.json.JSONArray: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = new org.json.JSONArray;

        specialinvoke $r1.<org.json.JSONArray: void <init>()>();

     label3:
        $r3 = staticinvoke <org.json.CDL: org.json.JSONObject rowToJSONObject(org.json.JSONArray,org.json.JSONTokener)>(r0, r2);

        if $r3 != null goto label4;

        goto label5;

     label4:
        virtualinvoke $r1.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r3);

        goto label3;

     label5:
        $i1 = virtualinvoke $r1.<org.json.JSONArray: int length()>();

        if $i1 != 0 goto label6;

        return null;

     label6:
        return $r1;
    }

    public static java.lang.String rowToString(org.json.JSONArray)
    {
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r3;
        java.lang.String $r2, $r4;
        org.json.JSONArray r1;

        r1 := @parameter0: org.json.JSONArray;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i3 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.json.JSONArray: int length()>();

        if i3 >= $i0 goto label6;

        if i3 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label2:
        $r3 = virtualinvoke r1.<org.json.JSONArray: java.lang.Object opt(int)>(i3);

        if $r3 == null goto label5;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(44);

        if $i1 < 0 goto label4;

        $i2 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(34);

        if $i2 < 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        goto label5;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        goto label5;

     label4:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String toString(org.json.JSONArray) throws org.json.JSONException
    {
        org.json.JSONObject $r1;
        java.lang.StringBuilder $r3, $r5, $r7;
        java.lang.String $r4, $r6, $r8;
        org.json.JSONArray r0, $r2;

        r0 := @parameter0: org.json.JSONArray;

        $r1 = virtualinvoke r0.<org.json.JSONArray: org.json.JSONObject optJSONObject(int)>(0);

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONArray names()>();

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <org.json.CDL: java.lang.String rowToString(org.json.JSONArray)>($r2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = staticinvoke <org.json.CDL: java.lang.String toString(org.json.JSONArray,org.json.JSONArray)>($r2, r0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label1:
        return null;
    }

    public static java.lang.String toString(org.json.JSONArray, org.json.JSONArray) throws org.json.JSONException
    {
        org.json.JSONObject $r4;
        java.lang.StringBuffer $r1;
        int $i0, $i1, i2;
        java.lang.String $r3, $r6;
        org.json.JSONArray r0, r2, $r5;

        r0 := @parameter0: org.json.JSONArray;

        r2 := @parameter1: org.json.JSONArray;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<org.json.JSONArray: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

     label3:
        $i1 = virtualinvoke r2.<org.json.JSONArray: int length()>();

        if i2 >= $i1 goto label5;

        $r4 = virtualinvoke r2.<org.json.JSONArray: org.json.JSONObject optJSONObject(int)>(i2);

        if $r4 == null goto label4;

        $r5 = virtualinvoke $r4.<org.json.JSONObject: org.json.JSONArray toJSONArray(org.json.JSONArray)>(r0);

        $r6 = staticinvoke <org.json.CDL: java.lang.String rowToString(org.json.JSONArray)>($r5);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }
}
