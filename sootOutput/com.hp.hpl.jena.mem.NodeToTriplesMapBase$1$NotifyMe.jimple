class com.hp.hpl.jena.mem.NodeToTriplesMapBase$1$NotifyMe extends java.lang.Object implements com.hp.hpl.jena.mem.HashCommon$NotifyEmpty
{
    final com.hp.hpl.jena.mem.NodeToTriplesMapBase$1 this$1;

    void <init>(com.hp.hpl.jena.mem.NodeToTriplesMapBase$1)
    {
        com.hp.hpl.jena.mem.NodeToTriplesMapBase$1$NotifyMe r0;
        com.hp.hpl.jena.mem.NodeToTriplesMapBase$1 r1;

        r0 := @this: com.hp.hpl.jena.mem.NodeToTriplesMapBase$1$NotifyMe;

        r1 := @parameter0: com.hp.hpl.jena.mem.NodeToTriplesMapBase$1;

        r0.<com.hp.hpl.jena.mem.NodeToTriplesMapBase$1$NotifyMe: com.hp.hpl.jena.mem.NodeToTriplesMapBase$1 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void emptied()
    {
        com.hp.hpl.jena.mem.NodeToTriplesMapBase$1$NotifyMe r0;
        java.util.Iterator $r2;
        com.hp.hpl.jena.mem.NodeToTriplesMapBase$1 $r1;

        r0 := @this: com.hp.hpl.jena.mem.NodeToTriplesMapBase$1$NotifyMe;

        $r1 = r0.<com.hp.hpl.jena.mem.NodeToTriplesMapBase$1$NotifyMe: com.hp.hpl.jena.mem.NodeToTriplesMapBase$1 this$1>;

        $r2 = $r1.<com.hp.hpl.jena.mem.NodeToTriplesMapBase$1: java.util.Iterator val$nodes>;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        return;
    }
}
