public class groovy.xml.MarkupBuilder extends groovy.util.BuilderSupport
{
    private groovy.util.IndentPrinter out;
    private boolean nospace;
    private int state;
    private boolean nodeIsEmpty;
    private boolean useDoubleQuotes;
    private boolean omitNullAttributes;
    private boolean omitEmptyAttributes;

    public void <init>()
    {
        groovy.xml.MarkupBuilder r0;
        groovy.util.IndentPrinter $r1;

        r0 := @this: groovy.xml.MarkupBuilder;

        $r1 = new groovy.util.IndentPrinter;

        specialinvoke $r1.<groovy.util.IndentPrinter: void <init>()>();

        specialinvoke r0.<groovy.xml.MarkupBuilder: void <init>(groovy.util.IndentPrinter)>($r1);

        return;
    }

    public void <init>(java.io.PrintWriter)
    {
        groovy.xml.MarkupBuilder r0;
        java.io.PrintWriter r2;
        groovy.util.IndentPrinter $r1;

        r0 := @this: groovy.xml.MarkupBuilder;

        r2 := @parameter0: java.io.PrintWriter;

        $r1 = new groovy.util.IndentPrinter;

        specialinvoke $r1.<groovy.util.IndentPrinter: void <init>(java.io.PrintWriter)>(r2);

        specialinvoke r0.<groovy.xml.MarkupBuilder: void <init>(groovy.util.IndentPrinter)>($r1);

        return;
    }

    public void <init>(java.io.Writer)
    {
        groovy.xml.MarkupBuilder r0;
        java.io.PrintWriter $r2;
        groovy.util.IndentPrinter $r1;
        java.io.Writer r3;

        r0 := @this: groovy.xml.MarkupBuilder;

        r3 := @parameter0: java.io.Writer;

        $r1 = new groovy.util.IndentPrinter;

        $r2 = new java.io.PrintWriter;

        specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.Writer)>(r3);

        specialinvoke $r1.<groovy.util.IndentPrinter: void <init>(java.io.PrintWriter)>($r2);

        specialinvoke r0.<groovy.xml.MarkupBuilder: void <init>(groovy.util.IndentPrinter)>($r1);

        return;
    }

    public void <init>(groovy.util.IndentPrinter)
    {
        groovy.xml.MarkupBuilder r0;
        groovy.util.IndentPrinter r1;

        r0 := @this: groovy.xml.MarkupBuilder;

        r1 := @parameter0: groovy.util.IndentPrinter;

        specialinvoke r0.<groovy.util.BuilderSupport: void <init>()>();

        r0.<groovy.xml.MarkupBuilder: boolean nodeIsEmpty> = 1;

        r0.<groovy.xml.MarkupBuilder: boolean useDoubleQuotes> = 0;

        r0.<groovy.xml.MarkupBuilder: boolean omitNullAttributes> = 0;

        r0.<groovy.xml.MarkupBuilder: boolean omitEmptyAttributes> = 0;

        r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out> = r1;

        return;
    }

    public boolean getDoubleQuotes()
    {
        groovy.xml.MarkupBuilder r0;
        boolean $z0;

        r0 := @this: groovy.xml.MarkupBuilder;

        $z0 = r0.<groovy.xml.MarkupBuilder: boolean useDoubleQuotes>;

        return $z0;
    }

    public void setDoubleQuotes(boolean)
    {
        groovy.xml.MarkupBuilder r0;
        boolean z0;

        r0 := @this: groovy.xml.MarkupBuilder;

        z0 := @parameter0: boolean;

        r0.<groovy.xml.MarkupBuilder: boolean useDoubleQuotes> = z0;

        return;
    }

    public boolean isOmitNullAttributes()
    {
        groovy.xml.MarkupBuilder r0;
        boolean $z0;

        r0 := @this: groovy.xml.MarkupBuilder;

        $z0 = r0.<groovy.xml.MarkupBuilder: boolean omitNullAttributes>;

        return $z0;
    }

    public void setOmitNullAttributes(boolean)
    {
        groovy.xml.MarkupBuilder r0;
        boolean z0;

        r0 := @this: groovy.xml.MarkupBuilder;

        z0 := @parameter0: boolean;

        r0.<groovy.xml.MarkupBuilder: boolean omitNullAttributes> = z0;

        return;
    }

    public boolean isOmitEmptyAttributes()
    {
        groovy.xml.MarkupBuilder r0;
        boolean $z0;

        r0 := @this: groovy.xml.MarkupBuilder;

        $z0 = r0.<groovy.xml.MarkupBuilder: boolean omitEmptyAttributes>;

        return $z0;
    }

    public void setOmitEmptyAttributes(boolean)
    {
        groovy.xml.MarkupBuilder r0;
        boolean z0;

        r0 := @this: groovy.xml.MarkupBuilder;

        z0 := @parameter0: boolean;

        r0.<groovy.xml.MarkupBuilder: boolean omitEmptyAttributes> = z0;

        return;
    }

    protected groovy.util.IndentPrinter getPrinter()
    {
        groovy.xml.MarkupBuilder r0;
        groovy.util.IndentPrinter $r1;

        r0 := @this: groovy.xml.MarkupBuilder;

        $r1 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        return $r1;
    }

    protected void setParent(java.lang.Object, java.lang.Object)
    {
        groovy.xml.MarkupBuilder r0;
        java.lang.Object r1, r2;

        r0 := @this: groovy.xml.MarkupBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    public java.lang.Object getMkp()
    {
        groovy.xml.MarkupBuilder r0;

        r0 := @this: groovy.xml.MarkupBuilder;

        return r0;
    }

    public void yield(java.lang.String)
    {
        groovy.xml.MarkupBuilder r0;
        java.lang.String r1;

        r0 := @this: groovy.xml.MarkupBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<groovy.xml.MarkupBuilder: void yield(java.lang.String,boolean)>(r1, 1);

        return;
    }

    public void yieldUnescaped(java.lang.String)
    {
        groovy.xml.MarkupBuilder r0;
        java.lang.String r1;

        r0 := @this: groovy.xml.MarkupBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<groovy.xml.MarkupBuilder: void yield(java.lang.String,boolean)>(r1, 0);

        return;
    }

    private void yield(java.lang.String, boolean)
    {
        groovy.util.IndentPrinter $r2, $r3;
        groovy.xml.MarkupBuilder r0;
        int $i0, $i1, $i2;
        java.lang.String r1, $r4;
        boolean z0;

        r0 := @this: groovy.xml.MarkupBuilder;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $i0 = r0.<groovy.xml.MarkupBuilder: int state>;

        if $i0 != 1 goto label1;

        r0.<groovy.xml.MarkupBuilder: int state> = 2;

        r0.<groovy.xml.MarkupBuilder: boolean nodeIsEmpty> = 0;

        $r3 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r3.<groovy.util.IndentPrinter: void print(java.lang.String)>(">");

     label1:
        $i1 = r0.<groovy.xml.MarkupBuilder: int state>;

        if $i1 == 2 goto label2;

        $i2 = r0.<groovy.xml.MarkupBuilder: int state>;

        if $i2 != 3 goto label5;

     label2:
        $r2 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        if z0 == 0 goto label3;

        $r4 = specialinvoke r0.<groovy.xml.MarkupBuilder: java.lang.String escapeElementContent(java.lang.String)>(r1);

        goto label4;

     label3:
        $r4 = r1;

     label4:
        virtualinvoke $r2.<groovy.util.IndentPrinter: void print(java.lang.String)>($r4);

     label5:
        return;
    }

    protected java.lang.Object createNode(java.lang.Object)
    {
        groovy.xml.MarkupBuilder r0;
        java.lang.Object r1, $r2;

        r0 := @this: groovy.xml.MarkupBuilder;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<groovy.xml.MarkupBuilder: java.lang.Object getName(java.lang.Object)>(r1);

        specialinvoke r0.<groovy.xml.MarkupBuilder: void toState(int,java.lang.Object)>(1, $r2);

        r0.<groovy.xml.MarkupBuilder: boolean nodeIsEmpty> = 1;

        return $r2;
    }

    protected java.lang.Object createNode(java.lang.Object, java.lang.Object)
    {
        groovy.util.IndentPrinter $r4, $r5;
        groovy.xml.MarkupBuilder r0;
        java.lang.Object r1, $r2, r3, $r8;
        java.lang.String $r6, $r7;

        r0 := @this: groovy.xml.MarkupBuilder;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r2 = specialinvoke r0.<groovy.xml.MarkupBuilder: java.lang.Object getName(java.lang.Object)>(r1);

        if r3 != null goto label1;

        $r8 = virtualinvoke r0.<groovy.xml.MarkupBuilder: java.lang.Object createNode(java.lang.Object)>($r2);

        return $r8;

     label1:
        specialinvoke r0.<groovy.xml.MarkupBuilder: void toState(int,java.lang.Object)>(2, $r2);

        r0.<groovy.xml.MarkupBuilder: boolean nodeIsEmpty> = 0;

        $r4 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r4.<groovy.util.IndentPrinter: void print(java.lang.String)>(">");

        $r5 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        $r6 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        $r7 = specialinvoke r0.<groovy.xml.MarkupBuilder: java.lang.String escapeElementContent(java.lang.String)>($r6);

        virtualinvoke $r5.<groovy.util.IndentPrinter: void print(java.lang.String)>($r7);

        return $r2;
    }

    protected java.lang.Object createNode(java.lang.Object, java.util.Map, java.lang.Object)
    {
        java.util.Map r3;
        int $i0;
        java.lang.String $r7, $r13, $r15, $r17, $r18, $r19, $r20;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Map$Entry r9;
        java.util.Iterator $r5;
        groovy.util.IndentPrinter $r11, $r14, $r16;
        java.util.Set $r4;
        groovy.xml.MarkupBuilder r0;
        java.lang.Object r1, $r2, r6, $r8, $r10, $r12;

        r0 := @this: groovy.xml.MarkupBuilder;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.util.Map;

        r6 := @parameter2: java.lang.Object;

        $r2 = specialinvoke r0.<groovy.xml.MarkupBuilder: java.lang.Object getName(java.lang.Object)>(r1);

        specialinvoke r0.<groovy.xml.MarkupBuilder: void toState(int,java.lang.Object)>(1, $r2);

        $r4 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r8 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r8;

        $r10 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r10 != null goto label02;

        $z5 = r0.<groovy.xml.MarkupBuilder: boolean omitNullAttributes>;

        if $z5 == 0 goto label02;

        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        z1 = $z6;

        if $r10 == null goto label04;

        $z4 = r0.<groovy.xml.MarkupBuilder: boolean omitEmptyAttributes>;

        if $z4 == 0 goto label04;

        $r17 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke $r17.<java.lang.String: int length()>();

        if $i0 != 0 goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        if z1 != 0 goto label12;

        if $z7 != 0 goto label12;

        $r11 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r11.<groovy.util.IndentPrinter: void print(java.lang.String)>(" ");

        $r12 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<groovy.xml.MarkupBuilder: void print(java.lang.Object)>($r13);

        $r14 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        $z2 = r0.<groovy.xml.MarkupBuilder: boolean useDoubleQuotes>;

        if $z2 == 0 goto label06;

        $r18 = "=\"";

        goto label07;

     label06:
        $r18 = "=\'";

     label07:
        virtualinvoke $r14.<groovy.util.IndentPrinter: void print(java.lang.String)>($r18);

        if $r10 != null goto label08;

        $r19 = "";

        goto label09;

     label08:
        $r15 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        $r19 = specialinvoke r0.<groovy.xml.MarkupBuilder: java.lang.String escapeAttributeValue(java.lang.String)>($r15);

     label09:
        virtualinvoke r0.<groovy.xml.MarkupBuilder: void print(java.lang.Object)>($r19);

        $r16 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        $z3 = r0.<groovy.xml.MarkupBuilder: boolean useDoubleQuotes>;

        if $z3 == 0 goto label10;

        $r20 = "\"";

        goto label11;

     label10:
        $r20 = "\'";

     label11:
        virtualinvoke $r16.<groovy.util.IndentPrinter: void print(java.lang.String)>($r20);

     label12:
        goto label01;

     label13:
        if r6 == null goto label14;

        $r7 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<groovy.xml.MarkupBuilder: void yield(java.lang.String)>($r7);

        goto label15;

     label14:
        r0.<groovy.xml.MarkupBuilder: boolean nodeIsEmpty> = 1;

     label15:
        return $r2;
    }

    protected java.lang.Object createNode(java.lang.Object, java.util.Map)
    {
        groovy.xml.MarkupBuilder r0;
        java.util.Map r2;
        java.lang.Object r1, $r3;

        r0 := @this: groovy.xml.MarkupBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Map;

        $r3 = virtualinvoke r0.<groovy.xml.MarkupBuilder: java.lang.Object createNode(java.lang.Object,java.util.Map,java.lang.Object)>(r1, r2, null);

        return $r3;
    }

    protected void nodeCompleted(java.lang.Object, java.lang.Object)
    {
        groovy.xml.MarkupBuilder r0;
        groovy.util.IndentPrinter $r2;
        java.lang.Object r1, r3;

        r0 := @this: groovy.xml.MarkupBuilder;

        r3 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<groovy.xml.MarkupBuilder: void toState(int,java.lang.Object)>(3, r1);

        $r2 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r2.<groovy.util.IndentPrinter: void flush()>();

        return;
    }

    protected void print(java.lang.Object)
    {
        groovy.xml.MarkupBuilder r0;
        groovy.util.IndentPrinter $r2;
        java.lang.Object r1;
        java.lang.String $r3;

        r0 := @this: groovy.xml.MarkupBuilder;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        if r1 != null goto label1;

        $r3 = "null";

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

     label2:
        virtualinvoke $r2.<groovy.util.IndentPrinter: void print(java.lang.String)>($r3);

        return;
    }

    protected java.lang.Object getName(java.lang.String)
    {
        groovy.xml.MarkupBuilder r0;
        java.lang.Object $r2;
        java.lang.String r1;

        r0 := @this: groovy.xml.MarkupBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<groovy.util.BuilderSupport: java.lang.Object getName(java.lang.String)>(r1);

        return $r2;
    }

    protected java.lang.String transformValue(java.lang.String)
    {
        groovy.xml.MarkupBuilder r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: groovy.xml.MarkupBuilder;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>(".*&.*");

        if $z0 == 0 goto label1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("&", "&amp;");

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>(".*\\\'.*");

        if $z1 == 0 goto label2;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\'", "&apos;");

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>(".*<.*");

        if $z2 == 0 goto label3;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<", "&lt;");

     label3:
        $z3 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>(".*>.*");

        if $z3 == 0 goto label4;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(">", "&gt;");

     label4:
        return r1;
    }

    private java.lang.String escapeAttributeValue(java.lang.String)
    {
        groovy.xml.MarkupBuilder r0;
        java.lang.String r1, $r2;

        r0 := @this: groovy.xml.MarkupBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<groovy.xml.MarkupBuilder: java.lang.String escapeXmlValue(java.lang.String,boolean)>(r1, 1);

        return $r2;
    }

    private java.lang.String escapeElementContent(java.lang.String)
    {
        groovy.xml.MarkupBuilder r0;
        java.lang.String r1, $r2;

        r0 := @this: groovy.xml.MarkupBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<groovy.xml.MarkupBuilder: java.lang.String escapeXmlValue(java.lang.String,boolean)>(r1, 0);

        return $r2;
    }

    private java.lang.String escapeXmlValue(java.lang.String, boolean)
    {
        java.lang.StringBuffer $r4;
        int $i1, $i2, $i3, $i4, $i5, i6, i7, $i8;
        java.lang.String r1, $r2;
        boolean z0, $z1, $z2;
        char $c0;
        groovy.xml.MarkupBuilder r3;

        r3 := @this: groovy.xml.MarkupBuilder;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>(r1);

        i6 = 0;

        i7 = virtualinvoke $r4.<java.lang.StringBuffer: int length()>();

     label1:
        if i6 >= i7 goto label8;

        $c0 = virtualinvoke $r4.<java.lang.StringBuffer: char charAt(int)>(i6);

        $i8 = (int) $c0;

        lookupswitch($i8)
        {
            case 34: goto label5;
            case 38: goto label2;
            case 39: goto label6;
            case 60: goto label3;
            case 62: goto label4;
            default: goto label7;
        };

     label2:
        $i4 = i6 + 1;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>(i6, $i4, "&amp;");

        i6 = i6 + 4;

        i7 = i7 + 4;

        goto label7;

     label3:
        $i2 = i6 + 1;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>(i6, $i2, "&lt;");

        i6 = i6 + 3;

        i7 = i7 + 3;

        goto label7;

     label4:
        $i1 = i6 + 1;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>(i6, $i1, "&gt;");

        i6 = i6 + 3;

        i7 = i7 + 3;

        goto label7;

     label5:
        if z0 == 0 goto label7;

        $z2 = r3.<groovy.xml.MarkupBuilder: boolean useDoubleQuotes>;

        if $z2 == 0 goto label7;

        $i5 = i6 + 1;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>(i6, $i5, "&quot;");

        i6 = i6 + 5;

        i7 = i7 + 5;

        goto label7;

     label6:
        if z0 == 0 goto label7;

        $z1 = r3.<groovy.xml.MarkupBuilder: boolean useDoubleQuotes>;

        if $z1 != 0 goto label7;

        $i3 = i6 + 1;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>(i6, $i3, "&apos;");

        i6 = i6 + 5;

        i7 = i7 + 5;

        goto label7;

     label7:
        i6 = i6 + 1;

        goto label1;

     label8:
        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private void toState(int, java.lang.Object)
    {
        java.lang.Error $r22;
        int $i0, i1;
        boolean $z0, $z1, $z2, $z3, $z4;
        groovy.util.IndentPrinter $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23;
        groovy.xml.MarkupBuilder r0;
        java.lang.Object r5;

        r0 := @this: groovy.xml.MarkupBuilder;

        i1 := @parameter0: int;

        r5 := @parameter1: java.lang.Object;

        $i0 = r0.<groovy.xml.MarkupBuilder: int state>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label05;
            case 2: goto label11;
            case 3: goto label16;
            default: goto label23;
        };

     label01:
        tableswitch(i1)
        {
            case 1: goto label02;
            case 2: goto label02;
            case 3: goto label03;
            default: goto label04;
        };

     label02:
        $r23 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r23.<groovy.util.IndentPrinter: void print(java.lang.String)>("<");

        virtualinvoke r0.<groovy.xml.MarkupBuilder: void print(java.lang.Object)>(r5);

        goto label04;

     label03:
        $r22 = new java.lang.Error;

        specialinvoke $r22.<java.lang.Error: void <init>()>();

        throw $r22;

     label04:
        goto label23;

     label05:
        tableswitch(i1)
        {
            case 1: goto label06;
            case 2: goto label06;
            case 3: goto label09;
            default: goto label10;
        };

     label06:
        $r17 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r17.<groovy.util.IndentPrinter: void print(java.lang.String)>(">");

        $z4 = r0.<groovy.xml.MarkupBuilder: boolean nospace>;

        if $z4 == 0 goto label07;

        r0.<groovy.xml.MarkupBuilder: boolean nospace> = 0;

        goto label08;

     label07:
        $r18 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r18.<groovy.util.IndentPrinter: void println()>();

        $r19 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r19.<groovy.util.IndentPrinter: void incrementIndent()>();

        $r20 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r20.<groovy.util.IndentPrinter: void printIndent()>();

     label08:
        $r21 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r21.<groovy.util.IndentPrinter: void print(java.lang.String)>("<");

        virtualinvoke r0.<groovy.xml.MarkupBuilder: void print(java.lang.Object)>(r5);

        goto label10;

     label09:
        $z3 = r0.<groovy.xml.MarkupBuilder: boolean nodeIsEmpty>;

        if $z3 == 0 goto label10;

        $r16 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r16.<groovy.util.IndentPrinter: void print(java.lang.String)>(" />");

     label10:
        goto label23;

     label11:
        tableswitch(i1)
        {
            case 1: goto label12;
            case 2: goto label12;
            case 3: goto label14;
            default: goto label15;
        };

     label12:
        $z2 = r0.<groovy.xml.MarkupBuilder: boolean nodeIsEmpty>;

        if $z2 != 0 goto label13;

        $r13 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r13.<groovy.util.IndentPrinter: void println()>();

        $r14 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r14.<groovy.util.IndentPrinter: void incrementIndent()>();

        $r15 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r15.<groovy.util.IndentPrinter: void printIndent()>();

     label13:
        $r12 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r12.<groovy.util.IndentPrinter: void print(java.lang.String)>("<");

        virtualinvoke r0.<groovy.xml.MarkupBuilder: void print(java.lang.Object)>(r5);

        goto label15;

     label14:
        $r10 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r10.<groovy.util.IndentPrinter: void print(java.lang.String)>("</");

        virtualinvoke r0.<groovy.xml.MarkupBuilder: void print(java.lang.Object)>(r5);

        $r11 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r11.<groovy.util.IndentPrinter: void print(java.lang.String)>(">");

     label15:
        goto label23;

     label16:
        tableswitch(i1)
        {
            case 1: goto label17;
            case 2: goto label17;
            case 3: goto label20;
            default: goto label23;
        };

     label17:
        $z1 = r0.<groovy.xml.MarkupBuilder: boolean nospace>;

        if $z1 == 0 goto label18;

        r0.<groovy.xml.MarkupBuilder: boolean nospace> = 0;

        goto label19;

     label18:
        $r7 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r7.<groovy.util.IndentPrinter: void println()>();

        $r8 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r8.<groovy.util.IndentPrinter: void printIndent()>();

     label19:
        $r9 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r9.<groovy.util.IndentPrinter: void print(java.lang.String)>("<");

        virtualinvoke r0.<groovy.xml.MarkupBuilder: void print(java.lang.Object)>(r5);

        goto label23;

     label20:
        $z0 = r0.<groovy.xml.MarkupBuilder: boolean nospace>;

        if $z0 == 0 goto label21;

        r0.<groovy.xml.MarkupBuilder: boolean nospace> = 0;

        goto label22;

     label21:
        $r1 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r1.<groovy.util.IndentPrinter: void println()>();

        $r2 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r2.<groovy.util.IndentPrinter: void decrementIndent()>();

        $r3 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r3.<groovy.util.IndentPrinter: void printIndent()>();

     label22:
        $r4 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r4.<groovy.util.IndentPrinter: void print(java.lang.String)>("</");

        virtualinvoke r0.<groovy.xml.MarkupBuilder: void print(java.lang.Object)>(r5);

        $r6 = r0.<groovy.xml.MarkupBuilder: groovy.util.IndentPrinter out>;

        virtualinvoke $r6.<groovy.util.IndentPrinter: void print(java.lang.String)>(">");

     label23:
        r0.<groovy.xml.MarkupBuilder: int state> = i1;

        return;
    }

    private java.lang.Object getName(java.lang.Object)
    {
        groovy.xml.MarkupBuilder r3;
        java.lang.Object r0;
        java.lang.String $r2;
        groovy.xml.QName $r1;
        boolean $z0;

        r3 := @this: groovy.xml.MarkupBuilder;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof groovy.xml.QName;

        if $z0 == 0 goto label1;

        $r1 = (groovy.xml.QName) r0;

        $r2 = virtualinvoke $r1.<groovy.xml.QName: java.lang.String getQualifiedName()>();

        return $r2;

     label1:
        return r0;
    }
}
