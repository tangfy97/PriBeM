public class com.hp.hpl.jena.sparql.function.library.date extends com.hp.hpl.jena.sparql.function.FunctionBase1
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.function.library.date r0;

        r0 := @this: com.hp.hpl.jena.sparql.function.library.date;

        specialinvoke r0.<com.hp.hpl.jena.sparql.function.FunctionBase1: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.sparql.expr.NodeValue exec(com.hp.hpl.jena.sparql.expr.NodeValue)
    {
        com.hp.hpl.jena.sparql.expr.NodeValue r0, $r7;
        com.hp.hpl.jena.sparql.expr.ExprEvalException $r13, $r22;
        java.lang.String $r1, $r5, $r12, $r17, $r21, $r26;
        boolean $z0, $z1;
        com.hp.hpl.jena.sparql.function.library.date r8;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype $r6;
        java.lang.StringBuilder $r2, $r3, $r4, $r9, $r10, $r11, $r14, $r15, $r16, $r18, $r19, $r20, $r23, $r24, $r25;

        r8 := @this: com.hp.hpl.jena.sparql.function.library.date;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.NodeValue;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: boolean isString()>();

        if $z0 != 0 goto label1;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("date: argument not a string: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r8, $r21);

        $r22 = new com.hp.hpl.jena.sparql.expr.ExprEvalException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("date: argument not a string: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<com.hp.hpl.jena.sparql.expr.ExprEvalException: void <init>(java.lang.String)>($r26);

        throw $r22;

     label1:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: java.lang.String getString()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean matches(java.lang.String)>("\\d{4}-\\d{2}-\\d{2}");

        if $z1 != 0 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("date: argument not in date format: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r8, $r12);

        $r13 = new com.hp.hpl.jena.sparql.expr.ExprEvalException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("date: argument not in date format: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<com.hp.hpl.jena.sparql.expr.ExprEvalException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("T00:00:00Z");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdateTime>;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.expr.NodeValue: com.hp.hpl.jena.sparql.expr.NodeValue makeNode(java.lang.String,com.hp.hpl.jena.datatypes.xsd.XSDDatatype)>($r5, $r6);

        return $r7;
    }
}
