class org.apache.lucene.codecs.DocValuesConsumer$6$1 extends java.lang.Object implements java.util.Iterator
{
    int readerUpto;
    int docIDUpto;
    int nextValue;
    org.apache.lucene.index.AtomicReader currentReader;
    org.apache.lucene.util.Bits currentLiveDocs;
    boolean nextIsSet;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.codecs.DocValuesConsumer$6 this$1;

    void <init>(org.apache.lucene.codecs.DocValuesConsumer$6)
    {
        org.apache.lucene.codecs.DocValuesConsumer$6$1 r0;
        int $i1;
        org.apache.lucene.codecs.DocValuesConsumer$6 r1;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$6$1;

        r1 := @parameter0: org.apache.lucene.codecs.DocValuesConsumer$6;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: org.apache.lucene.codecs.DocValuesConsumer$6 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int readerUpto> = $i1;

        return;
    }

    public boolean hasNext()
    {
        org.apache.lucene.codecs.DocValuesConsumer$6$1 r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$6$1;

        $z0 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: boolean nextIsSet>;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: boolean setNext()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void remove()
    {
        org.apache.lucene.codecs.DocValuesConsumer$6$1 r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.apache.lucene.codecs.DocValuesConsumer$6$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.Number next()
    {
        java.lang.AssertionError $r2;
        java.lang.Integer $r1;
        org.apache.lucene.codecs.DocValuesConsumer$6$1 r0;
        int $i0;
        java.util.NoSuchElementException $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$6$1;

        $z0 = virtualinvoke r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label1:
        $z1 = <org.apache.lucene.codecs.DocValuesConsumer$6$1: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: boolean nextIsSet>;

        if $z2 != 0 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: boolean nextIsSet> = 0;

        $i0 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int nextValue>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;
    }

    private boolean setNext()
    {
        byte $b19;
        boolean $z0;
        org.apache.lucene.index.AtomicReader[] $r3, $r5, $r16;
        org.apache.lucene.index.AtomicReader $r1, $r6, $r7, $r9;
        org.apache.lucene.index.SortedSetDocValues[] $r12;
        long $l18;
        org.apache.lucene.codecs.DocValuesConsumer$6$1 r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        org.apache.lucene.index.SortedSetDocValues $r14;
        org.apache.lucene.util.Bits $r8, $r10, $r13;
        org.apache.lucene.codecs.DocValuesConsumer$6 $r2, $r4, $r11, $r15;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$6$1;

     label1:
        $i16 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int readerUpto>;

        $r15 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: org.apache.lucene.codecs.DocValuesConsumer$6 this$1>;

        $r16 = $r15.<org.apache.lucene.codecs.DocValuesConsumer$6: org.apache.lucene.index.AtomicReader[] val$readers>;

        $i17 = lengthof $r16;

        if $i16 != $i17 goto label2;

        return 0;

     label2:
        $r1 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: org.apache.lucene.index.AtomicReader currentReader>;

        if $r1 == null goto label3;

        $i5 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int docIDUpto>;

        $r9 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: org.apache.lucene.index.AtomicReader currentReader>;

        $i6 = virtualinvoke $r9.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        if $i5 != $i6 goto label5;

     label3:
        $i0 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int readerUpto>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int readerUpto> = $i1;

        $i3 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int readerUpto>;

        $r2 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: org.apache.lucene.codecs.DocValuesConsumer$6 this$1>;

        $r3 = $r2.<org.apache.lucene.codecs.DocValuesConsumer$6: org.apache.lucene.index.AtomicReader[] val$readers>;

        $i2 = lengthof $r3;

        if $i3 >= $i2 goto label4;

        $r4 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: org.apache.lucene.codecs.DocValuesConsumer$6 this$1>;

        $r5 = $r4.<org.apache.lucene.codecs.DocValuesConsumer$6: org.apache.lucene.index.AtomicReader[] val$readers>;

        $i4 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int readerUpto>;

        $r6 = $r5[$i4];

        r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: org.apache.lucene.index.AtomicReader currentReader> = $r6;

        $r7 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: org.apache.lucene.index.AtomicReader currentReader>;

        $r8 = virtualinvoke $r7.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: org.apache.lucene.util.Bits currentLiveDocs> = $r8;

     label4:
        r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int docIDUpto> = 0;

        goto label1;

     label5:
        $r10 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: org.apache.lucene.util.Bits currentLiveDocs>;

        if $r10 == null goto label6;

        $r13 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: org.apache.lucene.util.Bits currentLiveDocs>;

        $i13 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int docIDUpto>;

        $z0 = interfaceinvoke $r13.<org.apache.lucene.util.Bits: boolean get(int)>($i13);

        if $z0 == 0 goto label9;

     label6:
        r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: boolean nextIsSet> = 1;

        $r11 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: org.apache.lucene.codecs.DocValuesConsumer$6 this$1>;

        $r12 = $r11.<org.apache.lucene.codecs.DocValuesConsumer$6: org.apache.lucene.index.SortedSetDocValues[] val$dvs>;

        $i7 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int readerUpto>;

        $r14 = $r12[$i7];

        $i8 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int docIDUpto>;

        virtualinvoke $r14.<org.apache.lucene.index.SortedSetDocValues: void setDocument(int)>($i8);

        r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int nextValue> = 0;

     label7:
        $l18 = virtualinvoke $r14.<org.apache.lucene.index.SortedSetDocValues: long nextOrd()>();

        $b19 = $l18 cmp -1L;

        if $b19 == 0 goto label8;

        $i11 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int nextValue>;

        $i12 = $i11 + 1;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int nextValue> = $i12;

        goto label7;

     label8:
        $i9 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int docIDUpto>;

        $i10 = $i9 + 1;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int docIDUpto> = $i10;

        return 1;

     label9:
        $i14 = r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int docIDUpto>;

        $i15 = $i14 + 1;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: int docIDUpto> = $i15;

        goto label1;
    }

    public volatile java.lang.Object next()
    {
        org.apache.lucene.codecs.DocValuesConsumer$6$1 r0;
        java.lang.Number $r1;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$6$1;

        $r1 = virtualinvoke r0.<org.apache.lucene.codecs.DocValuesConsumer$6$1: java.lang.Number next()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/DocValuesConsumer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.DocValuesConsumer$6$1: boolean $assertionsDisabled> = $z1;

        return;
    }
}
