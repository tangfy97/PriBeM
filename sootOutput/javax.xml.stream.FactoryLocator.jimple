class javax.xml.stream.FactoryLocator extends java.lang.Object
{

    void <init>()
    {
        javax.xml.stream.FactoryLocator r0;

        r0 := @this: javax.xml.stream.FactoryLocator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.Object locate(java.lang.String) throws javax.xml.stream.FactoryConfigurationError
    {
        java.lang.Object $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <javax.xml.stream.FactoryLocator: java.lang.Object locate(java.lang.String,java.lang.String)>(r0, null);

        return $r1;
    }

    static java.lang.Object locate(java.lang.String, java.lang.String) throws javax.xml.stream.FactoryConfigurationError
    {
        java.lang.Thread $r2;
        java.lang.Object $r4;
        java.lang.String r0, r1;
        java.lang.ClassLoader $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = virtualinvoke $r2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r4 = staticinvoke <javax.xml.stream.FactoryLocator: java.lang.Object locate(java.lang.String,java.lang.String,java.lang.ClassLoader)>(r0, r1, $r3);

        return $r4;
    }

    static java.lang.Object locate(java.lang.String, java.lang.String, java.lang.ClassLoader) throws javax.xml.stream.FactoryConfigurationError
    {
        boolean $z0, $z1;
        java.lang.Exception $r36, $r37, $r38;
        java.lang.ClassLoader r17;
        java.lang.StringBuffer $r2, $r4, $r6, $r7, $r9, $r10, $r13, $r14, $r15, $r21, $r22, $r23, $r24;
        java.lang.String r0, $r1, $r3, $r5, $r8, $r11, $r16, r18, $r25, $r28, $r29, $r33;
        java.util.Properties $r31;
        java.io.FileInputStream $r32;
        java.io.InputStreamReader $r27;
        java.io.File $r12;
        javax.xml.stream.FactoryConfigurationError $r20;
        java.lang.Object $r19, $r30, $r34, $r35;
        java.io.BufferedReader $r26;
        java.io.InputStream r39;

        r0 := @parameter0: java.lang.String;

        r18 := @parameter1: java.lang.String;

        r17 := @parameter2: java.lang.ClassLoader;

     label01:
        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);

        if $r1 == null goto label03;

        $r35 = staticinvoke <javax.xml.stream.FactoryLocator: java.lang.Object loadFactory(java.lang.String,java.lang.ClassLoader)>($r1, r17);

     label02:
        return $r35;

     label03:
        goto label05;

     label04:
        $r38 := @caughtexception;

     label05:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = <java.io.File: java.lang.String separator>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("lib");

        $r8 = <java.io.File: java.lang.String separator>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("stax.properties");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = new java.io.File;

        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r11);

        $z0 = virtualinvoke $r12.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label07;

        $r31 = new java.util.Properties;

        specialinvoke $r31.<java.util.Properties: void <init>()>();

        $r32 = new java.io.FileInputStream;

        specialinvoke $r32.<java.io.FileInputStream: void <init>(java.io.File)>($r12);

        virtualinvoke $r31.<java.util.Properties: void load(java.io.InputStream)>($r32);

        $r33 = virtualinvoke $r31.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0);

        $r34 = staticinvoke <javax.xml.stream.FactoryLocator: java.lang.Object loadFactory(java.lang.String,java.lang.ClassLoader)>($r33, r17);

     label06:
        return $r34;

     label07:
        goto label09;

     label08:
        $r37 := @caughtexception;

     label09:
        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("META-INF/services/");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

     label10:
        if r17 != null goto label11;

        r39 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>($r16);

        goto label12;

     label11:
        r39 = virtualinvoke r17.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r16);

     label12:
        if r39 == null goto label14;

        $r26 = new java.io.BufferedReader;

        $r27 = new java.io.InputStreamReader;

        specialinvoke $r27.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r39, "UTF-8");

        specialinvoke $r26.<java.io.BufferedReader: void <init>(java.io.Reader)>($r27);

        $r28 = virtualinvoke $r26.<java.io.BufferedReader: java.lang.String readLine()>();

        virtualinvoke $r26.<java.io.BufferedReader: void close()>();

        if $r28 == null goto label14;

        $r29 = "";

        $z1 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z1 != 0 goto label14;

        $r30 = staticinvoke <javax.xml.stream.FactoryLocator: java.lang.Object loadFactory(java.lang.String,java.lang.ClassLoader)>($r28, r17);

     label13:
        return $r30;

     label14:
        goto label16;

     label15:
        $r36 := @caughtexception;

     label16:
        if r18 != null goto label17;

        $r20 = new javax.xml.stream.FactoryConfigurationError;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to locate factory for ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<javax.xml.stream.FactoryConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r25, null);

        throw $r20;

     label17:
        $r19 = staticinvoke <javax.xml.stream.FactoryLocator: java.lang.Object loadFactory(java.lang.String,java.lang.ClassLoader)>(r18, r17);

        return $r19;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Exception from label05 to label06 with label08;
        catch java.lang.Exception from label10 to label13 with label15;
    }

    private static java.lang.Object loadFactory(java.lang.String, java.lang.ClassLoader) throws javax.xml.stream.FactoryConfigurationError
    {
        java.lang.StringBuffer $r5, $r6, $r7, $r8, $r9, $r13, $r14, $r15, $r16, $r18;
        java.lang.String r1, $r10, $r17, $r19;
        java.lang.Exception $r3;
        javax.xml.stream.FactoryConfigurationError $r4, $r12;
        java.lang.Object $r2;
        java.lang.ClassNotFoundException $r11;
        java.lang.Class $r20;
        java.lang.ClassLoader r0;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.ClassLoader;

     label1:
        if r0 != null goto label2;

        $r20 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

        goto label3;

     label2:
        $r20 = virtualinvoke r0.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);

     label3:
        $r2 = virtualinvoke $r20.<java.lang.Class: java.lang.Object newInstance()>();

     label4:
        return $r2;

     label5:
        $r11 := @caughtexception;

        $r12 = new javax.xml.stream.FactoryConfigurationError;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Requested factory ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" cannot be located.  Classloader =");

        $r17 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<javax.xml.stream.FactoryConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r19, $r11);

        throw $r12;

     label6:
        $r3 := @caughtexception;

        $r4 = new javax.xml.stream.FactoryConfigurationError;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Requested factory ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" could not be instantiated: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<javax.xml.stream.FactoryConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r10, $r3);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label4 with label5;
        catch java.lang.Exception from label1 to label4 with label6;
    }
}
