public final class org.apache.poi.hwpf.model.CHPFormattedDiskPage extends org.apache.poi.hwpf.model.FormattedDiskPage
{
    private static final int FC_SIZE;
    private java.util.ArrayList _chpxList;
    private java.util.ArrayList _overFlow;

    public void <init>()
    {
        org.apache.poi.hwpf.model.CHPFormattedDiskPage r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.poi.hwpf.model.CHPFormattedDiskPage;

        specialinvoke r0.<org.apache.poi.hwpf.model.FormattedDiskPage: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: java.util.ArrayList _chpxList> = $r1;

        return;
    }

    public void <init>(byte[], int, int, org.apache.poi.hwpf.model.TextPieceTable)
    {
        byte[] r1;
        org.apache.poi.hwpf.model.TextPieceTable r2;
        int i0, i1;
        org.apache.poi.hwpf.model.CHPFormattedDiskPage r0;

        r0 := @this: org.apache.poi.hwpf.model.CHPFormattedDiskPage;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: org.apache.poi.hwpf.model.TextPieceTable;

        specialinvoke r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: void <init>(byte[],int,org.apache.poi.hwpf.model.CharIndexTranslator)>(r1, i0, r2);

        return;
    }

    public void <init>(byte[], int, org.apache.poi.hwpf.model.CharIndexTranslator)
    {
        byte[] r1, $r8;
        int[][] $r4;
        org.apache.poi.hwpf.sprm.SprmBuffer $r7;
        org.apache.poi.hwpf.model.CHPX $r6;
        java.util.ArrayList $r2, $r9;
        int[] r5;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, i7, i8;
        org.apache.poi.hwpf.model.CHPFormattedDiskPage r0;
        org.apache.poi.hwpf.model.CharIndexTranslator r3;

        r0 := @this: org.apache.poi.hwpf.model.CHPFormattedDiskPage;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r3 := @parameter2: org.apache.poi.hwpf.model.CharIndexTranslator;

        specialinvoke r0.<org.apache.poi.hwpf.model.FormattedDiskPage: void <init>(byte[],int)>(r1, i0);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: java.util.ArrayList _chpxList> = $r2;

        i7 = 0;

     label1:
        $i1 = r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: int _crun>;

        if i7 >= $i1 goto label4;

        $i2 = virtualinvoke r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: int getStart(int)>(i7);

        $i3 = virtualinvoke r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: int getEnd(int)>(i7);

        $r4 = interfaceinvoke r3.<org.apache.poi.hwpf.model.CharIndexTranslator: int[][] getCharIndexRanges(int,int)>($i2, $i3);

        i4 = lengthof $r4;

        i8 = 0;

     label2:
        if i8 >= i4 goto label3;

        r5 = $r4[i8];

        $r6 = new org.apache.poi.hwpf.model.CHPX;

        $i5 = r5[0];

        $i6 = r5[1];

        $r7 = new org.apache.poi.hwpf.sprm.SprmBuffer;

        $r8 = virtualinvoke r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: byte[] getGrpprl(int)>(i7);

        specialinvoke $r7.<org.apache.poi.hwpf.sprm.SprmBuffer: void <init>(byte[],int)>($r8, 0);

        specialinvoke $r6.<org.apache.poi.hwpf.model.CHPX: void <init>(int,int,org.apache.poi.hwpf.sprm.SprmBuffer)>($i5, $i6, $r7);

        $r9 = r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: java.util.ArrayList _chpxList>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        i8 = i8 + 1;

        goto label2;

     label3:
        i7 = i7 + 1;

        goto label1;

     label4:
        return;
    }

    public org.apache.poi.hwpf.model.CHPX getCHPX(int)
    {
        int i0;
        org.apache.poi.hwpf.model.CHPX $r3;
        org.apache.poi.hwpf.model.CHPFormattedDiskPage r0;
        java.lang.Object $r2;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.poi.hwpf.model.CHPFormattedDiskPage;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: java.util.ArrayList _chpxList>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.poi.hwpf.model.CHPX) $r2;

        return $r3;
    }

    public java.util.List getCHPXs()
    {
        org.apache.poi.hwpf.model.CHPFormattedDiskPage r0;
        java.util.List $r2;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.poi.hwpf.model.CHPFormattedDiskPage;

        $r1 = r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: java.util.ArrayList _chpxList>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void fill(java.util.List)
    {
        org.apache.poi.hwpf.model.CHPFormattedDiskPage r0;
        java.util.List r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.poi.hwpf.model.CHPFormattedDiskPage;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: java.util.ArrayList _chpxList>;

        virtualinvoke $r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public java.util.ArrayList getOverflow()
    {
        org.apache.poi.hwpf.model.CHPFormattedDiskPage r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.poi.hwpf.model.CHPFormattedDiskPage;

        $r1 = r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: java.util.ArrayList _overFlow>;

        return $r1;
    }

    protected byte[] getGrpprl(int)
    {
        byte[] $r1, $r2, r3, $r4, $r5;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        org.apache.poi.hwpf.model.CHPFormattedDiskPage r0;

        r0 := @this: org.apache.poi.hwpf.model.CHPFormattedDiskPage;

        i2 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: byte[] _fkp>;

        $i5 = r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: int _offset>;

        $i0 = r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: int _crun>;

        $i1 = $i0 + 1;

        $i3 = $i1 * 4;

        $i4 = $i3 + i2;

        $i6 = $i5 + $i4;

        $i7 = staticinvoke <org.apache.poi.util.LittleEndian: int getUnsignedByte(byte[],int)>($r1, $i6);

        i13 = 2 * $i7;

        if i13 != 0 goto label1;

        $r5 = newarray (byte)[0];

        return $r5;

     label1:
        $r2 = r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: byte[] _fkp>;

        $i8 = r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: int _offset>;

        $i9 = $i8 + i13;

        $i10 = staticinvoke <org.apache.poi.util.LittleEndian: int getUnsignedByte(byte[],int)>($r2, $i9);

        r3 = newarray (byte)[$i10];

        $r4 = r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: byte[] _fkp>;

        $i11 = r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: int _offset>;

        i14 = i13 + 1;

        $i12 = $i11 + i14;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i12, r3, 0, $i10);

        return r3;
    }

    protected byte[] toByteArray(org.apache.poi.hwpf.model.CharIndexTranslator, int)
    {
        byte[] $r2;
        int i0;
        org.apache.poi.hwpf.model.CHPFormattedDiskPage r0;
        org.apache.poi.hwpf.model.CharIndexTranslator r1;

        r0 := @this: org.apache.poi.hwpf.model.CHPFormattedDiskPage;

        r1 := @parameter0: org.apache.poi.hwpf.model.CharIndexTranslator;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: byte[] toByteArray(org.apache.poi.hwpf.model.CharIndexTranslator)>(r1);

        return $r2;
    }

    protected byte[] toByteArray(org.apache.poi.hwpf.model.CharIndexTranslator)
    {
        byte[] r0, $r6, $r14;
        byte $b1, $b11, $b13;
        java.util.List $r10;
        org.apache.poi.hwpf.model.CharIndexTranslator r3;
        org.apache.poi.hwpf.model.CHPX $r13, r15;
        java.util.ArrayList $r2, $r4, $r7, $r8, $r9, $r11;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, i26, i27, i28;
        org.apache.poi.hwpf.model.CHPFormattedDiskPage r1;
        java.lang.Object $r5, $r12;

        r1 := @this: org.apache.poi.hwpf.model.CHPFormattedDiskPage;

        r3 := @parameter0: org.apache.poi.hwpf.model.CharIndexTranslator;

        r0 = newarray (byte)[512];

        $r2 = r1.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: java.util.ArrayList _chpxList>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i21 = 511;

        i22 = 0;

        i23 = 6;

        i24 = 0;

     label1:
        if i24 >= $i0 goto label4;

        $r11 = r1.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: java.util.ArrayList _chpxList>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i24);

        $r13 = (org.apache.poi.hwpf.model.CHPX) $r12;

        $r14 = virtualinvoke $r13.<org.apache.poi.hwpf.model.CHPX: byte[] getGrpprl()>();

        i25 = lengthof $r14;

        $i16 = 6 + i25;

        i23 = i23 + $i16;

        $i17 = i24 % 2;

        $i18 = 511 + $i17;

        if i23 <= $i18 goto label2;

        goto label4;

     label2:
        $i19 = 1 + i25;

        $i20 = $i19 % 2;

        if $i20 <= 0 goto label3;

        i23 = i23 + 1;

     label3:
        i24 = i24 + 1;

        goto label1;

     label4:
        if i24 == $i0 goto label5;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r1.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: java.util.ArrayList _overFlow> = $r7;

        $r9 = r1.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: java.util.ArrayList _overFlow>;

        $r8 = r1.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: java.util.ArrayList _chpxList>;

        $r10 = virtualinvoke $r8.<java.util.ArrayList: java.util.List subList(int,int)>(i24, $i0);

        virtualinvoke $r9.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r10);

     label5:
        $b1 = (byte) i24;

        r0[511] = $b1;

        $i2 = 4 * i24;

        i26 = $i2 + 4;

        r15 = null;

        i27 = 0;

     label6:
        if i27 >= i24 goto label7;

        $r4 = r1.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: java.util.ArrayList _chpxList>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i27);

        r15 = (org.apache.poi.hwpf.model.CHPX) $r5;

        $r6 = virtualinvoke r15.<org.apache.poi.hwpf.model.CHPX: byte[] getGrpprl()>();

        $i5 = virtualinvoke r15.<org.apache.poi.hwpf.model.CHPX: int getStart()>();

        $i6 = interfaceinvoke r3.<org.apache.poi.hwpf.model.CharIndexTranslator: int getByteIndex(int)>($i5);

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, i22, $i6);

        $i7 = lengthof $r6;

        $i8 = 1 + $i7;

        i28 = i21 - $i8;

        $i9 = i28 % 2;

        i21 = i28 - $i9;

        $i10 = i21 / 2;

        $b11 = (byte) $i10;

        r0[i26] = $b11;

        $i12 = lengthof $r6;

        $b13 = (byte) $i12;

        r0[i21] = $b13;

        $i15 = i21 + 1;

        $i14 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r0, $i15, $i14);

        i26 = i26 + 1;

        i22 = i22 + 4;

        i27 = i27 + 1;

        goto label6;

     label7:
        $i3 = virtualinvoke r15.<org.apache.poi.hwpf.model.CHPX: int getEnd()>();

        $i4 = interfaceinvoke r3.<org.apache.poi.hwpf.model.CharIndexTranslator: int getByteIndex(int)>($i3);

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, i22, $i4);

        return r0;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hwpf.model.CHPFormattedDiskPage: int FC_SIZE> = 4;

        return;
    }
}
