public class org.apache.batik.ext.awt.image.codec.util.SingleTileRenderedImage extends org.apache.batik.ext.awt.image.codec.util.SimpleRenderedImage
{
    java.awt.image.Raster ras;

    public void <init>(java.awt.image.Raster, java.awt.image.ColorModel)
    {
        java.awt.image.SampleModel $r2;
        java.awt.image.ColorModel r3;
        java.awt.image.Raster r1;
        int $i0, $i1, $i2, $i3;
        org.apache.batik.ext.awt.image.codec.util.SingleTileRenderedImage r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.SingleTileRenderedImage;

        r1 := @parameter0: java.awt.image.Raster;

        r3 := @parameter1: java.awt.image.ColorModel;

        specialinvoke r0.<org.apache.batik.ext.awt.image.codec.util.SimpleRenderedImage: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.codec.util.SingleTileRenderedImage: java.awt.image.Raster ras> = r1;

        $i0 = virtualinvoke r1.<java.awt.image.Raster: int getMinX()>();

        r0.<org.apache.batik.ext.awt.image.codec.util.SimpleRenderedImage: int minX> = $i0;

        r0.<org.apache.batik.ext.awt.image.codec.util.SimpleRenderedImage: int tileGridXOffset> = $i0;

        $i1 = virtualinvoke r1.<java.awt.image.Raster: int getMinY()>();

        r0.<org.apache.batik.ext.awt.image.codec.util.SimpleRenderedImage: int minY> = $i1;

        r0.<org.apache.batik.ext.awt.image.codec.util.SimpleRenderedImage: int tileGridYOffset> = $i1;

        $i2 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();

        r0.<org.apache.batik.ext.awt.image.codec.util.SimpleRenderedImage: int width> = $i2;

        r0.<org.apache.batik.ext.awt.image.codec.util.SimpleRenderedImage: int tileWidth> = $i2;

        $i3 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();

        r0.<org.apache.batik.ext.awt.image.codec.util.SimpleRenderedImage: int height> = $i3;

        r0.<org.apache.batik.ext.awt.image.codec.util.SimpleRenderedImage: int tileHeight> = $i3;

        $r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        r0.<org.apache.batik.ext.awt.image.codec.util.SimpleRenderedImage: java.awt.image.SampleModel sampleModel> = $r2;

        r0.<org.apache.batik.ext.awt.image.codec.util.SimpleRenderedImage: java.awt.image.ColorModel colorModel> = r3;

        return;
    }

    public java.awt.image.Raster getTile(int, int)
    {
        int i0, i1;
        java.awt.image.Raster $r3;
        org.apache.batik.ext.awt.image.codec.util.SingleTileRenderedImage r2;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r0;

        r2 := @this: org.apache.batik.ext.awt.image.codec.util.SingleTileRenderedImage;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 0 goto label1;

        if i1 == 0 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = staticinvoke <org.apache.batik.ext.awt.image.codec.util.PropertyUtil: java.lang.String getString(java.lang.String)>("SingleTileRenderedImage0");

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r0;

     label2:
        $r3 = r2.<org.apache.batik.ext.awt.image.codec.util.SingleTileRenderedImage: java.awt.image.Raster ras>;

        return $r3;
    }
}
