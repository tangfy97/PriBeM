class org.jivesoftware.whack.ExternalComponent$KeepAliveTask extends java.util.TimerTask
{
    final org.jivesoftware.whack.ExternalComponent this$0;

    private void <init>(org.jivesoftware.whack.ExternalComponent)
    {
        org.jivesoftware.whack.ExternalComponent$KeepAliveTask r0;
        org.jivesoftware.whack.ExternalComponent r1;

        r0 := @this: org.jivesoftware.whack.ExternalComponent$KeepAliveTask;

        r1 := @parameter0: org.jivesoftware.whack.ExternalComponent;

        r0.<org.jivesoftware.whack.ExternalComponent$KeepAliveTask: org.jivesoftware.whack.ExternalComponent this$0> = r1;

        specialinvoke r0.<java.util.TimerTask: void <init>()>();

        return;
    }

    public void run()
    {
        java.lang.Throwable $r8;
        org.jivesoftware.whack.ExternalComponentManager $r12;
        long $l0, $l1, $l2;
        org.xmpp.component.Log $r13;
        byte $b3;
        int $i4;
        boolean $z0;
        java.io.IOException $r10;
        org.jivesoftware.whack.ExternalComponent$KeepAliveTask r0;
        org.jivesoftware.whack.ExternalComponent $r1, $r3, $r4, $r6, $r11, $r14, $r15;
        java.lang.Exception $r9;
        java.io.Writer $r2, $r5, $r7;

        r0 := @this: org.jivesoftware.whack.ExternalComponent$KeepAliveTask;

        $r1 = r0.<org.jivesoftware.whack.ExternalComponent$KeepAliveTask: org.jivesoftware.whack.ExternalComponent this$0>;

        $r2 = staticinvoke <org.jivesoftware.whack.ExternalComponent: java.io.Writer access$600(org.jivesoftware.whack.ExternalComponent)>($r1);

        entermonitor $r2;

     label01:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = r0.<org.jivesoftware.whack.ExternalComponent$KeepAliveTask: org.jivesoftware.whack.ExternalComponent this$0>;

        $l1 = staticinvoke <org.jivesoftware.whack.ExternalComponent: long access$700(org.jivesoftware.whack.ExternalComponent)>($r3);

        $l2 = $l0 - $l1;

        $b3 = $l2 cmp 30000L;

        $i4 = (int) $b3;

        if $i4 < 0 goto label07;

     label02:
        $r4 = r0.<org.jivesoftware.whack.ExternalComponent$KeepAliveTask: org.jivesoftware.whack.ExternalComponent this$0>;

        $r5 = staticinvoke <org.jivesoftware.whack.ExternalComponent: java.io.Writer access$600(org.jivesoftware.whack.ExternalComponent)>($r4);

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>(" ");

        $r6 = r0.<org.jivesoftware.whack.ExternalComponent$KeepAliveTask: org.jivesoftware.whack.ExternalComponent this$0>;

        $r7 = staticinvoke <org.jivesoftware.whack.ExternalComponent: java.io.Writer access$600(org.jivesoftware.whack.ExternalComponent)>($r6);

        virtualinvoke $r7.<java.io.Writer: void flush()>();

     label03:
        goto label07;

     label04:
        $r10 := @caughtexception;

        $r11 = r0.<org.jivesoftware.whack.ExternalComponent$KeepAliveTask: org.jivesoftware.whack.ExternalComponent this$0>;

        $r12 = staticinvoke <org.jivesoftware.whack.ExternalComponent: org.jivesoftware.whack.ExternalComponentManager access$400(org.jivesoftware.whack.ExternalComponent)>($r11);

        $r13 = virtualinvoke $r12.<org.jivesoftware.whack.ExternalComponentManager: org.xmpp.component.Log getLog()>();

        interfaceinvoke $r13.<org.xmpp.component.Log: void error(java.lang.Throwable)>($r10);

        $r14 = r0.<org.jivesoftware.whack.ExternalComponent$KeepAliveTask: org.jivesoftware.whack.ExternalComponent this$0>;

        $z0 = staticinvoke <org.jivesoftware.whack.ExternalComponent: boolean access$800(org.jivesoftware.whack.ExternalComponent)>($r14);

        if $z0 != 0 goto label05;

        $r15 = r0.<org.jivesoftware.whack.ExternalComponent$KeepAliveTask: org.jivesoftware.whack.ExternalComponent this$0>;

        virtualinvoke $r15.<org.jivesoftware.whack.ExternalComponent: void connectionLost()>();

     label05:
        goto label07;

     label06:
        $r9 := @caughtexception;

     label07:
        exitmonitor $r2;

     label08:
        goto label11;

     label09:
        $r8 := @caughtexception;

        exitmonitor $r2;

     label10:
        throw $r8;

     label11:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Exception from label02 to label03 with label06;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    void <init>(org.jivesoftware.whack.ExternalComponent, org.jivesoftware.whack.ExternalComponent$1)
    {
        org.jivesoftware.whack.ExternalComponent$1 r2;
        org.jivesoftware.whack.ExternalComponent$KeepAliveTask r0;
        org.jivesoftware.whack.ExternalComponent r1;

        r0 := @this: org.jivesoftware.whack.ExternalComponent$KeepAliveTask;

        r1 := @parameter0: org.jivesoftware.whack.ExternalComponent;

        r2 := @parameter1: org.jivesoftware.whack.ExternalComponent$1;

        specialinvoke r0.<org.jivesoftware.whack.ExternalComponent$KeepAliveTask: void <init>(org.jivesoftware.whack.ExternalComponent)>(r1);

        return;
    }
}
