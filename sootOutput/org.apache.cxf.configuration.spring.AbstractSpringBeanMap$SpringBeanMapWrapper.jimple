class org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper extends java.util.concurrent.ConcurrentHashMap
{
    private static final long serialVersionUID;
    final org.apache.cxf.configuration.spring.AbstractSpringBeanMap this$0;

    private void <init>(org.apache.cxf.configuration.spring.AbstractSpringBeanMap)
    {
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper r0;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap r1;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper;

        r1 := @parameter0: org.apache.cxf.configuration.spring.AbstractSpringBeanMap;

        r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper: org.apache.cxf.configuration.spring.AbstractSpringBeanMap this$0> = r1;

        specialinvoke r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        return;
    }

    public void clear()
    {
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper r0;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap $r1;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper;

        $r1 = r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper: org.apache.cxf.configuration.spring.AbstractSpringBeanMap this$0>;

        virtualinvoke $r1.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void clear()>();

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper r0;
        java.lang.Object r1;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap $r2;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper: org.apache.cxf.configuration.spring.AbstractSpringBeanMap this$0>;

        $z0 = virtualinvoke $r2.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper r0;
        java.lang.Object r1;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap $r2;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper: org.apache.cxf.configuration.spring.AbstractSpringBeanMap this$0>;

        $z0 = virtualinvoke $r2.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Set entrySet()
    {
        java.util.Set $r2;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper r0;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap $r1;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper;

        $r1 = r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper: org.apache.cxf.configuration.spring.AbstractSpringBeanMap this$0>;

        $r2 = virtualinvoke $r1.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.util.Set entrySet()>();

        return $r2;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper r0;
        java.lang.Object r1, $r3;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap $r2;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper: org.apache.cxf.configuration.spring.AbstractSpringBeanMap this$0>;

        $r3 = virtualinvoke $r2.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public boolean isEmpty()
    {
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper r0;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper;

        $r1 = r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper: org.apache.cxf.configuration.spring.AbstractSpringBeanMap this$0>;

        $z0 = virtualinvoke $r1.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r2;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper r0;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap $r1;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper;

        $r1 = r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper: org.apache.cxf.configuration.spring.AbstractSpringBeanMap this$0>;

        $r2 = virtualinvoke $r1.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.util.Set keySet()>();

        return $r2;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper r0;
        java.lang.Object r1, r2, $r4;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap $r3;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper: org.apache.cxf.configuration.spring.AbstractSpringBeanMap this$0>;

        $r4 = virtualinvoke $r3.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r4;
    }

    public void putAll(java.util.Map)
    {
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper r0;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap $r2;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper: org.apache.cxf.configuration.spring.AbstractSpringBeanMap this$0>;

        virtualinvoke $r2.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void putAll(java.util.Map)>(r1);

        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper r0;
        java.lang.Object r1, $r3;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap $r2;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper: org.apache.cxf.configuration.spring.AbstractSpringBeanMap this$0>;

        $r3 = virtualinvoke $r2.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.lang.Object remove(java.lang.Object)>(r1);

        return $r3;
    }

    public int size()
    {
        int $i0;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper r0;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap $r1;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper;

        $r1 = r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper: org.apache.cxf.configuration.spring.AbstractSpringBeanMap this$0>;

        $i0 = virtualinvoke $r1.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: int size()>();

        return $i0;
    }

    public java.util.Collection values()
    {
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper r0;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap $r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper;

        $r1 = r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper: org.apache.cxf.configuration.spring.AbstractSpringBeanMap this$0>;

        $r2 = virtualinvoke $r1.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.util.Collection values()>();

        return $r2;
    }

    void <init>(org.apache.cxf.configuration.spring.AbstractSpringBeanMap, org.apache.cxf.configuration.spring.AbstractSpringBeanMap$1)
    {
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper r0;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap$1 r2;
        org.apache.cxf.configuration.spring.AbstractSpringBeanMap r1;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper;

        r1 := @parameter0: org.apache.cxf.configuration.spring.AbstractSpringBeanMap;

        r2 := @parameter1: org.apache.cxf.configuration.spring.AbstractSpringBeanMap$1;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper: void <init>(org.apache.cxf.configuration.spring.AbstractSpringBeanMap)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper: long serialVersionUID> = -8693455914470226111L;

        return;
    }
}
