final class com.google.inject.internal.ExposedKeyFactory extends java.lang.Object implements com.google.inject.internal.InternalFactory, com.google.inject.internal.CreationListener
{
    private final com.google.inject.Key key;
    private final com.google.inject.spi.PrivateElements privateElements;
    private com.google.inject.internal.BindingImpl delegate;

    void <init>(com.google.inject.Key, com.google.inject.spi.PrivateElements)
    {
        com.google.inject.Key r1;
        com.google.inject.spi.PrivateElements r2;
        com.google.inject.internal.ExposedKeyFactory r0;

        r0 := @this: com.google.inject.internal.ExposedKeyFactory;

        r1 := @parameter0: com.google.inject.Key;

        r2 := @parameter1: com.google.inject.spi.PrivateElements;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.internal.ExposedKeyFactory: com.google.inject.Key key> = r1;

        r0.<com.google.inject.internal.ExposedKeyFactory: com.google.inject.spi.PrivateElements privateElements> = r2;

        return;
    }

    public void notify(com.google.inject.internal.Errors)
    {
        com.google.inject.Key $r4, $r11;
        com.google.inject.Injector $r2;
        com.google.inject.internal.Errors r8, $r10;
        com.google.inject.internal.InjectorImpl r3;
        com.google.inject.internal.BindingImpl $r6;
        com.google.inject.internal.InternalFactory $r7;
        java.lang.Object $r9;
        com.google.inject.internal.State $r5;
        com.google.inject.spi.PrivateElements $r1;
        com.google.inject.internal.ExposedKeyFactory r0;

        r0 := @this: com.google.inject.internal.ExposedKeyFactory;

        r8 := @parameter0: com.google.inject.internal.Errors;

        $r1 = r0.<com.google.inject.internal.ExposedKeyFactory: com.google.inject.spi.PrivateElements privateElements>;

        $r2 = interfaceinvoke $r1.<com.google.inject.spi.PrivateElements: com.google.inject.Injector getInjector()>();

        r3 = (com.google.inject.internal.InjectorImpl) $r2;

        $r5 = r3.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.State state>;

        $r4 = r0.<com.google.inject.internal.ExposedKeyFactory: com.google.inject.Key key>;

        $r6 = interfaceinvoke $r5.<com.google.inject.internal.State: com.google.inject.internal.BindingImpl getExplicitBinding(com.google.inject.Key)>($r4);

        $r7 = virtualinvoke $r6.<com.google.inject.internal.BindingImpl: com.google.inject.internal.InternalFactory getInternalFactory()>();

        if $r7 != r0 goto label1;

        $r9 = virtualinvoke $r6.<com.google.inject.internal.BindingImpl: java.lang.Object getSource()>();

        $r10 = virtualinvoke r8.<com.google.inject.internal.Errors: com.google.inject.internal.Errors withSource(java.lang.Object)>($r9);

        $r11 = r0.<com.google.inject.internal.ExposedKeyFactory: com.google.inject.Key key>;

        virtualinvoke $r10.<com.google.inject.internal.Errors: com.google.inject.internal.Errors exposedButNotBound(com.google.inject.Key)>($r11);

        return;

     label1:
        r0.<com.google.inject.internal.ExposedKeyFactory: com.google.inject.internal.BindingImpl delegate> = $r6;

        return;
    }

    public java.lang.Object get(com.google.inject.internal.Errors, com.google.inject.internal.InternalContext, com.google.inject.spi.Dependency, boolean) throws com.google.inject.internal.ErrorsException
    {
        com.google.inject.internal.InternalContext r4;
        com.google.inject.spi.Dependency r5;
        com.google.inject.internal.Errors r3;
        com.google.inject.internal.BindingImpl $r1;
        com.google.inject.internal.InternalFactory $r2;
        java.lang.Object $r6;
        com.google.inject.internal.ExposedKeyFactory r0;
        boolean z0;

        r0 := @this: com.google.inject.internal.ExposedKeyFactory;

        r3 := @parameter0: com.google.inject.internal.Errors;

        r4 := @parameter1: com.google.inject.internal.InternalContext;

        r5 := @parameter2: com.google.inject.spi.Dependency;

        z0 := @parameter3: boolean;

        $r1 = r0.<com.google.inject.internal.ExposedKeyFactory: com.google.inject.internal.BindingImpl delegate>;

        $r2 = virtualinvoke $r1.<com.google.inject.internal.BindingImpl: com.google.inject.internal.InternalFactory getInternalFactory()>();

        $r6 = interfaceinvoke $r2.<com.google.inject.internal.InternalFactory: java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean)>(r3, r4, r5, z0);

        return $r6;
    }
}
