final class com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset extends com.mycila.inject.internal.guava.collect.ImmutableMultiset
{
    static final com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset INSTANCE;
    private static final long serialVersionUID;

    void <init>()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableMultiset: void <init>()>();

        return;
    }

    public int count(java.lang.Object)
    {
        java.lang.Object r1;
        com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset;

        r1 := @parameter0: java.lang.Object;

        return 0;
    }

    public com.mycila.inject.internal.guava.collect.ImmutableSet elementSet()
    {
        com.mycila.inject.internal.guava.collect.ImmutableSet $r0;
        com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset;

        $r0 = staticinvoke <com.mycila.inject.internal.guava.collect.ImmutableSet: com.mycila.inject.internal.guava.collect.ImmutableSet of()>();

        return $r0;
    }

    public int size()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset;

        return 0;
    }

    com.mycila.inject.internal.guava.collect.UnmodifiableIterator entryIterator()
    {
        com.mycila.inject.internal.guava.collect.UnmodifiableIterator $r0;
        com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset;

        $r0 = staticinvoke <com.mycila.inject.internal.guava.collect.Iterators: com.mycila.inject.internal.guava.collect.UnmodifiableIterator emptyIterator()>();

        return $r0;
    }

    int distinctElements()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset;

        return 0;
    }

    boolean isPartialView()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset;

        return 0;
    }

    com.mycila.inject.internal.guava.collect.ImmutableSet createEntrySet()
    {
        com.mycila.inject.internal.guava.collect.ImmutableSet $r0;
        com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset;

        $r0 = staticinvoke <com.mycila.inject.internal.guava.collect.ImmutableSet: com.mycila.inject.internal.guava.collect.ImmutableSet of()>();

        return $r0;
    }

    public volatile java.util.Set elementSet()
    {
        com.mycila.inject.internal.guava.collect.ImmutableSet $r1;
        com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset: com.mycila.inject.internal.guava.collect.ImmutableSet elementSet()>();

        return $r1;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset $r0;

        <com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset: long serialVersionUID> = 0L;

        $r0 = new com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset: void <init>()>();

        <com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset: com.mycila.inject.internal.guava.collect.EmptyImmutableMultiset INSTANCE> = $r0;

        return;
    }
}
