public class org.apache.batik.dom.svg.SVGOMDocument extends org.apache.batik.dom.AbstractStylableDocument implements org.w3c.dom.svg.SVGDocument, org.apache.batik.util.SVGConstants, org.apache.batik.css.engine.CSSNavigableDocument, org.apache.batik.dom.svg.IdContainer
{
    protected static final java.lang.String RESOURCES;
    protected transient org.apache.batik.i18n.LocalizableSupport localizableSupport;
    protected java.lang.String referrer;
    protected org.apache.batik.util.ParsedURL url;
    protected transient boolean readonly;
    protected boolean isSVG12;
    protected java.util.HashMap cssNavigableDocumentListeners;
    protected org.apache.batik.dom.svg.AnimatedAttributeListener mainAnimatedAttributeListener;
    protected java.util.LinkedList animatedAttributeListeners;
    protected transient org.apache.batik.dom.svg.SVGContext svgContext;

    protected void <init>()
    {
        org.apache.batik.dom.svg.SVGOMDocument$AnimAttrListener $r5;
        java.lang.Class $r2;
        java.util.HashMap $r4;
        java.lang.ClassLoader $r3;
        java.util.LinkedList $r6;
        org.apache.batik.dom.svg.SVGOMDocument r0;
        org.apache.batik.i18n.LocalizableSupport $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        specialinvoke r0.<org.apache.batik.dom.AbstractStylableDocument: void <init>()>();

        $r1 = new org.apache.batik.i18n.LocalizableSupport;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r1.<org.apache.batik.i18n.LocalizableSupport: void <init>(java.lang.String,java.lang.ClassLoader)>("org.apache.batik.dom.svg.resources.Messages", $r3);

        r0.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.i18n.LocalizableSupport localizableSupport> = $r1;

        r0.<org.apache.batik.dom.svg.SVGOMDocument: java.lang.String referrer> = "";

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.dom.svg.SVGOMDocument: java.util.HashMap cssNavigableDocumentListeners> = $r4;

        $r5 = new org.apache.batik.dom.svg.SVGOMDocument$AnimAttrListener;

        specialinvoke $r5.<org.apache.batik.dom.svg.SVGOMDocument$AnimAttrListener: void <init>(org.apache.batik.dom.svg.SVGOMDocument)>(r0);

        r0.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.dom.svg.AnimatedAttributeListener mainAnimatedAttributeListener> = $r5;

        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.batik.dom.svg.SVGOMDocument: java.util.LinkedList animatedAttributeListeners> = $r6;

        return;
    }

    public void <init>(org.w3c.dom.DocumentType, org.w3c.dom.DOMImplementation)
    {
        org.apache.batik.dom.svg.SVGOMDocument$AnimAttrListener $r7;
        java.util.HashMap $r6;
        org.apache.batik.dom.svg.SVGOMDocument r0;
        org.w3c.dom.DocumentType r1;
        org.apache.batik.i18n.LocalizableSupport $r3;
        java.lang.Class $r4;
        java.lang.ClassLoader $r5;
        java.util.LinkedList $r8;
        org.w3c.dom.DOMImplementation r2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: org.w3c.dom.DocumentType;

        r2 := @parameter1: org.w3c.dom.DOMImplementation;

        specialinvoke r0.<org.apache.batik.dom.AbstractStylableDocument: void <init>(org.w3c.dom.DocumentType,org.w3c.dom.DOMImplementation)>(r1, r2);

        $r3 = new org.apache.batik.i18n.LocalizableSupport;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r3.<org.apache.batik.i18n.LocalizableSupport: void <init>(java.lang.String,java.lang.ClassLoader)>("org.apache.batik.dom.svg.resources.Messages", $r5);

        r0.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.i18n.LocalizableSupport localizableSupport> = $r3;

        r0.<org.apache.batik.dom.svg.SVGOMDocument: java.lang.String referrer> = "";

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.dom.svg.SVGOMDocument: java.util.HashMap cssNavigableDocumentListeners> = $r6;

        $r7 = new org.apache.batik.dom.svg.SVGOMDocument$AnimAttrListener;

        specialinvoke $r7.<org.apache.batik.dom.svg.SVGOMDocument$AnimAttrListener: void <init>(org.apache.batik.dom.svg.SVGOMDocument)>(r0);

        r0.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.dom.svg.AnimatedAttributeListener mainAnimatedAttributeListener> = $r7;

        $r8 = new java.util.LinkedList;

        specialinvoke $r8.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.batik.dom.svg.SVGOMDocument: java.util.LinkedList animatedAttributeListeners> = $r8;

        return;
    }

    public void setLocale(java.util.Locale)
    {
        java.util.Locale r1;
        org.apache.batik.dom.svg.SVGOMDocument r0;
        org.apache.batik.i18n.LocalizableSupport $r2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: java.util.Locale;

        specialinvoke r0.<org.apache.batik.dom.AbstractDocument: void setLocale(java.util.Locale)>(r1);

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.i18n.LocalizableSupport localizableSupport>;

        virtualinvoke $r2.<org.apache.batik.i18n.LocalizableSupport: void setLocale(java.util.Locale)>(r1);

        return;
    }

    public java.lang.String formatMessage(java.lang.String, java.lang.Object[]) throws java.util.MissingResourceException
    {
        java.lang.Object[] r2;
        java.util.MissingResourceException $r4;
        java.lang.String r1, $r3, $r6;
        org.apache.batik.dom.svg.SVGOMDocument r0;
        org.apache.batik.i18n.LocalizableSupport $r5;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

     label1:
        $r3 = specialinvoke r0.<org.apache.batik.dom.AbstractDocument: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>(r1, r2);

        return $r3;

     label2:
        $r4 := @caughtexception;

        $r5 = r0.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.i18n.LocalizableSupport localizableSupport>;

        $r6 = virtualinvoke $r5.<org.apache.batik.i18n.LocalizableSupport: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>(r1, r2);

        return $r6;

        catch java.util.MissingResourceException from label1 to label2 with label2;
    }

    public java.lang.String getTitle()
    {
        short $s0;
        java.lang.StringBuffer $r12;
        org.w3c.dom.Node r9, r10;
        int $i1;
        java.lang.String $r3, $r4, $r6, $r7, $r8, $r11;
        boolean $z0, $z1, z2;
        org.w3c.dom.svg.SVGLangSpace $r5;
        org.apache.batik.dom.svg.SVGOMDocument r1;
        org.w3c.dom.Element $r2;

        r1 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        z2 = 0;

        $r2 = virtualinvoke r1.<org.apache.batik.dom.AbstractDocument: org.w3c.dom.Element getDocumentElement()>();

        r9 = interfaceinvoke $r2.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label6;

     label1:
        $r3 = interfaceinvoke r9.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        if $r3 == null goto label5;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2000/svg");

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r9.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("title");

        if $z1 == 0 goto label5;

        $r5 = (org.w3c.dom.svg.SVGLangSpace) r9;

        $r6 = interfaceinvoke $r5.<org.w3c.dom.svg.SVGLangSpace: java.lang.String getXMLspace()>();

        z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("preserve");

        r10 = interfaceinvoke r9.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label4;

     label2:
        $s0 = interfaceinvoke r10.<org.w3c.dom.Node: short getNodeType()>();

        $i1 = (int) $s0;

        if $i1 != 3 goto label3;

        $r7 = interfaceinvoke r10.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

     label3:
        r10 = interfaceinvoke r10.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label4:
        if r10 != null goto label2;

        goto label7;

     label5:
        r9 = interfaceinvoke r9.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label6:
        if r9 != null goto label1;

     label7:
        $r8 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        if z2 == 0 goto label8;

        $r11 = staticinvoke <org.apache.batik.dom.util.XMLSupport: java.lang.String preserveXMLSpace(java.lang.String)>($r8);

        goto label9;

     label8:
        $r11 = staticinvoke <org.apache.batik.dom.util.XMLSupport: java.lang.String defaultXMLSpace(java.lang.String)>($r8);

     label9:
        return $r11;
    }

    public java.lang.String getReferrer()
    {
        java.lang.String $r1;
        org.apache.batik.dom.svg.SVGOMDocument r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMDocument: java.lang.String referrer>;

        return $r1;
    }

    public void setReferrer(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGOMDocument r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.batik.dom.svg.SVGOMDocument: java.lang.String referrer> = r1;

        return;
    }

    public java.lang.String getDomain()
    {
        org.apache.batik.util.ParsedURL $r1, $r2;
        java.lang.String $r3;
        org.apache.batik.dom.svg.SVGOMDocument r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.util.ParsedURL url>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.util.ParsedURL url>;

        $r3 = virtualinvoke $r2.<org.apache.batik.util.ParsedURL: java.lang.String getHost()>();

     label2:
        return $r3;
    }

    public org.w3c.dom.svg.SVGSVGElement getRootElement()
    {
        org.w3c.dom.Element $r1;
        org.apache.batik.dom.svg.SVGOMDocument r0;
        org.w3c.dom.svg.SVGSVGElement $r2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.AbstractDocument: org.w3c.dom.Element getDocumentElement()>();

        $r2 = (org.w3c.dom.svg.SVGSVGElement) $r1;

        return $r2;
    }

    public java.lang.String getURL()
    {
        java.lang.String $r1;
        org.apache.batik.dom.svg.SVGOMDocument r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        $r1 = r0.<org.apache.batik.dom.AbstractDocument: java.lang.String documentURI>;

        return $r1;
    }

    public java.net.URL getURLObject()
    {
        java.net.MalformedURLException $r3;
        java.net.URL $r0;
        java.lang.String $r2;
        org.apache.batik.dom.svg.SVGOMDocument r1;

        r1 := @this: org.apache.batik.dom.svg.SVGOMDocument;

     label1:
        $r0 = new java.net.URL;

        $r2 = r1.<org.apache.batik.dom.AbstractDocument: java.lang.String documentURI>;

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>($r2);

        return $r0;

     label2:
        $r3 := @caughtexception;

        return null;

        catch java.net.MalformedURLException from label1 to label2 with label2;
    }

    public org.apache.batik.util.ParsedURL getParsedURL()
    {
        org.apache.batik.util.ParsedURL $r1;
        org.apache.batik.dom.svg.SVGOMDocument r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.util.ParsedURL url>;

        return $r1;
    }

    public void setURLObject(java.net.URL)
    {
        org.apache.batik.util.ParsedURL $r1;
        java.net.URL r2;
        org.apache.batik.dom.svg.SVGOMDocument r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r2 := @parameter0: java.net.URL;

        $r1 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r1.<org.apache.batik.util.ParsedURL: void <init>(java.net.URL)>(r2);

        virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMDocument: void setParsedURL(org.apache.batik.util.ParsedURL)>($r1);

        return;
    }

    public void setParsedURL(org.apache.batik.util.ParsedURL)
    {
        java.lang.String $r2;
        org.apache.batik.util.ParsedURL r1;
        org.apache.batik.dom.svg.SVGOMDocument r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: org.apache.batik.util.ParsedURL;

        r0.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.util.ParsedURL url> = r1;

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

     label2:
        r0.<org.apache.batik.dom.AbstractDocument: java.lang.String documentURI> = $r2;

        return;
    }

    public void setDocumentURI(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.util.ParsedURL $r2;
        org.apache.batik.dom.svg.SVGOMDocument r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.batik.dom.AbstractDocument: java.lang.String documentURI> = r1;

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r2.<org.apache.batik.util.ParsedURL: void <init>(java.lang.String)>(r1);

     label2:
        r0.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.util.ParsedURL url> = $r2;

        return;
    }

    public org.w3c.dom.Element createElement(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.GenericElement $r0;
        java.lang.String r1, $r2;
        org.apache.batik.dom.svg.SVGOMDocument r3;

        r3 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.batik.dom.GenericElement;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();

        specialinvoke $r0.<org.apache.batik.dom.GenericElement: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>($r2, r3);

        return $r0;
    }

    public org.w3c.dom.DocumentFragment createDocumentFragment()
    {
        org.apache.batik.dom.GenericDocumentFragment $r0;
        org.apache.batik.dom.svg.SVGOMDocument r1;

        r1 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        $r0 = new org.apache.batik.dom.GenericDocumentFragment;

        specialinvoke $r0.<org.apache.batik.dom.GenericDocumentFragment: void <init>(org.apache.batik.dom.AbstractDocument)>(r1);

        return $r0;
    }

    public org.w3c.dom.Text createTextNode(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.dom.GenericText $r0;
        org.apache.batik.dom.svg.SVGOMDocument r2;

        r2 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.batik.dom.GenericText;

        specialinvoke $r0.<org.apache.batik.dom.GenericText: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        return $r0;
    }

    public org.w3c.dom.Comment createComment(java.lang.String)
    {
        org.apache.batik.dom.GenericComment $r0;
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGOMDocument r2;

        r2 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.batik.dom.GenericComment;

        specialinvoke $r0.<org.apache.batik.dom.GenericComment: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        return $r0;
    }

    public org.w3c.dom.CDATASection createCDATASection(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.GenericCDATASection $r0;
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGOMDocument r2;

        r2 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.batik.dom.GenericCDATASection;

        specialinvoke $r0.<org.apache.batik.dom.GenericCDATASection: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        return $r0;
    }

    public org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.GenericProcessingInstruction $r2;
        org.apache.batik.dom.StyleSheetFactory $r7;
        org.apache.batik.dom.svg.SVGOMDocument r4;
        org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction $r5;
        java.lang.String r0, $r1, r3;
        org.w3c.dom.DOMImplementation $r6;
        boolean $z0;

        r4 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = "xml-stylesheet";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r5 = new org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction;

        $r6 = virtualinvoke r4.<org.apache.batik.dom.AbstractDocument: org.w3c.dom.DOMImplementation getImplementation()>();

        $r7 = (org.apache.batik.dom.StyleSheetFactory) $r6;

        specialinvoke $r5.<org.apache.batik.dom.svg.SVGStyleSheetProcessingInstruction: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument,org.apache.batik.dom.StyleSheetFactory)>(r3, r4, $r7);

        return $r5;

     label1:
        $r2 = new org.apache.batik.dom.GenericProcessingInstruction;

        specialinvoke $r2.<org.apache.batik.dom.GenericProcessingInstruction: void <init>(java.lang.String,java.lang.String,org.apache.batik.dom.AbstractDocument)>(r0, r3, r4);

        return $r2;
    }

    public org.w3c.dom.Attr createAttribute(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.GenericAttr $r0;
        java.lang.String r1, $r2;
        org.apache.batik.dom.svg.SVGOMDocument r3;

        r3 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.batik.dom.GenericAttr;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();

        specialinvoke $r0.<org.apache.batik.dom.GenericAttr: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>($r2, r3);

        return $r0;
    }

    public org.w3c.dom.EntityReference createEntityReference(java.lang.String) throws org.w3c.dom.DOMException
    {
        java.lang.String r1;
        org.apache.batik.dom.GenericEntityReference $r0;
        org.apache.batik.dom.svg.SVGOMDocument r2;

        r2 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.batik.dom.GenericEntityReference;

        specialinvoke $r0.<org.apache.batik.dom.GenericEntityReference: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        return $r0;
    }

    public org.w3c.dom.Attr createAttributeNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.GenericAttrNS $r1;
        org.apache.batik.dom.svg.SVGOMDocument r5;
        org.apache.batik.dom.GenericAttr $r6;
        java.lang.String r0, $r2, r3, $r4, $r7;

        r5 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r6 = new org.apache.batik.dom.GenericAttr;

        $r7 = virtualinvoke r3.<java.lang.String: java.lang.String intern()>();

        specialinvoke $r6.<org.apache.batik.dom.GenericAttr: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>($r7, r5);

        return $r6;

     label1:
        $r1 = new org.apache.batik.dom.GenericAttrNS;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String intern()>();

        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String intern()>();

        specialinvoke $r1.<org.apache.batik.dom.GenericAttrNS: void <init>(java.lang.String,java.lang.String,org.apache.batik.dom.AbstractDocument)>($r2, $r4, r5);

        return $r1;
    }

    public org.w3c.dom.Element createElementNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.Element $r5;
        org.apache.batik.dom.svg.SVGDOMImplementation r2;
        java.lang.String r3, r4;
        org.w3c.dom.DOMImplementation $r1;
        org.apache.batik.dom.svg.SVGOMDocument r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.batik.dom.AbstractDocument: org.w3c.dom.DOMImplementation implementation>;

        r2 = (org.apache.batik.dom.svg.SVGDOMImplementation) $r1;

        $r5 = virtualinvoke r2.<org.apache.batik.dom.svg.SVGDOMImplementation: org.w3c.dom.Element createElementNS(org.apache.batik.dom.AbstractDocument,java.lang.String,java.lang.String)>(r0, r3, r4);

        return $r5;
    }

    public boolean isSVG12()
    {
        org.apache.batik.dom.svg.SVGOMDocument r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        $z0 = r0.<org.apache.batik.dom.svg.SVGOMDocument: boolean isSVG12>;

        return $z0;
    }

    public void setIsSVG12(boolean)
    {
        org.apache.batik.dom.svg.SVGOMDocument r0;
        boolean z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.dom.svg.SVGOMDocument: boolean isSVG12> = z0;

        return;
    }

    public boolean isId(org.w3c.dom.Attr)
    {
        org.w3c.dom.Attr r0;
        org.apache.batik.dom.svg.SVGOMDocument r5;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        r5 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r0 := @parameter0: org.w3c.dom.Attr;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        if $r1 != null goto label1;

        $r3 = "id";

        $r4 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label1:
        $r2 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("xml:id");

        return $z0;
    }

    public void setSVGContext(org.apache.batik.dom.svg.SVGContext)
    {
        org.apache.batik.dom.svg.SVGContext r1;
        org.apache.batik.dom.svg.SVGOMDocument r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: org.apache.batik.dom.svg.SVGContext;

        r0.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.dom.svg.SVGContext svgContext> = r1;

        return;
    }

    public org.apache.batik.dom.svg.SVGContext getSVGContext()
    {
        org.apache.batik.dom.svg.SVGContext $r1;
        org.apache.batik.dom.svg.SVGOMDocument r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.dom.svg.SVGContext svgContext>;

        return $r1;
    }

    public void addCSSNavigableDocumentListener(org.apache.batik.css.engine.CSSNavigableDocumentListener)
    {
        org.apache.batik.dom.svg.SVGOMDocument$DOMSubtreeModifiedListenerWrapper $r5;
        org.w3c.dom.events.EventListener[] $r8;
        org.apache.batik.dom.svg.SVGOMDocument$DOMNodeRemovedListenerWrapper $r4;
        org.apache.batik.dom.svg.SVGOMDocument$DOMCharacterDataModifiedListenerWrapper $r6;
        java.util.HashMap $r2, $r9;
        org.apache.batik.dom.svg.SVGOMDocument$DOMNodeInsertedListenerWrapper $r3;
        org.apache.batik.dom.svg.SVGOMDocument r0;
        org.apache.batik.dom.svg.SVGOMDocument$DOMAttrModifiedListenerWrapper $r7;
        org.apache.batik.css.engine.CSSNavigableDocumentListener r1;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: org.apache.batik.css.engine.CSSNavigableDocumentListener;

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMDocument: java.util.HashMap cssNavigableDocumentListeners>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new org.apache.batik.dom.svg.SVGOMDocument$DOMNodeInsertedListenerWrapper;

        specialinvoke $r3.<org.apache.batik.dom.svg.SVGOMDocument$DOMNodeInsertedListenerWrapper: void <init>(org.apache.batik.dom.svg.SVGOMDocument,org.apache.batik.css.engine.CSSNavigableDocumentListener)>(r0, r1);

        $r4 = new org.apache.batik.dom.svg.SVGOMDocument$DOMNodeRemovedListenerWrapper;

        specialinvoke $r4.<org.apache.batik.dom.svg.SVGOMDocument$DOMNodeRemovedListenerWrapper: void <init>(org.apache.batik.dom.svg.SVGOMDocument,org.apache.batik.css.engine.CSSNavigableDocumentListener)>(r0, r1);

        $r5 = new org.apache.batik.dom.svg.SVGOMDocument$DOMSubtreeModifiedListenerWrapper;

        specialinvoke $r5.<org.apache.batik.dom.svg.SVGOMDocument$DOMSubtreeModifiedListenerWrapper: void <init>(org.apache.batik.dom.svg.SVGOMDocument,org.apache.batik.css.engine.CSSNavigableDocumentListener)>(r0, r1);

        $r6 = new org.apache.batik.dom.svg.SVGOMDocument$DOMCharacterDataModifiedListenerWrapper;

        specialinvoke $r6.<org.apache.batik.dom.svg.SVGOMDocument$DOMCharacterDataModifiedListenerWrapper: void <init>(org.apache.batik.dom.svg.SVGOMDocument,org.apache.batik.css.engine.CSSNavigableDocumentListener)>(r0, r1);

        $r7 = new org.apache.batik.dom.svg.SVGOMDocument$DOMAttrModifiedListenerWrapper;

        specialinvoke $r7.<org.apache.batik.dom.svg.SVGOMDocument$DOMAttrModifiedListenerWrapper: void <init>(org.apache.batik.dom.svg.SVGOMDocument,org.apache.batik.css.engine.CSSNavigableDocumentListener)>(r0, r1);

        $r9 = r0.<org.apache.batik.dom.svg.SVGOMDocument: java.util.HashMap cssNavigableDocumentListeners>;

        $r8 = newarray (org.w3c.dom.events.EventListener)[5];

        $r8[0] = $r3;

        $r8[1] = $r4;

        $r8[2] = $r5;

        $r8[3] = $r6;

        $r8[4] = $r7;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r8);

        virtualinvoke r0.<org.apache.batik.dom.AbstractNode: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "DOMNodeInserted", $r3, 0, null);

        virtualinvoke r0.<org.apache.batik.dom.AbstractNode: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "DOMNodeRemoved", $r4, 0, null);

        virtualinvoke r0.<org.apache.batik.dom.AbstractNode: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "DOMSubtreeModified", $r5, 0, null);

        virtualinvoke r0.<org.apache.batik.dom.AbstractNode: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "DOMCharacterDataModified", $r6, 0, null);

        virtualinvoke r0.<org.apache.batik.dom.AbstractNode: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "DOMAttrModified", $r7, 0, null);

        return;
    }

    public void removeCSSNavigableDocumentListener(org.apache.batik.css.engine.CSSNavigableDocumentListener)
    {
        org.w3c.dom.events.EventListener[] r4;
        java.util.HashMap $r2, $r10;
        org.apache.batik.dom.svg.SVGOMDocument r0;
        org.apache.batik.css.engine.CSSNavigableDocumentListener r1;
        org.w3c.dom.events.EventListener $r5, $r6, $r7, $r8, $r9;
        java.lang.Object $r3;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: org.apache.batik.css.engine.CSSNavigableDocumentListener;

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMDocument: java.util.HashMap cssNavigableDocumentListeners>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.w3c.dom.events.EventListener[]) $r3;

        if r4 != null goto label1;

        return;

     label1:
        $r5 = r4[0];

        virtualinvoke r0.<org.apache.batik.dom.AbstractNode: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMNodeInserted", $r5, 0);

        $r6 = r4[1];

        virtualinvoke r0.<org.apache.batik.dom.AbstractNode: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMNodeRemoved", $r6, 0);

        $r7 = r4[2];

        virtualinvoke r0.<org.apache.batik.dom.AbstractNode: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMSubtreeModified", $r7, 0);

        $r8 = r4[3];

        virtualinvoke r0.<org.apache.batik.dom.AbstractNode: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMCharacterDataModified", $r8, 0);

        $r9 = r4[4];

        virtualinvoke r0.<org.apache.batik.dom.AbstractNode: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMAttrModified", $r9, 0);

        $r10 = r0.<org.apache.batik.dom.svg.SVGOMDocument: java.util.HashMap cssNavigableDocumentListeners>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    protected org.apache.batik.dom.svg.AnimatedAttributeListener getAnimatedAttributeListener()
    {
        org.apache.batik.dom.svg.AnimatedAttributeListener $r1;
        org.apache.batik.dom.svg.SVGOMDocument r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.dom.svg.AnimatedAttributeListener mainAnimatedAttributeListener>;

        return $r1;
    }

    protected void overrideStyleTextChanged(org.apache.batik.css.engine.CSSStylableElement, java.lang.String)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.HashMap $r1;
        org.apache.batik.css.engine.CSSStylableElement r6;
        org.apache.batik.dom.svg.SVGOMDocument r0;
        org.apache.batik.css.engine.CSSNavigableDocumentListener r5;
        java.lang.Object $r4;
        java.lang.String r7;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r6 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r7 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMDocument: java.util.HashMap cssNavigableDocumentListeners>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.batik.css.engine.CSSNavigableDocumentListener) $r4;

        interfaceinvoke r5.<org.apache.batik.css.engine.CSSNavigableDocumentListener: void overrideStyleTextChanged(org.apache.batik.css.engine.CSSStylableElement,java.lang.String)>(r6, r7);

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    protected void overrideStylePropertyRemoved(org.apache.batik.css.engine.CSSStylableElement, java.lang.String)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.HashMap $r1;
        org.apache.batik.css.engine.CSSStylableElement r6;
        org.apache.batik.dom.svg.SVGOMDocument r0;
        org.apache.batik.css.engine.CSSNavigableDocumentListener r5;
        java.lang.Object $r4;
        java.lang.String r7;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r6 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r7 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMDocument: java.util.HashMap cssNavigableDocumentListeners>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.batik.css.engine.CSSNavigableDocumentListener) $r4;

        interfaceinvoke r5.<org.apache.batik.css.engine.CSSNavigableDocumentListener: void overrideStylePropertyRemoved(org.apache.batik.css.engine.CSSStylableElement,java.lang.String)>(r6, r7);

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    protected void overrideStylePropertyChanged(org.apache.batik.css.engine.CSSStylableElement, java.lang.String, java.lang.String, java.lang.String)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.HashMap $r1;
        org.apache.batik.css.engine.CSSStylableElement r6;
        org.apache.batik.dom.svg.SVGOMDocument r0;
        org.apache.batik.css.engine.CSSNavigableDocumentListener r5;
        java.lang.Object $r4;
        java.lang.String r7, r8, r9;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r6 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r7 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        r9 := @parameter3: java.lang.String;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMDocument: java.util.HashMap cssNavigableDocumentListeners>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.batik.css.engine.CSSNavigableDocumentListener) $r4;

        interfaceinvoke r5.<org.apache.batik.css.engine.CSSNavigableDocumentListener: void overrideStylePropertyChanged(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,java.lang.String,java.lang.String)>(r6, r7, r8, r9);

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public void addAnimatedAttributeListener(org.apache.batik.dom.svg.AnimatedAttributeListener)
    {
        org.apache.batik.dom.svg.AnimatedAttributeListener r1;
        java.util.LinkedList $r2, $r3;
        org.apache.batik.dom.svg.SVGOMDocument r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: org.apache.batik.dom.svg.AnimatedAttributeListener;

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMDocument: java.util.LinkedList animatedAttributeListeners>;

        $z0 = virtualinvoke $r2.<java.util.LinkedList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<org.apache.batik.dom.svg.SVGOMDocument: java.util.LinkedList animatedAttributeListeners>;

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeAnimatedAttributeListener(org.apache.batik.dom.svg.AnimatedAttributeListener)
    {
        org.apache.batik.dom.svg.AnimatedAttributeListener r1;
        java.util.LinkedList $r2;
        org.apache.batik.dom.svg.SVGOMDocument r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: org.apache.batik.dom.svg.AnimatedAttributeListener;

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMDocument: java.util.LinkedList animatedAttributeListeners>;

        virtualinvoke $r2.<java.util.LinkedList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public org.w3c.dom.css.CSSStyleDeclaration getOverrideStyle(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r0;
        org.apache.batik.dom.svg.SVGStylableElement $r2;
        org.w3c.dom.css.CSSStyleDeclaration $r3;
        java.lang.String r1;
        boolean $z0;
        org.apache.batik.dom.svg.SVGOMDocument r4;

        r4 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        $z0 = r0 instanceof org.apache.batik.dom.svg.SVGStylableElement;

        if $z0 == 0 goto label1;

        if r1 != null goto label1;

        $r2 = (org.apache.batik.dom.svg.SVGStylableElement) r0;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.svg.SVGStylableElement: org.w3c.dom.css.CSSStyleDeclaration getOverrideStyle()>();

        return $r3;

     label1:
        return null;
    }

    public boolean isReadonly()
    {
        org.apache.batik.dom.svg.SVGOMDocument r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        $z0 = r0.<org.apache.batik.dom.svg.SVGOMDocument: boolean readonly>;

        return $z0;
    }

    public void setReadonly(boolean)
    {
        org.apache.batik.dom.svg.SVGOMDocument r0;
        boolean z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.dom.svg.SVGOMDocument: boolean readonly> = z0;

        return;
    }

    protected org.w3c.dom.Node newNode()
    {
        org.apache.batik.dom.svg.SVGOMDocument $r0, r1;

        r1 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        $r0 = new org.apache.batik.dom.svg.SVGOMDocument;

        specialinvoke $r0.<org.apache.batik.dom.svg.SVGOMDocument: void <init>()>();

        return $r0;
    }

    protected org.w3c.dom.Node copyInto(org.w3c.dom.Node)
    {
        org.apache.batik.dom.svg.SVGOMDocument r0, r2;
        org.apache.batik.i18n.LocalizableSupport $r3;
        org.apache.batik.util.ParsedURL $r7;
        org.w3c.dom.Node r1;
        java.lang.Class $r4;
        java.lang.ClassLoader $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: org.w3c.dom.Node;

        specialinvoke r0.<org.apache.batik.dom.AbstractDocument: org.w3c.dom.Node copyInto(org.w3c.dom.Node)>(r1);

        r2 = (org.apache.batik.dom.svg.SVGOMDocument) r1;

        $r3 = new org.apache.batik.i18n.LocalizableSupport;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r3.<org.apache.batik.i18n.LocalizableSupport: void <init>(java.lang.String,java.lang.ClassLoader)>("org.apache.batik.dom.svg.resources.Messages", $r5);

        r2.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.i18n.LocalizableSupport localizableSupport> = $r3;

        $r6 = r0.<org.apache.batik.dom.svg.SVGOMDocument: java.lang.String referrer>;

        r2.<org.apache.batik.dom.svg.SVGOMDocument: java.lang.String referrer> = $r6;

        $r7 = r0.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.util.ParsedURL url>;

        r2.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.util.ParsedURL url> = $r7;

        return r1;
    }

    protected org.w3c.dom.Node deepCopyInto(org.w3c.dom.Node)
    {
        org.apache.batik.dom.svg.SVGOMDocument r0, r2;
        org.apache.batik.i18n.LocalizableSupport $r3;
        org.apache.batik.util.ParsedURL $r7;
        org.w3c.dom.Node r1;
        java.lang.Class $r4;
        java.lang.ClassLoader $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r1 := @parameter0: org.w3c.dom.Node;

        specialinvoke r0.<org.apache.batik.dom.AbstractDocument: org.w3c.dom.Node deepCopyInto(org.w3c.dom.Node)>(r1);

        r2 = (org.apache.batik.dom.svg.SVGOMDocument) r1;

        $r3 = new org.apache.batik.i18n.LocalizableSupport;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r3.<org.apache.batik.i18n.LocalizableSupport: void <init>(java.lang.String,java.lang.ClassLoader)>("org.apache.batik.dom.svg.resources.Messages", $r5);

        r2.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.i18n.LocalizableSupport localizableSupport> = $r3;

        $r6 = r0.<org.apache.batik.dom.svg.SVGOMDocument: java.lang.String referrer>;

        r2.<org.apache.batik.dom.svg.SVGOMDocument: java.lang.String referrer> = $r6;

        $r7 = r0.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.util.ParsedURL url>;

        r2.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.util.ParsedURL url> = $r7;

        return r1;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream r0;
        java.lang.Class $r3;
        java.lang.ClassLoader $r4;
        org.apache.batik.dom.svg.SVGOMDocument r1;
        org.apache.batik.i18n.LocalizableSupport $r2;

        r1 := @this: org.apache.batik.dom.svg.SVGOMDocument;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = new org.apache.batik.i18n.LocalizableSupport;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r2.<org.apache.batik.i18n.LocalizableSupport: void <init>(java.lang.String,java.lang.ClassLoader)>("org.apache.batik.dom.svg.resources.Messages", $r4);

        r1.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.i18n.LocalizableSupport localizableSupport> = $r2;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.batik.dom.svg.SVGOMDocument: java.lang.String RESOURCES> = "org.apache.batik.dom.svg.resources.Messages";

        return;
    }
}
