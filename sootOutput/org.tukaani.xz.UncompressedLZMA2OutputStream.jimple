class org.tukaani.xz.UncompressedLZMA2OutputStream extends org.tukaani.xz.FinishableOutputStream
{
    private org.tukaani.xz.FinishableOutputStream out;
    private final java.io.DataOutputStream outData;
    private final byte[] uncompBuf;
    private int uncompPos;
    private boolean dictResetNeeded;
    private boolean finished;
    private java.io.IOException exception;
    private final byte[] tempBuf;

    static int getMemoryUsage()
    {
        return 70;
    }

    void <init>(org.tukaani.xz.FinishableOutputStream)
    {
        byte[] $r1, $r2;
        java.io.DataOutputStream $r4;
        org.tukaani.xz.FinishableOutputStream r3;
        java.lang.NullPointerException $r5;
        org.tukaani.xz.UncompressedLZMA2OutputStream r0;

        r0 := @this: org.tukaani.xz.UncompressedLZMA2OutputStream;

        r3 := @parameter0: org.tukaani.xz.FinishableOutputStream;

        specialinvoke r0.<org.tukaani.xz.FinishableOutputStream: void <init>()>();

        $r1 = newarray (byte)[65536];

        r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: byte[] uncompBuf> = $r1;

        r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos> = 0;

        r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: boolean dictResetNeeded> = 1;

        r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: boolean finished> = 0;

        r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception> = null;

        $r2 = newarray (byte)[1];

        r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: byte[] tempBuf> = $r2;

        if r3 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();

        throw $r5;

     label1:
        r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: org.tukaani.xz.FinishableOutputStream out> = r3;

        $r4 = new java.io.DataOutputStream;

        specialinvoke $r4.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r3);

        r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.DataOutputStream outData> = $r4;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        byte[] $r1, $r2;
        byte $b1;
        int i0;
        org.tukaani.xz.UncompressedLZMA2OutputStream r0;

        r0 := @this: org.tukaani.xz.UncompressedLZMA2OutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: byte[] tempBuf>;

        $b1 = (byte) i0;

        $r1[0] = $b1;

        $r2 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: byte[] tempBuf>;

        virtualinvoke r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: void write(byte[],int,int)>($r2, 0, 1);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        byte[] r0, $r3, $r4, $r5;
        java.lang.IndexOutOfBoundsException $r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        org.tukaani.xz.UncompressedLZMA2OutputStream r1;
        boolean $z0;
        java.io.IOException $r2, $r7, $r8;
        org.tukaani.xz.XZIOException $r6;

        r1 := @this: org.tukaani.xz.UncompressedLZMA2OutputStream;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i13 := @parameter2: int;

        if i0 < 0 goto label1;

        if i13 < 0 goto label1;

        $i1 = i0 + i13;

        if $i1 < 0 goto label1;

        $i3 = i0 + i13;

        $i2 = lengthof r0;

        if $i3 <= $i2 goto label2;

     label1:
        $r9 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r9.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r9;

     label2:
        $r2 = r1.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception>;

        if $r2 == null goto label3;

        $r7 = r1.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception>;

        throw $r7;

     label3:
        $z0 = r1.<org.tukaani.xz.UncompressedLZMA2OutputStream: boolean finished>;

        if $z0 == 0 goto label4;

        $r6 = new org.tukaani.xz.XZIOException;

        specialinvoke $r6.<org.tukaani.xz.XZIOException: void <init>(java.lang.String)>("Stream finished or closed");

        throw $r6;

     label4:
        if i13 <= 0 goto label6;

        $r3 = r1.<org.tukaani.xz.UncompressedLZMA2OutputStream: byte[] uncompBuf>;

        $i5 = lengthof $r3;

        $i4 = r1.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos>;

        $i6 = $i5 - $i4;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i6, i13);

        $r4 = r1.<org.tukaani.xz.UncompressedLZMA2OutputStream: byte[] uncompBuf>;

        $i8 = r1.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i0, $r4, $i8, $i7);

        i13 = i13 - $i7;

        $i9 = r1.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos>;

        $i10 = $i9 + $i7;

        r1.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos> = $i10;

        $i12 = r1.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos>;

        $r5 = r1.<org.tukaani.xz.UncompressedLZMA2OutputStream: byte[] uncompBuf>;

        $i11 = lengthof $r5;

        if $i12 != $i11 goto label5;

        specialinvoke r1.<org.tukaani.xz.UncompressedLZMA2OutputStream: void writeChunk()>();

     label5:
        goto label4;

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;

        r1.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception> = $r8;

        throw $r8;

     label8:
        return;

        catch java.io.IOException from label4 to label6 with label7;
    }

    private void writeChunk() throws java.io.IOException
    {
        byte[] $r3;
        java.io.DataOutputStream $r1, $r2, $r4;
        byte $b3;
        int $i0, $i1, $i2;
        org.tukaani.xz.UncompressedLZMA2OutputStream r0;
        boolean $z0;

        r0 := @this: org.tukaani.xz.UncompressedLZMA2OutputStream;

        $r1 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.DataOutputStream outData>;

        $z0 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: boolean dictResetNeeded>;

        if $z0 == 0 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = 2;

     label2:
        virtualinvoke $r1.<java.io.DataOutputStream: void writeByte(int)>($b3);

        $r2 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.DataOutputStream outData>;

        $i0 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos>;

        $i1 = $i0 - 1;

        virtualinvoke $r2.<java.io.DataOutputStream: void writeShort(int)>($i1);

        $r4 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.DataOutputStream outData>;

        $r3 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: byte[] uncompBuf>;

        $i2 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos>;

        virtualinvoke $r4.<java.io.DataOutputStream: void write(byte[],int,int)>($r3, 0, $i2);

        r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos> = 0;

        r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: boolean dictResetNeeded> = 0;

        return;
    }

    private void writeEndMarker() throws java.io.IOException
    {
        java.io.IOException $r1, $r4, $r5;
        org.tukaani.xz.XZIOException $r3;
        int $i0;
        org.tukaani.xz.FinishableOutputStream $r2;
        org.tukaani.xz.UncompressedLZMA2OutputStream r0;
        boolean $z0;

        r0 := @this: org.tukaani.xz.UncompressedLZMA2OutputStream;

        $r1 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception>;

        if $r1 == null goto label1;

        $r4 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception>;

        throw $r4;

     label1:
        $z0 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: boolean finished>;

        if $z0 == 0 goto label2;

        $r3 = new org.tukaani.xz.XZIOException;

        specialinvoke $r3.<org.tukaani.xz.XZIOException: void <init>(java.lang.String)>("Stream finished or closed");

        throw $r3;

     label2:
        $i0 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos>;

        if $i0 <= 0 goto label3;

        specialinvoke r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: void writeChunk()>();

     label3:
        $r2 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: org.tukaani.xz.FinishableOutputStream out>;

        virtualinvoke $r2.<org.tukaani.xz.FinishableOutputStream: void write(int)>(0);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception> = $r5;

        throw $r5;

     label6:
        return;

        catch java.io.IOException from label2 to label4 with label5;
    }

    public void flush() throws java.io.IOException
    {
        java.io.IOException $r1, $r4, $r5;
        org.tukaani.xz.XZIOException $r3;
        int $i0;
        org.tukaani.xz.FinishableOutputStream $r2;
        org.tukaani.xz.UncompressedLZMA2OutputStream r0;
        boolean $z0;

        r0 := @this: org.tukaani.xz.UncompressedLZMA2OutputStream;

        $r1 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception>;

        if $r1 == null goto label1;

        $r4 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception>;

        throw $r4;

     label1:
        $z0 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: boolean finished>;

        if $z0 == 0 goto label2;

        $r3 = new org.tukaani.xz.XZIOException;

        specialinvoke $r3.<org.tukaani.xz.XZIOException: void <init>(java.lang.String)>("Stream finished or closed");

        throw $r3;

     label2:
        $i0 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: int uncompPos>;

        if $i0 <= 0 goto label3;

        specialinvoke r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: void writeChunk()>();

     label3:
        $r2 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: org.tukaani.xz.FinishableOutputStream out>;

        virtualinvoke $r2.<org.tukaani.xz.FinishableOutputStream: void flush()>();

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception> = $r5;

        throw $r5;

     label6:
        return;

        catch java.io.IOException from label2 to label4 with label5;
    }

    public void finish() throws java.io.IOException
    {
        org.tukaani.xz.FinishableOutputStream $r1;
        java.io.IOException $r2;
        org.tukaani.xz.UncompressedLZMA2OutputStream r0;
        boolean $z0;

        r0 := @this: org.tukaani.xz.UncompressedLZMA2OutputStream;

        $z0 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: boolean finished>;

        if $z0 != 0 goto label5;

        specialinvoke r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: void writeEndMarker()>();

     label1:
        $r1 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: org.tukaani.xz.FinishableOutputStream out>;

        virtualinvoke $r1.<org.tukaani.xz.FinishableOutputStream: void finish()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception> = $r2;

        throw $r2;

     label4:
        r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: boolean finished> = 1;

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void close() throws java.io.IOException
    {
        java.io.IOException $r2, $r3, $r4, $r5, $r7;
        org.tukaani.xz.FinishableOutputStream $r1, $r6;
        org.tukaani.xz.UncompressedLZMA2OutputStream r0;
        boolean $z0;

        r0 := @this: org.tukaani.xz.UncompressedLZMA2OutputStream;

        $r1 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: org.tukaani.xz.FinishableOutputStream out>;

        if $r1 == null goto label8;

        $z0 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: boolean finished>;

        if $z0 != 0 goto label4;

     label1:
        specialinvoke r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: void writeEndMarker()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        $r6 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: org.tukaani.xz.FinishableOutputStream out>;

        virtualinvoke $r6.<org.tukaani.xz.FinishableOutputStream: void close()>();

     label5:
        goto label7;

     label6:
        $r3 := @caughtexception;

        $r4 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception>;

        if $r4 != null goto label7;

        r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception> = $r3;

     label7:
        r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: org.tukaani.xz.FinishableOutputStream out> = null;

     label8:
        $r7 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception>;

        if $r7 == null goto label9;

        $r2 = r0.<org.tukaani.xz.UncompressedLZMA2OutputStream: java.io.IOException exception>;

        throw $r2;

     label9:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }
}
