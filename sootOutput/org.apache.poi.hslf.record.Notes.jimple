public final class org.apache.poi.hslf.record.Notes extends org.apache.poi.hslf.record.SheetContainer
{
    private byte[] _header;
    private static long _type;
    private org.apache.poi.hslf.record.NotesAtom notesAtom;
    private org.apache.poi.hslf.record.PPDrawing ppDrawing;
    private org.apache.poi.hslf.record.ColorSchemeAtom _colorScheme;

    public org.apache.poi.hslf.record.NotesAtom getNotesAtom()
    {
        org.apache.poi.hslf.record.NotesAtom $r1;
        org.apache.poi.hslf.record.Notes r0;

        r0 := @this: org.apache.poi.hslf.record.Notes;

        $r1 = r0.<org.apache.poi.hslf.record.Notes: org.apache.poi.hslf.record.NotesAtom notesAtom>;

        return $r1;
    }

    public org.apache.poi.hslf.record.PPDrawing getPPDrawing()
    {
        org.apache.poi.hslf.record.PPDrawing $r1;
        org.apache.poi.hslf.record.Notes r0;

        r0 := @this: org.apache.poi.hslf.record.Notes;

        $r1 = r0.<org.apache.poi.hslf.record.Notes: org.apache.poi.hslf.record.PPDrawing ppDrawing>;

        return $r1;
    }

    protected void <init>(byte[], int, int)
    {
        byte[] $r1, r2, $r3;
        org.apache.poi.hslf.record.Record $r7, $r9, $r12, $r14, $r17, $r20;
        org.apache.poi.hslf.record.NotesAtom $r21;
        int i0, i1, $i2, $i3, $i4, i5;
        org.apache.poi.hslf.record.PPDrawing $r10, $r18;
        boolean $z0, $z1, $z2;
        org.apache.poi.hslf.record.Record[] $r4, $r5, $r6, $r8, $r11, $r13, $r16, $r19;
        org.apache.poi.hslf.record.ColorSchemeAtom $r15;
        org.apache.poi.hslf.record.Notes r0;

        r0 := @this: org.apache.poi.hslf.record.Notes;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.SheetContainer: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.Notes: byte[] _header> = $r1;

        $r3 = r0.<org.apache.poi.hslf.record.Notes: byte[] _header>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, $r3, 0, 8);

        $i3 = i0 + 8;

        $i2 = i1 - 8;

        $r4 = staticinvoke <org.apache.poi.hslf.record.Record: org.apache.poi.hslf.record.Record[] findChildRecords(byte[],int,int)>(r2, $i3, $i2);

        r0.<org.apache.poi.hslf.record.Notes: org.apache.poi.hslf.record.Record[] _children> = $r4;

        i5 = 0;

     label1:
        $r5 = r0.<org.apache.poi.hslf.record.Notes: org.apache.poi.hslf.record.Record[] _children>;

        $i4 = lengthof $r5;

        if i5 >= $i4 goto label5;

        $r6 = r0.<org.apache.poi.hslf.record.Notes: org.apache.poi.hslf.record.Record[] _children>;

        $r7 = $r6[i5];

        $z0 = $r7 instanceof org.apache.poi.hslf.record.NotesAtom;

        if $z0 == 0 goto label2;

        $r19 = r0.<org.apache.poi.hslf.record.Notes: org.apache.poi.hslf.record.Record[] _children>;

        $r20 = $r19[i5];

        $r21 = (org.apache.poi.hslf.record.NotesAtom) $r20;

        r0.<org.apache.poi.hslf.record.Notes: org.apache.poi.hslf.record.NotesAtom notesAtom> = $r21;

     label2:
        $r8 = r0.<org.apache.poi.hslf.record.Notes: org.apache.poi.hslf.record.Record[] _children>;

        $r9 = $r8[i5];

        $z1 = $r9 instanceof org.apache.poi.hslf.record.PPDrawing;

        if $z1 == 0 goto label3;

        $r16 = r0.<org.apache.poi.hslf.record.Notes: org.apache.poi.hslf.record.Record[] _children>;

        $r17 = $r16[i5];

        $r18 = (org.apache.poi.hslf.record.PPDrawing) $r17;

        r0.<org.apache.poi.hslf.record.Notes: org.apache.poi.hslf.record.PPDrawing ppDrawing> = $r18;

     label3:
        $r10 = r0.<org.apache.poi.hslf.record.Notes: org.apache.poi.hslf.record.PPDrawing ppDrawing>;

        if $r10 == null goto label4;

        $r11 = r0.<org.apache.poi.hslf.record.Notes: org.apache.poi.hslf.record.Record[] _children>;

        $r12 = $r11[i5];

        $z2 = $r12 instanceof org.apache.poi.hslf.record.ColorSchemeAtom;

        if $z2 == 0 goto label4;

        $r13 = r0.<org.apache.poi.hslf.record.Notes: org.apache.poi.hslf.record.Record[] _children>;

        $r14 = $r13[i5];

        $r15 = (org.apache.poi.hslf.record.ColorSchemeAtom) $r14;

        r0.<org.apache.poi.hslf.record.Notes: org.apache.poi.hslf.record.ColorSchemeAtom _colorScheme> = $r15;

     label4:
        i5 = i5 + 1;

        goto label1;

     label5:
        return;
    }

    public long getRecordType()
    {
        long $l0;
        org.apache.poi.hslf.record.Notes r0;

        r0 := @this: org.apache.poi.hslf.record.Notes;

        $l0 = <org.apache.poi.hslf.record.Notes: long _type>;

        return $l0;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r3;
        byte[] $r1, $r2;
        long $l0;
        org.apache.poi.hslf.record.Record[] $r4;
        byte $b1, $b2;
        org.apache.poi.hslf.record.Notes r0;

        r0 := @this: org.apache.poi.hslf.record.Notes;

        r3 := @parameter0: java.io.OutputStream;

        $r1 = r0.<org.apache.poi.hslf.record.Notes: byte[] _header>;

        $b2 = $r1[0];

        $r2 = r0.<org.apache.poi.hslf.record.Notes: byte[] _header>;

        $b1 = $r2[1];

        $l0 = <org.apache.poi.hslf.record.Notes: long _type>;

        $r4 = r0.<org.apache.poi.hslf.record.Notes: org.apache.poi.hslf.record.Record[] _children>;

        virtualinvoke r0.<org.apache.poi.hslf.record.Notes: void writeOut(byte,byte,long,org.apache.poi.hslf.record.Record[],java.io.OutputStream)>($b2, $b1, $l0, $r4, r3);

        return;
    }

    public org.apache.poi.hslf.record.ColorSchemeAtom getColorScheme()
    {
        org.apache.poi.hslf.record.Notes r0;
        org.apache.poi.hslf.record.ColorSchemeAtom $r1;

        r0 := @this: org.apache.poi.hslf.record.Notes;

        $r1 = r0.<org.apache.poi.hslf.record.Notes: org.apache.poi.hslf.record.ColorSchemeAtom _colorScheme>;

        return $r1;
    }

    static void <clinit>()
    {
        <org.apache.poi.hslf.record.Notes: long _type> = 1008L;

        return;
    }
}
