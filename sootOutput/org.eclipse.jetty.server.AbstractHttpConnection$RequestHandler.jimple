class org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler extends org.eclipse.jetty.http.HttpParser$EventHandler
{
    final org.eclipse.jetty.server.AbstractHttpConnection this$0;

    private void <init>(org.eclipse.jetty.server.AbstractHttpConnection)
    {
        org.eclipse.jetty.server.AbstractHttpConnection r1;
        org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler r0;

        r0 := @this: org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler;

        r1 := @parameter0: org.eclipse.jetty.server.AbstractHttpConnection;

        r0.<org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler: org.eclipse.jetty.server.AbstractHttpConnection this$0> = r1;

        specialinvoke r0.<org.eclipse.jetty.http.HttpParser$EventHandler: void <init>()>();

        return;
    }

    public void startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        org.eclipse.jetty.server.AbstractHttpConnection $r4;
        org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler r0;
        org.eclipse.jetty.io.Buffer r1, r2, r3;

        r0 := @this: org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        r2 := @parameter1: org.eclipse.jetty.io.Buffer;

        r3 := @parameter2: org.eclipse.jetty.io.Buffer;

        $r4 = r0.<org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler: org.eclipse.jetty.server.AbstractHttpConnection this$0>;

        virtualinvoke $r4.<org.eclipse.jetty.server.AbstractHttpConnection: void startRequest(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>(r1, r2, r3);

        return;
    }

    public void parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        org.eclipse.jetty.server.AbstractHttpConnection $r3;
        org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler r0;
        org.eclipse.jetty.io.Buffer r1, r2;

        r0 := @this: org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        r2 := @parameter1: org.eclipse.jetty.io.Buffer;

        $r3 = r0.<org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler: org.eclipse.jetty.server.AbstractHttpConnection this$0>;

        virtualinvoke $r3.<org.eclipse.jetty.server.AbstractHttpConnection: void parsedHeader(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>(r1, r2);

        return;
    }

    public void headerComplete() throws java.io.IOException
    {
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler r0;

        r0 := @this: org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler;

        $r1 = r0.<org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler: org.eclipse.jetty.server.AbstractHttpConnection this$0>;

        virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: void headerComplete()>();

        return;
    }

    public void content(org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        org.eclipse.jetty.server.AbstractHttpConnection $r2;
        org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler r0;
        org.eclipse.jetty.io.Buffer r1;

        r0 := @this: org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        $r2 = r0.<org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler: org.eclipse.jetty.server.AbstractHttpConnection this$0>;

        virtualinvoke $r2.<org.eclipse.jetty.server.AbstractHttpConnection: void content(org.eclipse.jetty.io.Buffer)>(r1);

        return;
    }

    public void messageComplete(long) throws java.io.IOException
    {
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        long l0;
        org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler r0;

        r0 := @this: org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler;

        l0 := @parameter0: long;

        $r1 = r0.<org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler: org.eclipse.jetty.server.AbstractHttpConnection this$0>;

        virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: void messageComplete(long)>(l0);

        return;
    }

    public void startResponse(org.eclipse.jetty.io.Buffer, int, org.eclipse.jetty.io.Buffer)
    {
        java.lang.Object[] $r12;
        org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler r13;
        int i0;
        java.lang.String $r11;
        org.eclipse.jetty.io.Buffer r4, r9;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7, $r8, $r10;
        org.eclipse.jetty.util.log.Logger $r0, $r1;

        r13 := @this: org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler;

        r4 := @parameter0: org.eclipse.jetty.io.Buffer;

        i0 := @parameter1: int;

        r9 := @parameter2: org.eclipse.jetty.io.Buffer;

        $r0 = staticinvoke <org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.util.log.Logger access$100()>();

        $z0 = interfaceinvoke $r0.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.util.log.Logger access$100()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad request!: ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[0];

        interfaceinvoke $r1.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r11, $r12);

     label1:
        return;
    }

    public void earlyEOF()
    {
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler r0;

        r0 := @this: org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler;

        $r1 = r0.<org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler: org.eclipse.jetty.server.AbstractHttpConnection this$0>;

        virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: void earlyEOF()>();

        return;
    }

    void <init>(org.eclipse.jetty.server.AbstractHttpConnection, org.eclipse.jetty.server.AbstractHttpConnection$1)
    {
        org.eclipse.jetty.server.AbstractHttpConnection r1;
        org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler r0;
        org.eclipse.jetty.server.AbstractHttpConnection$1 r2;

        r0 := @this: org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler;

        r1 := @parameter0: org.eclipse.jetty.server.AbstractHttpConnection;

        r2 := @parameter1: org.eclipse.jetty.server.AbstractHttpConnection$1;

        specialinvoke r0.<org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler: void <init>(org.eclipse.jetty.server.AbstractHttpConnection)>(r1);

        return;
    }
}
