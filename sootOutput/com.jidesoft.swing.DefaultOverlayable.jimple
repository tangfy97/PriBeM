public class com.jidesoft.swing.DefaultOverlayable extends javax.swing.JPanel implements com.jidesoft.swing.Overlayable, java.awt.event.ComponentListener
{
    private javax.swing.JComponent _actualComponent;
    private java.awt.Insets _overlayLocationInsets;
    private java.util.List _overlayComponents;
    private java.util.Map _overlayLocations;

    public void <init>()
    {
        java.awt.Insets $r1;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $r1 = new java.awt.Insets;

        specialinvoke $r1.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Insets _overlayLocationInsets> = $r1;

        specialinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void initComponents()>();

        return;
    }

    public void <init>(javax.swing.JComponent)
    {
        javax.swing.JComponent r2;
        java.awt.Insets $r1;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r2 := @parameter0: javax.swing.JComponent;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $r1 = new java.awt.Insets;

        specialinvoke $r1.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Insets _overlayLocationInsets> = $r1;

        specialinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void initComponents()>();

        virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void setActualComponent(javax.swing.JComponent)>(r2);

        return;
    }

    public void <init>(javax.swing.JComponent, javax.swing.JComponent, int)
    {
        javax.swing.JComponent r2, r3;
        java.awt.Insets $r1;
        int i0;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r2 := @parameter0: javax.swing.JComponent;

        r3 := @parameter1: javax.swing.JComponent;

        i0 := @parameter2: int;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $r1 = new java.awt.Insets;

        specialinvoke $r1.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Insets _overlayLocationInsets> = $r1;

        specialinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void initComponents()>();

        virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void setActualComponent(javax.swing.JComponent)>(r2);

        virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void addOverlayComponent(javax.swing.JComponent,int)>(r3, i0);

        return;
    }

    public void <init>(javax.swing.JComponent, javax.swing.JComponent)
    {
        javax.swing.JComponent r2, r3;
        java.awt.Insets $r1;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r2 := @parameter0: javax.swing.JComponent;

        r3 := @parameter1: javax.swing.JComponent;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $r1 = new java.awt.Insets;

        specialinvoke $r1.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Insets _overlayLocationInsets> = $r1;

        specialinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void initComponents()>();

        virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void setActualComponent(javax.swing.JComponent)>(r2);

        virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void addOverlayComponent(javax.swing.JComponent,int)>(r3, 0);

        return;
    }

    private void initComponents()
    {
        java.util.Vector $r1;
        com.jidesoft.swing.DefaultOverlayable r0;
        java.util.Hashtable $r2;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void setLayout(java.awt.LayoutManager)>(null);

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<com.jidesoft.swing.DefaultOverlayable: java.util.List _overlayComponents> = $r1;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<com.jidesoft.swing.DefaultOverlayable: java.util.Map _overlayLocations> = $r2;

        return;
    }

    public java.awt.Dimension getPreferredSize()
    {
        java.awt.Insets $r4;
        com.jidesoft.swing.DefaultOverlayable r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        javax.swing.JComponent $r1, $r2;
        java.awt.Dimension r3, $r5;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent getActualComponent()>();

        if $r1 != null goto label1;

        $r5 = new java.awt.Dimension;

        specialinvoke $r5.<java.awt.Dimension: void <init>(int,int)>(0, 0);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent getActualComponent()>();

        $r5 = virtualinvoke $r2.<javax.swing.JComponent: java.awt.Dimension getPreferredSize()>();

     label2:
        r3 = $r5;

        $r4 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Insets getOverlayLocationInsets()>();

        if $r4 == null goto label3;

        $i1 = $r5.<java.awt.Dimension: int width>;

        $i0 = $r4.<java.awt.Insets: int left>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $i3 = $r4.<java.awt.Insets: int right>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $i5 = $i2 + $i4;

        $i6 = $i1 + $i5;

        $r5.<java.awt.Dimension: int width> = $i6;

        $i8 = $r5.<java.awt.Dimension: int height>;

        $i7 = $r4.<java.awt.Insets: int top>;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        $i10 = $r4.<java.awt.Insets: int bottom>;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i10);

        $i12 = $i9 + $i11;

        $i13 = $i8 + $i12;

        $r5.<java.awt.Dimension: int height> = $i13;

     label3:
        return r3;
    }

    public void setPreferredSize(java.awt.Dimension)
    {
        java.awt.Insets $r3;
        com.jidesoft.swing.DefaultOverlayable r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        javax.swing.JComponent $r2, $r4;
        java.awt.Dimension r1;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r1 := @parameter0: java.awt.Dimension;

        specialinvoke r0.<javax.swing.JPanel: void setPreferredSize(java.awt.Dimension)>(r1);

        $r2 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent getActualComponent()>();

        if $r2 == null goto label2;

        if r1 == null goto label1;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Insets getOverlayLocationInsets()>();

        if $r3 == null goto label1;

        $i1 = r1.<java.awt.Dimension: int width>;

        $i0 = $r3.<java.awt.Insets: int left>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $i3 = $r3.<java.awt.Insets: int right>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $i5 = $i2 + $i4;

        $i6 = $i1 - $i5;

        r1.<java.awt.Dimension: int width> = $i6;

        $i7 = r1.<java.awt.Dimension: int width>;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        r1.<java.awt.Dimension: int width> = $i8;

        $i10 = r1.<java.awt.Dimension: int height>;

        $i9 = $r3.<java.awt.Insets: int top>;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i9);

        $i12 = $r3.<java.awt.Insets: int bottom>;

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i12);

        $i14 = $i11 + $i13;

        $i15 = $i10 - $i14;

        r1.<java.awt.Dimension: int height> = $i15;

        $i16 = r1.<java.awt.Dimension: int height>;

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i16);

        r1.<java.awt.Dimension: int height> = $i17;

     label1:
        $r4 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent getActualComponent()>();

        virtualinvoke $r4.<javax.swing.JComponent: void setPreferredSize(java.awt.Dimension)>(r1);

     label2:
        return;
    }

    public java.awt.Dimension getMinimumSize()
    {
        java.awt.Insets $r4;
        com.jidesoft.swing.DefaultOverlayable r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        javax.swing.JComponent $r1, $r2;
        java.awt.Dimension r3, $r5;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent getActualComponent()>();

        if $r1 != null goto label1;

        $r5 = new java.awt.Dimension;

        specialinvoke $r5.<java.awt.Dimension: void <init>(int,int)>(0, 0);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent getActualComponent()>();

        $r5 = virtualinvoke $r2.<javax.swing.JComponent: java.awt.Dimension getMinimumSize()>();

     label2:
        r3 = $r5;

        $r4 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Insets getOverlayLocationInsets()>();

        if $r4 == null goto label3;

        $i1 = $r5.<java.awt.Dimension: int width>;

        $i0 = $r4.<java.awt.Insets: int left>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $i3 = $r4.<java.awt.Insets: int right>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $i5 = $i2 + $i4;

        $i6 = $i1 + $i5;

        $r5.<java.awt.Dimension: int width> = $i6;

        $i8 = $r5.<java.awt.Dimension: int height>;

        $i7 = $r4.<java.awt.Insets: int top>;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        $i10 = $r4.<java.awt.Insets: int bottom>;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i10);

        $i12 = $i9 + $i11;

        $i13 = $i8 + $i12;

        $r5.<java.awt.Dimension: int height> = $i13;

     label3:
        return r3;
    }

    public void setMinimumSize(java.awt.Dimension)
    {
        java.awt.Insets $r3;
        com.jidesoft.swing.DefaultOverlayable r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        javax.swing.JComponent $r2, $r4;
        java.awt.Dimension r1;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r1 := @parameter0: java.awt.Dimension;

        specialinvoke r0.<javax.swing.JPanel: void setMinimumSize(java.awt.Dimension)>(r1);

        $r2 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent getActualComponent()>();

        if $r2 == null goto label2;

        if r1 == null goto label1;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Insets getOverlayLocationInsets()>();

        if $r3 == null goto label1;

        $i1 = r1.<java.awt.Dimension: int width>;

        $i0 = $r3.<java.awt.Insets: int left>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $i3 = $r3.<java.awt.Insets: int right>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $i5 = $i2 + $i4;

        $i6 = $i1 - $i5;

        r1.<java.awt.Dimension: int width> = $i6;

        $i7 = r1.<java.awt.Dimension: int width>;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        r1.<java.awt.Dimension: int width> = $i8;

        $i10 = r1.<java.awt.Dimension: int height>;

        $i9 = $r3.<java.awt.Insets: int top>;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i9);

        $i12 = $r3.<java.awt.Insets: int bottom>;

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i12);

        $i14 = $i11 + $i13;

        $i15 = $i10 - $i14;

        r1.<java.awt.Dimension: int height> = $i15;

        $i16 = r1.<java.awt.Dimension: int height>;

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i16);

        r1.<java.awt.Dimension: int height> = $i17;

     label1:
        $r4 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent getActualComponent()>();

        virtualinvoke $r4.<javax.swing.JComponent: void setMinimumSize(java.awt.Dimension)>(r1);

     label2:
        return;
    }

    public void setBounds(int, int, int, int)
    {
        java.awt.Insets $r1;
        com.jidesoft.swing.DefaultOverlayable r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15;
        javax.swing.JComponent $r2, $r3;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        i12 := @parameter0: int;

        i13 := @parameter1: int;

        i14 := @parameter2: int;

        i15 := @parameter3: int;

        specialinvoke r0.<javax.swing.JPanel: void setBounds(int,int,int,int)>(i12, i13, i14, i15);

        $r1 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Insets getOverlayLocationInsets()>();

        if $r1 == null goto label1;

        $i0 = $r1.<java.awt.Insets: int left>;

        i12 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $i1 = $r1.<java.awt.Insets: int top>;

        i13 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        $i2 = $r1.<java.awt.Insets: int left>;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $i4 = $r1.<java.awt.Insets: int right>;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

        $i6 = $i3 + $i5;

        i14 = i14 - $i6;

        $i7 = $r1.<java.awt.Insets: int top>;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        $i9 = $r1.<java.awt.Insets: int bottom>;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i9);

        $i11 = $i8 + $i10;

        i15 = i15 - $i11;

     label1:
        $r2 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent getActualComponent()>();

        if $r2 == null goto label2;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent getActualComponent()>();

        virtualinvoke $r3.<javax.swing.JComponent: void setBounds(int,int,int,int)>(i12, i13, i14, i15);

     label2:
        specialinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void updateLocation()>();

        return;
    }

    private void updateLocation()
    {
        javax.swing.JComponent r2;
        java.awt.Rectangle $r3;
        javax.swing.JComponent[] $r1;
        int i0, i1;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent[] getOverlayComponents()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = $r1[i1];

        if r2 != null goto label2;

        return;

     label2:
        $r3 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Rectangle getOverlayComponentBounds(javax.swing.JComponent)>(r2);

        virtualinvoke r2.<javax.swing.JComponent: void setBounds(java.awt.Rectangle)>($r3);

        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    protected java.awt.Rectangle getOverlayComponentBounds(javax.swing.JComponent)
    {
        com.jidesoft.swing.DefaultOverlayable r0;
        java.awt.Container $r8;
        java.awt.Dimension $r7;
        java.awt.Rectangle $r2, $r4, r10, $r11;
        java.awt.Insets $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, i61, i62;
        javax.swing.JComponent $r1, $r3, r6, $r9;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r6 := @parameter0: javax.swing.JComponent;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent getActualComponent()>();

        $r2 = virtualinvoke $r1.<java.awt.Component: java.awt.Rectangle getBounds()>();

        r10 = $r2;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent getActualComponent()>();

        if $r1 == $r3 goto label01;

        $r8 = virtualinvoke $r1.<java.awt.Component: java.awt.Container getParent()>();

        $r9 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent getActualComponent()>();

        r10 = staticinvoke <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>($r8, $r2, $r9);

     label01:
        $r4 = new java.awt.Rectangle;

        specialinvoke $r4.<java.awt.Rectangle: void <init>(java.awt.Rectangle)>(r10);

        $r5 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Insets getOverlayLocationInsets()>();

        $i1 = $r4.<java.awt.Rectangle: int x>;

        $i0 = $r5.<java.awt.Insets: int left>;

        $i2 = $i1 - $i0;

        $r4.<java.awt.Rectangle: int x> = $i2;

        $i4 = $r4.<java.awt.Rectangle: int y>;

        $i3 = $r5.<java.awt.Insets: int top>;

        $i5 = $i4 - $i3;

        $r4.<java.awt.Rectangle: int y> = $i5;

        $i9 = $r4.<java.awt.Rectangle: int width>;

        $i7 = $r5.<java.awt.Insets: int left>;

        $i6 = $r5.<java.awt.Insets: int right>;

        $i8 = $i7 + $i6;

        $i10 = $i9 + $i8;

        $r4.<java.awt.Rectangle: int width> = $i10;

        $i14 = $r4.<java.awt.Rectangle: int height>;

        $i12 = $r5.<java.awt.Insets: int top>;

        $i11 = $r5.<java.awt.Insets: int bottom>;

        $i13 = $i12 + $i11;

        $i15 = $i14 + $i13;

        $r4.<java.awt.Rectangle: int height> = $i15;

        i61 = 0;

        i62 = 0;

        $r7 = virtualinvoke r6.<javax.swing.JComponent: java.awt.Dimension getPreferredSize()>();

        $i59 = $r7.<java.awt.Dimension: int width>;

        $i60 = $r7.<java.awt.Dimension: int height>;

        $i16 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: int getOverlayLocation(javax.swing.JComponent)>(r6);

        tableswitch($i16)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label08;
            case 3: goto label06;
            case 4: goto label10;
            case 5: goto label04;
            case 6: goto label09;
            case 7: goto label05;
            case 8: goto label07;
            default: goto label11;
        };

     label02:
        $i54 = r10.<java.awt.Rectangle: int x>;

        $i51 = r10.<java.awt.Rectangle: int width>;

        $i52 = $i51 - $i59;

        $i53 = $i52 / 2;

        i61 = $i54 + $i53;

        $i58 = r10.<java.awt.Rectangle: int y>;

        $i55 = r10.<java.awt.Rectangle: int height>;

        $i56 = $i55 - $i60;

        $i57 = $i56 / 2;

        i62 = $i58 + $i57;

        goto label11;

     label03:
        $i50 = r10.<java.awt.Rectangle: int x>;

        $i47 = r10.<java.awt.Rectangle: int width>;

        $i48 = $i47 - $i59;

        $i49 = $i48 / 2;

        i61 = $i50 + $i49;

        i62 = $r4.<java.awt.Rectangle: int y>;

        goto label11;

     label04:
        $i27 = r10.<java.awt.Rectangle: int x>;

        $i24 = r10.<java.awt.Rectangle: int width>;

        $i25 = $i24 - $i59;

        $i26 = $i25 / 2;

        i61 = $i27 + $i26;

        $i29 = $r4.<java.awt.Rectangle: int y>;

        $i28 = $r4.<java.awt.Rectangle: int height>;

        $i30 = $i29 + $i28;

        i62 = $i30 - $i60;

        goto label11;

     label05:
        i61 = $r4.<java.awt.Rectangle: int x>;

        $i20 = r10.<java.awt.Rectangle: int y>;

        $i17 = r10.<java.awt.Rectangle: int height>;

        $i18 = $i17 - $i60;

        $i19 = $i18 / 2;

        i62 = $i20 + $i19;

        goto label11;

     label06:
        $i38 = $r4.<java.awt.Rectangle: int x>;

        $i37 = $r4.<java.awt.Rectangle: int width>;

        $i39 = $i38 + $i37;

        i61 = $i39 - $i59;

        $i43 = r10.<java.awt.Rectangle: int y>;

        $i40 = r10.<java.awt.Rectangle: int height>;

        $i41 = $i40 - $i60;

        $i42 = $i41 / 2;

        i62 = $i43 + $i42;

        goto label11;

     label07:
        i61 = $r4.<java.awt.Rectangle: int x>;

        i62 = $r4.<java.awt.Rectangle: int y>;

        goto label11;

     label08:
        $i45 = $r4.<java.awt.Rectangle: int x>;

        $i44 = $r4.<java.awt.Rectangle: int width>;

        $i46 = $i45 + $i44;

        i61 = $i46 - $i59;

        i62 = $r4.<java.awt.Rectangle: int y>;

        goto label11;

     label09:
        i61 = $r4.<java.awt.Rectangle: int x>;

        $i22 = $r4.<java.awt.Rectangle: int y>;

        $i21 = $r4.<java.awt.Rectangle: int height>;

        $i23 = $i22 + $i21;

        i62 = $i23 - $i60;

        goto label11;

     label10:
        $i32 = $r4.<java.awt.Rectangle: int x>;

        $i31 = $r4.<java.awt.Rectangle: int width>;

        $i33 = $i32 + $i31;

        i61 = $i33 - $i59;

        $i35 = $r4.<java.awt.Rectangle: int y>;

        $i34 = $r4.<java.awt.Rectangle: int height>;

        $i36 = $i35 + $i34;

        i62 = $i36 - $i60;

     label11:
        $r11 = new java.awt.Rectangle;

        specialinvoke $r11.<java.awt.Rectangle: void <init>(int,int,int,int)>(i61, i62, $i59, $i60);

        return $r11;
    }

    public int getOverlayLocation(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        java.util.Map $r2;
        int $i0, $i2;
        java.lang.Object $r3;
        java.lang.Integer r4;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = r0.<com.jidesoft.swing.DefaultOverlayable: java.util.Map _overlayLocations>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.Integer) $r3;

        if r4 == null goto label1;

        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        $i2 = (int) -1;

        return $i2;
    }

    public void setOverlayLocation(javax.swing.JComponent, int)
    {
        javax.swing.JComponent r1;
        int i0;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r1 := @parameter0: javax.swing.JComponent;

        i0 := @parameter1: int;

        specialinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void setOverlayLocation(javax.swing.JComponent,java.awt.Component,int)>(r1, null, i0);

        return;
    }

    private void setOverlayLocation(javax.swing.JComponent, java.awt.Component, int)
    {
        javax.swing.JComponent r1;
        java.lang.Integer $r3;
        java.awt.Component r4;
        com.jidesoft.swing.DefaultOverlayable r0;
        java.util.Map $r2;
        int $i0, i1;
        boolean z0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r1 := @parameter0: javax.swing.JComponent;

        r4 := @parameter1: java.awt.Component;

        i1 := @parameter2: int;

        z0 = 0;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: int getOverlayLocation(javax.swing.JComponent)>(r1);

        if $i0 == i1 goto label1;

        $r2 = r0.<com.jidesoft.swing.DefaultOverlayable: java.util.Map _overlayLocations>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        z0 = 1;

     label1:
        if z0 == 0 goto label2;

        specialinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void updateLocation()>();

     label2:
        return;
    }

    public void addOverlayComponent(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        int $i1;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r1 := @parameter0: javax.swing.JComponent;

        $i1 = (int) -1;

        virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void addOverlayComponent(javax.swing.JComponent,int,int)>(r1, 0, $i1);

        return;
    }

    public void addOverlayComponent(javax.swing.JComponent, int)
    {
        javax.swing.JComponent r1;
        int i0, $i2;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r1 := @parameter0: javax.swing.JComponent;

        i0 := @parameter1: int;

        $i2 = (int) -1;

        virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void addOverlayComponent(javax.swing.JComponent,int,int)>(r1, i0, $i2);

        return;
    }

    public void addOverlayComponent(javax.swing.JComponent, int, int)
    {
        javax.swing.JComponent r1;
        int i0, i1;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r1 := @parameter0: javax.swing.JComponent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void addOverlayComponent(javax.swing.JComponent,java.awt.Component,int,int)>(r1, null, i0, i1);

        return;
    }

    private void addOverlayComponent(javax.swing.JComponent, java.awt.Component, int, int)
    {
        javax.swing.JComponent r1;
        java.awt.Component r4;
        com.jidesoft.swing.DefaultOverlayable r0;
        java.util.List $r2, $r3, $r5, $r6;
        int i0, i1, $i2, $i3, $i5;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r1 := @parameter0: javax.swing.JComponent;

        r4 := @parameter1: java.awt.Component;

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        $r2 = r0.<com.jidesoft.swing.DefaultOverlayable: java.util.List _overlayComponents>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<com.jidesoft.swing.DefaultOverlayable: java.util.List _overlayComponents>;

        interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>(r1);

     label1:
        $i5 = (int) -1;

        if i0 != $i5 goto label2;

        $r5 = r0.<com.jidesoft.swing.DefaultOverlayable: java.util.List _overlayComponents>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        $i2 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: int getComponentCount()>();

        $i3 = $i2 - 1;

        virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Component add(java.awt.Component,int)>(r1, $i3);

        goto label3;

     label2:
        $r3 = r0.<com.jidesoft.swing.DefaultOverlayable: java.util.List _overlayComponents>;

        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>(i0, r1);

        virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Component add(java.awt.Component,int)>(r1, i0);

     label3:
        specialinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void setOverlayLocation(javax.swing.JComponent,java.awt.Component,int)>(r1, r4, i1);

        return;
    }

    public void removeOverlayComponent(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        java.util.List $r2, $r3;
        java.util.Map $r4;
        com.jidesoft.swing.DefaultOverlayable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = r0.<com.jidesoft.swing.DefaultOverlayable: java.util.List _overlayComponents>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.jidesoft.swing.DefaultOverlayable: java.util.List _overlayComponents>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<com.jidesoft.swing.DefaultOverlayable: java.util.Map _overlayLocations>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void remove(java.awt.Component)>(r1);

     label1:
        return;
    }

    public javax.swing.JComponent[] getOverlayComponents()
    {
        java.util.List $r1, $r2;
        java.lang.Object[] $r4;
        javax.swing.JComponent[] $r3, $r5;
        int $i0;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        $r2 = r0.<com.jidesoft.swing.DefaultOverlayable: java.util.List _overlayComponents>;

        $r1 = r0.<com.jidesoft.swing.DefaultOverlayable: java.util.List _overlayComponents>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = newarray (javax.swing.JComponent)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (javax.swing.JComponent[]) $r4;

        return $r5;
    }

    public javax.swing.JComponent getActualComponent()
    {
        javax.swing.JComponent $r1;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        $r1 = r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent _actualComponent>;

        return $r1;
    }

    public void setActualComponent(javax.swing.JComponent)
    {
        javax.swing.JComponent $r1, r2, $r3, $r4, $r6, $r7;
        com.jidesoft.swing.DefaultOverlayable r0;
        java.awt.Container $r5;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r2 := @parameter0: javax.swing.JComponent;

        $r1 = r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent _actualComponent>;

        if $r1 == null goto label1;

        $r6 = r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent _actualComponent>;

        virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void remove(java.awt.Component)>($r6);

        $r7 = r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent _actualComponent>;

        virtualinvoke $r7.<javax.swing.JComponent: void putClientProperty(java.lang.Object,java.lang.Object)>("Overlayable.overlayable", null);

     label1:
        r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent _actualComponent> = r2;

        $r3 = r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent _actualComponent>;

        virtualinvoke $r3.<javax.swing.JComponent: void putClientProperty(java.lang.Object,java.lang.Object)>("Overlayable.overlayable", r0);

        $r4 = r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent _actualComponent>;

        virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Component add(java.awt.Component)>($r4);

        $r5 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Container getParent()>();

        if $r5 == null goto label2;

        virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void invalidate()>();

        virtualinvoke $r5.<java.awt.Container: void validate()>();

     label2:
        return;
    }

    public java.awt.Insets getOverlayLocationInsets()
    {
        java.awt.Insets $r1;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        $r1 = r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Insets _overlayLocationInsets>;

        return $r1;
    }

    public void setOverlayLocationInsets(java.awt.Insets)
    {
        java.awt.Insets r1;
        java.awt.Container $r2;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r1 := @parameter0: java.awt.Insets;

        r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Insets _overlayLocationInsets> = r1;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: java.awt.Container getParent()>();

        if $r2 == null goto label1;

        virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void invalidate()>();

        virtualinvoke $r2.<java.awt.Container: void validate()>();

     label1:
        return;
    }

    public void setOverlayVisible(boolean)
    {
        javax.swing.JComponent r2;
        javax.swing.JComponent[] $r1;
        int i0, i1;
        com.jidesoft.swing.DefaultOverlayable r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.DefaultOverlayable: javax.swing.JComponent[] getOverlayComponents()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = $r1[i1];

        virtualinvoke r2.<javax.swing.JComponent: void setVisible(boolean)>(z0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void componentResized(java.awt.event.ComponentEvent)
    {
        java.awt.event.ComponentEvent r1;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r1 := @parameter0: java.awt.event.ComponentEvent;

        specialinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void updateLocation()>();

        return;
    }

    public void componentMoved(java.awt.event.ComponentEvent)
    {
        java.awt.event.ComponentEvent r1;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r1 := @parameter0: java.awt.event.ComponentEvent;

        specialinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void updateLocation()>();

        return;
    }

    public void componentShown(java.awt.event.ComponentEvent)
    {
        java.awt.event.ComponentEvent r1;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r1 := @parameter0: java.awt.event.ComponentEvent;

        specialinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void updateLocation()>();

        return;
    }

    public void componentHidden(java.awt.event.ComponentEvent)
    {
        java.awt.event.ComponentEvent r1;
        com.jidesoft.swing.DefaultOverlayable r0;

        r0 := @this: com.jidesoft.swing.DefaultOverlayable;

        r1 := @parameter0: java.awt.event.ComponentEvent;

        specialinvoke r0.<com.jidesoft.swing.DefaultOverlayable: void updateLocation()>();

        return;
    }
}
