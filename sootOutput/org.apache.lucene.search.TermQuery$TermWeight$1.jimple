class org.apache.lucene.search.TermQuery$TermWeight$1 extends org.apache.lucene.util.ReaderUtil$Gather
{
    final org.apache.lucene.search.TermQuery val$this$0;
    final int[] val$dfSum;
    final org.apache.lucene.search.TermQuery$TermWeight this$1;

    void <init>(org.apache.lucene.search.TermQuery$TermWeight, org.apache.lucene.index.IndexReader, org.apache.lucene.search.TermQuery, int[])
    {
        org.apache.lucene.search.TermQuery r2;
        org.apache.lucene.search.TermQuery$TermWeight$1 r0;
        int[] r3;
        org.apache.lucene.search.TermQuery$TermWeight r1;
        org.apache.lucene.index.IndexReader r4;

        r0 := @this: org.apache.lucene.search.TermQuery$TermWeight$1;

        r1 := @parameter0: org.apache.lucene.search.TermQuery$TermWeight;

        r4 := @parameter1: org.apache.lucene.index.IndexReader;

        r2 := @parameter2: org.apache.lucene.search.TermQuery;

        r3 := @parameter3: int[];

        r0.<org.apache.lucene.search.TermQuery$TermWeight$1: org.apache.lucene.search.TermQuery$TermWeight this$1> = r1;

        r0.<org.apache.lucene.search.TermQuery$TermWeight$1: org.apache.lucene.search.TermQuery val$this$0> = r2;

        r0.<org.apache.lucene.search.TermQuery$TermWeight$1: int[] val$dfSum> = r3;

        specialinvoke r0.<org.apache.lucene.util.ReaderUtil$Gather: void <init>(org.apache.lucene.index.IndexReader)>(r4);

        return;
    }

    protected void add(int, org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.search.TermQuery$TermWeight$1 r1;
        org.apache.lucene.index.Term $r4;
        java.util.Set $r7;
        org.apache.lucene.search.TermQuery$TermWeight $r2, $r6;
        java.lang.Integer $r8;
        org.apache.lucene.search.TermQuery $r3;
        int[] $r5;
        int $i0, $i1, $i2, $i3, i4;
        org.apache.lucene.index.IndexReader r0;

        r1 := @this: org.apache.lucene.search.TermQuery$TermWeight$1;

        i4 := @parameter0: int;

        r0 := @parameter1: org.apache.lucene.index.IndexReader;

        $r2 = r1.<org.apache.lucene.search.TermQuery$TermWeight$1: org.apache.lucene.search.TermQuery$TermWeight this$1>;

        $r3 = $r2.<org.apache.lucene.search.TermQuery$TermWeight: org.apache.lucene.search.TermQuery this$0>;

        $r4 = staticinvoke <org.apache.lucene.search.TermQuery: org.apache.lucene.index.Term access$000(org.apache.lucene.search.TermQuery)>($r3);

        $i0 = virtualinvoke r0.<org.apache.lucene.index.IndexReader: int docFreq(org.apache.lucene.index.Term)>($r4);

        $r5 = r1.<org.apache.lucene.search.TermQuery$TermWeight$1: int[] val$dfSum>;

        $i1 = $r5[0];

        $i2 = $i1 + $i0;

        $r5[0] = $i2;

        if $i0 <= 0 goto label1;

        $r6 = r1.<org.apache.lucene.search.TermQuery$TermWeight$1: org.apache.lucene.search.TermQuery$TermWeight this$1>;

        $r7 = staticinvoke <org.apache.lucene.search.TermQuery$TermWeight: java.util.Set access$100(org.apache.lucene.search.TermQuery$TermWeight)>($r6);

        $i3 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r8);

     label1:
        return;
    }
}
