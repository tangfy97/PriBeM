public class org.codehaus.groovy.ast.expr.ClosureExpression extends org.codehaus.groovy.ast.expr.Expression
{
    private org.codehaus.groovy.ast.Parameter[] parameters;
    private org.codehaus.groovy.ast.stmt.Statement code;
    private org.codehaus.groovy.ast.VariableScope variableScope;

    public void <init>(org.codehaus.groovy.ast.Parameter[], org.codehaus.groovy.ast.stmt.Statement)
    {
        org.codehaus.groovy.ast.stmt.Statement r2;
        org.codehaus.groovy.ast.Parameter[] r1;
        org.codehaus.groovy.ast.ClassNode $r3;
        org.codehaus.groovy.ast.expr.ClosureExpression r0;

        r0 := @this: org.codehaus.groovy.ast.expr.ClosureExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.Parameter[];

        r2 := @parameter1: org.codehaus.groovy.ast.stmt.Statement;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.Expression: void <init>()>();

        r0.<org.codehaus.groovy.ast.expr.ClosureExpression: org.codehaus.groovy.ast.Parameter[] parameters> = r1;

        r0.<org.codehaus.groovy.ast.expr.ClosureExpression: org.codehaus.groovy.ast.stmt.Statement code> = r2;

        $r3 = <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode CLOSURE_TYPE>;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.Expression: void setType(org.codehaus.groovy.ast.ClassNode)>($r3);

        return;
    }

    public void visit(org.codehaus.groovy.ast.GroovyCodeVisitor)
    {
        org.codehaus.groovy.ast.GroovyCodeVisitor r0;
        org.codehaus.groovy.ast.expr.ClosureExpression r1;

        r1 := @this: org.codehaus.groovy.ast.expr.ClosureExpression;

        r0 := @parameter0: org.codehaus.groovy.ast.GroovyCodeVisitor;

        interfaceinvoke r0.<org.codehaus.groovy.ast.GroovyCodeVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>(r1);

        return;
    }

    public org.codehaus.groovy.ast.expr.Expression transformExpression(org.codehaus.groovy.ast.expr.ExpressionTransformer)
    {
        org.codehaus.groovy.ast.expr.ExpressionTransformer r1;
        org.codehaus.groovy.ast.expr.ClosureExpression r0;

        r0 := @this: org.codehaus.groovy.ast.expr.ClosureExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.ExpressionTransformer;

        return r0;
    }

    public java.lang.String toString()
    {
        org.codehaus.groovy.ast.stmt.Statement $r8;
        org.codehaus.groovy.ast.expr.ClosureExpression r1;
        org.codehaus.groovy.ast.Parameter[] $r4;
        java.lang.StringBuffer $r0, $r3, $r6, $r7, $r9, $r10;
        java.lang.String $r2, $r5, $r11;

        r1 := @this: org.codehaus.groovy.ast.expr.ClosureExpression;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = r1.<org.codehaus.groovy.ast.expr.ClosureExpression: org.codehaus.groovy.ast.Parameter[] parameters>;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toString(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{ ");

        $r8 = r1.<org.codehaus.groovy.ast.expr.ClosureExpression: org.codehaus.groovy.ast.stmt.Statement code>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" }");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;
    }

    public org.codehaus.groovy.ast.stmt.Statement getCode()
    {
        org.codehaus.groovy.ast.stmt.Statement $r1;
        org.codehaus.groovy.ast.expr.ClosureExpression r0;

        r0 := @this: org.codehaus.groovy.ast.expr.ClosureExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.ClosureExpression: org.codehaus.groovy.ast.stmt.Statement code>;

        return $r1;
    }

    public org.codehaus.groovy.ast.Parameter[] getParameters()
    {
        org.codehaus.groovy.ast.Parameter[] $r1;
        org.codehaus.groovy.ast.expr.ClosureExpression r0;

        r0 := @this: org.codehaus.groovy.ast.expr.ClosureExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.ClosureExpression: org.codehaus.groovy.ast.Parameter[] parameters>;

        return $r1;
    }

    public boolean isParameterSpecified()
    {
        org.codehaus.groovy.ast.Parameter[] $r1, $r2;
        int $i0;
        org.codehaus.groovy.ast.expr.ClosureExpression r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.expr.ClosureExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.ClosureExpression: org.codehaus.groovy.ast.Parameter[] parameters>;

        if $r1 == null goto label1;

        $r2 = r0.<org.codehaus.groovy.ast.expr.ClosureExpression: org.codehaus.groovy.ast.Parameter[] parameters>;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.codehaus.groovy.ast.VariableScope getVariableScope()
    {
        org.codehaus.groovy.ast.VariableScope $r1;
        org.codehaus.groovy.ast.expr.ClosureExpression r0;

        r0 := @this: org.codehaus.groovy.ast.expr.ClosureExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.ClosureExpression: org.codehaus.groovy.ast.VariableScope variableScope>;

        return $r1;
    }

    public void setVariableScope(org.codehaus.groovy.ast.VariableScope)
    {
        org.codehaus.groovy.ast.VariableScope r1;
        org.codehaus.groovy.ast.expr.ClosureExpression r0;

        r0 := @this: org.codehaus.groovy.ast.expr.ClosureExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.VariableScope;

        r0.<org.codehaus.groovy.ast.expr.ClosureExpression: org.codehaus.groovy.ast.VariableScope variableScope> = r1;

        return;
    }
}
