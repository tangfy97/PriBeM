public class org.apache.pdfbox.cos.COSDocument extends org.apache.pdfbox.cos.COSBase implements java.io.Closeable
{
    private static final org.apache.commons.logging.Log LOG;
    private float version;
    private final java.util.Map objectPool;
    private final java.util.Map xrefTable;
    private org.apache.pdfbox.cos.COSDictionary trailer;
    private org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface signatureInterface;
    private final org.apache.pdfbox.io.RandomAccess scratchFile;
    private final java.io.File tmpFile;
    private java.lang.String headerString;
    private boolean warnMissingClose;
    private boolean isDecrypted;
    private long startXref;
    private boolean closed;
    private final boolean forceParsing;

    public void <init>(org.apache.pdfbox.io.RandomAccess, boolean)
    {
        org.apache.pdfbox.cos.COSDocument r0;
        java.util.HashMap $r1, $r2;
        org.apache.pdfbox.io.RandomAccess r7;
        float $f0;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        boolean z0;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        r7 := @parameter0: org.apache.pdfbox.io.RandomAccess;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.pdfbox.cos.COSBase: void <init>()>();

        r0.<org.apache.pdfbox.cos.COSDocument: float version> = 1.4F;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map xrefTable> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%PDF-");

        $f0 = r0.<org.apache.pdfbox.cos.COSDocument: float version>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.pdfbox.cos.COSDocument: java.lang.String headerString> = $r6;

        r0.<org.apache.pdfbox.cos.COSDocument: boolean warnMissingClose> = 1;

        r0.<org.apache.pdfbox.cos.COSDocument: boolean isDecrypted> = 0;

        r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 0;

        r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.RandomAccess scratchFile> = r7;

        r0.<org.apache.pdfbox.cos.COSDocument: java.io.File tmpFile> = null;

        r0.<org.apache.pdfbox.cos.COSDocument: boolean forceParsing> = z0;

        return;
    }

    public void <init>(java.io.File, boolean) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDocument r0;
        java.util.HashMap $r1, $r2;
        java.io.File r7, $r8, $r10;
        org.apache.pdfbox.io.RandomAccessFile $r9;
        float $f0;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        boolean z0;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        r7 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.pdfbox.cos.COSBase: void <init>()>();

        r0.<org.apache.pdfbox.cos.COSDocument: float version> = 1.4F;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map xrefTable> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%PDF-");

        $f0 = r0.<org.apache.pdfbox.cos.COSDocument: float version>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.pdfbox.cos.COSDocument: java.lang.String headerString> = $r6;

        r0.<org.apache.pdfbox.cos.COSDocument: boolean warnMissingClose> = 1;

        r0.<org.apache.pdfbox.cos.COSDocument: boolean isDecrypted> = 0;

        r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 0;

        $r8 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("pdfbox-", ".tmp", r7);

        r0.<org.apache.pdfbox.cos.COSDocument: java.io.File tmpFile> = $r8;

        $r9 = new org.apache.pdfbox.io.RandomAccessFile;

        $r10 = r0.<org.apache.pdfbox.cos.COSDocument: java.io.File tmpFile>;

        specialinvoke $r9.<org.apache.pdfbox.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r10, "rw");

        r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.RandomAccess scratchFile> = $r9;

        r0.<org.apache.pdfbox.cos.COSDocument: boolean forceParsing> = z0;

        return;
    }

    public void <init>()
    {
        org.apache.pdfbox.cos.COSDocument r0;
        org.apache.pdfbox.io.RandomAccessBuffer $r1;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $r1 = new org.apache.pdfbox.io.RandomAccessBuffer;

        specialinvoke $r1.<org.apache.pdfbox.io.RandomAccessBuffer: void <init>()>();

        specialinvoke r0.<org.apache.pdfbox.cos.COSDocument: void <init>(org.apache.pdfbox.io.RandomAccess,boolean)>($r1, 0);

        return;
    }

    public void <init>(java.io.File) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDocument r0;
        java.io.File r1;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.pdfbox.cos.COSDocument: void <init>(java.io.File,boolean)>(r1, 0);

        return;
    }

    public void <init>(org.apache.pdfbox.io.RandomAccess)
    {
        org.apache.pdfbox.io.RandomAccess r1;
        org.apache.pdfbox.cos.COSDocument r0;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        r1 := @parameter0: org.apache.pdfbox.io.RandomAccess;

        specialinvoke r0.<org.apache.pdfbox.cos.COSDocument: void <init>(org.apache.pdfbox.io.RandomAccess,boolean)>(r1, 0);

        return;
    }

    public org.apache.pdfbox.io.RandomAccess getScratchFile()
    {
        org.apache.pdfbox.cos.COSDocument r0;
        org.apache.pdfbox.io.RandomAccess $r2;
        org.apache.commons.logging.Log $r1;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>;

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.RandomAccess scratchFile>;

        return $r2;

     label1:
        $r1 = <org.apache.pdfbox.cos.COSDocument: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void error(java.lang.Object)>("Can\'t access the scratch file as it is already closed!");

        return null;
    }

    public org.apache.pdfbox.cos.COSStream createCOSStream()
    {
        org.apache.pdfbox.io.RandomAccess $r2;
        org.apache.pdfbox.cos.COSDocument r1;
        org.apache.pdfbox.cos.COSStream $r0;

        r1 := @this: org.apache.pdfbox.cos.COSDocument;

        $r0 = new org.apache.pdfbox.cos.COSStream;

        $r2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.RandomAccess getScratchFile()>();

        specialinvoke $r0.<org.apache.pdfbox.cos.COSStream: void <init>(org.apache.pdfbox.io.RandomAccess)>($r2);

        return $r0;
    }

    public org.apache.pdfbox.cos.COSStream createCOSStream(org.apache.pdfbox.cos.COSDictionary)
    {
        org.apache.pdfbox.cos.COSDictionary r1;
        org.apache.pdfbox.cos.COSDocument r2;
        org.apache.pdfbox.io.RandomAccess $r3;
        org.apache.pdfbox.cos.COSStream $r0;

        r2 := @this: org.apache.pdfbox.cos.COSDocument;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        $r0 = new org.apache.pdfbox.cos.COSStream;

        $r3 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.RandomAccess getScratchFile()>();

        specialinvoke $r0.<org.apache.pdfbox.cos.COSStream: void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)>(r1, $r3);

        return $r0;
    }

    public org.apache.pdfbox.cos.COSObject getObjectByType(java.lang.String) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.cos.COSDocument r0;
        org.apache.pdfbox.cos.COSObject $r3;
        java.lang.String r1;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSObject getObjectByType(org.apache.pdfbox.cos.COSName)>($r2);

        return $r3;
    }

    public org.apache.pdfbox.cos.COSObject getObjectByType(org.apache.pdfbox.cos.COSName) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSObject r5;
        java.lang.ClassCastException $r17;
        java.util.Map $r1;
        java.lang.String $r14;
        boolean $z0, $z1, $z2, $z3;
        org.apache.pdfbox.cos.COSName $r7, r15, r16;
        org.apache.pdfbox.cos.COSDocument r0;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        org.apache.pdfbox.cos.COSDictionary r19;
        org.apache.pdfbox.cos.COSBase $r6, $r8;
        java.lang.Object $r4;
        java.lang.StringBuilder $r9, $r11, $r12, $r13;
        org.apache.commons.logging.Log $r10, $r18;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        r16 := @parameter0: org.apache.pdfbox.cos.COSName;

        $r1 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.pdfbox.cos.COSObject) $r4;

        $r6 = virtualinvoke r5.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>();

        $z1 = $r6 instanceof org.apache.pdfbox.cos.COSDictionary;

        if $z1 == 0 goto label8;

     label2:
        r19 = (org.apache.pdfbox.cos.COSDictionary) $r6;

        $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>;

        $r8 = virtualinvoke r19.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r7);

        if $r8 == null goto label5;

        $z2 = $r8 instanceof org.apache.pdfbox.cos.COSName;

        if $z2 == 0 goto label5;

        r15 = (org.apache.pdfbox.cos.COSName) $r8;

        $z3 = virtualinvoke r15.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r16);

        if $z3 == 0 goto label4;

     label3:
        return r5;

     label4:
        goto label6;

     label5:
        if $r8 == null goto label6;

        $r10 = <org.apache.pdfbox.cos.COSDocument: org.apache.commons.logging.Log LOG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a /Name object after /Type, got \'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' instead");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r14);

     label6:
        goto label8;

     label7:
        $r17 := @caughtexception;

        $r18 = <org.apache.pdfbox.cos.COSDocument: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r18.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r17, $r17);

     label8:
        goto label1;

     label9:
        return null;

        catch java.lang.ClassCastException from label2 to label3 with label7;
        catch java.lang.ClassCastException from label4 to label6 with label7;
    }

    public java.util.List getObjectsByType(java.lang.String) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.cos.COSDocument r0;
        java.util.List $r3;
        java.lang.String r1;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjectsByType(org.apache.pdfbox.cos.COSName)>($r2);

        return $r3;
    }

    public java.util.List getObjectsByType(org.apache.pdfbox.cos.COSName) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSObject r6;
        java.lang.ClassCastException $r18;
        java.util.ArrayList $r0;
        java.util.Map $r2;
        java.lang.String $r15;
        boolean $z0, $z1, $z2, $z3;
        org.apache.pdfbox.cos.COSName $r8, r16, r17;
        org.apache.pdfbox.cos.COSDocument r1;
        java.util.Iterator $r4;
        java.util.Collection $r3;
        org.apache.pdfbox.cos.COSDictionary r20;
        org.apache.pdfbox.cos.COSBase $r7, $r9;
        java.lang.Object $r5;
        java.lang.StringBuilder $r10, $r12, $r13, $r14;
        org.apache.commons.logging.Log $r11, $r19;

        r1 := @this: org.apache.pdfbox.cos.COSDocument;

        r17 := @parameter0: org.apache.pdfbox.cos.COSName;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.pdfbox.cos.COSObject) $r5;

        $r7 = virtualinvoke r6.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>();

        $z1 = $r7 instanceof org.apache.pdfbox.cos.COSDictionary;

        if $z1 == 0 goto label7;

     label2:
        r20 = (org.apache.pdfbox.cos.COSDictionary) $r7;

        $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>;

        $r9 = virtualinvoke r20.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r8);

        if $r9 == null goto label4;

        $z2 = $r9 instanceof org.apache.pdfbox.cos.COSName;

        if $z2 == 0 goto label4;

        r16 = (org.apache.pdfbox.cos.COSName) $r9;

        $z3 = virtualinvoke r16.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r17);

        if $z3 == 0 goto label3;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r6);

     label3:
        goto label5;

     label4:
        if $r9 == null goto label5;

        $r11 = <org.apache.pdfbox.cos.COSDocument: org.apache.commons.logging.Log LOG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a /Name object after /Type, got \'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' instead");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

     label5:
        goto label7;

     label6:
        $r18 := @caughtexception;

        $r19 = <org.apache.pdfbox.cos.COSDocument: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r19.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r18, $r18);

     label7:
        goto label1;

     label8:
        return $r0;

        catch java.lang.ClassCastException from label2 to label5 with label6;
    }

    public void print()
    {
        java.io.PrintStream $r6;
        org.apache.pdfbox.cos.COSDocument r0;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        org.apache.pdfbox.cos.COSObject r5;
        java.util.Map $r1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $r1 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.pdfbox.cos.COSObject) $r4;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.Object)>(r5);

        goto label1;

     label2:
        return;
    }

    public void setVersion(float)
    {
        org.apache.pdfbox.cos.COSDocument r0;
        byte $b0;
        float f0, $f1, $f2;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        f0 := @parameter0: float;

        $f1 = r0.<org.apache.pdfbox.cos.COSDocument: float version>;

        $b0 = f0 cmpl $f1;

        if $b0 == 0 goto label1;

        $r1 = r0.<org.apache.pdfbox.cos.COSDocument: java.lang.String headerString>;

        $f2 = r0.<org.apache.pdfbox.cos.COSDocument: float version>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f2);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>($r2, $r3);

        r0.<org.apache.pdfbox.cos.COSDocument: java.lang.String headerString> = $r4;

     label1:
        r0.<org.apache.pdfbox.cos.COSDocument: float version> = f0;

        return;
    }

    public float getVersion()
    {
        org.apache.pdfbox.cos.COSDocument r0;
        float $f0;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $f0 = r0.<org.apache.pdfbox.cos.COSDocument: float version>;

        return $f0;
    }

    public void setDecrypted()
    {
        org.apache.pdfbox.cos.COSDocument r0;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        r0.<org.apache.pdfbox.cos.COSDocument: boolean isDecrypted> = 1;

        return;
    }

    public boolean isEncrypted()
    {
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.cos.COSDocument r0;
        org.apache.pdfbox.cos.COSDictionary $r1, $r3;
        org.apache.pdfbox.cos.COSBase $r4;
        boolean $z0, z1, $z2;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean isDecrypted>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        z1 = 0;

        $r1 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer>;

        if $r1 == null goto label4;

        $r3 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer>;

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ENCRYPT>;

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2);

        if $r4 == null goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z1 = $z2;

     label4:
        return z1;
    }

    public org.apache.pdfbox.cos.COSDictionary getEncryptionDictionary()
    {
        org.apache.pdfbox.cos.COSName $r1;
        org.apache.pdfbox.cos.COSDictionary $r2, $r4;
        org.apache.pdfbox.cos.COSDocument r0;
        org.apache.pdfbox.cos.COSBase $r3;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $r2 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ENCRYPT>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        $r4 = (org.apache.pdfbox.cos.COSDictionary) $r3;

        return $r4;
    }

    public org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface getSignatureInterface()
    {
        org.apache.pdfbox.cos.COSDocument r0;
        org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface $r1;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $r1 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface signatureInterface>;

        return $r1;
    }

    public void setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)
    {
        org.apache.pdfbox.cos.COSDictionary r1, $r3;
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.cos.COSDocument r0;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        $r3 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer>;

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ENCRYPT>;

        virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r2, r1);

        return;
    }

    public java.util.List getSignatureDictionaries() throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSName $r6;
        org.apache.pdfbox.cos.COSDocument r0;
        java.util.Iterator $r3;
        org.apache.pdfbox.cos.COSDictionary r5, $r8;
        java.util.List $r1;
        org.apache.pdfbox.cos.COSBase $r7;
        java.lang.Object $r4;
        java.util.LinkedList $r2;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getSignatureFields(boolean)>(0);

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.pdfbox.cos.COSDictionary) $r4;

        $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName V>;

        $r7 = virtualinvoke r5.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r6);

        if $r7 == null goto label2;

        $r8 = (org.apache.pdfbox.cos.COSDictionary) $r7;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r8);

     label2:
        goto label1;

     label3:
        return $r2;
    }

    public java.util.List getSignatureFields(boolean) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSArray r7;
        org.apache.pdfbox.cos.COSObject $r1, r14;
        java.util.HashMap $r8;
        java.util.LinkedList $r10;
        boolean $z0, $z1, z2;
        org.apache.pdfbox.cos.COSName $r2, $r5, $r15, $r16, $r18;
        org.apache.pdfbox.cos.COSDocument r0;
        java.util.Iterator $r9;
        java.util.Collection $r11;
        org.apache.pdfbox.persistence.util.COSObjectKey $r20;
        org.apache.pdfbox.cos.COSDictionary r4, $r22;
        java.util.List $r23;
        org.apache.pdfbox.cos.COSBase $r3, $r6, r13, $r17, $r19, $r21;
        java.lang.Object $r12;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        z2 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSObject getCatalog()>();

        if $r1 == null goto label5;

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ACRO_FORM>;

        $r3 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2);

        r4 = (org.apache.pdfbox.cos.COSDictionary) $r3;

        if r4 == null goto label5;

        $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FIELDS>;

        $r6 = virtualinvoke r4.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5);

        r7 = (org.apache.pdfbox.cos.COSArray) $r6;

        if r7 == null goto label5;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r9 = virtualinvoke r7.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.pdfbox.cos.COSBase) $r12;

        r14 = (org.apache.pdfbox.cos.COSObject) r13;

        $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SIG>;

        $r15 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FT>;

        $r17 = virtualinvoke r14.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r15);

        $z1 = virtualinvoke $r16.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r17);

        if $z1 == 0 goto label3;

        $r18 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName V>;

        $r19 = virtualinvoke r14.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r18);

        if $r19 == null goto label2;

        if $r19 == null goto label3;

        if z2 != 0 goto label3;

     label2:
        $r20 = new org.apache.pdfbox.persistence.util.COSObjectKey;

        specialinvoke $r20.<org.apache.pdfbox.persistence.util.COSObjectKey: void <init>(org.apache.pdfbox.cos.COSObject)>(r14);

        $r21 = virtualinvoke r14.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>();

        $r22 = (org.apache.pdfbox.cos.COSDictionary) $r21;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r22);

     label3:
        goto label1;

     label4:
        $r10 = new java.util.LinkedList;

        $r11 = virtualinvoke $r8.<java.util.HashMap: java.util.Collection values()>();

        specialinvoke $r10.<java.util.LinkedList: void <init>(java.util.Collection)>($r11);

        return $r10;

     label5:
        $r23 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r23;
    }

    public org.apache.pdfbox.cos.COSArray getDocumentID()
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.cos.COSDocument r0;
        org.apache.pdfbox.cos.COSArray $r4;
        org.apache.pdfbox.cos.COSBase $r3;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>();

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ID>;

        $r3 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2);

        $r4 = (org.apache.pdfbox.cos.COSArray) $r3;

        return $r4;
    }

    public void setDocumentID(org.apache.pdfbox.cos.COSArray)
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSName $r3;
        org.apache.pdfbox.cos.COSDocument r0;
        org.apache.pdfbox.cos.COSArray r2;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        r2 := @parameter0: org.apache.pdfbox.cos.COSArray;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>();

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ID>;

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, r2);

        return;
    }

    public void setSignatureInterface(org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)
    {
        org.apache.pdfbox.cos.COSDocument r0;
        org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface r1;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface;

        r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface signatureInterface> = r1;

        return;
    }

    public org.apache.pdfbox.cos.COSObject getCatalog() throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSName $r1;
        org.apache.pdfbox.cos.COSDocument r0;
        org.apache.pdfbox.cos.COSObject $r2;
        java.io.IOException $r3;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CATALOG>;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSObject getObjectByType(org.apache.pdfbox.cos.COSName)>($r1);

        if $r2 != null goto label1;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Catalog cannot be found");

        throw $r3;

     label1:
        return $r2;
    }

    public java.util.List getObjects()
    {
        org.apache.pdfbox.cos.COSDocument r1;
        java.util.Map $r2;
        java.util.Collection $r3;
        java.util.ArrayList $r0;

        r1 := @this: org.apache.pdfbox.cos.COSDocument;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        return $r0;
    }

    public org.apache.pdfbox.cos.COSDictionary getTrailer()
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSDocument r0;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $r1 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer>;

        return $r1;
    }

    public void setTrailer(org.apache.pdfbox.cos.COSDictionary)
    {
        org.apache.pdfbox.cos.COSDictionary r1;
        org.apache.pdfbox.cos.COSDocument r0;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = r1;

        return;
    }

    public java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor) throws org.apache.pdfbox.exceptions.COSVisitorException
    {
        org.apache.pdfbox.cos.ICOSVisitor r0;
        org.apache.pdfbox.cos.COSDocument r1;
        java.lang.Object $r2;

        r1 := @this: org.apache.pdfbox.cos.COSDocument;

        r0 := @parameter0: org.apache.pdfbox.cos.ICOSVisitor;

        $r2 = interfaceinvoke r0.<org.apache.pdfbox.cos.ICOSVisitor: java.lang.Object visitFromDocument(org.apache.pdfbox.cos.COSDocument)>(r1);

        return $r2;
    }

    public void close() throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSArray $r9;
        org.apache.pdfbox.cos.COSObject r7;
        org.apache.pdfbox.io.RandomAccess $r1;
        org.apache.pdfbox.cos.COSStream $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.pdfbox.cos.COSDocument r0;
        java.util.Iterator $r5;
        java.io.File $r2, $r13;
        org.apache.pdfbox.cos.COSDictionary $r3, $r10, $r12;
        java.util.List $r4;
        org.apache.pdfbox.cos.COSBase $r8;
        java.lang.Object $r6;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>;

        if $z0 != 0 goto label9;

        $r1 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.RandomAccess scratchFile>;

        interfaceinvoke $r1.<org.apache.pdfbox.io.RandomAccess: void close()>();

        $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.io.File tmpFile>;

        if $r2 == null goto label1;

        $r13 = r0.<org.apache.pdfbox.cos.COSDocument: java.io.File tmpFile>;

        virtualinvoke $r13.<java.io.File: boolean delete()>();

     label1:
        $r3 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer>;

        if $r3 == null goto label2;

        $r12 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer>;

        virtualinvoke $r12.<org.apache.pdfbox.cos.COSDictionary: void clear()>();

        r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = null;

     label2:
        $r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>();

        if $r4 == null goto label8;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label8;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.pdfbox.cos.COSObject) $r6;

        $r8 = virtualinvoke r7.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>();

        $z3 = $r8 instanceof org.apache.pdfbox.cos.COSStream;

        if $z3 == 0 goto label4;

        $r11 = (org.apache.pdfbox.cos.COSStream) $r8;

        virtualinvoke $r11.<org.apache.pdfbox.cos.COSStream: void close()>();

        goto label6;

     label4:
        $z4 = $r8 instanceof org.apache.pdfbox.cos.COSDictionary;

        if $z4 == 0 goto label5;

        $r10 = (org.apache.pdfbox.cos.COSDictionary) $r8;

        virtualinvoke $r10.<org.apache.pdfbox.cos.COSDictionary: void clear()>();

        goto label6;

     label5:
        $z5 = $r8 instanceof org.apache.pdfbox.cos.COSArray;

        if $z5 == 0 goto label6;

        $r9 = (org.apache.pdfbox.cos.COSArray) $r8;

        virtualinvoke $r9.<org.apache.pdfbox.cos.COSArray: void clear()>();

     label6:
        goto label3;

     label7:
        interfaceinvoke $r4.<java.util.List: void clear()>();

     label8:
        r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1;

     label9:
        return;
    }

    protected void finalize() throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDocument r0;
        org.apache.commons.logging.Log $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>;

        if $z0 != 0 goto label2;

        $z1 = r0.<org.apache.pdfbox.cos.COSDocument: boolean warnMissingClose>;

        if $z1 == 0 goto label1;

        $r1 = <org.apache.pdfbox.cos.COSDocument: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Warning: You did not close a PDF Document");

     label1:
        virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: void close()>();

     label2:
        return;
    }

    public void setWarnMissingClose(boolean)
    {
        org.apache.pdfbox.cos.COSDocument r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        z0 := @parameter0: boolean;

        r0.<org.apache.pdfbox.cos.COSDocument: boolean warnMissingClose> = z0;

        return;
    }

    public java.lang.String getHeaderString()
    {
        org.apache.pdfbox.cos.COSDocument r0;
        java.lang.String $r1;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $r1 = r0.<org.apache.pdfbox.cos.COSDocument: java.lang.String headerString>;

        return $r1;
    }

    public void setHeaderString(java.lang.String)
    {
        org.apache.pdfbox.cos.COSDocument r0;
        java.lang.String r1;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.cos.COSDocument: java.lang.String headerString> = r1;

        return;
    }

    public void dereferenceObjectStreams() throws java.io.IOException
    {
        org.apache.pdfbox.pdfparser.PDFObjectStreamParser $r8;
        byte $b3;
        java.lang.Long $r23;
        java.util.Map $r14, $r16, $r20, $r21;
        boolean $z0, $z1, $z2, $z3;
        org.apache.pdfbox.persistence.util.COSObjectKey $r13;
        java.util.List $r2, $r9;
        org.apache.pdfbox.cos.COSBase $r6, $r19, $r26;
        org.apache.pdfbox.cos.COSObject r5, r12, $r18, $r25;
        long $l0, $l1, $l2;
        org.apache.pdfbox.cos.COSInteger $r24;
        org.apache.pdfbox.cos.COSStream r7;
        org.apache.pdfbox.cos.COSName $r1;
        org.apache.pdfbox.cos.COSDocument r0;
        java.util.Iterator $r3, $r10;
        java.lang.Object $r4, $r11, $r15, $r17, $r22;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OBJ_STM>;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjectsByType(org.apache.pdfbox.cos.COSName)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.pdfbox.cos.COSObject) $r4;

        $r6 = virtualinvoke r5.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>();

        r7 = (org.apache.pdfbox.cos.COSStream) $r6;

        $r8 = new org.apache.pdfbox.pdfparser.PDFObjectStreamParser;

        $z1 = r0.<org.apache.pdfbox.cos.COSDocument: boolean forceParsing>;

        specialinvoke $r8.<org.apache.pdfbox.pdfparser.PDFObjectStreamParser: void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDocument,boolean)>(r7, r0, $z1);

        virtualinvoke $r8.<org.apache.pdfbox.pdfparser.PDFObjectStreamParser: void parse()>();

        $r9 = virtualinvoke $r8.<org.apache.pdfbox.pdfparser.PDFObjectStreamParser: java.util.List getObjects()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.pdfbox.cos.COSObject) $r11;

        $r13 = new org.apache.pdfbox.persistence.util.COSObjectKey;

        specialinvoke $r13.<org.apache.pdfbox.persistence.util.COSObjectKey: void <init>(org.apache.pdfbox.cos.COSObject)>(r12);

        $r14 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        if $r15 == null goto label3;

        $r16 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        $r18 = (org.apache.pdfbox.cos.COSObject) $r17;

        $r19 = virtualinvoke $r18.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>();

        if $r19 == null goto label3;

        $r20 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map xrefTable>;

        $z3 = interfaceinvoke $r20.<java.util.Map: boolean containsKey(java.lang.Object)>($r13);

        if $z3 == 0 goto label4;

        $r21 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map xrefTable>;

        $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        $r23 = (java.lang.Long) $r22;

        $l0 = virtualinvoke $r23.<java.lang.Long: long longValue()>();

        $r24 = virtualinvoke r5.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSInteger getObjectNumber()>();

        $l1 = virtualinvoke $r24.<org.apache.pdfbox.cos.COSInteger: long longValue()>();

        $l2 = neg $l1;

        $b3 = $l0 cmp $l2;

        if $b3 != 0 goto label4;

     label3:
        $r25 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSObject getObjectFromPool(org.apache.pdfbox.persistence.util.COSObjectKey)>($r13);

        $r26 = virtualinvoke r12.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>();

        virtualinvoke $r25.<org.apache.pdfbox.cos.COSObject: void setObject(org.apache.pdfbox.cos.COSBase)>($r26);

     label4:
        goto label2;

     label5:
        goto label1;

     label6:
        return;
    }

    public org.apache.pdfbox.cos.COSObject getObjectFromPool(org.apache.pdfbox.persistence.util.COSObjectKey) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDocument r4;
        org.apache.pdfbox.cos.COSObject $r1, r8;
        long $l0, $l1;
        org.apache.pdfbox.persistence.util.COSObjectKey r0;
        org.apache.pdfbox.cos.COSInteger $r2, $r3;
        java.util.Map $r5, $r6;
        java.lang.Object $r7;

        r4 := @this: org.apache.pdfbox.cos.COSDocument;

        r0 := @parameter0: org.apache.pdfbox.persistence.util.COSObjectKey;

        r8 = null;

        if r0 == null goto label1;

        $r6 = r4.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r8 = (org.apache.pdfbox.cos.COSObject) $r7;

     label1:
        if r8 != null goto label2;

        $r1 = new org.apache.pdfbox.cos.COSObject;

        specialinvoke $r1.<org.apache.pdfbox.cos.COSObject: void <init>(org.apache.pdfbox.cos.COSBase)>(null);

        r8 = $r1;

        if r0 == null goto label2;

        $l0 = virtualinvoke r0.<org.apache.pdfbox.persistence.util.COSObjectKey: long getNumber()>();

        $r2 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l0);

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSObject: void setObjectNumber(org.apache.pdfbox.cos.COSInteger)>($r2);

        $l1 = virtualinvoke r0.<org.apache.pdfbox.persistence.util.COSObjectKey: long getGeneration()>();

        $r3 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1);

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSObject: void setGenerationNumber(org.apache.pdfbox.cos.COSInteger)>($r3);

        $r5 = r4.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r1);

     label2:
        return r8;
    }

    public org.apache.pdfbox.cos.COSObject removeObject(org.apache.pdfbox.persistence.util.COSObjectKey)
    {
        org.apache.pdfbox.cos.COSDocument r0;
        java.util.Map $r2;
        org.apache.pdfbox.cos.COSObject $r4;
        java.lang.Object $r3;
        org.apache.pdfbox.persistence.util.COSObjectKey r1;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        r1 := @parameter0: org.apache.pdfbox.persistence.util.COSObjectKey;

        $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = (org.apache.pdfbox.cos.COSObject) $r3;

        return $r4;
    }

    public void addXRefTable(java.util.Map)
    {
        org.apache.pdfbox.cos.COSDocument r0;
        java.util.Map r1, $r2;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map xrefTable>;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }

    public java.util.Map getXrefTable()
    {
        org.apache.pdfbox.cos.COSDocument r0;
        java.util.Map $r1;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $r1 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map xrefTable>;

        return $r1;
    }

    public void setStartXref(long)
    {
        org.apache.pdfbox.cos.COSDocument r0;
        long l0;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        l0 := @parameter0: long;

        r0.<org.apache.pdfbox.cos.COSDocument: long startXref> = l0;

        return;
    }

    public long getStartXref()
    {
        org.apache.pdfbox.cos.COSDocument r0;
        long $l0;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $l0 = r0.<org.apache.pdfbox.cos.COSDocument: long startXref>;

        return $l0;
    }

    public boolean isXRefStream()
    {
        org.apache.pdfbox.cos.COSDictionary $r1, $r3;
        org.apache.pdfbox.cos.COSName $r2, $r4;
        org.apache.pdfbox.cos.COSDocument r0;
        org.apache.pdfbox.cos.COSBase $r5;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.cos.COSDocument;

        $r1 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer>;

        if $r1 == null goto label1;

        $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName XREF>;

        $r3 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer>;

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>;

        $r5 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r2);

        $z0 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r5);

        return $z0;

     label1:
        return 0;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/cos/COSDocument;");

        <org.apache.pdfbox.cos.COSDocument: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
