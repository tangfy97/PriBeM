public class com.hp.hpl.jena.assembler.exceptions.NotExpectedTypeException extends com.hp.hpl.jena.assembler.exceptions.AssemblerException
{
    protected final java.lang.Class expectedType;
    protected final java.lang.Class actualType;

    public void <init>(com.hp.hpl.jena.rdf.model.Resource, java.lang.Class, java.lang.Class)
    {
        com.hp.hpl.jena.rdf.model.Resource r1;
        com.hp.hpl.jena.assembler.exceptions.NotExpectedTypeException r0;
        java.lang.StringBuilder $r2, $r3, $r6, $r7, $r10;
        java.lang.Class r4, r8;
        java.lang.String $r5, $r9, $r11;

        r0 := @this: com.hp.hpl.jena.assembler.exceptions.NotExpectedTypeException;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r4 := @parameter1: java.lang.Class;

        r8 := @parameter2: java.lang.Class;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected class ");

        $r5 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but had class ");

        $r9 = virtualinvoke r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.hp.hpl.jena.assembler.exceptions.AssemblerException: void <init>(com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(r1, $r11);

        r0.<com.hp.hpl.jena.assembler.exceptions.NotExpectedTypeException: java.lang.Class expectedType> = r4;

        r0.<com.hp.hpl.jena.assembler.exceptions.NotExpectedTypeException: java.lang.Class actualType> = r8;

        return;
    }

    public java.lang.Class getExpectedType()
    {
        com.hp.hpl.jena.assembler.exceptions.NotExpectedTypeException r0;
        java.lang.Class $r1;

        r0 := @this: com.hp.hpl.jena.assembler.exceptions.NotExpectedTypeException;

        $r1 = r0.<com.hp.hpl.jena.assembler.exceptions.NotExpectedTypeException: java.lang.Class expectedType>;

        return $r1;
    }

    public java.lang.Class getActualType()
    {
        com.hp.hpl.jena.assembler.exceptions.NotExpectedTypeException r0;
        java.lang.Class $r1;

        r0 := @this: com.hp.hpl.jena.assembler.exceptions.NotExpectedTypeException;

        $r1 = r0.<com.hp.hpl.jena.assembler.exceptions.NotExpectedTypeException: java.lang.Class actualType>;

        return $r1;
    }
}
