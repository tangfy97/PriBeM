public final class org.objectweb.asm.util.TraceClassVisitor extends org.objectweb.asm.ClassVisitor
{
    private final java.io.PrintWriter pw;
    public final org.objectweb.asm.util.Printer p;

    public void <init>(java.io.PrintWriter)
    {
        org.objectweb.asm.util.TraceClassVisitor r0;
        java.io.PrintWriter r1;

        r0 := @this: org.objectweb.asm.util.TraceClassVisitor;

        r1 := @parameter0: java.io.PrintWriter;

        specialinvoke r0.<org.objectweb.asm.util.TraceClassVisitor: void <init>(org.objectweb.asm.ClassVisitor,java.io.PrintWriter)>(null, r1);

        return;
    }

    public void <init>(org.objectweb.asm.ClassVisitor, java.io.PrintWriter)
    {
        org.objectweb.asm.util.TraceClassVisitor r0;
        java.io.PrintWriter r3;
        org.objectweb.asm.ClassVisitor r1;
        org.objectweb.asm.util.Textifier $r2;

        r0 := @this: org.objectweb.asm.util.TraceClassVisitor;

        r1 := @parameter0: org.objectweb.asm.ClassVisitor;

        r3 := @parameter1: java.io.PrintWriter;

        $r2 = new org.objectweb.asm.util.Textifier;

        specialinvoke $r2.<org.objectweb.asm.util.Textifier: void <init>()>();

        specialinvoke r0.<org.objectweb.asm.util.TraceClassVisitor: void <init>(org.objectweb.asm.ClassVisitor,org.objectweb.asm.util.Printer,java.io.PrintWriter)>(r1, $r2, r3);

        return;
    }

    public void <init>(org.objectweb.asm.ClassVisitor, org.objectweb.asm.util.Printer, java.io.PrintWriter)
    {
        org.objectweb.asm.util.TraceClassVisitor r0;
        java.io.PrintWriter r2;
        org.objectweb.asm.util.Printer r3;
        org.objectweb.asm.ClassVisitor r1;

        r0 := @this: org.objectweb.asm.util.TraceClassVisitor;

        r1 := @parameter0: org.objectweb.asm.ClassVisitor;

        r3 := @parameter1: org.objectweb.asm.util.Printer;

        r2 := @parameter2: java.io.PrintWriter;

        specialinvoke r0.<org.objectweb.asm.ClassVisitor: void <init>(int,org.objectweb.asm.ClassVisitor)>(262144, r1);

        r0.<org.objectweb.asm.util.TraceClassVisitor: java.io.PrintWriter pw> = r2;

        r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.util.Printer p> = r3;

        return;
    }

    public void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        org.objectweb.asm.util.TraceClassVisitor r0;
        java.lang.String[] r4;
        org.objectweb.asm.util.Printer $r5;
        int i0, i1;
        java.lang.String r1, r2, r3;

        r0 := @this: org.objectweb.asm.util.TraceClassVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String[];

        $r5 = r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.util.Printer p>;

        virtualinvoke $r5.<org.objectweb.asm.util.Printer: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(i0, i1, r1, r2, r3, r4);

        specialinvoke r0.<org.objectweb.asm.ClassVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(i0, i1, r1, r2, r3, r4);

        return;
    }

    public void visitSource(java.lang.String, java.lang.String)
    {
        org.objectweb.asm.util.TraceClassVisitor r0;
        org.objectweb.asm.util.Printer $r3;
        java.lang.String r1, r2;

        r0 := @this: org.objectweb.asm.util.TraceClassVisitor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.util.Printer p>;

        virtualinvoke $r3.<org.objectweb.asm.util.Printer: void visitSource(java.lang.String,java.lang.String)>(r1, r2);

        specialinvoke r0.<org.objectweb.asm.ClassVisitor: void visitSource(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void visitOuterClass(java.lang.String, java.lang.String, java.lang.String)
    {
        org.objectweb.asm.util.TraceClassVisitor r0;
        org.objectweb.asm.util.Printer $r4;
        java.lang.String r1, r2, r3;

        r0 := @this: org.objectweb.asm.util.TraceClassVisitor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.util.Printer p>;

        virtualinvoke $r4.<org.objectweb.asm.util.Printer: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        specialinvoke r0.<org.objectweb.asm.ClassVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }

    public org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        org.objectweb.asm.util.TraceClassVisitor r0;
        org.objectweb.asm.AnnotationVisitor $r7;
        org.objectweb.asm.util.Printer $r2, $r3;
        org.objectweb.asm.util.TraceAnnotationVisitor $r6;
        java.lang.String r1;
        org.objectweb.asm.ClassVisitor $r4, $r5;
        boolean z0;

        r0 := @this: org.objectweb.asm.util.TraceClassVisitor;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.util.Printer p>;

        $r3 = virtualinvoke $r2.<org.objectweb.asm.util.Printer: org.objectweb.asm.util.Printer visitClassAnnotation(java.lang.String,boolean)>(r1, z0);

        $r4 = r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        if $r4 != null goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r5 = r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        $r7 = virtualinvoke $r5.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>(r1, z0);

     label2:
        $r6 = new org.objectweb.asm.util.TraceAnnotationVisitor;

        specialinvoke $r6.<org.objectweb.asm.util.TraceAnnotationVisitor: void <init>(org.objectweb.asm.AnnotationVisitor,org.objectweb.asm.util.Printer)>($r7, $r3);

        return $r6;
    }

    public void visitAttribute(org.objectweb.asm.Attribute)
    {
        org.objectweb.asm.util.TraceClassVisitor r0;
        org.objectweb.asm.Attribute r1;
        org.objectweb.asm.util.Printer $r2;

        r0 := @this: org.objectweb.asm.util.TraceClassVisitor;

        r1 := @parameter0: org.objectweb.asm.Attribute;

        $r2 = r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.util.Printer p>;

        virtualinvoke $r2.<org.objectweb.asm.util.Printer: void visitClassAttribute(org.objectweb.asm.Attribute)>(r1);

        specialinvoke r0.<org.objectweb.asm.ClassVisitor: void visitAttribute(org.objectweb.asm.Attribute)>(r1);

        return;
    }

    public void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)
    {
        org.objectweb.asm.util.TraceClassVisitor r0;
        org.objectweb.asm.util.Printer $r4;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.objectweb.asm.util.TraceClassVisitor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r4 = r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.util.Printer p>;

        virtualinvoke $r4.<org.objectweb.asm.util.Printer: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>(r1, r2, r3, i0);

        specialinvoke r0.<org.objectweb.asm.ClassVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>(r1, r2, r3, i0);

        return;
    }

    public org.objectweb.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        org.objectweb.asm.util.TraceClassVisitor r0;
        org.objectweb.asm.util.TraceFieldVisitor $r9;
        org.objectweb.asm.FieldVisitor $r10;
        org.objectweb.asm.util.Printer $r5, $r6;
        int i0;
        java.lang.Object r4;
        java.lang.String r1, r2, r3;
        org.objectweb.asm.ClassVisitor $r7, $r8;

        r0 := @this: org.objectweb.asm.util.TraceClassVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Object;

        $r5 = r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.util.Printer p>;

        $r6 = virtualinvoke $r5.<org.objectweb.asm.util.Printer: org.objectweb.asm.util.Printer visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(i0, r1, r2, r3, r4);

        $r7 = r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        if $r7 != null goto label1;

        $r10 = null;

        goto label2;

     label1:
        $r8 = r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        $r10 = virtualinvoke $r8.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(i0, r1, r2, r3, r4);

     label2:
        $r9 = new org.objectweb.asm.util.TraceFieldVisitor;

        specialinvoke $r9.<org.objectweb.asm.util.TraceFieldVisitor: void <init>(org.objectweb.asm.FieldVisitor,org.objectweb.asm.util.Printer)>($r10, $r6);

        return $r9;
    }

    public org.objectweb.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        org.objectweb.asm.util.TraceClassVisitor r0;
        org.objectweb.asm.MethodVisitor $r10;
        java.lang.String[] r4;
        org.objectweb.asm.util.Printer $r5, $r6;
        int i0;
        java.lang.String r1, r2, r3;
        org.objectweb.asm.ClassVisitor $r7, $r8;
        org.objectweb.asm.util.TraceMethodVisitor $r9;

        r0 := @this: org.objectweb.asm.util.TraceClassVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        $r5 = r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.util.Printer p>;

        $r6 = virtualinvoke $r5.<org.objectweb.asm.util.Printer: org.objectweb.asm.util.Printer visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(i0, r1, r2, r3, r4);

        $r7 = r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        if $r7 != null goto label1;

        $r10 = null;

        goto label2;

     label1:
        $r8 = r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        $r10 = virtualinvoke $r8.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(i0, r1, r2, r3, r4);

     label2:
        $r9 = new org.objectweb.asm.util.TraceMethodVisitor;

        specialinvoke $r9.<org.objectweb.asm.util.TraceMethodVisitor: void <init>(org.objectweb.asm.MethodVisitor,org.objectweb.asm.util.Printer)>($r10, $r6);

        return $r9;
    }

    public void visitEnd()
    {
        org.objectweb.asm.util.TraceClassVisitor r0;
        java.io.PrintWriter $r2, $r3, $r5;
        org.objectweb.asm.util.Printer $r1, $r4;

        r0 := @this: org.objectweb.asm.util.TraceClassVisitor;

        $r1 = r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.util.Printer p>;

        virtualinvoke $r1.<org.objectweb.asm.util.Printer: void visitClassEnd()>();

        $r2 = r0.<org.objectweb.asm.util.TraceClassVisitor: java.io.PrintWriter pw>;

        if $r2 == null goto label1;

        $r4 = r0.<org.objectweb.asm.util.TraceClassVisitor: org.objectweb.asm.util.Printer p>;

        $r3 = r0.<org.objectweb.asm.util.TraceClassVisitor: java.io.PrintWriter pw>;

        virtualinvoke $r4.<org.objectweb.asm.util.Printer: void print(java.io.PrintWriter)>($r3);

        $r5 = r0.<org.objectweb.asm.util.TraceClassVisitor: java.io.PrintWriter pw>;

        virtualinvoke $r5.<java.io.PrintWriter: void flush()>();

     label1:
        specialinvoke r0.<org.objectweb.asm.ClassVisitor: void visitEnd()>();

        return;
    }
}
