public interface  kodkod.ast.visitor.ReturnVisitor extends java.lang.Object
{

    public abstract java.lang.Object visit(kodkod.ast.Decls);

    public abstract java.lang.Object visit(kodkod.ast.Decl);

    public abstract java.lang.Object visit(kodkod.ast.Relation);

    public abstract java.lang.Object visit(kodkod.ast.Variable);

    public abstract java.lang.Object visit(kodkod.ast.ConstantExpression);

    public abstract java.lang.Object visit(kodkod.ast.UnaryExpression);

    public abstract java.lang.Object visit(kodkod.ast.BinaryExpression);

    public abstract java.lang.Object visit(kodkod.ast.NaryExpression);

    public abstract java.lang.Object visit(kodkod.ast.Comprehension);

    public abstract java.lang.Object visit(kodkod.ast.IfExpression);

    public abstract java.lang.Object visit(kodkod.ast.ProjectExpression);

    public abstract java.lang.Object visit(kodkod.ast.IntToExprCast);

    public abstract java.lang.Object visit(kodkod.ast.IntConstant);

    public abstract java.lang.Object visit(kodkod.ast.IfIntExpression);

    public abstract java.lang.Object visit(kodkod.ast.ExprToIntCast);

    public abstract java.lang.Object visit(kodkod.ast.NaryIntExpression);

    public abstract java.lang.Object visit(kodkod.ast.BinaryIntExpression);

    public abstract java.lang.Object visit(kodkod.ast.UnaryIntExpression);

    public abstract java.lang.Object visit(kodkod.ast.SumExpression);

    public abstract java.lang.Object visit(kodkod.ast.IntComparisonFormula);

    public abstract java.lang.Object visit(kodkod.ast.QuantifiedFormula);

    public abstract java.lang.Object visit(kodkod.ast.NaryFormula);

    public abstract java.lang.Object visit(kodkod.ast.BinaryFormula);

    public abstract java.lang.Object visit(kodkod.ast.NotFormula);

    public abstract java.lang.Object visit(kodkod.ast.ConstantFormula);

    public abstract java.lang.Object visit(kodkod.ast.ComparisonFormula);

    public abstract java.lang.Object visit(kodkod.ast.MultiplicityFormula);

    public abstract java.lang.Object visit(kodkod.ast.RelationPredicate);
}
