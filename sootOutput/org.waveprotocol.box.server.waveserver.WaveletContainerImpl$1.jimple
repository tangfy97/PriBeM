class org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.google.common.util.concurrent.ListenableFuture val$waveletStateFuture;
    final org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0;

    void <init>(org.waveprotocol.box.server.waveserver.WaveletContainerImpl, com.google.common.util.concurrent.ListenableFuture)
    {
        org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1 r0;
        org.waveprotocol.box.server.waveserver.WaveletContainerImpl r1;
        com.google.common.util.concurrent.ListenableFuture r2;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.WaveletContainerImpl;

        r2 := @parameter1: com.google.common.util.concurrent.ListenableFuture;

        r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0> = r1;

        r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: com.google.common.util.concurrent.ListenableFuture val$waveletStateFuture> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        java.lang.Thread $r42;
        org.waveprotocol.wave.util.logging.Log $r31, $r43, $r54;
        org.waveprotocol.box.server.waveserver.WaveletContainerImpl $r1, $r2, $r4, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r27, $r29, $r34, $r39, $r40, $r46, $r51, $r52, $r57, $r62, $r63, $r64;
        org.waveprotocol.wave.model.id.WaveletName $r16, $r18, $r22, $r24, $r35, $r47, $r58;
        org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State $r5, $r6, $r9, $r25, $r38, $r50, $r61;
        java.util.concurrent.CountDownLatch $r65;
        java.lang.StringBuilder $r32, $r33, $r36, $r44, $r45, $r48, $r55, $r56, $r59;
        java.lang.Throwable $r28;
        java.lang.Object[] $r7, $r19;
        org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1 r0;
        org.waveprotocol.box.server.persistence.PersistenceException $r53;
        java.lang.String $r37, $r49, $r60;
        java.lang.RuntimeException $r30;
        boolean $z0, $z1, $z2;
        com.google.common.util.concurrent.ListenableFuture $r10;
        org.waveprotocol.box.server.waveserver.WaveletState $r3, $r13, $r15, $r21;
        java.lang.InterruptedException $r41;
        java.lang.Object $r12;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        virtualinvoke $r1.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl: void acquireWriteLock()>();

     label01:
        $r2 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r3 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.box.server.waveserver.WaveletState access$000(org.waveprotocol.box.server.waveserver.WaveletContainerImpl)>($r2);

        if $r3 != null goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "Repeat attempts to set wavelet state");

        $r4 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r5 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State access$100(org.waveprotocol.box.server.waveserver.WaveletContainerImpl)>($r4);

        $r6 = <org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State: org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State LOADING>;

        if $r5 != $r6 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r9 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State access$100(org.waveprotocol.box.server.waveserver.WaveletContainerImpl)>($r8);

        $r7[0] = $r9;

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>($z2, "Unexpected state %s", $r7);

        $r11 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r10 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: com.google.common.util.concurrent.ListenableFuture val$waveletStateFuture>;

        $r12 = staticinvoke <org.waveprotocol.box.server.waveserver.FutureUtil: java.lang.Object getResultOrPropagateException(java.util.concurrent.Future,java.lang.Class)>($r10, class "Lorg/waveprotocol/box/server/persistence/PersistenceException;");

        $r13 = (org.waveprotocol.box.server.waveserver.WaveletState) $r12;

        staticinvoke <org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.box.server.waveserver.WaveletState access$002(org.waveprotocol.box.server.waveserver.WaveletContainerImpl,org.waveprotocol.box.server.waveserver.WaveletState)>($r11, $r13);

        $r14 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r15 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.box.server.waveserver.WaveletState access$000(org.waveprotocol.box.server.waveserver.WaveletContainerImpl)>($r14);

        $r16 = interfaceinvoke $r15.<org.waveprotocol.box.server.waveserver.WaveletState: org.waveprotocol.wave.model.id.WaveletName getWaveletName()>();

        $r17 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r18 = virtualinvoke $r17.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.wave.model.id.WaveletName getWaveletName()>();

        $z0 = virtualinvoke $r16.<org.waveprotocol.wave.model.id.WaveletName: boolean equals(java.lang.Object)>($r18);

        $r19 = newarray (java.lang.Object)[2];

        $r20 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r21 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.box.server.waveserver.WaveletState access$000(org.waveprotocol.box.server.waveserver.WaveletContainerImpl)>($r20);

        $r22 = interfaceinvoke $r21.<org.waveprotocol.box.server.waveserver.WaveletState: org.waveprotocol.wave.model.id.WaveletName getWaveletName()>();

        $r19[0] = $r22;

        $r23 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r24 = virtualinvoke $r23.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.wave.model.id.WaveletName getWaveletName()>();

        $r19[1] = $r24;

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>($z0, "Wrong wavelet state, named %s, expected %s", $r19);

        $r26 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r25 = <org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State: org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State OK>;

        staticinvoke <org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State access$102(org.waveprotocol.box.server.waveserver.WaveletContainerImpl,org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State)>($r26, $r25);

     label06:
        $r27 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        virtualinvoke $r27.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl: void releaseWriteLock()>();

        goto label15;

     label07:
        $r53 := @caughtexception;

        $r54 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.wave.util.logging.Log access$200()>();

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load wavelet ");

        $r57 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r58 = virtualinvoke $r57.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.wave.model.id.WaveletName getWaveletName()>();

        $r59 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r54.<org.waveprotocol.wave.util.logging.Log: void warning(java.lang.String,java.lang.Throwable)>($r60, $r53);

        $r62 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r61 = <org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State: org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State CORRUPTED>;

        staticinvoke <org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State access$102(org.waveprotocol.box.server.waveserver.WaveletContainerImpl,org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State)>($r62, $r61);

     label08:
        $r63 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        virtualinvoke $r63.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl: void releaseWriteLock()>();

        goto label15;

     label09:
        $r41 := @caughtexception;

        $r42 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r42.<java.lang.Thread: void interrupt()>();

        $r43 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.wave.util.logging.Log access$200()>();

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interrupted loading wavelet ");

        $r46 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r47 = virtualinvoke $r46.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.wave.model.id.WaveletName getWaveletName()>();

        $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<org.waveprotocol.wave.util.logging.Log: void warning(java.lang.String,java.lang.Throwable)>($r49, $r41);

        $r51 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r50 = <org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State: org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State CORRUPTED>;

        staticinvoke <org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State access$102(org.waveprotocol.box.server.waveserver.WaveletContainerImpl,org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State)>($r51, $r50);

     label10:
        $r52 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        virtualinvoke $r52.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl: void releaseWriteLock()>();

        goto label15;

     label11:
        $r30 := @caughtexception;

        $r31 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.wave.util.logging.Log access$200()>();

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected exception loading wavelet ");

        $r34 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r35 = virtualinvoke $r34.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.wave.model.id.WaveletName getWaveletName()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<org.waveprotocol.wave.util.logging.Log: void severe(java.lang.String,java.lang.Throwable)>($r37, $r30);

        $r39 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r38 = <org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State: org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State CORRUPTED>;

        staticinvoke <org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State access$102(org.waveprotocol.box.server.waveserver.WaveletContainerImpl,org.waveprotocol.box.server.waveserver.WaveletContainerImpl$State)>($r39, $r38);

     label12:
        $r40 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        virtualinvoke $r40.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl: void releaseWriteLock()>();

        goto label15;

     label13:
        $r28 := @caughtexception;

     label14:
        $r29 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        virtualinvoke $r29.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl: void releaseWriteLock()>();

        throw $r28;

     label15:
        $r64 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r65 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveletContainerImpl: java.util.concurrent.CountDownLatch access$300(org.waveprotocol.box.server.waveserver.WaveletContainerImpl)>($r64);

        virtualinvoke $r65.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;

        catch org.waveprotocol.box.server.persistence.PersistenceException from label01 to label06 with label07;
        catch java.lang.InterruptedException from label01 to label06 with label09;
        catch java.lang.RuntimeException from label01 to label06 with label11;
        catch java.lang.Throwable from label01 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }
}
