public class org.bouncycastle.jce.provider.JCEElGamalCipher extends org.bouncycastle.jce.provider.WrapCipherSpi
{
    private org.bouncycastle.crypto.BufferedAsymmetricBlockCipher cipher;
    private java.security.spec.AlgorithmParameterSpec paramSpec;
    private java.security.AlgorithmParameters engineParams;

    public void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)
    {
        org.bouncycastle.crypto.BufferedAsymmetricBlockCipher $r1;
        org.bouncycastle.crypto.AsymmetricBlockCipher r2;
        org.bouncycastle.jce.provider.JCEElGamalCipher r0;

        r0 := @this: org.bouncycastle.jce.provider.JCEElGamalCipher;

        r2 := @parameter0: org.bouncycastle.crypto.AsymmetricBlockCipher;

        specialinvoke r0.<org.bouncycastle.jce.provider.WrapCipherSpi: void <init>()>();

        $r1 = new org.bouncycastle.crypto.BufferedAsymmetricBlockCipher;

        specialinvoke $r1.<org.bouncycastle.crypto.BufferedAsymmetricBlockCipher: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)>(r2);

        r0.<org.bouncycastle.jce.provider.JCEElGamalCipher: org.bouncycastle.crypto.BufferedAsymmetricBlockCipher cipher> = $r1;

        return;
    }

    private void initFromSpec(javax.crypto.spec.OAEPParameterSpec) throws javax.crypto.NoSuchPaddingException
    {
        org.bouncycastle.crypto.BufferedAsymmetricBlockCipher $r6;
        byte[] $r11;
        org.bouncycastle.crypto.Digest $r4;
        org.bouncycastle.crypto.engines.ElGamalEngine $r8;
        javax.crypto.spec.OAEPParameterSpec r0;
        javax.crypto.NoSuchPaddingException $r12;
        java.security.spec.AlgorithmParameterSpec $r1;
        java.lang.String $r3, $r15, $r17;
        java.security.spec.MGF1ParameterSpec r2;
        javax.crypto.spec.PSource $r9;
        org.bouncycastle.crypto.encodings.OAEPEncoding $r7;
        org.bouncycastle.jce.provider.JCEElGamalCipher r5;
        java.lang.StringBuilder $r13, $r14, $r16;
        javax.crypto.spec.PSource$PSpecified $r10;

        r5 := @this: org.bouncycastle.jce.provider.JCEElGamalCipher;

        r0 := @parameter0: javax.crypto.spec.OAEPParameterSpec;

        $r1 = virtualinvoke r0.<javax.crypto.spec.OAEPParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()>();

        r2 = (java.security.spec.MGF1ParameterSpec) $r1;

        $r3 = virtualinvoke r2.<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r4 = staticinvoke <org.bouncycastle.jce.provider.JCEDigestUtil: org.bouncycastle.crypto.Digest getDigest(java.lang.String)>($r3);

        if $r4 != null goto label1;

        $r12 = new javax.crypto.NoSuchPaddingException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no match on OAEP constructor for digest algorithm: ");

        $r15 = virtualinvoke r2.<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<javax.crypto.NoSuchPaddingException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label1:
        $r6 = new org.bouncycastle.crypto.BufferedAsymmetricBlockCipher;

        $r7 = new org.bouncycastle.crypto.encodings.OAEPEncoding;

        $r8 = new org.bouncycastle.crypto.engines.ElGamalEngine;

        specialinvoke $r8.<org.bouncycastle.crypto.engines.ElGamalEngine: void <init>()>();

        $r9 = virtualinvoke r0.<javax.crypto.spec.OAEPParameterSpec: javax.crypto.spec.PSource getPSource()>();

        $r10 = (javax.crypto.spec.PSource$PSpecified) $r9;

        $r11 = virtualinvoke $r10.<javax.crypto.spec.PSource$PSpecified: byte[] getValue()>();

        specialinvoke $r7.<org.bouncycastle.crypto.encodings.OAEPEncoding: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,byte[])>($r8, $r4, $r11);

        specialinvoke $r6.<org.bouncycastle.crypto.BufferedAsymmetricBlockCipher: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)>($r7);

        r5.<org.bouncycastle.jce.provider.JCEElGamalCipher: org.bouncycastle.crypto.BufferedAsymmetricBlockCipher cipher> = $r6;

        r5.<org.bouncycastle.jce.provider.JCEElGamalCipher: java.security.spec.AlgorithmParameterSpec paramSpec> = r0;

        return;
    }

    protected int engineGetBlockSize()
    {
        org.bouncycastle.crypto.BufferedAsymmetricBlockCipher $r1;
        int $i0;
        org.bouncycastle.jce.provider.JCEElGamalCipher r0;

        r0 := @this: org.bouncycastle.jce.provider.JCEElGamalCipher;

        $r1 = r0.<org.bouncycastle.jce.provider.JCEElGamalCipher: org.bouncycastle.crypto.BufferedAsymmetricBlockCipher cipher>;

        $i0 = virtualinvoke $r1.<org.bouncycastle.crypto.BufferedAsymmetricBlockCipher: int getInputBlockSize()>();

        return $i0;
    }

    protected byte[] engineGetIV()
    {
        org.bouncycastle.jce.provider.JCEElGamalCipher r0;

        r0 := @this: org.bouncycastle.jce.provider.JCEElGamalCipher;

        return null;
    }

    protected int engineGetKeySize(java.security.Key)
    {
        org.bouncycastle.jce.spec.ElGamalParameterSpec $r4;
        javax.crypto.spec.DHParameterSpec $r2;
        java.lang.IllegalArgumentException $r1;
        org.bouncycastle.jce.provider.JCEElGamalCipher r6;
        java.security.Key r0;
        javax.crypto.interfaces.DHKey r8;
        int $i0, $i1;
        java.math.BigInteger $r3, $r5;
        boolean $z0, $z1;
        org.bouncycastle.jce.interfaces.ElGamalKey r7;

        r6 := @this: org.bouncycastle.jce.provider.JCEElGamalCipher;

        r0 := @parameter0: java.security.Key;

        $z0 = r0 instanceof org.bouncycastle.jce.interfaces.ElGamalKey;

        if $z0 == 0 goto label1;

        r7 = (org.bouncycastle.jce.interfaces.ElGamalKey) r0;

        $r4 = interfaceinvoke r7.<org.bouncycastle.jce.interfaces.ElGamalKey: org.bouncycastle.jce.spec.ElGamalParameterSpec getParameters()>();

        $r5 = virtualinvoke $r4.<org.bouncycastle.jce.spec.ElGamalParameterSpec: java.math.BigInteger getP()>();

        $i1 = virtualinvoke $r5.<java.math.BigInteger: int bitLength()>();

        return $i1;

     label1:
        $z1 = r0 instanceof javax.crypto.interfaces.DHKey;

        if $z1 == 0 goto label2;

        r8 = (javax.crypto.interfaces.DHKey) r0;

        $r2 = interfaceinvoke r8.<javax.crypto.interfaces.DHKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r3 = virtualinvoke $r2.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $i0 = virtualinvoke $r3.<java.math.BigInteger: int bitLength()>();

        return $i0;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("not an ElGamal key!");

        throw $r1;
    }

    protected int engineGetOutputSize(int)
    {
        org.bouncycastle.crypto.BufferedAsymmetricBlockCipher $r1;
        int $i0, i1;
        org.bouncycastle.jce.provider.JCEElGamalCipher r0;

        r0 := @this: org.bouncycastle.jce.provider.JCEElGamalCipher;

        i1 := @parameter0: int;

        $r1 = r0.<org.bouncycastle.jce.provider.JCEElGamalCipher: org.bouncycastle.crypto.BufferedAsymmetricBlockCipher cipher>;

        $i0 = virtualinvoke $r1.<org.bouncycastle.crypto.BufferedAsymmetricBlockCipher: int getOutputBlockSize()>();

        return $i0;
    }

    protected java.security.AlgorithmParameters engineGetParameters()
    {
        java.lang.RuntimeException $r7;
        java.security.AlgorithmParameters $r1, $r3, $r5, $r9;
        java.lang.Exception $r6;
        org.bouncycastle.jce.provider.JCEElGamalCipher r0;
        java.security.spec.AlgorithmParameterSpec $r2, $r4;
        java.lang.String $r8;

        r0 := @this: org.bouncycastle.jce.provider.JCEElGamalCipher;

        $r1 = r0.<org.bouncycastle.jce.provider.JCEElGamalCipher: java.security.AlgorithmParameters engineParams>;

        if $r1 != null goto label4;

        $r2 = r0.<org.bouncycastle.jce.provider.JCEElGamalCipher: java.security.spec.AlgorithmParameterSpec paramSpec>;

        if $r2 == null goto label4;

     label1:
        $r3 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>("OAEP", "BC");

        r0.<org.bouncycastle.jce.provider.JCEElGamalCipher: java.security.AlgorithmParameters engineParams> = $r3;

        $r5 = r0.<org.bouncycastle.jce.provider.JCEElGamalCipher: java.security.AlgorithmParameters engineParams>;

        $r4 = r0.<org.bouncycastle.jce.provider.JCEElGamalCipher: java.security.spec.AlgorithmParameterSpec paramSpec>;

        virtualinvoke $r5.<java.security.AlgorithmParameters: void init(java.security.spec.AlgorithmParameterSpec)>($r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r6.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label4:
        $r9 = r0.<org.bouncycastle.jce.provider.JCEElGamalCipher: java.security.AlgorithmParameters engineParams>;

        return $r9;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void engineSetMode(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        org.bouncycastle.jce.provider.JCEElGamalCipher r7;
        java.security.NoSuchAlgorithmException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String r0, $r1, $r6;
        boolean $z0, $z1;

        r7 := @this: org.bouncycastle.jce.provider.JCEElGamalCipher;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.bouncycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("NONE");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ECB");

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        $r2 = new java.security.NoSuchAlgorithmException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t support mode ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r6);

        throw $r2;
    }

    protected void engineSetPadding(java.lang.String) throws javax.crypto.NoSuchPaddingException
    {
        org.bouncycastle.crypto.BufferedAsymmetricBlockCipher $r25, $r28, $r31;
        org.bouncycastle.crypto.engines.ElGamalEngine $r27, $r30, $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.bouncycastle.jce.provider.JCEElGamalCipher r7;
        java.lang.StringBuilder $r3, $r4, $r5;
        javax.crypto.spec.PSource$PSpecified $r9, $r12, $r15, $r19, $r23;
        org.bouncycastle.crypto.encodings.PKCS1Encoding $r29;
        javax.crypto.spec.OAEPParameterSpec $r8, $r11, $r14, $r17, $r20, $r21, $r24;
        javax.crypto.NoSuchPaddingException $r2;
        java.lang.String r0, $r1, $r6;
        java.security.spec.MGF1ParameterSpec $r10, $r13, $r16, $r18, $r22;
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding $r26;

        r7 := @this: org.bouncycastle.jce.provider.JCEElGamalCipher;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.bouncycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("NOPADDING");

        if $z0 == 0 goto label01;

        $r31 = new org.bouncycastle.crypto.BufferedAsymmetricBlockCipher;

        $r32 = new org.bouncycastle.crypto.engines.ElGamalEngine;

        specialinvoke $r32.<org.bouncycastle.crypto.engines.ElGamalEngine: void <init>()>();

        specialinvoke $r31.<org.bouncycastle.crypto.BufferedAsymmetricBlockCipher: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)>($r32);

        r7.<org.bouncycastle.jce.provider.JCEElGamalCipher: org.bouncycastle.crypto.BufferedAsymmetricBlockCipher cipher> = $r31;

        goto label11;

     label01:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("PKCS1PADDING");

        if $z1 == 0 goto label02;

        $r28 = new org.bouncycastle.crypto.BufferedAsymmetricBlockCipher;

        $r29 = new org.bouncycastle.crypto.encodings.PKCS1Encoding;

        $r30 = new org.bouncycastle.crypto.engines.ElGamalEngine;

        specialinvoke $r30.<org.bouncycastle.crypto.engines.ElGamalEngine: void <init>()>();

        specialinvoke $r29.<org.bouncycastle.crypto.encodings.PKCS1Encoding: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)>($r30);

        specialinvoke $r28.<org.bouncycastle.crypto.BufferedAsymmetricBlockCipher: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)>($r29);

        r7.<org.bouncycastle.jce.provider.JCEElGamalCipher: org.bouncycastle.crypto.BufferedAsymmetricBlockCipher cipher> = $r28;

        goto label11;

     label02:
        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ISO9796-1PADDING");

        if $z2 == 0 goto label03;

        $r25 = new org.bouncycastle.crypto.BufferedAsymmetricBlockCipher;

        $r26 = new org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        $r27 = new org.bouncycastle.crypto.engines.ElGamalEngine;

        specialinvoke $r27.<org.bouncycastle.crypto.engines.ElGamalEngine: void <init>()>();

        specialinvoke $r26.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)>($r27);

        specialinvoke $r25.<org.bouncycastle.crypto.BufferedAsymmetricBlockCipher: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)>($r26);

        r7.<org.bouncycastle.jce.provider.JCEElGamalCipher: org.bouncycastle.crypto.BufferedAsymmetricBlockCipher cipher> = $r25;

        goto label11;

     label03:
        $z3 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPPADDING");

        if $z3 == 0 goto label04;

        $r24 = <javax.crypto.spec.OAEPParameterSpec: javax.crypto.spec.OAEPParameterSpec DEFAULT>;

        specialinvoke r7.<org.bouncycastle.jce.provider.JCEElGamalCipher: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r24);

        goto label11;

     label04:
        $z4 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHMD5ANDMGF1PADDING");

        if $z4 == 0 goto label05;

        $r21 = new javax.crypto.spec.OAEPParameterSpec;

        $r22 = new java.security.spec.MGF1ParameterSpec;

        specialinvoke $r22.<java.security.spec.MGF1ParameterSpec: void <init>(java.lang.String)>("MD5");

        $r23 = <javax.crypto.spec.PSource$PSpecified: javax.crypto.spec.PSource$PSpecified DEFAULT>;

        specialinvoke $r21.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>("MD5", "MGF1", $r22, $r23);

        specialinvoke r7.<org.bouncycastle.jce.provider.JCEElGamalCipher: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r21);

        goto label11;

     label05:
        $z5 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA1ANDMGF1PADDING");

        if $z5 == 0 goto label06;

        $r20 = <javax.crypto.spec.OAEPParameterSpec: javax.crypto.spec.OAEPParameterSpec DEFAULT>;

        specialinvoke r7.<org.bouncycastle.jce.provider.JCEElGamalCipher: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r20);

        goto label11;

     label06:
        $z6 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA224ANDMGF1PADDING");

        if $z6 == 0 goto label07;

        $r17 = new javax.crypto.spec.OAEPParameterSpec;

        $r18 = new java.security.spec.MGF1ParameterSpec;

        specialinvoke $r18.<java.security.spec.MGF1ParameterSpec: void <init>(java.lang.String)>("SHA-224");

        $r19 = <javax.crypto.spec.PSource$PSpecified: javax.crypto.spec.PSource$PSpecified DEFAULT>;

        specialinvoke $r17.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>("SHA-224", "MGF1", $r18, $r19);

        specialinvoke r7.<org.bouncycastle.jce.provider.JCEElGamalCipher: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r17);

        goto label11;

     label07:
        $z7 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA256ANDMGF1PADDING");

        if $z7 == 0 goto label08;

        $r14 = new javax.crypto.spec.OAEPParameterSpec;

        $r16 = <java.security.spec.MGF1ParameterSpec: java.security.spec.MGF1ParameterSpec SHA256>;

        $r15 = <javax.crypto.spec.PSource$PSpecified: javax.crypto.spec.PSource$PSpecified DEFAULT>;

        specialinvoke $r14.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>("SHA-256", "MGF1", $r16, $r15);

        specialinvoke r7.<org.bouncycastle.jce.provider.JCEElGamalCipher: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r14);

        goto label11;

     label08:
        $z8 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA384ANDMGF1PADDING");

        if $z8 == 0 goto label09;

        $r11 = new javax.crypto.spec.OAEPParameterSpec;

        $r13 = <java.security.spec.MGF1ParameterSpec: java.security.spec.MGF1ParameterSpec SHA384>;

        $r12 = <javax.crypto.spec.PSource$PSpecified: javax.crypto.spec.PSource$PSpecified DEFAULT>;

        specialinvoke $r11.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>("SHA-384", "MGF1", $r13, $r12);

        specialinvoke r7.<org.bouncycastle.jce.provider.JCEElGamalCipher: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r11);

        goto label11;

     label09:
        $z9 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA512ANDMGF1PADDING");

        if $z9 == 0 goto label10;

        $r8 = new javax.crypto.spec.OAEPParameterSpec;

        $r10 = <java.security.spec.MGF1ParameterSpec: java.security.spec.MGF1ParameterSpec SHA512>;

        $r9 = <javax.crypto.spec.PSource$PSpecified: javax.crypto.spec.PSource$PSpecified DEFAULT>;

        specialinvoke $r8.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>("SHA-512", "MGF1", $r10, $r9);

        specialinvoke r7.<org.bouncycastle.jce.provider.JCEElGamalCipher: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r8);

        goto label11;

     label10:
        $r2 = new javax.crypto.NoSuchPaddingException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unavailable with ElGamal.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<javax.crypto.NoSuchPaddingException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label11:
        return;
    }

    protected void engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        org.bouncycastle.crypto.BufferedAsymmetricBlockCipher $r7, $r8;
        java.security.SecureRandom r5;
        java.security.InvalidParameterException $r9;
        org.bouncycastle.crypto.params.ParametersWithRandom $r15;
        int i0;
        java.security.spec.AlgorithmParameterSpec r0;
        java.lang.String $r14;
        boolean $z0, $z1;
        org.bouncycastle.crypto.CipherParameters r17;
        java.security.PublicKey $r16;
        java.lang.IllegalArgumentException $r1;
        org.bouncycastle.jce.provider.JCEElGamalCipher r6;
        java.security.Key r2;
        java.security.PrivateKey $r4;
        java.security.InvalidKeyException $r3;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;

        r6 := @this: org.bouncycastle.jce.provider.JCEElGamalCipher;

        i0 := @parameter0: int;

        r2 := @parameter1: java.security.Key;

        r0 := @parameter2: java.security.spec.AlgorithmParameterSpec;

        r5 := @parameter3: java.security.SecureRandom;

        if r0 != null goto label3;

        $z0 = r2 instanceof org.bouncycastle.jce.interfaces.ElGamalPublicKey;

        if $z0 == 0 goto label1;

        $r16 = (java.security.PublicKey) r2;

        r17 = staticinvoke <org.bouncycastle.jce.provider.ElGamalUtil: org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)>($r16);

        goto label4;

     label1:
        $z1 = r2 instanceof org.bouncycastle.jce.interfaces.ElGamalPrivateKey;

        if $z1 == 0 goto label2;

        $r4 = (java.security.PrivateKey) r2;

        r17 = staticinvoke <org.bouncycastle.jce.provider.ElGamalUtil: org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)>($r4);

        goto label4;

     label2:
        $r3 = new java.security.InvalidKeyException;

        specialinvoke $r3.<java.security.InvalidKeyException: void <init>(java.lang.String)>("unknown key type passed to ElGamal");

        throw $r3;

     label3:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unknown parameter type.");

        throw $r1;

     label4:
        if r5 == null goto label5;

        $r15 = new org.bouncycastle.crypto.params.ParametersWithRandom;

        specialinvoke $r15.<org.bouncycastle.crypto.params.ParametersWithRandom: void <init>(org.bouncycastle.crypto.CipherParameters,java.security.SecureRandom)>(r17, r5);

        r17 = $r15;

     label5:
        tableswitch(i0)
        {
            case 1: goto label6;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label7;
            default: goto label8;
        };

     label6:
        $r8 = r6.<org.bouncycastle.jce.provider.JCEElGamalCipher: org.bouncycastle.crypto.BufferedAsymmetricBlockCipher cipher>;

        virtualinvoke $r8.<org.bouncycastle.crypto.BufferedAsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, r17);

        goto label9;

     label7:
        $r7 = r6.<org.bouncycastle.jce.provider.JCEElGamalCipher: org.bouncycastle.crypto.BufferedAsymmetricBlockCipher cipher>;

        virtualinvoke $r7.<org.bouncycastle.crypto.BufferedAsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, r17);

        goto label9;

     label8:
        $r9 = new java.security.InvalidParameterException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown opmode ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" passed to ElGamal");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label9:
        return;
    }

    protected void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        java.security.Key r2;
        java.security.SecureRandom r4;
        int i0;
        java.security.AlgorithmParameters r3;
        java.security.InvalidAlgorithmParameterException $r0;
        org.bouncycastle.jce.provider.JCEElGamalCipher r1;

        r1 := @this: org.bouncycastle.jce.provider.JCEElGamalCipher;

        i0 := @parameter0: int;

        r2 := @parameter1: java.security.Key;

        r3 := @parameter2: java.security.AlgorithmParameters;

        r4 := @parameter3: java.security.SecureRandom;

        $r0 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r0.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("can\'t handle parameters in ElGamal");

        throw $r0;
    }

    protected void engineInit(int, java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        java.security.Key r1;
        java.security.SecureRandom r2;
        int i0;
        org.bouncycastle.jce.provider.JCEElGamalCipher r0;

        r0 := @this: org.bouncycastle.jce.provider.JCEElGamalCipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.SecureRandom;

        virtualinvoke r0.<org.bouncycastle.jce.provider.JCEElGamalCipher: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(i0, r1, null, r2);

        return;
    }

    protected byte[] engineUpdate(byte[], int, int)
    {
        org.bouncycastle.crypto.BufferedAsymmetricBlockCipher $r2;
        byte[] r1;
        int i0, i1;
        org.bouncycastle.jce.provider.JCEElGamalCipher r0;

        r0 := @this: org.bouncycastle.jce.provider.JCEElGamalCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.bouncycastle.jce.provider.JCEElGamalCipher: org.bouncycastle.crypto.BufferedAsymmetricBlockCipher cipher>;

        virtualinvoke $r2.<org.bouncycastle.crypto.BufferedAsymmetricBlockCipher: void processBytes(byte[],int,int)>(r1, i0, i1);

        return null;
    }

    protected int engineUpdate(byte[], int, int, byte[], int)
    {
        org.bouncycastle.crypto.BufferedAsymmetricBlockCipher $r2;
        byte[] r1, r3;
        int i0, i1, i2;
        org.bouncycastle.jce.provider.JCEElGamalCipher r0;

        r0 := @this: org.bouncycastle.jce.provider.JCEElGamalCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r3 := @parameter3: byte[];

        i2 := @parameter4: int;

        $r2 = r0.<org.bouncycastle.jce.provider.JCEElGamalCipher: org.bouncycastle.crypto.BufferedAsymmetricBlockCipher cipher>;

        virtualinvoke $r2.<org.bouncycastle.crypto.BufferedAsymmetricBlockCipher: void processBytes(byte[],int,int)>(r1, i0, i1);

        return 0;
    }

    protected byte[] engineDoFinal(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        org.bouncycastle.crypto.BufferedAsymmetricBlockCipher $r2, $r3;
        byte[] r1, $r4;
        org.bouncycastle.jce.provider.JCEElGamalCipher r0;
        org.bouncycastle.crypto.InvalidCipherTextException $r5;
        javax.crypto.BadPaddingException $r6;
        int i0, i1;
        java.lang.String $r7;

        r0 := @this: org.bouncycastle.jce.provider.JCEElGamalCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.bouncycastle.jce.provider.JCEElGamalCipher: org.bouncycastle.crypto.BufferedAsymmetricBlockCipher cipher>;

        virtualinvoke $r2.<org.bouncycastle.crypto.BufferedAsymmetricBlockCipher: void processBytes(byte[],int,int)>(r1, i0, i1);

     label1:
        $r3 = r0.<org.bouncycastle.jce.provider.JCEElGamalCipher: org.bouncycastle.crypto.BufferedAsymmetricBlockCipher cipher>;

        $r4 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedAsymmetricBlockCipher: byte[] doFinal()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new javax.crypto.BadPaddingException;

        $r7 = virtualinvoke $r5.<org.bouncycastle.crypto.InvalidCipherTextException: java.lang.String getMessage()>();

        specialinvoke $r6.<javax.crypto.BadPaddingException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch org.bouncycastle.crypto.InvalidCipherTextException from label1 to label2 with label3;
    }

    protected int engineDoFinal(byte[], int, int, byte[], int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        org.bouncycastle.crypto.BufferedAsymmetricBlockCipher $r2, $r3;
        byte[] r1, $r4, r5;
        org.bouncycastle.crypto.InvalidCipherTextException $r6;
        byte $b5;
        int i0, i1, $i2, $i3, i4, $i6, i7;
        java.lang.String $r8;
        org.bouncycastle.jce.provider.JCEElGamalCipher r0;
        javax.crypto.BadPaddingException $r7;

        r0 := @this: org.bouncycastle.jce.provider.JCEElGamalCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r5 := @parameter3: byte[];

        i4 := @parameter4: int;

        $r2 = r0.<org.bouncycastle.jce.provider.JCEElGamalCipher: org.bouncycastle.crypto.BufferedAsymmetricBlockCipher cipher>;

        virtualinvoke $r2.<org.bouncycastle.crypto.BufferedAsymmetricBlockCipher: void processBytes(byte[],int,int)>(r1, i0, i1);

     label1:
        $r3 = r0.<org.bouncycastle.jce.provider.JCEElGamalCipher: org.bouncycastle.crypto.BufferedAsymmetricBlockCipher cipher>;

        $r4 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedAsymmetricBlockCipher: byte[] doFinal()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new javax.crypto.BadPaddingException;

        $r8 = virtualinvoke $r6.<org.bouncycastle.crypto.InvalidCipherTextException: java.lang.String getMessage()>();

        specialinvoke $r7.<javax.crypto.BadPaddingException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label4:
        i7 = 0;

     label5:
        $i2 = lengthof $r4;

        if i7 == $i2 goto label6;

        $i6 = i4 + i7;

        $b5 = $r4[i7];

        r5[$i6] = $b5;

        i7 = i7 + 1;

        goto label5;

     label6:
        $i3 = lengthof $r4;

        return $i3;

        catch org.bouncycastle.crypto.InvalidCipherTextException from label1 to label2 with label3;
    }
}
