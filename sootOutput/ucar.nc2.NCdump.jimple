public class ucar.nc2.NCdump extends java.lang.Object
{
    private static boolean debugSelector;
    private static java.lang.String usage;
    private static int totalWidth;
    private static char[] org;
    private static java.lang.String[] replace;

    public void <init>()
    {
        ucar.nc2.NCdump r0;

        r0 := @this: ucar.nc2.NCdump;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean printHeader(java.lang.String, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.OutputStream;

        $z0 = staticinvoke <ucar.nc2.NCdump: boolean print(java.lang.String,java.io.OutputStream,boolean,boolean,boolean,boolean,java.lang.String,ucar.nc2.util.CancelTask)>(r0, r1, 0, 0, 0, 0, null, null);

        return $z0;
    }

    public static boolean printNcML(java.lang.String, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.OutputStream;

        $z0 = staticinvoke <ucar.nc2.NCdump: boolean print(java.lang.String,java.io.OutputStream,boolean,boolean,boolean,boolean,java.lang.String,ucar.nc2.util.CancelTask)>(r0, r1, 0, 1, 1, 0, null, null);

        return $z0;
    }

    public static boolean print(java.lang.String, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.OutputStream;

        $z0 = staticinvoke <ucar.nc2.NCdump: boolean print(java.lang.String,java.io.OutputStream,ucar.nc2.util.CancelTask)>(r0, r1, null);

        return $z0;
    }

    public static boolean print(java.lang.String, java.io.OutputStream, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.Throwable $r8;
        byte[] $r3, $r14;
        ucar.nc2.util.CancelTask r5;
        java.util.StringTokenizer $r0;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r4, $r7, $r13, r15;
        boolean $z0, $z1;
        java.io.OutputStream r1;
        java.io.FileNotFoundException $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        ucar.nc2.NetcdfFile $r6, r16;

        r15 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.OutputStream;

        r5 := @parameter2: ucar.nc2.util.CancelTask;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String)>(r15);

        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label01;

        $r4 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label02;

     label01:
        $r2 = <ucar.nc2.NCdump: java.lang.String usage>;

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r3);

        return 0;

     label02:
        r16 = null;

     label03:
        $r6 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile open(java.lang.String,ucar.nc2.util.CancelTask)>($r4, r5);

        r16 = $r6;

        $i0 = virtualinvoke r15.<java.lang.String: int indexOf(java.lang.String)>($r4);

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i2 = $i0 + $i1;

        $r7 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>($i2);

        $z1 = staticinvoke <ucar.nc2.NCdump: boolean print(ucar.nc2.NetcdfFile,java.lang.String,java.io.OutputStream,ucar.nc2.util.CancelTask)>($r6, $r7, r1, r5);

     label04:
        if $r6 == null goto label05;

        virtualinvoke $r6.<ucar.nc2.NetcdfFile: void close()>();

     label05:
        return $z1;

     label06:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file not found= ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke $r13.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r14);

     label07:
        if r16 == null goto label08;

        virtualinvoke r16.<ucar.nc2.NetcdfFile: void close()>();

     label08:
        return 0;

     label09:
        $r8 := @caughtexception;

     label10:
        if r16 == null goto label11;

        virtualinvoke r16.<ucar.nc2.NetcdfFile: void close()>();

     label11:
        throw $r8;

        catch java.io.FileNotFoundException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static boolean print(ucar.nc2.NetcdfFile, java.lang.String, java.io.OutputStream, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        byte[] $r7;
        ucar.nc2.util.CancelTask r3;
        java.util.StringTokenizer $r4;
        java.lang.String r0, $r5, $r6, r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, z11, z12;
        java.io.OutputStream r2;
        ucar.nc2.NetcdfFile r1;

        r1 := @parameter0: ucar.nc2.NetcdfFile;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: java.io.OutputStream;

        r3 := @parameter3: ucar.nc2.util.CancelTask;

        z9 = 0;

        z10 = 0;

        z11 = 0;

        z12 = 0;

        r8 = null;

        if r0 == null goto label8;

        $r4 = new java.util.StringTokenizer;

        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>(r0);

     label1:
        $z1 = virtualinvoke $r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label8;

        $r5 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-help");

        if $z2 == 0 goto label2;

        $r6 = <ucar.nc2.NCdump: java.lang.String usage>;

        $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r7);

        virtualinvoke r2.<java.io.OutputStream: void write(int)>(10);

        return 1;

     label2:
        $z3 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-vall");

        if $z3 == 0 goto label3;

        z9 = 1;

     label3:
        $z4 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-c");

        if $z4 == 0 goto label4;

        z10 = 1;

     label4:
        $z5 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-ncml");

        if $z5 == 0 goto label5;

        z11 = 1;

     label5:
        $z6 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-cdl");

        if $z6 == 0 goto label6;

        z12 = 1;

     label6:
        $z7 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-v");

        if $z7 == 0 goto label7;

        $z8 = virtualinvoke $r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z8 == 0 goto label7;

        r8 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label7:
        goto label1;

     label8:
        $z0 = staticinvoke <ucar.nc2.NCdump: boolean print(ucar.nc2.NetcdfFile,java.io.OutputStream,boolean,boolean,boolean,boolean,java.lang.String,ucar.nc2.util.CancelTask)>(r1, r2, z9, z10, z11, z12, r8, r3);

        return $z0;
    }

    public static boolean print(java.lang.String, java.io.OutputStream, boolean, boolean, boolean, boolean, java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.Throwable $r5;
        byte[] $r11;
        ucar.nc2.util.CancelTask r1;
        java.lang.String r0, r4, $r10;
        boolean z0, z1, z2, z3, $z4;
        java.io.OutputStream r3;
        java.io.FileNotFoundException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        ucar.nc2.NetcdfFile $r2, r12;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.io.OutputStream;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        r4 := @parameter6: java.lang.String;

        r1 := @parameter7: ucar.nc2.util.CancelTask;

        r12 = null;

     label1:
        $r2 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile open(java.lang.String,ucar.nc2.util.CancelTask)>(r0, r1);

        r12 = $r2;

        $z4 = staticinvoke <ucar.nc2.NCdump: boolean print(ucar.nc2.NetcdfFile,java.io.OutputStream,boolean,boolean,boolean,boolean,java.lang.String,ucar.nc2.util.CancelTask)>($r2, r3, z0, z1, z2, z3, r4, r1);

     label2:
        if $r2 == null goto label3;

        virtualinvoke $r2.<ucar.nc2.NetcdfFile: void close()>();

     label3:
        return $z4;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file not found= ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke $r10.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r3.<java.io.OutputStream: void write(byte[])>($r11);

     label5:
        if r12 == null goto label6;

        virtualinvoke r12.<ucar.nc2.NetcdfFile: void close()>();

     label6:
        return 0;

     label7:
        $r5 := @caughtexception;

     label8:
        if r12 == null goto label9;

        virtualinvoke r12.<ucar.nc2.NetcdfFile: void close()>();

     label9:
        throw $r5;

        catch java.io.FileNotFoundException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static boolean print(ucar.nc2.NetcdfFile, java.io.OutputStream, boolean, boolean, boolean, boolean, java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.io.PrintWriter $r0;
        java.io.OutputStream r2;
        ucar.nc2.util.CancelTask r5;
        java.io.OutputStreamWriter $r1;
        ucar.nc2.NetcdfFile r3;
        java.lang.String r4;
        boolean z0, z1, z2, z3, $z4;

        r3 := @parameter0: ucar.nc2.NetcdfFile;

        r2 := @parameter1: java.io.OutputStream;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        r4 := @parameter6: java.lang.String;

        r5 := @parameter7: ucar.nc2.util.CancelTask;

        $r0 = new java.io.PrintWriter;

        $r1 = new java.io.OutputStreamWriter;

        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r2);

        specialinvoke $r0.<java.io.PrintWriter: void <init>(java.io.Writer)>($r1);

        $z4 = staticinvoke <ucar.nc2.NCdumpW: boolean print(ucar.nc2.NetcdfFile,java.io.Writer,boolean,boolean,boolean,boolean,java.lang.String,ucar.nc2.util.CancelTask)>(r3, $r0, z0, z1, z2, z3, r4, r5);

        return $z4;
    }

    private static ucar.nc2.NCdump$CEresult parseVariableSection(ucar.nc2.NetcdfFile, java.lang.String) throws ucar.ma2.InvalidRangeException
    {
        ucar.nc2.NCdump$CEresult $r5;
        java.lang.IllegalArgumentException $r7;
        java.util.ArrayList $r3;
        java.util.StringTokenizer $r0;
        java.lang.StringBuilder $r8, $r9, $r10;
        ucar.nc2.Variable r12;
        java.lang.String r1, $r2, $r6, $r11;
        ucar.nc2.NetcdfFile r4;
        boolean $z0, z1;

        r4 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ".");

        $r2 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        if $r2 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("empty sectionSpec = ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label1:
        z1 = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r12 = staticinvoke <ucar.nc2.NCdump: ucar.nc2.Variable parseVariableSelector(java.lang.Object,java.lang.String,java.util.List)>(r4, $r2, $r3);

     label2:
        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        $r6 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r12 = staticinvoke <ucar.nc2.NCdump: ucar.nc2.Variable parseVariableSelector(java.lang.Object,java.lang.String,java.util.List)>(r12, $r6, $r3);

        z1 = 1;

        goto label2;

     label3:
        $r5 = new ucar.nc2.NCdump$CEresult;

        specialinvoke $r5.<ucar.nc2.NCdump$CEresult: void <init>(ucar.nc2.Variable,java.util.List,boolean)>(r12, $r3, z1);

        return $r5;
    }

    private static ucar.nc2.Variable parseVariableSelector(java.lang.Object, java.lang.String, java.util.List) throws ucar.ma2.InvalidRangeException
    {
        int[] $r3, $r7;
        boolean $z0, $z1, $z2;
        java.util.List r4, $r5;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        ucar.nc2.NetcdfFile r28;
        ucar.ma2.Section $r2, $r6, r30;
        ucar.nc2.Structure r29;
        int $i0;
        ucar.nc2.Variable r27;
        java.lang.String r0, $r14, $r24, r25, r26;
        java.io.PrintStream $r16;
        java.lang.IllegalArgumentException $r8;
        java.lang.Object r1;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.String;

        r4 := @parameter2: java.util.List;

        r25 = null;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(40);

        if $i0 >= 0 goto label1;

        r26 = r0;

        goto label2;

     label1:
        r26 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r25 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

     label2:
        $z0 = <ucar.nc2.NCdump: boolean debugSelector>;

        if $z0 == 0 goto label3;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parseVariableSection <");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> = <");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">, <");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r24);

     label3:
        r27 = null;

        $z1 = r1 instanceof ucar.nc2.NetcdfFile;

        if $z1 == 0 goto label4;

        r28 = (ucar.nc2.NetcdfFile) r1;

        r27 = virtualinvoke r28.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>(r26);

        goto label5;

     label4:
        $z2 = r1 instanceof ucar.nc2.Structure;

        if $z2 == 0 goto label5;

        r29 = (ucar.nc2.Structure) r1;

        r27 = virtualinvoke r29.<ucar.nc2.Structure: ucar.nc2.Variable findVariable(java.lang.String)>(r26);

     label5:
        if r27 != null goto label6;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cant find variable: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in selector=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label6:
        if r25 == null goto label7;

        $r6 = new ucar.ma2.Section;

        specialinvoke $r6.<ucar.ma2.Section: void <init>(java.lang.String)>(r25);

        r30 = $r6;

        $r7 = virtualinvoke r27.<ucar.nc2.Variable: int[] getShape()>();

        virtualinvoke $r6.<ucar.ma2.Section: void setDefaults(int[])>($r7);

        goto label8;

     label7:
        $r2 = new ucar.ma2.Section;

        $r3 = virtualinvoke r27.<ucar.nc2.Variable: int[] getShape()>();

        specialinvoke $r2.<ucar.ma2.Section: void <init>(int[])>($r3);

        r30 = $r2;

     label8:
        $r5 = virtualinvoke r30.<ucar.ma2.Section: java.util.List getRanges()>();

        interfaceinvoke r4.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        return r27;
    }

    public static java.lang.String makeSectionString(ucar.nc2.VariableIF, java.util.List) throws ucar.ma2.InvalidRangeException
    {
        java.util.List r2;
        java.lang.StringBuilder $r0;
        java.lang.String $r3;
        ucar.nc2.VariableIF r1;

        r1 := @parameter0: ucar.nc2.VariableIF;

        r2 := @parameter1: java.util.List;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <ucar.nc2.NCdump: java.util.List makeSpec(java.lang.StringBuilder,ucar.nc2.VariableIF,java.util.List)>($r0, r1, r2);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static java.util.List makeSpec(java.lang.StringBuilder, ucar.nc2.VariableIF, java.util.List) throws ucar.ma2.InvalidRangeException
    {
        ucar.nc2.Structure $r6;
        ucar.nc2.VariableIF r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.String $r9;
        boolean $z0, $z1, $z2, $z3;
        ucar.ma2.Range $r4, r10;
        java.util.List r1, r7, $r8, $r11;
        java.lang.StringBuilder r2;
        java.lang.Object $r3;
        ucar.nc2.Dimension $r5;

        r2 := @parameter0: java.lang.StringBuilder;

        r0 := @parameter1: ucar.nc2.VariableIF;

        r7 := @parameter2: java.util.List;

        $z0 = interfaceinvoke r0.<ucar.nc2.VariableIF: boolean isMemberOfStructure()>();

        if $z0 == 0 goto label01;

        $r6 = interfaceinvoke r0.<ucar.nc2.VariableIF: ucar.nc2.Structure getParentStructure()>();

        r7 = staticinvoke <ucar.nc2.NCdump: java.util.List makeSpec(java.lang.StringBuilder,ucar.nc2.VariableIF,java.util.List)>(r2, $r6, r7);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

     label01:
        if r7 != null goto label02;

        $r8 = interfaceinvoke r0.<ucar.nc2.VariableIF: java.util.List getRanges()>();

        goto label03;

     label02:
        $r8 = r7;

     label03:
        r1 = $r8;

        $z1 = interfaceinvoke r0.<ucar.nc2.VariableIF: boolean isMemberOfStructure()>();

        if $z1 == 0 goto label04;

        $r9 = interfaceinvoke r0.<ucar.nc2.VariableIF: java.lang.String getShortName()>();

        goto label05;

     label04:
        $r9 = interfaceinvoke r0.<ucar.nc2.VariableIF: java.lang.String getNameEscaped()>();

     label05:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $z2 = interfaceinvoke r0.<ucar.nc2.VariableIF: boolean isVariableLength()>();

        if $z2 != 0 goto label10;

        $z3 = interfaceinvoke r0.<ucar.nc2.VariableIF: boolean isScalar()>();

        if $z3 != 0 goto label10;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        i7 = 0;

     label06:
        $i2 = interfaceinvoke r0.<ucar.nc2.VariableIF: int getRank()>();

        if i7 >= $i2 goto label09;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        r10 = (ucar.ma2.Range) $r3;

        if r10 != null goto label07;

        $r4 = new ucar.ma2.Range;

        $r5 = interfaceinvoke r0.<ucar.nc2.VariableIF: ucar.nc2.Dimension getDimension(int)>(i7);

        $i6 = virtualinvoke $r5.<ucar.nc2.Dimension: int getLength()>();

        specialinvoke $r4.<ucar.ma2.Range: void <init>(int,int)>(0, $i6);

        r10 = $r4;

     label07:
        if i7 <= 0 goto label08;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label08:
        $i3 = virtualinvoke r10.<ucar.ma2.Range: int first()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i4 = virtualinvoke r10.<ucar.ma2.Range: int last()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i5 = virtualinvoke r10.<ucar.ma2.Range: int stride()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        i7 = i7 + 1;

        goto label06;

     label09:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

     label10:
        if r7 != null goto label11;

        $r11 = null;

        goto label12;

     label11:
        $i0 = interfaceinvoke r0.<ucar.nc2.VariableIF: int getRank()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $r11 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>($i0, $i1);

     label12:
        return $r11;
    }

    public static java.lang.String printVariableData(ucar.nc2.VariableIF, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.io.PrintStream $r4;
        ucar.nc2.util.CancelTask r5;
        java.io.ByteArrayOutputStream $r2;
        java.lang.String $r3, $r6;
        ucar.ma2.Array $r1;
        ucar.nc2.VariableIF r0;

        r0 := @parameter0: ucar.nc2.VariableIF;

        r5 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = interfaceinvoke r0.<ucar.nc2.VariableIF: ucar.ma2.Array read()>();

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = interfaceinvoke r0.<ucar.nc2.VariableIF: java.lang.String getName()>();

        $r4 = new java.io.PrintStream;

        specialinvoke $r4.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r2);

        staticinvoke <ucar.nc2.NCdump: void printArray(ucar.ma2.Array,java.lang.String,java.io.PrintStream,ucar.nc2.util.CancelTask)>($r1, $r3, $r4, r5);

        $r6 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        return $r6;
    }

    public static java.lang.String printVariableDataSection(ucar.nc2.VariableIF, java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        java.io.PrintStream $r5;
        java.io.ByteArrayOutputStream $r3;
        ucar.ma2.Array $r2;
        ucar.nc2.VariableIF r0;
        ucar.nc2.util.CancelTask r6;
        java.lang.String r1, $r4, $r7;

        r0 := @parameter0: ucar.nc2.VariableIF;

        r1 := @parameter1: java.lang.String;

        r6 := @parameter2: ucar.nc2.util.CancelTask;

        $r2 = interfaceinvoke r0.<ucar.nc2.VariableIF: ucar.ma2.Array read(java.lang.String)>(r1);

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        $r4 = interfaceinvoke r0.<ucar.nc2.VariableIF: java.lang.String getName()>();

        $r5 = new java.io.PrintStream;

        specialinvoke $r5.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r3);

        staticinvoke <ucar.nc2.NCdump: void printArray(ucar.ma2.Array,java.lang.String,java.io.PrintStream,ucar.nc2.util.CancelTask)>($r2, $r4, $r5, r6);

        $r7 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        return $r7;
    }

    public static void printArray(ucar.ma2.Array, java.lang.String, java.io.PrintStream, ucar.nc2.util.CancelTask)
    {
        java.io.PrintStream r2;
        ucar.nc2.util.CancelTask r4;
        java.lang.String r1;
        ucar.ma2.Array r0;
        ucar.nc2.util.Indent $r3;

        r0 := @parameter0: ucar.ma2.Array;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.io.PrintStream;

        r4 := @parameter3: ucar.nc2.util.CancelTask;

        $r3 = new ucar.nc2.util.Indent;

        specialinvoke $r3.<ucar.nc2.util.Indent: void <init>(int)>(2);

        staticinvoke <ucar.nc2.NCdump: void printArray(ucar.ma2.Array,java.lang.String,java.lang.String,java.io.PrintStream,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r0, r1, null, r2, $r3, r4);

        return;
    }

    private static void printArray(ucar.ma2.Array, java.lang.String, java.lang.String, java.io.PrintStream, ucar.nc2.util.Indent, ucar.nc2.util.CancelTask)
    {
        long $l0;
        ucar.ma2.StructureData $r14;
        ucar.nc2.util.CancelTask r0;
        byte $b1;
        ucar.ma2.ArrayChar $r16;
        int $i2;
        java.lang.String r1, r7, $r11, $r22;
        boolean $z0, $z1;
        java.io.PrintStream r6;
        ucar.ma2.ArrayObject $r15;
        java.lang.IllegalArgumentException $r17;
        ucar.ma2.Array r3;
        ucar.nc2.util.Indent r2;
        ucar.ma2.Index $r12;
        java.lang.Class $r4, $r5;
        java.lang.StringBuilder $r8, $r9, $r10, $r18, $r19, $r20, $r21;
        java.lang.Object $r13;

        r3 := @parameter0: ucar.ma2.Array;

        r1 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        r6 := @parameter3: java.io.PrintStream;

        r2 := @parameter4: ucar.nc2.util.Indent;

        r0 := @parameter5: ucar.nc2.util.CancelTask;

        if r0 == null goto label1;

        $z1 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        if r1 == null goto label2;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" =");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintStream: void print(java.lang.String)>($r22);

     label2:
        virtualinvoke r2.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        if r3 != null goto label3;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null array");

        throw $r17;

     label3:
        $z0 = r3 instanceof ucar.ma2.ArrayChar;

        if $z0 == 0 goto label4;

        $i2 = virtualinvoke r3.<ucar.ma2.Array: int getRank()>();

        if $i2 <= 0 goto label4;

        $r16 = (ucar.ma2.ArrayChar) r3;

        staticinvoke <ucar.nc2.NCdump: void printStringArray(java.io.PrintStream,ucar.ma2.ArrayChar,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r6, $r16, r2, r0);

        goto label8;

     label4:
        $r4 = virtualinvoke r3.<ucar.ma2.Array: java.lang.Class getElementType()>();

        if $r4 != class "Ljava/lang/String;" goto label5;

        $r15 = (ucar.ma2.ArrayObject) r3;

        staticinvoke <ucar.nc2.NCdump: void printStringArray(java.io.PrintStream,ucar.ma2.ArrayObject,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r6, $r15, r2, r0);

        goto label8;

     label5:
        $r5 = virtualinvoke r3.<ucar.ma2.Array: java.lang.Class getElementType()>();

        if $r5 != class "Lucar/ma2/StructureData;" goto label7;

        $l0 = virtualinvoke r3.<ucar.ma2.Array: long getSize()>();

        $b1 = $l0 cmp 1L;

        if $b1 != 0 goto label6;

        $r12 = virtualinvoke r3.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r13 = virtualinvoke r3.<ucar.ma2.Array: java.lang.Object getObject(ucar.ma2.Index)>($r12);

        $r14 = (ucar.ma2.StructureData) $r13;

        staticinvoke <ucar.nc2.NCdump: void printStructureData(java.io.PrintStream,ucar.ma2.StructureData,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r6, $r14, r2, r0);

        goto label8;

     label6:
        staticinvoke <ucar.nc2.NCdump: void printStructureDataArray(java.io.PrintStream,ucar.ma2.Array,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r6, r3, r2, r0);

        goto label8;

     label7:
        staticinvoke <ucar.nc2.NCdump: void printArray(ucar.ma2.Array,java.io.PrintStream,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r3, r6, r2, r0);

     label8:
        if r7 == null goto label9;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintStream: void print(java.lang.String)>($r11);

     label9:
        virtualinvoke r6.<java.io.PrintStream: void print(java.lang.String)>("\n");

        virtualinvoke r2.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        return;
    }

    private static void printArray(ucar.ma2.Array, java.io.PrintStream, ucar.nc2.util.Indent, ucar.nc2.util.CancelTask)
    {
        ucar.nc2.util.CancelTask r0;
        int[] $r3;
        boolean $z0, $z1, $z2;
        ucar.nc2.util.Indent r7;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r14;
        int $i0, i1, $i2, $i3, i4, i5;
        java.lang.String $r10, $r15, $r20, $r22;
        java.io.PrintStream r4;
        ucar.ma2.Array r1, $r16;
        ucar.ma2.Index $r2, $r18;
        java.lang.Class $r17;
        java.lang.Object $r19, $r21;

        r1 := @parameter0: ucar.ma2.Array;

        r4 := @parameter1: java.io.PrintStream;

        r7 := @parameter2: ucar.nc2.util.Indent;

        r0 := @parameter3: ucar.nc2.util.CancelTask;

        if r0 == null goto label01;

        $z2 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z2 == 0 goto label01;

        return;

     label01:
        $i0 = virtualinvoke r1.<ucar.ma2.Array: int getRank()>();

        $r2 = virtualinvoke r1.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        if $i0 != 0 goto label02;

        $r21 = virtualinvoke r1.<ucar.ma2.Array: java.lang.Object getObject(ucar.ma2.Index)>($r2);

        $r22 = virtualinvoke $r21.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>($r22);

        return;

     label02:
        $r3 = virtualinvoke r1.<ucar.ma2.Array: int[] getShape()>();

        i1 = $r3[0];

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>($r10);

        if $i0 != 1 goto label07;

        $r17 = virtualinvoke r1.<ucar.ma2.Array: java.lang.Class getElementType()>();

        if $r17 == class "Lucar/ma2/StructureData;" goto label07;

        i4 = 0;

     label03:
        if i4 >= i1 goto label06;

        $r18 = virtualinvoke $r2.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i4);

        $r19 = virtualinvoke r1.<ucar.ma2.Array: java.lang.Object getObject(ucar.ma2.Index)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>($r20);

        $i3 = i1 - 1;

        if i4 == $i3 goto label04;

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>(", ");

     label04:
        if r0 == null goto label05;

        $z1 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label05;

        return;

     label05:
        i4 = i4 + 1;

        goto label03;

     label06:
        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>("}");

        return;

     label07:
        virtualinvoke r7.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        i5 = 0;

     label08:
        if i5 >= i1 goto label11;

        $r16 = virtualinvoke r1.<ucar.ma2.Array: ucar.ma2.Array slice(int,int)>(0, i5);

        staticinvoke <ucar.nc2.NCdump: void printArray(ucar.ma2.Array,java.io.PrintStream,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>($r16, r4, r7, r0);

        $i2 = i1 - 1;

        if i5 == $i2 goto label09;

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>(",");

     label09:
        if r0 == null goto label10;

        $z0 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label10;

        return;

     label10:
        i5 = i5 + 1;

        goto label08;

     label11:
        virtualinvoke r7.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>($r15);

        return;
    }

    static void printStringArray(java.io.PrintStream, ucar.ma2.ArrayChar, ucar.nc2.util.Indent, ucar.nc2.util.CancelTask)
    {
        ucar.nc2.util.CancelTask r0;
        int[] $r2;
        boolean $z0, $z1, $z2, z3, $z4;
        ucar.nc2.util.Indent r6;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13, $r18, $r19, $r21, $r22, $r24, $r25, $r27, $r28;
        ucar.ma2.ArrayChar r1, r16;
        int $i0, $i1, i2, i3;
        java.lang.String $r9, $r14, $r20, $r23, $r26, $r29;
        ucar.ma2.ArrayChar$StringIterator $r17;
        java.io.PrintStream r3;
        ucar.ma2.Array $r15;

        r3 := @parameter0: java.io.PrintStream;

        r1 := @parameter1: ucar.ma2.ArrayChar;

        r6 := @parameter2: ucar.nc2.util.Indent;

        r0 := @parameter3: ucar.nc2.util.CancelTask;

        if r0 == null goto label01;

        $z2 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z2 == 0 goto label01;

        return;

     label01:
        $i0 = virtualinvoke r1.<ucar.ma2.ArrayChar: int getRank()>();

        if $i0 != 1 goto label02;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  \"");

        $r26 = virtualinvoke r1.<ucar.ma2.ArrayChar: java.lang.String getString()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintStream: void print(java.lang.String)>($r29);

        return;

     label02:
        if $i0 != 2 goto label06;

        z3 = 1;

        $r17 = virtualinvoke r1.<ucar.ma2.ArrayChar: ucar.ma2.ArrayChar$StringIterator getStringIterator()>();

     label03:
        $z4 = virtualinvoke $r17.<ucar.ma2.ArrayChar$StringIterator: boolean hasNext()>();

        if $z4 == 0 goto label05;

        if z3 != 0 goto label04;

        virtualinvoke r3.<java.io.PrintStream: void print(java.lang.String)>(", ");

     label04:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r20 = virtualinvoke $r17.<ucar.ma2.ArrayChar$StringIterator: java.lang.String next()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintStream: void print(java.lang.String)>($r23);

        z3 = 0;

        if r0 == null goto label03;

        $z1 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label03;

        return;

     label05:
        return;

     label06:
        $r2 = virtualinvoke r1.<ucar.ma2.ArrayChar: int[] getShape()>();

        i2 = $r2[0];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintStream: void print(java.lang.String)>($r9);

        virtualinvoke r6.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        i3 = 0;

     label07:
        if i3 >= i2 goto label10;

        $r15 = virtualinvoke r1.<ucar.ma2.ArrayChar: ucar.ma2.Array slice(int,int)>(0, i3);

        r16 = (ucar.ma2.ArrayChar) $r15;

        staticinvoke <ucar.nc2.NCdump: void printStringArray(java.io.PrintStream,ucar.ma2.ArrayChar,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r3, r16, r6, r0);

        $i1 = i2 - 1;

        if i3 == $i1 goto label08;

        virtualinvoke r3.<java.io.PrintStream: void print(java.lang.String)>(",");

     label08:
        if r0 == null goto label09;

        $z0 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label09;

        return;

     label09:
        i3 = i3 + 1;

        goto label07;

     label10:
        virtualinvoke r6.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintStream: void print(java.lang.String)>($r14);

        return;
    }

    static void printStringArray(java.io.PrintStream, ucar.ma2.ArrayObject, ucar.nc2.util.Indent, ucar.nc2.util.CancelTask)
    {
        ucar.nc2.util.CancelTask r0;
        byte $b4;
        int[] $r3;
        boolean $z0, z1;
        ucar.nc2.util.Indent r7;
        java.lang.StringBuilder $r6, $r8, $r9, $r12, $r13, $r14, $r19, $r22, $r23, $r26, $r28, $r29, $r31, $r32, $r33, $r34;
        long $l2, $l3;
        int $i0, $i1, i5, i6, i7, $i8;
        java.lang.String $r10, $r15, $r24, $r30;
        java.io.PrintStream r4;
        ucar.ma2.ArrayObject r1, r17;
        ucar.ma2.Array $r16;
        ucar.ma2.Index $r2, $r20;
        java.lang.Object $r21, $r27;

        r4 := @parameter0: java.io.PrintStream;

        r1 := @parameter1: ucar.ma2.ArrayObject;

        r7 := @parameter2: ucar.nc2.util.Indent;

        r0 := @parameter3: ucar.nc2.util.CancelTask;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = virtualinvoke r1.<ucar.ma2.ArrayObject: int getRank()>();

        $r2 = virtualinvoke r1.<ucar.ma2.ArrayObject: ucar.ma2.Index getIndex()>();

        if $i0 != 0 goto label2;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  \"");

        $r27 = virtualinvoke r1.<ucar.ma2.ArrayObject: java.lang.Object getObject(ucar.ma2.Index)>($r2);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>($r30);

        return;

     label2:
        if $i0 != 1 goto label6;

        z1 = 1;

        i5 = 0;

     label3:
        $l2 = (long) i5;

        $l3 = virtualinvoke r1.<ucar.ma2.ArrayObject: long getSize()>();

        $b4 = $l2 cmp $l3;

        $i8 = (int) $b4;

        if $i8 >= 0 goto label5;

        if z1 != 0 goto label4;

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>(", ");

     label4:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  \"");

        $r20 = virtualinvoke $r2.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i5);

        $r21 = virtualinvoke r1.<ucar.ma2.ArrayObject: java.lang.Object getObject(ucar.ma2.Index)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>($r24);

        z1 = 0;

        i5 = i5 + 1;

        goto label3;

     label5:
        return;

     label6:
        $r3 = virtualinvoke r1.<ucar.ma2.ArrayObject: int[] getShape()>();

        i6 = $r3[0];

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>($r10);

        virtualinvoke r7.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        i7 = 0;

     label7:
        if i7 >= i6 goto label9;

        $r16 = virtualinvoke r1.<ucar.ma2.ArrayObject: ucar.ma2.Array slice(int,int)>(0, i7);

        r17 = (ucar.ma2.ArrayObject) $r16;

        staticinvoke <ucar.nc2.NCdump: void printStringArray(java.io.PrintStream,ucar.ma2.ArrayObject,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r4, r17, r7, r0);

        $i1 = i6 - 1;

        if i7 == $i1 goto label8;

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>(",");

     label8:
        i7 = i7 + 1;

        goto label7;

     label9:
        virtualinvoke r7.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>($r15);

        return;
    }

    private static void printStructureDataArray(java.io.PrintStream, ucar.ma2.Array, ucar.nc2.util.Indent, ucar.nc2.util.CancelTask)
    {
        ucar.ma2.StructureData r3;
        ucar.nc2.util.CancelTask r11;
        java.lang.String $r10, $r15, $r20;
        boolean $z0, $z1;
        java.io.PrintStream r4;
        ucar.ma2.IndexIterator $r1;
        ucar.ma2.Array r0;
        ucar.nc2.util.Indent r7;
        java.lang.Object $r2;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r12, $r13, $r14, $r16, $r17, $r18, $r19;

        r4 := @parameter0: java.io.PrintStream;

        r0 := @parameter1: ucar.ma2.Array;

        r7 := @parameter2: ucar.nc2.util.Indent;

        r11 := @parameter3: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: java.lang.Object next()>();

        r3 = (ucar.ma2.StructureData) $r2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void println(java.lang.String)>($r10);

        staticinvoke <ucar.nc2.NCdump: void printStructureData(java.io.PrintStream,ucar.ma2.StructureData,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r4, r3, r7, r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} ");

        $r15 = virtualinvoke r3.<ucar.ma2.StructureData: java.lang.String getName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>($r20);

        if r11 == null goto label2;

        $z1 = interfaceinvoke r11.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label2;

        return;

     label2:
        goto label1;

     label3:
        return;
    }

    public static void printStructureData(java.io.PrintStream, ucar.ma2.StructureData)
    {
        java.io.PrintStream r0;
        ucar.ma2.StructureData r1;
        ucar.nc2.util.Indent $r2;

        r0 := @parameter0: java.io.PrintStream;

        r1 := @parameter1: ucar.ma2.StructureData;

        $r2 = new ucar.nc2.util.Indent;

        specialinvoke $r2.<ucar.nc2.util.Indent: void <init>(int)>(2);

        staticinvoke <ucar.nc2.NCdump: void printStructureData(java.io.PrintStream,ucar.ma2.StructureData,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>(r0, r1, $r2, null);

        return;
    }

    private static void printStructureData(java.io.PrintStream, ucar.ma2.StructureData, ucar.nc2.util.Indent, ucar.nc2.util.CancelTask)
    {
        java.io.PrintStream r9;
        java.util.Iterator $r3;
        ucar.ma2.Array $r6;
        ucar.nc2.util.Indent r0;
        ucar.ma2.StructureMembers$Member r5;
        ucar.ma2.StructureData r1;
        java.util.List $r2;
        ucar.nc2.util.CancelTask r10;
        java.lang.Object $r4;
        java.lang.String $r7, $r8;
        boolean $z0, $z1;

        r9 := @parameter0: java.io.PrintStream;

        r1 := @parameter1: ucar.ma2.StructureData;

        r0 := @parameter2: ucar.nc2.util.Indent;

        r10 := @parameter3: ucar.nc2.util.CancelTask;

        virtualinvoke r0.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        $r2 = virtualinvoke r1.<ucar.ma2.StructureData: java.util.List getMembers()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (ucar.ma2.StructureMembers$Member) $r4;

        $r6 = virtualinvoke r1.<ucar.ma2.StructureData: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r5);

        $r7 = virtualinvoke r5.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        $r8 = virtualinvoke r5.<ucar.ma2.StructureMembers$Member: java.lang.String getUnitsString()>();

        staticinvoke <ucar.nc2.NCdump: void printArray(ucar.ma2.Array,java.lang.String,java.lang.String,java.io.PrintStream,ucar.nc2.util.Indent,ucar.nc2.util.CancelTask)>($r6, $r7, $r8, r9, r0, r10);

        if r10 == null goto label2;

        $z1 = interfaceinvoke r10.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label2;

        return;

     label2:
        goto label1;

     label3:
        virtualinvoke r0.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        return;
    }

    public static void writeNcML(ucar.nc2.NetcdfFile, java.io.OutputStream, boolean, java.lang.String) throws java.io.IOException
    {
        boolean z0;
        ucar.nc2.Group $r14;
        ucar.nc2.util.Indent $r15;
        java.lang.StringBuilder $r3, $r4, $r9, $r10, $r16, $r17, $r20, $r21, $r23, $r24, $r27, $r28, $r30, $r31, $r33, $r34;
        ucar.nc2.NetcdfFile r5;
        java.lang.String r2, $r6, $r7, $r8, $r11, $r12, $r13, $r18, $r19, $r22, $r25, $r26, $r29, $r32, $r35;
        java.io.PrintStream $r0;
        java.io.OutputStream r1;

        r5 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.io.OutputStream;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        $r0 = new java.io.PrintStream;

        specialinvoke $r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>(r1);

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>("<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n");

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>("<netcdf xmlns=\'http://www.unidata.ucar.edu/namespaces/netcdf/ncml-2.2\'\n");

        if r2 == null goto label1;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    location=\'");

        $r32 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>(r2);

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' >\n\n");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>($r35);

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    location=\'");

        $r6 = virtualinvoke r5.<ucar.nc2.NetcdfFile: java.lang.String getLocation()>();

        $r7 = staticinvoke <ucar.nc2.util.URLnaming: java.lang.String canonicalizeWrite(java.lang.String)>($r6);

        $r8 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r7);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' >\n\n");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>($r11);

     label2:
        $r12 = virtualinvoke r5.<ucar.nc2.NetcdfFile: java.lang.String getId()>();

        if $r12 == null goto label3;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    id=\'");

        $r25 = virtualinvoke r5.<ucar.nc2.NetcdfFile: java.lang.String getId()>();

        $r26 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r25);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' >\n");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>($r29);

     label3:
        $r13 = virtualinvoke r5.<ucar.nc2.NetcdfFile: java.lang.String getTitle()>();

        if $r13 == null goto label4;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    title=\'");

        $r18 = virtualinvoke r5.<ucar.nc2.NetcdfFile: java.lang.String getTitle()>();

        $r19 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' >\n");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>($r22);

     label4:
        $r14 = virtualinvoke r5.<ucar.nc2.NetcdfFile: ucar.nc2.Group getRootGroup()>();

        $r15 = new ucar.nc2.util.Indent;

        specialinvoke $r15.<ucar.nc2.util.Indent: void <init>(int)>(2);

        staticinvoke <ucar.nc2.NCdump: void writeNcMLGroup(ucar.nc2.NetcdfFile,ucar.nc2.Group,java.io.PrintStream,ucar.nc2.util.Indent,boolean)>(r5, $r14, $r0, $r15, z0);

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>("</netcdf>\n");

        virtualinvoke $r0.<java.io.PrintStream: void flush()>();

        return;
    }

    private static void writeNcMLGroup(ucar.nc2.NetcdfFile, ucar.nc2.Group, java.io.PrintStream, ucar.nc2.util.Indent, boolean) throws java.io.IOException
    {
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        ucar.nc2.Group r0, $r2, $r11, $r14;
        ucar.nc2.util.Indent r3;
        java.util.List $r4, $r6, $r8, $r10;
        ucar.nc2.Attribute r36;
        java.lang.StringBuilder $r19, $r20, $r23, $r24, $r25, $r26, $r28, $r29, $r32, $r33;
        ucar.nc2.NetcdfFile r1;
        ucar.nc2.Structure $r16;
        int $i0, $i1, $i2, $i3, i4;
        ucar.nc2.Variable r37;
        java.lang.String $r21, $r22, $r27, $r30, $r31, $r34;
        java.io.PrintStream r12;
        java.util.Iterator $r5, $r7, $r9;
        java.lang.Object $r13, $r15, $r17, $r18;
        ucar.nc2.Dimension r35;

        r1 := @parameter0: ucar.nc2.NetcdfFile;

        r0 := @parameter1: ucar.nc2.Group;

        r12 := @parameter2: java.io.PrintStream;

        r3 := @parameter3: ucar.nc2.util.Indent;

        z0 := @parameter4: boolean;

        $r2 = virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Group getRootGroup()>();

        if r0 == $r2 goto label01;

        virtualinvoke r12.<java.io.PrintStream: void print(java.lang.Object)>(r3);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<group name=\'");

        $r30 = virtualinvoke r0.<ucar.nc2.Group: java.lang.String getShortName()>();

        $r31 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r30);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' >\n");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r12.<java.io.PrintStream: void print(java.lang.String)>($r34);

     label01:
        virtualinvoke r3.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        $r4 = virtualinvoke r0.<ucar.nc2.Group: java.util.List getDimensions()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label04;

        $r18 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r35 = (ucar.nc2.Dimension) $r18;

        virtualinvoke r12.<java.io.PrintStream: void print(java.lang.Object)>(r3);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<dimension name=\'");

        $r21 = virtualinvoke r35.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r22 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' length=\'");

        $i3 = virtualinvoke r35.<ucar.nc2.Dimension: int getLength()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r12.<java.io.PrintStream: void print(java.lang.String)>($r27);

        $z2 = virtualinvoke r35.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z2 == 0 goto label03;

        virtualinvoke r12.<java.io.PrintStream: void print(java.lang.String)>(" isUnlimited=\'true\'");

     label03:
        virtualinvoke r12.<java.io.PrintStream: void print(java.lang.String)>(" />\n");

        goto label02;

     label04:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 <= 0 goto label05;

        virtualinvoke r12.<java.io.PrintStream: void print(java.lang.String)>("\n");

     label05:
        $r6 = virtualinvoke r0.<ucar.nc2.Group: java.util.List getAttributes()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z4 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label07;

        $r17 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r36 = (ucar.nc2.Attribute) $r17;

        staticinvoke <ucar.nc2.NCdump: void writeNcMLAtt(ucar.nc2.Attribute,java.io.PrintStream,ucar.nc2.util.Indent)>(r36, r12, r3);

        goto label06;

     label07:
        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i1 <= 0 goto label08;

        virtualinvoke r12.<java.io.PrintStream: void print(java.lang.String)>("\n");

     label08:
        $r8 = virtualinvoke r0.<ucar.nc2.Group: java.util.List getVariables()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z5 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label12;

        $r15 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r37 = (ucar.nc2.Variable) $r15;

        $z1 = r37 instanceof ucar.nc2.Structure;

        if $z1 == 0 goto label10;

        $r16 = (ucar.nc2.Structure) r37;

        staticinvoke <ucar.nc2.NCdump: void writeNcMLStructure(ucar.nc2.Structure,java.io.PrintStream,ucar.nc2.util.Indent)>($r16, r12, r3);

        goto label11;

     label10:
        staticinvoke <ucar.nc2.NCdump: void writeNcMLVariable(ucar.nc2.Variable,java.io.PrintStream,ucar.nc2.util.Indent,boolean)>(r37, r12, r3, z0);

     label11:
        goto label09;

     label12:
        $r10 = virtualinvoke r0.<ucar.nc2.Group: java.util.List getGroups()>();

        i4 = 0;

     label13:
        $i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        if i4 >= $i2 goto label15;

        if i4 <= 0 goto label14;

        virtualinvoke r12.<java.io.PrintStream: void print(java.lang.String)>("\n");

     label14:
        $r13 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i4);

        $r14 = (ucar.nc2.Group) $r13;

        staticinvoke <ucar.nc2.NCdump: void writeNcMLGroup(ucar.nc2.NetcdfFile,ucar.nc2.Group,java.io.PrintStream,ucar.nc2.util.Indent,boolean)>(r1, $r14, r12, r3, z0);

        i4 = i4 + 1;

        goto label13;

     label15:
        virtualinvoke r3.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        $r11 = virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Group getRootGroup()>();

        if r0 == $r11 goto label16;

        virtualinvoke r12.<java.io.PrintStream: void print(java.lang.Object)>(r3);

        virtualinvoke r12.<java.io.PrintStream: void print(java.lang.String)>("</group>\n");

     label16:
        return;
    }

    private static void writeNcMLStructure(ucar.nc2.Structure, java.io.PrintStream, ucar.nc2.util.Indent) throws java.io.IOException
    {
        ucar.nc2.Structure r4;
        int $i0, $i1;
        ucar.nc2.Variable r14;
        java.lang.String $r5, $r6, $r8;
        boolean $z0, $z1;
        java.io.PrintStream r0;
        java.util.Iterator $r10, $r12;
        ucar.nc2.util.Indent r1;
        java.util.List $r9, $r11;
        ucar.nc2.Attribute r16;
        java.lang.StringBuilder $r2, $r3, $r7;
        java.lang.Object $r13, $r15;

        r4 := @parameter0: ucar.nc2.Structure;

        r0 := @parameter1: java.io.PrintStream;

        r1 := @parameter2: ucar.nc2.util.Indent;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.Object)>(r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<structure name=\'");

        $r5 = virtualinvoke r4.<ucar.nc2.Structure: java.lang.String getShortName()>();

        $r6 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r8);

        $i0 = virtualinvoke r4.<ucar.nc2.Structure: int getRank()>();

        if $i0 <= 0 goto label1;

        staticinvoke <ucar.nc2.NCdump: void writeNcMLDimension(ucar.nc2.Variable,java.io.PrintStream)>(r4, r0);

     label1:
        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(">\n");

        virtualinvoke r1.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        $r9 = virtualinvoke r4.<ucar.nc2.Structure: java.util.List getAttributes()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r15 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r16 = (ucar.nc2.Attribute) $r15;

        staticinvoke <ucar.nc2.NCdump: void writeNcMLAtt(ucar.nc2.Attribute,java.io.PrintStream,ucar.nc2.util.Indent)>(r16, r0, r1);

        goto label2;

     label3:
        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i1 <= 0 goto label4;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\n");

     label4:
        $r11 = virtualinvoke r4.<ucar.nc2.Structure: java.util.List getVariables()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (ucar.nc2.Variable) $r13;

        staticinvoke <ucar.nc2.NCdump: void writeNcMLVariable(ucar.nc2.Variable,java.io.PrintStream,ucar.nc2.util.Indent,boolean)>(r14, r0, r1, 0);

        goto label5;

     label6:
        virtualinvoke r1.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.Object)>(r1);

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("</structure>\n");

        return;
    }

    private static void writeNcMLVariable(ucar.nc2.Variable, java.io.PrintStream, ucar.nc2.util.Indent, boolean) throws java.io.IOException
    {
        int $i0, $i1;
        ucar.nc2.Variable r4;
        java.lang.String $r5, $r6, $r12;
        boolean z0, $z1, $z2, z3, z4, z5;
        java.io.PrintStream r0;
        java.util.Iterator $r14;
        ucar.ma2.DataType $r9;
        ucar.nc2.util.Indent r1;
        java.util.List $r13;
        ucar.nc2.Attribute r16;
        java.lang.StringBuilder $r2, $r3, $r7, $r8, $r10, $r11;
        java.lang.Object $r15;

        r4 := @parameter0: ucar.nc2.Variable;

        r0 := @parameter1: java.io.PrintStream;

        r1 := @parameter2: ucar.nc2.util.Indent;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.Object)>(r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<variable name=\'");

        $r5 = virtualinvoke r4.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r6 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' type=\'");

        $r9 = virtualinvoke r4.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r12);

        $i0 = virtualinvoke r4.<ucar.nc2.Variable: int getRank()>();

        if $i0 <= 0 goto label1;

        staticinvoke <ucar.nc2.NCdump: void writeNcMLDimension(ucar.nc2.Variable,java.io.PrintStream)>(r4, r0);

     label1:
        virtualinvoke r1.<ucar.nc2.util.Indent: ucar.nc2.util.Indent incr()>();

        z3 = 0;

        z5 = 0;

        z4 = 0;

        $r13 = virtualinvoke r4.<ucar.nc2.Variable: java.util.List getAttributes()>();

        $i1 = interfaceinvoke $r13.<java.util.List: int size()>();

        if $i1 <= 0 goto label3;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(" >\n");

        z3 = 1;

        z5 = 1;

        z4 = 1;

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (ucar.nc2.Attribute) $r15;

        staticinvoke <ucar.nc2.NCdump: void writeNcMLAtt(ucar.nc2.Attribute,java.io.PrintStream,ucar.nc2.util.Indent)>(r16, r0, r1);

        goto label2;

     label3:
        if z0 == 0 goto label5;

        $z1 = virtualinvoke r4.<ucar.nc2.Variable: boolean isCoordinateVariable()>();

        if $z1 == 0 goto label5;

        if z4 != 0 goto label4;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(" >\n");

        z3 = 1;

        z5 = 1;

     label4:
        staticinvoke <ucar.nc2.NCdump: void writeNcMLValues(ucar.nc2.Variable,java.io.PrintStream,ucar.nc2.util.Indent)>(r4, r0, r1);

     label5:
        virtualinvoke r1.<ucar.nc2.util.Indent: ucar.nc2.util.Indent decr()>();

        if z5 != 0 goto label6;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(" />\n");

        goto label7;

     label6:
        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.Object)>(r1);

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("</variable>\n");

     label7:
        return;
    }

    private static void writeNcMLDimension(ucar.nc2.Variable, java.io.PrintStream)
    {
        java.io.PrintStream r0;
        java.util.List $r2;
        int $i0, $i1, i2;
        ucar.nc2.Variable r1;
        java.lang.Object $r3;
        ucar.nc2.Dimension r4;
        java.lang.String $r5, $r6;
        boolean $z0;

        r1 := @parameter0: ucar.nc2.Variable;

        r0 := @parameter1: java.io.PrintStream;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(" shape=\'");

        $r2 = virtualinvoke r1.<ucar.nc2.Variable: java.util.List getDimensions()>();

        i2 = 0;

     label1:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i2 >= $i0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (ucar.nc2.Dimension) $r3;

        if i2 == 0 goto label2;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(" ");

     label2:
        $z0 = virtualinvoke r4.<ucar.nc2.Dimension: boolean isShared()>();

        if $z0 == 0 goto label3;

        $r5 = virtualinvoke r4.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r6 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r5);

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r6);

        goto label4;

     label3:
        $i1 = virtualinvoke r4.<ucar.nc2.Dimension: int getLength()>();

        virtualinvoke r0.<java.io.PrintStream: void print(int)>($i1);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\'");

        return;
    }

    private static void writeNcMLAtt(ucar.nc2.Attribute, java.io.PrintStream, ucar.nc2.util.Indent)
    {
        int $i0, $i1, i2, i3;
        java.lang.String $r5, $r6, $r9, $r14, $r19, $r20, $r21;
        java.lang.Number $r16;
        boolean $z0;
        java.io.PrintStream r0;
        ucar.ma2.DataType $r12;
        ucar.nc2.util.Indent r1;
        ucar.nc2.Attribute r4;
        java.lang.StringBuilder $r2, $r3, $r7, $r8, $r10, $r11, $r13, $r15, $r17, $r18;

        r4 := @parameter0: ucar.nc2.Attribute;

        r0 := @parameter1: java.io.PrintStream;

        r1 := @parameter2: ucar.nc2.util.Indent;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.Object)>(r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<attribute name=\'");

        $r5 = virtualinvoke r4.<ucar.nc2.Attribute: java.lang.String getName()>();

        $r6 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' value=\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r9);

        $z0 = virtualinvoke r4.<ucar.nc2.Attribute: boolean isString()>();

        if $z0 == 0 goto label4;

        i2 = 0;

     label1:
        $i1 = virtualinvoke r4.<ucar.nc2.Attribute: int getLength()>();

        if i2 >= $i1 goto label3;

        if i2 <= 0 goto label2;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\\, ");

     label2:
        $r20 = virtualinvoke r4.<ucar.nc2.Attribute: java.lang.String getStringValue(int)>(i2);

        $r21 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String quoteXmlAttribute(java.lang.String)>($r20);

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r21);

        i2 = i2 + 1;

        goto label1;

     label3:
        goto label8;

     label4:
        i3 = 0;

     label5:
        $i0 = virtualinvoke r4.<ucar.nc2.Attribute: int getLength()>();

        if i3 >= $i0 goto label7;

        if i3 <= 0 goto label6;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(" ");

     label6:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r4.<ucar.nc2.Attribute: java.lang.Number getNumericValue(int)>(i3);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r19);

        i3 = i3 + 1;

        goto label5;

     label7:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' type=\'");

        $r12 = virtualinvoke r4.<ucar.nc2.Attribute: ucar.ma2.DataType getDataType()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r14);

     label8:
        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("\' />\n");

        return;
    }

    private static void writeNcMLValues(ucar.nc2.Variable, java.io.PrintStream, ucar.nc2.util.Indent) throws java.io.IOException
    {
        int i0;
        ucar.nc2.Variable r0;
        java.lang.String $r6, $r13;
        boolean $z0;
        java.io.PrintStream r7;
        ucar.ma2.IndexIterator $r8;
        ucar.ma2.Array $r1;
        ucar.nc2.util.Indent r3;
        java.lang.StringBuilder $r2, $r4, $r5, $r9, $r11, $r12;
        java.lang.Object $r10;

        r0 := @parameter0: ucar.nc2.Variable;

        r7 := @parameter1: java.io.PrintStream;

        r3 := @parameter2: ucar.nc2.util.Indent;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<values>");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = staticinvoke <ucar.nc2.NCdump: int formatValues(java.lang.String,java.io.PrintStream,int,ucar.nc2.util.Indent)>($r6, r7, 0, r3);

        $r8 = virtualinvoke $r1.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = interfaceinvoke $r8.<ucar.ma2.IndexIterator: java.lang.Object next()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = staticinvoke <ucar.nc2.NCdump: int formatValues(java.lang.String,java.io.PrintStream,int,ucar.nc2.util.Indent)>($r13, r7, i0, r3);

        goto label1;

     label2:
        staticinvoke <ucar.nc2.NCdump: int formatValues(java.lang.String,java.io.PrintStream,int,ucar.nc2.util.Indent)>("</values>\n", r7, i0, r3);

        return;
    }

    private static int formatValues(java.lang.String, java.io.PrintStream, int, ucar.nc2.util.Indent)
    {
        java.io.PrintStream r1;
        ucar.nc2.util.Indent r2;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.PrintStream;

        i4 := @parameter2: int;

        r2 := @parameter3: ucar.nc2.util.Indent;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i0 + i4;

        $i1 = <ucar.nc2.NCdump: int totalWidth>;

        if $i2 <= $i1 goto label1;

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>("\n");

        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.Object)>(r2);

        $r3 = virtualinvoke r2.<ucar.nc2.util.Indent: java.lang.String toString()>();

        i4 = virtualinvoke $r3.<java.lang.String: int length()>();

     label1:
        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>(r0);

        $i3 = i4 + $i0;

        return $i3;
    }

    public static java.lang.String encodeString(java.lang.String)
    {
        char[] $r2;
        java.lang.String[] $r1;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = <ucar.nc2.NCdump: char[] org>;

        $r1 = <ucar.nc2.NCdump: java.lang.String[] replace>;

        $r3 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char[],java.lang.String[])>(r0, $r2, $r1);

        return $r3;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r3, $r6;
        java.lang.String[] r0;
        java.io.IOException $r7;
        int $i0, i1, i2;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, r4, $r5;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = <ucar.nc2.NCdump: java.lang.String usage>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        i1 = lengthof r0;

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        r4 = r0[i2];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i2 = i2 + 1;

        goto label2;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <ucar.nc2.NCdump: boolean print(java.lang.String,java.io.OutputStream,ucar.nc2.util.CancelTask)>($r2, $r3, null);

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.io.IOException: void printStackTrace()>();

     label6:
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    static void <clinit>()
    {
        char[] $r0;
        java.lang.String[] $r1;

        <ucar.nc2.NCdump: boolean debugSelector> = 0;

        <ucar.nc2.NCdump: java.lang.String usage> = "usage: NCdump <filename> [-cdl | -ncml] [-c | -vall] [-v varName1;varName2;..] [-v varName(0:1,:,12)]\n";

        <ucar.nc2.NCdump: int totalWidth> = 80;

        $r0 = newarray (char)[8];

        $r0[0] = 8;

        $r0[1] = 12;

        $r0[2] = 10;

        $r0[3] = 13;

        $r0[4] = 9;

        $r0[5] = 92;

        $r0[6] = 39;

        $r0[7] = 34;

        <ucar.nc2.NCdump: char[] org> = $r0;

        $r1 = newarray (java.lang.String)[8];

        $r1[0] = "\\b";

        $r1[1] = "\\f";

        $r1[2] = "\\n";

        $r1[3] = "\\r";

        $r1[4] = "\\t";

        $r1[5] = "\\\\";

        $r1[6] = "\\\'";

        $r1[7] = "\\\"";

        <ucar.nc2.NCdump: java.lang.String[] replace> = $r1;

        return;
    }
}
