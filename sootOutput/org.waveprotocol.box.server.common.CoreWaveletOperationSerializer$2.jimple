final class org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2 extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.DocOpCursor
{
    final org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder val$output;

    void <init>(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder)
    {
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2 r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder r1;

        r0 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2;

        r1 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder;

        r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder val$output> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder newComponentBuilder()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder $r0;
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2 r1;

        r1 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder newBuilder()>();

        return $r0;
    }

    public void retain(int)
    {
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2 r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component $r4;
        int i0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder $r2, $r3;

        r0 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder val$output>;

        $r2 = specialinvoke r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder newComponentBuilder()>();

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder setRetainItemCount(int)>(i0);

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component build()>();

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder addComponent(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component)>($r4);

        return;
    }

    public void characters(java.lang.String)
    {
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2 r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component $r5;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder $r2, $r4;
        java.lang.String r3;

        r0 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder val$output>;

        $r2 = specialinvoke r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder newComponentBuilder()>();

        $r4 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder setCharacters(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component build()>();

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder addComponent(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component)>($r5);

        return;
    }

    public void deleteCharacters(java.lang.String)
    {
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2 r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component $r5;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder $r2, $r4;
        java.lang.String r3;

        r0 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder val$output>;

        $r2 = specialinvoke r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder newComponentBuilder()>();

        $r4 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder setDeleteCharacters(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component build()>();

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder addComponent(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component)>($r5);

        return;
    }

    public void elementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder $r4;
        org.waveprotocol.wave.model.document.operation.Attributes r2;
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2 r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component $r7;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder $r5, $r6;
        java.lang.String r1;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart $r3;

        r0 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r3 = specialinvoke r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart makeElementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r1, r2);

        $r4 = r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder val$output>;

        $r5 = specialinvoke r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder newComponentBuilder()>();

        $r6 = virtualinvoke $r5.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder setElementStart(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart)>($r3);

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component build()>();

        virtualinvoke $r4.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder addComponent(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component)>($r7);

        return;
    }

    public void deleteElementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder $r4;
        org.waveprotocol.wave.model.document.operation.Attributes r2;
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2 r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component $r7;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder $r5, $r6;
        java.lang.String r1;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart $r3;

        r0 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r3 = specialinvoke r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart makeElementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r1, r2);

        $r4 = r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder val$output>;

        $r5 = specialinvoke r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder newComponentBuilder()>();

        $r6 = virtualinvoke $r5.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder setDeleteElementStart(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart)>($r3);

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component build()>();

        virtualinvoke $r4.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder addComponent(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component)>($r7);

        return;
    }

    private org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart makeElementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder $r8, $r9, $r12;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart$Builder $r0;
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2 r14;
        java.lang.String r1, r7, $r11;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart $r5;
        boolean $z0;
        java.util.Iterator $r4;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair $r13;
        java.util.Set $r3;
        org.waveprotocol.wave.model.document.operation.Attributes r2;
        java.lang.Object $r6, $r10;

        r14 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart$Builder newBuilder()>();

        virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart$Builder setType(java.lang.String)>(r1);

        $r3 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.Attributes: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $r8 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder newBuilder()>();

        $r9 = virtualinvoke $r8.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder setKey(java.lang.String)>(r7);

        $r10 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.Attributes: java.lang.Object get(java.lang.Object)>(r7);

        $r11 = (java.lang.String) $r10;

        $r12 = virtualinvoke $r9.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder setValue(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair build()>();

        virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart$Builder addAttribute(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair)>($r13);

        goto label1;

     label2:
        $r5 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ElementStart build()>();

        return $r5;
    }

    public void elementEnd()
    {
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2 r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component $r4;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder $r2, $r3;

        r0 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2;

        $r1 = r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder val$output>;

        $r2 = specialinvoke r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder newComponentBuilder()>();

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder setElementEnd(boolean)>(1);

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component build()>();

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder addComponent(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component)>($r4);

        return;
    }

    public void deleteElementEnd()
    {
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2 r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component $r4;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder $r2, $r3;

        r0 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2;

        $r1 = r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder val$output>;

        $r2 = specialinvoke r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder newComponentBuilder()>();

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder setDeleteElementEnd(boolean)>(1);

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component build()>();

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder addComponent(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component)>($r4);

        return;
    }

    public void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        boolean $z0, $z1, $z2, $z3;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ReplaceAttributes $r10;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair $r19, $r26;
        java.util.Set $r2, $r5;
        org.waveprotocol.wave.model.document.operation.Attributes r1, r4;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component $r12;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder $r9, $r11;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder $r14, $r15, $r18, $r21, $r22, $r25;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder $r8;
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2 r7;
        java.lang.String $r17, $r24, r27, r28;
        java.util.Iterator $r3, $r6;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ReplaceAttributes$Builder $r0;
        java.lang.Object $r13, $r16, $r20, $r23;

        r7 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        r4 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ReplaceAttributes: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ReplaceAttributes$Builder newBuilder()>();

        $z0 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.Attributes: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $z2 = interfaceinvoke r4.<org.waveprotocol.wave.model.document.operation.Attributes: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ReplaceAttributes$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ReplaceAttributes$Builder setEmpty(boolean)>(1);

        goto label5;

     label1:
        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.Attributes: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r20 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r27 = (java.lang.String) $r20;

        $r21 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder newBuilder()>();

        $r22 = virtualinvoke $r21.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder setKey(java.lang.String)>(r27);

        $r23 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.Attributes: java.lang.Object get(java.lang.Object)>(r27);

        $r24 = (java.lang.String) $r23;

        $r25 = virtualinvoke $r22.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder setValue(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair build()>();

        virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ReplaceAttributes$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ReplaceAttributes$Builder addOldAttribute(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair)>($r26);

        goto label2;

     label3:
        $r5 = interfaceinvoke r4.<org.waveprotocol.wave.model.document.operation.Attributes: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r13 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.lang.String) $r13;

        $r14 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder newBuilder()>();

        $r15 = virtualinvoke $r14.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder setKey(java.lang.String)>(r28);

        $r16 = interfaceinvoke r4.<org.waveprotocol.wave.model.document.operation.Attributes: java.lang.Object get(java.lang.Object)>(r28);

        $r17 = (java.lang.String) $r16;

        $r18 = virtualinvoke $r15.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder setValue(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair build()>();

        virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ReplaceAttributes$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ReplaceAttributes$Builder addNewAttribute(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValuePair)>($r19);

        goto label4;

     label5:
        $r8 = r7.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder val$output>;

        $r9 = specialinvoke r7.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder newComponentBuilder()>();

        $r10 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ReplaceAttributes$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ReplaceAttributes build()>();

        $r11 = virtualinvoke $r9.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder setReplaceAttributes(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$ReplaceAttributes)>($r10);

        $r12 = virtualinvoke $r11.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component build()>();

        virtualinvoke $r8.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder addComponent(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component)>($r12);

        return;
    }

    public void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder $r3;
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2 r2;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component $r7;
        int $i0, $i1, i2;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes $r5;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder $r4, $r6;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate $r11;
        java.lang.String $r8, $r9, $r10;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder $r0;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r1;

        r2 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder newBuilder()>();

        $i0 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: int changeSize()>();

        if $i0 != 0 goto label1;

        virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder setEmpty(boolean)>(1);

        goto label3;

     label1:
        i2 = 0;

     label2:
        $i1 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: int changeSize()>();

        if i2 >= $i1 goto label3;

        $r8 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getChangeKey(int)>(i2);

        $r9 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getOldValue(int)>(i2);

        $r10 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getNewValue(int)>(i2);

        $r11 = specialinvoke r2.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate makeKeyValueUpdate(java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, $r10);

        virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder addAttributeUpdate(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate)>($r11);

        i2 = i2 + 1;

        goto label2;

     label3:
        $r3 = r2.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder val$output>;

        $r4 = specialinvoke r2.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder newComponentBuilder()>();

        $r5 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes build()>();

        $r6 = virtualinvoke $r4.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder setUpdateAttributes(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes)>($r5);

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component build()>();

        virtualinvoke $r3.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder addComponent(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component)>($r7);

        return;
    }

    public void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder $r3;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap r1;
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2 r2;
        int $i0, $i1, $i2, i3, $i4, i5;
        java.lang.String $r8, $r9, $r10, $r12;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$AnnotationBoundary $r5;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$AnnotationBoundary$Builder $r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component $r7;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder $r4, $r6;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate $r11;

        r2 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$AnnotationBoundary: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$AnnotationBoundary$Builder newBuilder()>();

        $i0 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int endSize()>();

        if $i0 != 0 goto label1;

        $i2 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int changeSize()>();

        if $i2 != 0 goto label1;

        virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$AnnotationBoundary$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$AnnotationBoundary$Builder setEmpty(boolean)>(1);

        goto label5;

     label1:
        i3 = 0;

     label2:
        $i4 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int endSize()>();

        if i3 >= $i4 goto label3;

        $r12 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getEndKey(int)>(i3);

        virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$AnnotationBoundary$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$AnnotationBoundary$Builder addEnd(java.lang.String)>($r12);

        i3 = i3 + 1;

        goto label2;

     label3:
        i5 = 0;

     label4:
        $i1 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int changeSize()>();

        if i5 >= $i1 goto label5;

        $r8 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getChangeKey(int)>(i5);

        $r9 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getOldValue(int)>(i5);

        $r10 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getNewValue(int)>(i5);

        $r11 = specialinvoke r2.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate makeKeyValueUpdate(java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, $r10);

        virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$AnnotationBoundary$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$AnnotationBoundary$Builder addChange(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate)>($r11);

        i5 = i5 + 1;

        goto label4;

     label5:
        $r3 = r2.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder val$output>;

        $r4 = specialinvoke r2.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder newComponentBuilder()>();

        $r5 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$AnnotationBoundary$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$AnnotationBoundary build()>();

        $r6 = virtualinvoke $r4.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder setAnnotationBoundary(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$AnnotationBoundary)>($r5);

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component build()>();

        virtualinvoke $r3.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Builder addComponent(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component)>($r7);

        return;
    }

    private org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate makeKeyValueUpdate(java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2 r5;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate $r4;
        java.lang.String r1, r2, r3;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate$Builder $r0;

        r5 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate$Builder newBuilder()>();

        virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate$Builder setKey(java.lang.String)>(r1);

        if r2 == null goto label1;

        virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate$Builder setOldValue(java.lang.String)>(r2);

     label1:
        if r3 == null goto label2;

        virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate$Builder setNewValue(java.lang.String)>(r3);

     label2:
        $r4 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate build()>();

        return $r4;
    }
}
