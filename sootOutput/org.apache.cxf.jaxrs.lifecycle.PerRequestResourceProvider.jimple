public class org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider extends java.lang.Object implements org.apache.cxf.jaxrs.lifecycle.ResourceProvider
{
    private java.lang.reflect.Constructor c;
    private java.lang.reflect.Method postConstructMethod;
    private java.lang.reflect.Method preDestroyMethod;

    public void <init>(java.lang.Class)
    {
        org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider r0;
        java.lang.RuntimeException $r6;
        java.lang.reflect.Constructor $r2, $r3;
        java.lang.Class r1;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r11;
        java.lang.reflect.Method $r4, $r5;

        r0 := @this: org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.lang.reflect.Constructor findResourceConstructor(java.lang.Class,boolean)>(r1, 1);

        r0.<org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider: java.lang.reflect.Constructor c> = $r2;

        $r3 = r0.<org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider: java.lang.reflect.Constructor c>;

        if $r3 != null goto label1;

        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource class ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no valid constructor");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.lang.reflect.Method findPostConstructMethod(java.lang.Class)>(r1);

        r0.<org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider: java.lang.reflect.Method postConstructMethod> = $r4;

        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.lang.reflect.Method findPreDestroyMethod(java.lang.Class)>(r1);

        r0.<org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider: java.lang.reflect.Method preDestroyMethod> = $r5;

        return;
    }

    public boolean isSingleton()
    {
        org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider;

        return 0;
    }

    public java.lang.Object getInstance(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider r0;
        java.lang.Object $r2;
        org.apache.cxf.message.Message r1;

        r0 := @this: org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider;

        r1 := @parameter0: org.apache.cxf.message.Message;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider: java.lang.Object createInstance(org.apache.cxf.message.Message)>(r1);

        return $r2;
    }

    protected java.lang.Object createInstance(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider r0;
        java.lang.InstantiationException $r40;
        java.lang.reflect.Method $r6;
        java.lang.IllegalAccessException $r26;
        javax.ws.rs.InternalServerErrorException $r20, $r25, $r36, $r49;
        java.lang.reflect.InvocationTargetException $r8;
        javax.ws.rs.core.Response $r10, $r23, $r39, $r52;
        javax.ws.rs.core.Response$ResponseBuilder $r21, $r22, $r37, $r38, $r50, $r51;
        java.lang.StringBuilder $r11, $r12, $r16, $r17, $r18, $r27, $r28, $r32, $r33, $r34, $r41, $r42, $r46, $r47;
        java.lang.Throwable $r9;
        java.lang.Object[] $r3, $r4;
        java.lang.reflect.Constructor $r2, $r5, $r7, $r13, $r29, $r43;
        int $i0;
        java.lang.String $r15, $r19, $r31, $r35, $r45, $r48;
        org.apache.cxf.message.Message r1;
        org.apache.cxf.message.Exchange $r24;
        java.lang.Class $r14, $r30, $r44;
        java.lang.Object $r53;

        r0 := @this: org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider;

        r1 := @parameter0: org.apache.cxf.message.Message;

        $r2 = r0.<org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider: java.lang.reflect.Constructor c>;

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.lang.Object[] createConstructorArguments(java.lang.reflect.Constructor,org.apache.cxf.message.Message)>($r2, r1);

     label1:
        $i0 = lengthof $r3;

        if $i0 <= 0 goto label2;

        $r7 = r0.<org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider: java.lang.reflect.Constructor c>;

        $r53 = virtualinvoke $r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r3);

        goto label3;

     label2:
        $r5 = r0.<org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider: java.lang.reflect.Constructor c>;

        $r4 = newarray (java.lang.Object)[0];

        $r53 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

     label3:
        $r6 = r0.<org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider: java.lang.reflect.Method postConstructMethod>;

        staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: void invokeLifeCycleMethod(java.lang.Object,java.lang.reflect.Method)>($r53, $r6);

     label4:
        return $r53;

     label5:
        $r40 := @caughtexception;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource class ");

        $r43 = r0.<org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider: java.lang.reflect.Constructor c>;

        $r44 = virtualinvoke $r43.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        $r45 = virtualinvoke $r44.<java.lang.Class: java.lang.String getName()>();

        $r46 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can not be instantiated");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        $r49 = new javax.ws.rs.InternalServerErrorException;

        $r50 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder serverError()>();

        $r51 = virtualinvoke $r50.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r48);

        $r52 = virtualinvoke $r51.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        specialinvoke $r49.<javax.ws.rs.InternalServerErrorException: void <init>(javax.ws.rs.core.Response)>($r52);

        throw $r49;

     label6:
        $r26 := @caughtexception;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource class ");

        $r29 = r0.<org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider: java.lang.reflect.Constructor c>;

        $r30 = virtualinvoke $r29.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        $r31 = virtualinvoke $r30.<java.lang.Class: java.lang.String getName()>();

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can not be instantiated");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to IllegalAccessException");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        $r36 = new javax.ws.rs.InternalServerErrorException;

        $r37 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder serverError()>();

        $r38 = virtualinvoke $r37.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r35);

        $r39 = virtualinvoke $r38.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        specialinvoke $r36.<javax.ws.rs.InternalServerErrorException: void <init>(javax.ws.rs.core.Response)>($r39);

        throw $r36;

     label7:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $r10 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable,org.apache.cxf.message.Message)>($r9, r1);

        if $r10 == null goto label8;

        $r24 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r24.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Ljavax/ws/rs/core/Response;", $r10);

        $r25 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r25.<javax.ws.rs.InternalServerErrorException: void <init>()>();

        throw $r25;

     label8:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource class ");

        $r13 = r0.<org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider: java.lang.reflect.Constructor c>;

        $r14 = virtualinvoke $r13.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can not be instantiated");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to InvocationTargetException");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = new javax.ws.rs.InternalServerErrorException;

        $r21 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder serverError()>();

        $r22 = virtualinvoke $r21.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r19);

        $r23 = virtualinvoke $r22.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        specialinvoke $r20.<javax.ws.rs.InternalServerErrorException: void <init>(javax.ws.rs.core.Response)>($r23);

        throw $r20;

        catch java.lang.InstantiationException from label1 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label4 with label7;
    }

    public void releaseInstance(org.apache.cxf.message.Message, java.lang.Object)
    {
        org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider r1;
        org.apache.cxf.message.Message r3;
        java.lang.Object r0;
        java.lang.reflect.Method $r2;

        r1 := @this: org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider;

        r3 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: java.lang.Object;

        $r2 = r1.<org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider: java.lang.reflect.Method preDestroyMethod>;

        staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: void invokeLifeCycleMethod(java.lang.Object,java.lang.reflect.Method)>(r0, $r2);

        return;
    }

    public java.lang.Class getResourceClass()
    {
        org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider r0;
        java.lang.Class $r2;
        java.lang.reflect.Constructor $r1;

        r0 := @this: org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider;

        $r1 = r0.<org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider: java.lang.reflect.Constructor c>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        return $r2;
    }
}
