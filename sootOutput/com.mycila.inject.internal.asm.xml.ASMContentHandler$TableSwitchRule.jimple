class com.mycila.inject.internal.asm.xml.ASMContentHandler$TableSwitchRule extends com.mycila.inject.internal.asm.xml.ASMContentHandler$Rule
{
    private final com.mycila.inject.internal.asm.xml.ASMContentHandler this$0;

    void <init>(com.mycila.inject.internal.asm.xml.ASMContentHandler)
    {
        com.mycila.inject.internal.asm.xml.ASMContentHandler$TableSwitchRule r0;
        com.mycila.inject.internal.asm.xml.ASMContentHandler r1;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$TableSwitchRule;

        r1 := @parameter0: com.mycila.inject.internal.asm.xml.ASMContentHandler;

        specialinvoke r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Rule: void <init>(com.mycila.inject.internal.asm.xml.ASMContentHandler)>(r1);

        r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$TableSwitchRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0> = r1;

        return;
    }

    public final void begin(java.lang.String, org.xml.sax.Attributes)
    {
        com.mycila.inject.internal.asm.xml.ASMContentHandler$TableSwitchRule r6;
        java.util.HashMap $r0;
        java.util.ArrayList $r5;
        com.mycila.inject.internal.asm.xml.ASMContentHandler $r7;
        org.xml.sax.Attributes r1;
        java.lang.String $r2, $r3, $r4, r8;

        r6 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$TableSwitchRule;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: org.xml.sax.Attributes;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("min");

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("min", $r2);

        $r3 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("max");

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("max", $r3);

        $r4 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("dflt");

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dflt", $r4);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("labels", $r5);

        $r7 = r6.<com.mycila.inject.internal.asm.xml.ASMContentHandler$TableSwitchRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0>;

        virtualinvoke $r7.<com.mycila.inject.internal.asm.xml.ASMContentHandler: void push(java.lang.Object)>($r0);

        return;
    }

    public final void end(java.lang.String)
    {
        java.lang.Object[] $r13;
        com.mycila.inject.internal.asm.Label[] $r12, $r14, r15;
        com.mycila.inject.internal.asm.MethodVisitor $r16;
        java.util.Map r3;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r7, r17;
        com.mycila.inject.internal.asm.xml.ASMContentHandler$TableSwitchRule r0;
        com.mycila.inject.internal.asm.xml.ASMContentHandler $r1;
        java.util.List r11;
        com.mycila.inject.internal.asm.Label $r9;
        java.lang.Object $r2, $r4, $r6, $r8, $r10;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$TableSwitchRule;

        r17 := @parameter0: java.lang.String;

        $r1 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$TableSwitchRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0>;

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.asm.xml.ASMContentHandler: java.lang.Object pop()>();

        r3 = (java.util.Map) $r2;

        $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("min");

        $r5 = (java.lang.String) $r4;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        $r6 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("max");

        $r7 = (java.lang.String) $r6;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("dflt");

        $r9 = virtualinvoke r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$TableSwitchRule: com.mycila.inject.internal.asm.Label getLabel(java.lang.Object)>($r8);

        $r10 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("labels");

        r11 = (java.util.List) $r10;

        $i2 = interfaceinvoke r11.<java.util.List: int size()>();

        $r12 = newarray (com.mycila.inject.internal.asm.Label)[$i2];

        $r13 = interfaceinvoke r11.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        $r14 = (com.mycila.inject.internal.asm.Label[]) $r13;

        r15 = (com.mycila.inject.internal.asm.Label[]) $r14;

        $r16 = virtualinvoke r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$TableSwitchRule: com.mycila.inject.internal.asm.MethodVisitor getCodeVisitor()>();

        interfaceinvoke $r16.<com.mycila.inject.internal.asm.MethodVisitor: void visitTableSwitchInsn(int,int,com.mycila.inject.internal.asm.Label,com.mycila.inject.internal.asm.Label[])>($i0, $i1, $r9, r15);

        return;
    }
}
