public class org.mortbay.util.ajax.AjaxFilter extends java.lang.Object implements javax.servlet.Filter
{
    javax.servlet.ServletContext context;

    public void <init>()
    {
        org.mortbay.util.ajax.AjaxFilter r0;

        r0 := @this: org.mortbay.util.ajax.AjaxFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init(javax.servlet.FilterConfig) throws javax.servlet.ServletException
    {
        javax.servlet.ServletContext $r2;
        org.mortbay.util.ajax.AjaxFilter r0;
        javax.servlet.FilterConfig r1;

        r0 := @this: org.mortbay.util.ajax.AjaxFilter;

        r1 := @parameter0: javax.servlet.FilterConfig;

        $r2 = interfaceinvoke r1.<javax.servlet.FilterConfig: javax.servlet.ServletContext getServletContext()>();

        r0.<org.mortbay.util.ajax.AjaxFilter: javax.servlet.ServletContext context> = $r2;

        return;
    }

    public javax.servlet.ServletContext getContext()
    {
        javax.servlet.ServletContext $r1;
        org.mortbay.util.ajax.AjaxFilter r0;

        r0 := @this: org.mortbay.util.ajax.AjaxFilter;

        $r1 = r0.<org.mortbay.util.ajax.AjaxFilter: javax.servlet.ServletContext context>;

        return $r1;
    }

    public void doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException
    {
        byte[] $r11;
        javax.servlet.FilterChain r3;
        java.lang.String[] $r1, $r2;
        javax.servlet.http.HttpServletRequest r5;
        javax.servlet.ServletOutputStream $r12;
        int $i0, $i1, $i2, i3;
        org.mortbay.util.ajax.AjaxFilter$AjaxResponse $r9;
        java.lang.String $r10, $r14, $r15;
        java.io.PrintWriter $r8;
        javax.servlet.ServletRequest r0;
        java.io.StringWriter $r7;
        javax.servlet.http.HttpServletResponse r6;
        org.mortbay.util.ajax.AjaxFilter r13;
        javax.servlet.ServletResponse r4;

        r13 := @this: org.mortbay.util.ajax.AjaxFilter;

        r0 := @parameter0: javax.servlet.ServletRequest;

        r4 := @parameter1: javax.servlet.ServletResponse;

        r3 := @parameter2: javax.servlet.FilterChain;

        $r1 = interfaceinvoke r0.<javax.servlet.ServletRequest: java.lang.String[] getParameterValues(java.lang.String)>("ajax");

        $r2 = interfaceinvoke r0.<javax.servlet.ServletRequest: java.lang.String[] getParameterValues(java.lang.String)>("message");

        if $r1 == null goto label3;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label3;

        r5 = (javax.servlet.http.HttpServletRequest) r0;

        r6 = (javax.servlet.http.HttpServletResponse) r4;

        $r7 = new java.io.StringWriter;

        specialinvoke $r7.<java.io.StringWriter: void <init>()>();

        $r8 = new java.io.PrintWriter;

        specialinvoke $r8.<java.io.PrintWriter: void <init>(java.io.Writer)>($r7);

        virtualinvoke $r8.<java.io.PrintWriter: void println(java.lang.String)>("<ajax-response>");

        $r9 = new org.mortbay.util.ajax.AjaxFilter$AjaxResponse;

        specialinvoke $r9.<org.mortbay.util.ajax.AjaxFilter$AjaxResponse: void <init>(javax.servlet.http.HttpServletRequest,java.io.PrintWriter,org.mortbay.util.ajax.AjaxFilter$1)>(r5, $r8, null);

        i3 = 0;

     label1:
        $i1 = lengthof $r1;

        if i3 >= $i1 goto label2;

        $r15 = $r1[i3];

        $r14 = $r2[i3];

        virtualinvoke r13.<org.mortbay.util.ajax.AjaxFilter: void handle(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,org.mortbay.util.ajax.AjaxFilter$AjaxResponse)>($r15, $r14, r5, $r9);

        i3 = i3 + 1;

        goto label1;

     label2:
        virtualinvoke $r8.<java.io.PrintWriter: void println(java.lang.String)>("</ajax-response>");

        $r10 = virtualinvoke $r7.<java.io.StringWriter: java.lang.String toString()>();

        $r11 = virtualinvoke $r10.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        interfaceinvoke r6.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Pragma", "no-cache");

        interfaceinvoke r6.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>("Cache-Control", "must-revalidate,no-cache,no-store");

        interfaceinvoke r6.<javax.servlet.http.HttpServletResponse: void setDateHeader(java.lang.String,long)>("Expires", 0L);

        interfaceinvoke r6.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("text/xml; charset=UTF-8");

        $i2 = lengthof $r11;

        interfaceinvoke r6.<javax.servlet.http.HttpServletResponse: void setContentLength(int)>($i2);

        $r12 = interfaceinvoke r6.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        virtualinvoke $r12.<javax.servlet.ServletOutputStream: void write(byte[])>($r11);

        interfaceinvoke r6.<javax.servlet.http.HttpServletResponse: void flushBuffer()>();

        goto label4;

     label3:
        interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r0, r4);

     label4:
        return;
    }

    public void handle(java.lang.String, java.lang.String, javax.servlet.http.HttpServletRequest, org.mortbay.util.ajax.AjaxFilter$AjaxResponse)
    {
        org.mortbay.util.ajax.AjaxFilter r11;
        javax.servlet.http.HttpServletRequest r6;
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r8, $r9;
        org.mortbay.util.ajax.AjaxFilter$AjaxResponse r0;
        java.lang.String r3, $r7, $r10, r12;

        r11 := @this: org.mortbay.util.ajax.AjaxFilter;

        r3 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        r6 := @parameter2: javax.servlet.http.HttpServletRequest;

        r0 := @parameter3: org.mortbay.util.ajax.AjaxFilter$AjaxResponse;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<span class=\"error\">No implementation for ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r7 = interfaceinvoke r6.<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("member");

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</span>");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.mortbay.util.ajax.AjaxFilter$AjaxResponse: void elementResponse(java.lang.String,java.lang.String)>(null, $r10);

        return;
    }

    public void destroy()
    {
        org.mortbay.util.ajax.AjaxFilter r0;

        r0 := @this: org.mortbay.util.ajax.AjaxFilter;

        r0.<org.mortbay.util.ajax.AjaxFilter: javax.servlet.ServletContext context> = null;

        return;
    }

    public static java.lang.String encodeText(java.lang.String)
    {
        java.lang.CharSequence $r3;
        char $c1;
        java.lang.StringBuffer r4, $r8;
        int $i0, $i2, $i3, i4, $i5;
        java.lang.String r0, $r1, r5, r6, r7;

        r0 := @parameter0: java.lang.String;

        r4 = null;

        i4 = 0;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 >= $i0 goto label09;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        r5 = null;

        r7 = null;

        r6 = null;

        $i5 = (int) $c1;

        lookupswitch($i5)
        {
            case 38: goto label04;
            case 60: goto label02;
            case 62: goto label03;
            default: goto label05;
        };

     label02:
        r5 = "&lt;";

        r7 = "&lt;";

        r6 = "&lt;";

        goto label05;

     label03:
        r5 = "&gt;";

        r7 = "&gt;";

        r6 = "&gt;";

        goto label05;

     label04:
        r5 = "&amp;";

        r7 = "&amp;";

        r6 = "&amp;";

     label05:
        if r6 == null goto label07;

        if r4 != null goto label06;

        $r8 = new java.lang.StringBuffer;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = $i2 * 2;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>(int)>($i3);

        r4 = $r8;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.CharSequence subSequence(int,int)>(0, i4);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>($r3);

     label06:
        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        goto label08;

     label07:
        if r4 == null goto label08;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label08:
        i4 = i4 + 1;

        goto label01;

     label09:
        if r4 == null goto label10;

        $r1 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;

     label10:
        return r0;
    }
}
