public class org.apache.batik.ext.awt.image.codec.tiff.TIFFField extends java.lang.Object implements java.lang.Comparable, java.io.Serializable
{
    public static final int TIFF_BYTE;
    public static final int TIFF_ASCII;
    public static final int TIFF_SHORT;
    public static final int TIFF_LONG;
    public static final int TIFF_RATIONAL;
    public static final int TIFF_SBYTE;
    public static final int TIFF_UNDEFINED;
    public static final int TIFF_SSHORT;
    public static final int TIFF_SLONG;
    public static final int TIFF_SRATIONAL;
    public static final int TIFF_FLOAT;
    public static final int TIFF_DOUBLE;
    int tag;
    int type;
    int count;
    java.lang.Object data;

    void <init>()
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(int, int, int, java.lang.Object)
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;
        int i0, i1, i2;
        java.lang.Object r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int tag> = i0;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int type> = i1;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int count> = i2;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data> = r1;

        return;
    }

    public int getTag()
    {
        int $i0;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        $i0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int tag>;

        return $i0;
    }

    public int getType()
    {
        int $i0;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        $i0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int type>;

        return $i0;
    }

    public int getCount()
    {
        int $i0;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        $i0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int count>;

        return $i0;
    }

    public byte[] getAsBytes()
    {
        byte[] $r2;
        java.lang.Object $r1;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r2 = (byte[]) $r1;

        return $r2;
    }

    public char[] getAsChars()
    {
        char[] $r2;
        java.lang.Object $r1;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r2 = (char[]) $r1;

        return $r2;
    }

    public short[] getAsShorts()
    {
        java.lang.Object $r1;
        short[] $r2;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r2 = (short[]) $r1;

        return $r2;
    }

    public int[] getAsInts()
    {
        java.lang.Object $r1;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;
        int[] $r2;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r2 = (int[]) $r1;

        return $r2;
    }

    public long[] getAsLongs()
    {
        java.lang.Object $r1;
        long[] $r2;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r2 = (long[]) $r1;

        return $r2;
    }

    public float[] getAsFloats()
    {
        java.lang.Object $r1;
        float[] $r2;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r2 = (float[]) $r1;

        return $r2;
    }

    public double[] getAsDoubles()
    {
        double[] $r2;
        java.lang.Object $r1;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r2 = (double[]) $r1;

        return $r2;
    }

    public int[][] getAsSRationals()
    {
        java.lang.Object $r1;
        int[][] $r2;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r2 = (int[][]) $r1;

        return $r2;
    }

    public long[][] getAsRationals()
    {
        long[][] $r2;
        java.lang.Object $r1;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r2 = (long[][]) $r1;

        return $r2;
    }

    public int getAsInt(int)
    {
        byte[] $r6, $r10;
        java.lang.ClassCastException $r12;
        short $s3, $s8, $s9;
        byte $b4, $b7;
        int[] $r2;
        int $i0, i1, $i2, $i10, $i11, $i12, $i13;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;
        char $c5, $c6;
        char[] $r8;
        java.lang.Object $r1, $r3, $r5, $r7, $r9;
        short[] $r4;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        i1 := @parameter0: int;

        $i0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int type>;

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label6;
            case 3: goto label3;
            case 4: goto label6;
            case 5: goto label6;
            case 6: goto label2;
            case 7: goto label1;
            case 8: goto label4;
            case 9: goto label5;
            default: goto label6;
        };

     label1:
        $r9 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r10 = (byte[]) $r9;

        $b7 = $r10[i1];

        $s9 = (short) $b7;

        $s8 = $s9 & 255;

        $i10 = (int) $s8;

        return $i10;

     label2:
        $r5 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r6 = (byte[]) $r5;

        $b4 = $r6[i1];

        $i11 = (int) $b4;

        return $i11;

     label3:
        $r7 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r8 = (char[]) $r7;

        $c5 = $r8[i1];

        $c6 = $c5 & 65535;

        $i12 = (int) $c6;

        return $i12;

     label4:
        $r3 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r4 = (short[]) $r3;

        $s3 = $r4[i1];

        $i13 = (int) $s3;

        return $i13;

     label5:
        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r2 = (int[]) $r1;

        $i2 = $r2[i1];

        return $i2;

     label6:
        $r12 = new java.lang.ClassCastException;

        specialinvoke $r12.<java.lang.ClassCastException: void <init>()>();

        throw $r12;
    }

    public long getAsLong(int)
    {
        byte[] $r6, $r12;
        long $l3, $l5, $l7, $l8, $l11, $l14;
        java.lang.ClassCastException $r14;
        short $s4, $s13, $s15;
        long[] $r8;
        byte $b6, $b12;
        int[] $r2;
        int $i0, i1, $i2;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;
        char $c9, $c10;
        char[] $r10;
        java.lang.Object $r1, $r3, $r5, $r7, $r9, $r11;
        short[] $r4;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        i1 := @parameter0: int;

        $i0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int type>;

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label7;
            case 3: goto label3;
            case 4: goto label6;
            case 5: goto label7;
            case 6: goto label2;
            case 7: goto label1;
            case 8: goto label4;
            case 9: goto label5;
            default: goto label7;
        };

     label1:
        $r11 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r12 = (byte[]) $r11;

        $b12 = $r12[i1];

        $s15 = (short) $b12;

        $s13 = $s15 & 255;

        $l14 = (long) $s13;

        return $l14;

     label2:
        $r5 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r6 = (byte[]) $r5;

        $b6 = $r6[i1];

        $l7 = (long) $b6;

        return $l7;

     label3:
        $r9 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r10 = (char[]) $r9;

        $c9 = $r10[i1];

        $c10 = $c9 & 65535;

        $l11 = (long) $c10;

        return $l11;

     label4:
        $r3 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r4 = (short[]) $r3;

        $s4 = $r4[i1];

        $l5 = (long) $s4;

        return $l5;

     label5:
        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r2 = (int[]) $r1;

        $i2 = $r2[i1];

        $l3 = (long) $i2;

        return $l3;

     label6:
        $r7 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r8 = (long[]) $r7;

        $l8 = $r8[i1];

        return $l8;

     label7:
        $r14 = new java.lang.ClassCastException;

        specialinvoke $r14.<java.lang.ClassCastException: void <init>()>();

        throw $r14;
    }

    public float getAsFloat(int)
    {
        byte[] $r11, $r18;
        byte $b6, $b12;
        int[] $r5, $r7;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        short[] $r9;
        double[] $r2;
        float[] $r4;
        long $l7, $l8, $l9;
        java.lang.ClassCastException $r20;
        short $s5, $s13, $s14;
        long[] $r12, $r14;
        int $i0, i1, $i2, $i3, $i4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;
        char $c10, $c11;
        char[] $r16;
        java.lang.Object $r1, $r3, $r6, $r8, $r10, $r13, $r15, $r17;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        i1 := @parameter0: int;

        $i0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int type>;

        tableswitch($i0)
        {
            case 1: goto label01;
            case 2: goto label11;
            case 3: goto label03;
            case 4: goto label06;
            case 5: goto label10;
            case 6: goto label02;
            case 7: goto label11;
            case 8: goto label04;
            case 9: goto label05;
            case 10: goto label09;
            case 11: goto label07;
            case 12: goto label08;
            default: goto label11;
        };

     label01:
        $r17 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r18 = (byte[]) $r17;

        $b12 = $r18[i1];

        $s14 = (short) $b12;

        $s13 = $s14 & 255;

        $f9 = (float) $s13;

        return $f9;

     label02:
        $r10 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r11 = (byte[]) $r10;

        $b6 = $r11[i1];

        $f5 = (float) $b6;

        return $f5;

     label03:
        $r15 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r16 = (char[]) $r15;

        $c10 = $r16[i1];

        $c11 = $c10 & 65535;

        $f8 = (float) $c11;

        return $f8;

     label04:
        $r8 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r9 = (short[]) $r8;

        $s5 = $r9[i1];

        $f4 = (float) $s5;

        return $f4;

     label05:
        $r6 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r7 = (int[]) $r6;

        $i4 = $r7[i1];

        $f3 = (float) $i4;

        return $f3;

     label06:
        $r13 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r14 = (long[]) $r13;

        $l9 = $r14[i1];

        $f7 = (float) $l9;

        return $f7;

     label07:
        $r3 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r4 = (float[]) $r3;

        $f1 = $r4[i1];

        return $f1;

     label08:
        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r2 = (double[]) $r1;

        $d0 = $r2[i1];

        $f0 = (float) $d0;

        return $f0;

     label09:
        $r5 = virtualinvoke r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int[] getAsSRational(int)>(i1);

        $i2 = $r5[0];

        $d2 = (double) $i2;

        $i3 = $r5[1];

        $d1 = (double) $i3;

        $d3 = $d2 / $d1;

        $f2 = (float) $d3;

        return $f2;

     label10:
        $r12 = virtualinvoke r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: long[] getAsRational(int)>(i1);

        $l7 = $r12[0];

        $d5 = (double) $l7;

        $l8 = $r12[1];

        $d4 = (double) $l8;

        $d6 = $d5 / $d4;

        $f6 = (float) $d6;

        return $f6;

     label11:
        $r20 = new java.lang.ClassCastException;

        specialinvoke $r20.<java.lang.ClassCastException: void <init>()>();

        throw $r20;
    }

    public double getAsDouble(int)
    {
        byte[] $r11, $r18;
        byte $b6, $b12;
        int[] $r5, $r7;
        float $f0;
        short[] $r9;
        double[] $r2;
        float[] $r4;
        long $l7, $l8, $l9;
        java.lang.ClassCastException $r20;
        short $s5, $s13, $s14;
        long[] $r12, $r14;
        int $i0, i1, $i2, $i3, $i4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;
        char $c10, $c11;
        char[] $r16;
        java.lang.Object $r1, $r3, $r6, $r8, $r10, $r13, $r15, $r17;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        i1 := @parameter0: int;

        $i0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int type>;

        tableswitch($i0)
        {
            case 1: goto label01;
            case 2: goto label11;
            case 3: goto label03;
            case 4: goto label06;
            case 5: goto label10;
            case 6: goto label02;
            case 7: goto label11;
            case 8: goto label04;
            case 9: goto label05;
            case 10: goto label09;
            case 11: goto label07;
            case 12: goto label08;
            default: goto label11;
        };

     label01:
        $r17 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r18 = (byte[]) $r17;

        $b12 = $r18[i1];

        $s14 = (short) $b12;

        $s13 = $s14 & 255;

        $d13 = (double) $s13;

        return $d13;

     label02:
        $r10 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r11 = (byte[]) $r10;

        $b6 = $r11[i1];

        $d7 = (double) $b6;

        return $d7;

     label03:
        $r15 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r16 = (char[]) $r15;

        $c10 = $r16[i1];

        $c11 = $c10 & 65535;

        $d12 = (double) $c11;

        return $d12;

     label04:
        $r8 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r9 = (short[]) $r8;

        $s5 = $r9[i1];

        $d6 = (double) $s5;

        return $d6;

     label05:
        $r6 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r7 = (int[]) $r6;

        $i4 = $r7[i1];

        $d5 = (double) $i4;

        return $d5;

     label06:
        $r13 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r14 = (long[]) $r13;

        $l9 = $r14[i1];

        $d11 = (double) $l9;

        return $d11;

     label07:
        $r3 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r4 = (float[]) $r3;

        $f0 = $r4[i1];

        $d1 = (double) $f0;

        return $d1;

     label08:
        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r2 = (double[]) $r1;

        $d0 = $r2[i1];

        return $d0;

     label09:
        $r5 = virtualinvoke r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int[] getAsSRational(int)>(i1);

        $i2 = $r5[0];

        $d3 = (double) $i2;

        $i3 = $r5[1];

        $d2 = (double) $i3;

        $d4 = $d3 / $d2;

        return $d4;

     label10:
        $r12 = virtualinvoke r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: long[] getAsRational(int)>(i1);

        $l7 = $r12[0];

        $d9 = (double) $l7;

        $l8 = $r12[1];

        $d8 = (double) $l8;

        $d10 = $d9 / $d8;

        return $d10;

     label11:
        $r20 = new java.lang.ClassCastException;

        specialinvoke $r20.<java.lang.ClassCastException: void <init>()>();

        throw $r20;
    }

    public java.lang.String getAsString(int)
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;
        int i0;
        java.lang.Object $r1;
        java.lang.String[] $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r2 = (java.lang.String[]) $r1;

        $r3 = $r2[i0];

        return $r3;
    }

    public int[] getAsSRational(int)
    {
        int[][] $r2;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;
        int[] $r3;
        int i0;
        java.lang.Object $r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r2 = (int[][]) $r1;

        $r3 = $r2[i0];

        return $r3;
    }

    public long[] getAsRational(int)
    {
        long[][] $r2;
        long[] $r3;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField r0;
        int i0;
        java.lang.Object $r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: java.lang.Object data>;

        $r2 = (long[][]) $r1;

        $r3 = $r2[i0];

        return $r3;
    }

    public int compareTo(java.lang.Object)
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField $r1, r2;
        java.lang.IllegalArgumentException $r4;
        int $i0, $i1, $i2, $i4;
        java.lang.Object r0;

        r2 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        $r1 = (org.apache.batik.ext.awt.image.codec.tiff.TIFFField) r0;

        $i0 = virtualinvoke $r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int getTag()>();

        $i1 = r2.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int tag>;

        if $i1 >= $i0 goto label2;

        $i4 = (int) -1;

        return $i4;

     label2:
        $i2 = r2.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int tag>;

        if $i2 <= $i0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public static void <clinit>()
    {
        <org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int TIFF_DOUBLE> = 12;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int TIFF_FLOAT> = 11;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int TIFF_SRATIONAL> = 10;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int TIFF_SLONG> = 9;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int TIFF_SSHORT> = 8;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int TIFF_UNDEFINED> = 7;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int TIFF_SBYTE> = 6;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int TIFF_RATIONAL> = 5;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int TIFF_LONG> = 4;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int TIFF_SHORT> = 3;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int TIFF_ASCII> = 2;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFField: int TIFF_BYTE> = 1;

        return;
    }
}
