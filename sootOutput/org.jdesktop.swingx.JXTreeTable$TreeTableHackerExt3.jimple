public class org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3 extends org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2
{
    final org.jdesktop.swingx.JXTreeTable this$0;

    public void <init>(org.jdesktop.swingx.JXTreeTable)
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3 r0;
        org.jdesktop.swingx.JXTreeTable r1;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3;

        r1 := @parameter0: org.jdesktop.swingx.JXTreeTable;

        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3: org.jdesktop.swingx.JXTreeTable this$0> = r1;

        specialinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: void <init>(org.jdesktop.swingx.JXTreeTable)>(r1);

        return;
    }

    protected boolean expandOrCollapseNode(int, java.util.EventObject)
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3 r0;
        long $l6, $l11;
        org.jdesktop.swingx.JXTreeTable $r1, $r5, $r8, $r10, $r13, $r15, $r17, $r18, $r20, $r23;
        java.awt.event.MouseEvent r3, $r25, $r26;
        java.awt.ComponentOrientation $r24;
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer $r6, $r9, $r11, $r14, $r16, $r19, $r21;
        java.awt.Point $r4;
        java.util.EventObject r2;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6;
        java.awt.Rectangle $r22;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, i34, $i36, $i38, $i40;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3;

        i0 := @parameter0: int;

        r2 := @parameter1: java.util.EventObject;

        $r1 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3: org.jdesktop.swingx.JXTreeTable this$0>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXTreeTable: boolean isHierarchical(int)>(i0);

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $z1 = virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3: boolean mightBeExpansionTrigger(java.util.EventObject)>(r2);

        if $z1 != 0 goto label02;

        return 0;

     label02:
        z5 = 0;

        r3 = (java.awt.event.MouseEvent) r2;

        $i1 = virtualinvoke r3.<java.awt.event.MouseEvent: int getModifiers()>();

        if $i1 == 0 goto label03;

        $i33 = virtualinvoke r3.<java.awt.event.MouseEvent: int getModifiers()>();

        if $i33 != 16 goto label10;

     label03:
        $r4 = virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3: java.awt.Point getTreeMousePoint(int,java.awt.event.MouseEvent)>(i0, r3);

        $r5 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3: org.jdesktop.swingx.JXTreeTable this$0>;

        $r6 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r5);

        $i3 = $r4.<java.awt.Point: int x>;

        $i2 = $r4.<java.awt.Point: int y>;

        $i4 = virtualinvoke $r6.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: int getRowForLocation(int,int)>($i3, $i2);

        i34 = 0;

        if $i4 >= 0 goto label08;

        $r18 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3: org.jdesktop.swingx.JXTreeTable this$0>;

        $r19 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r18);

        $i17 = $r4.<java.awt.Point: int x>;

        $i16 = $r4.<java.awt.Point: int y>;

        $i18 = virtualinvoke $r19.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: int getClosestRowForLocation(int,int)>($i17, $i16);

        i34 = $i18;

        $r20 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3: org.jdesktop.swingx.JXTreeTable this$0>;

        $r21 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r20);

        $r22 = virtualinvoke $r21.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: java.awt.Rectangle getRowBounds(int)>($i18);

        if $r22 != null goto label04;

        $i36 = (int) -1;

        i34 = $i36;

        goto label08;

     label04:
        $r23 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3: org.jdesktop.swingx.JXTreeTable this$0>;

        $r24 = virtualinvoke $r23.<org.jdesktop.swingx.JXTreeTable: java.awt.ComponentOrientation getComponentOrientation()>();

        $z4 = virtualinvoke $r24.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z4 == 0 goto label06;

        $i28 = $r22.<java.awt.Rectangle: int y>;

        $i27 = $r22.<java.awt.Rectangle: int height>;

        $i30 = $i28 + $i27;

        $i29 = $r4.<java.awt.Point: int y>;

        if $i30 < $i29 goto label05;

        $i32 = $r22.<java.awt.Rectangle: int x>;

        $i31 = $r4.<java.awt.Point: int x>;

        if $i32 <= $i31 goto label08;

     label05:
        $i38 = (int) -1;

        i34 = $i38;

        goto label08;

     label06:
        $i20 = $r22.<java.awt.Rectangle: int y>;

        $i19 = $r22.<java.awt.Rectangle: int height>;

        $i22 = $i20 + $i19;

        $i21 = $r4.<java.awt.Point: int y>;

        if $i22 < $i21 goto label07;

        $i24 = $r22.<java.awt.Rectangle: int x>;

        $i23 = $r22.<java.awt.Rectangle: int width>;

        $i26 = $i24 + $i23;

        $i25 = $r4.<java.awt.Point: int x>;

        if $i26 >= $i25 goto label08;

     label07:
        $i40 = (int) -1;

        i34 = $i40;

     label08:
        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3: boolean expansionChangedFlag> = 0;

        if $i4 >= 0 goto label09;

        if i34 >= 0 goto label09;

        $r25 = new java.awt.event.MouseEvent;

        $r8 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3: org.jdesktop.swingx.JXTreeTable this$0>;

        $r9 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r8);

        $i5 = virtualinvoke r3.<java.awt.event.MouseEvent: int getID()>();

        $l6 = virtualinvoke r3.<java.awt.event.MouseEvent: long getWhen()>();

        $i7 = virtualinvoke r3.<java.awt.event.MouseEvent: int getModifiers()>();

        $i8 = $r4.<java.awt.Point: int x>;

        $i9 = $r4.<java.awt.Point: int y>;

        $i10 = virtualinvoke r3.<java.awt.event.MouseEvent: int getClickCount()>();

        $z2 = virtualinvoke r3.<java.awt.event.MouseEvent: boolean isPopupTrigger()>();

        specialinvoke $r25.<java.awt.event.MouseEvent: void <init>(java.awt.Component,int,long,int,int,int,int,boolean)>($r9, $i5, $l6, $i7, $i8, $i9, $i10, $z2);

        $r10 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3: org.jdesktop.swingx.JXTreeTable this$0>;

        $r11 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r10);

        virtualinvoke $r11.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: void dispatchEvent(java.awt.AWTEvent)>($r25);

        $r26 = new java.awt.event.MouseEvent;

        $r13 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3: org.jdesktop.swingx.JXTreeTable this$0>;

        $r14 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r13);

        $l11 = virtualinvoke $r25.<java.awt.event.MouseEvent: long getWhen()>();

        $i12 = virtualinvoke $r25.<java.awt.event.MouseEvent: int getModifiers()>();

        $i13 = virtualinvoke $r25.<java.awt.event.MouseEvent: int getX()>();

        $i14 = virtualinvoke $r25.<java.awt.event.MouseEvent: int getY()>();

        $i15 = virtualinvoke $r25.<java.awt.event.MouseEvent: int getClickCount()>();

        $z3 = virtualinvoke $r25.<java.awt.event.MouseEvent: boolean isPopupTrigger()>();

        specialinvoke $r26.<java.awt.event.MouseEvent: void <init>(java.awt.Component,int,long,int,int,int,int,boolean)>($r14, 502, $l11, $i12, $i13, $i14, $i15, $z3);

        $r15 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3: org.jdesktop.swingx.JXTreeTable this$0>;

        $r16 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r15);

        virtualinvoke $r16.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: void dispatchEvent(java.awt.AWTEvent)>($r26);

        $r17 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3: org.jdesktop.swingx.JXTreeTable this$0>;

        virtualinvoke $r17.<org.jdesktop.swingx.JXTreeTable: boolean requestFocusInWindow()>();

     label09:
        $z6 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3: boolean expansionChangedFlag>;

        if $z6 == 0 goto label10;

        z5 = 1;

     label10:
        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3: boolean expansionChangedFlag> = 0;

        return z5;
    }

    protected boolean mightBeExpansionTrigger(java.util.EventObject)
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3 r2;
        java.awt.event.MouseEvent r1;
        java.util.EventObject r0;
        int $i0, $i1;
        boolean $z0, $z1, $z2;

        r2 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt3;

        r0 := @parameter0: java.util.EventObject;

        $z0 = r0 instanceof java.awt.event.MouseEvent;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (java.awt.event.MouseEvent) r0;

        $z1 = staticinvoke <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>(r1);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getClickCount()>();

        if $i0 <= 1 goto label3;

        return 0;

     label3:
        $i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getID()>();

        if $i1 != 501 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }
}
