public class org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode extends java.lang.Object
{
    final org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode parent;
    java.util.Iterator children;
    org.apache.lucene.spatial.prefix.tree.Cell cell;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode)
    {
        org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode r0, r1;

        r0 := @this: org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode;

        r1 := @parameter0: org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode: org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode parent> = r1;

        return;
    }

    void reset(org.apache.lucene.spatial.prefix.tree.Cell)
    {
        java.util.Iterator $r2;
        org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode r0;
        java.lang.AssertionError $r3, $r4;
        org.apache.lucene.spatial.prefix.tree.Cell r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode;

        r1 := @parameter0: org.apache.lucene.spatial.prefix.tree.Cell;

        $z0 = <org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        r0.<org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode: org.apache.lucene.spatial.prefix.tree.Cell cell> = r1;

        $z1 = <org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r2 = r0.<org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode: java.util.Iterator children>;

        if $r2 == null goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/spatial/prefix/AbstractVisitingPrefixTreeFilter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.spatial.prefix.AbstractVisitingPrefixTreeFilter$VNode: boolean $assertionsDisabled> = $z1;

        return;
    }
}
