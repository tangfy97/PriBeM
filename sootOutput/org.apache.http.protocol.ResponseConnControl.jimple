public class org.apache.http.protocol.ResponseConnControl extends java.lang.Object implements org.apache.http.HttpResponseInterceptor
{

    public void <init>()
    {
        org.apache.http.protocol.ResponseConnControl r0;

        r0 := @this: org.apache.http.protocol.ResponseConnControl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void process(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.HttpVersion $r7, $r11;
        long $l1;
        org.apache.http.StatusLine $r2, $r9;
        org.apache.http.Header $r3, $r5;
        byte $b2;
        int $i0, $i3;
        java.lang.String $r8, $r12, $r13;
        org.apache.http.protocol.ResponseConnControl r16;
        boolean $z0, $z1, $z2, $z3;
        org.apache.http.HttpEntity $r4;
        java.lang.IllegalArgumentException $r19, $r20;
        org.apache.http.HttpRequest $r18;
        org.apache.http.ProtocolVersion $r6, $r10;
        org.apache.http.protocol.HttpContext r1;
        org.apache.http.HttpResponse r0;
        java.lang.Object $r17;

        r16 := @this: org.apache.http.protocol.ResponseConnControl;

        r0 := @parameter0: org.apache.http.HttpResponse;

        r1 := @parameter1: org.apache.http.protocol.HttpContext;

        if r0 != null goto label1;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null");

        throw $r19;

     label1:
        if r1 != null goto label2;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP context may not be null");

        throw $r20;

     label2:
        $r2 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r2.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 == 400 goto label3;

        if $i0 == 408 goto label3;

        if $i0 == 411 goto label3;

        if $i0 == 413 goto label3;

        if $i0 == 414 goto label3;

        if $i0 == 503 goto label3;

        if $i0 != 501 goto label4;

     label3:
        interfaceinvoke r0.<org.apache.http.HttpResponse: void setHeader(java.lang.String,java.lang.String)>("Connection", "Close");

        return;

     label4:
        $r3 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.Header getFirstHeader(java.lang.String)>("Connection");

        if $r3 == null goto label5;

        $r12 = "Close";

        $r13 = interfaceinvoke $r3.<org.apache.http.Header: java.lang.String getValue()>();

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r13);

        if $z3 == 0 goto label5;

        return;

     label5:
        $r4 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if $r4 == null goto label7;

        $r9 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r10 = interfaceinvoke $r9.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $l1 = interfaceinvoke $r4.<org.apache.http.HttpEntity: long getContentLength()>();

        $b2 = $l1 cmp 0L;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label7;

        $z1 = interfaceinvoke $r4.<org.apache.http.HttpEntity: boolean isChunked()>();

        if $z1 == 0 goto label6;

        $r11 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_0>;

        $z2 = virtualinvoke $r10.<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>($r11);

        if $z2 == 0 goto label7;

     label6:
        interfaceinvoke r0.<org.apache.http.HttpResponse: void setHeader(java.lang.String,java.lang.String)>("Connection", "Close");

        return;

     label7:
        $r17 = interfaceinvoke r1.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.request");

        $r18 = (org.apache.http.HttpRequest) $r17;

        if $r18 == null goto label9;

        $r5 = interfaceinvoke $r18.<org.apache.http.HttpRequest: org.apache.http.Header getFirstHeader(java.lang.String)>("Connection");

        if $r5 == null goto label8;

        $r8 = interfaceinvoke $r5.<org.apache.http.Header: java.lang.String getValue()>();

        interfaceinvoke r0.<org.apache.http.HttpResponse: void setHeader(java.lang.String,java.lang.String)>("Connection", $r8);

        goto label9;

     label8:
        $r6 = interfaceinvoke $r18.<org.apache.http.HttpRequest: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r7 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_0>;

        $z0 = virtualinvoke $r6.<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>($r7);

        if $z0 == 0 goto label9;

        interfaceinvoke r0.<org.apache.http.HttpResponse: void setHeader(java.lang.String,java.lang.String)>("Connection", "Close");

     label9:
        return;
    }
}
