public class org.bouncycastle.crypto.generators.MGF1BytesGenerator extends java.lang.Object implements org.bouncycastle.crypto.DerivationFunction
{
    private org.bouncycastle.crypto.Digest digest;
    private byte[] seed;
    private int hLen;

    public void <init>(org.bouncycastle.crypto.Digest)
    {
        int $i0;
        org.bouncycastle.crypto.Digest r1;
        org.bouncycastle.crypto.generators.MGF1BytesGenerator r0;

        r0 := @this: org.bouncycastle.crypto.generators.MGF1BytesGenerator;

        r1 := @parameter0: org.bouncycastle.crypto.Digest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: org.bouncycastle.crypto.Digest digest> = r1;

        $i0 = interfaceinvoke r1.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r0.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: int hLen> = $i0;

        return;
    }

    public void init(org.bouncycastle.crypto.DerivationParameters)
    {
        byte[] $r3;
        org.bouncycastle.crypto.params.MGFParameters r1;
        org.bouncycastle.crypto.DerivationParameters r0;
        java.lang.IllegalArgumentException $r4;
        boolean $z0;
        org.bouncycastle.crypto.generators.MGF1BytesGenerator r2;

        r2 := @this: org.bouncycastle.crypto.generators.MGF1BytesGenerator;

        r0 := @parameter0: org.bouncycastle.crypto.DerivationParameters;

        $z0 = r0 instanceof org.bouncycastle.crypto.params.MGFParameters;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MGF parameters required for MGF1Generator");

        throw $r4;

     label1:
        r1 = (org.bouncycastle.crypto.params.MGFParameters) r0;

        $r3 = virtualinvoke r1.<org.bouncycastle.crypto.params.MGFParameters: byte[] getSeed()>();

        r2.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: byte[] seed> = $r3;

        return;
    }

    public org.bouncycastle.crypto.Digest getDigest()
    {
        org.bouncycastle.crypto.Digest $r1;
        org.bouncycastle.crypto.generators.MGF1BytesGenerator r0;

        r0 := @this: org.bouncycastle.crypto.generators.MGF1BytesGenerator;

        $r1 = r0.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: org.bouncycastle.crypto.Digest digest>;

        return $r1;
    }

    private void ItoOSP(int, byte[])
    {
        byte[] r0;
        org.bouncycastle.crypto.generators.MGF1BytesGenerator r1;
        byte $b2, $b4, $b6, $b8;
        int i0, $i1, $i3, $i5, $i7;

        r1 := @this: org.bouncycastle.crypto.generators.MGF1BytesGenerator;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        $i1 = i0 >>> 24;

        $b2 = (byte) $i1;

        r0[0] = $b2;

        $i3 = i0 >>> 16;

        $b4 = (byte) $i3;

        r0[1] = $b4;

        $i5 = i0 >>> 8;

        $b6 = (byte) $i5;

        r0[2] = $b6;

        $i7 = i0 >>> 0;

        $b8 = (byte) $i7;

        r0[3] = $b8;

        return;
    }

    public int generateBytes(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalArgumentException
    {
        byte[] r0, r2, r3, $r5, $r6, $r10, $r11;
        org.bouncycastle.crypto.DataLengthException $r15;
        org.bouncycastle.crypto.Digest $r4, $r7, $r8, $r9, $r12, $r13, $r14;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24;
        org.bouncycastle.crypto.generators.MGF1BytesGenerator r1;

        r1 := @this: org.bouncycastle.crypto.generators.MGF1BytesGenerator;

        r0 := @parameter0: byte[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = lengthof r0;

        $i3 = $i1 - i0;

        if $i3 >= i2 goto label1;

        $r15 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r15.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too small");

        throw $r15;

     label1:
        $i4 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: int hLen>;

        r2 = newarray (byte)[$i4];

        r3 = newarray (byte)[4];

        i24 = 0;

        $r4 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.Digest: void reset()>();

        $i5 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: int hLen>;

        if i0 <= $i5 goto label3;

     label2:
        specialinvoke r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: void ItoOSP(int,byte[])>(i24, r3);

        $r12 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $r11 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: byte[] seed>;

        $r10 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: byte[] seed>;

        $i16 = lengthof $r10;

        interfaceinvoke $r12.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r11, 0, $i16);

        $r13 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $i17 = lengthof r3;

        interfaceinvoke $r13.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r3, 0, $i17);

        $r14 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r14.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r2, 0);

        $i18 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: int hLen>;

        $i19 = i24 * $i18;

        $i21 = i2 + $i19;

        $i20 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: int hLen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r0, $i21, $i20);

        i24 = i24 + 1;

        $i22 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: int hLen>;

        $i23 = i0 / $i22;

        if i24 < $i23 goto label2;

     label3:
        $i6 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: int hLen>;

        $i7 = i24 * $i6;

        if $i7 >= i0 goto label4;

        specialinvoke r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: void ItoOSP(int,byte[])>(i24, r3);

        $r7 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $r6 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: byte[] seed>;

        $r5 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: byte[] seed>;

        $i8 = lengthof $r5;

        interfaceinvoke $r7.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r6, 0, $i8);

        $r8 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: org.bouncycastle.crypto.Digest digest>;

        $i9 = lengthof r3;

        interfaceinvoke $r8.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r3, 0, $i9);

        $r9 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r9.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r2, 0);

        $i10 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: int hLen>;

        $i11 = i24 * $i10;

        $i15 = i2 + $i11;

        $i12 = r1.<org.bouncycastle.crypto.generators.MGF1BytesGenerator: int hLen>;

        $i13 = i24 * $i12;

        $i14 = i0 - $i13;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r0, $i15, $i14);

     label4:
        return i0;
    }
}
