class org.apache.jena.riot.web.HttpResponseLib$GraphReader extends java.lang.Object implements org.apache.jena.riot.web.HttpCaptureResponse
{
    private com.hp.hpl.jena.graph.Graph graph;

    void <init>()
    {
        org.apache.jena.riot.web.HttpResponseLib$GraphReader r0;

        r0 := @this: org.apache.jena.riot.web.HttpResponseLib$GraphReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.riot.web.HttpResponseLib$GraphReader: com.hp.hpl.jena.graph.Graph graph> = null;

        return;
    }

    public final void handle(java.lang.String, org.apache.http.HttpResponse)
    {
        org.apache.jena.riot.Lang $r4;
        org.apache.jena.riot.web.HttpResponseLib$GraphReader r8;
        org.apache.http.HttpEntity $r2;
        org.apache.jena.riot.system.StreamRDF $r5;
        java.io.IOException $r9;
        org.apache.http.HttpResponse r1;
        java.lang.String $r3, r7;
        com.hp.hpl.jena.graph.Graph $r0;
        java.io.InputStream $r6;

        r8 := @this: org.apache.jena.riot.web.HttpResponseLib$GraphReader;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.http.HttpResponse;

     label1:
        $r0 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.graph.Graph createDefaultGraph()>();

        $r2 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r3 = staticinvoke <org.apache.jena.riot.web.HttpResponseLib: java.lang.String access$000(org.apache.http.HttpResponse)>(r1);

        $r4 = staticinvoke <org.apache.jena.riot.RDFLanguages: org.apache.jena.riot.Lang contentTypeToLang(java.lang.String)>($r3);

        $r5 = staticinvoke <org.apache.jena.riot.system.StreamRDFLib: org.apache.jena.riot.system.StreamRDF graph(com.hp.hpl.jena.graph.Graph)>($r0);

        $r6 = interfaceinvoke $r2.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        staticinvoke <org.apache.jena.riot.RDFDataMgr: void parse(org.apache.jena.riot.system.StreamRDF,java.io.InputStream,java.lang.String,org.apache.jena.riot.Lang)>($r5, $r6, r7, $r4);

        virtualinvoke $r6.<java.io.InputStream: void close()>();

        r8.<org.apache.jena.riot.web.HttpResponseLib$GraphReader: com.hp.hpl.jena.graph.Graph graph> = $r0;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.IO: void exception(java.io.IOException)>($r9);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public com.hp.hpl.jena.graph.Graph get()
    {
        org.apache.jena.riot.web.HttpResponseLib$GraphReader r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: org.apache.jena.riot.web.HttpResponseLib$GraphReader;

        $r1 = r0.<org.apache.jena.riot.web.HttpResponseLib$GraphReader: com.hp.hpl.jena.graph.Graph graph>;

        return $r1;
    }

    public volatile java.lang.Object get()
    {
        org.apache.jena.riot.web.HttpResponseLib$GraphReader r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: org.apache.jena.riot.web.HttpResponseLib$GraphReader;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.web.HttpResponseLib$GraphReader: com.hp.hpl.jena.graph.Graph get()>();

        return $r1;
    }
}
