class org.codehaus.groovy.control.ResolveVisitor$LowerCaseClass extends org.codehaus.groovy.ast.ClassNode
{
    java.lang.String className;

    public void <init>(java.lang.String)
    {
        org.codehaus.groovy.control.ResolveVisitor$LowerCaseClass r0;
        java.lang.String r1;
        org.codehaus.groovy.ast.ClassNode $r2;

        r0 := @this: org.codehaus.groovy.control.ResolveVisitor$LowerCaseClass;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode OBJECT_TYPE>;

        specialinvoke r0.<org.codehaus.groovy.ast.ClassNode: void <init>(java.lang.String,int,org.codehaus.groovy.ast.ClassNode)>(r1, 1, $r2);

        r0.<org.codehaus.groovy.control.ResolveVisitor$LowerCaseClass: boolean isPrimaryNode> = 0;

        r0.<org.codehaus.groovy.control.ResolveVisitor$LowerCaseClass: java.lang.String className> = r1;

        return;
    }

    public java.lang.String getName()
    {
        org.codehaus.groovy.control.ResolveVisitor$LowerCaseClass r0;
        org.codehaus.groovy.ast.ClassNode $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.codehaus.groovy.control.ResolveVisitor$LowerCaseClass;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.control.ResolveVisitor$LowerCaseClass: org.codehaus.groovy.ast.ClassNode redirect()>();

        if $r1 == r0 goto label1;

        $r3 = specialinvoke r0.<org.codehaus.groovy.ast.ClassNode: java.lang.String getName()>();

        return $r3;

     label1:
        $r2 = r0.<org.codehaus.groovy.control.ResolveVisitor$LowerCaseClass: java.lang.String className>;

        return $r2;
    }

    public boolean hasPackageName()
    {
        org.codehaus.groovy.control.ResolveVisitor$LowerCaseClass r0;
        org.codehaus.groovy.ast.ClassNode $r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.control.ResolveVisitor$LowerCaseClass;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.control.ResolveVisitor$LowerCaseClass: org.codehaus.groovy.ast.ClassNode redirect()>();

        if $r1 == r0 goto label1;

        $z0 = specialinvoke r0.<org.codehaus.groovy.ast.ClassNode: boolean hasPackageName()>();

        return $z0;

     label1:
        return 0;
    }

    public java.lang.String setName(java.lang.String)
    {
        org.codehaus.groovy.GroovyBugError $r2;
        org.codehaus.groovy.control.ResolveVisitor$LowerCaseClass r0;
        org.codehaus.groovy.ast.ClassNode $r1;
        java.lang.String r3, $r4;

        r0 := @this: org.codehaus.groovy.control.ResolveVisitor$LowerCaseClass;

        r3 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.control.ResolveVisitor$LowerCaseClass: org.codehaus.groovy.ast.ClassNode redirect()>();

        if $r1 == r0 goto label1;

        $r4 = specialinvoke r0.<org.codehaus.groovy.ast.ClassNode: java.lang.String setName(java.lang.String)>(r3);

        return $r4;

     label1:
        $r2 = new org.codehaus.groovy.GroovyBugError;

        specialinvoke $r2.<org.codehaus.groovy.GroovyBugError: void <init>(java.lang.String)>("ConstructedClassWithPackage#setName should not be called");

        throw $r2;
    }
}
