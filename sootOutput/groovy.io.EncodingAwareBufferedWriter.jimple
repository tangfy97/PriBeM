public class groovy.io.EncodingAwareBufferedWriter extends java.io.BufferedWriter
{
    private java.io.OutputStreamWriter out;

    public void <init>(java.io.OutputStreamWriter)
    {
        java.io.OutputStreamWriter r1;
        groovy.io.EncodingAwareBufferedWriter r0;

        r0 := @this: groovy.io.EncodingAwareBufferedWriter;

        r1 := @parameter0: java.io.OutputStreamWriter;

        specialinvoke r0.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r1);

        r0.<groovy.io.EncodingAwareBufferedWriter: java.io.OutputStreamWriter out> = r1;

        return;
    }

    public java.lang.String getEncoding()
    {
        java.io.OutputStreamWriter $r1;
        java.lang.String $r2;
        groovy.io.EncodingAwareBufferedWriter r0;

        r0 := @this: groovy.io.EncodingAwareBufferedWriter;

        $r1 = r0.<groovy.io.EncodingAwareBufferedWriter: java.io.OutputStreamWriter out>;

        $r2 = virtualinvoke $r1.<java.io.OutputStreamWriter: java.lang.String getEncoding()>();

        return $r2;
    }

    public java.lang.String getNormalizedEncoding()
    {
        java.nio.charset.Charset $r2;
        groovy.io.EncodingAwareBufferedWriter r0;
        java.lang.String $r1, $r3;

        r0 := @this: groovy.io.EncodingAwareBufferedWriter;

        $r1 = virtualinvoke r0.<groovy.io.EncodingAwareBufferedWriter: java.lang.String getEncoding()>();

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

        return $r3;
    }
}
