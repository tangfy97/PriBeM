class org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter extends org.apache.lucene.codecs.DocValuesConsumer
{
    private final java.util.Map formats;
    private final java.util.Map suffixes;
    private final org.apache.lucene.index.SegmentWriteState segmentWriteState;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat this$0;

    public void <init>(org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat, org.apache.lucene.index.SegmentWriteState)
    {
        org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter r0;
        org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat r1;
        org.apache.lucene.index.SegmentWriteState r4;
        java.util.HashMap $r2, $r3;

        r0 := @this: org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter;

        r1 := @parameter0: org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat;

        r4 := @parameter1: org.apache.lucene.index.SegmentWriteState;

        r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat this$0> = r1;

        specialinvoke r0.<org.apache.lucene.codecs.DocValuesConsumer: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: java.util.Map formats> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: java.util.Map suffixes> = $r3;

        r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: org.apache.lucene.index.SegmentWriteState segmentWriteState> = r4;

        return;
    }

    public void addNumericField(org.apache.lucene.index.FieldInfo, java.lang.Iterable) throws java.io.IOException
    {
        org.apache.lucene.codecs.DocValuesConsumer $r2;
        org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter r0;
        org.apache.lucene.index.FieldInfo r1;
        java.lang.Iterable r3;

        r0 := @this: org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        r3 := @parameter1: java.lang.Iterable;

        $r2 = specialinvoke r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: org.apache.lucene.codecs.DocValuesConsumer getInstance(org.apache.lucene.index.FieldInfo)>(r1);

        virtualinvoke $r2.<org.apache.lucene.codecs.DocValuesConsumer: void addNumericField(org.apache.lucene.index.FieldInfo,java.lang.Iterable)>(r1, r3);

        return;
    }

    public void addBinaryField(org.apache.lucene.index.FieldInfo, java.lang.Iterable) throws java.io.IOException
    {
        org.apache.lucene.codecs.DocValuesConsumer $r2;
        org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter r0;
        org.apache.lucene.index.FieldInfo r1;
        java.lang.Iterable r3;

        r0 := @this: org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        r3 := @parameter1: java.lang.Iterable;

        $r2 = specialinvoke r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: org.apache.lucene.codecs.DocValuesConsumer getInstance(org.apache.lucene.index.FieldInfo)>(r1);

        virtualinvoke $r2.<org.apache.lucene.codecs.DocValuesConsumer: void addBinaryField(org.apache.lucene.index.FieldInfo,java.lang.Iterable)>(r1, r3);

        return;
    }

    public void addSortedField(org.apache.lucene.index.FieldInfo, java.lang.Iterable, java.lang.Iterable) throws java.io.IOException
    {
        org.apache.lucene.codecs.DocValuesConsumer $r2;
        org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter r0;
        org.apache.lucene.index.FieldInfo r1;
        java.lang.Iterable r3, r4;

        r0 := @this: org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        r3 := @parameter1: java.lang.Iterable;

        r4 := @parameter2: java.lang.Iterable;

        $r2 = specialinvoke r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: org.apache.lucene.codecs.DocValuesConsumer getInstance(org.apache.lucene.index.FieldInfo)>(r1);

        virtualinvoke $r2.<org.apache.lucene.codecs.DocValuesConsumer: void addSortedField(org.apache.lucene.index.FieldInfo,java.lang.Iterable,java.lang.Iterable)>(r1, r3, r4);

        return;
    }

    public void addSortedSetField(org.apache.lucene.index.FieldInfo, java.lang.Iterable, java.lang.Iterable, java.lang.Iterable) throws java.io.IOException
    {
        org.apache.lucene.codecs.DocValuesConsumer $r2;
        org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter r0;
        org.apache.lucene.index.FieldInfo r1;
        java.lang.Iterable r3, r4, r5;

        r0 := @this: org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        r3 := @parameter1: java.lang.Iterable;

        r4 := @parameter2: java.lang.Iterable;

        r5 := @parameter3: java.lang.Iterable;

        $r2 = specialinvoke r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: org.apache.lucene.codecs.DocValuesConsumer getInstance(org.apache.lucene.index.FieldInfo)>(r1);

        virtualinvoke $r2.<org.apache.lucene.codecs.DocValuesConsumer: void addSortedSetField(org.apache.lucene.index.FieldInfo,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)>(r1, r3, r4, r5);

        return;
    }

    private org.apache.lucene.codecs.DocValuesConsumer getInstance(org.apache.lucene.index.FieldInfo) throws java.io.IOException
    {
        java.lang.IllegalStateException $r36;
        java.lang.Integer r44, r45;
        org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter r0;
        org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat $r3;
        java.util.Map $r8, $r12, $r14, $r16, $r27;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.codecs.DocValuesConsumer $r10, $r26;
        java.lang.StringBuilder $r30, $r31, $r32, $r33, $r34, $r37, $r38, $r40, $r41;
        java.lang.AssertionError $r11, $r13, $r29;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.lucene.index.SegmentWriteState $r17, $r24, $r25;
        java.lang.String $r2, $r5, $r6, $r7, $r18, $r19, $r20, $r21, $r22, $r35, $r39, $r42, $r46, $r47, $r48;
        org.apache.lucene.codecs.DocValuesFormat $r4;
        org.apache.lucene.index.FieldInfo r1;
        java.lang.Object $r9, $r15;
        org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$ConsumerAndSuffix $r23, $r28, r43;

        r0 := @this: org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r3 = r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat this$0>;

        $r2 = r1.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat: org.apache.lucene.codecs.DocValuesFormat getDocValuesFormatForField(java.lang.String)>($r2);

        if $r4 != null goto label1;

        $r36 = new java.lang.IllegalStateException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid null DocValuesFormat for field=\"");

        $r39 = r1.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r42);

        throw $r36;

     label1:
        $r5 = virtualinvoke $r4.<org.apache.lucene.codecs.DocValuesFormat: java.lang.String getName()>();

        $r6 = <org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat: java.lang.String PER_FIELD_FORMAT_KEY>;

        $r7 = virtualinvoke r1.<org.apache.lucene.index.FieldInfo: java.lang.String putAttribute(java.lang.String,java.lang.String)>($r6, $r5);

        $z0 = <org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if $r7 == null goto label2;

        $r29 = new java.lang.AssertionError;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("formatName=");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" prevValue=");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.AssertionError: void <init>(java.lang.Object)>($r35);

        throw $r29;

     label2:
        $r8 = r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: java.util.Map formats>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r28 = (org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$ConsumerAndSuffix) $r9;

        r43 = $r28;

        if $r28 != null goto label5;

        $r14 = r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: java.util.Map suffixes>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r44 = (java.lang.Integer) $r15;

        if r44 != null goto label3;

        r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label4;

     label3:
        $i1 = virtualinvoke r44.<java.lang.Integer: int intValue()>();

        $i2 = $i1 + 1;

        r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label4:
        $r16 = r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: java.util.Map suffixes>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r45);

        $r18 = r1.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r17 = r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: org.apache.lucene.index.SegmentWriteState segmentWriteState>;

        $r19 = $r17.<org.apache.lucene.index.SegmentWriteState: java.lang.String segmentSuffix>;

        $i3 = virtualinvoke r45.<java.lang.Integer: int intValue()>();

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        $r21 = staticinvoke <org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat: java.lang.String getSuffix(java.lang.String,java.lang.String)>($r5, $r20);

        $r22 = staticinvoke <org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat: java.lang.String getFullSegmentSuffix(java.lang.String,java.lang.String,java.lang.String)>($r18, $r19, $r21);

        $r23 = new org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$ConsumerAndSuffix;

        specialinvoke $r23.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$ConsumerAndSuffix: void <init>()>();

        r43 = $r23;

        $r24 = new org.apache.lucene.index.SegmentWriteState;

        $r25 = r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: org.apache.lucene.index.SegmentWriteState segmentWriteState>;

        specialinvoke $r24.<org.apache.lucene.index.SegmentWriteState: void <init>(org.apache.lucene.index.SegmentWriteState,java.lang.String)>($r25, $r22);

        $r26 = virtualinvoke $r4.<org.apache.lucene.codecs.DocValuesFormat: org.apache.lucene.codecs.DocValuesConsumer fieldsConsumer(org.apache.lucene.index.SegmentWriteState)>($r24);

        $r23.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$ConsumerAndSuffix: org.apache.lucene.codecs.DocValuesConsumer consumer> = $r26;

        $i4 = virtualinvoke r45.<java.lang.Integer: int intValue()>();

        $r23.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$ConsumerAndSuffix: int suffix> = $i4;

        $r27 = r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: java.util.Map formats>;

        interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r23);

        goto label7;

     label5:
        $z1 = <org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label6;

        $r12 = r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: java.util.Map suffixes>;

        $z2 = interfaceinvoke $r12.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

        if $z2 != 0 goto label6;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label6:
        $i0 = $r28.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$ConsumerAndSuffix: int suffix>;

        r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label7:
        $r46 = <org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat: java.lang.String PER_FIELD_SUFFIX_KEY>;

        $i5 = virtualinvoke r45.<java.lang.Integer: int intValue()>();

        $r47 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        $r48 = virtualinvoke r1.<org.apache.lucene.index.FieldInfo: java.lang.String putAttribute(java.lang.String,java.lang.String)>($r46, $r47);

        $z3 = <org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: boolean $assertionsDisabled>;

        if $z3 != 0 goto label8;

        if $r48 == null goto label8;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label8:
        $r10 = r43.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$ConsumerAndSuffix: org.apache.lucene.codecs.DocValuesConsumer consumer>;

        return $r10;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter;

        $r1 = r0.<org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: java.util.Map formats>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.lang.Iterable)>($r2);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/perfield/PerFieldDocValuesFormat;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.perfield.PerFieldDocValuesFormat$FieldsWriter: boolean $assertionsDisabled> = $z1;

        return;
    }
}
