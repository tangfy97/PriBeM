public class org.springframework.http.HttpEntity extends java.lang.Object
{
    public static final org.springframework.http.HttpEntity EMPTY;
    private final org.springframework.http.HttpHeaders headers;
    private final java.lang.Object body;

    static void <clinit>()
    {
        org.springframework.http.HttpEntity $r0;

        $r0 = new org.springframework.http.HttpEntity;

        specialinvoke $r0.<org.springframework.http.HttpEntity: void <init>()>();

        <org.springframework.http.HttpEntity: org.springframework.http.HttpEntity EMPTY> = $r0;

        return;
    }

    protected void <init>()
    {
        org.springframework.http.HttpEntity r0;

        r0 := @this: org.springframework.http.HttpEntity;

        specialinvoke r0.<org.springframework.http.HttpEntity: void <init>(java.lang.Object,org.springframework.util.MultiValueMap)>(null, null);

        return;
    }

    public void <init>(java.lang.Object)
    {
        org.springframework.http.HttpEntity r0;
        java.lang.Object r1;

        r0 := @this: org.springframework.http.HttpEntity;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.springframework.http.HttpEntity: void <init>(java.lang.Object,org.springframework.util.MultiValueMap)>(r1, null);

        return;
    }

    public void <init>(org.springframework.util.MultiValueMap)
    {
        org.springframework.util.MultiValueMap r1;
        org.springframework.http.HttpEntity r0;

        r0 := @this: org.springframework.http.HttpEntity;

        r1 := @parameter0: org.springframework.util.MultiValueMap;

        specialinvoke r0.<org.springframework.http.HttpEntity: void <init>(java.lang.Object,org.springframework.util.MultiValueMap)>(null, r1);

        return;
    }

    public void <init>(java.lang.Object, org.springframework.util.MultiValueMap)
    {
        org.springframework.http.HttpEntity r0;
        org.springframework.http.HttpHeaders $r2, $r4;
        org.springframework.util.MultiValueMap r3;
        java.lang.Object r1;

        r0 := @this: org.springframework.http.HttpEntity;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: org.springframework.util.MultiValueMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.http.HttpEntity: java.lang.Object body> = r1;

        $r2 = new org.springframework.http.HttpHeaders;

        specialinvoke $r2.<org.springframework.http.HttpHeaders: void <init>()>();

        if r3 == null goto label1;

        virtualinvoke $r2.<org.springframework.http.HttpHeaders: void putAll(java.util.Map)>(r3);

     label1:
        $r4 = staticinvoke <org.springframework.http.HttpHeaders: org.springframework.http.HttpHeaders readOnlyHttpHeaders(org.springframework.http.HttpHeaders)>($r2);

        r0.<org.springframework.http.HttpEntity: org.springframework.http.HttpHeaders headers> = $r4;

        return;
    }

    public org.springframework.http.HttpHeaders getHeaders()
    {
        org.springframework.http.HttpEntity r0;
        org.springframework.http.HttpHeaders $r1;

        r0 := @this: org.springframework.http.HttpEntity;

        $r1 = r0.<org.springframework.http.HttpEntity: org.springframework.http.HttpHeaders headers>;

        return $r1;
    }

    public java.lang.Object getBody()
    {
        org.springframework.http.HttpEntity r0;
        java.lang.Object $r1;

        r0 := @this: org.springframework.http.HttpEntity;

        $r1 = r0.<org.springframework.http.HttpEntity: java.lang.Object body>;

        return $r1;
    }

    public boolean hasBody()
    {
        org.springframework.http.HttpEntity r0;
        java.lang.Object $r1;

        r0 := @this: org.springframework.http.HttpEntity;

        $r1 = r0.<org.springframework.http.HttpEntity: java.lang.Object body>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
}
