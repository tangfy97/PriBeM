public class thredds.inventory.CollectionSpecParser extends java.lang.Object
{
    private java.lang.String spec;
    private java.lang.String topDir;
    private boolean subdirs;
    private boolean error;
    private java.lang.String dateFormatMark;
    private java.util.regex.Pattern pattern;

    public void <init>(java.lang.String, java.util.Formatter)
    {
        java.util.Formatter r18;
        thredds.inventory.CollectionSpecParser r0;
        boolean $z0;
        java.lang.StringBuilder $r7, $r9, $r10, $r15;
        java.util.regex.Pattern $r6, $r12, $r17;
        java.lang.Object[] $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        java.lang.String r1, $r2, $r3, $r5, $r8, $r11, $r13, $r14, $r16, $r20, $r21, r22;
        java.io.File $r4;

        r0 := @this: thredds.inventory.CollectionSpecParser;

        r1 := @parameter0: java.lang.String;

        r18 := @parameter1: java.util.Formatter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.inventory.CollectionSpecParser: boolean subdirs> = 0;

        r0.<thredds.inventory.CollectionSpecParser: boolean error> = 0;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        r0.<thredds.inventory.CollectionSpecParser: java.lang.String spec> = $r2;

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("/**/");

        if $i0 <= 0 goto label01;

        $r21 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r0.<thredds.inventory.CollectionSpecParser: java.lang.String topDir> = $r21;

        i8 = $i0 + 3;

        r0.<thredds.inventory.CollectionSpecParser: boolean subdirs> = 1;

        goto label02;

     label01:
        $i1 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(47);

        i8 = $i1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        r0.<thredds.inventory.CollectionSpecParser: java.lang.String topDir> = $r3;

     label02:
        $r4 = new java.io.File;

        $r5 = r0.<thredds.inventory.CollectionSpecParser: java.lang.String topDir>;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5);

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label03;

        $r19 = newarray (java.lang.Object)[1];

        $r20 = r0.<thredds.inventory.CollectionSpecParser: java.lang.String topDir>;

        $r19[0] = $r20;

        virtualinvoke r18.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" Directory %s does not exist %n", $r19);

        r0.<thredds.inventory.CollectionSpecParser: boolean error> = 1;

     label03:
        r22 = null;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = $i2 - 2;

        if i8 >= $i3 goto label04;

        $i7 = i8 + 1;

        r22 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i7);

     label04:
        if r22 == null goto label10;

        $i4 = virtualinvoke r22.<java.lang.String: int indexOf(int)>(35);

        if $i4 < 0 goto label09;

        $i5 = virtualinvoke r22.<java.lang.String: int lastIndexOf(int)>(35);

        if $i4 == $i5 goto label07;

        $r13 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        r0.<thredds.inventory.CollectionSpecParser: java.lang.String dateFormatMark> = $r13;

        $r14 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String remove(java.lang.String,int)>(r22, 35);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>($r14);

        i9 = $i4;

     label05:
        $i6 = $i5 - 1;

        if i9 >= $i6 goto label06;

        virtualinvoke $r15.<java.lang.StringBuilder: void setCharAt(int,char)>(i9, 46);

        i9 = i9 + 1;

        goto label05;

     label06:
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r16);

        r0.<thredds.inventory.CollectionSpecParser: java.util.regex.Pattern pattern> = $r17;

        goto label08;

     label07:
        r0.<thredds.inventory.CollectionSpecParser: java.lang.String dateFormatMark> = r22;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r11);

        r0.<thredds.inventory.CollectionSpecParser: java.util.regex.Pattern pattern> = $r12;

     label08:
        goto label10;

     label09:
        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r22);

        r0.<thredds.inventory.CollectionSpecParser: java.util.regex.Pattern pattern> = $r6;

     label10:
        return;
    }

    public java.lang.String getSpec()
    {
        java.lang.String $r1;
        thredds.inventory.CollectionSpecParser r0;

        r0 := @this: thredds.inventory.CollectionSpecParser;

        $r1 = r0.<thredds.inventory.CollectionSpecParser: java.lang.String spec>;

        return $r1;
    }

    public java.lang.String getTopDir()
    {
        java.lang.String $r1;
        thredds.inventory.CollectionSpecParser r0;

        r0 := @this: thredds.inventory.CollectionSpecParser;

        $r1 = r0.<thredds.inventory.CollectionSpecParser: java.lang.String topDir>;

        return $r1;
    }

    public boolean wantSubdirs()
    {
        thredds.inventory.CollectionSpecParser r0;
        boolean $z0;

        r0 := @this: thredds.inventory.CollectionSpecParser;

        $z0 = r0.<thredds.inventory.CollectionSpecParser: boolean subdirs>;

        return $z0;
    }

    public java.util.regex.Pattern getFilter()
    {
        java.util.regex.Pattern $r1;
        thredds.inventory.CollectionSpecParser r0;

        r0 := @this: thredds.inventory.CollectionSpecParser;

        $r1 = r0.<thredds.inventory.CollectionSpecParser: java.util.regex.Pattern pattern>;

        return $r1;
    }

    public java.lang.String getDateFormatMark()
    {
        java.lang.String $r1;
        thredds.inventory.CollectionSpecParser r0;

        r0 := @this: thredds.inventory.CollectionSpecParser;

        $r1 = r0.<thredds.inventory.CollectionSpecParser: java.lang.String dateFormatMark>;

        return $r1;
    }

    public boolean isError()
    {
        thredds.inventory.CollectionSpecParser r0;
        boolean $z0;

        r0 := @this: thredds.inventory.CollectionSpecParser;

        $z0 = r0.<thredds.inventory.CollectionSpecParser: boolean error>;

        return $z0;
    }

    public java.lang.String toString()
    {
        thredds.inventory.CollectionSpecParser r2;
        java.lang.String $r3, $r13, $r17;
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r16;
        java.util.regex.Pattern $r9;

        r2 := @this: thredds.inventory.CollectionSpecParser;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CollectionSpecParser{\n   topDir=\'");

        $r3 = r2.<thredds.inventory.CollectionSpecParser: java.lang.String topDir>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n   subdirs=");

        $z0 = r2.<thredds.inventory.CollectionSpecParser: boolean subdirs>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n   regExp=\'");

        $r9 = r2.<thredds.inventory.CollectionSpecParser: java.util.regex.Pattern pattern>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n   dateFormatMark=\'");

        $r13 = r2.<thredds.inventory.CollectionSpecParser: java.lang.String dateFormatMark>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n}");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    private static void doit(java.lang.String, java.util.Formatter)
    {
        java.io.PrintStream $r4, $r7, $r9;
        java.lang.Object[] $r3, $r6, $r8;
        java.util.Formatter r2;
        thredds.inventory.CollectionSpecParser $r0;
        int $i0;
        java.lang.String r1, $r5;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Formatter;

        $r0 = new thredds.inventory.CollectionSpecParser;

        specialinvoke $r0.<thredds.inventory.CollectionSpecParser: void <init>(java.lang.String,java.util.Formatter)>(r1, r2);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r1;

        $r3[1] = $r0;

        virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("spec= %s%n%s%n", $r3);

        $r5 = virtualinvoke r2.<java.util.Formatter: java.lang.String toString()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = $r5;

        virtualinvoke $r9.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s%n", $r8);

     label1:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = newarray (java.lang.Object)[0];

        virtualinvoke $r7.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("-----------------------------------%n", $r6);

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r1;
        java.util.Formatter $r0;

        r1 := @parameter0: java.lang.String[];

        $r0 = new java.util.Formatter;

        specialinvoke $r0.<java.util.Formatter: void <init>()>();

        staticinvoke <thredds.inventory.CollectionSpecParser: void doit(java.lang.String,java.util.Formatter)>("C:/data/formats/gempak/surface/#yyyyMMdd#_sao.gem", $r0);

        return;
    }

    public static void main2(java.lang.String[])
    {
        java.lang.String[] r11;
        java.util.Formatter $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r11 := @parameter0: java.lang.String[];

        $r0 = new java.util.Formatter;

        specialinvoke $r0.<java.util.Formatter: void <init>()>();

        staticinvoke <thredds.inventory.CollectionSpecParser: void doit(java.lang.String,java.util.Formatter)>("/data/ldm/pub/decoded/netcdf/surface/metar/**/Surface_METAR_#yyyyMMdd_HHmm#\\.nc", $r0);

        $r1 = new java.util.Formatter;

        specialinvoke $r1.<java.util.Formatter: void <init>()>();

        staticinvoke <thredds.inventory.CollectionSpecParser: void doit(java.lang.String,java.util.Formatter)>("/data/ldm/pub/decoded/netcdf/surface/metar/**/Surface_METAR_#yyyyMMdd_HHmm#.nc", $r1);

        $r2 = new java.util.Formatter;

        specialinvoke $r2.<java.util.Formatter: void <init>()>();

        staticinvoke <thredds.inventory.CollectionSpecParser: void doit(java.lang.String,java.util.Formatter)>("/data/ldm/pub/decoded/netcdf/surface/metar/**/Surface_METAR_#yyyyMMdd_HHmm", $r2);

        $r3 = new java.util.Formatter;

        specialinvoke $r3.<java.util.Formatter: void <init>()>();

        staticinvoke <thredds.inventory.CollectionSpecParser: void doit(java.lang.String,java.util.Formatter)>("/data/ldm/pub/decoded/netcdf/surface/metar/Surface_METAR_#yyyyMMdd_HHmm", $r3);

        $r4 = new java.util.Formatter;

        specialinvoke $r4.<java.util.Formatter: void <init>()>();

        staticinvoke <thredds.inventory.CollectionSpecParser: void doit(java.lang.String,java.util.Formatter)>("/data/ldm/pub/decoded/netcdf/surface/metar/Surface_METAR_#yyyyMMdd_HHmm#.nc", $r4);

        $r5 = new java.util.Formatter;

        specialinvoke $r5.<java.util.Formatter: void <init>()>();

        staticinvoke <thredds.inventory.CollectionSpecParser: void doit(java.lang.String,java.util.Formatter)>("/data/ldm/pub/decoded/netcdf/surface/metar/Surface_METAR_yyyyMMdd_HHmm.nc", $r5);

        $r6 = new java.util.Formatter;

        specialinvoke $r6.<java.util.Formatter: void <init>()>();

        staticinvoke <thredds.inventory.CollectionSpecParser: void doit(java.lang.String,java.util.Formatter)>("/data/ldm/pub/decoded/netcdf/surface/metar/", $r6);

        $r7 = new java.util.Formatter;

        specialinvoke $r7.<java.util.Formatter: void <init>()>();

        staticinvoke <thredds.inventory.CollectionSpecParser: void doit(java.lang.String,java.util.Formatter)>("/data/ldm/pub/decoded/netcdf/surface/metar/**/", $r7);

        $r8 = new java.util.Formatter;

        specialinvoke $r8.<java.util.Formatter: void <init>()>();

        staticinvoke <thredds.inventory.CollectionSpecParser: void doit(java.lang.String,java.util.Formatter)>("/data/ldm/pub/decoded/netcdf/surface/metar/**/*", $r8);

        $r9 = new java.util.Formatter;

        specialinvoke $r9.<java.util.Formatter: void <init>()>();

        staticinvoke <thredds.inventory.CollectionSpecParser: void doit(java.lang.String,java.util.Formatter)>("/data/ldm/pub/decoded/netcdf/surface/metar/*", $r9);

        $r10 = new java.util.Formatter;

        specialinvoke $r10.<java.util.Formatter: void <init>()>();

        staticinvoke <thredds.inventory.CollectionSpecParser: void doit(java.lang.String,java.util.Formatter)>("/data/ldm/pub/decoded/netcdf/surface/metar/T*.T", $r10);

        return;
    }
}
