public class org.apache.batik.svggen.font.table.GlyfSimpleDescript extends org.apache.batik.svggen.font.table.GlyfDescript
{
    private int[] endPtsOfContours;
    private byte[] flags;
    private short[] xCoordinates;
    private short[] yCoordinates;
    private int count;

    public void <init>(org.apache.batik.svggen.font.table.GlyfTable, short, java.io.ByteArrayInputStream)
    {
        byte[] $r6;
        short s0;
        java.io.ByteArrayInputStream r2;
        org.apache.batik.svggen.font.table.GlyfSimpleDescript r0;
        int[] $r3, $r4, $r5;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, i17, $i18, $i19, $i20;
        short[] $r7, $r8;
        org.apache.batik.svggen.font.table.GlyfTable r1;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfSimpleDescript;

        r1 := @parameter0: org.apache.batik.svggen.font.table.GlyfTable;

        s0 := @parameter1: short;

        r2 := @parameter2: java.io.ByteArrayInputStream;

        specialinvoke r0.<org.apache.batik.svggen.font.table.GlyfDescript: void <init>(org.apache.batik.svggen.font.table.GlyfTable,short,java.io.ByteArrayInputStream)>(r1, s0, r2);

        $i18 = (int) s0;

        $r3 = newarray (int)[$i18];

        r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: int[] endPtsOfContours> = $r3;

        i17 = 0;

        goto label2;

     label1:
        $r4 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: int[] endPtsOfContours>;

        $i1 = virtualinvoke r2.<java.io.ByteArrayInputStream: int read()>();

        $i2 = $i1 << 8;

        $i3 = virtualinvoke r2.<java.io.ByteArrayInputStream: int read()>();

        $i4 = $i2 | $i3;

        $r4[i17] = $i4;

        i17 = i17 + 1;

     label2:
        $i19 = (int) s0;

        if i17 < $i19 goto label1;

        $r5 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: int[] endPtsOfContours>;

        $i20 = (int) s0;

        $i5 = $i20 - 1;

        $i6 = $r5[$i5];

        $i7 = $i6 + 1;

        r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: int count> = $i7;

        $i8 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: int count>;

        $r6 = newarray (byte)[$i8];

        r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: byte[] flags> = $r6;

        $i9 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: int count>;

        $r7 = newarray (short)[$i9];

        r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: short[] xCoordinates> = $r7;

        $i10 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: int count>;

        $r8 = newarray (short)[$i10];

        r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: short[] yCoordinates> = $r8;

        $i11 = virtualinvoke r2.<java.io.ByteArrayInputStream: int read()>();

        $i12 = $i11 << 8;

        $i13 = virtualinvoke r2.<java.io.ByteArrayInputStream: int read()>();

        i14 = $i12 | $i13;

        virtualinvoke r0.<org.apache.batik.svggen.font.table.Program: void readInstructions(java.io.ByteArrayInputStream,int)>(r2, i14);

        $i15 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: int count>;

        specialinvoke r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: void readFlags(int,java.io.ByteArrayInputStream)>($i15, r2);

        $i16 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: int count>;

        specialinvoke r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: void readCoords(int,java.io.ByteArrayInputStream)>($i16, r2);

        return;
    }

    public int getEndPtOfContours(int)
    {
        org.apache.batik.svggen.font.table.GlyfSimpleDescript r0;
        int[] $r1;
        int i0, $i1;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfSimpleDescript;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: int[] endPtsOfContours>;

        $i1 = $r1[i0];

        return $i1;
    }

    public byte getFlags(int)
    {
        byte[] $r1;
        byte $b1;
        org.apache.batik.svggen.font.table.GlyfSimpleDescript r0;
        int i0;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfSimpleDescript;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: byte[] flags>;

        $b1 = $r1[i0];

        return $b1;
    }

    public short getXCoordinate(int)
    {
        short $s1;
        org.apache.batik.svggen.font.table.GlyfSimpleDescript r0;
        int i0;
        short[] $r1;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfSimpleDescript;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: short[] xCoordinates>;

        $s1 = $r1[i0];

        return $s1;
    }

    public short getYCoordinate(int)
    {
        short $s1;
        org.apache.batik.svggen.font.table.GlyfSimpleDescript r0;
        int i0;
        short[] $r1;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfSimpleDescript;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: short[] yCoordinates>;

        $s1 = $r1[i0];

        return $s1;
    }

    public boolean isComposite()
    {
        org.apache.batik.svggen.font.table.GlyfSimpleDescript r0;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfSimpleDescript;

        return 0;
    }

    public int getPointCount()
    {
        int $i0;
        org.apache.batik.svggen.font.table.GlyfSimpleDescript r0;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfSimpleDescript;

        $i0 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: int count>;

        return $i0;
    }

    public int getContourCount()
    {
        int $i0;
        org.apache.batik.svggen.font.table.GlyfSimpleDescript r0;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfSimpleDescript;

        $i0 = virtualinvoke r0.<org.apache.batik.svggen.font.table.GlyfDescript: int getNumberOfContours()>();

        return $i0;
    }

    private void readCoords(int, java.io.ByteArrayInputStream)
    {
        byte[] $r1, $r2, $r4, $r5, $r6, $r7;
        byte $b1, $b2, $b3, $b4, $b16, $b17, $b21, $b22, $b23, $b24, $b36, $b37;
        java.io.ByteArrayInputStream r3;
        short[] $r8, $r9;
        short $s9, $s12, $s14, $s19, $s29, $s32, $s34, $s39, s41, s42;
        org.apache.batik.svggen.font.table.GlyfSimpleDescript r0;
        int i0, $i5, $i6, $i7, $i8, $i10, $i11, $i13, $i15, $i18, $i20, $i25, $i26, $i27, $i28, $i30, $i31, $i33, $i35, $i38, $i40, i43, i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfSimpleDescript;

        i0 := @parameter0: int;

        r3 := @parameter1: java.io.ByteArrayInputStream;

        s41 = 0;

        s42 = 0;

        i43 = 0;

        goto label05;

     label01:
        $r1 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: byte[] flags>;

        $b1 = $r1[i43];

        $b2 = $b1 & 16;

        if $b2 == 0 goto label02;

        $r4 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: byte[] flags>;

        $b16 = $r4[i43];

        $b17 = $b16 & 2;

        if $b17 == 0 goto label04;

        $i18 = virtualinvoke r3.<java.io.ByteArrayInputStream: int read()>();

        $s19 = (short) $i18;

        $i45 = (int) $s19;

        $i20 = s41 + $i45;

        s41 = (short) $i20;

        goto label04;

     label02:
        $r2 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: byte[] flags>;

        $b3 = $r2[i43];

        $b4 = $b3 & 2;

        if $b4 == 0 goto label03;

        $i11 = virtualinvoke r3.<java.io.ByteArrayInputStream: int read()>();

        $s12 = (short) $i11;

        $i46 = (int) $s12;

        $i13 = neg $i46;

        $s14 = (short) $i13;

        $i47 = (int) $s14;

        $i15 = s41 + $i47;

        s41 = (short) $i15;

        goto label04;

     label03:
        $i5 = virtualinvoke r3.<java.io.ByteArrayInputStream: int read()>();

        $i6 = $i5 << 8;

        $i7 = virtualinvoke r3.<java.io.ByteArrayInputStream: int read()>();

        $i8 = $i6 | $i7;

        $s9 = (short) $i8;

        $i48 = (int) $s9;

        $i10 = s41 + $i48;

        s41 = (short) $i10;

     label04:
        $r8 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: short[] xCoordinates>;

        $r8[i43] = s41;

        i43 = i43 + 1;

     label05:
        if i43 < i0 goto label01;

        i44 = 0;

        goto label10;

     label06:
        $r5 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: byte[] flags>;

        $b21 = $r5[i44];

        $b22 = $b21 & 32;

        if $b22 == 0 goto label07;

        $r7 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: byte[] flags>;

        $b36 = $r7[i44];

        $b37 = $b36 & 4;

        if $b37 == 0 goto label09;

        $i38 = virtualinvoke r3.<java.io.ByteArrayInputStream: int read()>();

        $s39 = (short) $i38;

        $i49 = (int) $s39;

        $i40 = s42 + $i49;

        s42 = (short) $i40;

        goto label09;

     label07:
        $r6 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: byte[] flags>;

        $b23 = $r6[i44];

        $b24 = $b23 & 4;

        if $b24 == 0 goto label08;

        $i31 = virtualinvoke r3.<java.io.ByteArrayInputStream: int read()>();

        $s32 = (short) $i31;

        $i50 = (int) $s32;

        $i33 = neg $i50;

        $s34 = (short) $i33;

        $i51 = (int) $s34;

        $i35 = s42 + $i51;

        s42 = (short) $i35;

        goto label09;

     label08:
        $i25 = virtualinvoke r3.<java.io.ByteArrayInputStream: int read()>();

        $i26 = $i25 << 8;

        $i27 = virtualinvoke r3.<java.io.ByteArrayInputStream: int read()>();

        $i28 = $i26 | $i27;

        $s29 = (short) $i28;

        $i52 = (int) $s29;

        $i30 = s42 + $i52;

        s42 = (short) $i30;

     label09:
        $r9 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: short[] yCoordinates>;

        $r9[i44] = s42;

        i44 = i44 + 1;

     label10:
        if i44 < i0 goto label06;

        return;
    }

    private void readFlags(int, java.io.ByteArrayInputStream)
    {
        byte[] $r2, $r3, $r4, $r5;
        java.io.ByteArrayInputStream r1;
        byte $b2, $b3, $b4, $b6;
        org.apache.batik.svggen.font.table.GlyfSimpleDescript r0;
        int i0, $i1, $i5, $i7, i8, i9;
        java.io.PrintStream $r7;
        java.lang.ArrayIndexOutOfBoundsException $r6;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfSimpleDescript;

        i0 := @parameter0: int;

        r1 := @parameter1: java.io.ByteArrayInputStream;

     label1:
        i8 = 0;

        goto label6;

     label2:
        $r2 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: byte[] flags>;

        $i1 = virtualinvoke r1.<java.io.ByteArrayInputStream: int read()>();

        $b2 = (byte) $i1;

        $r2[i8] = $b2;

        $r3 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: byte[] flags>;

        $b3 = $r3[i8];

        $b4 = $b3 & 8;

        if $b4 == 0 goto label5;

        $i5 = virtualinvoke r1.<java.io.ByteArrayInputStream: int read()>();

        i9 = 1;

        goto label4;

     label3:
        $r5 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: byte[] flags>;

        $i7 = i8 + i9;

        $r4 = r0.<org.apache.batik.svggen.font.table.GlyfSimpleDescript: byte[] flags>;

        $b6 = $r4[i8];

        $r5[$i7] = $b6;

        i9 = i9 + 1;

     label4:
        if i9 <= $i5 goto label3;

        i8 = i8 + $i5;

     label5:
        i8 = i8 + 1;

     label6:
        if i8 < i0 goto label2;

     label7:
        goto label9;

     label8:
        $r6 := @caughtexception;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("error: array index out of bounds");

     label9:
        return;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label7 with label8;
    }
}
