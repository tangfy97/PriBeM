public final class org.apache.cxf.jaxrs.model.URITemplate extends java.lang.Object
{
    public static final java.lang.String TEMPLATE_PARAMETERS;
    public static final java.lang.String LIMITED_REGEX_SUFFIX;
    public static final java.lang.String FINAL_MATCH_GROUP;
    private static final java.lang.String DEFAULT_PATH_VARIABLE_REGEX;
    private static final java.lang.String CHARACTERS_TO_ESCAPE;
    private static final java.lang.String SLASH;
    private static final java.lang.String SLASH_QUOTE;
    private final java.lang.String template;
    private final java.util.List variables;
    private final java.util.List customVariables;
    private final java.util.regex.Pattern templateRegexPattern;
    private final java.lang.String literals;
    private final java.util.List uriChunks;

    public void <init>(java.lang.String)
    {
        org.apache.cxf.jaxrs.model.URITemplate$Variable r24;
        org.apache.cxf.jaxrs.model.URITemplate$UriChunk $r13;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r14, $r15, $r18;
        org.apache.cxf.jaxrs.model.URITemplate$CurlyBraceTokenizer $r29;
        java.lang.StringBuilder $r27, $r28;
        java.util.regex.Pattern $r11;
        org.apache.cxf.jaxrs.model.URITemplate r0;
        java.util.ArrayList $r25, $r26, $r30;
        int $i0, i2, $i3;
        java.lang.String r3, $r7, $r9, $r10, $r12, $r16, $r17, $r19, $r20, $r21, $r22, $r23;
        char $c1;

        r0 := @this: org.apache.cxf.jaxrs.model.URITemplate;

        r3 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List variables> = $r25;

        $r26 = new java.util.ArrayList;

        specialinvoke $r26.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List customVariables> = $r26;

        r0.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String template> = r3;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = new org.apache.cxf.jaxrs.model.URITemplate$CurlyBraceTokenizer;

        $r7 = r0.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String template>;

        specialinvoke $r29.<org.apache.cxf.jaxrs.model.URITemplate$CurlyBraceTokenizer: void <init>(java.lang.String)>($r7);

        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List uriChunks> = $r30;

     label1:
        $z0 = virtualinvoke $r29.<org.apache.cxf.jaxrs.model.URITemplate$CurlyBraceTokenizer: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r12 = virtualinvoke $r29.<org.apache.cxf.jaxrs.model.URITemplate$CurlyBraceTokenizer: java.lang.String next()>();

        $r13 = staticinvoke <org.apache.cxf.jaxrs.model.URITemplate$UriChunk: org.apache.cxf.jaxrs.model.URITemplate$UriChunk createUriChunk(java.lang.String)>($r12);

        $r14 = r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List uriChunks>;

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r13);

        $z1 = $r13 instanceof org.apache.cxf.jaxrs.model.URITemplate$Literal;

        if $z1 == 0 goto label2;

        $r21 = virtualinvoke $r13.<org.apache.cxf.jaxrs.model.URITemplate$UriChunk: java.lang.String getValue()>();

        $r22 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String encodePartiallyEncoded(java.lang.String,boolean)>($r21, 0);

        $r23 = staticinvoke <org.apache.cxf.jaxrs.model.URITemplate: java.lang.String escapeCharacters(java.lang.String)>($r22);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        goto label4;

     label2:
        $z2 = $r13 instanceof org.apache.cxf.jaxrs.model.URITemplate$Variable;

        if $z2 == 0 goto label4;

        r24 = (org.apache.cxf.jaxrs.model.URITemplate$Variable) $r13;

        $r15 = r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List variables>;

        $r16 = virtualinvoke r24.<org.apache.cxf.jaxrs.model.URITemplate$Variable: java.lang.String getName()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r17 = virtualinvoke r24.<org.apache.cxf.jaxrs.model.URITemplate$Variable: java.lang.String getPattern()>();

        if $r17 == null goto label3;

        $r18 = r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List customVariables>;

        $r19 = virtualinvoke r24.<org.apache.cxf.jaxrs.model.URITemplate$Variable: java.lang.String getName()>();

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r19);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r20 = virtualinvoke r24.<org.apache.cxf.jaxrs.model.URITemplate$Variable: java.lang.String getPattern()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        goto label4;

     label3:
        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("([^/]+?)");

     label4:
        goto label1;

     label5:
        $r9 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String literals> = $r9;

        $i0 = virtualinvoke $r28.<java.lang.StringBuilder: int length()>();

        i2 = $i0 - 1;

        if i2 < 0 goto label7;

        $c1 = virtualinvoke $r28.<java.lang.StringBuilder: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 != 47 goto label6;

        $z3 = 1;

        goto label8;

     label6:
        $z3 = 0;

        goto label8;

     label7:
        $z3 = 0;

     label8:
        if $z3 == 0 goto label9;

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>(i2);

     label9:
        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(/.*)?");

        $r10 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r10);

        r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.regex.Pattern templateRegexPattern> = $r11;

        return;
    }

    public java.lang.String getLiteralChars()
    {
        java.lang.String $r1;
        org.apache.cxf.jaxrs.model.URITemplate r0;

        r0 := @this: org.apache.cxf.jaxrs.model.URITemplate;

        $r1 = r0.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String literals>;

        return $r1;
    }

    public java.lang.String getValue()
    {
        java.lang.String $r1;
        org.apache.cxf.jaxrs.model.URITemplate r0;

        r0 := @this: org.apache.cxf.jaxrs.model.URITemplate;

        $r1 = r0.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String template>;

        return $r1;
    }

    public java.lang.String getPatternValue()
    {
        java.util.regex.Pattern $r1;
        java.lang.String $r2;
        org.apache.cxf.jaxrs.model.URITemplate r0;

        r0 := @this: org.apache.cxf.jaxrs.model.URITemplate;

        $r1 = r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.regex.Pattern templateRegexPattern>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.lang.String toString()>();

        return $r2;
    }

    public java.util.List getVariables()
    {
        java.util.List $r1, $r2;
        org.apache.cxf.jaxrs.model.URITemplate r0;

        r0 := @this: org.apache.cxf.jaxrs.model.URITemplate;

        $r1 = r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List variables>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List getCustomVariables()
    {
        java.util.List $r1, $r2;
        org.apache.cxf.jaxrs.model.URITemplate r0;

        r0 := @this: org.apache.cxf.jaxrs.model.URITemplate;

        $r1 = r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List customVariables>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    private static java.lang.String escapeCharacters(java.lang.String)
    {
        char $c1;
        java.io.Serializable $r6;
        int $i0, i2;
        java.lang.StringBuilder $r0, $r3, $r4, $r5;
        java.lang.String r1, $r2;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label4;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <org.apache.cxf.jaxrs.model.URITemplate: boolean isReservedCharacter(char)>($c1);

        if $z0 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        i2 = i2 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private static boolean isReservedCharacter(char)
    {
        int $i1, $i2, $i4;
        char c0;
        java.lang.String $r0;
        boolean $z0;

        c0 := @parameter0: char;

        $r0 = ".*+$()";

        $i2 = (int) c0;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>($i2);

        $i4 = (int) -1;

        if $i1 == $i4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean match(java.lang.String, javax.ws.rs.core.MultivaluedMap)
    {
        java.util.regex.Matcher $r3, $r10, r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.List $r5, $r6, $r27;
        java.lang.StringBuilder $r32;
        java.util.regex.Pattern $r1, $r2, $r9, $r22;
        org.apache.cxf.jaxrs.model.URITemplate r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, i9, $i11;
        java.lang.String $r4, $r8, $r13, $r18, $r21, r23, r25, r26, r29, $r30, r31;
        java.util.Iterator $r28;
        javax.ws.rs.core.PathSegment $r15, $r17, $r20;
        javax.ws.rs.core.MultivaluedMap r11;
        java.lang.Object $r12, $r14, $r16, $r19;

        r0 := @this: org.apache.cxf.jaxrs.model.URITemplate;

        r23 := @parameter0: java.lang.String;

        r11 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        if r23 != null goto label03;

        $r22 = r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.regex.Pattern templateRegexPattern>;

        if $r22 != null goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        return $z5;

     label03:
        $r1 = r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.regex.Pattern templateRegexPattern>;

        if $r1 != null goto label04;

        return 0;

     label04:
        $r2 = r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.regex.Pattern templateRegexPattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r23);

        r24 = $r3;

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label05;

        $r21 = r0.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String template>;

        $z3 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("/");

        if $z3 == 0 goto label14;

        $z4 = virtualinvoke r23.<java.lang.String: boolean startsWith(java.lang.String)>("/;");

        if $z4 == 0 goto label14;

     label05:
        $z1 = virtualinvoke r23.<java.lang.String: boolean contains(java.lang.CharSequence)>(";");

        if $z1 == 0 goto label13;

        $r4 = r0.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String template>;

        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getPathSegments(java.lang.String,boolean)>($r4, 0);

        $r6 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getPathSegments(java.lang.String,boolean)>(r23, 0);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        i6 = 0;

     label06:
        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i6 >= $i0 goto label10;

        $i4 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i4 <= i6 goto label07;

        $r16 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i6);

        $r17 = (javax.ws.rs.core.PathSegment) $r16;

        $r18 = interfaceinvoke $r17.<javax.ws.rs.core.PathSegment: java.lang.String getPath()>();

        $i5 = virtualinvoke $r18.<java.lang.String: int indexOf(int)>(123);

        $i11 = (int) -1;

        if $i5 != $i11 goto label07;

        $r19 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i6);

        $r20 = (javax.ws.rs.core.PathSegment) $r19;

        r25 = interfaceinvoke $r20.<javax.ws.rs.core.PathSegment: java.lang.String getPath()>();

        goto label08;

     label07:
        $r14 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i6);

        $r15 = (javax.ws.rs.core.PathSegment) $r14;

        r25 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String fromPathSegment(javax.ws.rs.core.PathSegment)>($r15);

     label08:
        $i7 = virtualinvoke r25.<java.lang.String: int length()>();

        if $i7 <= 0 goto label09;

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

     label09:
        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        i6 = i6 + 1;

        goto label06;

     label10:
        $r8 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        r26 = $r8;

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i1 != 0 goto label11;

        r26 = "/";

     label11:
        $r9 = r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.regex.Pattern templateRegexPattern>;

        $r10 = virtualinvoke $r9.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r26);

        r24 = $r10;

        $z2 = virtualinvoke $r10.<java.util.regex.Matcher: boolean matches()>();

        if $z2 != 0 goto label12;

        return 0;

     label12:
        goto label14;

     label13:
        return 0;

     label14:
        $i8 = virtualinvoke r24.<java.util.regex.Matcher: int groupCount()>();

        i9 = 1;

        $r27 = r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List variables>;

        $r28 = interfaceinvoke $r27.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z6 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label19;

        $r12 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.lang.String) $r12;

     label16:
        if i9 > $i8 goto label18;

        $i2 = i9;

        i9 = i9 + 1;

        $r13 = virtualinvoke r24.<java.util.regex.Matcher: java.lang.String group(int)>($i2);

        if $r13 == null goto label16;

        $i3 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i3 != 0 goto label17;

        if i9 >= $i8 goto label17;

        goto label16;

     label17:
        interfaceinvoke r11.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>(r29, $r13);

        goto label18;

     label18:
        goto label15;

     label19:
        if i9 <= $i8 goto label20;

        $r30 = "/";

        goto label21;

     label20:
        $r30 = virtualinvoke r24.<java.util.regex.Matcher: java.lang.String group(int)>($i8);

     label21:
        r31 = $r30;

        if $r30 != null goto label22;

        r31 = "/";

     label22:
        interfaceinvoke r11.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>("FINAL_MATCH_GROUP", r31);

        return 1;
    }

    public java.lang.String substitute(java.util.List) throws java.lang.IllegalArgumentException
    {
        org.apache.cxf.jaxrs.model.URITemplate$Variable r9;
        org.apache.cxf.jaxrs.model.URITemplate r3;
        org.apache.cxf.jaxrs.model.URITemplate$UriChunk r8;
        java.lang.String $r6, r11, $r17, $r20, $r22;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r1, $r5;
        java.lang.IllegalArgumentException $r12, $r23;
        java.util.List r0, $r4;
        java.lang.StringBuilder $r2, $r13, $r14, $r15, $r16, $r18, $r19, $r21;
        java.lang.Object $r7, $r10;

        r3 := @this: org.apache.cxf.jaxrs.model.URITemplate;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("values is null");

        throw $r23;

     label1:
        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r3.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List uriChunks>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.cxf.jaxrs.model.URITemplate$UriChunk) $r7;

        $z1 = r8 instanceof org.apache.cxf.jaxrs.model.URITemplate$Variable;

        if $z1 == 0 goto label6;

        r9 = (org.apache.cxf.jaxrs.model.URITemplate$Variable) r8;

        $z2 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r10 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.String) $r10;

        $z3 = virtualinvoke r9.<org.apache.cxf.jaxrs.model.URITemplate$Variable: boolean matches(java.lang.String)>(r11);

        if $z3 != 0 goto label3;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value \'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not match variable ");

        $r17 = virtualinvoke r9.<org.apache.cxf.jaxrs.model.URITemplate$Variable: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with pattern ");

        $r20 = virtualinvoke r9.<org.apache.cxf.jaxrs.model.URITemplate$Variable: java.lang.String getPattern()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r12;

     label3:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        goto label5;

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

     label5:
        goto label7;

     label6:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

     label7:
        goto label2;

     label8:
        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    java.lang.String substitute(java.util.Map) throws java.lang.IllegalArgumentException
    {
        org.apache.cxf.jaxrs.model.URITemplate r0;
        java.util.Map r1;
        java.util.Set $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.cxf.jaxrs.model.URITemplate;

        r1 := @parameter0: java.util.Map;

        $r2 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String substitute(java.util.Map,java.util.Set,boolean)>(r1, $r2, 0);

        return $r3;
    }

    public java.lang.String substitute(java.util.Map, java.util.Set, boolean) throws java.lang.IllegalArgumentException
    {
        org.apache.cxf.jaxrs.model.URITemplate$Variable r8;
        org.apache.cxf.jaxrs.model.URITemplate$UriChunk r7;
        java.util.Map r0;
        boolean $z0, $z1, z2, $z3, $z4;
        java.util.Set r19;
        java.util.List $r3;
        java.lang.StringBuilder $r1, $r12, $r13, $r15, $r16, $r22, $r23, $r24, $r25, $r27, $r28, $r30;
        org.apache.cxf.jaxrs.model.URITemplate r2;
        java.lang.String $r5, $r9, $r14, $r17, $r18, $r20, $r26, $r29, $r31, r33;
        java.util.Iterator $r4;
        java.lang.IllegalArgumentException $r11, $r21, $r32;
        java.lang.Object $r6, $r10;

        r2 := @this: org.apache.cxf.jaxrs.model.URITemplate;

        r0 := @parameter0: java.util.Map;

        r19 := @parameter1: java.util.Set;

        z2 := @parameter2: boolean;

        if r0 != null goto label01;

        $r32 = new java.lang.IllegalArgumentException;

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("valuesMap is null");

        throw $r32;

     label01:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = r2.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List uriChunks>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.cxf.jaxrs.model.URITemplate$UriChunk) $r6;

        $z1 = r7 instanceof org.apache.cxf.jaxrs.model.URITemplate$Variable;

        if $z1 == 0 goto label08;

        r8 = (org.apache.cxf.jaxrs.model.URITemplate$Variable) r7;

        $r9 = virtualinvoke r8.<org.apache.cxf.jaxrs.model.URITemplate$Variable: java.lang.String getName()>();

        $r10 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        if $r10 == null goto label05;

        $r18 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        r33 = $r18;

        $z3 = virtualinvoke r8.<org.apache.cxf.jaxrs.model.URITemplate$Variable: boolean matches(java.lang.String)>($r18);

        if $z3 != 0 goto label03;

        $r21 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value \'");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not match variable ");

        $r26 = virtualinvoke r8.<org.apache.cxf.jaxrs.model.URITemplate$Variable: java.lang.String getName()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with pattern ");

        $r29 = virtualinvoke r8.<org.apache.cxf.jaxrs.model.URITemplate$Variable: java.lang.String getPattern()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r21;

     label03:
        $r20 = virtualinvoke r8.<org.apache.cxf.jaxrs.model.URITemplate$Variable: java.lang.String getName()>();

        $z4 = interfaceinvoke r19.<java.util.Set: boolean contains(java.lang.Object)>($r20);

        if $z4 == 0 goto label04;

        r33 = virtualinvoke $r18.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("/", "%2F");

     label04:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        goto label07;

     label05:
        if z2 == 0 goto label06;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        goto label07;

     label06:
        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Template variable ");

        $r14 = virtualinvoke r8.<org.apache.cxf.jaxrs.model.URITemplate$Variable: java.lang.String getName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no matching value");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r11;

     label07:
        goto label09;

     label08:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

     label09:
        goto label02;

     label10:
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String encodeLiteralCharacters(boolean)
    {
        org.apache.cxf.jaxrs.model.URITemplate r1;
        org.apache.cxf.jaxrs.model.URITemplate$UriChunk r7;
        int $i0, $i1;
        java.lang.String $r2, $r5, $r8, $r9;
        boolean $z0, $z1, z2;
        java.util.Iterator $r4;
        java.util.List $r3;
        float $f0, $f1;
        java.lang.StringBuilder $r0;
        java.lang.Object $r6;

        r1 := @this: org.apache.cxf.jaxrs.model.URITemplate;

        z2 := @parameter0: boolean;

        $r0 = new java.lang.StringBuilder;

        $r2 = r1.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String template>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $f0 = (float) $i0;

        $f1 = 1.5F * $f0;

        $i1 = (int) $f1;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r3 = r1.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List uriChunks>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.cxf.jaxrs.model.URITemplate$UriChunk) $r6;

        $r8 = virtualinvoke r7.<org.apache.cxf.jaxrs.model.URITemplate$UriChunk: java.lang.String getValue()>();

        $z1 = r7 instanceof org.apache.cxf.jaxrs.model.URITemplate$Literal;

        if $z1 == 0 goto label2;

        $r9 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String encodePartiallyEncoded(java.lang.String,boolean)>($r8, z2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        goto label3;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

     label3:
        goto label1;

     label4:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static org.apache.cxf.jaxrs.model.URITemplate createTemplate(javax.ws.rs.Path)
    {
        javax.ws.rs.Path r0;
        java.lang.String $r2;
        org.apache.cxf.jaxrs.model.URITemplate $r1;

        r0 := @parameter0: javax.ws.rs.Path;

        if r0 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = interfaceinvoke r0.<javax.ws.rs.Path: java.lang.String value()>();

     label2:
        $r1 = staticinvoke <org.apache.cxf.jaxrs.model.URITemplate: org.apache.cxf.jaxrs.model.URITemplate createTemplate(java.lang.String)>($r2);

        return $r1;
    }

    public static org.apache.cxf.jaxrs.model.URITemplate createTemplate(java.lang.String)
    {
        org.apache.cxf.jaxrs.model.URITemplate $r0, $r4;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String r5;
        boolean $z0;

        r5 := @parameter0: java.lang.String;

        if r5 != null goto label1;

        $r4 = new org.apache.cxf.jaxrs.model.URITemplate;

        specialinvoke $r4.<org.apache.cxf.jaxrs.model.URITemplate: void <init>(java.lang.String)>("/");

        return $r4;

     label1:
        $z0 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r0 = new org.apache.cxf.jaxrs.model.URITemplate;

        specialinvoke $r0.<org.apache.cxf.jaxrs.model.URITemplate: void <init>(java.lang.String)>(r5);

        return $r0;
    }

    public static int compareTemplates(org.apache.cxf.jaxrs.model.URITemplate, org.apache.cxf.jaxrs.model.URITemplate)
    {
        org.apache.cxf.jaxrs.model.URITemplate r0, r2;
        byte $b6, $b9, $b10, $b11;
        int $i0, $i1, $i2, $i3, $i4, $i5, i8;
        java.lang.String $r1, $r3, $r6, $r7;
        boolean $z0;
        java.util.List $r4, $r5, $r8, $r9;

        r0 := @parameter0: org.apache.cxf.jaxrs.model.URITemplate;

        r2 := @parameter1: org.apache.cxf.jaxrs.model.URITemplate;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String getLiteralChars()>();

        $r3 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String getLiteralChars()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label03;

        $i4 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i5 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i4 >= $i5 goto label01;

        $b6 = 1;

        goto label02;

     label01:
        $b6 = -1;

     label02:
        return $b6;

     label03:
        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List getVariables()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r5 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List getVariables()>();

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 >= $i1 goto label04;

        $b11 = 1;

        $b10 = 1;

        goto label06;

     label04:
        if $i0 <= $i1 goto label05;

        $b11 = -1;

        $b10 = -1;

        goto label06;

     label05:
        $b11 = 0;

        $b10 = 0;

     label06:
        i8 = $b11;

        if $b10 != 0 goto label09;

        $r8 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List getCustomVariables()>();

        $i2 = interfaceinvoke $r8.<java.util.List: int size()>();

        $r9 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List getCustomVariables()>();

        $i3 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i2 == $i3 goto label09;

        if $i2 >= $i3 goto label07;

        $b9 = 1;

        goto label08;

     label07:
        $b9 = -1;

     label08:
        return $b9;

     label09:
        if i8 != 0 goto label10;

        $r6 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String getPatternValue()>();

        $r7 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String getPatternValue()>();

        i8 = virtualinvoke $r6.<java.lang.String: int compareTo(java.lang.String)>($r7);

     label10:
        return i8;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.jaxrs.model.URITemplate: java.lang.String SLASH_QUOTE> = "/;";

        <org.apache.cxf.jaxrs.model.URITemplate: java.lang.String SLASH> = "/";

        <org.apache.cxf.jaxrs.model.URITemplate: java.lang.String CHARACTERS_TO_ESCAPE> = ".*+$()";

        <org.apache.cxf.jaxrs.model.URITemplate: java.lang.String DEFAULT_PATH_VARIABLE_REGEX> = "([^/]+?)";

        <org.apache.cxf.jaxrs.model.URITemplate: java.lang.String FINAL_MATCH_GROUP> = "FINAL_MATCH_GROUP";

        <org.apache.cxf.jaxrs.model.URITemplate: java.lang.String LIMITED_REGEX_SUFFIX> = "(/.*)?";

        <org.apache.cxf.jaxrs.model.URITemplate: java.lang.String TEMPLATE_PARAMETERS> = "jaxrs.template.parameters";

        return;
    }
}
