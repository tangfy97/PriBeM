public class org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal extends org.bouncycastle.jce.provider.JDKKeyPairGenerator
{
    org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters param;
    org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator engine;
    int strength;
    int certainty;
    java.security.SecureRandom random;
    boolean initialised;

    public void <init>()
    {
        java.security.SecureRandom $r2;
        org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator $r1;
        org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal r0;

        r0 := @this: org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal;

        specialinvoke r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator: void <init>(java.lang.String)>("ElGamal");

        $r1 = new org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator;

        specialinvoke $r1.<org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator engine> = $r1;

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: int strength> = 1024;

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: int certainty> = 20;

        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: java.security.SecureRandom random> = $r2;

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: boolean initialised> = 0;

        return;
    }

    public void initialize(int, java.security.SecureRandom)
    {
        int i0;
        java.security.SecureRandom r1;
        org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal r0;

        r0 := @this: org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.SecureRandom;

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: int strength> = i0;

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: java.security.SecureRandom random> = r1;

        return;
    }

    public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException
    {
        org.bouncycastle.jce.spec.ElGamalParameterSpec r14;
        java.security.InvalidAlgorithmParameterException $r13;
        java.security.SecureRandom r3;
        int $i0;
        java.math.BigInteger $r5, $r6, $r11, $r12;
        java.security.spec.AlgorithmParameterSpec r0;
        boolean $z0, $z1, $z2;
        org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator $r8;
        org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal r1;
        javax.crypto.spec.DHParameterSpec r15;
        org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters $r2, $r7, $r9;
        org.bouncycastle.crypto.params.ElGamalParameters $r4, $r10;

        r1 := @this: org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal;

        r0 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        r3 := @parameter1: java.security.SecureRandom;

        $z0 = r0 instanceof org.bouncycastle.jce.spec.ElGamalParameterSpec;

        if $z0 != 0 goto label1;

        $z2 = r0 instanceof javax.crypto.spec.DHParameterSpec;

        if $z2 != 0 goto label1;

        $r13 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r13.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("parameter object not a DHParameterSpec or an ElGamalParameterSpec");

        throw $r13;

     label1:
        $z1 = r0 instanceof org.bouncycastle.jce.spec.ElGamalParameterSpec;

        if $z1 == 0 goto label2;

        r14 = (org.bouncycastle.jce.spec.ElGamalParameterSpec) r0;

        $r9 = new org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters;

        $r10 = new org.bouncycastle.crypto.params.ElGamalParameters;

        $r11 = virtualinvoke r14.<org.bouncycastle.jce.spec.ElGamalParameterSpec: java.math.BigInteger getP()>();

        $r12 = virtualinvoke r14.<org.bouncycastle.jce.spec.ElGamalParameterSpec: java.math.BigInteger getG()>();

        specialinvoke $r10.<org.bouncycastle.crypto.params.ElGamalParameters: void <init>(java.math.BigInteger,java.math.BigInteger)>($r11, $r12);

        specialinvoke $r9.<org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters: void <init>(java.security.SecureRandom,org.bouncycastle.crypto.params.ElGamalParameters)>(r3, $r10);

        r1.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters param> = $r9;

        goto label3;

     label2:
        r15 = (javax.crypto.spec.DHParameterSpec) r0;

        $r2 = new org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters;

        $r4 = new org.bouncycastle.crypto.params.ElGamalParameters;

        $r5 = virtualinvoke r15.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $r6 = virtualinvoke r15.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        $i0 = virtualinvoke r15.<javax.crypto.spec.DHParameterSpec: int getL()>();

        specialinvoke $r4.<org.bouncycastle.crypto.params.ElGamalParameters: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r5, $r6, $i0);

        specialinvoke $r2.<org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters: void <init>(java.security.SecureRandom,org.bouncycastle.crypto.params.ElGamalParameters)>(r3, $r4);

        r1.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters param> = $r2;

     label3:
        $r8 = r1.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator engine>;

        $r7 = r1.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters param>;

        virtualinvoke $r8.<org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator: void init(org.bouncycastle.crypto.KeyGenerationParameters)>($r7);

        r1.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: boolean initialised> = 1;

        return;
    }

    public java.security.KeyPair generateKeyPair()
    {
        java.security.KeyPair $r5;
        java.security.SecureRandom $r9, $r11;
        org.bouncycastle.crypto.AsymmetricCipherKeyPair $r2;
        org.bouncycastle.jce.provider.JCEElGamalPublicKey $r6;
        int $i0, $i1;
        boolean $z0;
        org.bouncycastle.crypto.CipherParameters $r3, $r4;
        org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator $r1, $r14;
        org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal r0;
        org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters $r16;
        org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters $r10, $r13;
        org.bouncycastle.jce.provider.JCEElGamalPrivateKey $r7;
        org.bouncycastle.crypto.params.ElGamalParameters $r12;
        org.bouncycastle.crypto.generators.ElGamalParametersGenerator $r8;
        org.bouncycastle.crypto.params.ElGamalPublicKeyParameters $r15;

        r0 := @this: org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal;

        $z0 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: boolean initialised>;

        if $z0 != 0 goto label1;

        $r8 = new org.bouncycastle.crypto.generators.ElGamalParametersGenerator;

        specialinvoke $r8.<org.bouncycastle.crypto.generators.ElGamalParametersGenerator: void <init>()>();

        $i1 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: int strength>;

        $i0 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: int certainty>;

        $r9 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: java.security.SecureRandom random>;

        virtualinvoke $r8.<org.bouncycastle.crypto.generators.ElGamalParametersGenerator: void init(int,int,java.security.SecureRandom)>($i1, $i0, $r9);

        $r10 = new org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters;

        $r11 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: java.security.SecureRandom random>;

        $r12 = virtualinvoke $r8.<org.bouncycastle.crypto.generators.ElGamalParametersGenerator: org.bouncycastle.crypto.params.ElGamalParameters generateParameters()>();

        specialinvoke $r10.<org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters: void <init>(java.security.SecureRandom,org.bouncycastle.crypto.params.ElGamalParameters)>($r11, $r12);

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters param> = $r10;

        $r14 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator engine>;

        $r13 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: org.bouncycastle.crypto.params.ElGamalKeyGenerationParameters param>;

        virtualinvoke $r14.<org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator: void init(org.bouncycastle.crypto.KeyGenerationParameters)>($r13);

        r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: boolean initialised> = 1;

     label1:
        $r1 = r0.<org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator engine>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.crypto.generators.ElGamalKeyPairGenerator: org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.crypto.AsymmetricCipherKeyPair: org.bouncycastle.crypto.CipherParameters getPublic()>();

        $r15 = (org.bouncycastle.crypto.params.ElGamalPublicKeyParameters) $r3;

        $r4 = virtualinvoke $r2.<org.bouncycastle.crypto.AsymmetricCipherKeyPair: org.bouncycastle.crypto.CipherParameters getPrivate()>();

        $r16 = (org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters) $r4;

        $r5 = new java.security.KeyPair;

        $r6 = new org.bouncycastle.jce.provider.JCEElGamalPublicKey;

        specialinvoke $r6.<org.bouncycastle.jce.provider.JCEElGamalPublicKey: void <init>(org.bouncycastle.crypto.params.ElGamalPublicKeyParameters)>($r15);

        $r7 = new org.bouncycastle.jce.provider.JCEElGamalPrivateKey;

        specialinvoke $r7.<org.bouncycastle.jce.provider.JCEElGamalPrivateKey: void <init>(org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters)>($r16);

        specialinvoke $r5.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r6, $r7);

        return $r5;
    }
}
