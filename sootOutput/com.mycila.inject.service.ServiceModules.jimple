public class com.mycila.inject.service.ServiceModules extends java.lang.Object
{

    private void <init>()
    {
        com.mycila.inject.service.ServiceModules r0;

        r0 := @this: com.mycila.inject.service.ServiceModules;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.inject.Module loadFromClasspath()
    {
        com.google.inject.Module $r0;

        $r0 = staticinvoke <com.mycila.inject.service.ServiceModules: com.google.inject.Module loadFromClasspath(java.lang.Class)>(class "Lcom/google/inject/Module;");

        return $r0;
    }

    public static com.google.inject.Module loadFromClasspath(java.lang.Class)
    {
        com.google.inject.Module r7, $r9;
        java.util.Iterator $r4;
        java.util.ServiceLoader $r3;
        java.lang.Class r2, $r8;
        java.lang.Object $r6;
        java.util.LinkedList $r0, $r1;
        com.google.inject.util.Modules$OverriddenModuleBuilder $r5;
        boolean $z0, $z1, $z2;

        r2 := @parameter0: java.lang.Class;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        $r3 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>(r2);

        $r4 = virtualinvoke $r3.<java.util.ServiceLoader: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.google.inject.Module) $r6;

        $r8 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r8.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Lcom/mycila/inject/annotation/OverrideModule;");

        if $z2 == 0 goto label2;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r7);

        goto label3;

     label2:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r7);

     label3:
        goto label1;

     label4:
        $z1 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label5;

        $r9 = staticinvoke <com.google.inject.util.Modules: com.google.inject.Module combine(java.lang.Iterable)>($r0);

        goto label6;

     label5:
        $r5 = staticinvoke <com.google.inject.util.Modules: com.google.inject.util.Modules$OverriddenModuleBuilder override(java.lang.Iterable)>($r0);

        $r9 = interfaceinvoke $r5.<com.google.inject.util.Modules$OverriddenModuleBuilder: com.google.inject.Module 'with'(java.lang.Iterable)>($r1);

     label6:
        return $r9;
    }
}
