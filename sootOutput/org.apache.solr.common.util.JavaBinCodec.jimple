public class org.apache.solr.common.util.JavaBinCodec extends java.lang.Object
{
    public static final byte NULL;
    public static final byte BOOL_TRUE;
    public static final byte BOOL_FALSE;
    public static final byte BYTE;
    public static final byte SHORT;
    public static final byte DOUBLE;
    public static final byte INT;
    public static final byte LONG;
    public static final byte FLOAT;
    public static final byte DATE;
    public static final byte MAP;
    public static final byte SOLRDOC;
    public static final byte SOLRDOCLST;
    public static final byte BYTEARR;
    public static final byte ITERATOR;
    public static final byte END;
    public static final byte SOLRINPUTDOC;
    public static final byte TAG_AND_LEN;
    public static final byte STR;
    public static final byte SINT;
    public static final byte SLONG;
    public static final byte ARR;
    public static final byte ORDERED_MAP;
    public static final byte NAMED_LST;
    public static final byte EXTERN_STRING;
    private static byte VERSION;
    private org.apache.solr.common.util.JavaBinCodec$ObjectResolver resolver;
    protected org.apache.solr.common.util.FastOutputStream daos;
    byte version;
    protected static final java.lang.Object END_OBJ;
    protected byte tagByte;
    byte[] bytes;
    org.noggit.CharArr arr;
    private int stringsCount;
    private java.util.Map stringsMap;
    private java.util.List stringsList;

    public void <init>()
    {
        org.noggit.CharArr $r1;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.noggit.CharArr;

        specialinvoke $r1.<org.noggit.CharArr: void <init>()>();

        r0.<org.apache.solr.common.util.JavaBinCodec: org.noggit.CharArr arr> = $r1;

        r0.<org.apache.solr.common.util.JavaBinCodec: int stringsCount> = 0;

        return;
    }

    public void <init>(org.apache.solr.common.util.JavaBinCodec$ObjectResolver)
    {
        org.noggit.CharArr $r1;
        org.apache.solr.common.util.JavaBinCodec r0;
        org.apache.solr.common.util.JavaBinCodec$ObjectResolver r2;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r2 := @parameter0: org.apache.solr.common.util.JavaBinCodec$ObjectResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.noggit.CharArr;

        specialinvoke $r1.<org.noggit.CharArr: void <init>()>();

        r0.<org.apache.solr.common.util.JavaBinCodec: org.noggit.CharArr arr> = $r1;

        r0.<org.apache.solr.common.util.JavaBinCodec: int stringsCount> = 0;

        r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.JavaBinCodec$ObjectResolver resolver> = r2;

        return;
    }

    public void marshal(java.lang.Object, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        java.lang.Throwable $r6;
        byte $b0;
        int $i1;
        org.apache.solr.common.util.FastOutputStream $r2, $r3, $r5, $r7;
        java.lang.Object r4;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r4 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.io.OutputStream;

        $r2 = staticinvoke <org.apache.solr.common.util.FastOutputStream: org.apache.solr.common.util.FastOutputStream wrap(java.io.OutputStream)>(r1);

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void init(org.apache.solr.common.util.FastOutputStream)>($r2);

     label1:
        $r3 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        $b0 = <org.apache.solr.common.util.JavaBinCodec: byte VERSION>;

        $i1 = (int) $b0;

        virtualinvoke $r3.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>($i1);

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeVal(java.lang.Object)>(r4);

     label2:
        $r5 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r5.<org.apache.solr.common.util.FastOutputStream: void flushBuffer()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

     label4:
        $r7 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r7.<org.apache.solr.common.util.FastOutputStream: void flushBuffer()>();

        throw $r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void init(org.apache.solr.common.util.FastOutputStream)
    {
        org.apache.solr.common.util.FastOutputStream r1;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: org.apache.solr.common.util.FastOutputStream;

        r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos> = r1;

        return;
    }

    public java.lang.Object unmarshal(java.io.InputStream) throws java.io.IOException
    {
        byte $b0, $b1, $b2, $b3, $b4;
        int $i5, $i6, $i7, $i8;
        java.lang.String $r11;
        java.lang.RuntimeException $r13;
        java.lang.Object $r3;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r12;
        org.apache.solr.common.util.FastInputStream $r1;
        org.apache.solr.common.util.JavaBinCodec r2;
        java.io.InputStream r0;

        r2 := @this: org.apache.solr.common.util.JavaBinCodec;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <org.apache.solr.common.util.FastInputStream: org.apache.solr.common.util.FastInputStream wrap(java.io.InputStream)>(r0);

        $b0 = virtualinvoke $r1.<org.apache.solr.common.util.FastInputStream: byte readByte()>();

        r2.<org.apache.solr.common.util.JavaBinCodec: byte version> = $b0;

        $b2 = r2.<org.apache.solr.common.util.JavaBinCodec: byte version>;

        $b1 = <org.apache.solr.common.util.JavaBinCodec: byte VERSION>;

        $i5 = (int) $b2;

        $i6 = (int) $b1;

        if $i5 == $i6 goto label1;

        $r13 = new java.lang.RuntimeException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid version (expected ");

        $b3 = <org.apache.solr.common.util.JavaBinCodec: byte VERSION>;

        $i7 = (int) $b3;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but ");

        $b4 = r2.<org.apache.solr.common.util.JavaBinCodec: byte version>;

        $i8 = (int) $b4;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") or the data in not in \'javabin\' format");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r13;

     label1:
        $r3 = virtualinvoke r2.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>($r1);

        return $r3;
    }

    public org.apache.solr.common.util.SimpleOrderedMap readOrderedMap(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        org.apache.solr.common.util.SimpleOrderedMap $r2;
        int $i0, i1;
        java.lang.Object $r3, $r5;
        java.lang.String r4;
        org.apache.solr.common.util.FastInputStream r1;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $i0 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: int readSize(org.apache.solr.common.util.FastInputStream)>(r1);

        $r2 = new org.apache.solr.common.util.SimpleOrderedMap;

        specialinvoke $r2.<org.apache.solr.common.util.SimpleOrderedMap: void <init>()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>(r1);

        r4 = (java.lang.String) $r3;

        $r5 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>(r1);

        virtualinvoke $r2.<org.apache.solr.common.util.SimpleOrderedMap: void add(java.lang.String,java.lang.Object)>(r4, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public org.apache.solr.common.util.NamedList readNamedList(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        org.apache.solr.common.util.NamedList $r2;
        int $i0, i1;
        java.lang.Object $r3, $r5;
        java.lang.String r4;
        org.apache.solr.common.util.FastInputStream r1;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $i0 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: int readSize(org.apache.solr.common.util.FastInputStream)>(r1);

        $r2 = new org.apache.solr.common.util.NamedList;

        specialinvoke $r2.<org.apache.solr.common.util.NamedList: void <init>()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>(r1);

        r4 = (java.lang.String) $r3;

        $r5 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>(r1);

        virtualinvoke $r2.<org.apache.solr.common.util.NamedList: void add(java.lang.String,java.lang.Object)>(r4, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public void writeNamedList(org.apache.solr.common.util.NamedList) throws java.io.IOException
    {
        org.apache.solr.common.util.NamedList r1;
        byte $b1;
        int $i0, i2, $i3;
        java.lang.Object $r3;
        java.lang.String $r2;
        org.apache.solr.common.util.JavaBinCodec r0;
        boolean $z0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: org.apache.solr.common.util.NamedList;

        $z0 = r1 instanceof org.apache.solr.common.util.SimpleOrderedMap;

        if $z0 == 0 goto label1;

        $b1 = -96;

        goto label2;

     label1:
        $b1 = -64;

     label2:
        $i0 = virtualinvoke r1.<org.apache.solr.common.util.NamedList: int size()>();

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeTag(byte,int)>($b1, $i0);

        i2 = 0;

     label3:
        $i3 = virtualinvoke r1.<org.apache.solr.common.util.NamedList: int size()>();

        if i2 >= $i3 goto label4;

        $r2 = virtualinvoke r1.<org.apache.solr.common.util.NamedList: java.lang.String getName(int)>(i2);

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeExternString(java.lang.String)>($r2);

        $r3 = virtualinvoke r1.<org.apache.solr.common.util.NamedList: java.lang.Object getVal(int)>(i2);

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeVal(java.lang.Object)>($r3);

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    public void writeVal(java.lang.Object) throws java.io.IOException
    {
        org.apache.solr.common.util.JavaBinCodec$ObjectResolver $r2, $r11;
        java.lang.Object r1, $r12;
        java.lang.StringBuilder $r3, $r6, $r7, $r9;
        java.lang.Class $r4;
        java.lang.String $r5, $r8, $r10;
        org.apache.solr.common.util.JavaBinCodec r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: boolean writeKnownType(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.JavaBinCodec$ObjectResolver resolver>;

        if $r2 == null goto label3;

        $r11 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.JavaBinCodec$ObjectResolver resolver>;

        $r12 = interfaceinvoke $r11.<org.apache.solr.common.util.JavaBinCodec$ObjectResolver: java.lang.Object resolve(java.lang.Object,org.apache.solr.common.util.JavaBinCodec)>(r1, r0);

        if $r12 != null goto label2;

        return;

     label2:
        $z1 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: boolean writeKnownType(java.lang.Object)>($r12);

        if $z1 == 0 goto label3;

        return;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeVal(java.lang.Object)>($r10);

        return;
    }

    public java.lang.Object readVal(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        byte[] $r12;
        java.lang.Float $r17;
        org.apache.solr.common.util.SimpleOrderedMap $r4;
        org.apache.solr.common.SolrDocumentList $r13;
        java.util.Date $r30;
        java.lang.Integer $r7, $r19;
        byte $b0, $b1, $b5, $b10, $b11;
        java.lang.Long $r6, $r18;
        java.lang.Short $r21;
        java.util.Map $r15;
        java.lang.Byte $r22;
        java.util.List $r5, $r11;
        float $f0;
        java.lang.StringBuilder $r27, $r28, $r31;
        org.apache.solr.common.util.JavaBinCodec r0;
        org.apache.solr.common.SolrInputDocument $r9;
        java.lang.Double $r20;
        long $l3, $l6, $l7;
        short $s9;
        int $i2, $i4, $i8, $i12, $i13, $i14;
        java.lang.Boolean $r23, $r24;
        java.lang.String $r2, $r8, $r29;
        double $d0;
        java.lang.RuntimeException $r32;
        org.apache.solr.common.util.NamedList $r3;
        org.apache.solr.common.SolrDocument $r14;
        java.lang.Object $r10;
        org.apache.solr.common.util.FastInputStream r1;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $b0 = virtualinvoke r1.<org.apache.solr.common.util.FastInputStream: byte readByte()>();

        r0.<org.apache.solr.common.util.JavaBinCodec: byte tagByte> = $b0;

        $b1 = r0.<org.apache.solr.common.util.JavaBinCodec: byte tagByte>;

        $i12 = (int) $b1;

        $i2 = $i12 >>> 5;

        lookupswitch($i2)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 134217724: goto label04;
            case 134217725: goto label05;
            case 134217726: goto label06;
            case 134217727: goto label07;
            default: goto label08;
        };

     label01:
        $r8 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: java.lang.String readStr(org.apache.solr.common.util.FastInputStream)>(r1);

        return $r8;

     label02:
        $i4 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: int readSmallInt(org.apache.solr.common.util.FastInputStream)>(r1);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        return $r7;

     label03:
        $l3 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: long readSmallLong(org.apache.solr.common.util.FastInputStream)>(r1);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        return $r6;

     label04:
        $r5 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: java.util.List readArray(org.apache.solr.common.util.FastInputStream)>(r1);

        return $r5;

     label05:
        $r4 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.SimpleOrderedMap readOrderedMap(org.apache.solr.common.util.FastInputStream)>(r1);

        return $r4;

     label06:
        $r3 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.NamedList readNamedList(org.apache.solr.common.util.FastInputStream)>(r1);

        return $r3;

     label07:
        $r2 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: java.lang.String readExternString(org.apache.solr.common.util.FastInputStream)>(r1);

        return $r2;

     label08:
        $b5 = r0.<org.apache.solr.common.util.JavaBinCodec: byte tagByte>;

        $i13 = (int) $b5;

        tableswitch($i13)
        {
            case 0: goto label09;
            case 1: goto label12;
            case 2: goto label13;
            case 3: goto label17;
            case 4: goto label18;
            case 5: goto label15;
            case 6: goto label11;
            case 7: goto label16;
            case 8: goto label14;
            case 9: goto label10;
            case 10: goto label19;
            case 11: goto label20;
            case 12: goto label21;
            case 13: goto label22;
            case 14: goto label23;
            case 15: goto label24;
            case 16: goto label25;
            default: goto label26;
        };

     label09:
        return null;

     label10:
        $r30 = new java.util.Date;

        $l6 = virtualinvoke r1.<org.apache.solr.common.util.FastInputStream: long readLong()>();

        specialinvoke $r30.<java.util.Date: void <init>(long)>($l6);

        return $r30;

     label11:
        $i8 = virtualinvoke r1.<org.apache.solr.common.util.FastInputStream: int readInt()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        return $r19;

     label12:
        $r24 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r24;

     label13:
        $r23 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r23;

     label14:
        $f0 = virtualinvoke r1.<org.apache.solr.common.util.FastInputStream: float readFloat()>();

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r17;

     label15:
        $d0 = virtualinvoke r1.<org.apache.solr.common.util.FastInputStream: double readDouble()>();

        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r20;

     label16:
        $l7 = virtualinvoke r1.<org.apache.solr.common.util.FastInputStream: long readLong()>();

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        return $r18;

     label17:
        $b10 = virtualinvoke r1.<org.apache.solr.common.util.FastInputStream: byte readByte()>();

        $r22 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b10);

        return $r22;

     label18:
        $s9 = virtualinvoke r1.<org.apache.solr.common.util.FastInputStream: short readShort()>();

        $r21 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s9);

        return $r21;

     label19:
        $r15 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: java.util.Map readMap(org.apache.solr.common.util.FastInputStream)>(r1);

        return $r15;

     label20:
        $r14 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.SolrDocument readSolrDocument(org.apache.solr.common.util.FastInputStream)>(r1);

        return $r14;

     label21:
        $r13 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.SolrDocumentList readSolrDocumentList(org.apache.solr.common.util.FastInputStream)>(r1);

        return $r13;

     label22:
        $r12 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: byte[] readByteArray(org.apache.solr.common.util.FastInputStream)>(r1);

        return $r12;

     label23:
        $r11 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: java.util.List readIterator(org.apache.solr.common.util.FastInputStream)>(r1);

        return $r11;

     label24:
        $r10 = <org.apache.solr.common.util.JavaBinCodec: java.lang.Object END_OBJ>;

        return $r10;

     label25:
        $r9 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.SolrInputDocument readSolrInputDocument(org.apache.solr.common.util.FastInputStream)>(r1);

        return $r9;

     label26:
        $r32 = new java.lang.RuntimeException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type ");

        $b11 = r0.<org.apache.solr.common.util.JavaBinCodec: byte tagByte>;

        $i14 = (int) $b11;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.String)>($r29);

        throw $r32;
    }

    public boolean writeKnownType(java.lang.Object) throws java.io.IOException
    {
        java.lang.Object[] $r12, $r13;
        org.apache.solr.common.SolrDocumentList $r15;
        java.lang.Iterable $r2;
        org.apache.solr.common.util.JavaBinCodec$ObjectResolver $r7, $r8;
        java.util.Map $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.Iterator $r3, $r4;
        java.util.Collection $r14;
        org.apache.solr.common.util.NamedList $r16;
        org.apache.solr.common.SolrDocument $r10, $r11;
        java.lang.Object r1, $r9;
        org.apache.solr.common.util.JavaBinCodec r0;
        org.apache.solr.common.SolrInputDocument $r6;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: boolean writePrimitive(java.lang.Object)>(r1);

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $z1 = r1 instanceof org.apache.solr.common.util.NamedList;

        if $z1 == 0 goto label02;

        $r16 = (org.apache.solr.common.util.NamedList) r1;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeNamedList(org.apache.solr.common.util.NamedList)>($r16);

        return 1;

     label02:
        $z2 = r1 instanceof org.apache.solr.common.SolrDocumentList;

        if $z2 == 0 goto label03;

        $r15 = (org.apache.solr.common.SolrDocumentList) r1;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeSolrDocumentList(org.apache.solr.common.SolrDocumentList)>($r15);

        return 1;

     label03:
        $z3 = r1 instanceof java.util.Collection;

        if $z3 == 0 goto label04;

        $r14 = (java.util.Collection) r1;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeArray(java.util.Collection)>($r14);

        return 1;

     label04:
        $z4 = r1 instanceof java.lang.Object[];

        if $z4 == 0 goto label05;

        $r12 = (java.lang.Object[]) r1;

        $r13 = (java.lang.Object[]) $r12;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeArray(java.lang.Object[])>($r13);

        return 1;

     label05:
        $z5 = r1 instanceof org.apache.solr.common.SolrDocument;

        if $z5 == 0 goto label09;

        $r7 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.JavaBinCodec$ObjectResolver resolver>;

        if $r7 != null goto label06;

        $r11 = (org.apache.solr.common.SolrDocument) r1;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeSolrDocument(org.apache.solr.common.SolrDocument)>($r11);

        goto label08;

     label06:
        $r8 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.JavaBinCodec$ObjectResolver resolver>;

        $r9 = interfaceinvoke $r8.<org.apache.solr.common.util.JavaBinCodec$ObjectResolver: java.lang.Object resolve(java.lang.Object,org.apache.solr.common.util.JavaBinCodec)>(r1, r0);

        if $r9 == null goto label08;

        $z10 = $r9 instanceof org.apache.solr.common.SolrDocument;

        if $z10 == 0 goto label07;

        $r10 = (org.apache.solr.common.SolrDocument) $r9;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeSolrDocument(org.apache.solr.common.SolrDocument)>($r10);

        goto label08;

     label07:
        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeVal(java.lang.Object)>($r9);

     label08:
        return 1;

     label09:
        $z6 = r1 instanceof org.apache.solr.common.SolrInputDocument;

        if $z6 == 0 goto label10;

        $r6 = (org.apache.solr.common.SolrInputDocument) r1;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeSolrInputDocument(org.apache.solr.common.SolrInputDocument)>($r6);

        return 1;

     label10:
        $z7 = r1 instanceof java.util.Map;

        if $z7 == 0 goto label11;

        $r5 = (java.util.Map) r1;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeMap(java.util.Map)>($r5);

        return 1;

     label11:
        $z8 = r1 instanceof java.util.Iterator;

        if $z8 == 0 goto label12;

        $r4 = (java.util.Iterator) r1;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeIterator(java.util.Iterator)>($r4);

        return 1;

     label12:
        $z9 = r1 instanceof java.lang.Iterable;

        if $z9 == 0 goto label13;

        $r2 = (java.lang.Iterable) r1;

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeIterator(java.util.Iterator)>($r3);

        return 1;

     label13:
        return 0;
    }

    public void writeTag(byte) throws java.io.IOException
    {
        byte b0;
        int $i1;
        org.apache.solr.common.util.FastOutputStream $r1;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        b0 := @parameter0: byte;

        $r1 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        $i1 = (int) b0;

        virtualinvoke $r1.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>($i1);

        return;
    }

    public void writeTag(byte, int) throws java.io.IOException
    {
        short $s1, $s6;
        byte b0, $b3;
        int i2, $i4, $i5, $i7, $i8, $i9;
        org.apache.solr.common.util.FastOutputStream $r1, $r2, $r3, $r4, $r5;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        b0 := @parameter0: byte;

        i2 := @parameter1: int;

        $s6 = (short) b0;

        $s1 = $s6 & 224;

        if $s1 == 0 goto label2;

        if i2 >= 31 goto label1;

        $r5 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        $i7 = (int) b0;

        $i5 = $i7 | i2;

        virtualinvoke $r5.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>($i5);

        goto label3;

     label1:
        $r3 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        $b3 = b0 | 31;

        $i8 = (int) $b3;

        virtualinvoke $r3.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>($i8);

        $i4 = i2 - 31;

        $r4 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        staticinvoke <org.apache.solr.common.util.JavaBinCodec: void writeVInt(int,org.apache.solr.common.util.FastOutputStream)>($i4, $r4);

        goto label3;

     label2:
        $r1 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        $i9 = (int) b0;

        virtualinvoke $r1.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>($i9);

        $r2 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        staticinvoke <org.apache.solr.common.util.JavaBinCodec: void writeVInt(int,org.apache.solr.common.util.FastOutputStream)>(i2, $r2);

     label3:
        return;
    }

    public void writeByteArray(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        int i0, i1;
        org.apache.solr.common.util.FastOutputStream $r2;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeTag(byte,int)>(13, i0);

        $r2 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r2.<org.apache.solr.common.util.FastOutputStream: void write(byte[],int,int)>(r1, i1, i0);

        return;
    }

    public byte[] readByteArray(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        byte[] r1;
        int $i0;
        org.apache.solr.common.util.FastInputStream r0;
        org.apache.solr.common.util.JavaBinCodec r2;

        r2 := @this: org.apache.solr.common.util.JavaBinCodec;

        r0 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $i0 = staticinvoke <org.apache.solr.common.util.JavaBinCodec: int readVInt(org.apache.solr.common.util.FastInputStream)>(r0);

        r1 = newarray (byte)[$i0];

        virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: void readFully(byte[])>(r1);

        return r1;
    }

    public void writeSolrDocument(org.apache.solr.common.SolrDocument) throws java.io.IOException
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        org.apache.solr.common.SolrDocument r1;
        int $i0;
        java.lang.Object $r3, $r5, $r7;
        java.lang.String r6;
        org.apache.solr.common.util.JavaBinCodec r0;
        boolean $z0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: org.apache.solr.common.SolrDocument;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeTag(byte)>(11);

        $i0 = virtualinvoke r1.<org.apache.solr.common.SolrDocument: int size()>();

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeTag(byte,int)>(-96, $i0);

        $r2 = virtualinvoke r1.<org.apache.solr.common.SolrDocument: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r5;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeExternString(java.lang.String)>(r6);

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeVal(java.lang.Object)>($r7);

        goto label1;

     label2:
        return;
    }

    public org.apache.solr.common.SolrDocument readSolrDocument(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        org.apache.solr.common.util.NamedList r3;
        org.apache.solr.common.SolrDocument $r4;
        int $i0, i1;
        java.lang.Object $r2, $r6;
        java.lang.String $r5;
        org.apache.solr.common.util.FastInputStream r1;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $r2 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>(r1);

        r3 = (org.apache.solr.common.util.NamedList) $r2;

        $r4 = new org.apache.solr.common.SolrDocument;

        specialinvoke $r4.<org.apache.solr.common.SolrDocument: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r3.<org.apache.solr.common.util.NamedList: int size()>();

        if i1 >= $i0 goto label2;

        $r5 = virtualinvoke r3.<org.apache.solr.common.util.NamedList: java.lang.String getName(int)>(i1);

        $r6 = virtualinvoke r3.<org.apache.solr.common.util.NamedList: java.lang.Object getVal(int)>(i1);

        virtualinvoke $r4.<org.apache.solr.common.SolrDocument: void setField(java.lang.String,java.lang.Object)>($r5, $r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r4;
    }

    public org.apache.solr.common.SolrDocumentList readSolrDocumentList(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        java.lang.Float $r10;
        org.apache.solr.common.SolrDocumentList $r0;
        long $l0, $l1;
        java.util.List r4, r12;
        java.lang.Long $r6, $r8;
        java.lang.Object $r3, $r5, $r7, $r9, $r11;
        org.apache.solr.common.util.FastInputStream r2;
        org.apache.solr.common.util.JavaBinCodec r1;

        r1 := @this: org.apache.solr.common.util.JavaBinCodec;

        r2 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $r0 = new org.apache.solr.common.SolrDocumentList;

        specialinvoke $r0.<org.apache.solr.common.SolrDocumentList: void <init>()>();

        $r3 = virtualinvoke r1.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>(r2);

        r4 = (java.util.List) $r3;

        $r5 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (java.lang.Long) $r5;

        $l0 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        virtualinvoke $r0.<org.apache.solr.common.SolrDocumentList: void setNumFound(long)>($l0);

        $r7 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(1);

        $r8 = (java.lang.Long) $r7;

        $l1 = virtualinvoke $r8.<java.lang.Long: long longValue()>();

        virtualinvoke $r0.<org.apache.solr.common.SolrDocumentList: void setStart(long)>($l1);

        $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(2);

        $r10 = (java.lang.Float) $r9;

        virtualinvoke $r0.<org.apache.solr.common.SolrDocumentList: void setMaxScore(java.lang.Float)>($r10);

        $r11 = virtualinvoke r1.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>(r2);

        r12 = (java.util.List) $r11;

        virtualinvoke $r0.<org.apache.solr.common.SolrDocumentList: boolean addAll(java.util.Collection)>(r12);

        return $r0;
    }

    public void writeSolrDocumentList(org.apache.solr.common.SolrDocumentList) throws java.io.IOException
    {
        java.lang.Float $r5;
        org.apache.solr.common.SolrDocumentList r2;
        long $l0, $l1;
        java.util.ArrayList $r1;
        java.lang.Long $r3, $r4;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r2 := @parameter0: org.apache.solr.common.SolrDocumentList;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeTag(byte)>(12);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(3);

        $l0 = virtualinvoke r2.<org.apache.solr.common.SolrDocumentList: long getNumFound()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        $l1 = virtualinvoke r2.<org.apache.solr.common.SolrDocumentList: long getStart()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = virtualinvoke r2.<org.apache.solr.common.SolrDocumentList: java.lang.Float getMaxScore()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r5);

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeArray(java.util.List)>($r1);

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeArray(java.util.List)>(r2);

        return;
    }

    public org.apache.solr.common.SolrInputDocument readSolrInputDocument(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        java.lang.Float $r3, $r7;
        int $i0, i1;
        float $f0, f1;
        java.lang.Object $r2, $r5, $r6, $r8;
        java.lang.String r9;
        org.apache.solr.common.util.FastInputStream r0;
        org.apache.solr.common.util.JavaBinCodec r1;
        org.apache.solr.common.SolrInputDocument $r4;
        boolean $z0;

        r1 := @this: org.apache.solr.common.util.JavaBinCodec;

        r0 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $i0 = staticinvoke <org.apache.solr.common.util.JavaBinCodec: int readVInt(org.apache.solr.common.util.FastInputStream)>(r0);

        $r2 = virtualinvoke r1.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>(r0);

        $r3 = (java.lang.Float) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Float: float floatValue()>();

        $r4 = new org.apache.solr.common.SolrInputDocument;

        specialinvoke $r4.<org.apache.solr.common.SolrInputDocument: void <init>()>();

        virtualinvoke $r4.<org.apache.solr.common.SolrInputDocument: void setDocumentBoost(float)>($f0);

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        f1 = 1.0F;

        $r5 = virtualinvoke r1.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>(r0);

        $z0 = $r5 instanceof java.lang.Float;

        if $z0 == 0 goto label2;

        $r7 = (java.lang.Float) $r5;

        f1 = virtualinvoke $r7.<java.lang.Float: float floatValue()>();

        $r8 = virtualinvoke r1.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>(r0);

        r9 = (java.lang.String) $r8;

        goto label3;

     label2:
        r9 = (java.lang.String) $r5;

     label3:
        $r6 = virtualinvoke r1.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>(r0);

        virtualinvoke $r4.<org.apache.solr.common.SolrInputDocument: void setField(java.lang.String,java.lang.Object,float)>(r9, $r6, f1);

        i1 = i1 + 1;

        goto label1;

     label4:
        return $r4;
    }

    public void writeSolrInputDocument(org.apache.solr.common.SolrInputDocument) throws java.io.IOException
    {
        java.util.Iterator $r3;
        java.util.Collection $r2;
        org.apache.solr.common.SolrInputField r5;
        byte $b1;
        int $i0;
        float $f0, $f1, $f2;
        java.lang.Object $r4, $r7;
        java.lang.String $r6;
        org.apache.solr.common.util.JavaBinCodec r0;
        org.apache.solr.common.SolrInputDocument r1;
        boolean $z0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: org.apache.solr.common.SolrInputDocument;

        $i0 = virtualinvoke r1.<org.apache.solr.common.SolrInputDocument: int size()>();

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeTag(byte,int)>(16, $i0);

        $f0 = virtualinvoke r1.<org.apache.solr.common.SolrInputDocument: float getDocumentBoost()>();

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeFloat(float)>($f0);

        $r2 = virtualinvoke r1.<org.apache.solr.common.SolrInputDocument: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.solr.common.SolrInputField) $r4;

        $f1 = virtualinvoke r5.<org.apache.solr.common.SolrInputField: float getBoost()>();

        $b1 = $f1 cmpl 1.0F;

        if $b1 == 0 goto label2;

        $f2 = virtualinvoke r5.<org.apache.solr.common.SolrInputField: float getBoost()>();

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeFloat(float)>($f2);

     label2:
        $r6 = virtualinvoke r5.<org.apache.solr.common.SolrInputField: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeExternString(java.lang.String)>($r6);

        $r7 = virtualinvoke r5.<org.apache.solr.common.SolrInputField: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeVal(java.lang.Object)>($r7);

        goto label1;

     label3:
        return;
    }

    public java.util.Map readMap(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        java.util.LinkedHashMap $r1;
        int $i0, i1;
        java.lang.Object $r3, $r4;
        org.apache.solr.common.util.FastInputStream r0;
        org.apache.solr.common.util.JavaBinCodec r2;

        r2 := @this: org.apache.solr.common.util.JavaBinCodec;

        r0 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $i0 = staticinvoke <org.apache.solr.common.util.JavaBinCodec: int readVInt(org.apache.solr.common.util.FastInputStream)>(r0);

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r2.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>(r0);

        $r4 = virtualinvoke r2.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>(r0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public void writeIterator(java.util.Iterator) throws java.io.IOException
    {
        java.util.Iterator r1;
        java.lang.Object $r2, $r3;
        org.apache.solr.common.util.JavaBinCodec r0;
        boolean $z0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: java.util.Iterator;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeTag(byte)>(14);

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeVal(java.lang.Object)>($r3);

        goto label1;

     label2:
        $r2 = <org.apache.solr.common.util.JavaBinCodec: java.lang.Object END_OBJ>;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeVal(java.lang.Object)>($r2);

        return;
    }

    public java.util.List readIterator(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        java.lang.Object $r3, $r4;
        org.apache.solr.common.util.FastInputStream r2;
        org.apache.solr.common.util.JavaBinCodec r1;
        java.util.ArrayList $r0;

        r1 := @this: org.apache.solr.common.util.JavaBinCodec;

        r2 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

     label1:
        $r3 = virtualinvoke r1.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>(r2);

        $r4 = <org.apache.solr.common.util.JavaBinCodec: java.lang.Object END_OBJ>;

        if $r3 != $r4 goto label2;

        goto label3;

     label2:
        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label1;

     label3:
        return $r0;
    }

    public void writeArray(java.util.List) throws java.io.IOException
    {
        java.util.List r1;
        int $i0, $i1, i2;
        java.lang.Object $r2;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeTag(byte,int)>(-128, $i0);

        i2 = 0;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i1 goto label2;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeVal(java.lang.Object)>($r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void writeArray(java.util.Collection) throws java.io.IOException
    {
        java.util.Iterator $r2;
        java.util.Collection r1;
        int $i0;
        java.lang.Object $r3;
        org.apache.solr.common.util.JavaBinCodec r0;
        boolean $z0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: java.util.Collection;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeTag(byte,int)>(-128, $i0);

        $r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeVal(java.lang.Object)>($r3);

        goto label1;

     label2:
        return;
    }

    public void writeArray(java.lang.Object[]) throws java.io.IOException
    {
        java.lang.Object[] r1;
        int $i0, $i1, i2;
        java.lang.Object r2;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: java.lang.Object[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeTag(byte,int)>(-128, $i0);

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        r2 = r1[i2];

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeVal(java.lang.Object)>(r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public java.util.List readArray(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        int $i0, i1;
        java.lang.Object $r3;
        org.apache.solr.common.util.FastInputStream r1;
        org.apache.solr.common.util.JavaBinCodec r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $i0 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: int readSize(org.apache.solr.common.util.FastInputStream)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>(r1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public void writeStr(java.lang.String) throws java.io.IOException
    {
        byte[] $r2, $r3, $r4, $r5, $r7;
        int $i0, i1, $i2, $i3;
        org.apache.solr.common.util.FastOutputStream $r6;
        java.lang.String r0;
        org.apache.solr.common.util.JavaBinCodec r1;

        r1 := @this: org.apache.solr.common.util.JavaBinCodec;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        virtualinvoke r1.<org.apache.solr.common.util.JavaBinCodec: void writeTag(byte)>(0);

        return;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i1 = $i0 * 4;

        $r2 = r1.<org.apache.solr.common.util.JavaBinCodec: byte[] bytes>;

        if $r2 == null goto label2;

        $r4 = r1.<org.apache.solr.common.util.JavaBinCodec: byte[] bytes>;

        $i2 = lengthof $r4;

        if $i2 >= i1 goto label3;

     label2:
        $r3 = newarray (byte)[i1];

        r1.<org.apache.solr.common.util.JavaBinCodec: byte[] bytes> = $r3;

     label3:
        $r5 = r1.<org.apache.solr.common.util.JavaBinCodec: byte[] bytes>;

        $i3 = staticinvoke <org.apache.solr.common.util.ByteUtils: int UTF16toUTF8(java.lang.CharSequence,int,int,byte[],int)>(r0, 0, $i0, $r5, 0);

        virtualinvoke r1.<org.apache.solr.common.util.JavaBinCodec: void writeTag(byte,int)>(32, $i3);

        $r6 = r1.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        $r7 = r1.<org.apache.solr.common.util.JavaBinCodec: byte[] bytes>;

        virtualinvoke $r6.<org.apache.solr.common.util.FastOutputStream: void write(byte[],int,int)>($r7, 0, $i3);

        return;
    }

    public java.lang.String readStr(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        byte[] $r2, $r3, $r4, $r5, $r7;
        org.noggit.CharArr $r6, $r8, $r9;
        int $i0, $i1;
        java.lang.String $r10;
        org.apache.solr.common.util.FastInputStream r1;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $i0 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: int readSize(org.apache.solr.common.util.FastInputStream)>(r1);

        $r2 = r0.<org.apache.solr.common.util.JavaBinCodec: byte[] bytes>;

        if $r2 == null goto label1;

        $r4 = r0.<org.apache.solr.common.util.JavaBinCodec: byte[] bytes>;

        $i1 = lengthof $r4;

        if $i1 >= $i0 goto label2;

     label1:
        $r3 = newarray (byte)[$i0];

        r0.<org.apache.solr.common.util.JavaBinCodec: byte[] bytes> = $r3;

     label2:
        $r5 = r0.<org.apache.solr.common.util.JavaBinCodec: byte[] bytes>;

        virtualinvoke r1.<org.apache.solr.common.util.FastInputStream: void readFully(byte[],int,int)>($r5, 0, $i0);

        $r6 = r0.<org.apache.solr.common.util.JavaBinCodec: org.noggit.CharArr arr>;

        virtualinvoke $r6.<org.noggit.CharArr: void reset()>();

        $r7 = r0.<org.apache.solr.common.util.JavaBinCodec: byte[] bytes>;

        $r8 = r0.<org.apache.solr.common.util.JavaBinCodec: org.noggit.CharArr arr>;

        staticinvoke <org.apache.solr.common.util.ByteUtils: void UTF8toUTF16(byte[],int,int,org.noggit.CharArr)>($r7, 0, $i0, $r8);

        $r9 = r0.<org.apache.solr.common.util.JavaBinCodec: org.noggit.CharArr arr>;

        $r10 = virtualinvoke $r9.<org.noggit.CharArr: java.lang.String toString()>();

        return $r10;
    }

    public void writeInt(int) throws java.io.IOException
    {
        int i0, $i1, $i2, i3, i4;
        org.apache.solr.common.util.FastOutputStream $r1, $r2, $r3, $r4, $r5;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        i0 := @parameter0: int;

        if i0 <= 0 goto label3;

        $i1 = i0 & 15;

        i3 = 64 | $i1;

        if i0 < 15 goto label1;

        i4 = i3 | 16;

        $r4 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r4.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>(i4);

        $i2 = i0 >>> 4;

        $r5 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        staticinvoke <org.apache.solr.common.util.JavaBinCodec: void writeVInt(int,org.apache.solr.common.util.FastOutputStream)>($i2, $r5);

        goto label2;

     label1:
        $r3 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r3.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>(i3);

     label2:
        goto label4;

     label3:
        $r1 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r1.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>(6);

        $r2 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r2.<org.apache.solr.common.util.FastOutputStream: void writeInt(int)>(i0);

     label4:
        return;
    }

    public int readSmallInt(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        byte $b0, $b1, $b2;
        int $i3, $i4, i5, $i6;
        org.apache.solr.common.util.FastInputStream r1;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $b0 = r0.<org.apache.solr.common.util.JavaBinCodec: byte tagByte>;

        $i6 = (int) $b0;

        i5 = $i6 & 15;

        $b1 = r0.<org.apache.solr.common.util.JavaBinCodec: byte tagByte>;

        $b2 = $b1 & 16;

        if $b2 == 0 goto label1;

        $i3 = staticinvoke <org.apache.solr.common.util.JavaBinCodec: int readVInt(org.apache.solr.common.util.FastInputStream)>(r1);

        $i4 = $i3 << 4;

        i5 = $i4 | i5;

     label1:
        return i5;
    }

    public void writeLong(long) throws java.io.IOException
    {
        long l0, $l1, $l6;
        byte $b2, $b5;
        int $i3, $i4, i7, i8, $i9;
        org.apache.solr.common.util.FastOutputStream $r1, $r2, $r3, $r4, $r5;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        l0 := @parameter0: long;

        $l1 = l0 & -72057594037927936L;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label3;

        $i3 = (int) l0;

        $i4 = $i3 & 15;

        i7 = 96 | $i4;

        $b5 = l0 cmp 15L;

        $i9 = (int) $b5;

        if $i9 < 0 goto label1;

        i8 = i7 | 16;

        $r4 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r4.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>(i8);

        $l6 = l0 >>> 4;

        $r5 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        staticinvoke <org.apache.solr.common.util.JavaBinCodec: void writeVLong(long,org.apache.solr.common.util.FastOutputStream)>($l6, $r5);

        goto label2;

     label1:
        $r3 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r3.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>(i7);

     label2:
        goto label4;

     label3:
        $r1 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r1.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>(7);

        $r2 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r2.<org.apache.solr.common.util.FastOutputStream: void writeLong(long)>(l0);

     label4:
        return;
    }

    public long readSmallLong(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        long $l4, $l5, l6;
        byte $b0, $b1, $b2, $b3;
        org.apache.solr.common.util.FastInputStream r1;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $b0 = r0.<org.apache.solr.common.util.JavaBinCodec: byte tagByte>;

        $b1 = $b0 & 15;

        l6 = (long) $b1;

        $b2 = r0.<org.apache.solr.common.util.JavaBinCodec: byte tagByte>;

        $b3 = $b2 & 16;

        if $b3 == 0 goto label1;

        $l4 = staticinvoke <org.apache.solr.common.util.JavaBinCodec: long readVLong(org.apache.solr.common.util.FastInputStream)>(r1);

        $l5 = $l4 << 4;

        l6 = $l5 | l6;

     label1:
        return l6;
    }

    public void writeFloat(float) throws java.io.IOException
    {
        org.apache.solr.common.util.FastOutputStream $r1, $r2;
        float f0;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        f0 := @parameter0: float;

        $r1 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r1.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>(8);

        $r2 = r0.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r2.<org.apache.solr.common.util.FastOutputStream: void writeFloat(float)>(f0);

        return;
    }

    public boolean writePrimitive(java.lang.Object) throws java.io.IOException
    {
        byte[] $r4, $r5, $r6, $r7, $r8;
        java.lang.Float $r24;
        java.util.Date $r13;
        java.lang.Integer $r26;
        java.nio.ByteBuffer r3;
        java.lang.Long $r25;
        java.lang.Short $r16;
        java.lang.Byte $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        float $f0;
        org.apache.solr.common.util.JavaBinCodec r2;
        java.lang.Double $r22;
        long $l5, $l8;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i9;
        java.lang.Boolean $r9;
        java.lang.String $r27;
        double $d0;
        org.apache.solr.common.util.FastOutputStream $r10, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r23, $r28;
        java.lang.Object r0, $r1;

        r2 := @this: org.apache.solr.common.util.JavaBinCodec;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label01;

        $r28 = r2.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r28.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>(0);

        return 1;

     label01:
        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label02;

        $r27 = (java.lang.String) r0;

        virtualinvoke r2.<org.apache.solr.common.util.JavaBinCodec: void writeStr(java.lang.String)>($r27);

        return 1;

     label02:
        $z1 = r0 instanceof java.lang.Number;

        if $z1 == 0 goto label09;

        $z7 = r0 instanceof java.lang.Integer;

        if $z7 == 0 goto label03;

        $r26 = (java.lang.Integer) r0;

        $i9 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();

        virtualinvoke r2.<org.apache.solr.common.util.JavaBinCodec: void writeInt(int)>($i9);

        return 1;

     label03:
        $z8 = r0 instanceof java.lang.Long;

        if $z8 == 0 goto label04;

        $r25 = (java.lang.Long) r0;

        $l8 = virtualinvoke $r25.<java.lang.Long: long longValue()>();

        virtualinvoke r2.<org.apache.solr.common.util.JavaBinCodec: void writeLong(long)>($l8);

        return 1;

     label04:
        $z9 = r0 instanceof java.lang.Float;

        if $z9 == 0 goto label05;

        $r24 = (java.lang.Float) r0;

        $f0 = virtualinvoke $r24.<java.lang.Float: float floatValue()>();

        virtualinvoke r2.<org.apache.solr.common.util.JavaBinCodec: void writeFloat(float)>($f0);

        return 1;

     label05:
        $z10 = r0 instanceof java.lang.Double;

        if $z10 == 0 goto label06;

        $r21 = r2.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r21.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>(5);

        $r23 = r2.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        $r22 = (java.lang.Double) r0;

        $d0 = virtualinvoke $r22.<java.lang.Double: double doubleValue()>();

        virtualinvoke $r23.<org.apache.solr.common.util.FastOutputStream: void writeDouble(double)>($d0);

        return 1;

     label06:
        $z11 = r0 instanceof java.lang.Byte;

        if $z11 == 0 goto label07;

        $r18 = r2.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r18.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>(3);

        $r20 = r2.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        $r19 = (java.lang.Byte) r0;

        $i7 = virtualinvoke $r19.<java.lang.Byte: int intValue()>();

        virtualinvoke $r20.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>($i7);

        return 1;

     label07:
        $z12 = r0 instanceof java.lang.Short;

        if $z12 == 0 goto label08;

        $r15 = r2.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r15.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>(4);

        $r17 = r2.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        $r16 = (java.lang.Short) r0;

        $i6 = virtualinvoke $r16.<java.lang.Short: int intValue()>();

        virtualinvoke $r17.<org.apache.solr.common.util.FastOutputStream: void writeShort(int)>($i6);

        return 1;

     label08:
        return 0;

     label09:
        $z2 = r0 instanceof java.util.Date;

        if $z2 == 0 goto label10;

        $r12 = r2.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r12.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>(9);

        $r14 = r2.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        $r13 = (java.util.Date) r0;

        $l5 = virtualinvoke $r13.<java.util.Date: long getTime()>();

        virtualinvoke $r14.<org.apache.solr.common.util.FastOutputStream: void writeLong(long)>($l5);

        return 1;

     label10:
        $z3 = r0 instanceof java.lang.Boolean;

        if $z3 == 0 goto label13;

        $r9 = (java.lang.Boolean) r0;

        $z6 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        if $z6 == 0 goto label11;

        $r11 = r2.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r11.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>(1);

        goto label12;

     label11:
        $r10 = r2.<org.apache.solr.common.util.JavaBinCodec: org.apache.solr.common.util.FastOutputStream daos>;

        virtualinvoke $r10.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>(2);

     label12:
        return 1;

     label13:
        $z4 = r0 instanceof byte[];

        if $z4 == 0 goto label14;

        $r5 = (byte[]) r0;

        $r8 = (byte[]) $r5;

        $r6 = (byte[]) r0;

        $r7 = (byte[]) $r6;

        $i4 = lengthof $r7;

        virtualinvoke r2.<org.apache.solr.common.util.JavaBinCodec: void writeByteArray(byte[],int,int)>($r8, 0, $i4);

        return 1;

     label14:
        $z5 = r0 instanceof java.nio.ByteBuffer;

        if $z5 == 0 goto label15;

        r3 = (java.nio.ByteBuffer) r0;

        $r4 = virtualinvoke r3.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = virtualinvoke r3.<java.nio.ByteBuffer: int position()>();

        $i1 = virtualinvoke r3.<java.nio.ByteBuffer: int limit()>();

        $i2 = virtualinvoke r3.<java.nio.ByteBuffer: int position()>();

        $i3 = $i1 - $i2;

        virtualinvoke r2.<org.apache.solr.common.util.JavaBinCodec: void writeByteArray(byte[],int,int)>($r4, $i0, $i3);

        return 1;

     label15:
        $r1 = <org.apache.solr.common.util.JavaBinCodec: java.lang.Object END_OBJ>;

        if r0 != $r1 goto label16;

        virtualinvoke r2.<org.apache.solr.common.util.JavaBinCodec: void writeTag(byte)>(15);

        return 1;

     label16:
        return 0;
    }

    public void writeMap(java.util.Map) throws java.io.IOException
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.Map r1;
        int $i0;
        java.lang.Object $r4, $r6, $r7;
        java.lang.String $r8;
        org.apache.solr.common.util.JavaBinCodec r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: java.util.Map;

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeTag(byte,int)>(10, $i0);

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = $r6 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r8 = (java.lang.String) $r6;

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeExternString(java.lang.String)>($r8);

        goto label3;

     label2:
        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeVal(java.lang.Object)>($r6);

     label3:
        $r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: void writeVal(java.lang.Object)>($r7);

        goto label1;

     label4:
        return;
    }

    public int readSize(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        byte $b0;
        int $i1, i2, $i3;
        org.apache.solr.common.util.FastInputStream r1;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $b0 = r0.<org.apache.solr.common.util.JavaBinCodec: byte tagByte>;

        $i3 = (int) $b0;

        i2 = $i3 & 31;

        if i2 != 31 goto label1;

        $i1 = staticinvoke <org.apache.solr.common.util.JavaBinCodec: int readVInt(org.apache.solr.common.util.FastInputStream)>(r1);

        i2 = i2 + $i1;

     label1:
        return i2;
    }

    public static void writeVInt(int, org.apache.solr.common.util.FastOutputStream) throws java.io.IOException
    {
        byte $b1, $b4;
        int $i0, $i2, $i3, i5, $i7, $i8, $i9;
        org.apache.solr.common.util.FastOutputStream r0;

        i5 := @parameter0: int;

        r0 := @parameter1: org.apache.solr.common.util.FastOutputStream;

     label1:
        $i7 = (int) -128;

        $i0 = i5 & $i7;

        if $i0 == 0 goto label2;

        $i2 = i5 & 127;

        $i3 = $i2 | 128;

        $b4 = (byte) $i3;

        $i8 = (int) $b4;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>($i8);

        i5 = i5 >>> 7;

        goto label1;

     label2:
        $b1 = (byte) i5;

        $i9 = (int) $b1;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>($i9);

        return;
    }

    public static int readVInt(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        short $s1, $s9;
        byte $b0, $b2, $b3, b5;
        int $i4, i6, i7, $i8, $i10;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $b0 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: byte readByte()>();

        b5 = $b0;

        $i8 = (int) $b0;

        i6 = $i8 & 127;

        i7 = 7;

     label1:
        $s9 = (short) b5;

        $s1 = $s9 & 128;

        if $s1 == 0 goto label2;

        $b2 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: byte readByte()>();

        b5 = $b2;

        $b3 = $b2 & 127;

        $i10 = (int) $b3;

        $i4 = $i10 << i7;

        i6 = i6 | $i4;

        i7 = i7 + 7;

        goto label1;

     label2:
        return i6;
    }

    public static void writeVLong(long, org.apache.solr.common.util.FastOutputStream) throws java.io.IOException
    {
        long $l0, $l4, $l5, l8;
        byte $b1, $b3, $b7;
        int $i2, $i6, $i9, $i10;
        org.apache.solr.common.util.FastOutputStream r0;

        l8 := @parameter0: long;

        r0 := @parameter1: org.apache.solr.common.util.FastOutputStream;

     label1:
        $l0 = l8 & -128L;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        $l4 = l8 & 127L;

        $l5 = $l4 | 128L;

        $i6 = (int) $l5;

        $b7 = (byte) $i6;

        $i9 = (int) $b7;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>($i9);

        l8 = l8 >>> 7;

        goto label1;

     label2:
        $i2 = (int) l8;

        $b3 = (byte) $i2;

        $i10 = (int) $b3;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void writeByte(int)>($i10);

        return;
    }

    public static long readVLong(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        long $l5, $l6, l8;
        short $s2, $s10;
        byte $b0, $b1, $b3, $b4, b7;
        int i9;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $b0 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: byte readByte()>();

        b7 = $b0;

        $b1 = $b0 & 127;

        l8 = (long) $b1;

        i9 = 7;

     label1:
        $s10 = (short) b7;

        $s2 = $s10 & 128;

        if $s2 == 0 goto label2;

        $b3 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: byte readByte()>();

        b7 = $b3;

        $b4 = $b3 & 127;

        $l5 = (long) $b4;

        $l6 = $l5 << i9;

        l8 = l8 | $l6;

        i9 = i9 + 7;

        goto label1;

     label2:
        return l8;
    }

    public void writeExternString(java.lang.String) throws java.io.IOException
    {
        java.util.HashMap $r8;
        java.lang.Integer $r7, $r9, r10;
        java.util.Map $r2, $r3, $r5, $r6;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r4;
        java.lang.String r0;
        org.apache.solr.common.util.JavaBinCodec r1;

        r1 := @this: org.apache.solr.common.util.JavaBinCodec;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        virtualinvoke r1.<org.apache.solr.common.util.JavaBinCodec: void writeTag(byte)>(0);

        return;

     label1:
        $r2 = r1.<org.apache.solr.common.util.JavaBinCodec: java.util.Map stringsMap>;

        if $r2 != null goto label2;

        $r9 = null;

        goto label3;

     label2:
        $r3 = r1.<org.apache.solr.common.util.JavaBinCodec: java.util.Map stringsMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r9 = (java.lang.Integer) $r4;

     label3:
        r10 = $r9;

        if $r9 != null goto label4;

        r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label4:
        $i0 = virtualinvoke r10.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<org.apache.solr.common.util.JavaBinCodec: void writeTag(byte,int)>(-32, $i0);

        $i1 = virtualinvoke r10.<java.lang.Integer: int intValue()>();

        if $i1 != 0 goto label6;

        virtualinvoke r1.<org.apache.solr.common.util.JavaBinCodec: void writeStr(java.lang.String)>(r0);

        $r5 = r1.<org.apache.solr.common.util.JavaBinCodec: java.util.Map stringsMap>;

        if $r5 != null goto label5;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r1.<org.apache.solr.common.util.JavaBinCodec: java.util.Map stringsMap> = $r8;

     label5:
        $r6 = r1.<org.apache.solr.common.util.JavaBinCodec: java.util.Map stringsMap>;

        $i2 = r1.<org.apache.solr.common.util.JavaBinCodec: int stringsCount>;

        $i3 = $i2 + 1;

        r1.<org.apache.solr.common.util.JavaBinCodec: int stringsCount> = $i3;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r7);

     label6:
        return;
    }

    public java.lang.String readExternString(org.apache.solr.common.util.FastInputStream) throws java.io.IOException
    {
        java.util.ArrayList $r6;
        java.util.List $r4, $r5, $r7;
        int $i0, $i1;
        java.lang.Object $r2, $r8;
        java.lang.String r3, $r9;
        org.apache.solr.common.util.FastInputStream r1;
        org.apache.solr.common.util.JavaBinCodec r0;

        r0 := @this: org.apache.solr.common.util.JavaBinCodec;

        r1 := @parameter0: org.apache.solr.common.util.FastInputStream;

        $i0 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: int readSize(org.apache.solr.common.util.FastInputStream)>(r1);

        if $i0 == 0 goto label1;

        $r7 = r0.<org.apache.solr.common.util.JavaBinCodec: java.util.List stringsList>;

        $i1 = $i0 - 1;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i1);

        $r9 = (java.lang.String) $r8;

        return $r9;

     label1:
        $r2 = virtualinvoke r0.<org.apache.solr.common.util.JavaBinCodec: java.lang.Object readVal(org.apache.solr.common.util.FastInputStream)>(r1);

        r3 = (java.lang.String) $r2;

        $r4 = r0.<org.apache.solr.common.util.JavaBinCodec: java.util.List stringsList>;

        if $r4 != null goto label2;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.solr.common.util.JavaBinCodec: java.util.List stringsList> = $r6;

     label2:
        $r5 = r0.<org.apache.solr.common.util.JavaBinCodec: java.util.List stringsList>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3);

        return r3;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <org.apache.solr.common.util.JavaBinCodec: byte EXTERN_STRING> = -32;

        <org.apache.solr.common.util.JavaBinCodec: byte NAMED_LST> = -64;

        <org.apache.solr.common.util.JavaBinCodec: byte ORDERED_MAP> = -96;

        <org.apache.solr.common.util.JavaBinCodec: byte ARR> = -128;

        <org.apache.solr.common.util.JavaBinCodec: byte SLONG> = 96;

        <org.apache.solr.common.util.JavaBinCodec: byte SINT> = 64;

        <org.apache.solr.common.util.JavaBinCodec: byte STR> = 32;

        <org.apache.solr.common.util.JavaBinCodec: byte TAG_AND_LEN> = 32;

        <org.apache.solr.common.util.JavaBinCodec: byte SOLRINPUTDOC> = 16;

        <org.apache.solr.common.util.JavaBinCodec: byte END> = 15;

        <org.apache.solr.common.util.JavaBinCodec: byte ITERATOR> = 14;

        <org.apache.solr.common.util.JavaBinCodec: byte BYTEARR> = 13;

        <org.apache.solr.common.util.JavaBinCodec: byte SOLRDOCLST> = 12;

        <org.apache.solr.common.util.JavaBinCodec: byte SOLRDOC> = 11;

        <org.apache.solr.common.util.JavaBinCodec: byte MAP> = 10;

        <org.apache.solr.common.util.JavaBinCodec: byte DATE> = 9;

        <org.apache.solr.common.util.JavaBinCodec: byte FLOAT> = 8;

        <org.apache.solr.common.util.JavaBinCodec: byte LONG> = 7;

        <org.apache.solr.common.util.JavaBinCodec: byte INT> = 6;

        <org.apache.solr.common.util.JavaBinCodec: byte DOUBLE> = 5;

        <org.apache.solr.common.util.JavaBinCodec: byte SHORT> = 4;

        <org.apache.solr.common.util.JavaBinCodec: byte BYTE> = 3;

        <org.apache.solr.common.util.JavaBinCodec: byte BOOL_FALSE> = 2;

        <org.apache.solr.common.util.JavaBinCodec: byte BOOL_TRUE> = 1;

        <org.apache.solr.common.util.JavaBinCodec: byte NULL> = 0;

        <org.apache.solr.common.util.JavaBinCodec: byte VERSION> = 2;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.apache.solr.common.util.JavaBinCodec: java.lang.Object END_OBJ> = $r0;

        return;
    }
}
