class org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator extends org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomOperationComponentGenerator
{
    static final boolean $assertionsDisabled;
    final org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0;

    void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator r0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator r1;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomOperationComponentGenerator: void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator)>(r1);

        return;
    }

    org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent generate(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton, boolean, org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton r3;
        java.lang.AssertionError $r5;
        int[] $r1;
        int $i0, $i1;
        java.lang.String $r11;
        boolean $z0, z1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent $r4, $r6;
        java.lang.RuntimeException $r7;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage r0;
        java.lang.StringBuilder $r8, $r9, $r10;

        r2 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator;

        r3 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton;

        z1 := @parameter1: boolean;

        r0 := @parameter2: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage;

        $r1 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$1: int[] $SwitchMap$org$waveprotocol$wave$model$testing$RandomDocOpGenerator$Generator$Stage>;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        $r6 = virtualinvoke r2.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent generateWithLookahead(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton,boolean,org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage)>(r3, z1, r0);

        return $r6;

     label2:
        $z0 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        if z1 != 0 goto label3;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label3:
        $r4 = virtualinvoke r2.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent generateClosing(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton)>(r3);

        return $r4;

     label4:
        return null;

     label5:
        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected stage: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r7;
    }

    org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent generate(org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl)
    {
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$1 $r0;

        r1 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl;

        $r0 = new org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$1;

        specialinvoke $r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$1: void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator,org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl)>(r1, r2);

        return $r0;
    }

    java.lang.String[] toArray(java.util.ArrayList)
    {
        java.lang.Object[] $r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator r4;
        java.lang.String[] $r1, $r3;
        java.util.ArrayList r0;

        r4 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator;

        r0 := @parameter0: java.util.ArrayList;

        $r1 = newarray (java.lang.String)[0];

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r3 = (java.lang.String[]) $r2;

        return $r3;
    }

    org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent generateClosing(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton)
    {
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl $r8;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton r0;
        java.util.Set $r1, $r3;
        java.lang.String[] $r6;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent $r9;
        java.lang.AssertionError $r11;
        java.util.ArrayList $r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator r5;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r10;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder $r4, $r7;
        boolean $z0, $z1, $z2;

        r5 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: java.util.Set openAnnotations()>();

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = new java.util.ArrayList;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: java.util.Set openAnnotations()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r2);

        $r4 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder builder()>();

        $r6 = virtualinvoke r5.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator: java.lang.String[] toArray(java.util.ArrayList)>($r2);

        $r7 = virtualinvoke $r4.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder initializationEnd(java.lang.String[])>($r6);

        $r8 = virtualinvoke $r7.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl build()>();

        $z1 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r10 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkAnnotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>($r8, null);

        $z2 = virtualinvoke $r10.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: boolean isIllFormed()>();

        if $z2 == 0 goto label2;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label2:
        $r9 = virtualinvoke r5.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent generate(org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl)>($r8);

        return $r9;
    }

    org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent generateWithLookahead(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton, boolean, org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton r0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters $r10;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption r25;
        boolean $z0, $z1, $z2, $z3, z4, $z5;
        java.util.Set $r14, $r16;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent $r24;
        java.util.List $r11;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$2 $r18;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$Result $r23;
        java.lang.String[] $r2;
        java.lang.AssertionError $r22;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator $r9;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationMap $r13, $r15;
        java.util.TreeSet $r6;
        java.util.ArrayList $r17;
        java.lang.String $r21;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl $r4;
        java.util.Iterator $r12;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$StringNullComparator $r7;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator r8;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage r19;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r5;
        java.lang.Object $r20;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder $r1, $r3;

        r8 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton;

        z4 := @parameter1: boolean;

        r19 := @parameter2: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage;

        $r1 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder builder()>();

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "a";

        $r2[1] = null;

        $r2[2] = "1";

        $r3 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder updateValues(java.lang.String[])>($r2);

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl build()>();

        $r5 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkAnnotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>($r4, null);

        $z0 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: boolean isIllFormed()>();

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: boolean isValid()>();

        if $z3 != 0 goto label1;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label1:
        $z5 = virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: boolean isIllFormed()>();

        if $z5 == 0 goto label2;

        return null;

     label2:
        $r6 = new java.util.TreeSet;

        $r7 = new org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$StringNullComparator;

        specialinvoke $r7.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$StringNullComparator: void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator)>(r8);

        specialinvoke $r6.<java.util.TreeSet: void <init>(java.util.Comparator)>($r7);

        $r9 = r8.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0>;

        $r10 = $r9.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters p>;

        $r11 = virtualinvoke $r10.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List getAnnotationOptions()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r20 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r25 = (org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption) $r20;

        $r21 = r25.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption: java.lang.String key>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r21);

        goto label3;

     label4:
        $r13 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap currentAnnotations()>();

        $r14 = interfaceinvoke $r13.<org.waveprotocol.wave.model.document.operation.impl.AnnotationMap: java.util.Set keySet()>();

        interfaceinvoke $r6.<java.util.Set: boolean addAll(java.util.Collection)>($r14);

        $r15 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.impl.AnnotationMap inheritedAnnotations()>();

        $r16 = interfaceinvoke $r15.<org.waveprotocol.wave.model.document.operation.impl.AnnotationMap: java.util.Set keySet()>();

        interfaceinvoke $r6.<java.util.Set: boolean addAll(java.util.Collection)>($r16);

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r17);

        $r18 = new org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$2;

        specialinvoke $r18.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$2: void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton,org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage,java.util.ArrayList)>(r8, r0, r19, $r17);

     label5:
        interfaceinvoke $r18.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RunnableWithException: void run()>();

     label6:
        goto label8;

     label7:
        $r23 := @caughtexception;

        $r24 = $r23.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$Result: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent component>;

        return $r24;

     label8:
        return null;

        catch org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$Result from label5 to label6 with label7;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/testing/RandomDocOpGenerator;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator: boolean $assertionsDisabled> = $z1;

        return;
    }
}
