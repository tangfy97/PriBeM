public class org.apache.poi.hssf.dev.BiffDrawingToXml extends java.lang.Object
{
    private static final java.lang.String SHEET_NAME_PARAM;
    private static final java.lang.String SHEET_INDEXES_PARAM;
    private static final java.lang.String EXCLUDE_WORKBOOK_RECORDS;

    public void <init>()
    {
        org.apache.poi.hssf.dev.BiffDrawingToXml r0;

        r0 := @this: org.apache.poi.hssf.dev.BiffDrawingToXml;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int getAttributeIndex(java.lang.String, java.lang.String[])
    {
        int $i0, i1, $i3;
        java.lang.String[] r0;
        java.lang.String r1, r2;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label3;

        r1 = r0[i1];

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }

    private static boolean isExcludeWorkbookRecords(java.lang.String[])
    {
        int $i0, $i2;
        java.lang.String[] r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        $i0 = staticinvoke <org.apache.poi.hssf.dev.BiffDrawingToXml: int getAttributeIndex(java.lang.String,java.lang.String[])>("-exclude-workbook", r0);

        $i2 = (int) -1;

        if $i2 == $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static java.util.List getIndexesByName(java.lang.String[], org.apache.poi.hssf.usermodel.HSSFWorkbook)
    {
        java.lang.String[] r1;
        java.lang.IllegalArgumentException $r8, $r9;
        java.lang.Integer $r4;
        java.util.ArrayList $r7;
        int $i0, $i1, $i2, $i3, $i5, $i7;
        java.lang.String r2;
        org.apache.poi.hssf.usermodel.HSSFWorkbook r3;

        r1 := @parameter0: java.lang.String[];

        r3 := @parameter1: org.apache.poi.hssf.usermodel.HSSFWorkbook;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $i0 = staticinvoke <org.apache.poi.hssf.dev.BiffDrawingToXml: int getAttributeIndex(java.lang.String,java.lang.String[])>("-sheet-name", r1);

        $i5 = (int) -1;

        if $i5 == $i0 goto label3;

        $i1 = lengthof r1;

        if $i0 < $i1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("sheet name param value was not specified");

        throw $r8;

     label1:
        $i2 = $i0 + 1;

        r2 = r1[$i2];

        $i3 = virtualinvoke r3.<org.apache.poi.hssf.usermodel.HSSFWorkbook: int getSheetIndex(java.lang.String)>(r2);

        $i7 = (int) -1;

        if $i7 != $i3 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("specified sheet name has not been found in xls file");

        throw $r9;

     label2:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r4);

     label3:
        return $r7;
    }

    private static java.util.List getIndexesByIdArray(java.lang.String[])
    {
        java.lang.String[] r1, $r3;
        java.lang.IllegalArgumentException $r8;
        java.lang.Integer $r5;
        java.util.ArrayList $r7;
        int $i0, $i1, $i2, i3, $i4, i5, $i7;
        java.lang.String r2, r4;

        r1 := @parameter0: java.lang.String[];

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $i0 = staticinvoke <org.apache.poi.hssf.dev.BiffDrawingToXml: int getAttributeIndex(java.lang.String,java.lang.String[])>("-sheet-indexes", r1);

        $i7 = (int) -1;

        if $i7 == $i0 goto label3;

        $i1 = lengthof r1;

        if $i0 < $i1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("sheet list value was not specified");

        throw $r8;

     label1:
        $i2 = $i0 + 1;

        r2 = r1[$i2];

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i3 = lengthof $r3;

        i5 = 0;

     label2:
        if i5 >= i3 goto label3;

        r4 = $r3[i5];

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r5);

        i5 = i5 + 1;

        goto label2;

     label3:
        return $r7;
    }

    private static java.util.List getSheetsIndexes(java.lang.String[], org.apache.poi.hssf.usermodel.HSSFWorkbook)
    {
        java.lang.String[] r1;
        java.lang.Integer $r5;
        java.util.ArrayList $r0;
        java.util.List $r2, $r4;
        int $i0, $i1, i2;
        org.apache.poi.hssf.usermodel.HSSFWorkbook r3;

        r1 := @parameter0: java.lang.String[];

        r3 := @parameter1: org.apache.poi.hssf.usermodel.HSSFWorkbook;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <org.apache.poi.hssf.dev.BiffDrawingToXml: java.util.List getIndexesByIdArray(java.lang.String[])>(r1);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        $r4 = staticinvoke <org.apache.poi.hssf.dev.BiffDrawingToXml: java.util.List getIndexesByName(java.lang.String[],org.apache.poi.hssf.usermodel.HSSFWorkbook)>(r1, r3);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if 0 != $i0 goto label2;

        $i1 = virtualinvoke r3.<org.apache.poi.hssf.usermodel.HSSFWorkbook: int getNumberOfSheets()>();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label2;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static java.lang.String getInputFileName(java.lang.String[])
    {
        int $i0, $i1;
        java.lang.String[] r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        $i1 = $i0 - 1;

        $r1 = r0[$i1];

        return $r1;
    }

    private static java.lang.String getOutputFileName(java.lang.String)
    {
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String r0, $r4, $r5;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("xls");

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".xls", ".xml");

        return $r5;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.io.PrintStream $r5, $r6, $r7, $r8, $r9;
        java.io.FileOutputStream $r4;
        java.lang.String[] r0;
        java.io.FileInputStream $r2;
        int $i0;
        java.lang.String $r1, $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if 0 != $i0 goto label1;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Usage: BiffDrawingToXml [options] inputWorkbook");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Options:");

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("  -exclude-workbook            exclude workbook-level records");

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("  -sheet-indexes   <indexes>   output sheets with specified indexes");

        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("  -sheet-namek  <names>        output sheets with specified name");

        return;

     label1:
        $r1 = staticinvoke <org.apache.poi.hssf.dev.BiffDrawingToXml: java.lang.String getInputFileName(java.lang.String[])>(r0);

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.lang.String)>($r1);

        $r3 = staticinvoke <org.apache.poi.hssf.dev.BiffDrawingToXml: java.lang.String getOutputFileName(java.lang.String)>($r1);

        $r4 = new java.io.FileOutputStream;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.lang.String)>($r3);

        $z0 = staticinvoke <org.apache.poi.hssf.dev.BiffDrawingToXml: boolean isExcludeWorkbookRecords(java.lang.String[])>(r0);

        staticinvoke <org.apache.poi.hssf.dev.BiffDrawingToXml: void writeToFile(java.io.OutputStream,java.io.InputStream,boolean,java.lang.String[])>($r4, $r2, $z0, r0);

        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

        virtualinvoke $r4.<java.io.FileOutputStream: void close()>();

        return;
    }

    public static void writeToFile(java.io.OutputStream, java.io.InputStream, boolean, java.lang.String[]) throws java.io.IOException
    {
        byte[] $r12;
        java.lang.Integer r33;
        org.apache.poi.hssf.usermodel.HSSFSheet $r14;
        boolean z0, $z1, $z2;
        org.apache.poi.hssf.record.Record $r4;
        java.util.List $r8, $r28;
        org.apache.poi.hssf.record.DrawingGroupRecord r5;
        java.lang.StringBuilder $r6, $r16, $r17, $r18, $r20, $r21, $r22, $r25, $r26, $r27;
        org.apache.poi.hssf.usermodel.HSSFWorkbook $r2;
        org.apache.poi.hssf.model.InternalWorkbook $r3;
        java.lang.String[] r7;
        org.apache.poi.ddf.EscherRecord r32;
        org.apache.poi.poifs.filesystem.POIFSFileSystem $r0;
        int $i0;
        java.lang.String $r11, $r23, $r24, $r31;
        java.io.OutputStream r10;
        java.util.Iterator $r9, $r29;
        java.lang.Object $r13, $r30;
        org.apache.poi.hssf.usermodel.HSSFPatriarch $r15;
        org.apache.poi.hssf.record.EscherAggregate $r19;
        java.io.InputStream r1;

        r10 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: java.io.InputStream;

        z0 := @parameter2: boolean;

        r7 := @parameter3: java.lang.String[];

        $r0 = new org.apache.poi.poifs.filesystem.POIFSFileSystem;

        specialinvoke $r0.<org.apache.poi.poifs.filesystem.POIFSFileSystem: void <init>(java.io.InputStream)>(r1);

        $r2 = new org.apache.poi.hssf.usermodel.HSSFWorkbook;

        specialinvoke $r2.<org.apache.poi.hssf.usermodel.HSSFWorkbook: void <init>(org.apache.poi.poifs.filesystem.POIFSFileSystem)>($r0);

        $r3 = staticinvoke <org.apache.poi.hssf.dev.BiffDrawingToXml: org.apache.poi.hssf.model.InternalWorkbook getInternalWorkbook(org.apache.poi.hssf.usermodel.HSSFWorkbook)>($r2);

        $r4 = virtualinvoke $r3.<org.apache.poi.hssf.model.InternalWorkbook: org.apache.poi.hssf.record.Record findFirstRecordBySid(short)>(235);

        r5 = (org.apache.poi.hssf.record.DrawingGroupRecord) $r4;

        virtualinvoke r5.<org.apache.poi.hssf.record.DrawingGroupRecord: void decode()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<workbook>\n");

        if z0 != 0 goto label2;

        $r28 = virtualinvoke r5.<org.apache.poi.hssf.record.DrawingGroupRecord: java.util.List getEscherRecords()>();

        $r29 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r32 = (org.apache.poi.ddf.EscherRecord) $r30;

        $r31 = virtualinvoke r32.<org.apache.poi.ddf.EscherRecord: java.lang.String toXml(java.lang.String)>("\t");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        goto label1;

     label2:
        $r8 = staticinvoke <org.apache.poi.hssf.dev.BiffDrawingToXml: java.util.List getSheetsIndexes(java.lang.String[],org.apache.poi.hssf.usermodel.HSSFWorkbook)>(r7, $r2);

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r13 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r33 = (java.lang.Integer) $r13;

        $i0 = virtualinvoke r33.<java.lang.Integer: int intValue()>();

        $r14 = virtualinvoke $r2.<org.apache.poi.hssf.usermodel.HSSFWorkbook: org.apache.poi.hssf.usermodel.HSSFSheet getSheetAt(int)>($i0);

        $r15 = virtualinvoke $r14.<org.apache.poi.hssf.usermodel.HSSFSheet: org.apache.poi.hssf.usermodel.HSSFPatriarch getDrawingPatriarch()>();

        if $r15 == null goto label4;

        $r16 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<sheet");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r19 = staticinvoke <org.apache.poi.hssf.dev.BiffDrawingToXml: org.apache.poi.hssf.record.EscherAggregate getHSSFPatriarchBoundAggregate(org.apache.poi.hssf.usermodel.HSSFPatriarch)>($r15);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = virtualinvoke $r19.<org.apache.poi.hssf.record.EscherAggregate: java.lang.String toXml(java.lang.String)>($r23);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r25 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</sheet");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

     label4:
        goto label3;

     label5:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</workbook>\n");

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke $r11.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r10.<java.io.OutputStream: void write(byte[])>($r12);

        virtualinvoke r10.<java.io.OutputStream: void close()>();

        return;
    }

    private static org.apache.poi.hssf.record.EscherAggregate getHSSFPatriarchBoundAggregate(org.apache.poi.hssf.usermodel.HSSFPatriarch)
    {
        java.lang.IllegalAccessException $r5;
        java.lang.NoSuchFieldException $r6;
        java.lang.Class $r1;
        java.lang.Object $r3;
        org.apache.poi.hssf.usermodel.HSSFPatriarch r0;
        org.apache.poi.hssf.record.EscherAggregate $r4;
        java.lang.reflect.Field $r2;

        r0 := @parameter0: org.apache.poi.hssf.usermodel.HSSFPatriarch;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("_boundAggregate");

        virtualinvoke $r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r4 = (org.apache.poi.hssf.record.EscherAggregate) $r3;

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.NoSuchFieldException: void printStackTrace()>();

        goto label5;

     label4:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.IllegalAccessException: void printStackTrace()>();

     label5:
        return null;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
    }

    private static org.apache.poi.hssf.model.InternalWorkbook getInternalWorkbook(org.apache.poi.hssf.usermodel.HSSFWorkbook)
    {
        java.lang.IllegalAccessException $r5;
        java.lang.NoSuchFieldException $r6;
        java.lang.Class $r1;
        java.lang.Object $r3;
        java.lang.reflect.Field $r2;
        org.apache.poi.hssf.usermodel.HSSFWorkbook r0;
        org.apache.poi.hssf.model.InternalWorkbook $r4;

        r0 := @parameter0: org.apache.poi.hssf.usermodel.HSSFWorkbook;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("workbook");

        virtualinvoke $r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r4 = (org.apache.poi.hssf.model.InternalWorkbook) $r3;

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.NoSuchFieldException: void printStackTrace()>();

        goto label5;

     label4:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.IllegalAccessException: void printStackTrace()>();

     label5:
        return null;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hssf.dev.BiffDrawingToXml: java.lang.String EXCLUDE_WORKBOOK_RECORDS> = "-exclude-workbook";

        <org.apache.poi.hssf.dev.BiffDrawingToXml: java.lang.String SHEET_INDEXES_PARAM> = "-sheet-indexes";

        <org.apache.poi.hssf.dev.BiffDrawingToXml: java.lang.String SHEET_NAME_PARAM> = "-sheet-name";

        return;
    }
}
