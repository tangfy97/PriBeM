public class org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory extends org.apache.lucene.analysis.util.CharFilterFactory
{
    private final java.util.regex.Pattern pattern;
    private final java.lang.String replacement;
    private final int maxBlockChars;
    private final java.lang.String blockDelimiters;

    public void <init>(java.util.Map)
    {
        java.lang.IllegalArgumentException $r6;
        org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory r0;
        java.util.Map r1;
        int $i0;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.util.regex.Pattern $r2;
        java.lang.String $r3, $r5, $r10;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.lucene.analysis.util.CharFilterFactory: void <init>(java.util.Map)>(r1);

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory: java.util.regex.Pattern getPattern(java.util.Map,java.lang.String)>(r1, "pattern");

        r0.<org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory: java.util.regex.Pattern pattern> = $r2;

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory: java.lang.String get(java.util.Map,java.lang.String,java.lang.String)>(r1, "replacement", "");

        r0.<org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory: java.lang.String replacement> = $r3;

        $i0 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory: int getInt(java.util.Map,java.lang.String,int)>(r1, "maxBlockChars", 10000);

        r0.<org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory: int maxBlockChars> = $i0;

        $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>("blockDelimiters");

        $r5 = (java.lang.String) $r4;

        r0.<org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory: java.lang.String blockDelimiters> = $r5;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown parameters: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        return;
    }

    public org.apache.lucene.analysis.CharFilter create(java.io.Reader)
    {
        org.apache.lucene.analysis.pattern.PatternReplaceCharFilter $r0;
        org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory r1;
        int $i0;
        java.io.Reader r2;
        java.lang.String $r3, $r4;
        java.util.regex.Pattern $r5;

        r1 := @this: org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory;

        r2 := @parameter0: java.io.Reader;

        $r0 = new org.apache.lucene.analysis.pattern.PatternReplaceCharFilter;

        $r5 = r1.<org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory: java.util.regex.Pattern pattern>;

        $r4 = r1.<org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory: java.lang.String replacement>;

        $i0 = r1.<org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory: int maxBlockChars>;

        $r3 = r1.<org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory: java.lang.String blockDelimiters>;

        specialinvoke $r0.<org.apache.lucene.analysis.pattern.PatternReplaceCharFilter: void <init>(java.util.regex.Pattern,java.lang.String,int,java.lang.String,java.io.Reader)>($r5, $r4, $i0, $r3, r2);

        return $r0;
    }

    public volatile java.io.Reader create(java.io.Reader)
    {
        java.io.Reader r1;
        org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory r0;
        org.apache.lucene.analysis.CharFilter $r2;

        r0 := @this: org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory;

        r1 := @parameter0: java.io.Reader;

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternReplaceCharFilterFactory: org.apache.lucene.analysis.CharFilter create(java.io.Reader)>(r1);

        return $r2;
    }
}
