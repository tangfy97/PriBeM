public class arq.cmdline.ModQueryIn extends java.lang.Object implements arq.cmdline.ArgModuleGeneral
{
    protected final arq.cmdline.ArgDecl queryFileDecl;
    protected final arq.cmdline.ArgDecl querySyntaxDecl;
    protected final arq.cmdline.ArgDecl queryBaseDecl;
    private com.hp.hpl.jena.query.Syntax querySyntax;
    private java.lang.String queryFilename;
    private java.lang.String queryString;
    private com.hp.hpl.jena.query.Query query;
    private java.lang.String baseURI;

    public void <init>()
    {
        com.hp.hpl.jena.query.Syntax $r7;
        arq.cmdline.ArgDecl $r1, $r3, $r5;
        java.lang.String[] $r2, $r4, $r6;
        arq.cmdline.ModQueryIn r0;

        r0 := @this: arq.cmdline.ModQueryIn;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new arq.cmdline.ArgDecl;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "file";

        specialinvoke $r1.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "query", $r2);

        r0.<arq.cmdline.ModQueryIn: arq.cmdline.ArgDecl queryFileDecl> = $r1;

        $r3 = new arq.cmdline.ArgDecl;

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "syn";

        $r4[1] = "in";

        specialinvoke $r3.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "syntax", $r4);

        r0.<arq.cmdline.ModQueryIn: arq.cmdline.ArgDecl querySyntaxDecl> = $r3;

        $r5 = new arq.cmdline.ArgDecl;

        $r6 = newarray (java.lang.String)[0];

        specialinvoke $r5.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "base", $r6);

        r0.<arq.cmdline.ModQueryIn: arq.cmdline.ArgDecl queryBaseDecl> = $r5;

        $r7 = <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax syntaxARQ>;

        r0.<arq.cmdline.ModQueryIn: com.hp.hpl.jena.query.Syntax querySyntax> = $r7;

        r0.<arq.cmdline.ModQueryIn: java.lang.String queryFilename> = null;

        r0.<arq.cmdline.ModQueryIn: java.lang.String queryString> = null;

        r0.<arq.cmdline.ModQueryIn: com.hp.hpl.jena.query.Query query> = null;

        r0.<arq.cmdline.ModQueryIn: java.lang.String baseURI> = null;

        return;
    }

    public void registerWith(arq.cmdline.CmdGeneral)
    {
        arq.cmdline.Usage $r1;
        arq.cmdline.ModQueryIn r2;
        arq.cmdline.CmdGeneral r0;
        arq.cmdline.ArgDecl $r3, $r4, $r5;

        r2 := @this: arq.cmdline.ModQueryIn;

        r0 := @parameter0: arq.cmdline.CmdGeneral;

        $r1 = virtualinvoke r0.<arq.cmdline.CmdGeneral: arq.cmdline.Usage getUsage()>();

        virtualinvoke $r1.<arq.cmdline.Usage: void startCategory(java.lang.String)>("Query");

        $r3 = r2.<arq.cmdline.ModQueryIn: arq.cmdline.ArgDecl queryFileDecl>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r3, "--query, --file", "File containing a query");

        $r4 = r2.<arq.cmdline.ModQueryIn: arq.cmdline.ArgDecl querySyntaxDecl>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r4, "--syntax, --in", "Syntax of the query");

        $r5 = r2.<arq.cmdline.ModQueryIn: arq.cmdline.ArgDecl queryBaseDecl>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r5, "--base", "Base URI for the query");

        return;
    }

    public void processArgs(arq.cmdline.CmdArgModule) throws java.lang.IllegalArgumentException
    {
        com.hp.hpl.jena.query.Syntax $r6, $r13, $r19;
        arq.cmdline.ArgDecl $r2, $r3, $r4, $r16, $r20, $r23;
        arq.cmdline.CmdArgModule r0;
        arq.cmdline.ModQueryIn r1;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r10, $r11, $r12, $r14, $r15, $r17, $r18, $r21, $r22;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r7, $r8, $r9;

        r1 := @this: arq.cmdline.ModQueryIn;

        r0 := @parameter0: arq.cmdline.CmdArgModule;

        $r2 = r1.<arq.cmdline.ModQueryIn: arq.cmdline.ArgDecl queryBaseDecl>;

        $z0 = virtualinvoke r0.<arq.cmdline.CmdArgModule: boolean contains(arq.cmdline.ArgDecl)>($r2);

        if $z0 == 0 goto label1;

        $r20 = r1.<arq.cmdline.ModQueryIn: arq.cmdline.ArgDecl queryBaseDecl>;

        $r21 = virtualinvoke r0.<arq.cmdline.CmdArgModule: java.lang.String getValue(arq.cmdline.ArgDecl)>($r20);

        r1.<arq.cmdline.ModQueryIn: java.lang.String baseURI> = $r21;

     label1:
        $r3 = r1.<arq.cmdline.ModQueryIn: arq.cmdline.ArgDecl queryFileDecl>;

        $z1 = virtualinvoke r0.<arq.cmdline.CmdArgModule: boolean contains(arq.cmdline.ArgDecl)>($r3);

        if $z1 == 0 goto label2;

        $r16 = r1.<arq.cmdline.ModQueryIn: arq.cmdline.ArgDecl queryFileDecl>;

        $r17 = virtualinvoke r0.<arq.cmdline.CmdArgModule: java.lang.String getValue(arq.cmdline.ArgDecl)>($r16);

        r1.<arq.cmdline.ModQueryIn: java.lang.String queryFilename> = $r17;

        $r18 = r1.<arq.cmdline.ModQueryIn: java.lang.String queryFilename>;

        $r19 = staticinvoke <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax guessFileSyntax(java.lang.String)>($r18);

        r1.<arq.cmdline.ModQueryIn: com.hp.hpl.jena.query.Syntax querySyntax> = $r19;

     label2:
        $i0 = virtualinvoke r0.<arq.cmdline.CmdArgModule: int getNumPositional()>();

        if $i0 != 0 goto label3;

        $r15 = r1.<arq.cmdline.ModQueryIn: java.lang.String queryFilename>;

        if $r15 != null goto label3;

        virtualinvoke r0.<arq.cmdline.CmdArgModule: void cmdError(java.lang.String)>("No query string or query file");

     label3:
        $i2 = virtualinvoke r0.<arq.cmdline.CmdArgModule: int getNumPositional()>();

        if $i2 <= 1 goto label4;

        virtualinvoke r0.<arq.cmdline.CmdArgModule: void cmdError(java.lang.String)>("Only one query string allowed");

     label4:
        $i1 = virtualinvoke r0.<arq.cmdline.CmdArgModule: int getNumPositional()>();

        if $i1 != 1 goto label5;

        $r14 = r1.<arq.cmdline.ModQueryIn: java.lang.String queryFilename>;

        if $r14 == null goto label5;

        virtualinvoke r0.<arq.cmdline.CmdArgModule: void cmdError(java.lang.String)>("Either query string or query file - not both");

     label5:
        $r22 = r1.<arq.cmdline.ModQueryIn: java.lang.String queryFilename>;

        if $r22 != null goto label7;

        $r11 = virtualinvoke r0.<arq.cmdline.CmdArgModule: java.lang.String getPositionalArg(int)>(0);

        $z2 = virtualinvoke r0.<arq.cmdline.CmdArgModule: boolean matchesIndirect(java.lang.String)>($r11);

        if $z2 == 0 goto label6;

        $r13 = staticinvoke <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax guessFileSyntax(java.lang.String)>($r11);

        r1.<arq.cmdline.ModQueryIn: com.hp.hpl.jena.query.Syntax querySyntax> = $r13;

     label6:
        $r12 = virtualinvoke r0.<arq.cmdline.CmdArgModule: java.lang.String indirect(java.lang.String)>($r11);

        r1.<arq.cmdline.ModQueryIn: java.lang.String queryString> = $r12;

     label7:
        $r23 = r1.<arq.cmdline.ModQueryIn: arq.cmdline.ArgDecl querySyntaxDecl>;

        $z3 = virtualinvoke r0.<arq.cmdline.CmdArgModule: boolean contains(arq.cmdline.ArgDecl)>($r23);

        if $z3 == 0 goto label9;

        $r4 = r1.<arq.cmdline.ModQueryIn: arq.cmdline.ArgDecl querySyntaxDecl>;

        $r5 = virtualinvoke r0.<arq.cmdline.CmdArgModule: java.lang.String getValue(arq.cmdline.ArgDecl)>($r4);

        $r6 = staticinvoke <com.hp.hpl.jena.query.Syntax: com.hp.hpl.jena.query.Syntax lookup(java.lang.String)>($r5);

        if $r6 != null goto label8;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized syntax: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<arq.cmdline.CmdArgModule: void cmdError(java.lang.String)>($r10);

     label8:
        r1.<arq.cmdline.ModQueryIn: com.hp.hpl.jena.query.Syntax querySyntax> = $r6;

     label9:
        return;
    }

    public com.hp.hpl.jena.query.Syntax getQuerySyntax()
    {
        com.hp.hpl.jena.query.Syntax $r1;
        arq.cmdline.ModQueryIn r0;

        r0 := @this: arq.cmdline.ModQueryIn;

        $r1 = r0.<arq.cmdline.ModQueryIn: com.hp.hpl.jena.query.Syntax querySyntax>;

        return $r1;
    }

    public com.hp.hpl.jena.query.Query getQuery()
    {
        com.hp.hpl.jena.query.Syntax $r7, $r13;
        boolean $z0;
        arq.cmd.TerminationException $r20, $r23, $r28, $r32, $r36, $r40, $r46;
        java.lang.Exception $r25;
        com.hp.hpl.jena.sparql.ARQInternalErrorException $r41;
        arq.cmd.CmdException $r52;
        java.lang.Throwable $r44, $r48;
        com.hp.hpl.jena.query.Query $r1, $r8, $r9, $r14, $r15, $r24;
        com.hp.hpl.jena.shared.JenaException $r29;
        com.hp.hpl.jena.query.QueryException $r33;
        arq.cmdline.ModQueryIn r0;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r10, $r11, $r12, $r17, $r18, $r21, $r31, $r35, $r39, $r43;
        com.hp.hpl.jena.query.QueryParseException $r37;
        java.io.PrintStream $r19, $r22, $r26, $r27, $r30, $r34, $r38, $r42, $r45, $r47, $r49, $r50;
        java.io.IOException $r51;
        java.io.InputStream $r16;

        r0 := @this: arq.cmdline.ModQueryIn;

        $r1 = r0.<arq.cmdline.ModQueryIn: com.hp.hpl.jena.query.Query query>;

        if $r1 == null goto label01;

        $r24 = r0.<arq.cmdline.ModQueryIn: com.hp.hpl.jena.query.Query query>;

        return $r24;

     label01:
        $r2 = r0.<arq.cmdline.ModQueryIn: java.lang.String queryFilename>;

        if $r2 == null goto label02;

        $r21 = r0.<arq.cmdline.ModQueryIn: java.lang.String queryString>;

        if $r21 == null goto label02;

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("Both query string and query file name given");

        $r23 = new arq.cmd.TerminationException;

        specialinvoke $r23.<arq.cmd.TerminationException: void <init>(int)>(1);

        throw $r23;

     label02:
        $r3 = r0.<arq.cmdline.ModQueryIn: java.lang.String queryFilename>;

        if $r3 != null goto label03;

        $r18 = r0.<arq.cmdline.ModQueryIn: java.lang.String queryString>;

        if $r18 != null goto label03;

        $r19 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("No query string and no query file name given");

        $r20 = new arq.cmd.TerminationException;

        specialinvoke $r20.<arq.cmd.TerminationException: void <init>(int)>(1);

        throw $r20;

     label03:
        $r4 = r0.<arq.cmdline.ModQueryIn: java.lang.String queryFilename>;

        if $r4 == null goto label09;

        $r10 = r0.<arq.cmdline.ModQueryIn: java.lang.String queryFilename>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z0 == 0 goto label07;

     label04:
        $r16 = <java.lang.System: java.io.InputStream in>;

        $r17 = staticinvoke <com.hp.hpl.jena.util.FileUtils: java.lang.String readWholeFileAsUTF8(java.io.InputStream)>($r16);

        r0.<arq.cmdline.ModQueryIn: java.lang.String queryString> = $r17;

     label05:
        goto label09;

     label06:
        $r51 := @caughtexception;

        $r52 = new arq.cmd.CmdException;

        specialinvoke $r52.<arq.cmd.CmdException: void <init>(java.lang.String,java.lang.Throwable)>("Error reading stdin", $r51);

        throw $r52;

     label07:
        $r11 = r0.<arq.cmdline.ModQueryIn: java.lang.String queryFilename>;

        $r12 = r0.<arq.cmdline.ModQueryIn: java.lang.String baseURI>;

        $r13 = virtualinvoke r0.<arq.cmdline.ModQueryIn: com.hp.hpl.jena.query.Syntax getQuerySyntax()>();

        $r14 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query read(java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>($r11, $r12, $r13);

        r0.<arq.cmdline.ModQueryIn: com.hp.hpl.jena.query.Query query> = $r14;

        $r15 = r0.<arq.cmdline.ModQueryIn: com.hp.hpl.jena.query.Query query>;

     label08:
        return $r15;

     label09:
        $r5 = r0.<arq.cmdline.ModQueryIn: java.lang.String queryString>;

        $r6 = r0.<arq.cmdline.ModQueryIn: java.lang.String baseURI>;

        $r7 = virtualinvoke r0.<arq.cmdline.ModQueryIn: com.hp.hpl.jena.query.Syntax getQuerySyntax()>();

        $r8 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String,java.lang.String,com.hp.hpl.jena.query.Syntax)>($r5, $r6, $r7);

        r0.<arq.cmdline.ModQueryIn: com.hp.hpl.jena.query.Query query> = $r8;

        $r9 = r0.<arq.cmdline.ModQueryIn: com.hp.hpl.jena.query.Query query>;

     label10:
        return $r9;

     label11:
        $r41 := @caughtexception;

        $r42 = <java.lang.System: java.io.PrintStream err>;

        $r43 = virtualinvoke $r41.<com.hp.hpl.jena.sparql.ARQInternalErrorException: java.lang.String getMessage()>();

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r43);

        $r44 = virtualinvoke $r41.<com.hp.hpl.jena.sparql.ARQInternalErrorException: java.lang.Throwable getCause()>();

        if $r44 == null goto label12;

        $r47 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>("Cause:");

        $r48 = virtualinvoke $r41.<com.hp.hpl.jena.sparql.ARQInternalErrorException: java.lang.Throwable getCause()>();

        $r49 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r48.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r49);

        $r50 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r50.<java.io.PrintStream: void println()>();

     label12:
        $r45 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r41.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void printStackTrace(java.io.PrintStream)>($r45);

        $r46 = new arq.cmd.TerminationException;

        specialinvoke $r46.<arq.cmd.TerminationException: void <init>(int)>(99);

        throw $r46;

     label13:
        $r37 := @caughtexception;

        $r38 = <java.lang.System: java.io.PrintStream err>;

        $r39 = virtualinvoke $r37.<com.hp.hpl.jena.query.QueryParseException: java.lang.String getMessage()>();

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r39);

        $r40 = new arq.cmd.TerminationException;

        specialinvoke $r40.<arq.cmd.TerminationException: void <init>(int)>(2);

        throw $r40;

     label14:
        $r33 := @caughtexception;

        $r34 = <java.lang.System: java.io.PrintStream err>;

        $r35 = virtualinvoke $r33.<com.hp.hpl.jena.query.QueryException: java.lang.String getMessage()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r35);

        $r36 = new arq.cmd.TerminationException;

        specialinvoke $r36.<arq.cmd.TerminationException: void <init>(int)>(2);

        throw $r36;

     label15:
        $r29 := @caughtexception;

        $r30 = <java.lang.System: java.io.PrintStream err>;

        $r31 = virtualinvoke $r29.<com.hp.hpl.jena.shared.JenaException: java.lang.String getMessage()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r31);

        $r32 = new arq.cmd.TerminationException;

        specialinvoke $r32.<arq.cmd.TerminationException: void <init>(int)>(2);

        throw $r32;

     label16:
        $r25 := @caughtexception;

        $r26 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r26.<java.io.PrintStream: void flush()>();

        $r27 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r25.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r27);

        $r28 = new arq.cmd.TerminationException;

        specialinvoke $r28.<arq.cmd.TerminationException: void <init>(int)>(98);

        throw $r28;

        catch java.io.IOException from label04 to label05 with label06;
        catch com.hp.hpl.jena.sparql.ARQInternalErrorException from label03 to label08 with label11;
        catch com.hp.hpl.jena.sparql.ARQInternalErrorException from label09 to label10 with label11;
        catch com.hp.hpl.jena.query.QueryParseException from label03 to label08 with label13;
        catch com.hp.hpl.jena.query.QueryParseException from label09 to label10 with label13;
        catch com.hp.hpl.jena.query.QueryException from label03 to label08 with label14;
        catch com.hp.hpl.jena.query.QueryException from label09 to label10 with label14;
        catch com.hp.hpl.jena.shared.JenaException from label03 to label08 with label15;
        catch com.hp.hpl.jena.shared.JenaException from label09 to label10 with label15;
        catch java.lang.Exception from label03 to label08 with label16;
        catch java.lang.Exception from label09 to label10 with label16;
    }
}
