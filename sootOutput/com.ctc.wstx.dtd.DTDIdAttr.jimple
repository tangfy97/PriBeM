public final class com.ctc.wstx.dtd.DTDIdAttr extends com.ctc.wstx.dtd.DTDAttribute
{

    public void <init>(com.ctc.wstx.dtd.NameKey, com.ctc.wstx.dtd.DefaultAttrValue, int, boolean, boolean)
    {
        com.ctc.wstx.dtd.DefaultAttrValue r2;
        com.ctc.wstx.dtd.DTDIdAttr r0;
        com.ctc.wstx.dtd.NameKey r1;
        int i0;
        boolean z0, z1;

        r0 := @this: com.ctc.wstx.dtd.DTDIdAttr;

        r1 := @parameter0: com.ctc.wstx.dtd.NameKey;

        r2 := @parameter1: com.ctc.wstx.dtd.DefaultAttrValue;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<com.ctc.wstx.dtd.DTDAttribute: void <init>(com.ctc.wstx.dtd.NameKey,com.ctc.wstx.dtd.DefaultAttrValue,int,boolean,boolean)>(r1, r2, i0, z0, z1);

        return;
    }

    public com.ctc.wstx.dtd.DTDAttribute cloneWith(int)
    {
        com.ctc.wstx.dtd.DefaultAttrValue $r2;
        com.ctc.wstx.dtd.DTDIdAttr $r0, r1;
        com.ctc.wstx.dtd.NameKey $r3;
        int i0;
        boolean $z0, $z1;

        r1 := @this: com.ctc.wstx.dtd.DTDIdAttr;

        i0 := @parameter0: int;

        $r0 = new com.ctc.wstx.dtd.DTDIdAttr;

        $r3 = r1.<com.ctc.wstx.dtd.DTDIdAttr: com.ctc.wstx.dtd.NameKey mName>;

        $r2 = r1.<com.ctc.wstx.dtd.DTDIdAttr: com.ctc.wstx.dtd.DefaultAttrValue mDefValue>;

        $z1 = r1.<com.ctc.wstx.dtd.DTDIdAttr: boolean mCfgNsAware>;

        $z0 = r1.<com.ctc.wstx.dtd.DTDIdAttr: boolean mCfgXml11>;

        specialinvoke $r0.<com.ctc.wstx.dtd.DTDIdAttr: void <init>(com.ctc.wstx.dtd.NameKey,com.ctc.wstx.dtd.DefaultAttrValue,int,boolean,boolean)>($r3, $r2, i0, $z1, $z0);

        return $r0;
    }

    public int getValueType()
    {
        com.ctc.wstx.dtd.DTDIdAttr r0;

        r0 := @this: com.ctc.wstx.dtd.DTDIdAttr;

        return 2;
    }

    public boolean typeIsId()
    {
        com.ctc.wstx.dtd.DTDIdAttr r0;

        r0 := @this: com.ctc.wstx.dtd.DTDIdAttr;

        return 1;
    }

    public java.lang.String validate(com.ctc.wstx.dtd.DTDValidatorBase, char[], int, int, boolean) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDValidatorBase r2;
        com.ctc.wstx.dtd.DTDIdAttr r1;
        com.ctc.wstx.dtd.NameKey $r4, $r6;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6, $z7, $z8;
        com.ctc.wstx.dtd.ElementId $r7;
        java.lang.StringBuffer $r11, $r13, $r14, $r16, $r22;
        int $i0, $i1, $i2, i6, i7, i8, i9, i10, $i13, $i15, $i16, $i17;
        java.lang.String $r9, $r12, $r17, $r18, $r19, $r20, $r21;
        char $c3, $c4, $c5, c11;
        com.ctc.wstx.dtd.ElementIdMap $r3;
        javax.xml.stream.Location $r5, $r8, $r15;
        char[] r0;

        r1 := @this: com.ctc.wstx.dtd.DTDIdAttr;

        r2 := @parameter0: com.ctc.wstx.dtd.DTDValidatorBase;

        r0 := @parameter1: char[];

        i6 := @parameter2: int;

        i7 := @parameter3: int;

        z3 := @parameter4: boolean;

     label01:
        if i6 >= i7 goto label02;

        $c5 = r0[i6];

        $z8 = staticinvoke <com.ctc.wstx.io.WstxInputData: boolean isSpaceChar(char)>($c5);

        if $z8 == 0 goto label02;

        i6 = i6 + 1;

        goto label01;

     label02:
        if i6 < i7 goto label03;

        $r21 = virtualinvoke r1.<com.ctc.wstx.dtd.DTDIdAttr: java.lang.String reportValidationProblem(com.ctc.wstx.dtd.DTDValidatorBase,java.lang.String)>(r2, "Empty ID value");

        return $r21;

     label03:
        $i13 = (int) -1;

        i8 = i7 + $i13;

     label04:
        if i8 <= i6 goto label05;

        $c3 = r0[i8];

        $z7 = staticinvoke <com.ctc.wstx.io.WstxInputData: boolean isSpaceChar(char)>($c3);

        if $z7 == 0 goto label05;

        $i15 = (int) -1;

        i8 = i8 + $i15;

        goto label04;

     label05:
        $c4 = r0[i6];

        $z1 = r1.<com.ctc.wstx.dtd.DTDIdAttr: boolean mCfgNsAware>;

        $z0 = r1.<com.ctc.wstx.dtd.DTDIdAttr: boolean mCfgXml11>;

        $z2 = staticinvoke <com.ctc.wstx.io.WstxInputData: boolean isNameStartChar(char,boolean,boolean)>($c4, $z1, $z0);

        if $z2 != 0 goto label06;

        $r20 = virtualinvoke r1.<com.ctc.wstx.dtd.DTDIdAttr: java.lang.String reportInvalidChar(com.ctc.wstx.dtd.DTDValidatorBase,char,java.lang.String)>(r2, $c4, "not valid as the first ID character");

        return $r20;

     label06:
        $i16 = (int) $c4;

        i9 = $i16;

        i10 = i6 + 1;

     label07:
        if i10 > i8 goto label09;

        c11 = r0[i10];

        $z5 = r1.<com.ctc.wstx.dtd.DTDIdAttr: boolean mCfgNsAware>;

        $z4 = r1.<com.ctc.wstx.dtd.DTDIdAttr: boolean mCfgXml11>;

        $z6 = staticinvoke <com.ctc.wstx.io.WstxInputData: boolean isNameChar(char,boolean,boolean)>(c11, $z5, $z4);

        if $z6 != 0 goto label08;

        $r19 = virtualinvoke r1.<com.ctc.wstx.dtd.DTDIdAttr: java.lang.String reportInvalidChar(com.ctc.wstx.dtd.DTDValidatorBase,char,java.lang.String)>(r2, c11, "not valid as an ID character");

        return $r19;

     label08:
        $i2 = i9 * 31;

        $i17 = (int) c11;

        i9 = $i2 + $i17;

        i10 = i10 + 1;

        goto label07;

     label09:
        $r3 = virtualinvoke r2.<com.ctc.wstx.dtd.DTDValidatorBase: com.ctc.wstx.dtd.ElementIdMap getIdMap()>();

        $r4 = virtualinvoke r2.<com.ctc.wstx.dtd.DTDValidatorBase: com.ctc.wstx.dtd.NameKey getElemName()>();

        $r5 = virtualinvoke r2.<com.ctc.wstx.dtd.DTDValidatorBase: javax.xml.stream.Location getLocation()>();

        $i0 = i8 - i6;

        $i1 = $i0 + 1;

        $r6 = r1.<com.ctc.wstx.dtd.DTDIdAttr: com.ctc.wstx.dtd.NameKey mName>;

        $r7 = virtualinvoke $r3.<com.ctc.wstx.dtd.ElementIdMap: com.ctc.wstx.dtd.ElementId addDefined(char[],int,int,int,javax.xml.stream.Location,com.ctc.wstx.dtd.NameKey,com.ctc.wstx.dtd.NameKey)>(r0, i6, $i1, i9, $r5, $r4, $r6);

        $r8 = virtualinvoke $r7.<com.ctc.wstx.dtd.ElementId: javax.xml.stream.Location getLocation()>();

        if $r8 == $r5 goto label10;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Duplicate id \'");

        $r12 = virtualinvoke $r7.<com.ctc.wstx.dtd.ElementId: java.lang.String getId()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\', first declared at ");

        $r15 = virtualinvoke $r7.<com.ctc.wstx.dtd.ElementId: javax.xml.stream.Location getLocation()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        $r18 = virtualinvoke r1.<com.ctc.wstx.dtd.DTDIdAttr: java.lang.String reportValidationProblem(com.ctc.wstx.dtd.DTDValidatorBase,java.lang.String)>(r2, $r17);

        return $r18;

     label10:
        if z3 == 0 goto label11;

        $r9 = virtualinvoke $r7.<com.ctc.wstx.dtd.ElementId: java.lang.String getId()>();

        return $r9;

     label11:
        return null;
    }

    public void validateDefault(com.ctc.wstx.sr.InputProblemReporter, boolean) throws org.codehaus.stax2.validation.XMLValidationException
    {
        com.ctc.wstx.dtd.DTDIdAttr r2;
        com.ctc.wstx.sr.InputProblemReporter r3;
        java.lang.Error $r0;
        java.lang.String $r1;
        boolean z0;

        r2 := @this: com.ctc.wstx.dtd.DTDIdAttr;

        r3 := @parameter0: com.ctc.wstx.sr.InputProblemReporter;

        z0 := @parameter1: boolean;

        $r0 = new java.lang.Error;

        $r1 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_INTERNAL>;

        specialinvoke $r0.<java.lang.Error: void <init>(java.lang.String)>($r1);

        throw $r0;
    }
}
