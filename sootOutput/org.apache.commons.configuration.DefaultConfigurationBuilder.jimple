public class org.apache.commons.configuration.DefaultConfigurationBuilder extends org.apache.commons.configuration.XMLConfiguration implements org.apache.commons.configuration.ConfigurationBuilder
{
    public static final java.lang.String ADDITIONAL_NAME;
    public static final int EVENT_ERR_LOAD_OPTIONAL;
    static final java.lang.String CONFIG_BEAN_FACTORY_NAME;
    static final java.lang.String ATTR_NAME;
    static final java.lang.String ATTR_ATNAME;
    static final java.lang.String ATTR_AT_RES;
    static final java.lang.String ATTR_AT;
    static final java.lang.String ATTR_OPTIONALNAME;
    static final java.lang.String ATTR_OPTIONAL_RES;
    static final java.lang.String ATTR_OPTIONAL;
    static final java.lang.String ATTR_FILENAME;
    static final java.lang.String ATTR_FORCECREATE;
    static final java.lang.String KEY_SYSTEM_PROPS;
    static final java.lang.String SEC_HEADER;
    static final java.lang.String KEY_UNION;
    static final java.lang.String[] CONFIG_SECTIONS;
    static final java.lang.String KEY_OVERRIDE;
    static final java.lang.String KEY_OVERRIDE_LIST;
    static final java.lang.String KEY_ADDITIONAL_LIST;
    static final java.lang.String KEY_CONFIGURATION_PROVIDERS;
    static final java.lang.String KEY_PROVIDER_KEY;
    static final java.lang.String KEY_CONFIGURATION_LOOKUPS;
    static final java.lang.String KEY_LOOKUP_KEY;
    static final java.lang.String KEY_RESULT;
    static final java.lang.String KEY_COMBINER;
    static final java.lang.String EXT_XML;
    private static final org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider PROPERTIES_PROVIDER;
    private static final org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider XML_PROVIDER;
    private static final org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider JNDI_PROVIDER;
    private static final org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider SYSTEM_PROVIDER;
    private static final org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider PLIST_PROVIDER;
    private static final org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider BUILDER_PROVIDER;
    private static final java.lang.String[] DEFAULT_TAGS;
    private static final org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider[] DEFAULT_PROVIDERS;
    private static final long serialVersionUID;
    private org.apache.commons.configuration.CombinedConfiguration constructedConfiguration;
    private java.util.Map providers;
    private java.lang.String configurationBasePath;
    static java.lang.Class class$org$apache$commons$configuration$DefaultConfigurationBuilder;
    static java.lang.Class class$org$apache$commons$configuration$XMLPropertiesConfiguration;
    static java.lang.Class class$org$apache$commons$configuration$PropertiesConfiguration;
    static java.lang.Class class$org$apache$commons$configuration$JNDIConfiguration;
    static java.lang.Class class$org$apache$commons$configuration$SystemConfiguration;
    static java.lang.Class class$org$apache$commons$configuration$CombinedConfiguration;
    static java.lang.Class class$org$apache$commons$configuration$Configuration;
    static java.lang.Class class$org$apache$commons$configuration$XMLConfiguration;

    public void <init>()
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        java.util.HashMap $r1;
        java.lang.Class $r2;
        org.apache.commons.logging.Log $r3;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        specialinvoke r0.<org.apache.commons.configuration.XMLConfiguration: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.util.Map providers> = $r1;

        virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void registerDefaultProviders()>();

        specialinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void registerBeanFactory()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r2);

        virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void setLogger(org.apache.commons.logging.Log)>($r3);

        virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void addErrorLogListener()>();

        return;
    }

    public void <init>(java.io.File)
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        java.io.File r1;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void <init>()>();

        virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void setFile(java.io.File)>(r1);

        return;
    }

    public void <init>(java.lang.String) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void <init>()>();

        virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void setFileName(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.net.URL) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        java.net.URL r1;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        r1 := @parameter0: java.net.URL;

        specialinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void <init>()>();

        virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void setURL(java.net.URL)>(r1);

        return;
    }

    public java.lang.String getConfigurationBasePath()
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        $r1 = r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String configurationBasePath>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String configurationBasePath>;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String getBasePath()>();

     label2:
        return $r2;
    }

    public void setConfigurationBasePath(java.lang.String)
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String configurationBasePath> = r1;

        return;
    }

    public void addConfigurationProvider(java.lang.String, org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider)
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder r2;
        java.util.Map $r3;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider r1;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r4, $r5;

        r2 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Tag name must not be null!");

        throw $r5;

     label1:
        if r1 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Provider must not be null!");

        throw $r4;

     label2:
        $r3 = r2.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.util.Map providers>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    public org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider removeConfigurationProvider(java.lang.String)
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider $r4;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.util.Map providers>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = (org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider) $r3;

        return $r4;
    }

    public org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider providerForTag(java.lang.String)
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider $r4;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.util.Map providers>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider) $r3;

        return $r4;
    }

    public org.apache.commons.configuration.Configuration getConfiguration() throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.CombinedConfiguration getConfiguration(boolean)>(1);

        return $r1;
    }

    public org.apache.commons.configuration.CombinedConfiguration getConfiguration(boolean) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.tree.UnionCombiner $r6;
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        java.util.List $r2, $r3, $r4;
        org.apache.commons.configuration.CombinedConfiguration $r1, $r5;
        java.lang.String $r7;
        boolean z0, $z1;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void load()>();

     label1:
        virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void initSystemProperties()>();

        virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void registerConfiguredProviders()>();

        virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void registerConfiguredLookups()>();

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.CombinedConfiguration createResultConfiguration()>();

        r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.CombinedConfiguration constructedConfiguration> = $r1;

        $r2 = specialinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.util.List fetchTopLevelOverrideConfigs()>();

        $r3 = specialinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.util.List fetchChildConfigs(java.lang.String)>("override");

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void initCombinedConfiguration(org.apache.commons.configuration.CombinedConfiguration,java.util.List,java.lang.String)>($r1, $r2, "header.combiner.override.list-nodes.node");

        $r4 = specialinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.util.List fetchChildConfigs(java.lang.String)>("additional");

        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r5 = new org.apache.commons.configuration.CombinedConfiguration;

        $r6 = new org.apache.commons.configuration.tree.UnionCombiner;

        specialinvoke $r6.<org.apache.commons.configuration.tree.UnionCombiner: void <init>()>();

        specialinvoke $r5.<org.apache.commons.configuration.CombinedConfiguration: void <init>(org.apache.commons.configuration.tree.NodeCombiner)>($r6);

        $r7 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String ADDITIONAL_NAME>;

        virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: void addConfiguration(org.apache.commons.configuration.AbstractConfiguration,java.lang.String)>($r5, $r7);

        virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void initCombinedConfiguration(org.apache.commons.configuration.CombinedConfiguration,java.util.List,java.lang.String)>($r5, $r4, "header.combiner.additional.list-nodes.node");

     label2:
        return $r1;
    }

    protected org.apache.commons.configuration.CombinedConfiguration createResultConfiguration() throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder r1;
        org.apache.commons.configuration.tree.OverrideCombiner $r4;
        int $i0;
        java.lang.Class $r2, $r6;
        java.lang.Object $r3;
        org.apache.commons.configuration.CombinedConfiguration $r5;
        org.apache.commons.configuration.beanutils.XMLBeanDeclaration $r0;

        r1 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        $r0 = new org.apache.commons.configuration.beanutils.XMLBeanDeclaration;

        specialinvoke $r0.<org.apache.commons.configuration.beanutils.XMLBeanDeclaration: void <init>(org.apache.commons.configuration.HierarchicalConfiguration,java.lang.String,boolean)>(r1, "header.result", 1);

        $r2 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$CombinedConfiguration>;

        if $r2 != null goto label1;

        $r6 = staticinvoke <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.CombinedConfiguration");

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$CombinedConfiguration> = $r6;

        goto label2;

     label1:
        $r6 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$CombinedConfiguration>;

     label2:
        $r3 = staticinvoke <org.apache.commons.configuration.beanutils.BeanHelper: java.lang.Object createBean(org.apache.commons.configuration.beanutils.BeanDeclaration,java.lang.Class)>($r0, $r6);

        $r5 = (org.apache.commons.configuration.CombinedConfiguration) $r3;

        $i0 = virtualinvoke r1.<org.apache.commons.configuration.DefaultConfigurationBuilder: int getMaxIndex(java.lang.String)>("header.result.nodeCombiner");

        if $i0 >= 0 goto label3;

        $r4 = new org.apache.commons.configuration.tree.OverrideCombiner;

        specialinvoke $r4.<org.apache.commons.configuration.tree.OverrideCombiner: void <init>()>();

        virtualinvoke $r5.<org.apache.commons.configuration.CombinedConfiguration: void setNodeCombiner(org.apache.commons.configuration.tree.NodeCombiner)>($r4);

     label3:
        return $r5;
    }

    protected void initCombinedConfiguration(org.apache.commons.configuration.CombinedConfiguration, java.util.List, java.lang.String) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.tree.NodeCombiner $r14;
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        org.apache.commons.configuration.AbstractConfiguration $r9;
        java.lang.String r1, $r12, $r13, $r16;
        boolean $z0, $z1;
        java.util.Iterator $r3, $r5;
        org.apache.commons.configuration.HierarchicalConfiguration r7;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration $r8;
        java.util.List $r2, r4;
        java.lang.Object $r6, $r15;
        org.apache.commons.configuration.CombinedConfiguration r10;
        org.apache.commons.configuration.SubnodeConfiguration $r11;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        r10 := @parameter0: org.apache.commons.configuration.CombinedConfiguration;

        r4 := @parameter1: java.util.List;

        r1 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.util.List getList(java.lang.String)>(r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = virtualinvoke r10.<org.apache.commons.configuration.CombinedConfiguration: org.apache.commons.configuration.tree.NodeCombiner getNodeCombiner()>();

        $r15 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (java.lang.String) $r15;

        virtualinvoke $r14.<org.apache.commons.configuration.tree.NodeCombiner: void addListNode(java.lang.String)>($r16);

        goto label1;

     label2:
        $r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.commons.configuration.HierarchicalConfiguration) $r6;

        $r8 = new org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration;

        specialinvoke $r8.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration: void <init>(org.apache.commons.configuration.DefaultConfigurationBuilder,org.apache.commons.configuration.HierarchicalConfiguration)>(r0, r7);

        $r9 = specialinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.AbstractConfiguration createConfigurationAt(org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration)>($r8);

        if $r9 == null goto label4;

        $r11 = virtualinvoke $r8.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration: org.apache.commons.configuration.SubnodeConfiguration getConfiguration()>();

        $r12 = virtualinvoke $r11.<org.apache.commons.configuration.SubnodeConfiguration: java.lang.String getString(java.lang.String)>("[@config-name]");

        $r13 = virtualinvoke $r8.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration: java.lang.String getAt()>();

        virtualinvoke r10.<org.apache.commons.configuration.CombinedConfiguration: void addConfiguration(org.apache.commons.configuration.AbstractConfiguration,java.lang.String,java.lang.String)>($r9, $r12, $r13);

     label4:
        goto label3;

     label5:
        return;
    }

    protected void registerDefaultProviders()
    {
        java.lang.String[] $r0, $r2;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider[] $r3;
        org.apache.commons.configuration.DefaultConfigurationBuilder r1;
        int $i0, i1;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider $r4;
        java.lang.String $r5;

        r1 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        i1 = 0;

     label1:
        $r0 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String[] DEFAULT_TAGS>;

        $i0 = lengthof $r0;

        if i1 >= $i0 goto label2;

        $r2 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String[] DEFAULT_TAGS>;

        $r5 = $r2[i1];

        $r3 = <org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider[] DEFAULT_PROVIDERS>;

        $r4 = $r3[i1];

        virtualinvoke r1.<org.apache.commons.configuration.DefaultConfigurationBuilder: void addConfigurationProvider(java.lang.String,org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider)>($r5, $r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void registerConfiguredProviders() throws org.apache.commons.configuration.ConfigurationException
    {
        java.util.Iterator $r2;
        org.apache.commons.configuration.HierarchicalConfiguration r4;
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        java.util.List $r1;
        java.lang.Object $r3, $r7;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider $r8;
        java.lang.String $r6;
        org.apache.commons.configuration.beanutils.XMLBeanDeclaration $r5;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.util.List configurationsAt(java.lang.String)>("header.providers.provider");

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.commons.configuration.HierarchicalConfiguration) $r3;

        $r5 = new org.apache.commons.configuration.beanutils.XMLBeanDeclaration;

        specialinvoke $r5.<org.apache.commons.configuration.beanutils.XMLBeanDeclaration: void <init>(org.apache.commons.configuration.HierarchicalConfiguration)>(r4);

        $r6 = virtualinvoke r4.<org.apache.commons.configuration.HierarchicalConfiguration: java.lang.String getString(java.lang.String)>("[@config-tag]");

        $r7 = staticinvoke <org.apache.commons.configuration.beanutils.BeanHelper: java.lang.Object createBean(org.apache.commons.configuration.beanutils.BeanDeclaration)>($r5);

        $r8 = (org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider) $r7;

        virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: void addConfigurationProvider(java.lang.String,org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider)>($r6, $r8);

        goto label1;

     label2:
        return;
    }

    protected void registerConfiguredLookups() throws org.apache.commons.configuration.ConfigurationException
    {
        java.util.Iterator $r2;
        org.apache.commons.configuration.HierarchicalConfiguration r4;
        org.apache.commons.lang.text.StrLookup $r8;
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        java.util.List $r1;
        java.lang.Object $r3, $r7;
        java.lang.String $r6;
        org.apache.commons.configuration.beanutils.XMLBeanDeclaration $r5;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.util.List configurationsAt(java.lang.String)>("header.lookups.lookup");

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.commons.configuration.HierarchicalConfiguration) $r3;

        $r5 = new org.apache.commons.configuration.beanutils.XMLBeanDeclaration;

        specialinvoke $r5.<org.apache.commons.configuration.beanutils.XMLBeanDeclaration: void <init>(org.apache.commons.configuration.HierarchicalConfiguration)>(r4);

        $r6 = virtualinvoke r4.<org.apache.commons.configuration.HierarchicalConfiguration: java.lang.String getString(java.lang.String)>("[@config-prefix]");

        $r7 = staticinvoke <org.apache.commons.configuration.beanutils.BeanHelper: java.lang.Object createBean(org.apache.commons.configuration.beanutils.BeanDeclaration)>($r5);

        $r8 = (org.apache.commons.lang.text.StrLookup) $r7;

        staticinvoke <org.apache.commons.configuration.interpol.ConfigurationInterpolator: void registerGlobalLookup(java.lang.String,org.apache.commons.lang.text.StrLookup)>($r6, $r8);

        goto label1;

     label2:
        return;
    }

    protected void initSystemProperties() throws org.apache.commons.configuration.ConfigurationException
    {
        java.lang.Exception $r2;
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        java.lang.StringBuffer $r4, $r5, $r6;
        java.lang.String $r1, $r7;
        org.apache.commons.configuration.ConfigurationException $r3;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String getString(java.lang.String)>("[@systemProperties]");

        if $r1 == null goto label4;

     label1:
        staticinvoke <org.apache.commons.configuration.SystemConfiguration: void setSystemProperties(java.lang.String)>($r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.apache.commons.configuration.ConfigurationException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error setting system properties from ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r2);

        throw $r3;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected java.lang.Object interpolate(java.lang.Object)
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        java.lang.Object r1, $r2, r5;
        org.apache.commons.configuration.CombinedConfiguration $r3, $r4;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.commons.configuration.XMLConfiguration: java.lang.Object interpolate(java.lang.Object)>(r1);

        r5 = $r2;

        $r3 = r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.CombinedConfiguration constructedConfiguration>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.CombinedConfiguration constructedConfiguration>;

        r5 = virtualinvoke $r4.<org.apache.commons.configuration.CombinedConfiguration: java.lang.Object interpolate(java.lang.Object)>($r2);

     label1:
        return r5;
    }

    protected void fireError(int, java.lang.String, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r3;
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        int i0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Throwable;

        specialinvoke r0.<org.apache.commons.configuration.XMLConfiguration: void fireError(int,java.lang.String,java.lang.Object,java.lang.Throwable)>(i0, r1, r2, r3);

        return;
    }

    private org.apache.commons.configuration.AbstractConfiguration createConfigurationAt(org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration r0;
        org.apache.commons.configuration.DefaultConfigurationBuilder r5;
        org.apache.commons.configuration.AbstractConfiguration $r2;
        java.lang.Object $r1;
        java.lang.Exception $r3;
        org.apache.commons.configuration.ConfigurationException $r4;

        r5 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        r0 := @parameter0: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration;

     label1:
        $r1 = staticinvoke <org.apache.commons.configuration.beanutils.BeanHelper: java.lang.Object createBean(org.apache.commons.configuration.beanutils.BeanDeclaration)>(r0);

        $r2 = (org.apache.commons.configuration.AbstractConfiguration) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r4.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private java.util.List fetchChildConfigs(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        java.util.Iterator $r3;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r6;
        org.apache.commons.configuration.tree.ConfigurationNode r0;
        java.util.ArrayList $r2;
        java.util.List $r1;
        org.apache.commons.configuration.DefaultConfigurationBuilder r4;
        int $i0;
        java.lang.Object $r5;
        boolean $z0;
        org.apache.commons.configuration.SubnodeConfiguration $r7;

        r4 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        r0 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        $r1 = interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>();

        $r2 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.apache.commons.configuration.HierarchicalConfiguration$Node) $r5;

        $r7 = virtualinvoke r4.<org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.SubnodeConfiguration createSubnodeConfiguration(org.apache.commons.configuration.tree.ConfigurationNode)>($r6);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        return $r2;
    }

    private java.util.List fetchChildConfigs(java.lang.String)
    {
        org.apache.commons.configuration.tree.ConfigurationNode $r5;
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        java.util.List $r2, $r3, $r6;
        int $i0;
        java.lang.Object $r4;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.util.List fetchNodeList(java.lang.String)>(r1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (org.apache.commons.configuration.tree.ConfigurationNode) $r4;

        $r6 = specialinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.util.List fetchChildConfigs(org.apache.commons.configuration.tree.ConfigurationNode)>($r5);

        return $r6;

     label1:
        $r3 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r3;
    }

    private java.util.List fetchTopLevelOverrideConfigs()
    {
        java.util.Iterator $r3;
        java.lang.String[] $r8, $r9;
        org.apache.commons.configuration.tree.ConfigurationNode $r1, $r6;
        org.apache.commons.configuration.DefaultConfigurationBuilder r0;
        java.util.List $r2;
        int $i0, i1;
        java.lang.Object $r4;
        java.lang.String $r7, $r10;
        boolean $z0, $z1;
        org.apache.commons.configuration.SubnodeConfiguration $r5;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        $r2 = specialinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder: java.util.List fetchChildConfigs(org.apache.commons.configuration.tree.ConfigurationNode)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.apache.commons.configuration.SubnodeConfiguration) $r4;

        $r6 = virtualinvoke $r5.<org.apache.commons.configuration.SubnodeConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        $r7 = interfaceinvoke $r6.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.String getName()>();

        i1 = 0;

     label2:
        $r8 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String[] CONFIG_SECTIONS>;

        $i0 = lengthof $r8;

        if i1 >= $i0 goto label4;

        $r9 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String[] CONFIG_SECTIONS>;

        $r10 = $r9[i1];

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label3;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        goto label1;

     label5:
        return $r2;
    }

    private void registerBeanFactory()
    {
        java.lang.Throwable $r6;
        java.util.Set $r2;
        org.apache.commons.configuration.DefaultConfigurationBuilder r7;
        java.lang.Class $r0, r1, $r8;
        java.lang.String $r3, $r5;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBeanFactory $r4;
        boolean $z0;

        r7 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder;

        $r0 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$DefaultConfigurationBuilder>;

        if $r0 != null goto label1;

        $r8 = staticinvoke <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.DefaultConfigurationBuilder");

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$DefaultConfigurationBuilder> = $r8;

        goto label2;

     label1:
        $r8 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$DefaultConfigurationBuilder>;

     label2:
        r1 = $r8;

        entermonitor $r8;

     label3:
        $r2 = staticinvoke <org.apache.commons.configuration.beanutils.BeanHelper: java.util.Set registeredFactoryNames()>();

        $r3 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String CONFIG_BEAN_FACTORY_NAME>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label4;

        $r5 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String CONFIG_BEAN_FACTORY_NAME>;

        $r4 = new org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBeanFactory;

        specialinvoke $r4.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBeanFactory: void <init>()>();

        staticinvoke <org.apache.commons.configuration.beanutils.BeanHelper: void registerBeanFactory(java.lang.String,org.apache.commons.configuration.beanutils.BeanFactory)>($r5, $r4);

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r6 := @caughtexception;

        exitmonitor r1;

     label7:
        throw $r6;

     label8:
        return;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$FileExtensionConfigurationProvider $r18, $r32;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider $r15, $r16, $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider[] $r21;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBuilderProvider $r19;
        java.lang.String[] $r12, $r20;
        java.lang.StringBuffer $r0, $r3, $r4, $r6, $r9, $r10;
        java.lang.String $r2, $r5, $r8, $r11;
        org.apache.commons.configuration.DefaultConfigurationBuilder$XMLConfigurationProvider $r36;
        java.lang.Class $r1, $r7, $r13, $r14, $r17, $r29, $r30, $r31, $r33, $r34, $r35, $r37, $r38, $r39;

        <org.apache.commons.configuration.DefaultConfigurationBuilder: long serialVersionUID> = -3113777854714492123L;

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String EXT_XML> = ".xml";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String KEY_COMBINER> = "header.result.nodeCombiner";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String KEY_RESULT> = "header.result";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String KEY_LOOKUP_KEY> = "[@config-prefix]";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String KEY_CONFIGURATION_LOOKUPS> = "header.lookups.lookup";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String KEY_PROVIDER_KEY> = "[@config-tag]";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String KEY_CONFIGURATION_PROVIDERS> = "header.providers.provider";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String KEY_ADDITIONAL_LIST> = "header.combiner.additional.list-nodes.node";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String KEY_OVERRIDE_LIST> = "header.combiner.override.list-nodes.node";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String KEY_OVERRIDE> = "override";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String KEY_UNION> = "additional";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String SEC_HEADER> = "header";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String KEY_SYSTEM_PROPS> = "[@systemProperties]";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String ATTR_FORCECREATE> = "[@config-forceCreate]";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String ATTR_FILENAME> = "[@fileName]";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String ATTR_OPTIONAL> = "[@optional]";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String ATTR_OPTIONAL_RES> = "[@config-optional]";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String ATTR_OPTIONALNAME> = "optional";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String ATTR_AT> = "[@at]";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String ATTR_AT_RES> = "[@config-at]";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String ATTR_ATNAME> = "at";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String ATTR_NAME> = "[@config-name]";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: int EVENT_ERR_LOAD_OPTIONAL> = 51;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$DefaultConfigurationBuilder>;

        if $r1 != null goto label01;

        $r30 = staticinvoke <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.DefaultConfigurationBuilder");

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$DefaultConfigurationBuilder> = $r30;

        goto label02;

     label01:
        $r30 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$DefaultConfigurationBuilder>;

     label02:
        $r2 = virtualinvoke $r30.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/ADDITIONAL_CONFIG");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String ADDITIONAL_NAME> = $r5;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$DefaultConfigurationBuilder>;

        if $r7 != null goto label03;

        $r31 = staticinvoke <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.DefaultConfigurationBuilder");

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$DefaultConfigurationBuilder> = $r31;

        goto label04;

     label03:
        $r31 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$DefaultConfigurationBuilder>;

     label04:
        $r8 = virtualinvoke $r31.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".CONFIG_BEAN_FACTORY_NAME");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String CONFIG_BEAN_FACTORY_NAME> = $r11;

        $r12 = newarray (java.lang.String)[3];

        $r12[0] = "additional";

        $r12[1] = "override";

        $r12[2] = "header";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String[] CONFIG_SECTIONS> = $r12;

        $r32 = new org.apache.commons.configuration.DefaultConfigurationBuilder$FileExtensionConfigurationProvider;

        $r13 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$XMLPropertiesConfiguration>;

        if $r13 != null goto label05;

        $r29 = staticinvoke <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.XMLPropertiesConfiguration");

        $r33 = $r29;

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$XMLPropertiesConfiguration> = $r29;

        goto label06;

     label05:
        $r33 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$XMLPropertiesConfiguration>;

     label06:
        $r14 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$PropertiesConfiguration>;

        if $r14 != null goto label07;

        $r34 = staticinvoke <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.PropertiesConfiguration");

        $r35 = $r34;

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$PropertiesConfiguration> = $r34;

        goto label08;

     label07:
        $r35 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$PropertiesConfiguration>;

     label08:
        specialinvoke $r32.<org.apache.commons.configuration.DefaultConfigurationBuilder$FileExtensionConfigurationProvider: void <init>(java.lang.Class,java.lang.Class,java.lang.String)>($r33, $r35, ".xml");

        <org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider PROPERTIES_PROVIDER> = $r32;

        $r36 = new org.apache.commons.configuration.DefaultConfigurationBuilder$XMLConfigurationProvider;

        specialinvoke $r36.<org.apache.commons.configuration.DefaultConfigurationBuilder$XMLConfigurationProvider: void <init>()>();

        <org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider XML_PROVIDER> = $r36;

        $r15 = new org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider;

        $r37 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$JNDIConfiguration>;

        if $r37 != null goto label09;

        $r38 = staticinvoke <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.JNDIConfiguration");

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$JNDIConfiguration> = $r38;

        goto label10;

     label09:
        $r38 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$JNDIConfiguration>;

     label10:
        specialinvoke $r15.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: void <init>(java.lang.Class)>($r38);

        <org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider JNDI_PROVIDER> = $r15;

        $r16 = new org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider;

        $r17 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$SystemConfiguration>;

        if $r17 != null goto label11;

        $r39 = staticinvoke <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.SystemConfiguration");

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$SystemConfiguration> = $r39;

        goto label12;

     label11:
        $r39 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$SystemConfiguration>;

     label12:
        specialinvoke $r16.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: void <init>(java.lang.Class)>($r39);

        <org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider SYSTEM_PROVIDER> = $r16;

        $r18 = new org.apache.commons.configuration.DefaultConfigurationBuilder$FileExtensionConfigurationProvider;

        specialinvoke $r18.<org.apache.commons.configuration.DefaultConfigurationBuilder$FileExtensionConfigurationProvider: void <init>(java.lang.String,java.lang.String,java.lang.String)>("org.apache.commons.configuration.plist.XMLPropertyListConfiguration", "org.apache.commons.configuration.plist.PropertyListConfiguration", ".xml");

        <org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider PLIST_PROVIDER> = $r18;

        $r19 = new org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBuilderProvider;

        specialinvoke $r19.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBuilderProvider: void <init>()>();

        <org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider BUILDER_PROVIDER> = $r19;

        $r20 = newarray (java.lang.String)[7];

        $r20[0] = "properties";

        $r20[1] = "xml";

        $r20[2] = "hierarchicalXml";

        $r20[3] = "jndi";

        $r20[4] = "system";

        $r20[5] = "plist";

        $r20[6] = "configuration";

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.String[] DEFAULT_TAGS> = $r20;

        $r21 = newarray (org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider)[7];

        $r22 = <org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider PROPERTIES_PROVIDER>;

        $r21[0] = $r22;

        $r23 = <org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider XML_PROVIDER>;

        $r21[1] = $r23;

        $r24 = <org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider XML_PROVIDER>;

        $r21[2] = $r24;

        $r25 = <org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider JNDI_PROVIDER>;

        $r21[3] = $r25;

        $r26 = <org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider SYSTEM_PROVIDER>;

        $r21[4] = $r26;

        $r27 = <org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider PLIST_PROVIDER>;

        $r21[5] = $r27;

        $r28 = <org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider BUILDER_PROVIDER>;

        $r21[6] = $r28;

        <org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider[] DEFAULT_PROVIDERS> = $r21;

        return;
    }
}
