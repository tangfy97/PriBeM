public class org.waveprotocol.box.server.waveserver.WaveDigester extends java.lang.Object
{
    private final org.waveprotocol.box.server.robots.util.ConversationUtil conversationUtil;
    private static final int DIGEST_SNIPPET_LENGTH;
    private static final int PARTICIPANTS_SNIPPET_LENGTH;
    private static final java.lang.String EMPTY_WAVELET_TITLE;
    static final boolean $assertionsDisabled;

    public void <init>(org.waveprotocol.box.server.robots.util.ConversationUtil)
    {
        org.waveprotocol.box.server.robots.util.ConversationUtil r1;
        org.waveprotocol.box.server.waveserver.WaveDigester r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveDigester;

        r1 := @parameter0: org.waveprotocol.box.server.robots.util.ConversationUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.server.waveserver.WaveDigester: org.waveprotocol.box.server.robots.util.ConversationUtil conversationUtil> = r1;

        return;
    }

    public com.google.wave.api.SearchResult generateSearchResult(org.waveprotocol.wave.model.wave.ParticipantId, java.lang.String, java.util.Collection)
    {
        org.waveprotocol.wave.model.wave.ParticipantId r16;
        org.waveprotocol.wave.model.conversation.ObservableConversationView $r15, r26;
        com.google.wave.api.SearchResult$Digest $r11, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Collection r2;
        java.util.List $r4;
        org.waveprotocol.wave.model.wave.data.WaveViewData r7;
        org.waveprotocol.wave.model.supplement.SupplementedWave r25;
        org.waveprotocol.wave.model.id.WaveletId $r18;
        java.lang.AssertionError $r5;
        org.waveprotocol.wave.model.wave.opbased.OpBasedWavelet $r13;
        java.lang.Iterable $r8;
        int $i0, $i1;
        java.lang.String r1;
        org.waveprotocol.box.server.robots.util.ConversationUtil $r14;
        com.google.wave.api.SearchResult $r0;
        java.util.Iterator $r3, $r9;
        org.waveprotocol.wave.model.wave.data.ObservableWaveletData r19, r20, r21, r22, $r23, r24;
        java.lang.Object $r6, $r17;
        org.waveprotocol.box.server.waveserver.WaveDigester r10;

        r10 := @this: org.waveprotocol.box.server.waveserver.WaveDigester;

        r16 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Collection;

        $r0 = new com.google.wave.api.SearchResult;

        specialinvoke $r0.<com.google.wave.api.SearchResult: void <init>(java.lang.String)>(r1);

        if r2 != null goto label01;

        return $r0;

     label01:
        $r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.waveprotocol.wave.model.wave.data.WaveViewData) $r6;

        r19 = null;

        r20 = null;

        r21 = null;

        $r8 = interfaceinvoke r7.<org.waveprotocol.wave.model.wave.data.WaveViewData: java.lang.Iterable getWavelets()>();

        $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r17 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.waveprotocol.wave.model.wave.data.ObservableWaveletData) $r17;

        $r18 = interfaceinvoke r22.<org.waveprotocol.wave.model.wave.data.ObservableWaveletData: org.waveprotocol.wave.model.id.WaveletId getWaveletId()>();

        $z4 = staticinvoke <org.waveprotocol.wave.model.id.IdUtil: boolean isConversationRootWaveletId(org.waveprotocol.wave.model.id.WaveletId)>($r18);

        if $z4 == 0 goto label04;

        r19 = r22;

        goto label06;

     label04:
        $z5 = staticinvoke <org.waveprotocol.wave.model.id.IdUtil: boolean isConversationalId(org.waveprotocol.wave.model.id.WaveletId)>($r18);

        if $z5 == 0 goto label05;

        r20 = r22;

        goto label06;

     label05:
        $z6 = staticinvoke <org.waveprotocol.wave.model.id.IdUtil: boolean isUserDataWavelet(org.waveprotocol.wave.model.id.WaveletId)>($r18);

        if $z6 == 0 goto label06;

        r21 = r22;

     label06:
        goto label03;

     label07:
        if r19 == null goto label08;

        $r23 = r19;

        goto label09;

     label08:
        $r23 = r20;

     label09:
        r24 = $r23;

        r25 = null;

        r26 = null;

        if $r23 == null goto label10;

        $r13 = staticinvoke <org.waveprotocol.wave.model.wave.opbased.OpBasedWavelet: org.waveprotocol.wave.model.wave.opbased.OpBasedWavelet createReadOnly(org.waveprotocol.wave.model.wave.data.ObservableWaveletData)>($r23);

        $z3 = staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: boolean waveletHasConversation(org.waveprotocol.wave.model.wave.Wavelet)>($r13);

        if $z3 == 0 goto label10;

        $r14 = r10.<org.waveprotocol.box.server.waveserver.WaveDigester: org.waveprotocol.box.server.robots.util.ConversationUtil conversationUtil>;

        $r15 = virtualinvoke $r14.<org.waveprotocol.box.server.robots.util.ConversationUtil: org.waveprotocol.wave.model.conversation.ObservableConversationView buildConversation(org.waveprotocol.wave.model.wave.ObservableWavelet)>($r13);

        r26 = $r15;

        r25 = virtualinvoke r10.<org.waveprotocol.box.server.waveserver.WaveDigester: org.waveprotocol.wave.model.supplement.SupplementedWave buildSupplement(org.waveprotocol.wave.model.wave.ParticipantId,org.waveprotocol.wave.model.conversation.ObservableConversationView,org.waveprotocol.wave.model.wave.data.ObservableWaveletData)>(r16, $r15, r21);

     label10:
        if r26 == null goto label11;

        $r12 = virtualinvoke r10.<org.waveprotocol.box.server.waveserver.WaveDigester: com.google.wave.api.SearchResult$Digest generateDigest(org.waveprotocol.wave.model.conversation.ObservableConversationView,org.waveprotocol.wave.model.supplement.SupplementedWave,org.waveprotocol.wave.model.wave.data.WaveletData)>(r26, r25, r24);

        virtualinvoke $r0.<com.google.wave.api.SearchResult: void addDigest(com.google.wave.api.SearchResult$Digest)>($r12);

        goto label12;

     label11:
        $r11 = virtualinvoke r10.<org.waveprotocol.box.server.waveserver.WaveDigester: com.google.wave.api.SearchResult$Digest generateEmptyorUnknownDigest(org.waveprotocol.wave.model.wave.data.WaveViewData)>(r7);

        virtualinvoke $r0.<com.google.wave.api.SearchResult: void addDigest(com.google.wave.api.SearchResult$Digest)>($r11);

     label12:
        goto label02;

     label13:
        $z1 = <org.waveprotocol.box.server.waveserver.WaveDigester: boolean $assertionsDisabled>;

        if $z1 != 0 goto label14;

        $r4 = virtualinvoke $r0.<com.google.wave.api.SearchResult: java.util.List getDigests()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i1 = interfaceinvoke r2.<java.util.Collection: int size()>();

        if $i0 == $i1 goto label14;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label14:
        return $r0;
    }

    com.google.wave.api.SearchResult$Digest generateDigest(org.waveprotocol.wave.model.conversation.ObservableConversationView, org.waveprotocol.wave.model.supplement.SupplementedWave, org.waveprotocol.wave.model.wave.data.WaveletData)
    {
        org.waveprotocol.wave.model.conversation.ObservableConversationThread $r15, $r16, $r18;
        org.waveprotocol.wave.model.wave.ParticipantId r29;
        org.waveprotocol.wave.model.conversation.ObservableConversation $r1;
        org.waveprotocol.wave.model.conversation.ObservableConversationView r0;
        com.google.wave.api.SearchResult$Digest $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.waveprotocol.wave.model.id.WaveId $r24;
        java.util.Set $r27;
        org.waveprotocol.wave.model.supplement.SupplementedWave r10;
        long $l0, $l1;
        java.lang.Iterable $r5;
        java.util.ArrayList $r26;
        org.waveprotocol.wave.model.conversation.ConversationBlip r9;
        org.waveprotocol.wave.model.conversation.ObservableConversationBlip $r17, r20;
        int $i2, $i3, i4, i5;
        java.lang.String $r3, $r4, $r12, $r14, r21, r22, $r25;
        org.waveprotocol.wave.model.id.IdSerialiser $r23;
        org.waveprotocol.wave.model.wave.data.WaveletData r2;
        java.util.Iterator $r6, $r28;
        org.waveprotocol.wave.model.document.Document $r13;
        java.lang.Object $r8, $r11;
        org.waveprotocol.box.server.waveserver.WaveDigester r19;

        r19 := @this: org.waveprotocol.box.server.waveserver.WaveDigester;

        r0 := @parameter0: org.waveprotocol.wave.model.conversation.ObservableConversationView;

        r10 := @parameter1: org.waveprotocol.wave.model.supplement.SupplementedWave;

        r2 := @parameter2: org.waveprotocol.wave.model.wave.data.WaveletData;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.model.conversation.ObservableConversationView: org.waveprotocol.wave.model.conversation.ObservableConversation getRoot()>();

        r20 = null;

        if $r1 == null goto label1;

        $r15 = interfaceinvoke $r1.<org.waveprotocol.wave.model.conversation.ObservableConversation: org.waveprotocol.wave.model.conversation.ObservableConversationThread getRootThread()>();

        if $r15 == null goto label1;

        $r16 = interfaceinvoke $r1.<org.waveprotocol.wave.model.conversation.ObservableConversation: org.waveprotocol.wave.model.conversation.ObservableConversationThread getRootThread()>();

        $r17 = interfaceinvoke $r16.<org.waveprotocol.wave.model.conversation.ObservableConversationThread: org.waveprotocol.wave.model.conversation.ObservableConversationBlip getFirstBlip()>();

        if $r17 == null goto label1;

        $r18 = interfaceinvoke $r1.<org.waveprotocol.wave.model.conversation.ObservableConversation: org.waveprotocol.wave.model.conversation.ObservableConversationThread getRootThread()>();

        r20 = interfaceinvoke $r18.<org.waveprotocol.wave.model.conversation.ObservableConversationThread: org.waveprotocol.wave.model.conversation.ObservableConversationBlip getFirstBlip()>();

     label1:
        if r20 == null goto label2;

        $r13 = interfaceinvoke r20.<org.waveprotocol.wave.model.conversation.ObservableConversationBlip: org.waveprotocol.wave.model.document.Document getContent()>();

        $r14 = staticinvoke <org.waveprotocol.wave.model.conversation.TitleHelper: java.lang.String extractTitle(org.waveprotocol.wave.model.document.ReadableWDocument)>($r13);

        r21 = virtualinvoke $r14.<java.lang.String: java.lang.String trim()>();

        goto label3;

     label2:
        r21 = "";

     label3:
        $r3 = staticinvoke <org.waveprotocol.box.common.Snippets: java.lang.String renderSnippet(org.waveprotocol.wave.model.wave.data.ReadableWaveletData,int)>(r2, 140);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        r22 = $r4;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>(r21);

        if $z0 == 0 goto label4;

        $z2 = virtualinvoke r21.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label4;

        $i3 = virtualinvoke r21.<java.lang.String: int length()>();

        r22 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i3);

     label4:
        $r23 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r24 = interfaceinvoke r2.<org.waveprotocol.wave.model.wave.data.WaveletData: org.waveprotocol.wave.model.id.WaveId getWaveId()>();

        $r25 = interfaceinvoke $r23.<org.waveprotocol.wave.model.id.IdSerialiser: java.lang.String serialiseWaveId(org.waveprotocol.wave.model.id.WaveId)>($r24);

        $r26 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: java.util.ArrayList newArrayList()>();

        $r27 = interfaceinvoke r2.<org.waveprotocol.wave.model.wave.data.WaveletData: java.util.Set getParticipants()>();

        $r28 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z3 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r11 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (org.waveprotocol.wave.model.wave.ParticipantId) $r11;

        $i2 = interfaceinvoke $r26.<java.util.List: int size()>();

        if $i2 >= 5 goto label6;

        $r12 = virtualinvoke r29.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label5;

     label6:
        i4 = 0;

        i5 = 0;

        $r5 = staticinvoke <org.waveprotocol.wave.model.conversation.BlipIterators: java.lang.Iterable breadthFirst(org.waveprotocol.wave.model.conversation.Conversation)>($r1);

        $r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label7:
        $z4 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label9;

        $r8 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.waveprotocol.wave.model.conversation.ConversationBlip) $r8;

        $z1 = interfaceinvoke r10.<org.waveprotocol.wave.model.supplement.SupplementedWave: boolean isUnread(org.waveprotocol.wave.model.conversation.ConversationBlip)>(r9);

        if $z1 == 0 goto label8;

        i4 = i4 + 1;

     label8:
        i5 = i5 + 1;

        goto label7;

     label9:
        $r7 = new com.google.wave.api.SearchResult$Digest;

        $l0 = interfaceinvoke r2.<org.waveprotocol.wave.model.wave.data.WaveletData: long getLastModifiedTime()>();

        $l1 = interfaceinvoke r2.<org.waveprotocol.wave.model.wave.data.WaveletData: long getCreationTime()>();

        specialinvoke $r7.<com.google.wave.api.SearchResult$Digest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,long,long,int,int)>(r21, r22, $r25, $r26, $l0, $l1, i4, i5);

        return $r7;
    }

    private com.google.wave.api.SearchResult$Digest emptyDigest(org.waveprotocol.wave.model.wave.data.WaveViewData)
    {
        org.waveprotocol.wave.model.id.WaveId $r2, $r5;
        java.util.List $r8;
        org.waveprotocol.wave.model.wave.data.WaveViewData r0;
        org.waveprotocol.wave.model.id.ModernIdSerialiser $r1;
        java.lang.String $r3, $r6;
        com.google.wave.api.SearchResult$Digest $r7;
        org.waveprotocol.wave.model.id.IdSerialiser $r4;
        org.waveprotocol.box.server.waveserver.WaveDigester r9;

        r9 := @this: org.waveprotocol.box.server.waveserver.WaveDigester;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveViewData;

        $r1 = <org.waveprotocol.wave.model.id.ModernIdSerialiser: org.waveprotocol.wave.model.id.ModernIdSerialiser INSTANCE>;

        $r2 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.data.WaveViewData: org.waveprotocol.wave.model.id.WaveId getWaveId()>();

        $r3 = virtualinvoke $r1.<org.waveprotocol.wave.model.id.ModernIdSerialiser: java.lang.String serialiseWaveId(org.waveprotocol.wave.model.id.WaveId)>($r2);

        $r4 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r5 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.data.WaveViewData: org.waveprotocol.wave.model.id.WaveId getWaveId()>();

        $r6 = interfaceinvoke $r4.<org.waveprotocol.wave.model.id.IdSerialiser: java.lang.String serialiseWaveId(org.waveprotocol.wave.model.id.WaveId)>($r5);

        $r7 = new com.google.wave.api.SearchResult$Digest;

        $r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        specialinvoke $r7.<com.google.wave.api.SearchResult$Digest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,long,long,int,int)>($r3, "(empty)", $r6, $r8, -1L, -1L, 0, 0);

        return $r7;
    }

    private com.google.wave.api.SearchResult$Digest unknownDigest(org.waveprotocol.wave.model.wave.data.WaveViewData)
    {
        long $l0, $l1, $l2, l5, l6;
        org.waveprotocol.wave.model.wave.ParticipantId r17;
        java.lang.Iterable $r8;
        java.util.ArrayList $r7;
        int $i3, $i4, i7;
        java.lang.String $r3, $r6, $r18;
        com.google.wave.api.SearchResult$Digest $r10;
        org.waveprotocol.wave.model.id.IdSerialiser $r4;
        boolean $z0, $z1;
        org.waveprotocol.wave.model.id.WaveId $r2, $r5;
        java.util.Iterator $r9, $r15;
        org.waveprotocol.wave.model.wave.data.ObservableWaveletData r12;
        java.util.Set $r13, $r14;
        org.waveprotocol.wave.model.wave.data.WaveViewData r0;
        org.waveprotocol.wave.model.id.ModernIdSerialiser $r1;
        java.lang.Object $r11, $r16;
        org.waveprotocol.box.server.waveserver.WaveDigester r19;

        r19 := @this: org.waveprotocol.box.server.waveserver.WaveDigester;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveViewData;

        $r1 = <org.waveprotocol.wave.model.id.ModernIdSerialiser: org.waveprotocol.wave.model.id.ModernIdSerialiser INSTANCE>;

        $r2 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.data.WaveViewData: org.waveprotocol.wave.model.id.WaveId getWaveId()>();

        $r3 = virtualinvoke $r1.<org.waveprotocol.wave.model.id.ModernIdSerialiser: java.lang.String serialiseWaveId(org.waveprotocol.wave.model.id.WaveId)>($r2);

        $r4 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r5 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.data.WaveViewData: org.waveprotocol.wave.model.id.WaveId getWaveId()>();

        $r6 = interfaceinvoke $r4.<org.waveprotocol.wave.model.id.IdSerialiser: java.lang.String serialiseWaveId(org.waveprotocol.wave.model.id.WaveId)>($r5);

        l5 = -1L;

        l6 = -1L;

        i7 = 0;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.data.WaveViewData: java.lang.Iterable getWavelets()>();

        $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.waveprotocol.wave.model.wave.data.ObservableWaveletData) $r11;

        $l0 = interfaceinvoke r12.<org.waveprotocol.wave.model.wave.data.WaveletData: long getLastModifiedTime()>();

        $l1 = staticinvoke <java.lang.Math: long max(long,long)>(l5, $l0);

        l5 = $l1;

        $l2 = interfaceinvoke r12.<org.waveprotocol.wave.model.wave.data.WaveletData: long getCreationTime()>();

        l6 = staticinvoke <java.lang.Math: long max(long,long)>($l1, $l2);

        $r13 = interfaceinvoke r12.<org.waveprotocol.wave.model.wave.data.WaveletData: java.util.Set getDocumentIds()>();

        $i3 = interfaceinvoke $r13.<java.util.Set: int size()>();

        i7 = i7 + $i3;

        $r14 = interfaceinvoke r12.<org.waveprotocol.wave.model.wave.data.WaveletData: java.util.Set getParticipants()>();

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.waveprotocol.wave.model.wave.ParticipantId) $r16;

        $i4 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i4 >= 5 goto label3;

        $r18 = virtualinvoke r17.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label2;

     label3:
        goto label1;

     label4:
        $r10 = new com.google.wave.api.SearchResult$Digest;

        specialinvoke $r10.<com.google.wave.api.SearchResult$Digest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,long,long,int,int)>($r3, "(unknown)", $r6, $r7, l5, l6, 0, i7);

        return $r10;
    }

    com.google.wave.api.SearchResult$Digest generateEmptyorUnknownDigest(org.waveprotocol.wave.model.wave.data.WaveViewData)
    {
        java.util.Iterator $r2;
        org.waveprotocol.wave.model.wave.data.WaveViewData r0;
        com.google.wave.api.SearchResult$Digest $r4;
        org.waveprotocol.box.server.waveserver.WaveDigester r3;
        java.lang.Iterable $r1;
        boolean $z0, $z1;

        r3 := @this: org.waveprotocol.box.server.waveserver.WaveDigester;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveViewData;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.data.WaveViewData: java.lang.Iterable getWavelets()>();

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r4 = specialinvoke r3.<org.waveprotocol.box.server.waveserver.WaveDigester: com.google.wave.api.SearchResult$Digest emptyDigest(org.waveprotocol.wave.model.wave.data.WaveViewData)>(r0);

        goto label4;

     label3:
        $r4 = specialinvoke r3.<org.waveprotocol.box.server.waveserver.WaveDigester: com.google.wave.api.SearchResult$Digest unknownDigest(org.waveprotocol.wave.model.wave.data.WaveViewData)>(r0);

     label4:
        return $r4;
    }

    org.waveprotocol.wave.model.supplement.SupplementedWave buildSupplement(org.waveprotocol.wave.model.wave.ParticipantId, org.waveprotocol.wave.model.conversation.ObservableConversationView, org.waveprotocol.wave.model.wave.data.ObservableWaveletData)
    {
        org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl $r8;
        org.waveprotocol.wave.model.wave.data.ObservableWaveletData r0;
        org.waveprotocol.wave.model.wave.ParticipantId r2;
        org.waveprotocol.wave.model.wave.opbased.OpBasedWavelet $r5;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement $r7;
        org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow $r3;
        org.waveprotocol.wave.model.conversation.ObservableConversationView r1;
        org.waveprotocol.wave.model.supplement.SupplementedWave $r4;
        org.waveprotocol.box.server.waveserver.WaveDigester r6;

        r6 := @this: org.waveprotocol.box.server.waveserver.WaveDigester;

        r2 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        r1 := @parameter1: org.waveprotocol.wave.model.conversation.ObservableConversationView;

        r0 := @parameter2: org.waveprotocol.wave.model.wave.data.ObservableWaveletData;

        if r0 == null goto label1;

        $r5 = staticinvoke <org.waveprotocol.wave.model.wave.opbased.OpBasedWavelet: org.waveprotocol.wave.model.wave.opbased.OpBasedWavelet createReadOnly(org.waveprotocol.wave.model.wave.data.ObservableWaveletData)>(r0);

        $r7 = staticinvoke <org.waveprotocol.wave.model.supplement.WaveletBasedSupplement: org.waveprotocol.wave.model.supplement.WaveletBasedSupplement create(org.waveprotocol.wave.model.wave.Wavelet)>($r5);

        goto label2;

     label1:
        $r8 = new org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl;

        $r7 = $r8;

        specialinvoke $r8.<org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl: void <init>()>();

     label2:
        $r3 = <org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow: org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow ALWAYS>;

        $r4 = staticinvoke <org.waveprotocol.wave.model.supplement.SupplementedWaveImpl: org.waveprotocol.wave.model.supplement.SupplementedWave create(org.waveprotocol.wave.model.supplement.PrimitiveSupplement,org.waveprotocol.wave.model.conversation.ConversationView,org.waveprotocol.wave.model.wave.ParticipantId,org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow)>($r7, r1, r2, $r3);

        return $r4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.waveprotocol.box.server.waveserver.WaveDigester: java.lang.String EMPTY_WAVELET_TITLE> = "";

        <org.waveprotocol.box.server.waveserver.WaveDigester: int PARTICIPANTS_SNIPPET_LENGTH> = 5;

        <org.waveprotocol.box.server.waveserver.WaveDigester: int DIGEST_SNIPPET_LENGTH> = 140;

        $r0 = class "Lorg/waveprotocol/box/server/waveserver/WaveDigester;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.box.server.waveserver.WaveDigester: boolean $assertionsDisabled> = $z1;

        return;
    }
}
