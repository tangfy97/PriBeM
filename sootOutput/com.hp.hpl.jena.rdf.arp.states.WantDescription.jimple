public abstract class com.hp.hpl.jena.rdf.arp.states.WantDescription extends com.hp.hpl.jena.rdf.arp.states.Frame implements com.hp.hpl.jena.rdf.arp.states.HasSubjectFrameI
{
    com.hp.hpl.jena.rdf.arp.impl.ANode subject;
    boolean subjectIsBlank;

    public void <init>(com.hp.hpl.jena.rdf.arp.states.FrameI, com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext)
    {
        com.hp.hpl.jena.rdf.arp.states.WantDescription r0;
        com.hp.hpl.jena.rdf.arp.states.FrameI r1;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.states.WantDescription;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.states.FrameI;

        r2 := @parameter1: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.states.Frame: void <init>(com.hp.hpl.jena.rdf.arp.states.FrameI,com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext)>(r1, r2);

        r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: boolean subjectIsBlank> = 0;

        return;
    }

    public void <init>(com.hp.hpl.jena.rdf.arp.states.FrameI, com.hp.hpl.jena.rdf.arp.impl.AttributeLexer) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer r2;
        com.hp.hpl.jena.rdf.arp.states.WantDescription r0;
        com.hp.hpl.jena.rdf.arp.states.FrameI r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.states.WantDescription;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.states.FrameI;

        r2 := @parameter1: com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.states.Frame: void <init>(com.hp.hpl.jena.rdf.arp.states.FrameI,com.hp.hpl.jena.rdf.arp.impl.AttributeLexer)>(r1, r2);

        r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: boolean subjectIsBlank> = 0;

        return;
    }

    public void <init>(com.hp.hpl.jena.rdf.arp.impl.XMLHandler, com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext)
    {
        com.hp.hpl.jena.rdf.arp.states.WantDescription r0;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r1;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.states.WantDescription;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r2 := @parameter1: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.states.Frame: void <init>(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext)>(r1, r2);

        r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: boolean subjectIsBlank> = 0;

        return;
    }

    public com.hp.hpl.jena.rdf.arp.states.FrameI startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXParseException
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        com.hp.hpl.jena.rdf.arp.impl.URIReference $r9, $r19, $r21;
        com.hp.hpl.jena.rdf.arp.impl.ANode $r11, $r14, $r17, $r31, $r33, $r34, $r35;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext $r24, $r25;
        com.hp.hpl.jena.rdf.arp.impl.Taint $r7, $r8, $r10, $r23;
        com.hp.hpl.jena.rdf.arp.impl.AttributeLexer $r22;
        org.xml.sax.Attributes r2;
        com.hp.hpl.jena.rdf.arp.states.WantDescription r0;
        java.lang.String r1, $r3, r5, r6, $r15, $r16, $r18, $r20, $r26, $r27, $r30, $r32;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler $r13, $r29;
        com.hp.hpl.jena.rdf.arp.states.WantPropertyElement $r36;
        com.hp.hpl.jena.rdf.arp.impl.ARPResource $r12, $r28;
        com.hp.hpl.jena.rdf.arp.impl.ElementLexer $r4;

        r0 := @this: com.hp.hpl.jena.rdf.arp.states.WantDescription;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        r2 := @parameter3: org.xml.sax.Attributes;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: void clearSubject()>();

        if r1 == null goto label01;

        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z4 == 0 goto label02;

     label01:
        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: void warning(int,java.lang.String)>(104, "Unqualified typed nodes are not allowed. Type treated as a relative URI.");

     label02:
        $r22 = new com.hp.hpl.jena.rdf.arp.impl.AttributeLexer;

        specialinvoke $r22.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: void <init>(com.hp.hpl.jena.rdf.arp.states.Frame,int,int)>(r0, 575, 32248);

        $r23 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.Taint taint>;

        virtualinvoke $r22.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: int processSpecials(com.hp.hpl.jena.rdf.arp.impl.Taint,org.xml.sax.Attributes)>($r23, r2);

        $r24 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext xml>;

        $r25 = virtualinvoke $r22.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext xml(com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext)>($r24);

        $r26 = $r22.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String id>;

        if $r26 == null goto label03;

        $r20 = $r22.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String id>;

        $r21 = staticinvoke <com.hp.hpl.jena.rdf.arp.impl.URIReference: com.hp.hpl.jena.rdf.arp.impl.URIReference fromID(com.hp.hpl.jena.rdf.arp.states.Frame,com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext,java.lang.String)>(r0, $r25, $r20);

        r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.ANode subject> = $r21;

     label03:
        $r3 = $r22.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String about>;

        if $r3 == null goto label05;

        $r17 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.ANode subject>;

        if $r17 == null goto label04;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: void warning(int,java.lang.String)>(201, "Both ID and about");

     label04:
        $r18 = $r22.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String about>;

        $r19 = staticinvoke <com.hp.hpl.jena.rdf.arp.impl.URIReference: com.hp.hpl.jena.rdf.arp.impl.URIReference resolve(com.hp.hpl.jena.rdf.arp.states.Frame,com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext,java.lang.String)>(r0, $r25, $r18);

        r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.ANode subject> = $r19;

     label05:
        $r27 = $r22.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String nodeID>;

        if $r27 == null goto label08;

        $r14 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.ANode subject>;

        if $r14 == null goto label07;

        $r15 = $r22.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String about>;

        if $r15 == null goto label06;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: void warning(int,java.lang.String)>(201, "Both nodeID and about");

     label06:
        $r16 = $r22.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String id>;

        if $r16 == null goto label07;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: void warning(int,java.lang.String)>(201, "Both ID and nodeID");

     label07:
        $r28 = new com.hp.hpl.jena.rdf.arp.impl.ARPResource;

        $r29 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.XMLHandler arp>;

        $r30 = $r22.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String nodeID>;

        specialinvoke $r28.<com.hp.hpl.jena.rdf.arp.impl.ARPResource: void <init>(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,java.lang.String)>($r29, $r30);

        r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.ANode subject> = $r28;

        $r31 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.ANode subject>;

        $r32 = $r22.<com.hp.hpl.jena.rdf.arp.impl.AttributeLexer: java.lang.String nodeID>;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: void checkXMLName(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String)>($r31, $r32);

        r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: boolean subjectIsBlank> = 1;

     label08:
        $r33 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.ANode subject>;

        if $r33 != null goto label09;

        $r12 = new com.hp.hpl.jena.rdf.arp.impl.ARPResource;

        $r13 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.XMLHandler arp>;

        specialinvoke $r12.<com.hp.hpl.jena.rdf.arp.impl.ARPResource: void <init>(com.hp.hpl.jena.rdf.arp.impl.XMLHandler)>($r13);

        r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.ANode subject> = $r12;

        r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: boolean subjectIsBlank> = 1;

     label09:
        $r4 = new com.hp.hpl.jena.rdf.arp.impl.ElementLexer;

        $r7 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.Taint taint>;

        specialinvoke $r4.<com.hp.hpl.jena.rdf.arp.impl.ElementLexer: void <init>(com.hp.hpl.jena.rdf.arp.impl.Taint,com.hp.hpl.jena.rdf.arp.states.Frame,java.lang.String,java.lang.String,java.lang.String,int,int,boolean)>($r7, r0, r1, r5, r6, 8192, 24056, 1);

        $r8 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.Taint taint>;

        $z0 = interfaceinvoke $r8.<com.hp.hpl.jena.rdf.arp.impl.Taint: boolean isTainted()>();

        if $z0 == 0 goto label10;

        $r11 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.ANode subject>;

        interfaceinvoke $r11.<com.hp.hpl.jena.rdf.arp.impl.ANode: void taint()>();

     label10:
        $z1 = $r4.<com.hp.hpl.jena.rdf.arp.impl.ElementLexer: boolean goodMatch>;

        if $z1 != 0 goto label12;

        $r9 = staticinvoke <com.hp.hpl.jena.rdf.arp.impl.URIReference: com.hp.hpl.jena.rdf.arp.impl.URIReference fromQName(com.hp.hpl.jena.rdf.arp.states.Frame,java.lang.String,java.lang.String)>(r0, r1, r5);

        $z2 = $r4.<com.hp.hpl.jena.rdf.arp.impl.ElementLexer: boolean badMatch>;

        if $z2 == 0 goto label11;

        $r10 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.Taint taint>;

        $z3 = interfaceinvoke $r10.<com.hp.hpl.jena.rdf.arp.impl.Taint: boolean isTainted()>();

        if $z3 == 0 goto label11;

        virtualinvoke $r9.<com.hp.hpl.jena.rdf.arp.impl.URIReference: void taint()>();

     label11:
        $r34 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.ANode subject>;

        $r35 = <com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.ANode RDF_TYPE>;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: void triple(com.hp.hpl.jena.rdf.arp.impl.ANode,com.hp.hpl.jena.rdf.arp.impl.ANode,com.hp.hpl.jena.rdf.arp.impl.ANode)>($r34, $r35, $r9);

     label12:
        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: void processPropertyAttributes(com.hp.hpl.jena.rdf.arp.impl.AttributeLexer,org.xml.sax.Attributes,com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext)>($r22, r2, $r25);

        $r36 = new com.hp.hpl.jena.rdf.arp.states.WantPropertyElement;

        specialinvoke $r36.<com.hp.hpl.jena.rdf.arp.states.WantPropertyElement: void <init>(com.hp.hpl.jena.rdf.arp.states.HasSubjectFrameI,com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext)>(r0, $r25);

        return $r36;
    }

    private void clearSubject()
    {
        com.hp.hpl.jena.rdf.arp.impl.ANode $r1;
        com.hp.hpl.jena.rdf.arp.states.WantDescription r0;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.states.WantDescription;

        $z0 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: boolean subjectIsBlank>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.XMLHandler arp>;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.ANode subject>;

        virtualinvoke $r2.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void endLocalScope(com.hp.hpl.jena.rdf.arp.impl.ANode)>($r1);

     label1:
        r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.ANode subject> = null;

        r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: boolean subjectIsBlank> = 0;

        return;
    }

    public void aPredAndObj(com.hp.hpl.jena.rdf.arp.impl.ANode, com.hp.hpl.jena.rdf.arp.impl.ANode)
    {
        com.hp.hpl.jena.rdf.arp.impl.ANode r1, r2, $r3;
        com.hp.hpl.jena.rdf.arp.states.WantDescription r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.states.WantDescription;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.ANode;

        r2 := @parameter1: com.hp.hpl.jena.rdf.arp.impl.ANode;

        $r3 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.ANode subject>;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: void triple(com.hp.hpl.jena.rdf.arp.impl.ANode,com.hp.hpl.jena.rdf.arp.impl.ANode,com.hp.hpl.jena.rdf.arp.impl.ANode)>($r3, r1, r2);

        return;
    }

    public void makeSubjectReificationWith(com.hp.hpl.jena.rdf.arp.impl.ANode)
    {
        com.hp.hpl.jena.rdf.arp.impl.ANode r1, $r2, $r3;
        com.hp.hpl.jena.rdf.arp.states.WantDescription r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.states.WantDescription;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.ANode;

        $r3 = <com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.ANode RDF_SUBJECT>;

        $r2 = r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: com.hp.hpl.jena.rdf.arp.impl.ANode subject>;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: void triple(com.hp.hpl.jena.rdf.arp.impl.ANode,com.hp.hpl.jena.rdf.arp.impl.ANode,com.hp.hpl.jena.rdf.arp.impl.ANode)>(r1, $r3, $r2);

        return;
    }

    public void endElement() throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.states.WantDescription r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.states.WantDescription;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: void clearSubject()>();

        return;
    }

    public void abort()
    {
        com.hp.hpl.jena.rdf.arp.states.WantDescription r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.states.WantDescription;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.states.WantDescription: void clearSubject()>();

        return;
    }
}
