public class ucar.nc2.dataset.VerticalCT extends ucar.nc2.dataset.CoordinateTransform
{
    private final ucar.nc2.dataset.VerticalCT$Type type;
    private final ucar.nc2.dataset.CoordTransBuilderIF builder;
    private static java.util.Map hash;

    public void <init>(java.lang.String, java.lang.String, ucar.nc2.dataset.VerticalCT$Type, ucar.nc2.dataset.CoordTransBuilderIF)
    {
        ucar.nc2.dataset.VerticalCT r0;
        ucar.nc2.dataset.TransformType $r3;
        ucar.nc2.dataset.VerticalCT$Type r4;
        java.lang.String r1, r2;
        ucar.nc2.dataset.CoordTransBuilderIF r5;

        r0 := @this: ucar.nc2.dataset.VerticalCT;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: ucar.nc2.dataset.VerticalCT$Type;

        r5 := @parameter3: ucar.nc2.dataset.CoordTransBuilderIF;

        $r3 = <ucar.nc2.dataset.TransformType: ucar.nc2.dataset.TransformType Vertical>;

        specialinvoke r0.<ucar.nc2.dataset.CoordinateTransform: void <init>(java.lang.String,java.lang.String,ucar.nc2.dataset.TransformType)>(r1, r2, $r3);

        r0.<ucar.nc2.dataset.VerticalCT: ucar.nc2.dataset.VerticalCT$Type type> = r4;

        r0.<ucar.nc2.dataset.VerticalCT: ucar.nc2.dataset.CoordTransBuilderIF builder> = r5;

        return;
    }

    public void <init>(ucar.nc2.dataset.VerticalCT)
    {
        ucar.nc2.dataset.VerticalCT r0, r1;
        ucar.nc2.dataset.TransformType $r4;
        ucar.nc2.dataset.VerticalCT$Type $r5;
        java.lang.String $r2, $r3;
        ucar.nc2.dataset.CoordTransBuilderIF $r6;

        r0 := @this: ucar.nc2.dataset.VerticalCT;

        r1 := @parameter0: ucar.nc2.dataset.VerticalCT;

        $r2 = virtualinvoke r1.<ucar.nc2.dataset.VerticalCT: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<ucar.nc2.dataset.VerticalCT: java.lang.String getAuthority()>();

        $r4 = virtualinvoke r1.<ucar.nc2.dataset.VerticalCT: ucar.nc2.dataset.TransformType getTransformType()>();

        specialinvoke r0.<ucar.nc2.dataset.CoordinateTransform: void <init>(java.lang.String,java.lang.String,ucar.nc2.dataset.TransformType)>($r2, $r3, $r4);

        $r5 = virtualinvoke r1.<ucar.nc2.dataset.VerticalCT: ucar.nc2.dataset.VerticalCT$Type getVerticalTransformType()>();

        r0.<ucar.nc2.dataset.VerticalCT: ucar.nc2.dataset.VerticalCT$Type type> = $r5;

        $r6 = virtualinvoke r1.<ucar.nc2.dataset.VerticalCT: ucar.nc2.dataset.CoordTransBuilderIF getBuilder()>();

        r0.<ucar.nc2.dataset.VerticalCT: ucar.nc2.dataset.CoordTransBuilderIF builder> = $r6;

        return;
    }

    public ucar.nc2.dataset.VerticalCT$Type getVerticalTransformType()
    {
        ucar.nc2.dataset.VerticalCT$Type $r1;
        ucar.nc2.dataset.VerticalCT r0;

        r0 := @this: ucar.nc2.dataset.VerticalCT;

        $r1 = r0.<ucar.nc2.dataset.VerticalCT: ucar.nc2.dataset.VerticalCT$Type type>;

        return $r1;
    }

    public ucar.unidata.geoloc.vertical.VerticalTransform makeVerticalTransform(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Dimension)
    {
        ucar.nc2.dataset.VerticalCT r0;
        ucar.unidata.geoloc.vertical.VerticalTransform $r4;
        ucar.nc2.Dimension r2;
        ucar.nc2.dataset.CoordTransBuilderIF $r3;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.VerticalCT;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.Dimension;

        $r3 = r0.<ucar.nc2.dataset.VerticalCT: ucar.nc2.dataset.CoordTransBuilderIF builder>;

        $r4 = interfaceinvoke $r3.<ucar.nc2.dataset.CoordTransBuilderIF: ucar.unidata.geoloc.vertical.VerticalTransform makeMathTransform(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension,ucar.nc2.dataset.VerticalCT)>(r1, r2, r0);

        return $r4;
    }

    public ucar.nc2.dataset.CoordTransBuilderIF getBuilder()
    {
        ucar.nc2.dataset.CoordTransBuilderIF $r1;
        ucar.nc2.dataset.VerticalCT r0;

        r0 := @this: ucar.nc2.dataset.VerticalCT;

        $r1 = r0.<ucar.nc2.dataset.VerticalCT: ucar.nc2.dataset.CoordTransBuilderIF builder>;

        return $r1;
    }

    public java.lang.String toString()
    {
        ucar.nc2.dataset.VerticalCT r2;
        ucar.nc2.dataset.VerticalCT$Type $r3;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r8, $r9;
        java.lang.String $r7, $r10;
        ucar.nc2.dataset.CoordTransBuilderIF $r6;

        r2 := @this: ucar.nc2.dataset.VerticalCT;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VerticalCT {type=");

        $r3 = r2.<ucar.nc2.dataset.VerticalCT: ucar.nc2.dataset.VerticalCT$Type type>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", builder=");

        $r6 = r2.<ucar.nc2.dataset.VerticalCT: ucar.nc2.dataset.CoordTransBuilderIF builder>;

        $r7 = interfaceinvoke $r6.<ucar.nc2.dataset.CoordTransBuilderIF: java.lang.String getTransformName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    static java.util.Map access$000()
    {
        java.util.Map $r0;

        $r0 = <ucar.nc2.dataset.VerticalCT: java.util.Map hash>;

        return $r0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(10);

        <ucar.nc2.dataset.VerticalCT: java.util.Map hash> = $r0;

        return;
    }
}
