public class org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle extends org.apache.batik.dom.svg.SVGOMAngle
{
    private final org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0;

    protected void <init>(org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue r1;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle;

        r1 := @parameter0: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMAngle: void <init>()>();

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0> = r1;

        return;
    }

    public short getUnitType()
    {
        org.w3c.dom.svg.SVGAngle $r4;
        short $s0, $s1;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle r0;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue $r1, $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle $r3;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $z0 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 == 0 goto label1;

        $s1 = specialinvoke r0.<org.apache.batik.dom.svg.SVGOMAngle: short getUnitType()>();

        return $s1;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r3 = $r2.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle animatedAngle>;

        $r4 = virtualinvoke $r3.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle: org.w3c.dom.svg.SVGAngle getBaseVal()>();

        $s0 = interfaceinvoke $r4.<org.w3c.dom.svg.SVGAngle: short getUnitType()>();

        return $s0;
    }

    public float getValue()
    {
        org.w3c.dom.svg.SVGAngle $r4;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle r0;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue $r1, $r2;
        float $f0, $f1;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle $r3;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $z0 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 == 0 goto label1;

        $f1 = specialinvoke r0.<org.apache.batik.dom.svg.SVGOMAngle: float getValue()>();

        return $f1;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r3 = $r2.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle animatedAngle>;

        $r4 = virtualinvoke $r3.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle: org.w3c.dom.svg.SVGAngle getBaseVal()>();

        $f0 = interfaceinvoke $r4.<org.w3c.dom.svg.SVGAngle: float getValue()>();

        return $f0;
    }

    public float getValueInSpecifiedUnits()
    {
        org.w3c.dom.svg.SVGAngle $r4;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle r0;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue $r1, $r2;
        float $f0, $f1;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle $r3;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $z0 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 == 0 goto label1;

        $f1 = specialinvoke r0.<org.apache.batik.dom.svg.SVGOMAngle: float getValueInSpecifiedUnits()>();

        return $f1;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r3 = $r2.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle animatedAngle>;

        $r4 = virtualinvoke $r3.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle: org.w3c.dom.svg.SVGAngle getBaseVal()>();

        $f0 = interfaceinvoke $r4.<org.w3c.dom.svg.SVGAngle: float getValueInSpecifiedUnits()>();

        return $f0;
    }

    public java.lang.String getValueAsString()
    {
        org.w3c.dom.svg.SVGAngle $r4;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle r0;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue $r1, $r2;
        java.lang.String $r5, $r6;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle $r3;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $z0 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 == 0 goto label1;

        $r6 = specialinvoke r0.<org.apache.batik.dom.svg.SVGOMAngle: java.lang.String getValueAsString()>();

        return $r6;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r3 = $r2.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle animatedAngle>;

        $r4 = virtualinvoke $r3.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimatedAngle: org.w3c.dom.svg.SVGAngle getBaseVal()>();

        $r5 = interfaceinvoke $r4.<org.w3c.dom.svg.SVGAngle: java.lang.String getValueAsString()>();

        return $r5;
    }

    public void setValue(float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle r0;
        org.w3c.dom.DOMException $r3;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue $r1;
        float f0;
        org.apache.batik.dom.svg.AbstractElement $r2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle;

        f0 := @parameter0: float;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.angle", null);

        throw $r3;
    }

    public void setValueInSpecifiedUnits(float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle r0;
        org.w3c.dom.DOMException $r3;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue $r1;
        float f0;
        org.apache.batik.dom.svg.AbstractElement $r2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle;

        f0 := @parameter0: float;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.angle", null);

        throw $r3;
    }

    public void setValueAsString(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle r0;
        org.w3c.dom.DOMException $r3;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue $r1;
        java.lang.String r4;
        org.apache.batik.dom.svg.AbstractElement $r2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.angle", null);

        throw $r3;
    }

    public void newValueSpecifiedUnits(short, float)
    {
        short s0;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle r0;
        org.w3c.dom.DOMException $r3;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue $r1;
        float f0;
        org.apache.batik.dom.svg.AbstractElement $r2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle;

        s0 := @parameter0: short;

        f0 := @parameter1: float;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.angle", null);

        throw $r3;
    }

    public void convertToSpecifiedUnits(short)
    {
        short s0;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle r0;
        org.w3c.dom.DOMException $r3;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue $r1;
        org.apache.batik.dom.svg.AbstractElement $r2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle;

        s0 := @parameter0: short;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.angle", null);

        throw $r3;
    }

    protected void setAnimatedValue(int, float)
    {
        short $s1;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle r0;
        int i0;
        float f0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$AnimSVGAngle;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $s1 = (short) i0;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMAngle: void newValueSpecifiedUnits(short,float)>($s1, f0);

        return;
    }
}
