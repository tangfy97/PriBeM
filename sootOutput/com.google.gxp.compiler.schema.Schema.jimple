public final class com.google.gxp.compiler.schema.Schema extends com.google.gxp.compiler.base.SerializableAbstractNode implements java.lang.Comparable
{
    private final java.lang.String name;
    private final java.lang.String namespaceUri;
    private final java.lang.String contentType;
    private final boolean defaultsToSgml;
    private final java.lang.String sgmlContentType;
    private final java.lang.String tagPrefix;
    private final com.google.gxp.com.google.common.collect.ImmutableMap validatorMap;
    private final java.lang.String cppType;
    private final java.lang.String cppAppender;
    private final com.google.gxp.com.google.common.collect.ImmutableList cppImports;
    private final java.lang.String javaType;
    private final java.lang.String javaAppender;
    private final com.google.gxp.com.google.common.collect.ImmutableList javaImports;
    private final java.lang.String javaScriptType;
    private final com.google.gxp.compiler.schema.ContentFamily contentFamily;
    private final com.google.gxp.com.google.common.collect.ImmutableList allowedSchemaRefs;
    private final com.google.gxp.compiler.schema.Schema msgSchema;

    public java.lang.String getName()
    {
        com.google.gxp.compiler.schema.Schema r0;
        java.lang.String $r1;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $r1 = r0.<com.google.gxp.compiler.schema.Schema: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getNamespaceUri()
    {
        com.google.gxp.compiler.schema.Schema r0;
        java.lang.String $r1;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $r1 = r0.<com.google.gxp.compiler.schema.Schema: java.lang.String namespaceUri>;

        return $r1;
    }

    public java.lang.String getXmlContentType()
    {
        com.google.gxp.compiler.schema.Schema r0;
        java.lang.String $r1;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $r1 = r0.<com.google.gxp.compiler.schema.Schema: java.lang.String contentType>;

        return $r1;
    }

    public boolean defaultsToSgml()
    {
        com.google.gxp.compiler.schema.Schema r0;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $z0 = r0.<com.google.gxp.compiler.schema.Schema: boolean defaultsToSgml>;

        return $z0;
    }

    public java.lang.String getSgmlContentType()
    {
        com.google.gxp.compiler.schema.Schema r0;
        java.lang.String $r1;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $r1 = r0.<com.google.gxp.compiler.schema.Schema: java.lang.String sgmlContentType>;

        return $r1;
    }

    public java.lang.String getCanonicalContentType()
    {
        com.google.gxp.compiler.schema.Schema r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $z0 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: boolean defaultsToSgml()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getSgmlContentType()>();

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getXmlContentType()>();

     label2:
        return $r1;
    }

    public java.lang.String getTagPrefix()
    {
        com.google.gxp.compiler.schema.Schema r0;
        java.lang.String $r1;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $r1 = r0.<com.google.gxp.compiler.schema.Schema: java.lang.String tagPrefix>;

        return $r1;
    }

    public java.lang.String getCppType()
    {
        com.google.gxp.compiler.schema.Schema r0;
        java.lang.String $r1;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $r1 = r0.<com.google.gxp.compiler.schema.Schema: java.lang.String cppType>;

        return $r1;
    }

    public java.lang.String getCppAppender()
    {
        com.google.gxp.compiler.schema.Schema r0;
        java.lang.String $r1;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $r1 = r0.<com.google.gxp.compiler.schema.Schema: java.lang.String cppAppender>;

        return $r1;
    }

    public java.util.List getCppImports()
    {
        com.google.gxp.compiler.schema.Schema r0;
        com.google.gxp.com.google.common.collect.ImmutableList $r1;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $r1 = r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.com.google.common.collect.ImmutableList cppImports>;

        return $r1;
    }

    public java.lang.String getJavaType()
    {
        com.google.gxp.compiler.schema.Schema r0;
        java.lang.String $r1;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $r1 = r0.<com.google.gxp.compiler.schema.Schema: java.lang.String javaType>;

        return $r1;
    }

    public java.lang.String getJavaAppender()
    {
        com.google.gxp.compiler.schema.Schema r0;
        java.lang.String $r1;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $r1 = r0.<com.google.gxp.compiler.schema.Schema: java.lang.String javaAppender>;

        return $r1;
    }

    public java.util.List getJavaImports()
    {
        com.google.gxp.compiler.schema.Schema r0;
        com.google.gxp.com.google.common.collect.ImmutableList $r1;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $r1 = r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.com.google.common.collect.ImmutableList javaImports>;

        return $r1;
    }

    public java.lang.String getJavaScriptType()
    {
        com.google.gxp.compiler.schema.Schema r0;
        java.lang.String $r1;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $r1 = r0.<com.google.gxp.compiler.schema.Schema: java.lang.String javaScriptType>;

        return $r1;
    }

    public com.google.gxp.compiler.schema.ContentFamily getContentFamily()
    {
        com.google.gxp.compiler.schema.ContentFamily $r1;
        com.google.gxp.compiler.schema.Schema r0;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $r1 = r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.ContentFamily contentFamily>;

        return $r1;
    }

    public com.google.gxp.compiler.schema.Schema getMsgSchema()
    {
        com.google.gxp.compiler.schema.Schema r0, $r1, $r2;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $r1 = r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.Schema msgSchema>;

        if $r1 != null goto label1;

        $r2 = r0;

        goto label2;

     label1:
        $r2 = r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.Schema msgSchema>;

     label2:
        return $r2;
    }

    public boolean isTranslatable()
    {
        com.google.gxp.compiler.schema.Schema r0, $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $r1 = r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.Schema msgSchema>;

        if $r1 == null goto label1;

        $r2 = r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.Schema msgSchema>;

        $z0 = specialinvoke $r2.<com.google.gxp.compiler.schema.Schema: boolean equals(com.google.gxp.compiler.schema.Schema)>(r0);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public java.lang.String toString()
    {
        com.google.gxp.compiler.schema.Schema r0;
        java.lang.String $r1;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getCanonicalContentType()>();

        return $r1;
    }

    public boolean allows(com.google.gxp.compiler.schema.Schema)
    {
        com.google.gxp.compiler.schema.SchemaRef r5;
        java.util.Iterator $r3;
        com.google.gxp.compiler.schema.Schema r0, r1;
        com.google.gxp.com.google.common.collect.ImmutableList $r2;
        java.lang.Object $r4;
        java.lang.String $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2;

        r1 := @this: com.google.gxp.compiler.schema.Schema;

        r0 := @parameter0: com.google.gxp.compiler.schema.Schema;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $r2 = r1.<com.google.gxp.compiler.schema.Schema: com.google.gxp.com.google.common.collect.ImmutableList allowedSchemaRefs>;

        $r3 = virtualinvoke $r2.<com.google.gxp.com.google.common.collect.ImmutableList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.google.gxp.compiler.schema.SchemaRef) $r4;

        $r6 = virtualinvoke r5.<com.google.gxp.compiler.schema.SchemaRef: java.lang.String getContentType()>();

        $r7 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getXmlContentType()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label3;

        $r8 = virtualinvoke r5.<com.google.gxp.compiler.schema.SchemaRef: java.lang.String getContentType()>();

        $r9 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getSgmlContentType()>();

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label4;

     label3:
        return 1;

     label4:
        goto label2;

     label5:
        return 0;
    }

    public void <init>(com.google.gxp.compiler.alerts.SourcePosition, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.List, java.lang.String, java.lang.String, java.util.List, java.lang.String, java.lang.Iterable, java.util.Collection, com.google.gxp.compiler.schema.Schema)
    {
        com.google.gxp.compiler.schema.ContentFamily $r26;
        com.google.gxp.compiler.schema.Schema r0, r33;
        boolean z0, $z1;
        java.util.Collection r31;
        com.google.gxp.com.google.common.collect.ImmutableList $r15, $r23, $r32;
        com.google.gxp.compiler.schema.ElementBuilder r35;
        java.util.List r14, r20;
        com.google.gxp.com.google.common.collect.ImmutableMap $r30;
        com.google.gxp.compiler.schema.ElementValidator $r36;
        java.lang.Iterable $r22, r28;
        com.google.gxp.com.google.common.collect.ImmutableMap$Builder $r27;
        java.lang.String r2, r3, $r5, r6, $r8, r9, r10, r11, r12, r13, r16, $r18, r19, r24, $r25, $r37;
        com.google.gxp.compiler.alerts.SourcePosition r1;
        java.util.Iterator $r29;
        java.lang.Object $r4, $r7, $r17, $r21, $r34;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        r1 := @parameter0: com.google.gxp.compiler.alerts.SourcePosition;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.String;

        r9 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        r10 := @parameter6: java.lang.String;

        r11 := @parameter7: java.lang.String;

        r12 := @parameter8: java.lang.String;

        r13 := @parameter9: java.lang.String;

        r14 := @parameter10: java.util.List;

        r16 := @parameter11: java.lang.String;

        r19 := @parameter12: java.lang.String;

        r20 := @parameter13: java.util.List;

        r24 := @parameter14: java.lang.String;

        r28 := @parameter15: java.lang.Iterable;

        r31 := @parameter16: java.util.Collection;

        r33 := @parameter17: com.google.gxp.compiler.schema.Schema;

        specialinvoke r0.<com.google.gxp.compiler.base.SerializableAbstractNode: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>(r1, r2);

        $r4 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r5 = (java.lang.String) $r4;

        r0.<com.google.gxp.compiler.schema.Schema: java.lang.String name> = $r5;

        $r7 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r6);

        $r8 = (java.lang.String) $r7;

        r0.<com.google.gxp.compiler.schema.Schema: java.lang.String namespaceUri> = $r8;

        r0.<com.google.gxp.compiler.schema.Schema: java.lang.String contentType> = r9;

        r0.<com.google.gxp.compiler.schema.Schema: boolean defaultsToSgml> = z0;

        r0.<com.google.gxp.compiler.schema.Schema: java.lang.String sgmlContentType> = r10;

        r0.<com.google.gxp.compiler.schema.Schema: java.lang.String tagPrefix> = r11;

        r0.<com.google.gxp.compiler.schema.Schema: java.lang.String cppType> = r12;

        r0.<com.google.gxp.compiler.schema.Schema: java.lang.String cppAppender> = r13;

        $r15 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>(r14);

        r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.com.google.common.collect.ImmutableList cppImports> = $r15;

        $r17 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r16);

        $r18 = (java.lang.String) $r17;

        r0.<com.google.gxp.compiler.schema.Schema: java.lang.String javaType> = $r18;

        r0.<com.google.gxp.compiler.schema.Schema: java.lang.String javaAppender> = r19;

        $r21 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r20);

        $r22 = (java.lang.Iterable) $r21;

        $r23 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>($r22);

        r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.com.google.common.collect.ImmutableList javaImports> = $r23;

        r0.<com.google.gxp.compiler.schema.Schema: java.lang.String javaScriptType> = r24;

        $r25 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getCanonicalContentType()>();

        $r26 = staticinvoke <com.google.gxp.compiler.schema.ContentFamily: com.google.gxp.compiler.schema.ContentFamily fromContentTypeName(java.lang.String)>($r25);

        r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.ContentFamily contentFamily> = $r26;

        $r27 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableMap: com.google.gxp.com.google.common.collect.ImmutableMap$Builder builder()>();

        $r29 = interfaceinvoke r28.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r34 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r35 = (com.google.gxp.compiler.schema.ElementBuilder) $r34;

        $r36 = virtualinvoke r35.<com.google.gxp.compiler.schema.ElementBuilder: com.google.gxp.compiler.schema.ElementValidator build()>();

        $r37 = virtualinvoke $r36.<com.google.gxp.compiler.schema.ElementValidator: java.lang.String getTagName()>();

        virtualinvoke $r27.<com.google.gxp.com.google.common.collect.ImmutableMap$Builder: com.google.gxp.com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r37, $r36);

        goto label1;

     label2:
        $r30 = virtualinvoke $r27.<com.google.gxp.com.google.common.collect.ImmutableMap$Builder: com.google.gxp.com.google.common.collect.ImmutableMap build()>();

        r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.com.google.common.collect.ImmutableMap validatorMap> = $r30;

        $r32 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>(r31);

        r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.com.google.common.collect.ImmutableList allowedSchemaRefs> = $r32;

        r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.Schema msgSchema> = r33;

        return;
    }

    public com.google.gxp.compiler.schema.ElementValidator getElementValidator(java.lang.String)
    {
        com.google.gxp.com.google.common.collect.ImmutableMap $r2;
        com.google.gxp.compiler.schema.Schema r0;
        java.lang.Object $r3;
        java.lang.String r1;
        com.google.gxp.compiler.schema.ElementValidator $r4;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.com.google.common.collect.ImmutableMap validatorMap>;

        $r3 = virtualinvoke $r2.<com.google.gxp.com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.google.gxp.compiler.schema.ElementValidator) $r3;

        return $r4;
    }

    public int compareTo(com.google.gxp.compiler.schema.Schema)
    {
        int $i0;
        com.google.gxp.compiler.schema.Schema r0, r2;
        java.lang.String $r1, $r3;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        r2 := @parameter0: com.google.gxp.compiler.schema.Schema;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getCanonicalContentType()>();

        $r3 = virtualinvoke r2.<com.google.gxp.compiler.schema.Schema: java.lang.String getCanonicalContentType()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.gxp.compiler.schema.Schema r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $z0 = r1 instanceof com.google.gxp.compiler.schema.Schema;

        if $z0 == 0 goto label2;

        $r2 = (com.google.gxp.compiler.schema.Schema) r1;

        $z1 = specialinvoke r0.<com.google.gxp.compiler.schema.Schema: boolean equals(com.google.gxp.compiler.schema.Schema)>($r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private boolean equals(com.google.gxp.compiler.schema.Schema)
    {
        com.google.gxp.compiler.schema.ContentFamily $r26, $r27;
        com.google.gxp.compiler.schema.Schema r0, r1, $r32, $r33;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        com.google.gxp.com.google.common.collect.ImmutableList $r28, $r29;
        java.util.List $r16, $r17, $r22, $r23;
        com.google.gxp.com.google.common.collect.ImmutableMap $r30, $r31;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r24, $r25;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        r1 := @parameter0: com.google.gxp.compiler.schema.Schema;

        $z0 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: boolean equalsAbstractNode(com.google.gxp.compiler.base.SerializableAbstractNode)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getName()>();

        $z1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getNamespaceUri()>();

        $r5 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getNamespaceUri()>();

        $z2 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z2 == 0 goto label1;

        $r6 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getXmlContentType()>();

        $r7 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getXmlContentType()>();

        $z3 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z3 == 0 goto label1;

        $z4 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: boolean defaultsToSgml()>();

        $z5 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: boolean defaultsToSgml()>();

        if $z4 != $z5 goto label1;

        $r8 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getSgmlContentType()>();

        $r9 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getSgmlContentType()>();

        $z6 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r8, $r9);

        if $z6 == 0 goto label1;

        $r10 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getTagPrefix()>();

        $r11 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getTagPrefix()>();

        $z7 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r10, $r11);

        if $z7 == 0 goto label1;

        $r12 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getCppType()>();

        $r13 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getCppType()>();

        $z8 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r12, $r13);

        if $z8 == 0 goto label1;

        $r14 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getCppAppender()>();

        $r15 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getCppAppender()>();

        $z9 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r14, $r15);

        if $z9 == 0 goto label1;

        $r16 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.util.List getCppImports()>();

        $r17 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.util.List getCppImports()>();

        $z10 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r16, $r17);

        if $z10 == 0 goto label1;

        $r18 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getJavaType()>();

        $r19 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getJavaType()>();

        $z11 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r18, $r19);

        if $z11 == 0 goto label1;

        $r20 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getJavaAppender()>();

        $r21 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getJavaAppender()>();

        $z12 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r20, $r21);

        if $z12 == 0 goto label1;

        $r22 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.util.List getJavaImports()>();

        $r23 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.util.List getJavaImports()>();

        $z13 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r22, $r23);

        if $z13 == 0 goto label1;

        $r24 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: java.lang.String getJavaScriptType()>();

        $r25 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getJavaScriptType()>();

        $z14 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r24, $r25);

        if $z14 == 0 goto label1;

        $r26 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.ContentFamily getContentFamily()>();

        $r27 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.ContentFamily getContentFamily()>();

        $z15 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r26, $r27);

        if $z15 == 0 goto label1;

        $r29 = r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.com.google.common.collect.ImmutableList allowedSchemaRefs>;

        $r28 = r1.<com.google.gxp.compiler.schema.Schema: com.google.gxp.com.google.common.collect.ImmutableList allowedSchemaRefs>;

        $z16 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r29, $r28);

        if $z16 == 0 goto label1;

        $r31 = r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.com.google.common.collect.ImmutableMap validatorMap>;

        $r30 = r1.<com.google.gxp.compiler.schema.Schema: com.google.gxp.com.google.common.collect.ImmutableMap validatorMap>;

        $z17 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r31, $r30);

        if $z17 == 0 goto label1;

        $r33 = r0.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.Schema msgSchema>;

        $r32 = r1.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.Schema msgSchema>;

        $z18 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r33, $r32);

        if $z18 == 0 goto label1;

        $z19 = 1;

        goto label2;

     label1:
        $z19 = 0;

     label2:
        return $z19;
    }

    public int hashCode()
    {
        java.lang.Object[] $r0;
        com.google.gxp.compiler.schema.ContentFamily $r16;
        com.google.gxp.compiler.schema.Schema r1, $r19;
        java.lang.Integer $r2;
        int $i0, $i1;
        java.lang.Boolean $r6;
        java.lang.String $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r15;
        boolean $z0;
        com.google.gxp.com.google.common.collect.ImmutableList $r17;
        java.util.List $r11, $r14;
        com.google.gxp.com.google.common.collect.ImmutableMap $r18;

        r1 := @this: com.google.gxp.compiler.schema.Schema;

        $r0 = newarray (java.lang.Object)[18];

        $i0 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: int abstractNodeHashCode()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[0] = $r2;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getName()>();

        $r0[1] = $r3;

        $r4 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getNamespaceUri()>();

        $r0[2] = $r4;

        $r5 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getXmlContentType()>();

        $r0[3] = $r5;

        $z0 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: boolean defaultsToSgml()>();

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r0[4] = $r6;

        $r7 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getSgmlContentType()>();

        $r0[5] = $r7;

        $r8 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getTagPrefix()>();

        $r0[6] = $r8;

        $r9 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getCppType()>();

        $r0[7] = $r9;

        $r10 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getCppAppender()>();

        $r0[8] = $r10;

        $r11 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.util.List getCppImports()>();

        $r0[9] = $r11;

        $r12 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getJavaType()>();

        $r0[10] = $r12;

        $r13 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getJavaAppender()>();

        $r0[11] = $r13;

        $r14 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.util.List getJavaImports()>();

        $r0[12] = $r14;

        $r15 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: java.lang.String getJavaScriptType()>();

        $r0[13] = $r15;

        $r16 = virtualinvoke r1.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.ContentFamily getContentFamily()>();

        $r0[14] = $r16;

        $r17 = r1.<com.google.gxp.compiler.schema.Schema: com.google.gxp.com.google.common.collect.ImmutableList allowedSchemaRefs>;

        $r0[15] = $r17;

        $r18 = r1.<com.google.gxp.compiler.schema.Schema: com.google.gxp.com.google.common.collect.ImmutableMap validatorMap>;

        $r0[16] = $r18;

        $r19 = r1.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.Schema msgSchema>;

        $r0[17] = $r19;

        $i1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r0);

        return $i1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        com.google.gxp.compiler.schema.Schema r0, $r2;
        java.lang.Object r1;

        r0 := @this: com.google.gxp.compiler.schema.Schema;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gxp.compiler.schema.Schema) r1;

        $i0 = virtualinvoke r0.<com.google.gxp.compiler.schema.Schema: int compareTo(com.google.gxp.compiler.schema.Schema)>($r2);

        return $i0;
    }
}
