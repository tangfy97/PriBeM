public class org.bouncycastle.math.ec.ECPoint$Fp extends org.bouncycastle.math.ec.ECPoint
{

    public void <init>(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)
    {
        org.bouncycastle.math.ec.ECCurve r1;
        org.bouncycastle.math.ec.ECPoint$Fp r0;
        org.bouncycastle.math.ec.ECFieldElement r2, r3;

        r0 := @this: org.bouncycastle.math.ec.ECPoint$Fp;

        r1 := @parameter0: org.bouncycastle.math.ec.ECCurve;

        r2 := @parameter1: org.bouncycastle.math.ec.ECFieldElement;

        r3 := @parameter2: org.bouncycastle.math.ec.ECFieldElement;

        specialinvoke r0.<org.bouncycastle.math.ec.ECPoint$Fp: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECFieldElement,org.bouncycastle.math.ec.ECFieldElement,boolean)>(r1, r2, r3, 0);

        return;
    }

    public void <init>(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean)
    {
        org.bouncycastle.math.ec.ECCurve r1;
        org.bouncycastle.math.ec.ECPoint$Fp r0;
        org.bouncycastle.math.ec.ECFieldElement r2, r3;
        java.lang.IllegalArgumentException $r4;
        boolean z0;

        r0 := @this: org.bouncycastle.math.ec.ECPoint$Fp;

        r1 := @parameter0: org.bouncycastle.math.ec.ECCurve;

        r2 := @parameter1: org.bouncycastle.math.ec.ECFieldElement;

        r3 := @parameter2: org.bouncycastle.math.ec.ECFieldElement;

        z0 := @parameter3: boolean;

        specialinvoke r0.<org.bouncycastle.math.ec.ECPoint: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECFieldElement,org.bouncycastle.math.ec.ECFieldElement)>(r1, r2, r3);

        if r2 == null goto label1;

        if r3 == null goto label2;

     label1:
        if r2 != null goto label3;

        if r3 == null goto label3;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Exactly one of the field elements is null");

        throw $r4;

     label3:
        r0.<org.bouncycastle.math.ec.ECPoint$Fp: boolean withCompression> = z0;

        return;
    }

    public byte[] getEncoded()
    {
        byte[] $r6, $r10, $r16, $r17, $r18, r19;
        byte b12;
        java.math.BigInteger $r5, $r9, $r12, $r15;
        boolean $z0, $z1, $z2;
        org.bouncycastle.math.ec.ECPoint$Fp r0;
        org.bouncycastle.math.ec.ECFieldElement $r2, $r4, $r8, $r11, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.bouncycastle.asn1.x9.X9IntegerConverter $r1, $r3, $r7, $r13;

        r0 := @this: org.bouncycastle.math.ec.ECPoint$Fp;

        $z0 = virtualinvoke r0.<org.bouncycastle.math.ec.ECPoint$Fp: boolean isInfinity()>();

        if $z0 == 0 goto label1;

        $r18 = newarray (byte)[1];

        return $r18;

     label1:
        $r1 = staticinvoke <org.bouncycastle.math.ec.ECPoint: org.bouncycastle.asn1.x9.X9IntegerConverter access$000()>();

        $r2 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement x>;

        $i0 = virtualinvoke $r1.<org.bouncycastle.asn1.x9.X9IntegerConverter: int getByteLength(org.bouncycastle.math.ec.ECFieldElement)>($r2);

        $z1 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: boolean withCompression>;

        if $z1 == 0 goto label4;

        $r11 = virtualinvoke r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement getY()>();

        $r12 = virtualinvoke $r11.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $z2 = virtualinvoke $r12.<java.math.BigInteger: boolean testBit(int)>(0);

        if $z2 == 0 goto label2;

        b12 = 3;

        goto label3;

     label2:
        b12 = 2;

     label3:
        $r13 = staticinvoke <org.bouncycastle.math.ec.ECPoint: org.bouncycastle.asn1.x9.X9IntegerConverter access$000()>();

        $r14 = virtualinvoke r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r15 = virtualinvoke $r14.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r16 = virtualinvoke $r13.<org.bouncycastle.asn1.x9.X9IntegerConverter: byte[] integerToBytes(java.math.BigInteger,int)>($r15, $i0);

        $i9 = lengthof $r16;

        $i10 = $i9 + 1;

        $r17 = newarray (byte)[$i10];

        $r17[0] = b12;

        $i11 = lengthof $r16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, 0, $r17, 1, $i11);

        return $r17;

     label4:
        $r3 = staticinvoke <org.bouncycastle.math.ec.ECPoint: org.bouncycastle.asn1.x9.X9IntegerConverter access$000()>();

        $r4 = virtualinvoke r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r5 = virtualinvoke $r4.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r6 = virtualinvoke $r3.<org.bouncycastle.asn1.x9.X9IntegerConverter: byte[] integerToBytes(java.math.BigInteger,int)>($r5, $i0);

        $r7 = staticinvoke <org.bouncycastle.math.ec.ECPoint: org.bouncycastle.asn1.x9.X9IntegerConverter access$000()>();

        $r8 = virtualinvoke r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement getY()>();

        $r9 = virtualinvoke $r8.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r10 = virtualinvoke $r7.<org.bouncycastle.asn1.x9.X9IntegerConverter: byte[] integerToBytes(java.math.BigInteger,int)>($r9, $i0);

        $i2 = lengthof $r6;

        $i1 = lengthof $r10;

        $i3 = $i2 + $i1;

        $i4 = $i3 + 1;

        r19 = newarray (byte)[$i4];

        r19[0] = 4;

        $i5 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r19, 1, $i5);

        $i6 = lengthof $r6;

        $i8 = $i6 + 1;

        $i7 = lengthof $r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, r19, $i8, $i7);

        return r19;
    }

    public org.bouncycastle.math.ec.ECPoint add(org.bouncycastle.math.ec.ECPoint)
    {
        boolean $z0, $z1, $z2, $z3;
        org.bouncycastle.math.ec.ECPoint$Fp r0, $r21;
        org.bouncycastle.math.ec.ECFieldElement $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r23, $r24;
        org.bouncycastle.math.ec.ECPoint r1, $r26, $r27;
        org.bouncycastle.math.ec.ECCurve $r22, $r25;

        r0 := @this: org.bouncycastle.math.ec.ECPoint$Fp;

        r1 := @parameter0: org.bouncycastle.math.ec.ECPoint;

        $z0 = virtualinvoke r0.<org.bouncycastle.math.ec.ECPoint$Fp: boolean isInfinity()>();

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $z1 = virtualinvoke r1.<org.bouncycastle.math.ec.ECPoint: boolean isInfinity()>();

        if $z1 == 0 goto label2;

        return r0;

     label2:
        $r3 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement x>;

        $r2 = r1.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement x>;

        $z2 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z2 == 0 goto label4;

        $r24 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement y>;

        $r23 = r1.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement y>;

        $z3 = virtualinvoke $r24.<java.lang.Object: boolean equals(java.lang.Object)>($r23);

        if $z3 == 0 goto label3;

        $r27 = virtualinvoke r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECPoint twice()>();

        return $r27;

     label3:
        $r25 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECCurve curve>;

        $r26 = virtualinvoke $r25.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECPoint getInfinity()>();

        return $r26;

     label4:
        $r5 = r1.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement y>;

        $r4 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement y>;

        $r6 = virtualinvoke $r5.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)>($r4);

        $r8 = r1.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement x>;

        $r7 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement x>;

        $r9 = virtualinvoke $r8.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)>($r7);

        $r10 = virtualinvoke $r6.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement)>($r9);

        $r11 = virtualinvoke $r10.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement square()>();

        $r12 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement x>;

        $r13 = virtualinvoke $r11.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)>($r12);

        $r14 = r1.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement x>;

        $r15 = virtualinvoke $r13.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)>($r14);

        $r16 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement x>;

        $r17 = virtualinvoke $r16.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)>($r15);

        $r18 = virtualinvoke $r10.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)>($r17);

        $r19 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement y>;

        $r20 = virtualinvoke $r18.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)>($r19);

        $r21 = new org.bouncycastle.math.ec.ECPoint$Fp;

        $r22 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECCurve curve>;

        specialinvoke $r21.<org.bouncycastle.math.ec.ECPoint$Fp: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECFieldElement,org.bouncycastle.math.ec.ECFieldElement)>($r22, $r15, $r20);

        return $r21;
    }

    public org.bouncycastle.math.ec.ECPoint twice()
    {
        java.math.BigInteger $r2, $r4, $r7;
        boolean $z0, $z1;
        org.bouncycastle.math.ec.ECPoint$Fp r0, $r27;
        org.bouncycastle.math.ec.ECFieldElement $r1, $r5, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        org.bouncycastle.math.ec.ECPoint $r30;
        int $i0;
        org.bouncycastle.math.ec.ECCurve $r3, $r6, $r12, $r28, $r29;

        r0 := @this: org.bouncycastle.math.ec.ECPoint$Fp;

        $z0 = virtualinvoke r0.<org.bouncycastle.math.ec.ECPoint$Fp: boolean isInfinity()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement y>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label2;

        $r29 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECCurve curve>;

        $r30 = virtualinvoke $r29.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECPoint getInfinity()>();

        return $r30;

     label2:
        $r3 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECCurve curve>;

        $r4 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2L);

        $r5 = virtualinvoke $r3.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)>($r4);

        $r6 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECCurve curve>;

        $r7 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(3L);

        $r8 = virtualinvoke $r6.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)>($r7);

        $r9 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement x>;

        $r10 = virtualinvoke $r9.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement square()>();

        $r11 = virtualinvoke $r10.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)>($r8);

        $r12 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECCurve curve>;

        $r13 = $r12.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECFieldElement a>;

        $r14 = virtualinvoke $r11.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement)>($r13);

        $r15 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement y>;

        $r16 = virtualinvoke $r15.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)>($r5);

        $r17 = virtualinvoke $r14.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement)>($r16);

        $r18 = virtualinvoke $r17.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement square()>();

        $r19 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement x>;

        $r20 = virtualinvoke $r19.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)>($r5);

        $r21 = virtualinvoke $r18.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)>($r20);

        $r22 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement x>;

        $r23 = virtualinvoke $r22.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)>($r21);

        $r24 = virtualinvoke $r17.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)>($r23);

        $r25 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement y>;

        $r26 = virtualinvoke $r24.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)>($r25);

        $r27 = new org.bouncycastle.math.ec.ECPoint$Fp;

        $r28 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECCurve curve>;

        $z1 = r0.<org.bouncycastle.math.ec.ECPoint$Fp: boolean withCompression>;

        specialinvoke $r27.<org.bouncycastle.math.ec.ECPoint$Fp: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECFieldElement,org.bouncycastle.math.ec.ECFieldElement,boolean)>($r28, $r21, $r26, $z1);

        return $r27;
    }

    public org.bouncycastle.math.ec.ECPoint subtract(org.bouncycastle.math.ec.ECPoint)
    {
        org.bouncycastle.math.ec.ECPoint r0, $r2, $r3;
        org.bouncycastle.math.ec.ECPoint$Fp r1;
        boolean $z0;

        r1 := @this: org.bouncycastle.math.ec.ECPoint$Fp;

        r0 := @parameter0: org.bouncycastle.math.ec.ECPoint;

        $z0 = virtualinvoke r0.<org.bouncycastle.math.ec.ECPoint: boolean isInfinity()>();

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r2 = virtualinvoke r0.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECPoint negate()>();

        $r3 = virtualinvoke r1.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECPoint add(org.bouncycastle.math.ec.ECPoint)>($r2);

        return $r3;
    }

    public org.bouncycastle.math.ec.ECPoint negate()
    {
        org.bouncycastle.math.ec.ECCurve $r3;
        org.bouncycastle.math.ec.ECPoint$Fp $r0, r1;
        org.bouncycastle.math.ec.ECFieldElement $r2, $r4, $r5;
        boolean $z0;

        r1 := @this: org.bouncycastle.math.ec.ECPoint$Fp;

        $r0 = new org.bouncycastle.math.ec.ECPoint$Fp;

        $r3 = r1.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECCurve curve>;

        $r4 = r1.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement x>;

        $r2 = r1.<org.bouncycastle.math.ec.ECPoint$Fp: org.bouncycastle.math.ec.ECFieldElement y>;

        $r5 = virtualinvoke $r2.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement negate()>();

        $z0 = r1.<org.bouncycastle.math.ec.ECPoint$Fp: boolean withCompression>;

        specialinvoke $r0.<org.bouncycastle.math.ec.ECPoint$Fp: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECFieldElement,org.bouncycastle.math.ec.ECFieldElement,boolean)>($r3, $r4, $r5, $z0);

        return $r0;
    }
}
