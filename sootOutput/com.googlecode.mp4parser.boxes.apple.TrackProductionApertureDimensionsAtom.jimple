public class com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    double width;
    double height;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3;

    public void <init>()
    {
        com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom r0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("prof");

        return;
    }

    protected long getContentSize()
    {
        com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom r0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom;

        return 12L;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom r0;
        java.nio.ByteBuffer r1;
        double $d0, $d1;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $d0 = r0.<com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: double width>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeFixedPoint1616(java.nio.ByteBuffer,double)>(r1, $d0);

        $d1 = r0.<com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: double height>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeFixedPoint1616(java.nio.ByteBuffer,double)>(r1, $d1);

        return;
    }

    protected void _parseDetails(java.nio.ByteBuffer)
    {
        com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom r0;
        java.nio.ByteBuffer r1;
        double $d0, $d1;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $d0 = staticinvoke <com.coremedia.iso.IsoTypeReader: double readFixedPoint1616(java.nio.ByteBuffer)>(r1);

        r0.<com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: double width> = $d0;

        $d1 = staticinvoke <com.coremedia.iso.IsoTypeReader: double readFixedPoint1616(java.nio.ByteBuffer)>(r1);

        r0.<com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: double height> = $d1;

        return;
    }

    public double getWidth()
    {
        com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        org.aspectj.lang.JoinPoint $r2;
        double $d0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom;

        $r1 = <com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $d0 = r0.<com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: double width>;

        return $d0;
    }

    public void setWidth(double)
    {
        com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;
        double d0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom;

        d0 := @parameter0: double;

        $r1 = <com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object doubleObject(double)>(d0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        r0.<com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: double width> = d0;

        return;
    }

    public double getHeight()
    {
        com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        org.aspectj.lang.JoinPoint $r2;
        double $d0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom;

        $r1 = <com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $d0 = r0.<com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: double height>;

        return $d0;
    }

    public void setHeight(double)
    {
        com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;
        double d0;

        r0 := @this: com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom;

        d0 := @parameter0: double;

        $r1 = <com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object doubleObject(double)>(d0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        r0.<com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: double height> = d0;

        return;
    }

    static void <clinit>()
    {
        <com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: java.lang.String TYPE> = "prof";

        staticinvoke <com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: void ajc$preClinit()>();

        return;
    }

    private static void ajc$preClinit()
    {
        org.aspectj.runtime.reflect.Factory $r0;
        org.aspectj.lang.JoinPoint$StaticPart $r2, $r4, $r6, $r8;
        org.aspectj.lang.reflect.MethodSignature $r1, $r3, $r5, $r7;

        $r0 = new org.aspectj.runtime.reflect.Factory;

        specialinvoke $r0.<org.aspectj.runtime.reflect.Factory: void <init>(java.lang.String,java.lang.Class)>("TrackProductionApertureDimensionsAtom.java", class "Lcom/googlecode/mp4parser/boxes/apple/TrackProductionApertureDimensionsAtom;");

        $r1 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getWidth", "com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom", "", "", "", "double");

        $r2 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r1, 44);

        <com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0> = $r2;

        $r3 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setWidth", "com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom", "double", "width", "", "void");

        $r4 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r3, 48);

        <com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1> = $r4;

        $r5 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getHeight", "com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom", "", "", "", "double");

        $r6 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r5, 52);

        <com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2> = $r6;

        $r7 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setHeight", "com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom", "double", "height", "", "void");

        $r8 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r7, 56);

        <com.googlecode.mp4parser.boxes.apple.TrackProductionApertureDimensionsAtom: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3> = $r8;

        return;
    }
}
