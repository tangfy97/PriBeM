class ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord extends java.lang.Object implements java.lang.Comparable
{
    ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord vc;
    ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord tc;
    int ntimes;
    int nverts;
    double[][] vcForTimeIndex;
    java.util.List restrictList;
    final ucar.nc2.dt.fmrc.FmrcDefinition this$0;

    void <init>(ucar.nc2.dt.fmrc.FmrcDefinition, ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord)
    {
        ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord r0;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord r2;
        double[] $r5, $r6;
        ucar.nc2.dt.fmrc.FmrcDefinition r1;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord $r3, $r4;
        int $i0, $i1;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord;

        r1 := @parameter0: ucar.nc2.dt.fmrc.FmrcDefinition;

        r2 := @parameter1: ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord;

        r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.FmrcDefinition this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord vc> = r2;

        $r3 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord tc>;

        if $r3 != null goto label1;

        $i1 = 1;

        goto label2;

     label1:
        $r4 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord tc>;

        $r5 = virtualinvoke $r4.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord: double[] getOffsetHours()>();

        $i1 = lengthof $r5;

     label2:
        r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: int ntimes> = $i1;

        $r6 = virtualinvoke r2.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord: double[] getValues1()>();

        $i0 = lengthof $r6;

        r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: int nverts> = $i0;

        return;
    }

    void <init>(ucar.nc2.dt.fmrc.FmrcDefinition, ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord, ucar.nc2.dt.fmrc.FmrcDefinition$RunSeq)
    {
        ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord r0;
        boolean $z0, $z1;
        ucar.nc2.dt.fmrc.FmrcDefinition r1;
        java.util.List $r4, $r10;
        java.lang.Object[] $r7;
        java.lang.Double $r20;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord r14;
        double[] $r17, $r18, $r23, r26;
        ucar.nc2.dt.fmrc.FmrcDefinition$RunSeq r2;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord $r11, $r12, $r13, $r15, $r16, $r22, $r24;
        java.util.HashSet $r3;
        int $i0, $i1, $i2, $i3, i4, $i5;
        double $d0;
        java.util.Iterator $r5;
        ucar.nc2.dt.fmrc.FmrcDefinition$Run r25;
        java.lang.Double[] $r6, $r8, $r9;
        java.lang.Object $r19, $r21;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord;

        r1 := @parameter0: ucar.nc2.dt.fmrc.FmrcDefinition;

        r14 := @parameter1: ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord;

        r2 := @parameter2: ucar.nc2.dt.fmrc.FmrcDefinition$RunSeq;

        r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.FmrcDefinition this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = staticinvoke <ucar.nc2.dt.fmrc.FmrcDefinition$RunSeq: boolean access$600(ucar.nc2.dt.fmrc.FmrcDefinition$RunSeq)>(r2);

        if $z0 == 0 goto label1;

        $r24 = staticinvoke <ucar.nc2.dt.fmrc.FmrcDefinition$RunSeq: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord access$700(ucar.nc2.dt.fmrc.FmrcDefinition$RunSeq)>(r2);

        r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord tc> = $r24;

        goto label6;

     label1:
        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $r4 = staticinvoke <ucar.nc2.dt.fmrc.FmrcDefinition$RunSeq: java.util.List access$800(ucar.nc2.dt.fmrc.FmrcDefinition$RunSeq)>(r2);

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r21 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r25 = (ucar.nc2.dt.fmrc.FmrcDefinition$Run) $r21;

        $r22 = r25.<ucar.nc2.dt.fmrc.FmrcDefinition$Run: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord tc>;

        $r23 = virtualinvoke $r22.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord: double[] getOffsetHours()>();

        specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: void addValues(java.util.Set,double[])>($r3, $r23);

        goto label2;

     label3:
        $i0 = interfaceinvoke $r3.<java.util.Set: int size()>();

        $r6 = newarray (java.lang.Double)[$i0];

        $r7 = interfaceinvoke $r3.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (java.lang.Double[]) $r7;

        $r9 = (java.lang.Double[]) $r8;

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r10);

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        r26 = newarray (double)[$i1];

        i4 = 0;

     label4:
        $i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        if i4 >= $i2 goto label5;

        $r19 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i4);

        $r20 = (java.lang.Double) $r19;

        $d0 = virtualinvoke $r20.<java.lang.Double: double doubleValue()>();

        r26[i4] = $d0;

        i4 = i4 + 1;

        goto label4;

     label5:
        $r11 = new ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord;

        specialinvoke $r11.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord: void <init>()>();

        r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord tc> = $r11;

        $r12 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord tc>;

        virtualinvoke $r12.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord: void setOffsetHours(double[])>(r26);

        $r13 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord tc>;

        virtualinvoke $r13.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord: void setId(java.lang.String)>("union");

     label6:
        r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord vc> = r14;

        $r15 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord tc>;

        if $r15 != null goto label7;

        $i5 = 1;

        goto label8;

     label7:
        $r16 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord tc>;

        $r17 = virtualinvoke $r16.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord: double[] getOffsetHours()>();

        $i5 = lengthof $r17;

     label8:
        r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: int ntimes> = $i5;

        $r18 = virtualinvoke r14.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord: double[] getValues1()>();

        $i3 = lengthof $r18;

        r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: int nverts> = $i3;

        return;
    }

    private void addValues(java.util.Set, double[])
    {
        ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord r3;
        java.lang.Double $r2;
        double[] r0;
        int i0, i1;
        java.util.Set r1;
        double d0;

        r3 := @this: ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord;

        r1 := @parameter0: java.util.Set;

        r0 := @parameter1: double[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        d0 = r0[i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    java.lang.String getId()
    {
        ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord r0;
        java.lang.String $r2;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord $r1;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord vc>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord: java.lang.String getId()>();

        return $r2;
    }

    java.lang.String getName()
    {
        ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord r0;
        java.lang.String $r2;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord $r1;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord vc>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord: java.lang.String getName()>();

        return $r2;
    }

    void addRestriction(java.lang.String, java.lang.String)
    {
        ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord r3;
        boolean $z0, $z1;
        java.util.List $r5, $r7;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r19;
        double[][] $r4, $r11, $r22, $r23, $r25;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord $r24;
        double[] r2, $r26;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord $r10, $r17;
        java.util.ArrayList $r21;
        java.util.StringTokenizer $r0, $r8;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.String r1, r6, $r9, $r18, $r20, $r27;
        double $d0, $d1;
        org.slf4j.Logger $r12;

        r3 := @this: ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, " ,");

        $i0 = virtualinvoke $r0.<java.util.StringTokenizer: int countTokens()>();

        r2 = newarray (double)[$i0];

        i5 = 0;

     label1:
        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        $i4 = i5;

        i5 = i5 + 1;

        $r27 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r27);

        r2[$i4] = $d1;

        goto label1;

     label2:
        $r4 = r3.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: double[][] vcForTimeIndex>;

        if $r4 != null goto label4;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r3.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: java.util.List restrictList> = $r21;

        $i2 = r3.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: int ntimes>;

        $r22 = newarray (double[])[$i2];

        r3.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: double[][] vcForTimeIndex> = $r22;

        i6 = 0;

     label3:
        $r23 = r3.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: double[][] vcForTimeIndex>;

        $i3 = lengthof $r23;

        if i6 >= $i3 goto label4;

        $r25 = r3.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: double[][] vcForTimeIndex>;

        $r24 = r3.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord vc>;

        $r26 = virtualinvoke $r24.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord: double[] getValues1()>();

        $r25[i6] = $r26;

        i6 = i6 + 1;

        goto label3;

     label4:
        $r5 = r3.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: java.util.List restrictList>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r7 = r3.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: java.util.List restrictList>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r6);

        $r8 = new java.util.StringTokenizer;

        specialinvoke $r8.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r6, " ,");

     label5:
        $z1 = virtualinvoke $r8.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label7;

        $r9 = virtualinvoke $r8.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r9);

        $r10 = r3.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord tc>;

        $i1 = virtualinvoke $r10.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord: int findIndex(double)>($d0);

        if $i1 >= 0 goto label6;

        $r12 = staticinvoke <ucar.nc2.dt.fmrc.FmrcDefinition: org.slf4j.Logger access$900()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hour Offset");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found in TimeCoord ");

        $r17 = r3.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord tc>;

        $r18 = virtualinvoke $r17.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord: java.lang.String getId()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void error(java.lang.String)>($r20);

     label6:
        $r11 = r3.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: double[][] vcForTimeIndex>;

        $r11[$i1] = r2;

        goto label5;

     label7:
        return;
    }

    double[] getVertCoords(double)
    {
        ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord r0;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord $r2;
        double[] $r3, $r7, $r8;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord $r1, $r5;
        int $i0;
        double[][] $r4, $r6;
        double d0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord tc>;

        if $r1 == null goto label1;

        $r4 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: double[][] vcForTimeIndex>;

        if null != $r4 goto label2;

     label1:
        $r2 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord vc>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord: double[] getValues1()>();

        return $r3;

     label2:
        $r5 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord tc>;

        $i0 = virtualinvoke $r5.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord: int findIndex(double)>(d0);

        if $i0 >= 0 goto label3;

        $r8 = newarray (double)[0];

        return $r8;

     label3:
        $r6 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: double[][] vcForTimeIndex>;

        $r7 = $r6[$i0];

        return $r7;
    }

    int countVertCoords(double)
    {
        ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord r0;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord $r2;
        double[] $r3, $r7;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord $r1, $r5;
        int $i0, $i1, $i2;
        double[][] $r4, $r6;
        double d0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord tc>;

        if $r1 == null goto label1;

        $r4 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: double[][] vcForTimeIndex>;

        if null != $r4 goto label2;

     label1:
        $r2 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord vc>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord: double[] getValues1()>();

        $i0 = lengthof $r3;

        return $i0;

     label2:
        $r5 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord tc>;

        $i1 = virtualinvoke $r5.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord: int findIndex(double)>(d0);

        if $i1 >= 0 goto label3;

        return 0;

     label3:
        $r6 = r0.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: double[][] vcForTimeIndex>;

        $r7 = $r6[$i1];

        $i2 = lengthof $r7;

        return $i2;
    }

    public int compareTo(java.lang.Object)
    {
        ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord r1, r2;
        int $i0;
        java.lang.Object r0;
        java.lang.String $r3, $r4;

        r2 := @this: ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord;

        r0 := @parameter0: java.lang.Object;

        r1 = (ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord) r0;

        $r3 = virtualinvoke r2.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: java.lang.String getName()>();

        $r4 = virtualinvoke r1.<ucar.nc2.dt.fmrc.FmrcDefinition$VertTimeCoord: java.lang.String getName()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r4);

        return $i0;
    }
}
