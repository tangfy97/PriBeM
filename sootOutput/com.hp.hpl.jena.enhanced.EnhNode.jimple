public class com.hp.hpl.jena.enhanced.EnhNode extends com.hp.hpl.jena.enhanced.Polymorphic implements com.hp.hpl.jena.graph.FrontsNode
{
    protected final com.hp.hpl.jena.graph.Node node;
    protected final com.hp.hpl.jena.enhanced.EnhGraph enhGraph;

    public void <init>(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.enhanced.EnhNode r0;
        com.hp.hpl.jena.enhanced.EnhGraph r2;

        r0 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        specialinvoke r0.<com.hp.hpl.jena.enhanced.Polymorphic: void <init>()>();

        r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.graph.Node node> = r1;

        r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.enhanced.EnhGraph enhGraph> = r2;

        return;
    }

    public com.hp.hpl.jena.graph.Node asNode()
    {
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.enhanced.EnhNode r0;

        r0 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        $r1 = r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.graph.Node node>;

        return $r1;
    }

    public com.hp.hpl.jena.enhanced.EnhGraph getGraph()
    {
        com.hp.hpl.jena.enhanced.EnhNode r0;
        com.hp.hpl.jena.enhanced.EnhGraph $r1;

        r0 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        $r1 = r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.enhanced.EnhGraph enhGraph>;

        return $r1;
    }

    public final boolean isAnon()
    {
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.enhanced.EnhNode r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        $r1 = r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.graph.Node node>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: boolean isBlank()>();

        return $z0;
    }

    public final boolean isLiteral()
    {
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.enhanced.EnhNode r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        $r1 = r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.graph.Node node>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: boolean isLiteral()>();

        return $z0;
    }

    public final boolean isURIResource()
    {
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.enhanced.EnhNode r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        $r1 = r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.graph.Node node>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        return $z0;
    }

    public final boolean isResource()
    {
        com.hp.hpl.jena.enhanced.EnhNode r0;
        com.hp.hpl.jena.graph.Node $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        $r1 = r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.graph.Node node>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.graph.Node node>;

        $z1 = virtualinvoke $r2.<com.hp.hpl.jena.graph.Node: boolean isBlank()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public com.hp.hpl.jena.rdf.model.RDFNode viewAs(java.lang.Class)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.enhanced.EnhNode r0;
        java.lang.Class r1;
        java.lang.Object $r2;

        r0 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: java.lang.Object asInternal(java.lang.Class)>(r1);

        $r3 = (com.hp.hpl.jena.rdf.model.RDFNode) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.enhanced.EnhNode r0;
        java.lang.Class r1;
        java.lang.Object $r2;

        r0 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: java.lang.Object asInternal(java.lang.Class)>(r1);

        $r3 = (com.hp.hpl.jena.rdf.model.RDFNode) $r2;

        return $r3;
    }

    public boolean canAs(java.lang.Class)
    {
        java.lang.Class r1;
        com.hp.hpl.jena.enhanced.EnhNode r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        r1 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: boolean canSupport(java.lang.Class)>(r1);

        return $z0;
    }

    public final int hashCode()
    {
        int $i0;
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.enhanced.EnhNode r0;

        r0 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        $r1 = r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.graph.Node node>;

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: int hashCode()>();

        return $i0;
    }

    public final boolean equals(java.lang.Object)
    {
        com.hp.hpl.jena.graph.FrontsNode $r2;
        com.hp.hpl.jena.enhanced.EnhNode r1;
        com.hp.hpl.jena.graph.Node $r3, $r4;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.hp.hpl.jena.graph.FrontsNode;

        if $z0 == 0 goto label1;

        $r3 = r1.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.graph.Node node>;

        $r2 = (com.hp.hpl.jena.graph.FrontsNode) r0;

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.graph.FrontsNode: com.hp.hpl.jena.graph.Node asNode()>();

        $z1 = virtualinvoke $r3.<com.hp.hpl.jena.graph.Node: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isValid()
    {
        com.hp.hpl.jena.enhanced.EnhNode r0;

        r0 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        return 1;
    }

    protected com.hp.hpl.jena.rdf.model.RDFNode convertTo(java.lang.Class)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r8;
        com.hp.hpl.jena.enhanced.EnhNode r0, $r6;
        com.hp.hpl.jena.enhanced.Implementation $r4;
        com.hp.hpl.jena.graph.Node $r5;
        com.hp.hpl.jena.enhanced.EnhGraph $r1;
        com.hp.hpl.jena.enhanced.Personality $r2;
        java.lang.Class r3;
        java.lang.Object $r7;
        com.hp.hpl.jena.enhanced.UnsupportedPolymorphismException $r9, $r10;

        r0 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        r3 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.enhanced.EnhGraph getGraph()>();

        if $r1 != null goto label1;

        $r10 = new com.hp.hpl.jena.enhanced.UnsupportedPolymorphismException;

        specialinvoke $r10.<com.hp.hpl.jena.enhanced.UnsupportedPolymorphismException: void <init>(java.lang.Object,boolean,java.lang.Class)>(r0, 0, r3);

        throw $r10;

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.enhanced.Personality getPersonality()>();

        $r4 = virtualinvoke $r2.<com.hp.hpl.jena.enhanced.Personality: com.hp.hpl.jena.enhanced.Implementation getImplementation(java.lang.Class)>(r3);

        if $r4 != null goto label2;

        $r9 = new com.hp.hpl.jena.enhanced.UnsupportedPolymorphismException;

        specialinvoke $r9.<com.hp.hpl.jena.enhanced.UnsupportedPolymorphismException: void <init>(java.lang.Object,boolean,java.lang.Class)>(r0, 1, r3);

        throw $r9;

     label2:
        $r5 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.graph.Node asNode()>();

        $r6 = virtualinvoke $r4.<com.hp.hpl.jena.enhanced.Implementation: com.hp.hpl.jena.enhanced.EnhNode wrap(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>($r5, $r1);

        virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: void addView(com.hp.hpl.jena.enhanced.Polymorphic)>($r6);

        $r7 = virtualinvoke r3.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r6);

        $r8 = (com.hp.hpl.jena.rdf.model.RDFNode) $r7;

        return $r8;
    }

    protected boolean canSupport(java.lang.Class)
    {
        com.hp.hpl.jena.enhanced.EnhNode r0;
        com.hp.hpl.jena.enhanced.Implementation $r4;
        com.hp.hpl.jena.graph.Node $r5;
        com.hp.hpl.jena.enhanced.EnhGraph $r2, $r6;
        com.hp.hpl.jena.enhanced.Personality $r3;
        java.lang.Class r1;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        r1 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: boolean alreadyHasView(java.lang.Class)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.enhanced.EnhGraph getGraph()>();

        if $r2 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.enhanced.Personality getPersonality()>();

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.enhanced.Personality: com.hp.hpl.jena.enhanced.Implementation getImplementation(java.lang.Class)>(r1);

        if $r4 != null goto label3;

        $z1 = 0;

        goto label4;

     label3:
        $r5 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.graph.Node asNode()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.enhanced.EnhGraph getGraph()>();

        $z1 = virtualinvoke $r4.<com.hp.hpl.jena.enhanced.Implementation: boolean canWrap(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>($r5, $r6);

     label4:
        return $z1;
    }

    protected com.hp.hpl.jena.enhanced.Personality getPersonality()
    {
        com.hp.hpl.jena.enhanced.EnhNode r0;
        com.hp.hpl.jena.enhanced.EnhGraph $r1;
        com.hp.hpl.jena.enhanced.Personality $r2;

        r0 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.enhanced.EnhGraph getGraph()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.enhanced.EnhGraph: com.hp.hpl.jena.enhanced.Personality getPersonality()>();

        return $r2;
    }

    protected volatile java.lang.Object convertTo(java.lang.Class)
    {
        java.lang.Class r1;
        com.hp.hpl.jena.rdf.model.RDFNode $r2;
        com.hp.hpl.jena.enhanced.EnhNode r0;

        r0 := @this: com.hp.hpl.jena.enhanced.EnhNode;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhNode: com.hp.hpl.jena.rdf.model.RDFNode convertTo(java.lang.Class)>(r1);

        return $r2;
    }
}
