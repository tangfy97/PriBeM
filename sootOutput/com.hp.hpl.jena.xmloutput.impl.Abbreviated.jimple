public class com.hp.hpl.jena.xmloutput.impl.Abbreviated extends com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter implements com.hp.hpl.jena.rdf.model.RDFErrorHandler
{
    private com.hp.hpl.jena.rdf.model.Resource[] types;
    boolean sReification;
    boolean sIdAttr;
    boolean sDamlCollection;
    boolean sParseTypeCollectionPropertyElt;
    boolean sListExpand;
    boolean sParseTypeLiteralPropertyElt;
    boolean sParseTypeResourcePropertyElt;
    boolean sPropertyAttr;
    boolean sResourcePropertyElt;

    public void <init>()
    {
        com.hp.hpl.jena.xmloutput.impl.Abbreviated r0;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        com.hp.hpl.jena.rdf.model.Resource[] $r1;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Abbreviated;

        specialinvoke r0.<com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter: void <init>()>();

        $r1 = newarray (com.hp.hpl.jena.rdf.model.Resource)[11];

        $r2 = <com.hp.hpl.jena.vocabulary.OWL: com.hp.hpl.jena.rdf.model.Resource Ontology>;

        $r1[0] = $r2;

        $r3 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Datatype>;

        $r1[1] = $r3;

        $r4 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Class>;

        $r1[2] = $r4;

        $r5 = <com.hp.hpl.jena.vocabulary.OWL: com.hp.hpl.jena.rdf.model.Resource Class>;

        $r1[3] = $r5;

        $r6 = <com.hp.hpl.jena.vocabulary.OWL: com.hp.hpl.jena.rdf.model.Resource ObjectProperty>;

        $r1[4] = $r6;

        $r7 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Resource Property>;

        $r1[5] = $r7;

        $r8 = <com.hp.hpl.jena.vocabulary.OWL: com.hp.hpl.jena.rdf.model.Resource DatatypeProperty>;

        $r1[6] = $r8;

        $r9 = <com.hp.hpl.jena.vocabulary.OWL: com.hp.hpl.jena.rdf.model.Resource TransitiveProperty>;

        $r1[7] = $r9;

        $r10 = <com.hp.hpl.jena.vocabulary.OWL: com.hp.hpl.jena.rdf.model.Resource SymmetricProperty>;

        $r1[8] = $r10;

        $r11 = <com.hp.hpl.jena.vocabulary.OWL: com.hp.hpl.jena.rdf.model.Resource FunctionalProperty>;

        $r1[9] = $r11;

        $r12 = <com.hp.hpl.jena.vocabulary.OWL: com.hp.hpl.jena.rdf.model.Resource InverseFunctionalProperty>;

        $r1[10] = $r12;

        r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: com.hp.hpl.jena.rdf.model.Resource[] types> = $r1;

        virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: void unblockAll()>();

        $r13 = <com.hp.hpl.jena.vocabulary.RDFSyntax: com.hp.hpl.jena.rdf.model.Resource propertyAttr>;

        virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: void blockRule(com.hp.hpl.jena.rdf.model.Resource)>($r13);

        return;
    }

    protected void unblockAll()
    {
        com.hp.hpl.jena.xmloutput.impl.Abbreviated r0;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Abbreviated;

        r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sDamlCollection> = 0;

        r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sReification> = 0;

        r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sResourcePropertyElt> = 0;

        r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sParseTypeLiteralPropertyElt> = 0;

        r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sParseTypeResourcePropertyElt> = 0;

        r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sParseTypeCollectionPropertyElt> = 0;

        r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sIdAttr> = 0;

        r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sPropertyAttr> = 0;

        r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sListExpand> = 0;

        return;
    }

    protected void blockRule(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.xmloutput.impl.SimpleLogger $r9;
        java.lang.String $r11, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.hp.hpl.jena.xmloutput.impl.Abbreviated r15;
        com.hp.hpl.jena.rdf.model.Resource r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.StringBuilder $r8, $r10, $r12, $r13;

        r15 := @this: com.hp.hpl.jena.xmloutput.impl.Abbreviated;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = <com.hp.hpl.jena.vocabulary.RDFSyntax: com.hp.hpl.jena.rdf.model.Resource sectionReification>;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        r15.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sReification> = 1;

        goto label8;

     label1:
        $r2 = <com.hp.hpl.jena.vocabulary.RDFSyntax: com.hp.hpl.jena.rdf.model.Resource sectionListExpand>;

        $z1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        r15.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sListExpand> = 1;

        goto label8;

     label2:
        $r3 = <com.hp.hpl.jena.vocabulary.RDFSyntax: com.hp.hpl.jena.rdf.model.Resource parseTypeLiteralPropertyElt>;

        $z2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label3;

        r15.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sParseTypeLiteralPropertyElt> = 1;

        goto label8;

     label3:
        $r4 = <com.hp.hpl.jena.vocabulary.RDFSyntax: com.hp.hpl.jena.rdf.model.Resource parseTypeResourcePropertyElt>;

        $z3 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean equals(java.lang.Object)>($r4);

        if $z3 == 0 goto label4;

        r15.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sParseTypeResourcePropertyElt> = 1;

        goto label8;

     label4:
        $r5 = <com.hp.hpl.jena.vocabulary.RDFSyntax: com.hp.hpl.jena.rdf.model.Resource parseTypeCollectionPropertyElt>;

        $z4 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean equals(java.lang.Object)>($r5);

        if $z4 == 0 goto label5;

        r15.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sParseTypeCollectionPropertyElt> = 1;

        goto label8;

     label5:
        $r6 = <com.hp.hpl.jena.vocabulary.RDFSyntax: com.hp.hpl.jena.rdf.model.Resource idAttr>;

        $z5 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean equals(java.lang.Object)>($r6);

        if $z5 == 0 goto label6;

        r15.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sIdAttr> = 1;

        r15.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sReification> = 1;

        goto label8;

     label6:
        $r7 = <com.hp.hpl.jena.vocabulary.RDFSyntax: com.hp.hpl.jena.rdf.model.Resource propertyAttr>;

        $z6 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean equals(java.lang.Object)>($r7);

        if $z6 == 0 goto label7;

        r15.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: boolean sPropertyAttr> = 1;

        goto label8;

     label7:
        $r9 = <com.hp.hpl.jena.xmloutput.impl.Abbreviated: com.hp.hpl.jena.xmloutput.impl.SimpleLogger logger>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot block rule <");

        $r11 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<com.hp.hpl.jena.xmloutput.impl.SimpleLogger: void warn(java.lang.String)>($r14);

     label8:
        return;
    }

    com.hp.hpl.jena.rdf.model.Resource[] setTypes(com.hp.hpl.jena.rdf.model.Resource[])
    {
        com.hp.hpl.jena.rdf.model.Resource[] r1, r2;
        com.hp.hpl.jena.xmloutput.impl.Abbreviated r0;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Abbreviated;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Resource[];

        r1 = r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: com.hp.hpl.jena.rdf.model.Resource[] types>;

        r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: com.hp.hpl.jena.rdf.model.Resource[] types> = r2;

        return r1;
    }

    public synchronized void write(com.hp.hpl.jena.rdf.model.Model, java.io.Writer, java.lang.String)
    {
        com.hp.hpl.jena.xmloutput.impl.Abbreviated r3;
        com.hp.hpl.jena.graph.Capabilities $r2;
        com.hp.hpl.jena.xmloutput.impl.SimpleLogger $r7;
        com.hp.hpl.jena.rdf.model.Model r0;
        java.io.Writer r4;
        java.lang.StringBuilder $r6, $r8, $r11;
        java.lang.Class $r10;
        java.lang.String r5, $r12;
        com.hp.hpl.jena.graph.Graph $r1, $r9;
        boolean $z0;

        r3 := @this: com.hp.hpl.jena.xmloutput.impl.Abbreviated;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r4 := @parameter1: java.io.Writer;

        r5 := @parameter2: java.lang.String;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.graph.Capabilities getCapabilities()>();

        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.graph.Capabilities: boolean findContractSafe()>();

        if $z0 != 0 goto label1;

        $r7 = <com.hp.hpl.jena.xmloutput.impl.Abbreviated: com.hp.hpl.jena.xmloutput.impl.SimpleLogger logger>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Workaround for bugs 803804 and 858163: using RDF/XML (not RDF/XML-ABBREV) writer  for unsafe graph ");

        $r9 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<com.hp.hpl.jena.xmloutput.impl.SimpleLogger: void warn(java.lang.String)>($r12);

        interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model write(java.io.Writer,java.lang.String,java.lang.String)>(r4, "RDF/XML", r5);

        goto label2;

     label1:
        specialinvoke r3.<com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter: void write(com.hp.hpl.jena.rdf.model.Model,java.io.Writer,java.lang.String)>(r0, r4, r5);

     label2:
        return;
    }

    protected void writeBody(com.hp.hpl.jena.rdf.model.Model, java.io.PrintWriter, java.lang.String, boolean)
    {
        java.io.PrintWriter r4;
        com.hp.hpl.jena.xmloutput.impl.Unparser $r0;
        com.hp.hpl.jena.rdf.model.Model r3;
        com.hp.hpl.jena.rdf.model.Resource[] $r5;
        com.hp.hpl.jena.xmloutput.impl.Abbreviated r1;
        java.lang.String r2;
        boolean z0;

        r1 := @this: com.hp.hpl.jena.xmloutput.impl.Abbreviated;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r4 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r0 = new com.hp.hpl.jena.xmloutput.impl.Unparser;

        specialinvoke $r0.<com.hp.hpl.jena.xmloutput.impl.Unparser: void <init>(com.hp.hpl.jena.xmloutput.impl.Abbreviated,java.lang.String,com.hp.hpl.jena.rdf.model.Model,java.io.PrintWriter)>(r1, r2, r3, r4);

        $r5 = r1.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: com.hp.hpl.jena.rdf.model.Resource[] types>;

        virtualinvoke $r0.<com.hp.hpl.jena.xmloutput.impl.Unparser: void setTopLevelTypes(com.hp.hpl.jena.rdf.model.Resource[])>($r5);

        if z0 == 0 goto label1;

        virtualinvoke $r0.<com.hp.hpl.jena.xmloutput.impl.Unparser: void setXMLBase(java.lang.String)>(r2);

     label1:
        virtualinvoke $r0.<com.hp.hpl.jena.xmloutput.impl.Unparser: void write()>();

        return;
    }

    public void error(java.lang.Exception)
    {
        com.hp.hpl.jena.rdf.model.RDFErrorHandler $r2;
        com.hp.hpl.jena.xmloutput.impl.Abbreviated r0;
        java.lang.Exception r1;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Abbreviated;

        r1 := @parameter0: java.lang.Exception;

        $r2 = r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: com.hp.hpl.jena.rdf.model.RDFErrorHandler errorHandler>;

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RDFErrorHandler: void error(java.lang.Exception)>(r1);

        return;
    }

    public void warning(java.lang.Exception)
    {
        com.hp.hpl.jena.rdf.model.RDFErrorHandler $r2;
        com.hp.hpl.jena.xmloutput.impl.Abbreviated r0;
        java.lang.Exception r1;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Abbreviated;

        r1 := @parameter0: java.lang.Exception;

        $r2 = r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: com.hp.hpl.jena.rdf.model.RDFErrorHandler errorHandler>;

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RDFErrorHandler: void warning(java.lang.Exception)>(r1);

        return;
    }

    public void fatalError(java.lang.Exception)
    {
        com.hp.hpl.jena.rdf.model.RDFErrorHandler $r2;
        com.hp.hpl.jena.xmloutput.impl.Abbreviated r0;
        java.lang.Exception r1;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Abbreviated;

        r1 := @parameter0: java.lang.Exception;

        $r2 = r0.<com.hp.hpl.jena.xmloutput.impl.Abbreviated: com.hp.hpl.jena.rdf.model.RDFErrorHandler errorHandler>;

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.RDFErrorHandler: void fatalError(java.lang.Exception)>(r1);

        return;
    }
}
