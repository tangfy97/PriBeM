public class org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2 extends org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt
{
    final org.jdesktop.swingx.JXTreeTable this$0;

    public void <init>(org.jdesktop.swingx.JXTreeTable)
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2 r0;
        org.jdesktop.swingx.JXTreeTable r1;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2;

        r1 := @parameter0: org.jdesktop.swingx.JXTreeTable;

        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: org.jdesktop.swingx.JXTreeTable this$0> = r1;

        specialinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt: void <init>(org.jdesktop.swingx.JXTreeTable)>(r1);

        return;
    }

    protected boolean expandOrCollapseNode(int, java.util.EventObject)
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2 r0;
        java.awt.Component $r30;
        javax.swing.ListSelectionModel $r20;
        javax.swing.table.TableColumnModel $r19;
        long $l6, $l11, $l34;
        org.jdesktop.swingx.JXTreeTable $r1, $r3, $r5, $r8, $r10, $r13, $r15, $r17, $r18, $r21, $r23, $r26;
        java.awt.event.MouseEvent r31, $r32, $r33, $r34;
        java.awt.ComponentOrientation $r27;
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer $r6, $r9, $r11, $r14, $r16, $r22, $r24;
        java.awt.Point $r4;
        java.util.EventObject r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8;
        java.awt.Rectangle $r25;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i35, $i36, $i37, $i38, i39, $i41, $i43, $i45;
        java.lang.Object $r29;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2;

        i0 := @parameter0: int;

        r2 := @parameter1: java.util.EventObject;

        $r1 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: org.jdesktop.swingx.JXTreeTable this$0>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXTreeTable: boolean isHierarchical(int)>(i0);

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $z1 = virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: boolean mightBeExpansionTrigger(java.util.EventObject)>(r2);

        if $z1 != 0 goto label02;

        return 0;

     label02:
        z7 = 0;

        r31 = (java.awt.event.MouseEvent) r2;

        $r3 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: org.jdesktop.swingx.JXTreeTable this$0>;

        $z2 = virtualinvoke $r3.<org.jdesktop.swingx.JXTreeTable: boolean hackAroundDragEnabled(java.awt.event.MouseEvent)>(r31);

        if $z2 == 0 goto label03;

        $r32 = new java.awt.event.MouseEvent;

        $r29 = virtualinvoke r31.<java.awt.event.MouseEvent: java.lang.Object getSource()>();

        $r30 = (java.awt.Component) $r29;

        $l34 = virtualinvoke r31.<java.awt.event.MouseEvent: long getWhen()>();

        $i35 = virtualinvoke r31.<java.awt.event.MouseEvent: int getModifiers()>();

        $i36 = virtualinvoke r31.<java.awt.event.MouseEvent: int getX()>();

        $i37 = virtualinvoke r31.<java.awt.event.MouseEvent: int getY()>();

        $i38 = virtualinvoke r31.<java.awt.event.MouseEvent: int getClickCount()>();

        $z6 = virtualinvoke r31.<java.awt.event.MouseEvent: boolean isPopupTrigger()>();

        specialinvoke $r32.<java.awt.event.MouseEvent: void <init>(java.awt.Component,int,long,int,int,int,int,boolean)>($r30, 501, $l34, $i35, $i36, $i37, $i38, $z6);

        r31 = $r32;

     label03:
        $i1 = virtualinvoke r31.<java.awt.event.MouseEvent: int getModifiers()>();

        if $i1 == 0 goto label04;

        $i33 = virtualinvoke r31.<java.awt.event.MouseEvent: int getModifiers()>();

        if $i33 != 16 goto label14;

     label04:
        $r4 = virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: java.awt.Point getTreeMousePoint(int,java.awt.event.MouseEvent)>(i0, r31);

        $r5 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: org.jdesktop.swingx.JXTreeTable this$0>;

        $r6 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r5);

        $i3 = $r4.<java.awt.Point: int x>;

        $i2 = $r4.<java.awt.Point: int y>;

        $i4 = virtualinvoke $r6.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: int getRowForLocation(int,int)>($i3, $i2);

        i39 = 0;

        if $i4 >= 0 goto label10;

        $r21 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: org.jdesktop.swingx.JXTreeTable this$0>;

        $r22 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r21);

        $i17 = $r4.<java.awt.Point: int x>;

        $i16 = $r4.<java.awt.Point: int y>;

        $i18 = virtualinvoke $r22.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: int getClosestRowForLocation(int,int)>($i17, $i16);

        i39 = $i18;

        $r23 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: org.jdesktop.swingx.JXTreeTable this$0>;

        $r24 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r23);

        $r25 = virtualinvoke $r24.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: java.awt.Rectangle getRowBounds(int)>($i18);

        if $r25 != null goto label05;

        $i41 = (int) -1;

        i39 = $i41;

        goto label09;

     label05:
        $r26 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: org.jdesktop.swingx.JXTreeTable this$0>;

        $r27 = virtualinvoke $r26.<org.jdesktop.swingx.JXTreeTable: java.awt.ComponentOrientation getComponentOrientation()>();

        $z5 = virtualinvoke $r27.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z5 == 0 goto label07;

        $i28 = $r25.<java.awt.Rectangle: int y>;

        $i27 = $r25.<java.awt.Rectangle: int height>;

        $i30 = $i28 + $i27;

        $i29 = $r4.<java.awt.Point: int y>;

        if $i30 < $i29 goto label06;

        $i32 = $r25.<java.awt.Rectangle: int x>;

        $i31 = $r4.<java.awt.Point: int x>;

        if $i32 <= $i31 goto label09;

     label06:
        $i43 = (int) -1;

        i39 = $i43;

        goto label09;

     label07:
        $i20 = $r25.<java.awt.Rectangle: int y>;

        $i19 = $r25.<java.awt.Rectangle: int height>;

        $i22 = $i20 + $i19;

        $i21 = $r4.<java.awt.Point: int y>;

        if $i22 < $i21 goto label08;

        $i24 = $r25.<java.awt.Rectangle: int x>;

        $i23 = $r25.<java.awt.Rectangle: int width>;

        $i26 = $i24 + $i23;

        $i25 = $r4.<java.awt.Point: int x>;

        if $i26 >= $i25 goto label09;

     label08:
        $i45 = (int) -1;

        i39 = $i45;

     label09:
        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: boolean expansionChangedFlag> = 0;

     label10:
        if $i4 >= 0 goto label11;

        if $i4 >= 0 goto label13;

        if i39 >= 0 goto label13;

     label11:
        if $i4 < 0 goto label12;

        $r18 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: org.jdesktop.swingx.JXTreeTable this$0>;

        $r19 = virtualinvoke $r18.<org.jdesktop.swingx.JXTreeTable: javax.swing.table.TableColumnModel getColumnModel()>();

        $r20 = interfaceinvoke $r19.<javax.swing.table.TableColumnModel: javax.swing.ListSelectionModel getSelectionModel()>();

        interfaceinvoke $r20.<javax.swing.ListSelectionModel: void setLeadSelectionIndex(int)>(i0);

     label12:
        $r33 = new java.awt.event.MouseEvent;

        $r8 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: org.jdesktop.swingx.JXTreeTable this$0>;

        $r9 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r8);

        $i5 = virtualinvoke r31.<java.awt.event.MouseEvent: int getID()>();

        $l6 = virtualinvoke r31.<java.awt.event.MouseEvent: long getWhen()>();

        $i7 = virtualinvoke r31.<java.awt.event.MouseEvent: int getModifiers()>();

        $i8 = $r4.<java.awt.Point: int x>;

        $i9 = $r4.<java.awt.Point: int y>;

        $i10 = virtualinvoke r31.<java.awt.event.MouseEvent: int getClickCount()>();

        $z3 = virtualinvoke r31.<java.awt.event.MouseEvent: boolean isPopupTrigger()>();

        specialinvoke $r33.<java.awt.event.MouseEvent: void <init>(java.awt.Component,int,long,int,int,int,int,boolean)>($r9, $i5, $l6, $i7, $i8, $i9, $i10, $z3);

        $r10 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: org.jdesktop.swingx.JXTreeTable this$0>;

        $r11 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r10);

        virtualinvoke $r11.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: void dispatchEvent(java.awt.AWTEvent)>($r33);

        $r34 = new java.awt.event.MouseEvent;

        $r13 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: org.jdesktop.swingx.JXTreeTable this$0>;

        $r14 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r13);

        $l11 = virtualinvoke $r33.<java.awt.event.MouseEvent: long getWhen()>();

        $i12 = virtualinvoke $r33.<java.awt.event.MouseEvent: int getModifiers()>();

        $i13 = virtualinvoke $r33.<java.awt.event.MouseEvent: int getX()>();

        $i14 = virtualinvoke $r33.<java.awt.event.MouseEvent: int getY()>();

        $i15 = virtualinvoke $r33.<java.awt.event.MouseEvent: int getClickCount()>();

        $z4 = virtualinvoke $r33.<java.awt.event.MouseEvent: boolean isPopupTrigger()>();

        specialinvoke $r34.<java.awt.event.MouseEvent: void <init>(java.awt.Component,int,long,int,int,int,int,boolean)>($r14, 502, $l11, $i12, $i13, $i14, $i15, $z4);

        $r15 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: org.jdesktop.swingx.JXTreeTable this$0>;

        $r16 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r15);

        virtualinvoke $r16.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: void dispatchEvent(java.awt.AWTEvent)>($r34);

        $r17 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: org.jdesktop.swingx.JXTreeTable this$0>;

        virtualinvoke $r17.<org.jdesktop.swingx.JXTreeTable: boolean requestFocusInWindow()>();

     label13:
        $z8 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: boolean expansionChangedFlag>;

        if $z8 == 0 goto label14;

        z7 = 1;

     label14:
        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: boolean expansionChangedFlag> = 0;

        return z7;
    }

    protected java.awt.Point getTreeMousePoint(int, java.awt.event.MouseEvent)
    {
        java.awt.Rectangle $r4;
        org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2 r2;
        java.awt.Point $r0;
        java.awt.event.MouseEvent r1;
        org.jdesktop.swingx.JXTreeTable $r3;
        int $i0, i1, $i2, $i3, $i4;

        r2 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2;

        i1 := @parameter0: int;

        r1 := @parameter1: java.awt.event.MouseEvent;

        $r0 = new java.awt.Point;

        $i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();

        $r3 = r2.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2: org.jdesktop.swingx.JXTreeTable this$0>;

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXTreeTable: java.awt.Rectangle getCellRect(int,int,boolean)>(0, i1, 0);

        $i2 = $r4.<java.awt.Rectangle: int x>;

        $i3 = $i0 - $i2;

        $i4 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();

        specialinvoke $r0.<java.awt.Point: void <init>(int,int)>($i3, $i4);

        return $r0;
    }
}
