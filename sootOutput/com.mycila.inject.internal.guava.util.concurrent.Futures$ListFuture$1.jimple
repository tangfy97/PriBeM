class com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture this$0;

    void <init>(com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture)
    {
        com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture$1 r0;
        com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture;

        r0.<com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture$1: com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture$1 r0;
        com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture $r1, $r2;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture$1;

        $r1 = r0.<com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture$1: com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture this$0>;

        $r1.<com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture: java.util.List values> = null;

        $r2 = r0.<com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture$1: com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture this$0>;

        $r2.<com.mycila.inject.internal.guava.util.concurrent.Futures$ListFuture: com.mycila.inject.internal.guava.collect.ImmutableList futures> = null;

        return;
    }
}
