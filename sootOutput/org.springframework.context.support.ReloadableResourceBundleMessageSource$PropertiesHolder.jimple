public class org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder extends java.lang.Object
{
    private java.util.Properties properties;
    private long fileTimestamp;
    private long refreshTimestamp;
    private final java.util.Map cachedMessageFormats;
    final org.springframework.context.support.ReloadableResourceBundleMessageSource this$0;

    public void <init>(org.springframework.context.support.ReloadableResourceBundleMessageSource, java.util.Properties, long)
    {
        org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder r0;
        org.springframework.context.support.ReloadableResourceBundleMessageSource r1;
        java.util.Properties r3;
        java.util.HashMap $r2;
        long l0;

        r0 := @this: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder;

        r1 := @parameter0: org.springframework.context.support.ReloadableResourceBundleMessageSource;

        r3 := @parameter1: java.util.Properties;

        l0 := @parameter2: long;

        r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: org.springframework.context.support.ReloadableResourceBundleMessageSource this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: long fileTimestamp> = -1L;

        r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: long refreshTimestamp> = -1L;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Map cachedMessageFormats> = $r2;

        r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Properties properties> = r3;

        r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: long fileTimestamp> = l0;

        return;
    }

    public void <init>(org.springframework.context.support.ReloadableResourceBundleMessageSource)
    {
        org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder r0;
        org.springframework.context.support.ReloadableResourceBundleMessageSource r1;
        java.util.HashMap $r2;

        r0 := @this: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder;

        r1 := @parameter0: org.springframework.context.support.ReloadableResourceBundleMessageSource;

        r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: org.springframework.context.support.ReloadableResourceBundleMessageSource this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: long fileTimestamp> = -1L;

        r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: long refreshTimestamp> = -1L;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Map cachedMessageFormats> = $r2;

        return;
    }

    public java.util.Properties getProperties()
    {
        org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder r0;
        java.util.Properties $r1;

        r0 := @this: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder;

        $r1 = r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Properties properties>;

        return $r1;
    }

    public long getFileTimestamp()
    {
        org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder r0;
        long $l0;

        r0 := @this: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder;

        $l0 = r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: long fileTimestamp>;

        return $l0;
    }

    public void setRefreshTimestamp(long)
    {
        org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder r0;
        long l0;

        r0 := @this: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder;

        l0 := @parameter0: long;

        r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: long refreshTimestamp> = l0;

        return;
    }

    public long getRefreshTimestamp()
    {
        org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder r0;
        long $l0;

        r0 := @this: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder;

        $l0 = r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: long refreshTimestamp>;

        return $l0;
    }

    public java.lang.String getProperty(java.lang.String)
    {
        org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder r0;
        java.util.Properties $r1, $r3;
        java.lang.String r2, $r4;

        r0 := @this: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Properties properties>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Properties properties>;

        $r4 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r2);

        return $r4;
    }

    public java.text.MessageFormat getMessageFormat(java.lang.String, java.util.Locale)
    {
        java.lang.Throwable $r14;
        java.util.HashMap $r11;
        java.text.MessageFormat $r10, r16;
        org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder r0;
        org.springframework.context.support.ReloadableResourceBundleMessageSource $r9;
        java.util.Locale r8;
        java.util.Map $r2, $r4, $r12, r15;
        java.lang.String r3, $r7;
        java.util.Properties $r1, $r6;
        java.lang.Object $r5, $r13;

        r0 := @this: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder;

        r3 := @parameter0: java.lang.String;

        r8 := @parameter1: java.util.Locale;

        $r1 = r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Properties properties>;

        if $r1 != null goto label01;

        return null;

     label01:
        $r2 = r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Map cachedMessageFormats>;

        entermonitor $r2;

     label02:
        $r4 = r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Map cachedMessageFormats>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r15 = (java.util.Map) $r5;

        if r15 == null goto label04;

        $r13 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        r16 = (java.text.MessageFormat) $r13;

        if r16 == null goto label04;

        exitmonitor $r2;

     label03:
        return r16;

     label04:
        $r6 = r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Properties properties>;

        $r7 = virtualinvoke $r6.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r3);

        if $r7 == null goto label07;

        if r15 != null goto label05;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r15 = $r11;

        $r12 = r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Map cachedMessageFormats>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r11);

     label05:
        $r9 = r0.<org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: org.springframework.context.support.ReloadableResourceBundleMessageSource this$0>;

        $r10 = virtualinvoke $r9.<org.springframework.context.support.ReloadableResourceBundleMessageSource: java.text.MessageFormat createMessageFormat(java.lang.String,java.util.Locale)>($r7, r8);

        interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r10);

        exitmonitor $r2;

     label06:
        return $r10;

     label07:
        exitmonitor $r2;

     label08:
        return null;

     label09:
        $r14 := @caughtexception;

        exitmonitor $r2;

     label10:
        throw $r14;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }
}
