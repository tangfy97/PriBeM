public abstract class org.apache.neethi.builders.converters.AbstractDOMConverter extends java.lang.Object
{

    public void <init>()
    {
        org.apache.neethi.builders.converters.AbstractDOMConverter r0;

        r0 := @this: org.apache.neethi.builders.converters.AbstractDOMConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public javax.xml.namespace.QName getQName(org.w3c.dom.Element)
    {
        org.apache.neethi.builders.converters.AbstractDOMConverter r4;
        org.w3c.dom.Element r0;
        java.lang.String $r1, $r3, r5;
        javax.xml.namespace.QName $r2;

        r4 := @this: org.apache.neethi.builders.converters.AbstractDOMConverter;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        r5 = $r1;

        if $r1 != null goto label1;

        r5 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getTagName()>();

     label1:
        $r2 = new javax.xml.namespace.QName;

        $r3 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r3, r5);

        return $r2;
    }

    public java.util.Map getAttributes(org.w3c.dom.Element)
    {
        java.util.HashMap $r0;
        org.w3c.dom.Attr r4;
        org.apache.neethi.builders.converters.AbstractDOMConverter r9;
        org.w3c.dom.Element r1;
        org.w3c.dom.Node $r3;
        int $i0, i1;
        org.w3c.dom.NamedNodeMap $r2;
        java.lang.String $r5, $r7, $r8, r10;
        javax.xml.namespace.QName $r6;

        r9 := @this: org.apache.neethi.builders.converters.AbstractDOMConverter;

        r1 := @parameter0: org.w3c.dom.Element;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r2.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i1 >= $i0 goto label3;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i1);

        r4 = (org.w3c.dom.Attr) $r3;

        $r5 = interfaceinvoke r4.<org.w3c.dom.Attr: java.lang.String getLocalName()>();

        r10 = $r5;

        if $r5 != null goto label2;

        r10 = interfaceinvoke r4.<org.w3c.dom.Attr: java.lang.String getName()>();

     label2:
        $r6 = new javax.xml.namespace.QName;

        $r7 = interfaceinvoke r4.<org.w3c.dom.Attr: java.lang.String getNamespaceURI()>();

        specialinvoke $r6.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r7, r10);

        $r8 = interfaceinvoke r4.<org.w3c.dom.Attr: java.lang.String getValue()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r8);

        i1 = i1 + 1;

        goto label1;

     label3:
        return $r0;
    }

    public java.util.Iterator getChildren(org.w3c.dom.Element)
    {
        org.apache.neethi.builders.converters.AbstractDOMConverter r4;
        org.w3c.dom.Element r1, $r3;
        java.util.ListIterator $r2;
        org.w3c.dom.Node r5;
        java.util.LinkedList $r0;
        boolean $z0;

        r4 := @this: org.apache.neethi.builders.converters.AbstractDOMConverter;

        r1 := @parameter0: org.w3c.dom.Element;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        r5 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r5 == null goto label3;

        $z0 = r5 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label2;

        $r3 = (org.w3c.dom.Element) r5;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

     label2:
        r5 = interfaceinvoke r5.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label3:
        $r2 = interfaceinvoke $r0.<java.util.List: java.util.ListIterator listIterator()>();

        return $r2;
    }
}
