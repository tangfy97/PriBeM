public final class org.apache.james.mime4j.util.ByteArrayBuffer extends java.lang.Object implements org.apache.james.mime4j.util.ByteSequence
{
    private byte[] buffer;
    private int len;

    public void <init>(int)
    {
        byte[] $r1;
        int i0;
        java.lang.IllegalArgumentException $r2;
        org.apache.james.mime4j.util.ByteArrayBuffer r0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Buffer capacity may not be negative");

        throw $r2;

     label1:
        $r1 = newarray (byte)[i0];

        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer> = $r1;

        return;
    }

    public void <init>(byte[], boolean)
    {
        byte[] r1;
        int $i0;
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        r1 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        $i0 = lengthof r1;

        specialinvoke r0.<org.apache.james.mime4j.util.ByteArrayBuffer: void <init>(byte[],int,boolean)>(r1, $i0, z0);

        return;
    }

    public void <init>(byte[], int, boolean)
    {
        byte[] r1, $r3, $r4;
        java.lang.IllegalArgumentException $r2, $r5;
        int i0, $i1;
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        if i0 < 0 goto label2;

        $i1 = lengthof r1;

        if i0 <= $i1 goto label3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label3:
        if z0 == 0 goto label4;

        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer> = r1;

        goto label5;

     label4:
        $r3 = newarray (byte)[i0];

        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer> = $r3;

        $r4 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r4, 0, i0);

     label5:
        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len> = i0;

        return;
    }

    private void expand(int)
    {
        byte[] $r1, r2, $r3;
        int $i0, i1, $i2, $i3, $i4;
        org.apache.james.mime4j.util.ByteArrayBuffer r0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        i1 := @parameter0: int;

        $r1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i0 = lengthof $r1;

        $i2 = $i0 << 1;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, i1);

        r2 = newarray (byte)[$i3];

        $r3 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i4 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, $i4);

        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer> = r2;

        return;
    }

    public void append(byte[], int, int)
    {
        byte[] r0, $r2, $r3;
        java.lang.IndexOutOfBoundsException $r4;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, i7, $i8, $i9;
        org.apache.james.mime4j.util.ByteArrayBuffer r1;

        r1 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        if r0 != null goto label1;

        return;

     label1:
        if i0 < 0 goto label2;

        $i1 = lengthof r0;

        if i0 > $i1 goto label2;

        if i2 < 0 goto label2;

        $i3 = i0 + i2;

        if $i3 < 0 goto label2;

        $i5 = i0 + i2;

        $i4 = lengthof r0;

        if $i5 <= $i4 goto label3;

     label2:
        $r4 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label3:
        if i2 != 0 goto label4;

        return;

     label4:
        $i6 = r1.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        i7 = $i6 + i2;

        $r2 = r1.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i8 = lengthof $r2;

        if i7 <= $i8 goto label5;

        specialinvoke r1.<org.apache.james.mime4j.util.ByteArrayBuffer: void expand(int)>(i7);

     label5:
        $r3 = r1.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i9 = r1.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i0, $r3, $i9, i2);

        r1.<org.apache.james.mime4j.util.ByteArrayBuffer: int len> = i7;

        return;
    }

    public void append(int)
    {
        byte[] $r1, $r2;
        byte $b4;
        int $i0, i1, $i2, i3, $i5;
        org.apache.james.mime4j.util.ByteArrayBuffer r0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        i3 := @parameter0: int;

        $i0 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        i1 = $i0 + 1;

        $r1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i2 = lengthof $r1;

        if i1 <= $i2 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.util.ByteArrayBuffer: void expand(int)>(i1);

     label1:
        $r2 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i5 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        $b4 = (byte) i3;

        $r2[$i5] = $b4;

        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len> = i1;

        return;
    }

    public void clear()
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len> = 0;

        return;
    }

    public byte[] toByteArray()
    {
        byte[] r1, $r2;
        int $i0, $i1, $i2;
        org.apache.james.mime4j.util.ByteArrayBuffer r0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $i0 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        r1 = newarray (byte)[$i0];

        $i1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        if $i1 <= 0 goto label1;

        $r2 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i2 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i2);

     label1:
        return r1;
    }

    public byte byteAt(int)
    {
        java.lang.IndexOutOfBoundsException $r0;
        byte[] $r2;
        byte $b2;
        int i0, $i1;
        org.apache.james.mime4j.util.ByteArrayBuffer r1;

        r1 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r1.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        if i0 < $i1 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r0;

     label2:
        $r2 = r1.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $b2 = $r2[i0];

        return $b2;
    }

    public int capacity()
    {
        int $i0;
        byte[] $r1;
        org.apache.james.mime4j.util.ByteArrayBuffer r0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $r1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int length()
    {
        int $i0;
        org.apache.james.mime4j.util.ByteArrayBuffer r0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $i0 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        return $i0;
    }

    public byte[] buffer()
    {
        byte[] $r1;
        org.apache.james.mime4j.util.ByteArrayBuffer r0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $r1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        return $r1;
    }

    public int indexOf(byte)
    {
        byte b0;
        int $i1, $i2;
        org.apache.james.mime4j.util.ByteArrayBuffer r0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        b0 := @parameter0: byte;

        $i1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        $i2 = virtualinvoke r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int indexOf(byte,int,int)>(b0, 0, $i1);

        return $i2;
    }

    public int indexOf(byte, int, int)
    {
        byte[] $r1;
        byte b1, $b2;
        int $i0, i3, i4, i5, $i7, $i8, $i9, $i11;
        org.apache.james.mime4j.util.ByteArrayBuffer r0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        b1 := @parameter0: byte;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        if i3 >= 0 goto label1;

        i3 = 0;

     label1:
        $i0 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        if i4 <= $i0 goto label2;

        i4 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

     label2:
        if i3 <= i4 goto label3;

        $i7 = (int) -1;

        return $i7;

     label3:
        i5 = i3;

     label4:
        if i5 >= i4 goto label6;

        $r1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $b2 = $r1[i5];

        $i8 = (int) $b2;

        $i9 = (int) b1;

        if $i8 != $i9 goto label5;

        return i5;

     label5:
        i5 = i5 + 1;

        goto label4;

     label6:
        $i11 = (int) -1;

        return $i11;
    }

    public void setLength(int)
    {
        java.lang.IndexOutOfBoundsException $r0;
        byte[] $r2;
        int i0, $i1;
        org.apache.james.mime4j.util.ByteArrayBuffer r1;

        r1 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r2 = r1.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i1 = lengthof $r2;

        if i0 <= $i1 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r0;

     label2:
        r1.<org.apache.james.mime4j.util.ByteArrayBuffer: int len> = i0;

        return;
    }

    public void remove(int, int)
    {
        byte[] $r1, $r2;
        java.lang.IndexOutOfBoundsException $r3;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11;
        org.apache.james.mime4j.util.ByteArrayBuffer r0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        if i0 < 0 goto label1;

        $i1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        if i0 > $i1 goto label1;

        if i2 < 0 goto label1;

        $i3 = i0 + i2;

        if $i3 < 0 goto label1;

        $i5 = i0 + i2;

        $i4 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        if $i5 <= $i4 goto label2;

     label1:
        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label2:
        if i2 != 0 goto label3;

        return;

     label3:
        $i6 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        $i7 = $i6 - i0;

        i8 = $i7 - i2;

        if i8 <= 0 goto label4;

        $r2 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i11 = i0 + i2;

        $r1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i11, $r1, i0, i8);

     label4:
        $i9 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        $i10 = $i9 - i2;

        r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len> = $i10;

        return;
    }

    public boolean isEmpty()
    {
        int $i0;
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $i0 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isFull()
    {
        byte[] $r1;
        int $i0, $i1;
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $i1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int len>;

        $r1 = r0.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        byte[] $r2;
        java.lang.String $r0;
        org.apache.james.mime4j.util.ByteArrayBuffer r1;

        r1 := @this: org.apache.james.mime4j.util.ByteArrayBuffer;

        $r0 = new java.lang.String;

        $r2 = virtualinvoke r1.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] toByteArray()>();

        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r2);

        return $r0;
    }
}
