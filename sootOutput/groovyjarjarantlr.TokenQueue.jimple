class groovyjarjarantlr.TokenQueue extends java.lang.Object
{
    private groovyjarjarantlr.Token[] buffer;
    private int sizeLessOne;
    private int offset;
    protected int nbrEntries;

    public void <init>(int)
    {
        groovyjarjarantlr.TokenQueue r0;
        int i0, i1;

        r0 := @this: groovyjarjarantlr.TokenQueue;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 >= 0 goto label1;

        specialinvoke r0.<groovyjarjarantlr.TokenQueue: void init(int)>(16);

        return;

     label1:
        if i0 < 1073741823 goto label2;

        specialinvoke r0.<groovyjarjarantlr.TokenQueue: void init(int)>(2147483647);

        return;

     label2:
        i1 = 2;

     label3:
        if i1 >= i0 goto label4;

        i1 = i1 * 2;

        goto label3;

     label4:
        specialinvoke r0.<groovyjarjarantlr.TokenQueue: void init(int)>(i1);

        return;
    }

    public final void append(groovyjarjarantlr.Token)
    {
        groovyjarjarantlr.TokenQueue r0;
        groovyjarjarantlr.Token[] $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        groovyjarjarantlr.Token r2;

        r0 := @this: groovyjarjarantlr.TokenQueue;

        r2 := @parameter0: groovyjarjarantlr.Token;

        $i1 = r0.<groovyjarjarantlr.TokenQueue: int nbrEntries>;

        $r1 = r0.<groovyjarjarantlr.TokenQueue: groovyjarjarantlr.Token[] buffer>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label1;

        specialinvoke r0.<groovyjarjarantlr.TokenQueue: void expand()>();

     label1:
        $r3 = r0.<groovyjarjarantlr.TokenQueue: groovyjarjarantlr.Token[] buffer>;

        $i3 = r0.<groovyjarjarantlr.TokenQueue: int offset>;

        $i2 = r0.<groovyjarjarantlr.TokenQueue: int nbrEntries>;

        $i5 = $i3 + $i2;

        $i4 = r0.<groovyjarjarantlr.TokenQueue: int sizeLessOne>;

        $i6 = $i5 & $i4;

        $r3[$i6] = r2;

        $i7 = r0.<groovyjarjarantlr.TokenQueue: int nbrEntries>;

        $i8 = $i7 + 1;

        r0.<groovyjarjarantlr.TokenQueue: int nbrEntries> = $i8;

        return;
    }

    public final groovyjarjarantlr.Token elementAt(int)
    {
        groovyjarjarantlr.TokenQueue r0;
        groovyjarjarantlr.Token[] $r1;
        int i0, $i1, $i2, $i3, $i4;
        groovyjarjarantlr.Token $r2;

        r0 := @this: groovyjarjarantlr.TokenQueue;

        i0 := @parameter0: int;

        $r1 = r0.<groovyjarjarantlr.TokenQueue: groovyjarjarantlr.Token[] buffer>;

        $i1 = r0.<groovyjarjarantlr.TokenQueue: int offset>;

        $i3 = $i1 + i0;

        $i2 = r0.<groovyjarjarantlr.TokenQueue: int sizeLessOne>;

        $i4 = $i3 & $i2;

        $r2 = $r1[$i4];

        return $r2;
    }

    private final void expand()
    {
        groovyjarjarantlr.TokenQueue r0;
        groovyjarjarantlr.Token[] $r1, r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, i5;
        groovyjarjarantlr.Token $r5;

        r0 := @this: groovyjarjarantlr.TokenQueue;

        $r1 = r0.<groovyjarjarantlr.TokenQueue: groovyjarjarantlr.Token[] buffer>;

        $i0 = lengthof $r1;

        $i1 = $i0 * 2;

        r2 = newarray (groovyjarjarantlr.Token)[$i1];

        i5 = 0;

     label1:
        $r3 = r0.<groovyjarjarantlr.TokenQueue: groovyjarjarantlr.Token[] buffer>;

        $i2 = lengthof $r3;

        if i5 >= $i2 goto label2;

        $r5 = virtualinvoke r0.<groovyjarjarantlr.TokenQueue: groovyjarjarantlr.Token elementAt(int)>(i5);

        r2[i5] = $r5;

        i5 = i5 + 1;

        goto label1;

     label2:
        r0.<groovyjarjarantlr.TokenQueue: groovyjarjarantlr.Token[] buffer> = r2;

        $r4 = r0.<groovyjarjarantlr.TokenQueue: groovyjarjarantlr.Token[] buffer>;

        $i3 = lengthof $r4;

        $i4 = $i3 - 1;

        r0.<groovyjarjarantlr.TokenQueue: int sizeLessOne> = $i4;

        r0.<groovyjarjarantlr.TokenQueue: int offset> = 0;

        return;
    }

    private final void init(int)
    {
        groovyjarjarantlr.TokenQueue r0;
        int i0, $i1;
        groovyjarjarantlr.Token[] $r1;

        r0 := @this: groovyjarjarantlr.TokenQueue;

        i0 := @parameter0: int;

        $r1 = newarray (groovyjarjarantlr.Token)[i0];

        r0.<groovyjarjarantlr.TokenQueue: groovyjarjarantlr.Token[] buffer> = $r1;

        $i1 = i0 - 1;

        r0.<groovyjarjarantlr.TokenQueue: int sizeLessOne> = $i1;

        r0.<groovyjarjarantlr.TokenQueue: int offset> = 0;

        r0.<groovyjarjarantlr.TokenQueue: int nbrEntries> = 0;

        return;
    }

    public final void reset()
    {
        groovyjarjarantlr.TokenQueue r0;

        r0 := @this: groovyjarjarantlr.TokenQueue;

        r0.<groovyjarjarantlr.TokenQueue: int offset> = 0;

        r0.<groovyjarjarantlr.TokenQueue: int nbrEntries> = 0;

        return;
    }

    public final void removeFirst()
    {
        groovyjarjarantlr.TokenQueue r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: groovyjarjarantlr.TokenQueue;

        $i0 = r0.<groovyjarjarantlr.TokenQueue: int offset>;

        $i2 = $i0 + 1;

        $i1 = r0.<groovyjarjarantlr.TokenQueue: int sizeLessOne>;

        $i3 = $i2 & $i1;

        r0.<groovyjarjarantlr.TokenQueue: int offset> = $i3;

        $i4 = r0.<groovyjarjarantlr.TokenQueue: int nbrEntries>;

        $i5 = $i4 - 1;

        r0.<groovyjarjarantlr.TokenQueue: int nbrEntries> = $i5;

        return;
    }
}
