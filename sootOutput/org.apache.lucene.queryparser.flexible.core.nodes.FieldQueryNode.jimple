public class org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode extends org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeImpl implements org.apache.lucene.queryparser.flexible.core.nodes.FieldValuePairQueryNode, org.apache.lucene.queryparser.flexible.core.nodes.TextableQueryNode
{
    protected java.lang.CharSequence field;
    protected java.lang.CharSequence text;
    protected int begin;
    protected int end;
    protected int positionIncrement;

    public void <init>(java.lang.CharSequence, java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r1, r2;
        int i0, i1;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeImpl: void <init>()>();

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence field> = r1;

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence text> = r2;

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int begin> = i0;

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int end> = i1;

        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: void setLeaf(boolean)>(1);

        return;
    }

    protected java.lang.CharSequence getTermEscaped(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)
    {
        java.lang.CharSequence $r2, $r5;
        org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax r0;
        java.util.Locale $r3;
        org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax$Type $r4;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r1;

        r1 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax;

        $r2 = r1.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence text>;

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = <org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax$Type: org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax$Type NORMAL>;

        $r5 = interfaceinvoke r0.<org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax: java.lang.CharSequence escape(java.lang.CharSequence,java.util.Locale,org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax$Type)>($r2, $r3, $r4);

        return $r5;
    }

    protected java.lang.CharSequence getTermEscapeQuoted(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)
    {
        java.lang.CharSequence $r2, $r5;
        org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax r0;
        java.util.Locale $r3;
        org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax$Type $r4;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r1;

        r1 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax;

        $r2 = r1.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence text>;

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = <org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax$Type: org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax$Type STRING>;

        $r5 = interfaceinvoke r0.<org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax: java.lang.CharSequence escape(java.lang.CharSequence,java.util.Locale,org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax$Type)>($r2, $r3, $r4);

        return $r5;
    }

    public java.lang.CharSequence toQueryString(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)
    {
        java.lang.CharSequence $r1, $r3, $r7, $r10;
        org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax r6;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;
        java.lang.StringBuilder $r2, $r4, $r5, $r8;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        r6 := @parameter0: org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence field>;

        $z0 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: boolean isDefaultField(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence getTermEscaped(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)>(r6);

        return $r10;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence field>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence getTermEscaped(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)>(r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r2;
        int $i0, $i1;
        java.lang.String $r13;
        java.lang.CharSequence $r7, $r10;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r8, $r9, $r11, $r12;

        r2 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<field start=\'");

        $i0 = r2.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int begin>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' end=\'");

        $i1 = r2.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int end>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' field=\'");

        $r7 = r2.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence field>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' text=\'");

        $r10 = r2.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence text>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'/>");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public java.lang.String getTextAsString()
    {
        java.lang.CharSequence $r1, $r2;
        java.lang.String $r3;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence text>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence text>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String getFieldAsString()
    {
        java.lang.CharSequence $r1, $r2;
        java.lang.String $r3;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence field>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence field>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public int getBegin()
    {
        int $i0;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        $i0 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int begin>;

        return $i0;
    }

    public void setBegin(int)
    {
        int i0;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int begin> = i0;

        return;
    }

    public int getEnd()
    {
        int $i0;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        $i0 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int end>;

        return $i0;
    }

    public void setEnd(int)
    {
        int i0;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int end> = i0;

        return;
    }

    public java.lang.CharSequence getField()
    {
        java.lang.CharSequence $r1;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence field>;

        return $r1;
    }

    public void setField(java.lang.CharSequence)
    {
        java.lang.CharSequence r1;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence field> = r1;

        return;
    }

    public int getPositionIncrement()
    {
        int $i0;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        $i0 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int positionIncrement>;

        return $i0;
    }

    public void setPositionIncrement(int)
    {
        int i0;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int positionIncrement> = i0;

        return;
    }

    public java.lang.CharSequence getText()
    {
        java.lang.CharSequence $r1;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence text>;

        return $r1;
    }

    public void setText(java.lang.CharSequence)
    {
        java.lang.CharSequence r1;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence text> = r1;

        return;
    }

    public org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode cloneTree() throws java.lang.CloneNotSupportedException
    {
        java.lang.CharSequence $r3, $r4;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0, r2;
        int $i0, $i1, $i2;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        $r1 = specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeImpl: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode cloneTree()>();

        r2 = (org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode) $r1;

        $i0 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int begin>;

        r2.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int begin> = $i0;

        $i1 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int end>;

        r2.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int end> = $i1;

        $r3 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence field>;

        r2.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence field> = $r3;

        $r4 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence text>;

        r2.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence text> = $r4;

        $i2 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int positionIncrement>;

        r2.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int positionIncrement> = $i2;

        $z0 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: boolean toQueryStringIgnoreFields>;

        r2.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: boolean toQueryStringIgnoreFields> = $z0;

        return r2;
    }

    public java.lang.CharSequence getValue()
    {
        java.lang.CharSequence $r1;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence getText()>();

        return $r1;
    }

    public void setValue(java.lang.CharSequence)
    {
        java.lang.CharSequence r1;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: void setText(java.lang.CharSequence)>(r1);

        return;
    }

    public volatile org.apache.lucene.queryparser.flexible.core.nodes.QueryNode cloneTree() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0, $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode cloneTree()>();

        return $r1;
    }

    public volatile java.lang.Object getValue()
    {
        java.lang.CharSequence $r1;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: java.lang.CharSequence getValue()>();

        return $r1;
    }

    public volatile void setValue(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.CharSequence $r2;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.CharSequence) r1;

        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: void setValue(java.lang.CharSequence)>($r2);

        return;
    }
}
