public class com.hp.hpl.jena.sparql.core.DynamicDatasets extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.core.DynamicDatasets r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DynamicDatasets;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.query.Dataset dynamicDataset(com.hp.hpl.jena.sparql.core.DatasetDescription, com.hp.hpl.jena.query.Dataset, boolean)
    {
        com.hp.hpl.jena.query.Dataset r0, $r4;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1, $r3;
        com.hp.hpl.jena.sparql.core.DatasetDescription r2;
        boolean z0;

        r2 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetDescription;

        r0 := @parameter1: com.hp.hpl.jena.query.Dataset;

        z0 := @parameter2: boolean;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.sparql.core.DatasetGraph asDatasetGraph()>();

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.core.DynamicDatasets: com.hp.hpl.jena.sparql.core.DatasetGraph dynamicDataset(com.hp.hpl.jena.sparql.core.DatasetDescription,com.hp.hpl.jena.sparql.core.DatasetGraph,boolean)>(r2, $r1, z0);

        if $r1 != $r3 goto label1;

        return r0;

     label1:
        $r4 = staticinvoke <com.hp.hpl.jena.query.DatasetFactory: com.hp.hpl.jena.query.Dataset create(com.hp.hpl.jena.sparql.core.DatasetGraph)>($r3);

        return $r4;
    }

    public static com.hp.hpl.jena.sparql.core.DatasetGraph dynamicDataset(com.hp.hpl.jena.sparql.core.DatasetDescription, com.hp.hpl.jena.sparql.core.DatasetGraph, boolean)
    {
        java.util.Set $r2, $r4;
        com.hp.hpl.jena.sparql.core.DatasetGraph r5, $r6;
        com.hp.hpl.jena.sparql.core.DatasetDescription r0;
        java.util.List $r1, $r3;
        boolean z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetDescription;

        r5 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        z0 := @parameter2: boolean;

        if r0 != null goto label1;

        return r5;

     label1:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: java.util.List getDefaultGraphURIs()>();

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.util.NodeUtils: java.util.Set convertToNodes(java.util.Collection)>($r1);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: java.util.List getNamedGraphURIs()>();

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.util.NodeUtils: java.util.Set convertToNodes(java.util.Collection)>($r3);

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.core.DynamicDatasets: com.hp.hpl.jena.sparql.core.DatasetGraph dynamicDataset(java.util.Collection,java.util.Collection,com.hp.hpl.jena.sparql.core.DatasetGraph,boolean)>($r2, $r4, r5, z0);

        return $r6;
    }

    public static com.hp.hpl.jena.sparql.core.DatasetGraph dynamicDataset(java.util.Collection, java.util.Collection, com.hp.hpl.jena.sparql.core.DatasetGraph, boolean)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphMap $r3;
        com.hp.hpl.jena.graph.Node r11;
        int $i0;
        com.hp.hpl.jena.graph.Graph $r12;
        boolean $z0, z1;
        com.hp.hpl.jena.sparql.util.Symbol $r15, $r17;
        com.hp.hpl.jena.sparql.graph.GraphUnionRead $r0, $r7;
        java.util.Iterator $r5;
        java.util.Collection r2, r4;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.sparql.util.Context $r6, $r8, $r9, $r14, $r16;
        com.hp.hpl.jena.sparql.core.DynamicDatasets$DynamicDatasetGraph $r13;
        java.lang.Object $r10;

        r2 := @parameter0: java.util.Collection;

        r4 := @parameter1: java.util.Collection;

        r1 := @parameter2: com.hp.hpl.jena.sparql.core.DatasetGraph;

        z1 := @parameter3: boolean;

        $r0 = new com.hp.hpl.jena.sparql.graph.GraphUnionRead;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.graph.GraphUnionRead: void <init>(com.hp.hpl.jena.sparql.core.DatasetGraph,java.util.Collection)>(r1, r2);

        $r3 = new com.hp.hpl.jena.sparql.core.DatasetGraphMap;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: void <init>(com.hp.hpl.jena.graph.Graph)>($r0);

        $r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.hp.hpl.jena.graph.Node) $r10;

        $r12 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphOps: com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.graph.Node)>(r1, r11);

        if $r12 == null goto label2;

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.core.DatasetGraph: void addGraph(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Graph)>(r11, $r12);

     label2:
        goto label1;

     label3:
        $r6 = interfaceinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.sparql.util.Context getContext()>();

        if $r6 == null goto label4;

        $r8 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.sparql.util.Context getContext()>();

        $r9 = interfaceinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.sparql.util.Context getContext()>();

        virtualinvoke $r8.<com.hp.hpl.jena.sparql.util.Context: void putAll(com.hp.hpl.jena.sparql.util.Context)>($r9);

     label4:
        if z1 == 0 goto label5;

        $i0 = interfaceinvoke r2.<java.util.Collection: int size()>();

        if $i0 != 0 goto label5;

        $r7 = new com.hp.hpl.jena.sparql.graph.GraphUnionRead;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.graph.GraphUnionRead: void <init>(com.hp.hpl.jena.sparql.core.DatasetGraph,java.util.Collection)>(r1, r4);

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.core.DatasetGraph: void setDefaultGraph(com.hp.hpl.jena.graph.Graph)>($r7);

     label5:
        $r13 = new com.hp.hpl.jena.sparql.core.DynamicDatasets$DynamicDatasetGraph;

        specialinvoke $r13.<com.hp.hpl.jena.sparql.core.DynamicDatasets$DynamicDatasetGraph: void <init>(com.hp.hpl.jena.sparql.core.DatasetGraph)>($r3);

        $r14 = interfaceinvoke $r13.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.sparql.util.Context getContext()>();

        $r15 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol symDatasetDefaultGraphs>;

        virtualinvoke $r14.<com.hp.hpl.jena.sparql.util.Context: void set(com.hp.hpl.jena.sparql.util.Symbol,java.lang.Object)>($r15, r2);

        $r16 = interfaceinvoke $r13.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.sparql.util.Context getContext()>();

        $r17 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol symDatasetNamedGraphs>;

        virtualinvoke $r16.<com.hp.hpl.jena.sparql.util.Context: void set(com.hp.hpl.jena.sparql.util.Symbol,java.lang.Object)>($r17, r4);

        return $r13;
    }
}
