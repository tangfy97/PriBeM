public class org.apache.lucene.queries.function.valuesource.SumFloatFunction extends org.apache.lucene.queries.function.valuesource.MultiFloatFunction
{

    public void <init>(org.apache.lucene.queries.function.ValueSource[])
    {
        org.apache.lucene.queries.function.valuesource.SumFloatFunction r0;
        org.apache.lucene.queries.function.ValueSource[] r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.SumFloatFunction;

        r1 := @parameter0: org.apache.lucene.queries.function.ValueSource[];

        specialinvoke r0.<org.apache.lucene.queries.function.valuesource.MultiFloatFunction: void <init>(org.apache.lucene.queries.function.ValueSource[])>(r1);

        return;
    }

    protected java.lang.String name()
    {
        org.apache.lucene.queries.function.valuesource.SumFloatFunction r0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.SumFloatFunction;

        return "sum";
    }

    protected float func(int, org.apache.lucene.queries.function.FunctionValues[])
    {
        org.apache.lucene.queries.function.FunctionValues[] r0;
        int i0, i1, i2;
        float $f0, f1;
        org.apache.lucene.queries.function.FunctionValues r1;
        org.apache.lucene.queries.function.valuesource.SumFloatFunction r2;

        r2 := @this: org.apache.lucene.queries.function.valuesource.SumFloatFunction;

        i1 := @parameter0: int;

        r0 := @parameter1: org.apache.lucene.queries.function.FunctionValues[];

        f1 = 0.0F;

        i0 = lengthof r0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        r1 = r0[i2];

        $f0 = virtualinvoke r1.<org.apache.lucene.queries.function.FunctionValues: float floatVal(int)>(i1);

        f1 = f1 + $f0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return f1;
    }
}
