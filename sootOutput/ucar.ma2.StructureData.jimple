public abstract class ucar.ma2.StructureData extends java.lang.Object
{
    protected ucar.ma2.StructureMembers members;

    public void <init>(ucar.ma2.StructureMembers)
    {
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers r1;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: ucar.ma2.StructureMembers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members> = r1;

        return;
    }

    public java.lang.String getName()
    {
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r1;
        java.lang.String $r2;

        r0 := @this: ucar.ma2.StructureData;

        $r1 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r2 = virtualinvoke $r1.<ucar.ma2.StructureMembers: java.lang.String getName()>();

        return $r2;
    }

    public ucar.ma2.StructureMembers getStructureMembers()
    {
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r1;

        r0 := @this: ucar.ma2.StructureData;

        $r1 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        return $r1;
    }

    public java.util.List getMembers()
    {
        ucar.ma2.StructureData r0;
        java.util.List $r2;
        ucar.ma2.StructureMembers $r1;

        r0 := @this: ucar.ma2.StructureData;

        $r1 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r2 = virtualinvoke $r1.<ucar.ma2.StructureMembers: java.util.List getMembers()>();

        return $r2;
    }

    public ucar.ma2.StructureMembers$Member findMember(java.lang.String)
    {
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        java.lang.String r1;
        ucar.ma2.StructureMembers$Member $r3;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        return $r3;
    }

    public abstract ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member);

    public ucar.ma2.Array getArray(java.lang.String)
    {
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.Array $r4;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r1, $r9;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r4 = virtualinvoke r0.<ucar.ma2.StructureData: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>($r3);

        return $r4;
    }

    public java.lang.Object getScalarObject(java.lang.String)
    {
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r1, $r9;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r4 = virtualinvoke r0.<ucar.ma2.StructureData: java.lang.Object getScalarObject(ucar.ma2.StructureMembers$Member)>($r3);

        return $r4;
    }

    public java.lang.Object getScalarObject(ucar.ma2.StructureMembers$Member)
    {
        java.lang.Float $r29;
        java.lang.Integer $r12;
        ucar.ma2.StructureMembers$Member r0;
        ucar.ma2.StructureData r5, $r25;
        byte $b0;
        java.lang.Long $r28;
        java.lang.Short $r9;
        java.lang.Byte $r6;
        ucar.ma2.DataType $r1, $r2, $r3, $r4, $r7, $r8, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18;
        float $f0;
        java.lang.StringBuilder $r20, $r21, $r22;
        java.lang.Double $r30;
        long $l3;
        short $s1;
        int $i2;
        java.lang.String $r23, $r26, $r27;
        double $d0;
        java.lang.RuntimeException $r19;
        ucar.ma2.ArraySequence $r24;

        r5 := @this: ucar.ma2.StructureData;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        if $r1 != $r2 goto label01;

        $d0 = virtualinvoke r5.<ucar.ma2.StructureData: double getScalarDouble(ucar.ma2.StructureMembers$Member)>(r0);

        $r30 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r30;

     label01:
        $r3 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        if $r1 != $r3 goto label02;

        $f0 = virtualinvoke r5.<ucar.ma2.StructureData: float getScalarFloat(ucar.ma2.StructureMembers$Member)>(r0);

        $r29 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r29;

     label02:
        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        if $r1 == $r4 goto label03;

        $r7 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM1>;

        if $r1 != $r7 goto label04;

     label03:
        $b0 = virtualinvoke r5.<ucar.ma2.StructureData: byte getScalarByte(ucar.ma2.StructureMembers$Member)>(r0);

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        return $r6;

     label04:
        $r8 = <ucar.ma2.DataType: ucar.ma2.DataType SHORT>;

        if $r1 == $r8 goto label05;

        $r10 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM2>;

        if $r1 != $r10 goto label06;

     label05:
        $s1 = virtualinvoke r5.<ucar.ma2.StructureData: short getScalarShort(ucar.ma2.StructureMembers$Member)>(r0);

        $r9 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r9;

     label06:
        $r11 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        if $r1 == $r11 goto label07;

        $r13 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM4>;

        if $r1 != $r13 goto label08;

     label07:
        $i2 = virtualinvoke r5.<ucar.ma2.StructureData: int getScalarInt(ucar.ma2.StructureMembers$Member)>(r0);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        return $r12;

     label08:
        $r14 = <ucar.ma2.DataType: ucar.ma2.DataType LONG>;

        if $r1 != $r14 goto label09;

        $l3 = virtualinvoke r5.<ucar.ma2.StructureData: long getScalarLong(ucar.ma2.StructureMembers$Member)>(r0);

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        return $r28;

     label09:
        $r15 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r1 != $r15 goto label10;

        $r27 = virtualinvoke r5.<ucar.ma2.StructureData: java.lang.String getScalarString(ucar.ma2.StructureMembers$Member)>(r0);

        return $r27;

     label10:
        $r16 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r1 != $r16 goto label11;

        $r26 = virtualinvoke r5.<ucar.ma2.StructureData: java.lang.String getScalarString(ucar.ma2.StructureMembers$Member)>(r0);

        return $r26;

     label11:
        $r17 = <ucar.ma2.DataType: ucar.ma2.DataType STRUCTURE>;

        if $r1 != $r17 goto label12;

        $r25 = virtualinvoke r5.<ucar.ma2.StructureData: ucar.ma2.StructureData getScalarStructure(ucar.ma2.StructureMembers$Member)>(r0);

        return $r25;

     label12:
        $r18 = <ucar.ma2.DataType: ucar.ma2.DataType SEQUENCE>;

        if $r1 != $r18 goto label13;

        $r24 = virtualinvoke r5.<ucar.ma2.StructureData: ucar.ma2.ArraySequence getArraySequence(ucar.ma2.StructureMembers$Member)>(r0);

        return $r24;

     label13:
        $r19 = new java.lang.RuntimeException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dont have implemenation for ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r23);

        throw $r19;
    }

    public float convertScalarFloat(java.lang.String)
    {
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        float $f0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r8;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $f0 = virtualinvoke r0.<ucar.ma2.StructureData: float convertScalarFloat(ucar.ma2.StructureMembers$Member)>($r3);

        return $f0;
    }

    public abstract float convertScalarFloat(ucar.ma2.StructureMembers$Member);

    public double convertScalarDouble(java.lang.String)
    {
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r8;
        double $d0;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $d0 = virtualinvoke r0.<ucar.ma2.StructureData: double convertScalarDouble(ucar.ma2.StructureMembers$Member)>($r3);

        return $d0;
    }

    public abstract double convertScalarDouble(ucar.ma2.StructureMembers$Member);

    public int convertScalarInt(java.lang.String)
    {
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        int $i0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r8;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $i0 = virtualinvoke r0.<ucar.ma2.StructureData: int convertScalarInt(ucar.ma2.StructureMembers$Member)>($r3);

        return $i0;
    }

    public abstract int convertScalarInt(ucar.ma2.StructureMembers$Member);

    public long convertScalarLong(java.lang.String)
    {
        long $l0;
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r8;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $l0 = virtualinvoke r0.<ucar.ma2.StructureData: long convertScalarLong(ucar.ma2.StructureMembers$Member)>($r3);

        return $l0;
    }

    public abstract long convertScalarLong(ucar.ma2.StructureMembers$Member);

    public double getScalarDouble(java.lang.String)
    {
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r8;
        double $d0;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $d0 = virtualinvoke r0.<ucar.ma2.StructureData: double getScalarDouble(ucar.ma2.StructureMembers$Member)>($r3);

        return $d0;
    }

    public abstract double getScalarDouble(ucar.ma2.StructureMembers$Member);

    public double[] getJavaArrayDouble(java.lang.String)
    {
        double[] $r4;
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r1, $r9;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r4 = virtualinvoke r0.<ucar.ma2.StructureData: double[] getJavaArrayDouble(ucar.ma2.StructureMembers$Member)>($r3);

        return $r4;
    }

    public abstract double[] getJavaArrayDouble(ucar.ma2.StructureMembers$Member);

    public float getScalarFloat(java.lang.String)
    {
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        float $f0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r8;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $f0 = virtualinvoke r0.<ucar.ma2.StructureData: float getScalarFloat(ucar.ma2.StructureMembers$Member)>($r3);

        return $f0;
    }

    public abstract float getScalarFloat(ucar.ma2.StructureMembers$Member);

    public float[] getJavaArrayFloat(java.lang.String)
    {
        float[] $r4;
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r1, $r9;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r4 = virtualinvoke r0.<ucar.ma2.StructureData: float[] getJavaArrayFloat(ucar.ma2.StructureMembers$Member)>($r3);

        return $r4;
    }

    public abstract float[] getJavaArrayFloat(ucar.ma2.StructureMembers$Member);

    public byte getScalarByte(java.lang.String)
    {
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        byte $b0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r8;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $b0 = virtualinvoke r0.<ucar.ma2.StructureData: byte getScalarByte(ucar.ma2.StructureMembers$Member)>($r3);

        return $b0;
    }

    public abstract byte getScalarByte(ucar.ma2.StructureMembers$Member);

    public byte[] getJavaArrayByte(java.lang.String)
    {
        byte[] $r4;
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r1, $r9;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r4 = virtualinvoke r0.<ucar.ma2.StructureData: byte[] getJavaArrayByte(ucar.ma2.StructureMembers$Member)>($r3);

        return $r4;
    }

    public abstract byte[] getJavaArrayByte(ucar.ma2.StructureMembers$Member);

    public int getScalarInt(java.lang.String)
    {
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        int $i0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r8;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $i0 = virtualinvoke r0.<ucar.ma2.StructureData: int getScalarInt(ucar.ma2.StructureMembers$Member)>($r3);

        return $i0;
    }

    public abstract int getScalarInt(ucar.ma2.StructureMembers$Member);

    public int[] getJavaArrayInt(java.lang.String)
    {
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        int[] $r4;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r1, $r9;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r4 = virtualinvoke r0.<ucar.ma2.StructureData: int[] getJavaArrayInt(ucar.ma2.StructureMembers$Member)>($r3);

        return $r4;
    }

    public abstract int[] getJavaArrayInt(ucar.ma2.StructureMembers$Member);

    public short getScalarShort(java.lang.String)
    {
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        short $s0;
        ucar.ma2.StructureMembers $r2;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r8;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $s0 = virtualinvoke r0.<ucar.ma2.StructureData: short getScalarShort(ucar.ma2.StructureMembers$Member)>($r3);

        return $s0;
    }

    public abstract short getScalarShort(ucar.ma2.StructureMembers$Member);

    public short[] getJavaArrayShort(java.lang.String)
    {
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r1, $r9;
        short[] $r4;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r4 = virtualinvoke r0.<ucar.ma2.StructureData: short[] getJavaArrayShort(ucar.ma2.StructureMembers$Member)>($r3);

        return $r4;
    }

    public abstract short[] getJavaArrayShort(ucar.ma2.StructureMembers$Member);

    public long getScalarLong(java.lang.String)
    {
        long $l0;
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r8;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $l0 = virtualinvoke r0.<ucar.ma2.StructureData: long getScalarLong(ucar.ma2.StructureMembers$Member)>($r3);

        return $l0;
    }

    public abstract long getScalarLong(ucar.ma2.StructureMembers$Member);

    public long[] getJavaArrayLong(java.lang.String)
    {
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        long[] $r4;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r1, $r9;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r4 = virtualinvoke r0.<ucar.ma2.StructureData: long[] getJavaArrayLong(ucar.ma2.StructureMembers$Member)>($r3);

        return $r4;
    }

    public abstract long[] getJavaArrayLong(ucar.ma2.StructureMembers$Member);

    public char getScalarChar(java.lang.String)
    {
        char $c0;
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r8;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $c0 = virtualinvoke r0.<ucar.ma2.StructureData: char getScalarChar(ucar.ma2.StructureMembers$Member)>($r3);

        return $c0;
    }

    public abstract char getScalarChar(ucar.ma2.StructureMembers$Member);

    public char[] getJavaArrayChar(java.lang.String)
    {
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        char[] $r4;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r1, $r9;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r4 = virtualinvoke r0.<ucar.ma2.StructureData: char[] getJavaArrayChar(ucar.ma2.StructureMembers$Member)>($r3);

        return $r4;
    }

    public abstract char[] getJavaArrayChar(ucar.ma2.StructureMembers$Member);

    public java.lang.String getScalarString(java.lang.String)
    {
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.StructureMembers$Member $r2;
        ucar.ma2.StructureData r0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r3, $r8;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if null != $r2 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Member not found= ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $r3 = virtualinvoke r0.<ucar.ma2.StructureData: java.lang.String getScalarString(ucar.ma2.StructureMembers$Member)>($r2);

        return $r3;
    }

    public abstract java.lang.String getScalarString(ucar.ma2.StructureMembers$Member);

    public java.lang.String[] getJavaArrayString(java.lang.String)
    {
        java.lang.String[] $r4;
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r2;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r1, $r9;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r4 = virtualinvoke r0.<ucar.ma2.StructureData: java.lang.String[] getJavaArrayString(ucar.ma2.StructureMembers$Member)>($r3);

        return $r4;
    }

    public abstract java.lang.String[] getJavaArrayString(ucar.ma2.StructureMembers$Member);

    public ucar.ma2.StructureData getScalarStructure(java.lang.String)
    {
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.StructureMembers$Member $r2;
        ucar.ma2.StructureData r0, $r3;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r8;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if null != $r2 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Member not found= ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $r3 = virtualinvoke r0.<ucar.ma2.StructureData: ucar.ma2.StructureData getScalarStructure(ucar.ma2.StructureMembers$Member)>($r2);

        return $r3;
    }

    public abstract ucar.ma2.StructureData getScalarStructure(ucar.ma2.StructureMembers$Member);

    public ucar.ma2.ArrayStructure getArrayStructure(java.lang.String)
    {
        ucar.ma2.ArrayStructure $r3;
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.StructureMembers$Member $r2;
        ucar.ma2.StructureData r0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r8;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if null != $r2 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Member not found= ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $r3 = virtualinvoke r0.<ucar.ma2.StructureData: ucar.ma2.ArrayStructure getArrayStructure(ucar.ma2.StructureMembers$Member)>($r2);

        return $r3;
    }

    public abstract ucar.ma2.ArrayStructure getArrayStructure(ucar.ma2.StructureMembers$Member);

    public ucar.ma2.ArraySequence getArraySequence(java.lang.String)
    {
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureData r0;
        ucar.ma2.ArraySequence $r4;
        ucar.ma2.StructureMembers $r2;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r1, $r9;

        r0 := @this: ucar.ma2.StructureData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r4 = virtualinvoke r0.<ucar.ma2.StructureData: ucar.ma2.ArraySequence getArraySequence(ucar.ma2.StructureMembers$Member)>($r3);

        return $r4;
    }

    public abstract ucar.ma2.ArraySequence getArraySequence(ucar.ma2.StructureMembers$Member);

    public void showInternal(java.util.Formatter, java.lang.String)
    {
        java.lang.Object[] $r1;
        java.lang.Integer $r8;
        java.util.Formatter r0;
        ucar.ma2.StructureData r3;
        ucar.ma2.StructureMembers $r4;
        int $i0;
        java.lang.Class $r6;
        java.lang.String r2, $r5, $r7;

        r3 := @this: ucar.ma2.StructureData;

        r0 := @parameter0: java.util.Formatter;

        r2 := @parameter1: java.lang.String;

        $r1 = newarray (java.lang.Object)[4];

        $r1[0] = r2;

        $r4 = r3.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r5 = virtualinvoke $r4.<ucar.ma2.StructureMembers: java.lang.String getName()>();

        $r1[1] = $r5;

        $r6 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r1[2] = $r7;

        $i0 = virtualinvoke r3.<java.lang.Object: int hashCode()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[3] = $r8;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%sStructureData %s class=%s hash=0x%x%n", $r1);

        return;
    }

    public void showInternalMembers(java.util.Formatter, java.lang.String)
    {
        java.lang.Object[] $r1;
        java.lang.Integer $r8;
        ucar.ma2.StructureMembers$Member r12;
        java.util.Formatter r0;
        ucar.ma2.StructureData r3;
        int $i0;
        java.lang.String r2, $r5, $r7, $r16;
        boolean $z0;
        java.util.Iterator $r10;
        java.util.List $r9;
        ucar.ma2.StructureMembers $r4;
        java.lang.Class $r6;
        java.lang.Object $r11;
        java.lang.StringBuilder $r13, $r14, $r15;

        r3 := @this: ucar.ma2.StructureData;

        r0 := @parameter0: java.util.Formatter;

        r2 := @parameter1: java.lang.String;

        $r1 = newarray (java.lang.Object)[4];

        $r1[0] = r2;

        $r4 = r3.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r5 = virtualinvoke $r4.<ucar.ma2.StructureMembers: java.lang.String getName()>();

        $r1[1] = $r5;

        $r6 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r1[2] = $r7;

        $i0 = virtualinvoke r3.<java.lang.Object: int hashCode()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[3] = $r8;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%sStructureData %s class=%s hash=0x%x%n", $r1);

        $r9 = virtualinvoke r3.<ucar.ma2.StructureData: java.util.List getMembers()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (ucar.ma2.StructureMembers$Member) $r11;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r12.<ucar.ma2.StructureMembers$Member: void showInternal(java.util.Formatter,java.lang.String)>(r0, $r16);

        goto label1;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r1;
        java.lang.String $r2;

        r0 := @this: ucar.ma2.StructureData;

        $r1 = r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers members>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }
}
