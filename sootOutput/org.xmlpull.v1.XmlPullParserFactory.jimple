public class org.xmlpull.v1.XmlPullParserFactory extends java.lang.Object
{
    static final java.lang.Class referenceContextClass;
    public static final java.lang.String PROPERTY_NAME;
    private static final java.lang.String RESOURCE_NAME;
    protected java.util.Vector parserClasses;
    protected java.lang.String classNamesLocation;
    protected java.util.Vector serializerClasses;
    protected java.util.Hashtable features;

    protected void <init>()
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.util.Hashtable $r1;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features> = $r1;

        return;
    }

    public void setFeature(java.lang.String, boolean) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.Boolean $r2;
        java.lang.String r1;
        java.util.Hashtable $r3;
        boolean z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r3 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r2 = new java.lang.Boolean;

        specialinvoke $r2.<java.lang.Boolean: void <init>(boolean)>(z0);

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r2);

        return;
    }

    public boolean getFeature(java.lang.String)
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.Boolean r4;
        java.lang.Object $r3;
        java.lang.String r1;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.Boolean) $r3;

        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setNamespaceAware(boolean)
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.Boolean $r1;
        java.util.Hashtable $r2;
        boolean z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        z0 := @parameter0: boolean;

        $r2 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r1 = new java.lang.Boolean;

        specialinvoke $r1.<java.lang.Boolean: void <init>(boolean)>(z0);

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", $r1);

        return;
    }

    public boolean isNamespaceAware()
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 = virtualinvoke r0.<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#process-namespaces");

        return $z0;
    }

    public void setValidating(boolean)
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.Boolean $r1;
        java.util.Hashtable $r2;
        boolean z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        z0 := @parameter0: boolean;

        $r2 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r1 = new java.lang.Boolean;

        specialinvoke $r1.<java.lang.Boolean: void <init>(boolean)>(z0);

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xmlpull.org/v1/doc/features.html#validation", $r1);

        return;
    }

    public boolean isValidating()
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 = virtualinvoke r0.<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#validation");

        return $z0;
    }

    public org.xmlpull.v1.XmlPullParser newPullParser() throws org.xmlpull.v1.XmlPullParserException
    {
        java.util.Enumeration $r15;
        java.util.Vector $r1, $r2, $r4, $r10;
        boolean $z0, $z1;
        org.xmlpull.v1.XmlPullParser r42;
        java.lang.Exception $r33;
        org.xmlpull.v1.XmlPullParserException $r5, $r21, $r27;
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.StringBuffer $r3, $r6, $r7, $r8, $r22, $r23, $r25, $r28, $r29, $r31, $r34, $r36, $r37, $r39, $r40;
        int $i0, $i1, i2;
        java.lang.Boolean r20;
        java.lang.String $r9, r17, $r24, $r26, $r30, $r32, $r35, $r38, $r41;
        java.util.Hashtable $r14, $r18;
        java.lang.Object $r11, $r13, $r16, $r19;
        java.lang.Class r12;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r1 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector parserClasses>;

        if $r1 != null goto label1;

        $r27 = new org.xmlpull.v1.XmlPullParserException;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Factory initialization was incomplete - has not tried ");

        $r30 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r27.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r32);

        throw $r27;

     label1:
        $r2 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector parserClasses>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i0 != 0 goto label2;

        $r21 = new org.xmlpull.v1.XmlPullParserException;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No valid parser classes found in ");

        $r24 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r21.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r26);

        throw $r21;

     label2:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

     label3:
        $r4 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector parserClasses>;

        $i1 = virtualinvoke $r4.<java.util.Vector: int size()>();

        if i2 >= $i1 goto label9;

        $r10 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector parserClasses>;

        $r11 = virtualinvoke $r10.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r12 = (java.lang.Class) $r11;

     label4:
        $r13 = virtualinvoke r12.<java.lang.Class: java.lang.Object newInstance()>();

        r42 = (org.xmlpull.v1.XmlPullParser) $r13;

        $r14 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r15 = virtualinvoke $r14.<java.util.Hashtable: java.util.Enumeration keys()>();

     label5:
        $z0 = interfaceinvoke $r15.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label7;

        $r16 = interfaceinvoke $r15.<java.util.Enumeration: java.lang.Object nextElement()>();

        r17 = (java.lang.String) $r16;

        $r18 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r19 = virtualinvoke $r18.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r17);

        r20 = (java.lang.Boolean) $r19;

        if r20 == null goto label6;

        $z1 = virtualinvoke r20.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label6;

        interfaceinvoke r42.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>(r17, 1);

     label6:
        goto label5;

     label7:
        return r42;

     label8:
        $r33 := @caughtexception;

        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r35 = virtualinvoke r12.<java.lang.Class: java.lang.String getName()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r38 = virtualinvoke $r33.<java.lang.Throwable: java.lang.String toString()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r41);

        i2 = i2 + 1;

        goto label3;

     label9:
        $r5 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not create parser: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r9);

        throw $r5;

        catch java.lang.Exception from label4 to label7 with label8;
    }

    public org.xmlpull.v1.XmlSerializer newSerializer() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlSerializer r35;
        java.util.Vector $r1, $r2, $r4, $r10;
        java.lang.Exception $r26;
        org.xmlpull.v1.XmlPullParserException $r5, $r14, $r20;
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.StringBuffer $r3, $r6, $r7, $r8, $r15, $r16, $r18, $r21, $r22, $r24, $r27, $r29, $r30, $r32, $r33;
        int $i0, $i1, i2;
        java.lang.String $r9, $r17, $r19, $r23, $r25, $r28, $r31, $r34;
        java.lang.Object $r11, $r13;
        java.lang.Class r12;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r1 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector serializerClasses>;

        if $r1 != null goto label1;

        $r20 = new org.xmlpull.v1.XmlPullParserException;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Factory initialization incomplete - has not tried ");

        $r23 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r25);

        throw $r20;

     label1:
        $r2 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector serializerClasses>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i0 != 0 goto label2;

        $r14 = new org.xmlpull.v1.XmlPullParserException;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No valid serializer classes found in ");

        $r17 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r19);

        throw $r14;

     label2:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

     label3:
        $r4 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector serializerClasses>;

        $i1 = virtualinvoke $r4.<java.util.Vector: int size()>();

        if i2 >= $i1 goto label7;

        $r10 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector serializerClasses>;

        $r11 = virtualinvoke $r10.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r12 = (java.lang.Class) $r11;

     label4:
        $r13 = virtualinvoke r12.<java.lang.Class: java.lang.Object newInstance()>();

        r35 = (org.xmlpull.v1.XmlSerializer) $r13;

     label5:
        return r35;

     label6:
        $r26 := @caughtexception;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke r12.<java.lang.Class: java.lang.String getName()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r31 = virtualinvoke $r26.<java.lang.Throwable: java.lang.String toString()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        i2 = i2 + 1;

        goto label3;

     label7:
        $r5 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not create serializer: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r9);

        throw $r5;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static org.xmlpull.v1.XmlPullParserFactory newInstance() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;

        $r0 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String,java.lang.Class)>(null, null);

        return $r0;
    }

    public static org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String, java.lang.Class) throws org.xmlpull.v1.XmlPullParserException
    {
        java.util.Vector $r37, $r38;
        boolean $z0, $z1, $z2, $z3, z4;
        java.lang.Exception $r22, $r23;
        org.xmlpull.v1.XmlPullParserException $r32, $r34, $r40;
        org.xmlpull.v1.XmlPullParserFactory r29, $r41;
        java.lang.StringBuffer $r3, $r4, $r5, $r13, $r14, $r19, $r20, $r21, $r33, $r35, $r36, $r39;
        int $i0, $i2, $i3, i4, $i5, i6, $i8;
        java.lang.String $r1, $r9, $r15, $r17, r25, r28;
        char $c1;
        java.lang.Class $r10, r26, r30;
        java.lang.Object r31;
        java.io.InputStream $r27;

        r25 := @parameter0: java.lang.String;

        r26 := @parameter1: java.lang.Class;

        if r26 != null goto label01;

        r26 = <org.xmlpull.v1.XmlPullParserFactory: java.lang.Class referenceContextClass>;

     label01:
        if r25 == null goto label02;

        $i3 = virtualinvoke r25.<java.lang.String: int length()>();

        if $i3 == 0 goto label02;

        $r17 = "DEFAULT";

        $z3 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z3 == 0 goto label11;

     label02:
        $r27 = virtualinvoke r26.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/META-INF/services/org.xmlpull.v1.XmlPullParserFactory");

        if $r27 != null goto label03;

        $r32 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r32.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("resource not found: /META-INF/services/org.xmlpull.v1.XmlPullParserFactory make sure that parser implementing XmlPull API is available");

        throw $r32;

     label03:
        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

     label04:
        $i0 = virtualinvoke $r27.<java.io.InputStream: int read()>();

        if $i0 >= 0 goto label05;

        goto label07;

     label05:
        if $i0 <= 32 goto label06;

        $c1 = (char) $i0;

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label06:
        goto label04;

     label07:
        virtualinvoke $r27.<java.io.InputStream: void close()>();

        $r1 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        r25 = $r1;

     label08:
        goto label10;

     label09:
        $r23 := @caughtexception;

        $r34 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r34.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>(null, null, $r23);

        throw $r34;

     label10:
        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("resource /META-INF/services/org.xmlpull.v1.XmlPullParserFactory that contained \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        r28 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label12;

     label11:
        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("parameter classNames to newInstance() that contained \'");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r25);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        r28 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

     label12:
        r29 = null;

        $r37 = new java.util.Vector;

        specialinvoke $r37.<java.util.Vector: void <init>()>();

        $r38 = new java.util.Vector;

        specialinvoke $r38.<java.util.Vector: void <init>()>();

        i4 = 0;

     label13:
        $i5 = virtualinvoke r25.<java.lang.String: int length()>();

        if i4 >= $i5 goto label24;

        $i2 = virtualinvoke r25.<java.lang.String: int indexOf(int,int)>(44, i4);

        i6 = $i2;

        $i8 = (int) -1;

        if $i2 != $i8 goto label14;

        i6 = virtualinvoke r25.<java.lang.String: int length()>();

     label14:
        $r9 = virtualinvoke r25.<java.lang.String: java.lang.String substring(int,int)>(i4, i6);

        r30 = null;

        r31 = null;

     label15:
        $r10 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r9);

        r30 = $r10;

        r31 = virtualinvoke $r10.<java.lang.Class: java.lang.Object newInstance()>();

     label16:
        goto label18;

     label17:
        $r22 := @caughtexception;

     label18:
        if r30 == null goto label23;

        z4 = 0;

        $z0 = r31 instanceof org.xmlpull.v1.XmlPullParser;

        if $z0 == 0 goto label19;

        virtualinvoke $r37.<java.util.Vector: void addElement(java.lang.Object)>(r30);

        z4 = 1;

     label19:
        $z1 = r31 instanceof org.xmlpull.v1.XmlSerializer;

        if $z1 == 0 goto label20;

        virtualinvoke $r38.<java.util.Vector: void addElement(java.lang.Object)>(r30);

        z4 = 1;

     label20:
        $z2 = r31 instanceof org.xmlpull.v1.XmlPullParserFactory;

        if $z2 == 0 goto label22;

        if r29 != null goto label21;

        r29 = (org.xmlpull.v1.XmlPullParserFactory) r31;

     label21:
        z4 = 1;

     label22:
        if z4 != 0 goto label23;

        $r40 = new org.xmlpull.v1.XmlPullParserException;

        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("incompatible class: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r40.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r15);

        throw $r40;

     label23:
        i4 = i6 + 1;

        goto label13;

     label24:
        if r29 != null goto label25;

        $r41 = new org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke $r41.<org.xmlpull.v1.XmlPullParserFactory: void <init>()>();

        r29 = $r41;

     label25:
        r29.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector parserClasses> = $r37;

        r29.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector serializerClasses> = $r38;

        r29.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation> = r28;

        return r29;

        catch java.lang.Exception from label02 to label08 with label09;
        catch java.lang.Exception from label15 to label16 with label17;
    }

    static void <clinit>()
    {
        java.lang.Class $r1;
        org.xmlpull.v1.XmlPullParserFactory $r0;

        <org.xmlpull.v1.XmlPullParserFactory: java.lang.String RESOURCE_NAME> = "/META-INF/services/org.xmlpull.v1.XmlPullParserFactory";

        <org.xmlpull.v1.XmlPullParserFactory: java.lang.String PROPERTY_NAME> = "org.xmlpull.v1.XmlPullParserFactory";

        $r0 = new org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke $r0.<org.xmlpull.v1.XmlPullParserFactory: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        <org.xmlpull.v1.XmlPullParserFactory: java.lang.Class referenceContextClass> = $r1;

        return;
    }
}
