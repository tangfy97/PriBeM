class org.apache.lucene.search.BooleanScorer2 extends org.apache.lucene.search.Scorer
{
    private final java.util.List requiredScorers;
    private final java.util.List optionalScorers;
    private final java.util.List prohibitedScorers;
    private final org.apache.lucene.search.BooleanScorer2$Coordinator coordinator;
    private final org.apache.lucene.search.Scorer countingSumScorer;
    private final int minNrShouldMatch;
    private int doc;

    public void <init>(org.apache.lucene.search.BooleanQuery$BooleanWeight, boolean, int, java.util.List, java.util.List, java.util.List, int) throws java.io.IOException
    {
        org.apache.lucene.search.Scorer $r6;
        org.apache.lucene.search.BooleanScorer2$Coordinator $r9;
        java.lang.IllegalArgumentException $r8;
        java.util.List r2, r3, r4;
        org.apache.lucene.search.BooleanQuery$BooleanWeight r1;
        org.apache.lucene.search.BooleanScorer2 r0;
        int i0, i1, $i3;
        boolean z0;

        r0 := @this: org.apache.lucene.search.BooleanScorer2;

        r1 := @parameter0: org.apache.lucene.search.BooleanQuery$BooleanWeight;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.List;

        r2 := @parameter5: java.util.List;

        i1 := @parameter6: int;

        specialinvoke r0.<org.apache.lucene.search.Scorer: void <init>(org.apache.lucene.search.Weight)>(r1);

        $i3 = (int) -1;

        r0.<org.apache.lucene.search.BooleanScorer2: int doc> = $i3;

        if i0 >= 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Minimum number of optional scorers should not be negative");

        throw $r8;

     label1:
        r0.<org.apache.lucene.search.BooleanScorer2: int minNrShouldMatch> = i0;

        r0.<org.apache.lucene.search.BooleanScorer2: java.util.List optionalScorers> = r2;

        r0.<org.apache.lucene.search.BooleanScorer2: java.util.List requiredScorers> = r3;

        r0.<org.apache.lucene.search.BooleanScorer2: java.util.List prohibitedScorers> = r4;

        $r9 = new org.apache.lucene.search.BooleanScorer2$Coordinator;

        specialinvoke $r9.<org.apache.lucene.search.BooleanScorer2$Coordinator: void <init>(org.apache.lucene.search.BooleanScorer2,int,boolean)>(r0, i1, z0);

        r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.BooleanScorer2$Coordinator coordinator> = $r9;

        $r6 = specialinvoke r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer makeCountingSumScorer(boolean)>(z0);

        r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer countingSumScorer> = $r6;

        return;
    }

    private org.apache.lucene.search.Scorer countingDisjunctionSumScorer(java.util.List, int) throws java.io.IOException
    {
        java.lang.Object[] $r5;
        org.apache.lucene.search.Weight $r3, $r8;
        org.apache.lucene.search.Scorer[] $r4, $r6;
        java.util.List r2;
        org.apache.lucene.search.BooleanScorer2 r1;
        org.apache.lucene.search.BooleanScorer2$1 $r7;
        int i0, $i1;
        org.apache.lucene.search.BooleanScorer2$2 $r0;

        r1 := @this: org.apache.lucene.search.BooleanScorer2;

        r2 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        if i0 <= 1 goto label1;

        $r7 = new org.apache.lucene.search.BooleanScorer2$1;

        $r8 = r1.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Weight weight>;

        specialinvoke $r7.<org.apache.lucene.search.BooleanScorer2$1: void <init>(org.apache.lucene.search.BooleanScorer2,org.apache.lucene.search.Weight,java.util.List,int)>(r1, $r8, r2, i0);

        return $r7;

     label1:
        $r0 = new org.apache.lucene.search.BooleanScorer2$2;

        $r3 = r1.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Weight weight>;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        $r4 = newarray (org.apache.lucene.search.Scorer)[$i1];

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.lucene.search.Scorer[]) $r5;

        specialinvoke $r0.<org.apache.lucene.search.BooleanScorer2$2: void <init>(org.apache.lucene.search.BooleanScorer2,org.apache.lucene.search.Weight,org.apache.lucene.search.Scorer[],float[])>(r1, $r3, $r6, null);

        return $r0;
    }

    private org.apache.lucene.search.Scorer countingConjunctionSumScorer(boolean, java.util.List) throws java.io.IOException
    {
        java.lang.Object[] $r5;
        org.apache.lucene.search.Weight $r3;
        org.apache.lucene.search.Scorer[] $r4, $r6;
        java.util.List r0;
        org.apache.lucene.search.BooleanScorer2 r2;
        int $i0, $i1;
        org.apache.lucene.search.BooleanScorer2$3 $r1;
        boolean z0;

        r2 := @this: org.apache.lucene.search.BooleanScorer2;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $r1 = new org.apache.lucene.search.BooleanScorer2$3;

        $r3 = r2.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Weight weight>;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        $r4 = newarray (org.apache.lucene.search.Scorer)[$i1];

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.lucene.search.Scorer[]) $r5;

        specialinvoke $r1.<org.apache.lucene.search.BooleanScorer2$3: void <init>(org.apache.lucene.search.BooleanScorer2,org.apache.lucene.search.Weight,org.apache.lucene.search.Scorer[],int)>(r2, $r3, $r6, $i0);

        return $r1;
    }

    private org.apache.lucene.search.Scorer dualConjunctionSumScorer(boolean, org.apache.lucene.search.Scorer, org.apache.lucene.search.Scorer) throws java.io.IOException
    {
        org.apache.lucene.search.Scorer[] $r2;
        org.apache.lucene.search.Scorer r3, r4;
        org.apache.lucene.search.BooleanScorer2 r1;
        org.apache.lucene.search.Weight $r5;
        org.apache.lucene.search.ConjunctionScorer $r0;
        boolean z0;

        r1 := @this: org.apache.lucene.search.BooleanScorer2;

        z0 := @parameter0: boolean;

        r3 := @parameter1: org.apache.lucene.search.Scorer;

        r4 := @parameter2: org.apache.lucene.search.Scorer;

        $r0 = new org.apache.lucene.search.ConjunctionScorer;

        $r5 = r1.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Weight weight>;

        $r2 = newarray (org.apache.lucene.search.Scorer)[2];

        $r2[0] = r3;

        $r2[1] = r4;

        specialinvoke $r0.<org.apache.lucene.search.ConjunctionScorer: void <init>(org.apache.lucene.search.Weight,org.apache.lucene.search.Scorer[])>($r5, $r2);

        return $r0;
    }

    private org.apache.lucene.search.Scorer makeCountingSumScorer(boolean) throws java.io.IOException
    {
        java.util.List $r1;
        org.apache.lucene.search.Scorer $r2;
        org.apache.lucene.search.BooleanScorer2 r0;
        int $i0;
        boolean z0;

        r0 := @this: org.apache.lucene.search.BooleanScorer2;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List requiredScorers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r2 = specialinvoke r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer makeCountingSumScorerNoReq(boolean)>(z0);

        goto label2;

     label1:
        $r2 = specialinvoke r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer makeCountingSumScorerSomeReq(boolean)>(z0);

     label2:
        return $r2;
    }

    private org.apache.lucene.search.Scorer makeCountingSumScorerNoReq(boolean) throws java.io.IOException
    {
        org.apache.lucene.search.BooleanScorer2 r0;
        int $i0, $i1, $i2, $i3;
        boolean z0;
        org.apache.lucene.search.Scorer $r7, r9, $r10;
        java.util.List $r1, $r2, $r3, $r5, $r8;
        java.lang.Object $r6;
        org.apache.lucene.search.BooleanScorer2$SingleMatchScorer $r4;

        r0 := @this: org.apache.lucene.search.BooleanScorer2;

        z0 := @parameter0: boolean;

        $i0 = r0.<org.apache.lucene.search.BooleanScorer2: int minNrShouldMatch>;

        if $i0 >= 1 goto label1;

        $i3 = 1;

        goto label2;

     label1:
        $i3 = r0.<org.apache.lucene.search.BooleanScorer2: int minNrShouldMatch>;

     label2:
        $r1 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List optionalScorers>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 <= $i3 goto label3;

        $r8 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List optionalScorers>;

        r9 = specialinvoke r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer countingDisjunctionSumScorer(java.util.List,int)>($r8, $i3);

        goto label5;

     label3:
        $r2 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List optionalScorers>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i2 != 1 goto label4;

        $r4 = new org.apache.lucene.search.BooleanScorer2$SingleMatchScorer;

        $r5 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List optionalScorers>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (org.apache.lucene.search.Scorer) $r6;

        specialinvoke $r4.<org.apache.lucene.search.BooleanScorer2$SingleMatchScorer: void <init>(org.apache.lucene.search.BooleanScorer2,org.apache.lucene.search.Scorer)>(r0, $r7);

        r9 = $r4;

        goto label5;

     label4:
        $r3 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List optionalScorers>;

        r9 = specialinvoke r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer countingConjunctionSumScorer(boolean,java.util.List)>(z0, $r3);

     label5:
        $r10 = specialinvoke r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer addProhibitedScorers(org.apache.lucene.search.Scorer)>(r9);

        return $r10;
    }

    private org.apache.lucene.search.Scorer makeCountingSumScorerSomeReq(boolean) throws java.io.IOException
    {
        org.apache.lucene.search.BooleanScorer2 r0;
        boolean z0;
        org.apache.lucene.search.Scorer $r5, $r10, $r12, $r13, $r14, $r17, $r21, $r22, $r23, $r24;
        java.util.List $r1, $r2, $r3, $r6, $r7, $r8, $r11, $r15, $r19, $r20;
        org.apache.lucene.search.ReqOptSumScorer $r28;
        java.util.ArrayList $r25;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r9, $r16;
        org.apache.lucene.search.BooleanScorer2$SingleMatchScorer $r26, $r27;

        r0 := @this: org.apache.lucene.search.BooleanScorer2;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List optionalScorers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = r0.<org.apache.lucene.search.BooleanScorer2: int minNrShouldMatch>;

        if $i0 != $i1 goto label1;

        $r25 = new java.util.ArrayList;

        $r19 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List requiredScorers>;

        specialinvoke $r25.<java.util.ArrayList: void <init>(java.util.Collection)>($r19);

        $r20 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List optionalScorers>;

        virtualinvoke $r25.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r20);

        $r21 = specialinvoke r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer countingConjunctionSumScorer(boolean,java.util.List)>(z0, $r25);

        $r22 = specialinvoke r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer addProhibitedScorers(org.apache.lucene.search.Scorer)>($r21);

        return $r22;

     label1:
        $r2 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List requiredScorers>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i2 != 1 goto label2;

        $r26 = new org.apache.lucene.search.BooleanScorer2$SingleMatchScorer;

        $r23 = $r26;

        $r15 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List requiredScorers>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (org.apache.lucene.search.Scorer) $r16;

        specialinvoke $r26.<org.apache.lucene.search.BooleanScorer2$SingleMatchScorer: void <init>(org.apache.lucene.search.BooleanScorer2,org.apache.lucene.search.Scorer)>(r0, $r17);

        goto label3;

     label2:
        $r3 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List requiredScorers>;

        $r23 = specialinvoke r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer countingConjunctionSumScorer(boolean,java.util.List)>(z0, $r3);

     label3:
        $i3 = r0.<org.apache.lucene.search.BooleanScorer2: int minNrShouldMatch>;

        if $i3 <= 0 goto label4;

        $r11 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List optionalScorers>;

        $i5 = r0.<org.apache.lucene.search.BooleanScorer2: int minNrShouldMatch>;

        $r12 = specialinvoke r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer countingDisjunctionSumScorer(java.util.List,int)>($r11, $i5);

        $r13 = specialinvoke r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer dualConjunctionSumScorer(boolean,org.apache.lucene.search.Scorer,org.apache.lucene.search.Scorer)>(z0, $r23, $r12);

        $r14 = specialinvoke r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer addProhibitedScorers(org.apache.lucene.search.Scorer)>($r13);

        return $r14;

     label4:
        $r28 = new org.apache.lucene.search.ReqOptSumScorer;

        $r5 = specialinvoke r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer addProhibitedScorers(org.apache.lucene.search.Scorer)>($r23);

        $r6 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List optionalScorers>;

        $i4 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i4 != 1 goto label5;

        $r27 = new org.apache.lucene.search.BooleanScorer2$SingleMatchScorer;

        $r24 = $r27;

        $r8 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List optionalScorers>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (org.apache.lucene.search.Scorer) $r9;

        specialinvoke $r27.<org.apache.lucene.search.BooleanScorer2$SingleMatchScorer: void <init>(org.apache.lucene.search.BooleanScorer2,org.apache.lucene.search.Scorer)>(r0, $r10);

        goto label6;

     label5:
        $r7 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List optionalScorers>;

        $r24 = specialinvoke r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer countingDisjunctionSumScorer(java.util.List,int)>($r7, 1);

     label6:
        specialinvoke $r28.<org.apache.lucene.search.ReqOptSumScorer: void <init>(org.apache.lucene.search.Scorer,org.apache.lucene.search.Scorer)>($r5, $r24);

        return $r28;
    }

    private org.apache.lucene.search.Scorer addProhibitedScorers(org.apache.lucene.search.Scorer) throws java.io.IOException
    {
        org.apache.lucene.search.Scorer r2, $r8, $r9;
        org.apache.lucene.search.Weight $r5;
        org.apache.lucene.search.ReqExclScorer $r11;
        java.util.List $r1, $r3, $r4, $r6;
        org.apache.lucene.search.BooleanScorer2 r0;
        org.apache.lucene.search.MinShouldMatchSumScorer $r10;
        int $i0, $i1;
        java.lang.Object $r7;

        r0 := @this: org.apache.lucene.search.BooleanScorer2;

        r2 := @parameter0: org.apache.lucene.search.Scorer;

        $r1 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List prohibitedScorers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r8 = r2;

        goto label4;

     label1:
        $r11 = new org.apache.lucene.search.ReqExclScorer;

        $r8 = $r11;

        $r3 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List prohibitedScorers>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 != 1 goto label2;

        $r6 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List prohibitedScorers>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (org.apache.lucene.search.Scorer) $r7;

        goto label3;

     label2:
        $r10 = new org.apache.lucene.search.MinShouldMatchSumScorer;

        $r9 = $r10;

        $r5 = r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Weight weight>;

        $r4 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List prohibitedScorers>;

        specialinvoke $r10.<org.apache.lucene.search.MinShouldMatchSumScorer: void <init>(org.apache.lucene.search.Weight,java.util.List)>($r5, $r4);

     label3:
        specialinvoke $r11.<org.apache.lucene.search.ReqExclScorer: void <init>(org.apache.lucene.search.Scorer,org.apache.lucene.search.DocIdSetIterator)>(r2, $r9);

     label4:
        return $r8;
    }

    public void score(org.apache.lucene.search.Collector) throws java.io.IOException
    {
        org.apache.lucene.search.Scorer $r2;
        org.apache.lucene.search.BooleanScorer2 r1;
        int $i0, $i1;
        org.apache.lucene.search.Collector r0;

        r1 := @this: org.apache.lucene.search.BooleanScorer2;

        r0 := @parameter0: org.apache.lucene.search.Collector;

        virtualinvoke r0.<org.apache.lucene.search.Collector: void setScorer(org.apache.lucene.search.Scorer)>(r1);

     label1:
        $r2 = r1.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer countingSumScorer>;

        $i0 = virtualinvoke $r2.<org.apache.lucene.search.Scorer: int nextDoc()>();

        r1.<org.apache.lucene.search.BooleanScorer2: int doc> = $i0;

        if $i0 == 2147483647 goto label2;

        $i1 = r1.<org.apache.lucene.search.BooleanScorer2: int doc>;

        virtualinvoke r0.<org.apache.lucene.search.Collector: void collect(int)>($i1);

        goto label1;

     label2:
        return;
    }

    public boolean score(org.apache.lucene.search.Collector, int, int) throws java.io.IOException
    {
        org.apache.lucene.search.Scorer $r2;
        org.apache.lucene.search.Collector r1;
        org.apache.lucene.search.BooleanScorer2 r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.BooleanScorer2;

        r1 := @parameter0: org.apache.lucene.search.Collector;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r0.<org.apache.lucene.search.BooleanScorer2: int doc> = i0;

        virtualinvoke r1.<org.apache.lucene.search.Collector: void setScorer(org.apache.lucene.search.Scorer)>(r0);

     label1:
        $i2 = r0.<org.apache.lucene.search.BooleanScorer2: int doc>;

        if $i2 >= i1 goto label2;

        $i4 = r0.<org.apache.lucene.search.BooleanScorer2: int doc>;

        virtualinvoke r1.<org.apache.lucene.search.Collector: void collect(int)>($i4);

        $r2 = r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer countingSumScorer>;

        $i5 = virtualinvoke $r2.<org.apache.lucene.search.Scorer: int nextDoc()>();

        r0.<org.apache.lucene.search.BooleanScorer2: int doc> = $i5;

        goto label1;

     label2:
        $i3 = r0.<org.apache.lucene.search.BooleanScorer2: int doc>;

        if $i3 == 2147483647 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public int docID()
    {
        int $i0;
        org.apache.lucene.search.BooleanScorer2 r0;

        r0 := @this: org.apache.lucene.search.BooleanScorer2;

        $i0 = r0.<org.apache.lucene.search.BooleanScorer2: int doc>;

        return $i0;
    }

    public int nextDoc() throws java.io.IOException
    {
        int $i0;
        org.apache.lucene.search.Scorer $r1;
        org.apache.lucene.search.BooleanScorer2 r0;

        r0 := @this: org.apache.lucene.search.BooleanScorer2;

        $r1 = r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer countingSumScorer>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.search.Scorer: int nextDoc()>();

        r0.<org.apache.lucene.search.BooleanScorer2: int doc> = $i0;

        return $i0;
    }

    public float score() throws java.io.IOException
    {
        org.apache.lucene.search.Scorer $r2;
        org.apache.lucene.search.BooleanScorer2$Coordinator $r1, $r3, $r4;
        float[] $r5;
        org.apache.lucene.search.BooleanScorer2 r0;
        int $i0;
        float $f0, $f1, $f2;

        r0 := @this: org.apache.lucene.search.BooleanScorer2;

        $r1 = r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.BooleanScorer2$Coordinator coordinator>;

        $r1.<org.apache.lucene.search.BooleanScorer2$Coordinator: int nrMatchers> = 0;

        $r2 = r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer countingSumScorer>;

        $f0 = virtualinvoke $r2.<org.apache.lucene.search.Scorer: float score()>();

        $r3 = r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.BooleanScorer2$Coordinator coordinator>;

        $r5 = $r3.<org.apache.lucene.search.BooleanScorer2$Coordinator: float[] coordFactors>;

        $r4 = r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.BooleanScorer2$Coordinator coordinator>;

        $i0 = $r4.<org.apache.lucene.search.BooleanScorer2$Coordinator: int nrMatchers>;

        $f1 = $r5[$i0];

        $f2 = $f0 * $f1;

        return $f2;
    }

    public int freq() throws java.io.IOException
    {
        int $i0;
        org.apache.lucene.search.Scorer $r1;
        org.apache.lucene.search.BooleanScorer2 r0;

        r0 := @this: org.apache.lucene.search.BooleanScorer2;

        $r1 = r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer countingSumScorer>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.search.Scorer: int freq()>();

        return $i0;
    }

    public int advance(int) throws java.io.IOException
    {
        org.apache.lucene.search.Scorer $r1;
        org.apache.lucene.search.BooleanScorer2 r0;
        int i0, $i1;

        r0 := @this: org.apache.lucene.search.BooleanScorer2;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer countingSumScorer>;

        $i1 = virtualinvoke $r1.<org.apache.lucene.search.Scorer: int advance(int)>(i0);

        r0.<org.apache.lucene.search.BooleanScorer2: int doc> = $i1;

        return $i1;
    }

    public long cost()
    {
        long $l0;
        org.apache.lucene.search.Scorer $r1;
        org.apache.lucene.search.BooleanScorer2 r0;

        r0 := @this: org.apache.lucene.search.BooleanScorer2;

        $r1 = r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.Scorer countingSumScorer>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.search.Scorer: long cost()>();

        return $l0;
    }

    public java.util.Collection getChildren()
    {
        java.util.ArrayList $r0;
        org.apache.lucene.search.Scorer$ChildScorer $r9, $r11, $r13;
        org.apache.lucene.search.BooleanScorer2 r1;
        boolean $z0, $z1, $z2;
        org.apache.lucene.search.Scorer r14, r15, r16;
        java.util.Iterator $r3, $r5, $r7;
        java.util.List $r2, $r4, $r6;
        java.lang.Object $r8, $r10, $r12;

        r1 := @this: org.apache.lucene.search.BooleanScorer2;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.lucene.search.BooleanScorer2: java.util.List optionalScorers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.apache.lucene.search.Scorer) $r12;

        $r13 = new org.apache.lucene.search.Scorer$ChildScorer;

        specialinvoke $r13.<org.apache.lucene.search.Scorer$ChildScorer: void <init>(org.apache.lucene.search.Scorer,java.lang.String)>(r14, "SHOULD");

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        goto label1;

     label2:
        $r4 = r1.<org.apache.lucene.search.BooleanScorer2: java.util.List prohibitedScorers>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r15 = (org.apache.lucene.search.Scorer) $r10;

        $r11 = new org.apache.lucene.search.Scorer$ChildScorer;

        specialinvoke $r11.<org.apache.lucene.search.Scorer$ChildScorer: void <init>(org.apache.lucene.search.Scorer,java.lang.String)>(r15, "MUST_NOT");

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        goto label3;

     label4:
        $r6 = r1.<org.apache.lucene.search.BooleanScorer2: java.util.List requiredScorers>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.apache.lucene.search.Scorer) $r8;

        $r9 = new org.apache.lucene.search.Scorer$ChildScorer;

        specialinvoke $r9.<org.apache.lucene.search.Scorer$ChildScorer: void <init>(org.apache.lucene.search.Scorer,java.lang.String)>(r16, "MUST");

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        goto label5;

     label6:
        return $r0;
    }

    static java.util.List access$000(org.apache.lucene.search.BooleanScorer2)
    {
        java.util.List $r1;
        org.apache.lucene.search.BooleanScorer2 r0;

        r0 := @parameter0: org.apache.lucene.search.BooleanScorer2;

        $r1 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List optionalScorers>;

        return $r1;
    }

    static java.util.List access$100(org.apache.lucene.search.BooleanScorer2)
    {
        java.util.List $r1;
        org.apache.lucene.search.BooleanScorer2 r0;

        r0 := @parameter0: org.apache.lucene.search.BooleanScorer2;

        $r1 = r0.<org.apache.lucene.search.BooleanScorer2: java.util.List requiredScorers>;

        return $r1;
    }

    static org.apache.lucene.search.BooleanScorer2$Coordinator access$200(org.apache.lucene.search.BooleanScorer2)
    {
        org.apache.lucene.search.BooleanScorer2 r0;
        org.apache.lucene.search.BooleanScorer2$Coordinator $r1;

        r0 := @parameter0: org.apache.lucene.search.BooleanScorer2;

        $r1 = r0.<org.apache.lucene.search.BooleanScorer2: org.apache.lucene.search.BooleanScorer2$Coordinator coordinator>;

        return $r1;
    }
}
