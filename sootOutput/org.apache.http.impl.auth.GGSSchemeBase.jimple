public abstract class org.apache.http.impl.auth.GGSSchemeBase extends org.apache.http.impl.auth.AuthSchemeBase
{
    private final org.apache.commons.logging.Log log;
    private final boolean stripPort;
    private final org.apache.commons.codec.binary.Base64 base64codec;
    private org.apache.http.impl.auth.GGSSchemeBase$State state;
    private byte[] token;

    void <init>(boolean)
    {
        org.apache.http.impl.auth.GGSSchemeBase r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        org.apache.http.impl.auth.GGSSchemeBase$State $r4;
        org.apache.commons.codec.binary.Base64 $r3;
        boolean z0;

        r0 := @this: org.apache.http.impl.auth.GGSSchemeBase;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.http.impl.auth.AuthSchemeBase: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.commons.logging.Log log> = $r2;

        $r3 = new org.apache.commons.codec.binary.Base64;

        specialinvoke $r3.<org.apache.commons.codec.binary.Base64: void <init>()>();

        r0.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.commons.codec.binary.Base64 base64codec> = $r3;

        $r4 = <org.apache.http.impl.auth.GGSSchemeBase$State: org.apache.http.impl.auth.GGSSchemeBase$State UNINITIATED>;

        r0.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.http.impl.auth.GGSSchemeBase$State state> = $r4;

        r0.<org.apache.http.impl.auth.GGSSchemeBase: boolean stripPort> = z0;

        return;
    }

    void <init>()
    {
        org.apache.http.impl.auth.GGSSchemeBase r0;

        r0 := @this: org.apache.http.impl.auth.GGSSchemeBase;

        specialinvoke r0.<org.apache.http.impl.auth.GGSSchemeBase: void <init>(boolean)>(0);

        return;
    }

    protected org.ietf.jgss.GSSManager getManager()
    {
        org.apache.http.impl.auth.GGSSchemeBase r1;
        org.ietf.jgss.GSSManager $r0;

        r1 := @this: org.apache.http.impl.auth.GGSSchemeBase;

        $r0 = staticinvoke <org.ietf.jgss.GSSManager: org.ietf.jgss.GSSManager getInstance()>();

        return $r0;
    }

    protected byte[] generateGSSToken(byte[], org.ietf.jgss.Oid, java.lang.String) throws org.ietf.jgss.GSSException
    {
        byte[] r0, $r13, r14;
        org.apache.http.impl.auth.GGSSchemeBase r1;
        int $i0;
        java.lang.String r5, $r7;
        org.ietf.jgss.GSSContext $r12;
        org.ietf.jgss.Oid $r8, r10;
        org.ietf.jgss.GSSManager $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        org.ietf.jgss.GSSName $r9, $r11;

        r1 := @this: org.apache.http.impl.auth.GGSSchemeBase;

        r0 := @parameter0: byte[];

        r10 := @parameter1: org.ietf.jgss.Oid;

        r5 := @parameter2: java.lang.String;

        r14 = r0;

        if r0 != null goto label1;

        r14 = newarray (byte)[0];

     label1:
        $r2 = virtualinvoke r1.<org.apache.http.impl.auth.GGSSchemeBase: org.ietf.jgss.GSSManager getManager()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP@");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = <org.ietf.jgss.GSSName: org.ietf.jgss.Oid NT_HOSTBASED_SERVICE>;

        $r9 = virtualinvoke $r2.<org.ietf.jgss.GSSManager: org.ietf.jgss.GSSName createName(java.lang.String,org.ietf.jgss.Oid)>($r7, $r8);

        $r11 = interfaceinvoke $r9.<org.ietf.jgss.GSSName: org.ietf.jgss.GSSName canonicalize(org.ietf.jgss.Oid)>(r10);

        $r12 = virtualinvoke $r2.<org.ietf.jgss.GSSManager: org.ietf.jgss.GSSContext createContext(org.ietf.jgss.GSSName,org.ietf.jgss.Oid,org.ietf.jgss.GSSCredential,int)>($r11, r10, null, 0);

        interfaceinvoke $r12.<org.ietf.jgss.GSSContext: void requestMutualAuth(boolean)>(1);

        interfaceinvoke $r12.<org.ietf.jgss.GSSContext: void requestCredDeleg(boolean)>(1);

        $i0 = lengthof r14;

        $r13 = interfaceinvoke $r12.<org.ietf.jgss.GSSContext: byte[] initSecContext(byte[],int,int)>(r14, 0, $i0);

        return $r13;
    }

    protected abstract byte[] generateToken(byte[], java.lang.String) throws org.ietf.jgss.GSSException;

    public boolean isComplete()
    {
        org.apache.http.impl.auth.GGSSchemeBase r0;
        org.apache.http.impl.auth.GGSSchemeBase$State $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.http.impl.auth.GGSSchemeBase;

        $r2 = r0.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.http.impl.auth.GGSSchemeBase$State state>;

        $r1 = <org.apache.http.impl.auth.GGSSchemeBase$State: org.apache.http.impl.auth.GGSSchemeBase$State TOKEN_GENERATED>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.http.impl.auth.GGSSchemeBase$State state>;

        $r3 = <org.apache.http.impl.auth.GGSSchemeBase$State: org.apache.http.impl.auth.GGSSchemeBase$State FAILED>;

        if $r4 != $r3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public org.apache.http.Header authenticate(org.apache.http.auth.Credentials, org.apache.http.HttpRequest) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.auth.GGSSchemeBase r0;
        org.apache.http.auth.Credentials r1;
        org.apache.http.HttpRequest r2;
        org.apache.http.Header $r3;

        r0 := @this: org.apache.http.impl.auth.GGSSchemeBase;

        r1 := @parameter0: org.apache.http.auth.Credentials;

        r2 := @parameter1: org.apache.http.HttpRequest;

        $r3 = virtualinvoke r0.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>(r1, r2, null);

        return $r3;
    }

    public org.apache.http.Header authenticate(org.apache.http.auth.Credentials, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.auth.AuthenticationException
    {
        byte[] $r5, $r7, $r19, $r20;
        org.apache.commons.codec.binary.Base64 $r6;
        org.apache.http.HttpRequest r0;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r22, $r24, $r25, $r30, $r32, $r33, $r36, $r38, $r39, $r42, $r43, $r45;
        org.apache.http.auth.Credentials r56;
        java.lang.String $r4, $r16, $r26, $r31, $r34, $r37, $r40, $r46, $r51, $r53, $r55, r57, r58, $r61;
        org.apache.http.protocol.HttpContext r17;
        org.apache.http.HttpHost $r28;
        java.lang.IllegalStateException $r41;
        org.apache.http.impl.auth.GGSSchemeBase$State $r2, $r21, $r44, $r49;
        int[] $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.ietf.jgss.GSSException $r48;
        org.apache.http.message.BufferedHeader $r10;
        org.apache.http.auth.AuthenticationException $r27, $r29, $r35, $r52, $r60;
        org.apache.http.auth.InvalidCredentialsException $r50, $r54;
        org.apache.http.impl.auth.GGSSchemeBase r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.IllegalArgumentException $r47;
        org.apache.http.util.CharArrayBuffer $r9;
        org.apache.commons.logging.Log $r8, $r12, $r23, $r59;
        java.lang.Object $r18;

        r1 := @this: org.apache.http.impl.auth.GGSSchemeBase;

        r56 := @parameter0: org.apache.http.auth.Credentials;

        r0 := @parameter1: org.apache.http.HttpRequest;

        r17 := @parameter2: org.apache.http.protocol.HttpContext;

        if r0 != null goto label01;

        $r47 = new java.lang.IllegalArgumentException;

        specialinvoke $r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request may not be null");

        throw $r47;

     label01:
        $r3 = <org.apache.http.impl.auth.GGSSchemeBase$1: int[] $SwitchMap$org$apache$http$impl$auth$GGSSchemeBase$State>;

        $r2 = r1.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.http.impl.auth.GGSSchemeBase$State state>;

        $i0 = virtualinvoke $r2.<org.apache.http.impl.auth.GGSSchemeBase$State: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label18;
            default: goto label22;
        };

     label02:
        $r35 = new org.apache.http.auth.AuthenticationException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke r1.<org.apache.http.impl.auth.GGSSchemeBase: java.lang.String getSchemeName()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authentication has not been initiated");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>($r40);

        throw $r35;

     label03:
        $r29 = new org.apache.http.auth.AuthenticationException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke r1.<org.apache.http.impl.auth.GGSSchemeBase: java.lang.String getSchemeName()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authentication has failed");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>($r34);

        throw $r29;

     label04:
        $z2 = virtualinvoke r1.<org.apache.http.impl.auth.GGSSchemeBase: boolean isProxy()>();

        if $z2 == 0 goto label05;

        r57 = "http.proxy_host";

        goto label06;

     label05:
        r57 = "http.target_host";

     label06:
        $r18 = interfaceinvoke r17.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>(r57);

        $r28 = (org.apache.http.HttpHost) $r18;

        if $r28 != null goto label07;

        $r27 = new org.apache.http.auth.AuthenticationException;

        specialinvoke $r27.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>("Authentication host is not set in the execution context");

        throw $r27;

     label07:
        $z3 = r1.<org.apache.http.impl.auth.GGSSchemeBase: boolean stripPort>;

        if $z3 != 0 goto label08;

        $i2 = virtualinvoke $r28.<org.apache.http.HttpHost: int getPort()>();

        if $i2 <= 0 goto label08;

        r58 = virtualinvoke $r28.<org.apache.http.HttpHost: java.lang.String toHostString()>();

        goto label09;

     label08:
        r58 = virtualinvoke $r28.<org.apache.http.HttpHost: java.lang.String getHostName()>();

     label09:
        $r59 = r1.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.commons.logging.Log log>;

        $z4 = interfaceinvoke $r59.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label10;

        $r23 = r1.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.commons.logging.Log log>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("init ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r58);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r26);

     label10:
        $r19 = r1.<org.apache.http.impl.auth.GGSSchemeBase: byte[] token>;

        $r20 = virtualinvoke r1.<org.apache.http.impl.auth.GGSSchemeBase: byte[] generateToken(byte[],java.lang.String)>($r19, r58);

        r1.<org.apache.http.impl.auth.GGSSchemeBase: byte[] token> = $r20;

        $r21 = <org.apache.http.impl.auth.GGSSchemeBase$State: org.apache.http.impl.auth.GGSSchemeBase$State TOKEN_GENERATED>;

        r1.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.http.impl.auth.GGSSchemeBase$State state> = $r21;

     label11:
        goto label18;

     label12:
        $r48 := @caughtexception;

        $r49 = <org.apache.http.impl.auth.GGSSchemeBase$State: org.apache.http.impl.auth.GGSSchemeBase$State FAILED>;

        r1.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.http.impl.auth.GGSSchemeBase$State state> = $r49;

        $i3 = virtualinvoke $r48.<org.ietf.jgss.GSSException: int getMajor()>();

        if $i3 == 9 goto label13;

        $i4 = virtualinvoke $r48.<org.ietf.jgss.GSSException: int getMajor()>();

        if $i4 != 8 goto label14;

     label13:
        $r50 = new org.apache.http.auth.InvalidCredentialsException;

        $r51 = virtualinvoke $r48.<org.ietf.jgss.GSSException: java.lang.String getMessage()>();

        specialinvoke $r50.<org.apache.http.auth.InvalidCredentialsException: void <init>(java.lang.String,java.lang.Throwable)>($r51, $r48);

        throw $r50;

     label14:
        $i5 = virtualinvoke $r48.<org.ietf.jgss.GSSException: int getMajor()>();

        if $i5 != 13 goto label15;

        $r54 = new org.apache.http.auth.InvalidCredentialsException;

        $r55 = virtualinvoke $r48.<org.ietf.jgss.GSSException: java.lang.String getMessage()>();

        specialinvoke $r54.<org.apache.http.auth.InvalidCredentialsException: void <init>(java.lang.String,java.lang.Throwable)>($r55, $r48);

        throw $r54;

     label15:
        $i6 = virtualinvoke $r48.<org.ietf.jgss.GSSException: int getMajor()>();

        if $i6 == 10 goto label16;

        $i7 = virtualinvoke $r48.<org.ietf.jgss.GSSException: int getMajor()>();

        if $i7 == 19 goto label16;

        $i8 = virtualinvoke $r48.<org.ietf.jgss.GSSException: int getMajor()>();

        if $i8 != 20 goto label17;

     label16:
        $r60 = new org.apache.http.auth.AuthenticationException;

        $r61 = virtualinvoke $r48.<org.ietf.jgss.GSSException: java.lang.String getMessage()>();

        specialinvoke $r60.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String,java.lang.Throwable)>($r61, $r48);

        throw $r60;

     label17:
        $r52 = new org.apache.http.auth.AuthenticationException;

        $r53 = virtualinvoke $r48.<org.ietf.jgss.GSSException: java.lang.String getMessage()>();

        specialinvoke $r52.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>($r53);

        throw $r52;

     label18:
        $r4 = new java.lang.String;

        $r6 = r1.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.commons.codec.binary.Base64 base64codec>;

        $r5 = r1.<org.apache.http.impl.auth.GGSSchemeBase: byte[] token>;

        $r7 = virtualinvoke $r6.<org.apache.commons.codec.binary.Base64: byte[] encode(byte[])>($r5);

        specialinvoke $r4.<java.lang.String: void <init>(byte[])>($r7);

        $r8 = r1.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label19;

        $r12 = r1.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.commons.logging.Log log>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending response \'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' back to the auth server");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r16);

     label19:
        $r9 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r9.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(32);

        $z1 = virtualinvoke r1.<org.apache.http.impl.auth.GGSSchemeBase: boolean isProxy()>();

        if $z1 == 0 goto label20;

        virtualinvoke $r9.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Proxy-Authorization");

        goto label21;

     label20:
        virtualinvoke $r9.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Authorization");

     label21:
        virtualinvoke $r9.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(": Negotiate ");

        virtualinvoke $r9.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r4);

        $r10 = new org.apache.http.message.BufferedHeader;

        specialinvoke $r10.<org.apache.http.message.BufferedHeader: void <init>(org.apache.http.util.CharArrayBuffer)>($r9);

        return $r10;

     label22:
        $r41 = new java.lang.IllegalStateException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal state: ");

        $r44 = r1.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.http.impl.auth.GGSSchemeBase$State state>;

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r46);

        throw $r41;

        catch org.ietf.jgss.GSSException from label04 to label11 with label12;
    }

    protected void parseChallenge(org.apache.http.util.CharArrayBuffer, int, int) throws org.apache.http.auth.MalformedChallengeException
    {
        byte[] $r9, $r10;
        org.apache.http.impl.auth.GGSSchemeBase$State $r4, $r5, $r7, $r11;
        org.apache.commons.codec.binary.Base64 $r8;
        org.apache.http.impl.auth.GGSSchemeBase r2;
        int i0, i1;
        java.lang.String $r1, $r17;
        boolean $z0;
        org.apache.http.util.CharArrayBuffer r0;
        org.apache.commons.logging.Log $r3, $r6, $r13;
        java.lang.StringBuilder $r12, $r14, $r15, $r16;

        r2 := @this: org.apache.http.impl.auth.GGSSchemeBase;

        r0 := @parameter0: org.apache.http.util.CharArrayBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>(i0, i1);

        $r3 = r2.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r13 = r2.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.commons.logging.Log log>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received challenge \'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' from the auth server");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r17);

     label1:
        $r5 = r2.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.http.impl.auth.GGSSchemeBase$State state>;

        $r4 = <org.apache.http.impl.auth.GGSSchemeBase$State: org.apache.http.impl.auth.GGSSchemeBase$State UNINITIATED>;

        if $r5 != $r4 goto label2;

        $r8 = r2.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.commons.codec.binary.Base64 base64codec>;

        $r9 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r10 = virtualinvoke $r8.<org.apache.commons.codec.binary.Base64: byte[] decode(byte[])>($r9);

        r2.<org.apache.http.impl.auth.GGSSchemeBase: byte[] token> = $r10;

        $r11 = <org.apache.http.impl.auth.GGSSchemeBase$State: org.apache.http.impl.auth.GGSSchemeBase$State CHALLENGE_RECEIVED>;

        r2.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.http.impl.auth.GGSSchemeBase$State state> = $r11;

        goto label3;

     label2:
        $r6 = r2.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.commons.logging.Log log>;

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Authentication already attempted");

        $r7 = <org.apache.http.impl.auth.GGSSchemeBase$State: org.apache.http.impl.auth.GGSSchemeBase$State FAILED>;

        r2.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.http.impl.auth.GGSSchemeBase$State state> = $r7;

     label3:
        return;
    }
}
