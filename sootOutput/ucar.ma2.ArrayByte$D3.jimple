public class ucar.ma2.ArrayByte$D3 extends ucar.ma2.ArrayByte
{
    private ucar.ma2.Index3D ix;

    public void <init>(int, int, int)
    {
        ucar.ma2.Index3D $r3;
        int[] $r1;
        ucar.ma2.Index $r2;
        int i0, i1, i2;
        ucar.ma2.ArrayByte$D3 r0;

        r0 := @this: ucar.ma2.ArrayByte$D3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = newarray (int)[3];

        $r1[0] = i0;

        $r1[1] = i1;

        $r1[2] = i2;

        specialinvoke r0.<ucar.ma2.ArrayByte: void <init>(int[])>($r1);

        $r2 = r0.<ucar.ma2.ArrayByte$D3: ucar.ma2.Index indexCalc>;

        $r3 = (ucar.ma2.Index3D) $r2;

        r0.<ucar.ma2.ArrayByte$D3: ucar.ma2.Index3D ix> = $r3;

        return;
    }

    private void <init>(ucar.ma2.Index, byte[])
    {
        byte[] r2;
        ucar.ma2.Index3D $r4;
        ucar.ma2.Index r1, $r3;
        ucar.ma2.ArrayByte$D3 r0;

        r0 := @this: ucar.ma2.ArrayByte$D3;

        r1 := @parameter0: ucar.ma2.Index;

        r2 := @parameter1: byte[];

        specialinvoke r0.<ucar.ma2.ArrayByte: void <init>(ucar.ma2.Index,byte[])>(r1, r2);

        $r3 = r0.<ucar.ma2.ArrayByte$D3: ucar.ma2.Index indexCalc>;

        $r4 = (ucar.ma2.Index3D) $r3;

        r0.<ucar.ma2.ArrayByte$D3: ucar.ma2.Index3D ix> = $r4;

        return;
    }

    public byte get(int, int, int)
    {
        byte[] $r2;
        ucar.ma2.Index3D $r1;
        byte $b4;
        int i0, i1, i2, $i3;
        ucar.ma2.ArrayByte$D3 r0;

        r0 := @this: ucar.ma2.ArrayByte$D3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<ucar.ma2.ArrayByte$D3: byte[] storage>;

        $r1 = r0.<ucar.ma2.ArrayByte$D3: ucar.ma2.Index3D ix>;

        $i3 = virtualinvoke $r1.<ucar.ma2.Index3D: int setDirect(int,int,int)>(i0, i1, i2);

        $b4 = $r2[$i3];

        return $b4;
    }

    public void set(int, int, int, byte)
    {
        byte[] $r2;
        ucar.ma2.Index3D $r1;
        byte b4;
        int i0, i1, i2, $i3;
        ucar.ma2.ArrayByte$D3 r0;

        r0 := @this: ucar.ma2.ArrayByte$D3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        b4 := @parameter3: byte;

        $r2 = r0.<ucar.ma2.ArrayByte$D3: byte[] storage>;

        $r1 = r0.<ucar.ma2.ArrayByte$D3: ucar.ma2.Index3D ix>;

        $i3 = virtualinvoke $r1.<ucar.ma2.Index3D: int setDirect(int,int,int)>(i0, i1, i2);

        $r2[$i3] = b4;

        return;
    }

    void <init>(ucar.ma2.Index, byte[], ucar.ma2.ArrayByte$1)
    {
        byte[] r2;
        ucar.ma2.Index r1;
        ucar.ma2.ArrayByte$1 r3;
        ucar.ma2.ArrayByte$D3 r0;

        r0 := @this: ucar.ma2.ArrayByte$D3;

        r1 := @parameter0: ucar.ma2.Index;

        r2 := @parameter1: byte[];

        r3 := @parameter2: ucar.ma2.ArrayByte$1;

        specialinvoke r0.<ucar.ma2.ArrayByte$D3: void <init>(ucar.ma2.Index,byte[])>(r1, r2);

        return;
    }
}
