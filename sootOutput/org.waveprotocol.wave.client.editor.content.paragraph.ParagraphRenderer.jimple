public class org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer extends org.waveprotocol.wave.client.editor.RenderingMutationHandler
{
    private final org.waveprotocol.wave.model.util.IdentitySet elementsToRender;
    private final org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer renumberer;
    private final org.waveprotocol.wave.client.scheduler.FinalTaskRunner runner;
    private final org.waveprotocol.wave.client.scheduler.Scheduler$Task batchRenderCommand;
    private final org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer htmlRenderer;
    static final boolean $assertionsDisabled;

    public static org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer create(java.lang.String)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer $r1;
        java.lang.String r2;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer $r0;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        $r1 = new org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer;

        specialinvoke $r1.<org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void <init>(org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer)>($r1);

        return $r0;
    }

    public void <init>(org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;
        org.waveprotocol.wave.client.scheduler.FinalTaskRunner $r6;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer r1;
        org.waveprotocol.wave.client.scheduler.FinalTaskRunnerImpl $r5;
        org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer;

        $r4 = new org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer;

        specialinvoke $r4.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer: void <init>(org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer)>(r1);

        $r5 = new org.waveprotocol.wave.client.scheduler.FinalTaskRunnerImpl;

        specialinvoke $r5.<org.waveprotocol.wave.client.scheduler.FinalTaskRunnerImpl: void <init>()>();

        $r6 = (org.waveprotocol.wave.client.scheduler.FinalTaskRunner) $r5;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void <init>(org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer,org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer,org.waveprotocol.wave.client.scheduler.FinalTaskRunner)>(r1, $r4, $r6);

        return;
    }

    void <init>(org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer, org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer, org.waveprotocol.wave.client.scheduler.FinalTaskRunner)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer$1 $r2;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;
        org.waveprotocol.wave.model.util.IdentitySet $r1;
        org.waveprotocol.wave.client.scheduler.FinalTaskRunner r5;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer r3;
        org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r3 := @parameter0: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer;

        r4 := @parameter1: org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer;

        r5 := @parameter2: org.waveprotocol.wave.client.scheduler.FinalTaskRunner;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.RenderingMutationHandler: void <init>()>();

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.IdentitySet createIdentitySet()>();

        r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: org.waveprotocol.wave.model.util.IdentitySet elementsToRender> = $r1;

        $r2 = new org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer$1;

        specialinvoke $r2.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer$1: void <init>(org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer)>(r0);

        r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: org.waveprotocol.wave.client.scheduler.Scheduler$Task batchRenderCommand> = $r2;

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "Null html renderer");

        r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer htmlRenderer> = r3;

        r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer renumberer> = r4;

        r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: org.waveprotocol.wave.client.scheduler.FinalTaskRunner runner> = r5;

        return;
    }

    public final com.google.gwt.dom.client.Element createDomImpl(org.waveprotocol.wave.client.editor.content.Renderer$Renderable)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;
        org.waveprotocol.wave.client.editor.content.Renderer$Renderable r1;
        com.google.gwt.dom.client.Element $r3;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.Renderer$Renderable;

        $r2 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer htmlRenderer>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer: com.google.gwt.dom.client.Element createDomImpl(org.waveprotocol.wave.client.editor.content.Renderer$Renderable)>(r1);

        return $r3;
    }

    public void onAttributeModified(org.waveprotocol.wave.client.editor.content.ContentElement, java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r5;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        java.lang.String r2, $r3, r4, $r6, $r7, $r8, $r9, $r10, r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer $r12;
        com.google.gwt.dom.client.Element $r1;

        r5 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r2 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: com.google.gwt.dom.client.Element getImplNodelet()>();

        if $r1 != null goto label1;

        $r12 = r5.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer renumberer>;

        $z5 = $r12.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer: boolean updateHtmlEvenWhenNullImplNodelet>;

        if $z5 != 0 goto label1;

        return;

     label1:
        $r3 = "t";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

        $r7 = "listyle";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label3;

     label2:
        staticinvoke <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphBehaviour: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphBehaviour of(java.lang.String)>(r4);

        specialinvoke r5.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void scheduleRenderUpdate(org.waveprotocol.wave.client.editor.content.ContentElement)>(r0);

        $r6 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: java.lang.String getAttribute(java.lang.String)>("i");

        specialinvoke r5.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void scheduleRenumber(org.waveprotocol.wave.client.editor.content.ContentElement,java.lang.String,boolean)>(r0, $r6, 0);

        goto label6;

     label3:
        $r8 = "i";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label4;

        specialinvoke r5.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void scheduleRenderUpdate(org.waveprotocol.wave.client.editor.content.ContentElement)>(r0);

        specialinvoke r5.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void scheduleRenumber(org.waveprotocol.wave.client.editor.content.ContentElement,java.lang.String,boolean)>(r0, r11, 0);

        goto label6;

     label4:
        $r9 = "a";

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label5;

        specialinvoke r5.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void scheduleRenderUpdate(org.waveprotocol.wave.client.editor.content.ContentElement)>(r0);

        goto label6;

     label5:
        $r10 = "d";

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label6;

        specialinvoke r5.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void scheduleRenderUpdate(org.waveprotocol.wave.client.editor.content.ContentElement)>(r0);

     label6:
        return;
    }

    public void onChildAdded(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r5;
        com.google.gwt.dom.client.Element $r4;
        org.waveprotocol.wave.client.editor.content.ContentElement r3;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper $r1;
        com.google.gwt.dom.client.Node $r2;

        r5 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r3 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r0 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentNode;

        $r1 = <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper INSTANCE>;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentNode: com.google.gwt.dom.client.Node getImplNodelet()>();

        $r4 = virtualinvoke r3.<org.waveprotocol.wave.client.editor.content.ContentElement: com.google.gwt.dom.client.Element getImplNodelet()>();

        virtualinvoke $r1.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper: void onChildAdded(com.google.gwt.dom.client.Node,com.google.gwt.dom.client.Element)>($r2, $r4);

        return;
    }

    public void onChildRemoved(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r5;
        com.google.gwt.dom.client.Element $r4;
        org.waveprotocol.wave.client.editor.content.ContentElement r3;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper $r1;
        com.google.gwt.dom.client.Node $r2;

        r5 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r3 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r0 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentNode;

        $r1 = <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper INSTANCE>;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentNode: com.google.gwt.dom.client.Node getImplNodelet()>();

        $r4 = virtualinvoke r3.<org.waveprotocol.wave.client.editor.content.ContentElement: com.google.gwt.dom.client.Element getImplNodelet()>();

        virtualinvoke $r1.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper: void onRemovingChild(com.google.gwt.dom.client.Node,com.google.gwt.dom.client.Element)>($r2, $r4);

        return;
    }

    public void onAddedToParent(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;
        org.waveprotocol.wave.client.editor.content.ContentElement r1, r3;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r3 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r2 = virtualinvoke r1.<org.waveprotocol.wave.client.editor.content.ContentElement: java.lang.String getAttribute(java.lang.String)>("i");

        specialinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void scheduleRenumber(org.waveprotocol.wave.client.editor.content.ContentElement,java.lang.String,boolean)>(r1, $r2, 0);

        return;
    }

    public void onRemovedFromParent(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.ContentElement r1, r2;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r2 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentElement;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void scheduleRenumber(org.waveprotocol.wave.client.editor.content.ContentElement,java.lang.String,boolean)>(r1, null, 1);

        return;
    }

    public void onEmptied(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.ContentElement r1;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void maybeHandleEmptied(org.waveprotocol.wave.client.editor.content.ContentElement)>(r1);

        return;
    }

    private void scheduleRenderUpdate(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;
        org.waveprotocol.wave.model.util.IdentitySet $r2;
        org.waveprotocol.wave.client.editor.content.ContentElement r1;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $z0 = <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: org.waveprotocol.wave.model.util.IdentitySet elementsToRender>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.util.IdentitySet: void add(java.lang.Object)>(r1);

        specialinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void scheduleBatchRender()>();

        return;
    }

    private void scheduleRenumber(org.waveprotocol.wave.client.editor.content.ContentElement, java.lang.String, boolean)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;
        org.waveprotocol.wave.client.editor.content.ContentElement r1;
        java.lang.String r2;
        boolean z0, $z1;
        org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer $r3, $r4, $r5;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $r5 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer renumberer>;

        virtualinvoke $r5.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer: void markRemoved(org.waveprotocol.wave.client.editor.content.ContentElement)>(r1);

        goto label2;

     label1:
        $r3 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer renumberer>;

        virtualinvoke $r3.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer: void markDirty(org.waveprotocol.wave.client.editor.content.ContentElement,java.lang.String)>(r1, r2);

     label2:
        $r4 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer renumberer>;

        $z1 = virtualinvoke $r4.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer: boolean renumberNeeded()>();

        if $z1 == 0 goto label3;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void scheduleBatchRender()>();

     label3:
        return;
    }

    private void scheduleBatchRender()
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;
        org.waveprotocol.wave.client.scheduler.Scheduler$Task $r1;
        org.waveprotocol.wave.client.scheduler.FinalTaskRunner $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        $r2 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: org.waveprotocol.wave.client.scheduler.FinalTaskRunner runner>;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: org.waveprotocol.wave.client.scheduler.Scheduler$Task batchRenderCommand>;

        interfaceinvoke $r2.<org.waveprotocol.wave.client.scheduler.FinalTaskRunner: void scheduleFinally(org.waveprotocol.wave.client.scheduler.Scheduler$Task)>($r1);

        return;
    }

    private void maybeHandleEmptied(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r4;
        com.google.gwt.dom.client.Element $r1, $r3;
        int $i0;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper $r2;

        r4 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: com.google.gwt.dom.client.Element getImplNodelet()>();

        $i0 = virtualinvoke $r1.<com.google.gwt.dom.client.Element: int getChildCount()>();

        if $i0 != 0 goto label1;

        $r2 = <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper INSTANCE>;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: com.google.gwt.dom.client.Element getImplNodelet()>();

        virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper: void onEmpty(com.google.gwt.dom.client.Element)>($r3);

     label1:
        return;
    }

    public void onActivatedSubtree(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;
        com.google.gwt.dom.client.Element $r2;
        org.waveprotocol.wave.client.editor.content.ContentElement r1;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void fanoutAttrs(org.waveprotocol.wave.client.editor.content.ContentElement)>(r1);

        $r2 = virtualinvoke r1.<org.waveprotocol.wave.client.editor.content.ContentElement: com.google.gwt.dom.client.Element getImplNodelet()>();

        if $r2 == null goto label1;

        $r3 = <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper INSTANCE>;

        virtualinvoke $r3.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper: void onRepair(org.waveprotocol.wave.client.editor.content.ContentElement)>(r1);

     label1:
        return;
    }

    public volatile void onRemovedFromParent(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;
        java.lang.Object r1, r2;
        org.waveprotocol.wave.client.editor.content.ContentElement $r3, $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        $r3 = (org.waveprotocol.wave.client.editor.content.ContentElement) r2;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void onRemovedFromParent(org.waveprotocol.wave.client.editor.content.ContentElement,org.waveprotocol.wave.client.editor.content.ContentElement)>($r4, $r3);

        return;
    }

    public volatile void onChildRemoved(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode $r3;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;
        java.lang.Object r1, r2;
        org.waveprotocol.wave.client.editor.content.ContentElement $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        $r3 = (org.waveprotocol.wave.client.editor.content.ContentNode) r2;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void onChildRemoved(org.waveprotocol.wave.client.editor.content.ContentElement,org.waveprotocol.wave.client.editor.content.ContentNode)>($r4, $r3);

        return;
    }

    public volatile void onAttributeModified(java.lang.Object, java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r5;
        java.lang.String r2, r3, r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void onAttributeModified(org.waveprotocol.wave.client.editor.content.ContentElement,java.lang.String,java.lang.String,java.lang.String)>($r5, r2, r3, r4);

        return;
    }

    public volatile void onEmptied(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r2;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void onEmptied(org.waveprotocol.wave.client.editor.content.ContentElement)>($r2);

        return;
    }

    public volatile void onChildAdded(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode $r3;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;
        java.lang.Object r1, r2;
        org.waveprotocol.wave.client.editor.content.ContentElement $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        $r3 = (org.waveprotocol.wave.client.editor.content.ContentNode) r2;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void onChildAdded(org.waveprotocol.wave.client.editor.content.ContentElement,org.waveprotocol.wave.client.editor.content.ContentNode)>($r4, $r3);

        return;
    }

    public volatile void onAddedToParent(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;
        java.lang.Object r1, r2;
        org.waveprotocol.wave.client.editor.content.ContentElement $r3, $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        $r3 = (org.waveprotocol.wave.client.editor.content.ContentElement) r2;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void onAddedToParent(org.waveprotocol.wave.client.editor.content.ContentElement,org.waveprotocol.wave.client.editor.content.ContentElement)>($r4, $r3);

        return;
    }

    public volatile void onActivatedSubtree(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r2;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: void onActivatedSubtree(org.waveprotocol.wave.client.editor.content.ContentElement)>($r2);

        return;
    }

    static org.waveprotocol.wave.model.util.IdentitySet access$000(org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;
        org.waveprotocol.wave.model.util.IdentitySet $r1;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: org.waveprotocol.wave.model.util.IdentitySet elementsToRender>;

        return $r1;
    }

    static org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer access$100(org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;
        org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer $r1;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer renumberer>;

        return $r1;
    }

    static org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer access$200(org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer $r1;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer r0;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer htmlRenderer>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/client/editor/content/paragraph/ParagraphRenderer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphRenderer: boolean $assertionsDisabled> = $z1;

        return;
    }
}
