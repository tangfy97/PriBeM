public abstract class com.jidesoft.grouper.date.DateGrouper extends com.jidesoft.grouper.AbstractObjectGrouper
{
    protected static java.util.Calendar INSTANCE;

    public void <init>()
    {
        com.jidesoft.grouper.date.DateGrouper r0;

        r0 := @this: com.jidesoft.grouper.date.DateGrouper;

        specialinvoke r0.<com.jidesoft.grouper.AbstractObjectGrouper: void <init>()>();

        return;
    }

    public static java.lang.Object getCalendarField(java.lang.Object, int)
    {
        java.util.Date $r4, $r9;
        long $l2;
        java.lang.Integer $r3, $r8, $r12;
        java.util.Calendar $r2, $r6, $r7, $r10, $r11;
        java.lang.Long $r5;
        int i0, $i1, $i3, $i4;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = r0 instanceof java.util.Date;

        if $z0 == 0 goto label1;

        $r10 = <com.jidesoft.grouper.date.DateGrouper: java.util.Calendar INSTANCE>;

        $r9 = (java.util.Date) r0;

        virtualinvoke $r10.<java.util.Calendar: void setTime(java.util.Date)>($r9);

        $r11 = <com.jidesoft.grouper.date.DateGrouper: java.util.Calendar INSTANCE>;

        $i4 = virtualinvoke $r11.<java.util.Calendar: int get(int)>(i0);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        return $r12;

     label1:
        $z1 = r0 instanceof java.lang.Long;

        if $z1 == 0 goto label2;

        $r6 = <com.jidesoft.grouper.date.DateGrouper: java.util.Calendar INSTANCE>;

        $r4 = new java.util.Date;

        $r5 = (java.lang.Long) r0;

        $l2 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        specialinvoke $r4.<java.util.Date: void <init>(long)>($l2);

        virtualinvoke $r6.<java.util.Calendar: void setTime(java.util.Date)>($r4);

        $r7 = <com.jidesoft.grouper.date.DateGrouper: java.util.Calendar INSTANCE>;

        $i3 = virtualinvoke $r7.<java.util.Calendar: int get(int)>(i0);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        return $r8;

     label2:
        $z2 = r0 instanceof java.util.Calendar;

        if $z2 == 0 goto label3;

        $r2 = (java.util.Calendar) r0;

        $i1 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r3;

     label3:
        if r0 != null goto label4;

        return null;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Type incompatible");

        throw $r1;
    }

    public static int getCalendarFieldAsInt(java.lang.Object, int)
    {
        java.util.Date $r7, $r10;
        long $l2;
        java.util.Calendar $r2, $r5, $r6, $r8, $r9;
        java.lang.Long $r4;
        int i0, $i1, $i3, $i4, $i6;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r11;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = r0 instanceof java.util.Date;

        if $z0 == 0 goto label1;

        $r8 = <com.jidesoft.grouper.date.DateGrouper: java.util.Calendar INSTANCE>;

        $r7 = (java.util.Date) r0;

        virtualinvoke $r8.<java.util.Calendar: void setTime(java.util.Date)>($r7);

        $r9 = <com.jidesoft.grouper.date.DateGrouper: java.util.Calendar INSTANCE>;

        $i4 = virtualinvoke $r9.<java.util.Calendar: int get(int)>(i0);

        return $i4;

     label1:
        $z1 = r0 instanceof java.lang.Long;

        if $z1 == 0 goto label2;

        $r5 = <com.jidesoft.grouper.date.DateGrouper: java.util.Calendar INSTANCE>;

        $r10 = new java.util.Date;

        $r4 = (java.lang.Long) r0;

        $l2 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        specialinvoke $r10.<java.util.Date: void <init>(long)>($l2);

        virtualinvoke $r5.<java.util.Calendar: void setTime(java.util.Date)>($r10);

        $r6 = <com.jidesoft.grouper.date.DateGrouper: java.util.Calendar INSTANCE>;

        $i3 = virtualinvoke $r6.<java.util.Calendar: int get(int)>(i0);

        return $i3;

     label2:
        $z2 = r0 instanceof java.util.Calendar;

        if $z2 == 0 goto label3;

        $r2 = (java.util.Calendar) r0;

        $i1 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(i0);

        return $i1;

     label3:
        if r0 != null goto label4;

        $i6 = (int) -1;

        return $i6;

     label4:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Type incompatible");

        throw $r11;
    }

    public java.lang.Class getType()
    {
        com.jidesoft.grouper.date.DateGrouper r1;
        java.lang.Class $r0;

        r1 := @this: com.jidesoft.grouper.date.DateGrouper;

        $r0 = <java.lang.Integer: java.lang.Class TYPE>;

        return $r0;
    }

    static void <clinit>()
    {
        java.util.Calendar $r0;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        <com.jidesoft.grouper.date.DateGrouper: java.util.Calendar INSTANCE> = $r0;

        return;
    }
}
