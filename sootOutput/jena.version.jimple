public class jena.version extends java.lang.Object implements com.hp.hpl.jena.Jena
{

    public void <init>()
    {
        jena.version r0;

        r0 := @this: jena.version;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        java.io.PrintStream $r3;
        java.lang.String[] r12;
        java.lang.reflect.Field $r4, $r8;
        java.lang.reflect.Field[] $r1;
        int $i0, i1;
        java.lang.Class $r0;
        java.lang.StringBuilder $r2, $r6, $r7, $r10;
        java.lang.Object $r9;
        java.lang.String $r5, $r11;

        r12 := @parameter0: java.lang.String[];

        $r0 = class "Lcom/hp/hpl/jena/Jena;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = $r1[i1];

        $r5 = virtualinvoke $r4.<java.lang.reflect.Field: java.lang.String getName()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = $r1[i1];

        $r9 = virtualinvoke $r8.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r11);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        staticinvoke <jena.cmdline.CmdLineUtils: void setLog4jConfiguration()>();

        return;
    }
}
