public class org.xmpp.muc.RoomConfiguration extends org.xmpp.packet.IQ
{

    public void <init>(java.util.Map)
    {
        java.util.Map r6;
        org.xmpp.packet.IQ$Type $r1;
        java.lang.String r10, r16;
        boolean $z0, $z1;
        java.util.Iterator $r8, $r14;
        java.util.Collection $r13;
        java.util.Set $r7;
        org.xmpp.muc.RoomConfiguration r0;
        org.dom4j.Element $r2, $r3, $r4, $r5, $r11, $r17;
        java.lang.Object $r9, $r12, $r15;

        r0 := @this: org.xmpp.muc.RoomConfiguration;

        r6 := @parameter0: java.util.Map;

        specialinvoke r0.<org.xmpp.packet.IQ: void <init>()>();

        $r1 = <org.xmpp.packet.IQ$Type: org.xmpp.packet.IQ$Type set>;

        virtualinvoke r0.<org.xmpp.muc.RoomConfiguration: void setType(org.xmpp.packet.IQ$Type)>($r1);

        $r2 = virtualinvoke r0.<org.xmpp.muc.RoomConfiguration: org.dom4j.Element setChildElement(java.lang.String,java.lang.String)>("query", "http://jabber.org/protocol/muc#owner");

        $r3 = interfaceinvoke $r2.<org.dom4j.Element: org.dom4j.Element addElement(java.lang.String,java.lang.String)>("x", "jabber:x:data");

        interfaceinvoke $r3.<org.dom4j.Element: org.dom4j.Element addAttribute(java.lang.String,java.lang.String)>("type", "submit");

        $r4 = interfaceinvoke $r3.<org.dom4j.Element: org.dom4j.Element addElement(java.lang.String)>("field");

        interfaceinvoke $r4.<org.dom4j.Element: org.dom4j.Element addAttribute(java.lang.String,java.lang.String)>("var", "FORM_TYPE");

        $r5 = interfaceinvoke $r4.<org.dom4j.Element: org.dom4j.Element addElement(java.lang.String)>("value");

        interfaceinvoke $r5.<org.dom4j.Element: void setText(java.lang.String)>("http://jabber.org/protocol/muc#roomconfig");

        $r7 = interfaceinvoke r6.<java.util.Map: java.util.Set keySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        $r11 = interfaceinvoke $r3.<org.dom4j.Element: org.dom4j.Element addElement(java.lang.String)>("field");

        interfaceinvoke $r11.<org.dom4j.Element: org.dom4j.Element addAttribute(java.lang.String,java.lang.String)>("var", r10);

        $r12 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10);

        $r13 = (java.util.Collection) $r12;

        $r14 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.lang.String) $r15;

        $r17 = interfaceinvoke $r11.<org.dom4j.Element: org.dom4j.Element addElement(java.lang.String)>("value");

        interfaceinvoke $r17.<org.dom4j.Element: void setText(java.lang.String)>(r16);

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }
}
