public class org.apache.tika.parser.txt.Icu4jEncodingDetector extends java.lang.Object implements org.apache.tika.detect.EncodingDetector
{

    public void <init>()
    {
        org.apache.tika.parser.txt.Icu4jEncodingDetector r0;

        r0 := @this: org.apache.tika.parser.txt.Icu4jEncodingDetector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.nio.charset.Charset detect(java.io.InputStream, org.apache.tika.metadata.Metadata) throws java.io.IOException
    {
        org.apache.tika.parser.txt.Icu4jEncodingDetector r13;
        org.apache.tika.parser.txt.CharsetDetector $r1;
        org.apache.tika.mime.MediaType $r9;
        org.apache.tika.metadata.Metadata r2;
        java.nio.charset.Charset $r7;
        org.apache.tika.parser.txt.CharsetMatch[] $r15;
        java.util.Map $r10;
        int $i0, i1;
        java.lang.String $r3, $r4, $r6, $r8, r14;
        java.lang.Exception $r12;
        org.apache.tika.parser.txt.CharsetMatch r5;
        java.lang.Object $r11;
        java.io.InputStream r0;

        r13 := @this: org.apache.tika.parser.txt.Icu4jEncodingDetector;

        r0 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.apache.tika.metadata.Metadata;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.apache.tika.parser.txt.CharsetDetector;

        specialinvoke $r1.<org.apache.tika.parser.txt.CharsetDetector: void <init>()>();

        $r3 = virtualinvoke r2.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("Content-Encoding");

        r14 = $r3;

        $r4 = virtualinvoke r2.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("Content-Type");

        if $r3 != null goto label2;

        if $r4 == null goto label2;

        $r9 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>($r4);

        if $r9 == null goto label2;

        $r10 = virtualinvoke $r9.<org.apache.tika.mime.MediaType: java.util.Map getParameters()>();

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>("charset");

        r14 = (java.lang.String) $r11;

     label2:
        if r14 == null goto label3;

        $r8 = staticinvoke <org.apache.tika.utils.CharsetUtils: java.lang.String clean(java.lang.String)>(r14);

        if $r8 == null goto label3;

        virtualinvoke $r1.<org.apache.tika.parser.txt.CharsetDetector: org.apache.tika.parser.txt.CharsetDetector setDeclaredEncoding(java.lang.String)>($r8);

     label3:
        virtualinvoke $r1.<org.apache.tika.parser.txt.CharsetDetector: boolean enableInputFilter(boolean)>(1);

        virtualinvoke $r1.<org.apache.tika.parser.txt.CharsetDetector: org.apache.tika.parser.txt.CharsetDetector setText(java.io.InputStream)>(r0);

        $r15 = virtualinvoke $r1.<org.apache.tika.parser.txt.CharsetDetector: org.apache.tika.parser.txt.CharsetMatch[] detectAll()>();

        $i0 = lengthof $r15;

        i1 = 0;

     label4:
        if i1 >= $i0 goto label8;

        r5 = $r15[i1];

     label5:
        $r6 = virtualinvoke r5.<org.apache.tika.parser.txt.CharsetMatch: java.lang.String getName()>();

        $r7 = staticinvoke <org.apache.tika.utils.CharsetUtils: java.nio.charset.Charset forName(java.lang.String)>($r6);

     label6:
        return $r7;

     label7:
        $r12 := @caughtexception;

        i1 = i1 + 1;

        goto label4;

     label8:
        return null;

        catch java.lang.Exception from label5 to label6 with label7;
    }
}
