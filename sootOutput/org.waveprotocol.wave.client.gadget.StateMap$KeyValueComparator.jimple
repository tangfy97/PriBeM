public class org.waveprotocol.wave.client.gadget.StateMap$KeyValueComparator extends java.lang.Object implements org.waveprotocol.wave.client.gadget.StateMap$CheckKeyValue
{
    private final org.waveprotocol.wave.client.gadget.StateMap otherMap;

    public void <init>(org.waveprotocol.wave.client.gadget.StateMap)
    {
        org.waveprotocol.wave.client.gadget.StateMap$KeyValueComparator r0;
        org.waveprotocol.wave.client.gadget.StateMap r1;

        r0 := @this: org.waveprotocol.wave.client.gadget.StateMap$KeyValueComparator;

        r1 := @parameter0: org.waveprotocol.wave.client.gadget.StateMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.client.gadget.StateMap$KeyValueComparator: org.waveprotocol.wave.client.gadget.StateMap otherMap> = r1;

        return;
    }

    public boolean check(java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.client.gadget.StateMap $r3, $r5, $r6;
        org.waveprotocol.wave.client.gadget.StateMap$KeyValueComparator r1;
        java.lang.String r0, r2, $r4, $r7;
        boolean $z0, $z1;

        r1 := @this: org.waveprotocol.wave.client.gadget.StateMap$KeyValueComparator;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label2;

        $r5 = r1.<org.waveprotocol.wave.client.gadget.StateMap$KeyValueComparator: org.waveprotocol.wave.client.gadget.StateMap otherMap>;

        $z0 = virtualinvoke $r5.<org.waveprotocol.wave.client.gadget.StateMap: boolean has(java.lang.String)>(r2);

        if $z0 == 0 goto label1;

        $r6 = r1.<org.waveprotocol.wave.client.gadget.StateMap$KeyValueComparator: org.waveprotocol.wave.client.gadget.StateMap otherMap>;

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.client.gadget.StateMap: java.lang.String get(java.lang.String)>(r2);

        if $r7 != null goto label1;

        $z1 = 1;

        goto label3;

     label1:
        $z1 = 0;

        goto label3;

     label2:
        $r3 = r1.<org.waveprotocol.wave.client.gadget.StateMap$KeyValueComparator: org.waveprotocol.wave.client.gadget.StateMap otherMap>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.client.gadget.StateMap: java.lang.String get(java.lang.String)>(r2);

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r4);

     label3:
        return $z1;
    }
}
