public class org.jdesktop.swingx.util.PaintUtils extends java.lang.Object
{
    public static final java.awt.GradientPaint BLUE_EXPERIENCE;
    public static final java.awt.GradientPaint MAC_OSX_SELECTED;
    public static final java.awt.GradientPaint MAC_OSX;
    public static final java.awt.GradientPaint AERITH;
    public static final java.awt.GradientPaint GRAY;
    public static final java.awt.GradientPaint RED_XP;
    public static final java.awt.GradientPaint NIGHT_GRAY;
    public static final java.awt.GradientPaint NIGHT_GRAY_LIGHT;

    private void <init>()
    {
        org.jdesktop.swingx.util.PaintUtils r0;

        r0 := @this: org.jdesktop.swingx.util.PaintUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.awt.Rectangle getTextBounds(java.awt.Graphics, javax.swing.JLabel)
    {
        java.awt.Rectangle $r5, $r6, $r7, $r8, $r9, $r10;
        java.awt.geom.Rectangle2D $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i13, $i14, $i15;
        java.lang.String $r3;
        java.awt.FontMetrics $r1;
        javax.swing.JLabel r2;
        java.awt.Graphics r0;

        r0 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: javax.swing.JLabel;

        $r1 = virtualinvoke r0.<java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>();

        $r3 = virtualinvoke r2.<javax.swing.JLabel: java.lang.String getText()>();

        $r4 = virtualinvoke $r1.<java.awt.FontMetrics: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.Graphics)>($r3, r0);

        $r5 = virtualinvoke $r4.<java.awt.geom.Rectangle2D: java.awt.Rectangle getBounds()>();

        $i0 = virtualinvoke r2.<javax.swing.JLabel: int getHorizontalAlignment()>();

        tableswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label1;
            case 5: goto label3;
            case 6: goto label3;
            case 7: goto label3;
            case 8: goto label3;
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label1;
            default: goto label3;
        };

     label1:
        $r6 = virtualinvoke r2.<javax.swing.JLabel: java.awt.Rectangle getBounds()>();

        $i2 = $r6.<java.awt.Rectangle: int width>;

        $i1 = $r5.<java.awt.Rectangle: int width>;

        i11 = $i2 - $i1;

        goto label4;

     label2:
        $r9 = virtualinvoke r2.<javax.swing.JLabel: java.awt.Rectangle getBounds()>();

        $i9 = $r9.<java.awt.Rectangle: int width>;

        $i8 = $r5.<java.awt.Rectangle: int width>;

        $i10 = $i9 - $i8;

        i11 = $i10 / 2;

        goto label4;

     label3:
        i11 = 0;

     label4:
        i12 = 0;

        $i13 = virtualinvoke r2.<javax.swing.JLabel: int getVerticalAlignment()>();

        tableswitch($i13)
        {
            case 0: goto label6;
            case 1: goto label5;
            case 2: goto label8;
            case 3: goto label7;
            default: goto label8;
        };

     label5:
        i12 = 0;

        goto label8;

     label6:
        $r8 = virtualinvoke r2.<javax.swing.JLabel: java.awt.Rectangle getBounds()>();

        $i6 = $r8.<java.awt.Rectangle: int height>;

        $i5 = $r5.<java.awt.Rectangle: int height>;

        $i7 = $i6 - $i5;

        i12 = $i7 / 2;

        goto label8;

     label7:
        $r7 = virtualinvoke r2.<javax.swing.JLabel: java.awt.Rectangle getBounds()>();

        $i4 = $r7.<java.awt.Rectangle: int height>;

        $i3 = $r5.<java.awt.Rectangle: int height>;

        i12 = $i4 - $i3;

     label8:
        $r10 = new java.awt.Rectangle;

        $i14 = $r5.<java.awt.Rectangle: int width>;

        $i15 = $r5.<java.awt.Rectangle: int height>;

        specialinvoke $r10.<java.awt.Rectangle: void <init>(int,int,int,int)>(i11, i12, $i14, $i15);

        return $r10;
    }

    public static void paintGradient(java.awt.Graphics, javax.swing.JComponent, java.awt.Color, java.awt.Color)
    {
        java.awt.Color r1, r3;
        javax.swing.JComponent r2;
        java.awt.Graphics2D r5;
        java.awt.Paint $r6;
        int $i0, $i1, $i2;
        java.awt.Graphics r4;
        java.awt.GradientPaint $r0;
        float $f0;

        r4 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: javax.swing.JComponent;

        r1 := @parameter2: java.awt.Color;

        r3 := @parameter3: java.awt.Color;

        $r0 = new java.awt.GradientPaint;

        $i0 = virtualinvoke r2.<javax.swing.JComponent: int getHeight()>();

        $f0 = (float) $i0;

        specialinvoke $r0.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color,boolean)>(0.0F, 0.0F, r1, 0.0F, $f0, r3, 1);

        r5 = (java.awt.Graphics2D) r4;

        $r6 = virtualinvoke r5.<java.awt.Graphics2D: java.awt.Paint getPaint()>();

        virtualinvoke r5.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r0);

        $i1 = virtualinvoke r2.<javax.swing.JComponent: int getWidth()>();

        $i2 = virtualinvoke r2.<javax.swing.JComponent: int getHeight()>();

        virtualinvoke r5.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, $i1, $i2);

        virtualinvoke r5.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r6);

        return;
    }

    public static java.awt.Paint resizeGradient(java.awt.Paint, int, int)
    {
        java.awt.Color $r14, $r16;
        java.awt.geom.Point2D $r9, $r10, $r13, $r15;
        int i0, i1;
        java.lang.String $r1, $r3, $r5, $r7;
        boolean $z0, $z1, $z2, $z3;
        java.awt.Paint r0, $r4;
        java.awt.GradientPaint r8, $r12;
        java.lang.Class $r2, $r6;
        java.awt.geom.Point2D[] $r11, r17;

        r0 := @parameter0: java.awt.Paint;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 != null goto label1;

        return r0;

     label1:
        $z0 = r0 instanceof java.awt.GradientPaint;

        if $z0 == 0 goto label2;

        r8 = (java.awt.GradientPaint) r0;

        r17 = newarray (java.awt.geom.Point2D)[2];

        $r9 = virtualinvoke r8.<java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>();

        r17[0] = $r9;

        $r10 = virtualinvoke r8.<java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>();

        r17[1] = $r10;

        $r11 = staticinvoke <org.jdesktop.swingx.util.PaintUtils: java.awt.geom.Point2D[] adjustPoints(java.awt.geom.Point2D[],int,int)>(r17, i0, i1);

        $r12 = new java.awt.GradientPaint;

        $r13 = $r11[0];

        $r14 = virtualinvoke r8.<java.awt.GradientPaint: java.awt.Color getColor1()>();

        $r15 = $r11[1];

        $r16 = virtualinvoke r8.<java.awt.GradientPaint: java.awt.Color getColor2()>();

        $z3 = virtualinvoke r8.<java.awt.GradientPaint: boolean isCyclic()>();

        specialinvoke $r12.<java.awt.GradientPaint: void <init>(java.awt.geom.Point2D,java.awt.Color,java.awt.geom.Point2D,java.awt.Color,boolean)>($r13, $r14, $r15, $r16, $z3);

        return $r12;

     label2:
        $r1 = "java.awt.LinearGradientPaint";

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label3;

        $r5 = "org.apache.batik.ext.awt.LinearGradientPaint";

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label4;

     label3:
        $r4 = staticinvoke <org.jdesktop.swingx.util.PaintUtils: java.awt.Paint resizeLinearGradient(java.awt.Paint,int,int)>(r0, i0, i1);

        return $r4;

     label4:
        return r0;
    }

    private static java.awt.Paint resizeLinearGradient(java.awt.Paint, int, int)
    {
        java.lang.Object[] $r19;
        java.awt.geom.Point2D $r2, $r4, $r20, $r21;
        float[] $r7, r8, $r14;
        java.lang.reflect.Constructor $r18;
        int i0, i1;
        java.lang.Class[] $r13;
        java.lang.Exception $r24;
        java.awt.Paint r0, $r23;
        java.lang.Object $r1, $r3, $r6, $r9, $r22;
        java.lang.Class $r12, $r15, $r17;
        java.awt.geom.Point2D[] $r5, r25;
        java.awt.Color[] $r10, r11, $r16;

        r0 := @parameter0: java.awt.Paint;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        r25 = newarray (java.awt.geom.Point2D)[2];

        $r1 = staticinvoke <org.jdesktop.swingx.util.PaintUtils: java.lang.Object invokeMethod(java.lang.Object,java.lang.String)>(r0, "getStartPoint");

        $r2 = (java.awt.geom.Point2D) $r1;

        r25[0] = $r2;

        $r3 = staticinvoke <org.jdesktop.swingx.util.PaintUtils: java.lang.Object invokeMethod(java.lang.Object,java.lang.String)>(r0, "getEndPoint");

        $r4 = (java.awt.geom.Point2D) $r3;

        r25[1] = $r4;

        $r5 = staticinvoke <org.jdesktop.swingx.util.PaintUtils: java.awt.geom.Point2D[] adjustPoints(java.awt.geom.Point2D[],int,int)>(r25, i0, i1);

        $r6 = staticinvoke <org.jdesktop.swingx.util.PaintUtils: java.lang.Object invokeMethod(java.lang.Object,java.lang.String)>(r0, "getFractions");

        $r7 = (float[]) $r6;

        r8 = (float[]) $r7;

        $r9 = staticinvoke <org.jdesktop.swingx.util.PaintUtils: java.lang.Object invokeMethod(java.lang.Object,java.lang.String)>(r0, "getColors");

        $r10 = (java.awt.Color[]) $r9;

        r11 = (java.awt.Color[]) $r10;

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = newarray (java.lang.Class)[4];

        $r13[0] = class "Ljava/awt/geom/Point2D;";

        $r13[1] = class "Ljava/awt/geom/Point2D;";

        $r14 = newarray (float)[0];

        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.Class getClass()>();

        $r13[2] = $r15;

        $r16 = newarray (java.awt.Color)[0];

        $r17 = virtualinvoke $r16.<java.lang.Object: java.lang.Class getClass()>();

        $r13[3] = $r17;

        $r18 = virtualinvoke $r12.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r13);

        $r19 = newarray (java.lang.Object)[4];

        $r20 = $r5[0];

        $r19[0] = $r20;

        $r21 = $r5[1];

        $r19[1] = $r21;

        $r19[2] = r8;

        $r19[3] = r11;

        $r22 = virtualinvoke $r18.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r19);

        $r23 = (java.awt.Paint) $r22;

     label2:
        return $r23;

     label3:
        $r24 := @caughtexception;

        virtualinvoke $r24.<java.lang.Exception: void printStackTrace()>();

        return r0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static java.lang.Object invokeMethod(java.lang.Object, java.lang.String) throws java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException, java.lang.IllegalArgumentException, java.lang.SecurityException, java.lang.IllegalAccessException
    {
        java.lang.Object[] $r5;
        java.lang.Class[] $r3;
        java.lang.Object r0, $r6;
        java.lang.Class $r1;
        java.lang.String r2;
        java.lang.reflect.Method $r4;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r2, $r3);

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r5);

        return $r6;
    }

    private static java.awt.geom.Point2D[] adjustPoints(java.awt.geom.Point2D[], int, int)
    {
        java.awt.geom.Point2D r18, r19;
        byte $b0, $b3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        int i1, i2, $i4, $i5;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.awt.geom.Point2D$Float $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35;
        java.awt.geom.Point2D[] r0, $r3;

        r0 := @parameter0: java.awt.geom.Point2D[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r18 = r0[0];

        r19 = r0[1];

        $d0 = staticinvoke <org.jdesktop.swingx.util.PaintUtils: double calcAngle(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r18, r19);

        $d1 = staticinvoke <java.lang.Math: double toDegrees(double)>($d0);

        $d2 = staticinvoke <java.lang.Math: double abs(double)>($d0);

        $d3 = staticinvoke <java.lang.Math: double toRadians(double)>(1.0);

        $b0 = $d2 cmpg $d3;

        $i4 = (int) $b0;

        if $i4 < 0 goto label1;

        $d4 = staticinvoke <java.lang.Math: double abs(double)>($d0);

        $d5 = staticinvoke <java.lang.Math: double toRadians(double)>(359.0);

        $b3 = $d4 cmpl $d5;

        $i5 = (int) $b3;

        if $i5 <= 0 goto label2;

     label1:
        $r20 = new java.awt.geom.Point2D$Float;

        specialinvoke $r20.<java.awt.geom.Point2D$Float: void <init>(float,float)>(0.0F, 0.0F);

        r18 = $r20;

        $r21 = new java.awt.geom.Point2D$Float;

        $f0 = (float) i1;

        specialinvoke $r21.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f0, 0.0F);

        r19 = $r21;

     label2:
        $z6 = staticinvoke <org.jdesktop.swingx.util.PaintUtils: boolean isNear(double,double,double)>($d1, 45.0, 1.0);

        if $z6 == 0 goto label3;

        $r22 = new java.awt.geom.Point2D$Float;

        specialinvoke $r22.<java.awt.geom.Point2D$Float: void <init>(float,float)>(0.0F, 0.0F);

        r18 = $r22;

        $r23 = new java.awt.geom.Point2D$Float;

        $f11 = (float) i1;

        $f10 = (float) i2;

        specialinvoke $r23.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f11, $f10);

        r19 = $r23;

     label3:
        $z0 = staticinvoke <org.jdesktop.swingx.util.PaintUtils: boolean isNear(double,double,double)>($d1, 90.0, 1.0);

        if $z0 == 0 goto label4;

        $r24 = new java.awt.geom.Point2D$Float;

        specialinvoke $r24.<java.awt.geom.Point2D$Float: void <init>(float,float)>(0.0F, 0.0F);

        r18 = $r24;

        $r25 = new java.awt.geom.Point2D$Float;

        $f9 = (float) i2;

        specialinvoke $r25.<java.awt.geom.Point2D$Float: void <init>(float,float)>(0.0F, $f9);

        r19 = $r25;

     label4:
        $z1 = staticinvoke <org.jdesktop.swingx.util.PaintUtils: boolean isNear(double,double,double)>($d1, 135.0, 1.0);

        if $z1 == 0 goto label5;

        $r26 = new java.awt.geom.Point2D$Float;

        $f7 = (float) i1;

        specialinvoke $r26.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f7, 0.0F);

        r18 = $r26;

        $r27 = new java.awt.geom.Point2D$Float;

        $f8 = (float) i2;

        specialinvoke $r27.<java.awt.geom.Point2D$Float: void <init>(float,float)>(0.0F, $f8);

        r19 = $r27;

     label5:
        $z2 = staticinvoke <org.jdesktop.swingx.util.PaintUtils: boolean isNear(double,double,double)>($d1, 180.0, 1.0);

        if $z2 == 0 goto label6;

        $r28 = new java.awt.geom.Point2D$Float;

        $f6 = (float) i1;

        specialinvoke $r28.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f6, 0.0F);

        r18 = $r28;

        $r29 = new java.awt.geom.Point2D$Float;

        specialinvoke $r29.<java.awt.geom.Point2D$Float: void <init>(float,float)>(0.0F, 0.0F);

        r19 = $r29;

     label6:
        $z3 = staticinvoke <org.jdesktop.swingx.util.PaintUtils: boolean isNear(double,double,double)>($d1, 225.0, 1.0);

        if $z3 == 0 goto label7;

        $r30 = new java.awt.geom.Point2D$Float;

        $f5 = (float) i1;

        $f4 = (float) i2;

        specialinvoke $r30.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f5, $f4);

        r18 = $r30;

        $r31 = new java.awt.geom.Point2D$Float;

        specialinvoke $r31.<java.awt.geom.Point2D$Float: void <init>(float,float)>(0.0F, 0.0F);

        r19 = $r31;

     label7:
        $z4 = staticinvoke <org.jdesktop.swingx.util.PaintUtils: boolean isNear(double,double,double)>($d1, 270.0, 1.0);

        if $z4 == 0 goto label8;

        $r32 = new java.awt.geom.Point2D$Float;

        $f3 = (float) i2;

        specialinvoke $r32.<java.awt.geom.Point2D$Float: void <init>(float,float)>(0.0F, $f3);

        r18 = $r32;

        $r33 = new java.awt.geom.Point2D$Float;

        specialinvoke $r33.<java.awt.geom.Point2D$Float: void <init>(float,float)>(0.0F, 0.0F);

        r19 = $r33;

     label8:
        $z5 = staticinvoke <org.jdesktop.swingx.util.PaintUtils: boolean isNear(double,double,double)>($d1, 315.0, 1.0);

        if $z5 == 0 goto label9;

        $r34 = new java.awt.geom.Point2D$Float;

        $f1 = (float) i2;

        specialinvoke $r34.<java.awt.geom.Point2D$Float: void <init>(float,float)>(0.0F, $f1);

        r18 = $r34;

        $r35 = new java.awt.geom.Point2D$Float;

        $f2 = (float) i1;

        specialinvoke $r35.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f2, 0.0F);

        r19 = $r35;

     label9:
        $r3 = newarray (java.awt.geom.Point2D)[2];

        $r3[0] = r18;

        $r3[1] = r19;

        return $r3;
    }

    private static boolean isNear(double, double, double)
    {
        byte $b0;
        int $i1;
        double d0, d1, $d2, $d3, $d4, d5;
        boolean $z0;

        d1 := @parameter0: double;

        d0 := @parameter1: double;

        d5 := @parameter2: double;

        $d2 = staticinvoke <java.lang.Math: double abs(double)>(d1);

        $d3 = d0 - $d2;

        $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3);

        $b0 = $d4 cmpg d5;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static double calcAngle(java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r0, r1;
        byte $b0, $b1, $b2;
        int $i3, $i4, $i5;
        double $d0, $d1, d2, $d3, $d4, d5, $d6, $d7, d8;

        r1 := @parameter0: java.awt.geom.Point2D;

        r0 := @parameter1: java.awt.geom.Point2D;

        $d0 = virtualinvoke r0.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        d2 = $d0 - $d1;

        $d3 = virtualinvoke r0.<java.awt.geom.Point2D: double getY()>();

        $d4 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        d5 = $d3 - $d4;

        $d6 = d5 / d2;

        $d7 = staticinvoke <java.lang.Math: double atan(double)>($d6);

        d8 = $d7;

        $b0 = d2 cmpg 0.0;

        $i3 = (int) $b0;

        if $i3 >= 0 goto label1;

        d8 = $d7 + 3.141592653589793;

     label1:
        $b1 = d8 cmpg 0.0;

        $i4 = (int) $b1;

        if $i4 >= 0 goto label2;

        d8 = d8 + 6.283185307179586;

     label2:
        $b2 = d8 cmpl 6.283185307179586;

        $i5 = (int) $b2;

        if $i5 <= 0 goto label3;

        d8 = d8 - 6.283185307179586;

     label3:
        return d8;
    }

    static void <clinit>()
    {
        java.awt.Color $r2, $r4, $r7, $r9, $r12, $r14, $r18, $r19, $r22, $r24, $r27, $r29, $r32, $r34, $r37, $r39;
        java.awt.geom.Point2D$Double $r1, $r3, $r6, $r8, $r11, $r13, $r16, $r17, $r21, $r23, $r26, $r28, $r31, $r33, $r36, $r38;
        java.awt.GradientPaint $r0, $r5, $r10, $r15, $r20, $r25, $r30, $r35;

        $r0 = new java.awt.GradientPaint;

        $r1 = new java.awt.geom.Point2D$Double;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        $r2 = new java.awt.Color;

        specialinvoke $r2.<java.awt.Color: void <init>(int,int,int)>(168, 204, 241);

        $r3 = new java.awt.geom.Point2D$Double;

        specialinvoke $r3.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 1.0);

        $r4 = new java.awt.Color;

        specialinvoke $r4.<java.awt.Color: void <init>(int,int,int)>(44, 61, 146);

        specialinvoke $r0.<java.awt.GradientPaint: void <init>(java.awt.geom.Point2D,java.awt.Color,java.awt.geom.Point2D,java.awt.Color)>($r1, $r2, $r3, $r4);

        <org.jdesktop.swingx.util.PaintUtils: java.awt.GradientPaint BLUE_EXPERIENCE> = $r0;

        $r5 = new java.awt.GradientPaint;

        $r6 = new java.awt.geom.Point2D$Double;

        specialinvoke $r6.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        $r7 = new java.awt.Color;

        specialinvoke $r7.<java.awt.Color: void <init>(int,int,int)>(81, 141, 236);

        $r8 = new java.awt.geom.Point2D$Double;

        specialinvoke $r8.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 1.0);

        $r9 = new java.awt.Color;

        specialinvoke $r9.<java.awt.Color: void <init>(int,int,int)>(36, 96, 192);

        specialinvoke $r5.<java.awt.GradientPaint: void <init>(java.awt.geom.Point2D,java.awt.Color,java.awt.geom.Point2D,java.awt.Color)>($r6, $r7, $r8, $r9);

        <org.jdesktop.swingx.util.PaintUtils: java.awt.GradientPaint MAC_OSX_SELECTED> = $r5;

        $r10 = new java.awt.GradientPaint;

        $r11 = new java.awt.geom.Point2D$Double;

        specialinvoke $r11.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        $r12 = new java.awt.Color;

        specialinvoke $r12.<java.awt.Color: void <init>(int,int,int)>(167, 210, 250);

        $r13 = new java.awt.geom.Point2D$Double;

        specialinvoke $r13.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 1.0);

        $r14 = new java.awt.Color;

        specialinvoke $r14.<java.awt.Color: void <init>(int,int,int)>(99, 147, 206);

        specialinvoke $r10.<java.awt.GradientPaint: void <init>(java.awt.geom.Point2D,java.awt.Color,java.awt.geom.Point2D,java.awt.Color)>($r11, $r12, $r13, $r14);

        <org.jdesktop.swingx.util.PaintUtils: java.awt.GradientPaint MAC_OSX> = $r10;

        $r15 = new java.awt.GradientPaint;

        $r16 = new java.awt.geom.Point2D$Double;

        specialinvoke $r16.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        $r18 = <java.awt.Color: java.awt.Color WHITE>;

        $r17 = new java.awt.geom.Point2D$Double;

        specialinvoke $r17.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 1.0);

        $r19 = new java.awt.Color;

        specialinvoke $r19.<java.awt.Color: void <init>(int,int,int)>(64, 110, 161);

        specialinvoke $r15.<java.awt.GradientPaint: void <init>(java.awt.geom.Point2D,java.awt.Color,java.awt.geom.Point2D,java.awt.Color)>($r16, $r18, $r17, $r19);

        <org.jdesktop.swingx.util.PaintUtils: java.awt.GradientPaint AERITH> = $r15;

        $r20 = new java.awt.GradientPaint;

        $r21 = new java.awt.geom.Point2D$Double;

        specialinvoke $r21.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        $r22 = new java.awt.Color;

        specialinvoke $r22.<java.awt.Color: void <init>(int,int,int)>(226, 226, 226);

        $r23 = new java.awt.geom.Point2D$Double;

        specialinvoke $r23.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 1.0);

        $r24 = new java.awt.Color;

        specialinvoke $r24.<java.awt.Color: void <init>(int,int,int)>(250, 248, 248);

        specialinvoke $r20.<java.awt.GradientPaint: void <init>(java.awt.geom.Point2D,java.awt.Color,java.awt.geom.Point2D,java.awt.Color)>($r21, $r22, $r23, $r24);

        <org.jdesktop.swingx.util.PaintUtils: java.awt.GradientPaint GRAY> = $r20;

        $r25 = new java.awt.GradientPaint;

        $r26 = new java.awt.geom.Point2D$Double;

        specialinvoke $r26.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        $r27 = new java.awt.Color;

        specialinvoke $r27.<java.awt.Color: void <init>(int,int,int)>(236, 81, 81);

        $r28 = new java.awt.geom.Point2D$Double;

        specialinvoke $r28.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 1.0);

        $r29 = new java.awt.Color;

        specialinvoke $r29.<java.awt.Color: void <init>(int,int,int)>(192, 36, 36);

        specialinvoke $r25.<java.awt.GradientPaint: void <init>(java.awt.geom.Point2D,java.awt.Color,java.awt.geom.Point2D,java.awt.Color)>($r26, $r27, $r28, $r29);

        <org.jdesktop.swingx.util.PaintUtils: java.awt.GradientPaint RED_XP> = $r25;

        $r30 = new java.awt.GradientPaint;

        $r31 = new java.awt.geom.Point2D$Double;

        specialinvoke $r31.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        $r32 = new java.awt.Color;

        specialinvoke $r32.<java.awt.Color: void <init>(int,int,int)>(102, 111, 127);

        $r33 = new java.awt.geom.Point2D$Double;

        specialinvoke $r33.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 1.0);

        $r34 = new java.awt.Color;

        specialinvoke $r34.<java.awt.Color: void <init>(int,int,int)>(38, 45, 61);

        specialinvoke $r30.<java.awt.GradientPaint: void <init>(java.awt.geom.Point2D,java.awt.Color,java.awt.geom.Point2D,java.awt.Color)>($r31, $r32, $r33, $r34);

        <org.jdesktop.swingx.util.PaintUtils: java.awt.GradientPaint NIGHT_GRAY> = $r30;

        $r35 = new java.awt.GradientPaint;

        $r36 = new java.awt.geom.Point2D$Double;

        specialinvoke $r36.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        $r37 = new java.awt.Color;

        specialinvoke $r37.<java.awt.Color: void <init>(int,int,int)>(129, 138, 155);

        $r38 = new java.awt.geom.Point2D$Double;

        specialinvoke $r38.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 1.0);

        $r39 = new java.awt.Color;

        specialinvoke $r39.<java.awt.Color: void <init>(int,int,int)>(58, 66, 82);

        specialinvoke $r35.<java.awt.GradientPaint: void <init>(java.awt.geom.Point2D,java.awt.Color,java.awt.geom.Point2D,java.awt.Color)>($r36, $r37, $r38, $r39);

        <org.jdesktop.swingx.util.PaintUtils: java.awt.GradientPaint NIGHT_GRAY_LIGHT> = $r35;

        return;
    }
}
