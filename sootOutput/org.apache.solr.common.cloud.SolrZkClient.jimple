public class org.apache.solr.common.cloud.SolrZkClient extends java.lang.Object
{
    public static final java.util.concurrent.atomic.AtomicLong numOpens;
    public static final java.util.concurrent.atomic.AtomicLong numCloses;
    static final java.lang.String NEWL;
    static final int DEFAULT_CLIENT_CONNECT_TIMEOUT;
    private static final org.slf4j.Logger log;
    private org.apache.solr.common.cloud.ConnectionManager connManager;
    private volatile org.apache.solr.common.cloud.SolrZooKeeper keeper;
    private org.apache.solr.common.cloud.ZkCmdExecutor zkCmdExecutor;
    private volatile boolean isClosed;
    private org.apache.solr.common.cloud.ZkClientConnectionStrategy zkClientConnectionStrategy;
    private int zkClientTimeout;

    public int getZkClientTimeout()
    {
        int $i0;
        org.apache.solr.common.cloud.SolrZkClient r0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        $i0 = r0.<org.apache.solr.common.cloud.SolrZkClient: int zkClientTimeout>;

        return $i0;
    }

    public void <init>(java.lang.String, int)
    {
        org.apache.solr.common.cloud.DefaultConnectionStrategy $r2;
        int i0;
        java.lang.String r1;
        org.apache.solr.common.cloud.SolrZkClient r0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new org.apache.solr.common.cloud.DefaultConnectionStrategy;

        specialinvoke $r2.<org.apache.solr.common.cloud.DefaultConnectionStrategy: void <init>()>();

        specialinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void <init>(java.lang.String,int,org.apache.solr.common.cloud.ZkClientConnectionStrategy,org.apache.solr.common.cloud.OnReconnect)>(r1, i0, $r2, null);

        return;
    }

    public void <init>(java.lang.String, int, int, org.apache.solr.common.cloud.OnReconnect)
    {
        org.apache.solr.common.cloud.OnReconnect r3;
        org.apache.solr.common.cloud.DefaultConnectionStrategy $r2;
        int i0, i1;
        java.lang.String r1;
        org.apache.solr.common.cloud.SolrZkClient r0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r3 := @parameter3: org.apache.solr.common.cloud.OnReconnect;

        $r2 = new org.apache.solr.common.cloud.DefaultConnectionStrategy;

        specialinvoke $r2.<org.apache.solr.common.cloud.DefaultConnectionStrategy: void <init>()>();

        specialinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void <init>(java.lang.String,int,org.apache.solr.common.cloud.ZkClientConnectionStrategy,org.apache.solr.common.cloud.OnReconnect,int)>(r1, i0, $r2, r3, i1);

        return;
    }

    public void <init>(java.lang.String, int, org.apache.solr.common.cloud.ZkClientConnectionStrategy, org.apache.solr.common.cloud.OnReconnect)
    {
        org.apache.solr.common.cloud.OnReconnect r3;
        org.apache.solr.common.cloud.ZkClientConnectionStrategy r2;
        int i0;
        java.lang.String r1;
        org.apache.solr.common.cloud.SolrZkClient r0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.solr.common.cloud.ZkClientConnectionStrategy;

        r3 := @parameter3: org.apache.solr.common.cloud.OnReconnect;

        specialinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void <init>(java.lang.String,int,org.apache.solr.common.cloud.ZkClientConnectionStrategy,org.apache.solr.common.cloud.OnReconnect,int)>(r1, i0, r2, r3, 30000);

        return;
    }

    public void <init>(java.lang.String, int, org.apache.solr.common.cloud.ZkClientConnectionStrategy, org.apache.solr.common.cloud.OnReconnect, int)
    {
        java.lang.Throwable $r14, $r17;
        org.apache.solr.common.cloud.ZkCmdExecutor $r2;
        org.apache.solr.common.cloud.ConnectionManager $r3, $r11, $r12, $r15, $r18;
        long $l2;
        int i0, i1;
        java.lang.String r6, $r8;
        org.apache.solr.common.cloud.SolrZkClient$1 $r10;
        java.lang.RuntimeException $r16, $r19;
        java.util.concurrent.atomic.AtomicLong $r13;
        org.apache.solr.common.cloud.OnReconnect r9;
        org.apache.solr.common.cloud.ZkClientConnectionStrategy r1;
        java.lang.StringBuilder $r4, $r5, $r7;
        org.apache.solr.common.cloud.SolrZkClient r0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: org.apache.solr.common.cloud.ZkClientConnectionStrategy;

        r9 := @parameter3: org.apache.solr.common.cloud.OnReconnect;

        i1 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.solr.common.cloud.SolrZkClient: boolean isClosed> = 0;

        r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ZkClientConnectionStrategy zkClientConnectionStrategy> = r1;

        r0.<org.apache.solr.common.cloud.SolrZkClient: int zkClientTimeout> = i0;

        $r2 = new org.apache.solr.common.cloud.ZkCmdExecutor;

        specialinvoke $r2.<org.apache.solr.common.cloud.ZkCmdExecutor: void <init>(int)>(i0);

        r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ZkCmdExecutor zkCmdExecutor> = $r2;

        $r3 = new org.apache.solr.common.cloud.ConnectionManager;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ZooKeeperConnection Watcher:");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.solr.common.cloud.ConnectionManager: void <init>(java.lang.String,org.apache.solr.common.cloud.SolrZkClient,java.lang.String,int,org.apache.solr.common.cloud.ZkClientConnectionStrategy,org.apache.solr.common.cloud.OnReconnect)>($r8, r0, r6, i0, r1, r9);

        r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ConnectionManager connManager> = $r3;

     label1:
        $r11 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ConnectionManager connManager>;

        $r10 = new org.apache.solr.common.cloud.SolrZkClient$1;

        specialinvoke $r10.<org.apache.solr.common.cloud.SolrZkClient$1: void <init>(org.apache.solr.common.cloud.SolrZkClient)>(r0);

        virtualinvoke r1.<org.apache.solr.common.cloud.ZkClientConnectionStrategy: void connect(java.lang.String,int,org.apache.zookeeper.Watcher,org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate)>(r6, i0, $r11, $r10);

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;

        $r18 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ConnectionManager connManager>;

        virtualinvoke $r18.<org.apache.solr.common.cloud.ConnectionManager: void close()>();

        $r19 = new java.lang.RuntimeException;

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r17);

        throw $r19;

     label4:
        $r12 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ConnectionManager connManager>;

        $l2 = (long) i1;

        virtualinvoke $r12.<org.apache.solr.common.cloud.ConnectionManager: void waitForConnected(long)>($l2);

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;

        $r15 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ConnectionManager connManager>;

        virtualinvoke $r15.<org.apache.solr.common.cloud.ConnectionManager: void close()>();

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r14);

        throw $r16;

     label7:
        $r13 = <org.apache.solr.common.cloud.SolrZkClient: java.util.concurrent.atomic.AtomicLong numOpens>;

        virtualinvoke $r13.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public org.apache.solr.common.cloud.ZkClientConnectionStrategy getZkClientConnectionStrategy()
    {
        org.apache.solr.common.cloud.SolrZkClient r0;
        org.apache.solr.common.cloud.ZkClientConnectionStrategy $r1;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        $r1 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ZkClientConnectionStrategy zkClientConnectionStrategy>;

        return $r1;
    }

    public boolean isConnected()
    {
        org.apache.zookeeper.ZooKeeper$States $r3, $r4;
        org.apache.solr.common.cloud.SolrZkClient r0;
        org.apache.solr.common.cloud.SolrZooKeeper $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        $r1 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper>;

        $r3 = virtualinvoke $r2.<org.apache.solr.common.cloud.SolrZooKeeper: org.apache.zookeeper.ZooKeeper$States getState()>();

        $r4 = <org.apache.zookeeper.ZooKeeper$States: org.apache.zookeeper.ZooKeeper$States CONNECTED>;

        if $r3 != $r4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void delete(java.lang.String, int, boolean) throws java.lang.InterruptedException, org.apache.zookeeper.KeeperException
    {
        org.apache.solr.common.cloud.SolrZkClient$2 $r3;
        org.apache.solr.common.cloud.ZkCmdExecutor $r4;
        int i0;
        java.lang.String r1;
        org.apache.solr.common.cloud.SolrZkClient r0;
        org.apache.solr.common.cloud.SolrZooKeeper $r2;
        boolean z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $r4 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ZkCmdExecutor zkCmdExecutor>;

        $r3 = new org.apache.solr.common.cloud.SolrZkClient$2;

        specialinvoke $r3.<org.apache.solr.common.cloud.SolrZkClient$2: void <init>(org.apache.solr.common.cloud.SolrZkClient,java.lang.String,int)>(r0, r1, i0);

        virtualinvoke $r4.<org.apache.solr.common.cloud.ZkCmdExecutor: java.lang.Object retryOperation(org.apache.solr.common.cloud.ZkOperation)>($r3);

        goto label2;

     label1:
        $r2 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper>;

        virtualinvoke $r2.<org.apache.solr.common.cloud.SolrZooKeeper: void delete(java.lang.String,int)>(r1, i0);

     label2:
        return;
    }

    public org.apache.zookeeper.data.Stat exists(java.lang.String, org.apache.zookeeper.Watcher, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        org.apache.solr.common.cloud.SolrZkClient$3 $r5;
        org.apache.solr.common.cloud.ZkCmdExecutor $r6;
        org.apache.zookeeper.Watcher r2;
        org.apache.zookeeper.data.Stat $r4, $r8;
        java.lang.Object $r7;
        java.lang.String r1;
        org.apache.solr.common.cloud.SolrZkClient r0;
        org.apache.solr.common.cloud.SolrZooKeeper $r3;
        boolean z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.zookeeper.Watcher;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $r6 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ZkCmdExecutor zkCmdExecutor>;

        $r5 = new org.apache.solr.common.cloud.SolrZkClient$3;

        specialinvoke $r5.<org.apache.solr.common.cloud.SolrZkClient$3: void <init>(org.apache.solr.common.cloud.SolrZkClient,java.lang.String,org.apache.zookeeper.Watcher)>(r0, r1, r2);

        $r7 = virtualinvoke $r6.<org.apache.solr.common.cloud.ZkCmdExecutor: java.lang.Object retryOperation(org.apache.solr.common.cloud.ZkOperation)>($r5);

        $r8 = (org.apache.zookeeper.data.Stat) $r7;

        return $r8;

     label1:
        $r3 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper>;

        $r4 = virtualinvoke $r3.<org.apache.solr.common.cloud.SolrZooKeeper: org.apache.zookeeper.data.Stat exists(java.lang.String,org.apache.zookeeper.Watcher)>(r1, r2);

        return $r4;
    }

    public java.lang.Boolean exists(java.lang.String, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        org.apache.solr.common.cloud.ZkCmdExecutor $r6;
        org.apache.solr.common.cloud.SolrZkClient$4 $r5;
        org.apache.zookeeper.data.Stat $r3;
        java.lang.Boolean $r4, $r8;
        java.lang.Object $r7;
        java.lang.String r1;
        org.apache.solr.common.cloud.SolrZkClient r0;
        org.apache.solr.common.cloud.SolrZooKeeper $r2;
        boolean z0, $z1;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r6 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ZkCmdExecutor zkCmdExecutor>;

        $r5 = new org.apache.solr.common.cloud.SolrZkClient$4;

        specialinvoke $r5.<org.apache.solr.common.cloud.SolrZkClient$4: void <init>(org.apache.solr.common.cloud.SolrZkClient,java.lang.String)>(r0, r1);

        $r7 = virtualinvoke $r6.<org.apache.solr.common.cloud.ZkCmdExecutor: java.lang.Object retryOperation(org.apache.solr.common.cloud.ZkOperation)>($r5);

        $r8 = (java.lang.Boolean) $r7;

        return $r8;

     label1:
        $r2 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper>;

        $r3 = virtualinvoke $r2.<org.apache.solr.common.cloud.SolrZooKeeper: org.apache.zookeeper.data.Stat exists(java.lang.String,org.apache.zookeeper.Watcher)>(r1, null);

        if $r3 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r4;
    }

    public java.lang.String create(java.lang.String, byte[], java.util.List, org.apache.zookeeper.CreateMode, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        org.apache.zookeeper.CreateMode r4;
        byte[] r2;
        org.apache.solr.common.cloud.ZkCmdExecutor $r8;
        org.apache.solr.common.cloud.SolrZkClient$5 $r7;
        java.util.List r3;
        java.lang.Object $r9;
        java.lang.String r1, $r6, $r10;
        org.apache.solr.common.cloud.SolrZkClient r0;
        org.apache.solr.common.cloud.SolrZooKeeper $r5;
        boolean z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: org.apache.zookeeper.CreateMode;

        z0 := @parameter4: boolean;

        if z0 == 0 goto label1;

        $r8 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ZkCmdExecutor zkCmdExecutor>;

        $r7 = new org.apache.solr.common.cloud.SolrZkClient$5;

        specialinvoke $r7.<org.apache.solr.common.cloud.SolrZkClient$5: void <init>(org.apache.solr.common.cloud.SolrZkClient,java.lang.String,byte[],java.util.List,org.apache.zookeeper.CreateMode)>(r0, r1, r2, r3, r4);

        $r9 = virtualinvoke $r8.<org.apache.solr.common.cloud.ZkCmdExecutor: java.lang.Object retryOperation(org.apache.solr.common.cloud.ZkOperation)>($r7);

        $r10 = (java.lang.String) $r9;

        return $r10;

     label1:
        $r5 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper>;

        $r6 = virtualinvoke $r5.<org.apache.solr.common.cloud.SolrZooKeeper: java.lang.String create(java.lang.String,byte[],java.util.List,org.apache.zookeeper.CreateMode)>(r1, r2, r3, r4);

        return $r6;
    }

    public java.util.List getChildren(java.lang.String, org.apache.zookeeper.Watcher, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        org.apache.solr.common.cloud.ZkCmdExecutor $r6;
        org.apache.solr.common.cloud.SolrZkClient$6 $r5;
        org.apache.zookeeper.Watcher r2;
        java.util.List $r4, $r8;
        java.lang.Object $r7;
        java.lang.String r1;
        org.apache.solr.common.cloud.SolrZkClient r0;
        org.apache.solr.common.cloud.SolrZooKeeper $r3;
        boolean z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.zookeeper.Watcher;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $r6 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ZkCmdExecutor zkCmdExecutor>;

        $r5 = new org.apache.solr.common.cloud.SolrZkClient$6;

        specialinvoke $r5.<org.apache.solr.common.cloud.SolrZkClient$6: void <init>(org.apache.solr.common.cloud.SolrZkClient,java.lang.String,org.apache.zookeeper.Watcher)>(r0, r1, r2);

        $r7 = virtualinvoke $r6.<org.apache.solr.common.cloud.ZkCmdExecutor: java.lang.Object retryOperation(org.apache.solr.common.cloud.ZkOperation)>($r5);

        $r8 = (java.util.List) $r7;

        return $r8;

     label1:
        $r3 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper>;

        $r4 = virtualinvoke $r3.<org.apache.solr.common.cloud.SolrZooKeeper: java.util.List getChildren(java.lang.String,org.apache.zookeeper.Watcher)>(r1, r2);

        return $r4;
    }

    public byte[] getData(java.lang.String, org.apache.zookeeper.Watcher, org.apache.zookeeper.data.Stat, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        byte[] $r5, $r9;
        org.apache.solr.common.cloud.ZkCmdExecutor $r7;
        org.apache.solr.common.cloud.SolrZkClient$7 $r6;
        org.apache.zookeeper.Watcher r2;
        org.apache.zookeeper.data.Stat r3;
        java.lang.Object $r8;
        java.lang.String r1;
        org.apache.solr.common.cloud.SolrZkClient r0;
        org.apache.solr.common.cloud.SolrZooKeeper $r4;
        boolean z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.zookeeper.Watcher;

        r3 := @parameter2: org.apache.zookeeper.data.Stat;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $r7 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ZkCmdExecutor zkCmdExecutor>;

        $r6 = new org.apache.solr.common.cloud.SolrZkClient$7;

        specialinvoke $r6.<org.apache.solr.common.cloud.SolrZkClient$7: void <init>(org.apache.solr.common.cloud.SolrZkClient,java.lang.String,org.apache.zookeeper.Watcher,org.apache.zookeeper.data.Stat)>(r0, r1, r2, r3);

        $r8 = virtualinvoke $r7.<org.apache.solr.common.cloud.ZkCmdExecutor: java.lang.Object retryOperation(org.apache.solr.common.cloud.ZkOperation)>($r6);

        $r9 = (byte[]) $r8;

        return $r9;

     label1:
        $r4 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper>;

        $r5 = virtualinvoke $r4.<org.apache.solr.common.cloud.SolrZooKeeper: byte[] getData(java.lang.String,org.apache.zookeeper.Watcher,org.apache.zookeeper.data.Stat)>(r1, r2, r3);

        return $r5;
    }

    public org.apache.zookeeper.data.Stat setData(java.lang.String, byte[], int, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        byte[] r2;
        org.apache.solr.common.cloud.ZkCmdExecutor $r6;
        org.apache.zookeeper.data.Stat $r4, $r8;
        org.apache.solr.common.cloud.SolrZkClient$8 $r5;
        int i0;
        java.lang.Object $r7;
        java.lang.String r1;
        org.apache.solr.common.cloud.SolrZkClient r0;
        org.apache.solr.common.cloud.SolrZooKeeper $r3;
        boolean z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $r6 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ZkCmdExecutor zkCmdExecutor>;

        $r5 = new org.apache.solr.common.cloud.SolrZkClient$8;

        specialinvoke $r5.<org.apache.solr.common.cloud.SolrZkClient$8: void <init>(org.apache.solr.common.cloud.SolrZkClient,java.lang.String,byte[],int)>(r0, r1, r2, i0);

        $r7 = virtualinvoke $r6.<org.apache.solr.common.cloud.ZkCmdExecutor: java.lang.Object retryOperation(org.apache.solr.common.cloud.ZkOperation)>($r5);

        $r8 = (org.apache.zookeeper.data.Stat) $r7;

        return $r8;

     label1:
        $r3 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper>;

        $r4 = virtualinvoke $r3.<org.apache.solr.common.cloud.SolrZooKeeper: org.apache.zookeeper.data.Stat setData(java.lang.String,byte[],int)>(r1, r2, i0);

        return $r4;
    }

    public java.lang.String create(java.lang.String, byte[], org.apache.zookeeper.CreateMode, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        org.apache.zookeeper.CreateMode r3;
        byte[] r2;
        org.apache.solr.common.cloud.ZkCmdExecutor $r8;
        org.apache.solr.common.cloud.SolrZkClient$9 $r7;
        java.util.ArrayList $r4;
        java.lang.Object $r9;
        java.lang.String r1, $r6, $r10;
        org.apache.solr.common.cloud.SolrZkClient r0;
        org.apache.solr.common.cloud.SolrZooKeeper $r5;
        boolean z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: org.apache.zookeeper.CreateMode;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $r8 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ZkCmdExecutor zkCmdExecutor>;

        $r7 = new org.apache.solr.common.cloud.SolrZkClient$9;

        specialinvoke $r7.<org.apache.solr.common.cloud.SolrZkClient$9: void <init>(org.apache.solr.common.cloud.SolrZkClient,java.lang.String,byte[],org.apache.zookeeper.CreateMode)>(r0, r1, r2, r3);

        $r9 = virtualinvoke $r8.<org.apache.solr.common.cloud.ZkCmdExecutor: java.lang.Object retryOperation(org.apache.solr.common.cloud.ZkOperation)>($r7);

        $r10 = (java.lang.String) $r9;

        return $r10;

     label1:
        $r5 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper>;

        $r4 = <org.apache.zookeeper.ZooDefs$Ids: java.util.ArrayList OPEN_ACL_UNSAFE>;

        $r6 = virtualinvoke $r5.<org.apache.solr.common.cloud.SolrZooKeeper: java.lang.String create(java.lang.String,byte[],java.util.List,org.apache.zookeeper.CreateMode)>(r1, r2, $r4, r3);

        return $r6;
    }

    public void makePath(java.lang.String, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        org.apache.zookeeper.CreateMode $r2;
        java.lang.String r1;
        org.apache.solr.common.cloud.SolrZkClient r0;
        boolean z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = <org.apache.zookeeper.CreateMode: org.apache.zookeeper.CreateMode PERSISTENT>;

        virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void makePath(java.lang.String,byte[],org.apache.zookeeper.CreateMode,boolean)>(r1, null, $r2, z0);

        return;
    }

    public void makePath(java.lang.String, boolean, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        org.apache.zookeeper.CreateMode $r2;
        java.lang.String r1;
        org.apache.solr.common.cloud.SolrZkClient r0;
        boolean z0, z1;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r2 = <org.apache.zookeeper.CreateMode: org.apache.zookeeper.CreateMode PERSISTENT>;

        virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void makePath(java.lang.String,byte[],org.apache.zookeeper.CreateMode,org.apache.zookeeper.Watcher,boolean,boolean)>(r1, null, $r2, null, z0, z1);

        return;
    }

    public void makePath(java.lang.String, java.io.File, boolean, boolean) throws java.io.IOException, org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        org.apache.zookeeper.CreateMode $r5;
        byte[] $r4;
        java.io.File r2;
        java.lang.String r1, $r3;
        org.apache.solr.common.cloud.SolrZkClient r0;
        boolean z0, z1;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.File;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r3 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r5 = <org.apache.zookeeper.CreateMode: org.apache.zookeeper.CreateMode PERSISTENT>;

        virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void makePath(java.lang.String,byte[],org.apache.zookeeper.CreateMode,org.apache.zookeeper.Watcher,boolean,boolean)>(r1, $r4, $r5, null, z0, z1);

        return;
    }

    public void makePath(java.lang.String, java.io.File, boolean) throws java.io.IOException, org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        byte[] $r4;
        java.lang.String r1, $r3;
        org.apache.solr.common.cloud.SolrZkClient r0;
        java.io.File r2;
        boolean z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.File;

        z0 := @parameter2: boolean;

        $r3 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void makePath(java.lang.String,byte[],boolean)>(r1, $r4, z0);

        return;
    }

    public void makePath(java.lang.String, org.apache.zookeeper.CreateMode, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        org.apache.zookeeper.CreateMode r2;
        java.lang.String r1;
        org.apache.solr.common.cloud.SolrZkClient r0;
        boolean z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.zookeeper.CreateMode;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void makePath(java.lang.String,byte[],org.apache.zookeeper.CreateMode,boolean)>(r1, null, r2, z0);

        return;
    }

    public void makePath(java.lang.String, byte[], boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        org.apache.zookeeper.CreateMode $r3;
        byte[] r2;
        java.lang.String r1;
        org.apache.solr.common.cloud.SolrZkClient r0;
        boolean z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        z0 := @parameter2: boolean;

        $r3 = <org.apache.zookeeper.CreateMode: org.apache.zookeeper.CreateMode PERSISTENT>;

        virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void makePath(java.lang.String,byte[],org.apache.zookeeper.CreateMode,boolean)>(r1, r2, $r3, z0);

        return;
    }

    public void makePath(java.lang.String, byte[], org.apache.zookeeper.CreateMode, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        org.apache.zookeeper.CreateMode r3;
        byte[] r2;
        java.lang.String r1;
        org.apache.solr.common.cloud.SolrZkClient r0;
        boolean z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: org.apache.zookeeper.CreateMode;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void makePath(java.lang.String,byte[],org.apache.zookeeper.CreateMode,org.apache.zookeeper.Watcher,boolean)>(r1, r2, r3, null, z0);

        return;
    }

    public void makePath(java.lang.String, byte[], org.apache.zookeeper.CreateMode, org.apache.zookeeper.Watcher, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        org.apache.zookeeper.CreateMode r3;
        byte[] r2;
        org.apache.zookeeper.Watcher r4;
        java.lang.String r1;
        org.apache.solr.common.cloud.SolrZkClient r0;
        boolean z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: org.apache.zookeeper.CreateMode;

        r4 := @parameter3: org.apache.zookeeper.Watcher;

        z0 := @parameter4: boolean;

        virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void makePath(java.lang.String,byte[],org.apache.zookeeper.CreateMode,org.apache.zookeeper.Watcher,boolean,boolean)>(r1, r2, r3, r4, 1, z0);

        return;
    }

    public void makePath(java.lang.String, byte[], org.apache.zookeeper.CreateMode, org.apache.zookeeper.Watcher, boolean, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        org.apache.zookeeper.CreateMode r16, r26;
        byte[] r17, r25;
        org.apache.zookeeper.data.Stat $r11;
        org.apache.solr.common.cloud.SolrZkClient$10 $r30;
        boolean $z0, $z1, z2, z3, z4;
        java.lang.StringBuilder $r5, $r6, $r20, $r21, $r27, $r28, $r29;
        org.apache.solr.common.cloud.ZkCmdExecutor $r15;
        java.lang.String[] $r1;
        java.util.ArrayList $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i14, $i16;
        java.lang.String r3, $r7, $r8, $r22, r24;
        org.slf4j.Logger $r0, $r19;
        org.apache.zookeeper.Watcher r10;
        org.apache.zookeeper.KeeperException$NodeExistsException $r23;
        org.apache.solr.common.cloud.SolrZkClient r9;
        org.apache.solr.common.cloud.SolrZooKeeper $r13;

        r9 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r24 := @parameter0: java.lang.String;

        r17 := @parameter1: byte[];

        r16 := @parameter2: org.apache.zookeeper.CreateMode;

        r10 := @parameter3: org.apache.zookeeper.Watcher;

        z3 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        $r0 = <org.apache.solr.common.cloud.SolrZkClient: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r0.<org.slf4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label01;

        $r19 = <org.apache.solr.common.cloud.SolrZkClient: org.slf4j.Logger log>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makePath: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String)>($r22);

     label01:
        z4 = 1;

        $z1 = virtualinvoke r24.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z1 == 0 goto label02;

        $i8 = virtualinvoke r24.<java.lang.String: int length()>();

        r24 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int,int)>(1, $i8);

     label02:
        $r1 = virtualinvoke r24.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        i11 = 0;

     label03:
        $i12 = lengthof $r1;

        if i11 >= $i12 goto label14;

        r25 = null;

        r3 = $r1[i11];

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke r9.<org.apache.solr.common.cloud.SolrZkClient: org.apache.zookeeper.data.Stat exists(java.lang.String,org.apache.zookeeper.Watcher,boolean)>($r8, r10, z2);

        if $r11 == null goto label04;

        $i4 = lengthof $r1;

        $i5 = $i4 - 1;

        if i11 != $i5 goto label12;

        if z3 == 0 goto label12;

     label04:
        r26 = <org.apache.zookeeper.CreateMode: org.apache.zookeeper.CreateMode PERSISTENT>;

        $i0 = lengthof $r1;

        $i1 = $i0 - 1;

        if i11 != $i1 goto label05;

        r26 = r16;

        r25 = r17;

        if z2 != 0 goto label05;

        z4 = 0;

     label05:
        if z4 == 0 goto label06;

        $r15 = r9.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ZkCmdExecutor zkCmdExecutor>;

        $r30 = new org.apache.solr.common.cloud.SolrZkClient$10;

        specialinvoke $r30.<org.apache.solr.common.cloud.SolrZkClient$10: void <init>(org.apache.solr.common.cloud.SolrZkClient,java.lang.String,byte[],org.apache.zookeeper.CreateMode)>(r9, $r8, r25, r26);

        virtualinvoke $r15.<org.apache.solr.common.cloud.ZkCmdExecutor: java.lang.Object retryOperation(org.apache.solr.common.cloud.ZkOperation)>($r30);

        goto label07;

     label06:
        $r13 = r9.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper>;

        $r12 = <org.apache.zookeeper.ZooDefs$Ids: java.util.ArrayList OPEN_ACL_UNSAFE>;

        virtualinvoke $r13.<org.apache.solr.common.cloud.SolrZooKeeper: java.lang.String create(java.lang.String,byte[],java.util.List,org.apache.zookeeper.CreateMode)>($r8, r25, $r12, r26);

     label07:
        goto label10;

     label08:
        $r23 := @caughtexception;

        if z3 != 0 goto label09;

        $i14 = (int) -1;

        virtualinvoke r9.<org.apache.solr.common.cloud.SolrZkClient: org.apache.zookeeper.data.Stat setData(java.lang.String,byte[],int,boolean)>($r8, r17, $i14, z2);

        virtualinvoke r9.<org.apache.solr.common.cloud.SolrZkClient: org.apache.zookeeper.data.Stat exists(java.lang.String,org.apache.zookeeper.Watcher,boolean)>($r8, r10, z2);

        return;

     label09:
        $i9 = lengthof $r1;

        $i10 = $i9 - 1;

        if i11 != $i10 goto label10;

        throw $r23;

     label10:
        $i2 = lengthof $r1;

        $i3 = $i2 - 1;

        if i11 != $i3 goto label11;

        virtualinvoke r9.<org.apache.solr.common.cloud.SolrZkClient: org.apache.zookeeper.data.Stat exists(java.lang.String,org.apache.zookeeper.Watcher,boolean)>($r8, r10, z2);

     label11:
        goto label13;

     label12:
        $i6 = lengthof $r1;

        $i7 = $i6 - 1;

        if i11 != $i7 goto label13;

        $i16 = (int) -1;

        virtualinvoke r9.<org.apache.solr.common.cloud.SolrZkClient: org.apache.zookeeper.data.Stat setData(java.lang.String,byte[],int,boolean)>($r8, r17, $i16, z2);

        virtualinvoke r9.<org.apache.solr.common.cloud.SolrZkClient: org.apache.zookeeper.data.Stat exists(java.lang.String,org.apache.zookeeper.Watcher,boolean)>($r8, r10, z2);

     label13:
        i11 = i11 + 1;

        goto label03;

     label14:
        return;

        catch org.apache.zookeeper.KeeperException$NodeExistsException from label05 to label07 with label08;
    }

    public void makePath(java.lang.String, org.apache.zookeeper.CreateMode, org.apache.zookeeper.Watcher, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        org.apache.zookeeper.CreateMode r2;
        org.apache.zookeeper.Watcher r3;
        java.lang.String r1;
        org.apache.solr.common.cloud.SolrZkClient r0;
        boolean z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.zookeeper.CreateMode;

        r3 := @parameter2: org.apache.zookeeper.Watcher;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void makePath(java.lang.String,byte[],org.apache.zookeeper.CreateMode,org.apache.zookeeper.Watcher,boolean)>(r1, null, r2, r3, z0);

        return;
    }

    public org.apache.zookeeper.data.Stat setData(java.lang.String, byte[], boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        byte[] r2;
        int $i1;
        java.lang.String r1;
        org.apache.zookeeper.data.Stat $r3;
        org.apache.solr.common.cloud.SolrZkClient r0;
        boolean z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        z0 := @parameter2: boolean;

        $i1 = (int) -1;

        $r3 = virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.zookeeper.data.Stat setData(java.lang.String,byte[],int,boolean)>(r1, r2, $i1, z0);

        return $r3;
    }

    public org.apache.zookeeper.data.Stat setData(java.lang.String, java.io.File, boolean) throws java.io.IOException, org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        byte[] $r5;
        org.apache.zookeeper.data.Stat $r6;
        java.lang.String $r2, r4, $r10, $r14;
        boolean $z0, z1;
        org.slf4j.Logger $r0, $r8;
        java.io.File r1;
        java.lang.StringBuilder $r7, $r9, $r11, $r12, $r13;
        org.apache.solr.common.cloud.SolrZkClient r3;

        r3 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.File;

        z1 := @parameter2: boolean;

        $r0 = <org.apache.solr.common.cloud.SolrZkClient: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r0.<org.slf4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r8 = <org.apache.solr.common.cloud.SolrZkClient: org.slf4j.Logger log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Write to ZooKeepeer ");

        $r10 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>($r14);

     label1:
        $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>(r1);

        $r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r6 = virtualinvoke r3.<org.apache.solr.common.cloud.SolrZkClient: org.apache.zookeeper.data.Stat setData(java.lang.String,byte[],boolean)>(r4, $r5, z1);

        return $r6;
    }

    public java.lang.String getBaseUrlForNodeName(java.lang.String)
    {
        java.lang.IllegalStateException $r18;
        int $i0, $i1;
        java.lang.String r0, $r1, $r2, $r3, $r11, $r16, $r20;
        boolean $z0;
        java.lang.IllegalArgumentException $r12;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15;
        java.io.UnsupportedEncodingException $r17;
        org.apache.solr.common.cloud.SolrZkClient r19;

        r19 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("_");

        if $i0 >= 0 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nodeName does not contain expected \'_\' seperator: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        $i1 = 1 + $i0;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r3 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $r20 = "";

        goto label4;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r20 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        return $r11;

     label6:
        $r17 := @caughtexception;

        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("JVM Does not seem to support UTF-8", $r17);

        throw $r18;

        catch java.io.UnsupportedEncodingException from label2 to label5 with label6;
    }

    public void printLayout(java.lang.String, int, java.lang.StringBuilder) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        byte[] $r2;
        org.apache.zookeeper.KeeperException$NoNodeException $r45;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.List $r3;
        java.lang.StringBuilder $r4, r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r18, $r19, $r20, $r21, $r24, $r25, $r26, $r28, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r41, $r43;
        java.io.UnsupportedEncodingException $r46;
        int i0, $i1, $i2, i3;
        java.lang.String r1, $r12, $r14, r17, $r22, $r23, $r27, $r29, $r39, $r40, $r42, $r44, r48, $r49;
        java.util.Iterator $r15;
        java.lang.RuntimeException $r47;
        java.lang.Object $r16;
        org.apache.solr.common.cloud.SolrZkClient r0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r5 := @parameter2: java.lang.StringBuilder;

        $r2 = virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: byte[] getData(java.lang.String,org.apache.zookeeper.Watcher,org.apache.zookeeper.data.Stat,boolean)>(r1, null, null, 1);

        $r3 = virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: java.util.List getChildren(java.lang.String,org.apache.zookeeper.Watcher,boolean)>(r1, null, 1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        i3 = 0;

     label01:
        if i3 >= i0 goto label02;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i3 = i3 + 1;

        goto label01;

     label02:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = <org.apache.solr.common.cloud.SolrZkClient: java.lang.String NEWL>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        if $r2 == null goto label10;

     label03:
        $r23 = new java.lang.String;

        specialinvoke $r23.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, "UTF-8");

        r48 = $r23;

        $z2 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".txt");

        if $z2 != 0 goto label04;

        $z5 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z5 == 0 goto label05;

     label04:
        $z3 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("/clusterstate.json");

        if $z3 == 0 goto label07;

     label05:
        $z4 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z4 == 0 goto label06;

        r48 = staticinvoke <org.apache.solr.common.cloud.SolrZkClient: java.lang.String prettyPrint(java.lang.String)>($r23);

     label06:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DATA:\n");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = virtualinvoke r48.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n", $r39);

        $r41 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = <org.apache.solr.common.cloud.SolrZkClient: java.lang.String NEWL>;

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        goto label08;

     label07:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DATA: ...supressed...");

        $r27 = <org.apache.solr.common.cloud.SolrZkClient: java.lang.String NEWL>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

     label08:
        goto label10;

     label09:
        $r46 := @caughtexception;

        $r47 = new java.lang.RuntimeException;

        specialinvoke $r47.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r46);

        throw $r47;

     label10:
        $r15 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z6 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label18;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.lang.String) $r16;

        $z0 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>("quota");

        if $z0 != 0 goto label17;

     label12:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("/");

        if $z1 == 0 goto label13;

        $r49 = "";

        goto label14;

     label13:
        $r49 = "/";

     label14:
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = i0 + 1;

        virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void printLayout(java.lang.String,int,java.lang.StringBuilder)>($r22, $i2, r5);

     label15:
        goto label17;

     label16:
        $r45 := @caughtexception;

     label17:
        goto label11;

     label18:
        return;

        catch java.io.UnsupportedEncodingException from label03 to label08 with label09;
        catch org.apache.zookeeper.KeeperException$NoNodeException from label12 to label15 with label16;
    }

    public void printLayoutToStdOut() throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException
    {
        java.io.PrintStream $r2;
        java.lang.StringBuilder $r0;
        java.lang.String $r3;
        org.apache.solr.common.cloud.SolrZkClient r1;

        r1 := @this: org.apache.solr.common.cloud.SolrZkClient;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<org.apache.solr.common.cloud.SolrZkClient: void printLayout(java.lang.String,int,java.lang.StringBuilder)>("/", 0, $r0);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;
    }

    public static java.lang.String prettyPrint(java.lang.String, int)
    {
        javax.xml.transform.Transformer $r7;
        javax.xml.transform.stream.StreamSource $r0;
        java.io.StringWriter $r3;
        javax.xml.transform.stream.StreamResult $r4;
        java.lang.RuntimeException $r11;
        java.lang.Integer $r6;
        java.lang.Exception $r10;
        java.io.StringReader $r1;
        int i0;
        java.io.Writer $r8;
        java.lang.String r2, $r9;
        javax.xml.transform.TransformerFactory $r5;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r0 = new javax.xml.transform.stream.StreamSource;

        $r1 = new java.io.StringReader;

        specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<javax.xml.transform.stream.StreamSource: void <init>(java.io.Reader)>($r1);

        $r3 = new java.io.StringWriter;

        specialinvoke $r3.<java.io.StringWriter: void <init>()>();

        $r4 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r4.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>($r3);

        $r5 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r5.<javax.xml.transform.TransformerFactory: void setAttribute(java.lang.String,java.lang.Object)>("indent-number", $r6);

        $r7 = virtualinvoke $r5.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r7.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "yes");

        virtualinvoke $r7.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r0, $r4);

        $r8 = virtualinvoke $r4.<javax.xml.transform.stream.StreamResult: java.io.Writer getWriter()>();

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r9;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Problem pretty printing XML", $r10);

        throw $r11;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static java.lang.String prettyPrint(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.solr.common.cloud.SolrZkClient: java.lang.String prettyPrint(java.lang.String,int)>(r0, 2);

        return $r1;
    }

    public void close()
    {
        java.lang.Throwable $r4;
        java.util.concurrent.atomic.AtomicLong $r3;
        org.apache.solr.common.cloud.ConnectionManager $r2, $r5;
        org.apache.solr.common.cloud.SolrZkClient r0;
        org.apache.solr.common.cloud.SolrZooKeeper $r1;
        boolean $z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        $z0 = r0.<org.apache.solr.common.cloud.SolrZkClient: boolean isClosed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<org.apache.solr.common.cloud.SolrZkClient: boolean isClosed> = 1;

     label2:
        $r1 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper>;

        specialinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void closeKeeper(org.apache.solr.common.cloud.SolrZooKeeper)>($r1);

     label3:
        $r2 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ConnectionManager connManager>;

        virtualinvoke $r2.<org.apache.solr.common.cloud.ConnectionManager: void close()>();

        goto label6;

     label4:
        $r4 := @caughtexception;

     label5:
        $r5 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.ConnectionManager connManager>;

        virtualinvoke $r5.<org.apache.solr.common.cloud.ConnectionManager: void close()>();

        throw $r4;

     label6:
        $r3 = <org.apache.solr.common.cloud.SolrZkClient: java.util.concurrent.atomic.AtomicLong numCloses>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isClosed()
    {
        org.apache.solr.common.cloud.SolrZkClient r0;
        boolean $z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        $z0 = r0.<org.apache.solr.common.cloud.SolrZkClient: boolean isClosed>;

        return $z0;
    }

    void updateKeeper(org.apache.solr.common.cloud.SolrZooKeeper) throws java.lang.InterruptedException
    {
        org.apache.solr.common.cloud.SolrZkClient r0;
        org.apache.solr.common.cloud.SolrZooKeeper r1, r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r2 := @parameter0: org.apache.solr.common.cloud.SolrZooKeeper;

        r1 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper>;

        r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper> = r2;

        if r1 == null goto label1;

        virtualinvoke r1.<org.apache.solr.common.cloud.SolrZooKeeper: void close()>();

     label1:
        $z0 = r0.<org.apache.solr.common.cloud.SolrZkClient: boolean isClosed>;

        if $z0 == 0 goto label2;

        $r3 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper>;

        virtualinvoke $r3.<org.apache.solr.common.cloud.SolrZooKeeper: void close()>();

     label2:
        return;
    }

    public org.apache.solr.common.cloud.SolrZooKeeper getSolrZooKeeper()
    {
        org.apache.solr.common.cloud.SolrZkClient r0;
        org.apache.solr.common.cloud.SolrZooKeeper $r1;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        $r1 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper>;

        return $r1;
    }

    private void closeKeeper(org.apache.solr.common.cloud.SolrZooKeeper)
    {
        org.slf4j.Logger $r3;
        java.lang.InterruptedException $r1;
        java.lang.Thread $r2;
        org.apache.solr.common.cloud.ZooKeeperException $r4;
        org.apache.solr.common.cloud.SolrZooKeeper r0;
        org.apache.solr.common.SolrException$ErrorCode $r5;
        org.apache.solr.common.cloud.SolrZkClient r6;

        r6 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r0 := @parameter0: org.apache.solr.common.cloud.SolrZooKeeper;

        if r0 == null goto label4;

     label1:
        virtualinvoke r0.<org.apache.solr.common.cloud.SolrZooKeeper: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r2.<java.lang.Thread: void interrupt()>();

        $r3 = <org.apache.solr.common.cloud.SolrZkClient: org.slf4j.Logger log>;

        interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("", $r1);

        $r4 = new org.apache.solr.common.cloud.ZooKeeperException;

        $r5 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode SERVER_ERROR>;

        specialinvoke $r4.<org.apache.solr.common.cloud.ZooKeeperException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.String,java.lang.Throwable)>($r5, "", $r1);

        throw $r4;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void clean(java.lang.String) throws java.lang.InterruptedException, org.apache.zookeeper.KeeperException
    {
        org.apache.zookeeper.KeeperException$NoNodeException $r15, $r16;
        int $i1;
        java.lang.String r1, r5, $r10, $r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r3;
        java.util.List $r2;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r8, $r9, $r12, $r13, $r17, $r18;
        org.apache.solr.common.cloud.SolrZkClient r0;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter0: java.lang.String;

     label01:
        $r2 = virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: java.util.List getChildren(java.lang.String,org.apache.zookeeper.Watcher,boolean)>(r1, null, 1);

     label02:
        goto label04;

     label03:
        $r16 := @caughtexception;

        return;

     label04:
        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label09;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("/");

        if $z1 == 0 goto label06;

        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("zookeeper");

        if $z3 == 0 goto label06;

        goto label05;

     label06:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("/");

        if $z2 == 0 goto label07;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void clean(java.lang.String)>($r14);

        goto label08;

     label07:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void clean(java.lang.String)>($r10);

     label08:
        goto label05;

     label09:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("/");

        if $z0 != 0 goto label10;

        $i1 = (int) -1;

        virtualinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void delete(java.lang.String,int,boolean)>(r1, $i1, 1);

     label10:
        goto label12;

     label11:
        $r15 := @caughtexception;

        return;

     label12:
        return;

        catch org.apache.zookeeper.KeeperException$NoNodeException from label01 to label02 with label03;
        catch org.apache.zookeeper.KeeperException$NoNodeException from label09 to label10 with label11;
    }

    static org.apache.solr.common.cloud.SolrZooKeeper access$000(org.apache.solr.common.cloud.SolrZkClient)
    {
        org.apache.solr.common.cloud.SolrZkClient r0;
        org.apache.solr.common.cloud.SolrZooKeeper $r1;

        r0 := @parameter0: org.apache.solr.common.cloud.SolrZkClient;

        $r1 = r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper>;

        return $r1;
    }

    static org.apache.solr.common.cloud.SolrZooKeeper access$002(org.apache.solr.common.cloud.SolrZkClient, org.apache.solr.common.cloud.SolrZooKeeper)
    {
        org.apache.solr.common.cloud.SolrZkClient r0;
        org.apache.solr.common.cloud.SolrZooKeeper r1;

        r0 := @parameter0: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter1: org.apache.solr.common.cloud.SolrZooKeeper;

        r0.<org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper keeper> = r1;

        return r1;
    }

    static void access$100(org.apache.solr.common.cloud.SolrZkClient, org.apache.solr.common.cloud.SolrZooKeeper)
    {
        org.apache.solr.common.cloud.SolrZkClient r0;
        org.apache.solr.common.cloud.SolrZooKeeper r1;

        r0 := @parameter0: org.apache.solr.common.cloud.SolrZkClient;

        r1 := @parameter1: org.apache.solr.common.cloud.SolrZooKeeper;

        specialinvoke r0.<org.apache.solr.common.cloud.SolrZkClient: void closeKeeper(org.apache.solr.common.cloud.SolrZooKeeper)>(r1);

        return;
    }

    static boolean access$200(org.apache.solr.common.cloud.SolrZkClient)
    {
        org.apache.solr.common.cloud.SolrZkClient r0;
        boolean $z0;

        r0 := @parameter0: org.apache.solr.common.cloud.SolrZkClient;

        $z0 = r0.<org.apache.solr.common.cloud.SolrZkClient: boolean isClosed>;

        return $z0;
    }

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicLong $r0, $r1;
        org.slf4j.Logger $r3;
        java.lang.String $r2;

        <org.apache.solr.common.cloud.SolrZkClient: int DEFAULT_CLIENT_CONNECT_TIMEOUT> = 30000;

        $r0 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        <org.apache.solr.common.cloud.SolrZkClient: java.util.concurrent.atomic.AtomicLong numOpens> = $r0;

        $r1 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        <org.apache.solr.common.cloud.SolrZkClient: java.util.concurrent.atomic.AtomicLong numCloses> = $r1;

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        <org.apache.solr.common.cloud.SolrZkClient: java.lang.String NEWL> = $r2;

        $r3 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/solr/common/cloud/SolrZkClient;");

        <org.apache.solr.common.cloud.SolrZkClient: org.slf4j.Logger log> = $r3;

        return;
    }
}
