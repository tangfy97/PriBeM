final class com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset extends com.mycila.inject.internal.guava.collect.ImmutableSortedMultiset
{

    void <init>(java.util.Comparator)
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset r0;
        java.util.Comparator r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset;

        r1 := @parameter0: java.util.Comparator;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableSortedMultiset: void <init>(java.util.Comparator)>(r1);

        return;
    }

    public com.mycila.inject.internal.guava.collect.Multiset$Entry firstEntry()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset;

        return null;
    }

    public com.mycila.inject.internal.guava.collect.Multiset$Entry lastEntry()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset;

        return null;
    }

    public int count(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset r0;
        java.lang.Object r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset;

        r1 := @parameter0: java.lang.Object;

        return 0;
    }

    public int size()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset;

        return 0;
    }

    com.mycila.inject.internal.guava.collect.ImmutableSortedSet createElementSet()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset r0;
        com.mycila.inject.internal.guava.collect.ImmutableSortedSet $r2;
        java.util.Comparator $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset: java.util.Comparator comparator()>();

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.ImmutableSortedSet: com.mycila.inject.internal.guava.collect.ImmutableSortedSet emptySet(java.util.Comparator)>($r1);

        return $r2;
    }

    com.mycila.inject.internal.guava.collect.ImmutableSortedSet createDescendingElementSet()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset r0;
        com.mycila.inject.internal.guava.collect.ImmutableSortedSet $r2;
        java.util.Comparator $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset: java.util.Comparator reverseComparator()>();

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.ImmutableSortedSet: com.mycila.inject.internal.guava.collect.ImmutableSortedSet emptySet(java.util.Comparator)>($r1);

        return $r2;
    }

    com.mycila.inject.internal.guava.collect.UnmodifiableIterator descendingEntryIterator()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset r1;
        com.mycila.inject.internal.guava.collect.UnmodifiableIterator $r0;

        r1 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset;

        $r0 = staticinvoke <com.mycila.inject.internal.guava.collect.Iterators: com.mycila.inject.internal.guava.collect.UnmodifiableIterator emptyIterator()>();

        return $r0;
    }

    com.mycila.inject.internal.guava.collect.UnmodifiableIterator entryIterator()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset r1;
        com.mycila.inject.internal.guava.collect.UnmodifiableIterator $r0;

        r1 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset;

        $r0 = staticinvoke <com.mycila.inject.internal.guava.collect.Iterators: com.mycila.inject.internal.guava.collect.UnmodifiableIterator emptyIterator()>();

        return $r0;
    }

    public com.mycila.inject.internal.guava.collect.ImmutableSortedMultiset headMultiset(java.lang.Object, com.mycila.inject.internal.guava.collect.BoundType)
    {
        java.lang.Object r0;
        com.mycila.inject.internal.guava.collect.BoundType r1;
        com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset r2;

        r2 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: com.mycila.inject.internal.guava.collect.BoundType;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        return r2;
    }

    public com.mycila.inject.internal.guava.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object, com.mycila.inject.internal.guava.collect.BoundType)
    {
        java.lang.Object r0;
        com.mycila.inject.internal.guava.collect.BoundType r1;
        com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset r2;

        r2 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: com.mycila.inject.internal.guava.collect.BoundType;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        return r2;
    }

    int distinctElements()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset;

        return 0;
    }

    boolean isPartialView()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset;

        return 0;
    }

    public volatile com.mycila.inject.internal.guava.collect.SortedMultiset tailMultiset(java.lang.Object, com.mycila.inject.internal.guava.collect.BoundType)
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset r0;
        com.mycila.inject.internal.guava.collect.BoundType r2;
        com.mycila.inject.internal.guava.collect.ImmutableSortedMultiset $r3;
        java.lang.Object r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.mycila.inject.internal.guava.collect.BoundType;

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset: com.mycila.inject.internal.guava.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object,com.mycila.inject.internal.guava.collect.BoundType)>(r1, r2);

        return $r3;
    }

    public volatile com.mycila.inject.internal.guava.collect.SortedMultiset headMultiset(java.lang.Object, com.mycila.inject.internal.guava.collect.BoundType)
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset r0;
        com.mycila.inject.internal.guava.collect.BoundType r2;
        com.mycila.inject.internal.guava.collect.ImmutableSortedMultiset $r3;
        java.lang.Object r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.mycila.inject.internal.guava.collect.BoundType;

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.EmptyImmutableSortedMultiset: com.mycila.inject.internal.guava.collect.ImmutableSortedMultiset headMultiset(java.lang.Object,com.mycila.inject.internal.guava.collect.BoundType)>(r1, r2);

        return $r3;
    }
}
