public class org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader extends org.apache.poi.poifs.crypt.EncryptionHeader implements org.apache.poi.poifs.crypt.standard.EncryptionRecord
{
    private static org.apache.poi.util.BitField flagsCryptoAPI;
    private static org.apache.poi.util.BitField flagsDocProps;
    private static org.apache.poi.util.BitField flagsExternal;
    private static org.apache.poi.util.BitField flagsAES;

    protected void <init>(org.apache.poi.poifs.filesystem.DocumentInputStream) throws java.io.IOException
    {
        org.apache.poi.poifs.crypt.ChainingMode $r7;
        short $s8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r6;
        org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader r0;
        char $c9;
        org.apache.poi.poifs.crypt.HashAlgorithm $r3;
        org.apache.poi.poifs.crypt.CipherProvider $r4;
        java.lang.StringBuilder $r5;
        org.apache.poi.poifs.crypt.CipherAlgorithm $r2;
        org.apache.poi.poifs.filesystem.DocumentInputStream r1;

        r0 := @this: org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.DocumentInputStream;

        specialinvoke r0.<org.apache.poi.poifs.crypt.EncryptionHeader: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.DocumentInputStream: int readInt()>();

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setFlags(int)>($i0);

        $i1 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.DocumentInputStream: int readInt()>();

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setSizeExtra(int)>($i1);

        $i2 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.DocumentInputStream: int readInt()>();

        $r2 = staticinvoke <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm fromEcmaId(int)>($i2);

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setCipherAlgorithm(org.apache.poi.poifs.crypt.CipherAlgorithm)>($r2);

        $i3 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.DocumentInputStream: int readInt()>();

        $r3 = staticinvoke <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm fromEcmaId(int)>($i3);

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setHashAlgorithm(org.apache.poi.poifs.crypt.HashAlgorithm)>($r3);

        $i4 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.DocumentInputStream: int readInt()>();

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setKeySize(int)>($i4);

        $i5 = virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: int getKeySize()>();

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setBlockSize(int)>($i5);

        $i6 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.DocumentInputStream: int readInt()>();

        $r4 = staticinvoke <org.apache.poi.poifs.crypt.CipherProvider: org.apache.poi.poifs.crypt.CipherProvider fromEcmaId(int)>($i6);

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setCipherProvider(org.apache.poi.poifs.crypt.CipherProvider)>($r4);

        virtualinvoke r1.<org.apache.poi.poifs.filesystem.DocumentInputStream: long readLong()>();

        virtualinvoke r1.<org.apache.poi.poifs.filesystem.DocumentInputStream: void mark(int)>(5);

        $i7 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.DocumentInputStream: int readInt()>();

        virtualinvoke r1.<org.apache.poi.poifs.filesystem.DocumentInputStream: void reset()>();

        if $i7 != 16 goto label1;

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setCspName(java.lang.String)>("");

        goto label5;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

     label2:
        $s8 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.DocumentInputStream: short readShort()>();

        $c9 = (char) $s8;

        if $c9 != 0 goto label3;

        goto label4;

     label3:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9);

        goto label2;

     label4:
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setCspName(java.lang.String)>($r6);

     label5:
        $r7 = <org.apache.poi.poifs.crypt.ChainingMode: org.apache.poi.poifs.crypt.ChainingMode ecb>;

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setChainingMode(org.apache.poi.poifs.crypt.ChainingMode)>($r7);

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setKeySalt(byte[])>(null);

        return;
    }

    protected void <init>(org.apache.poi.poifs.crypt.CipherAlgorithm, org.apache.poi.poifs.crypt.HashAlgorithm, int, int, org.apache.poi.poifs.crypt.ChainingMode)
    {
        org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader r0;
        org.apache.poi.util.BitField $r4, $r7;
        org.apache.poi.poifs.crypt.ChainingMode r8;
        org.apache.poi.poifs.crypt.HashAlgorithm r2;
        org.apache.poi.poifs.crypt.CipherProvider $r3, $r5, $r6;
        int i0, i1, $i2, $i3, $i4;
        org.apache.poi.poifs.crypt.CipherAlgorithm r1;
        boolean $z0;

        r0 := @this: org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader;

        r1 := @parameter0: org.apache.poi.poifs.crypt.CipherAlgorithm;

        r2 := @parameter1: org.apache.poi.poifs.crypt.HashAlgorithm;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r8 := @parameter4: org.apache.poi.poifs.crypt.ChainingMode;

        specialinvoke r0.<org.apache.poi.poifs.crypt.EncryptionHeader: void <init>()>();

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setCipherAlgorithm(org.apache.poi.poifs.crypt.CipherAlgorithm)>(r1);

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setHashAlgorithm(org.apache.poi.poifs.crypt.HashAlgorithm)>(r2);

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setKeySize(int)>(i0);

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setBlockSize(int)>(i1);

        $r3 = r1.<org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherProvider provider>;

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setCipherProvider(org.apache.poi.poifs.crypt.CipherProvider)>($r3);

        $r4 = <org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: org.apache.poi.util.BitField flagsCryptoAPI>;

        $i2 = virtualinvoke $r4.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>(0, 1);

        $r7 = <org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: org.apache.poi.util.BitField flagsAES>;

        $r6 = r1.<org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherProvider provider>;

        $r5 = <org.apache.poi.poifs.crypt.CipherProvider: org.apache.poi.poifs.crypt.CipherProvider aes>;

        if $r6 != $r5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i3 = virtualinvoke $r7.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>(0, $z0);

        $i4 = $i2 | $i3;

        virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void setFlags(int)>($i4);

        return;
    }

    public void write(org.apache.poi.util.LittleEndianByteArrayOutputStream)
    {
        byte[] $r8;
        org.apache.poi.util.LittleEndianOutput $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r6, $r7;
        org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader r2;
        org.apache.poi.util.LittleEndianByteArrayOutputStream r0;
        org.apache.poi.poifs.crypt.HashAlgorithm $r4;
        org.apache.poi.poifs.crypt.CipherProvider $r5;
        org.apache.poi.poifs.crypt.CipherAlgorithm $r3;

        r2 := @this: org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader;

        r0 := @parameter0: org.apache.poi.util.LittleEndianByteArrayOutputStream;

        $i0 = virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int getWriteIndex()>();

        $r1 = virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: org.apache.poi.util.LittleEndianOutput createDelayedOutput(int)>(4);

        $i1 = virtualinvoke r2.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: int getFlags()>();

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeInt(int)>($i1);

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeInt(int)>(0);

        $r3 = virtualinvoke r2.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: org.apache.poi.poifs.crypt.CipherAlgorithm getCipherAlgorithm()>();

        $i2 = $r3.<org.apache.poi.poifs.crypt.CipherAlgorithm: int ecmaId>;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeInt(int)>($i2);

        $r4 = virtualinvoke r2.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: org.apache.poi.poifs.crypt.HashAlgorithm getHashAlgorithmEx()>();

        $i3 = $r4.<org.apache.poi.poifs.crypt.HashAlgorithm: int ecmaId>;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeInt(int)>($i3);

        $i4 = virtualinvoke r2.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: int getKeySize()>();

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeInt(int)>($i4);

        $r5 = virtualinvoke r2.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: org.apache.poi.poifs.crypt.CipherProvider getCipherProvider()>();

        $i5 = $r5.<org.apache.poi.poifs.crypt.CipherProvider: int ecmaId>;

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeInt(int)>($i5);

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeInt(int)>(0);

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeInt(int)>(0);

        $r6 = virtualinvoke r2.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: java.lang.String getCspName()>();

        if $r6 == null goto label1;

        $r7 = virtualinvoke r2.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: java.lang.String getCspName()>();

        $r8 = staticinvoke <org.apache.poi.poifs.crypt.CryptoFunctions: byte[] getUtf16LeString(java.lang.String)>($r7);

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void write(byte[])>($r8);

        virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeShort(int)>(0);

     label1:
        $i6 = virtualinvoke r0.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int getWriteIndex()>();

        $i7 = $i6 - $i0;

        $i8 = $i7 - 4;

        interfaceinvoke $r1.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($i8);

        return;
    }

    static void <clinit>()
    {
        org.apache.poi.util.BitField $r0, $r1, $r2, $r3;

        $r0 = new org.apache.poi.util.BitField;

        specialinvoke $r0.<org.apache.poi.util.BitField: void <init>(int)>(4);

        <org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: org.apache.poi.util.BitField flagsCryptoAPI> = $r0;

        $r1 = new org.apache.poi.util.BitField;

        specialinvoke $r1.<org.apache.poi.util.BitField: void <init>(int)>(8);

        <org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: org.apache.poi.util.BitField flagsDocProps> = $r1;

        $r2 = new org.apache.poi.util.BitField;

        specialinvoke $r2.<org.apache.poi.util.BitField: void <init>(int)>(16);

        <org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: org.apache.poi.util.BitField flagsExternal> = $r2;

        $r3 = new org.apache.poi.util.BitField;

        specialinvoke $r3.<org.apache.poi.util.BitField: void <init>(int)>(32);

        <org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: org.apache.poi.util.BitField flagsAES> = $r3;

        return;
    }
}
