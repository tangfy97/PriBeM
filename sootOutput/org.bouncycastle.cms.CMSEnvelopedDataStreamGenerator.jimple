public class org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator extends org.bouncycastle.cms.CMSEnvelopedGenerator
{
    private java.lang.Object _originatorInfo;
    private java.lang.Object _unprotectedAttributes;
    private int _bufferSize;
    private boolean _berEncodeRecipientSet;

    public void <init>()
    {
        org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator r0;

        r0 := @this: org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator;

        specialinvoke r0.<org.bouncycastle.cms.CMSEnvelopedGenerator: void <init>()>();

        r0.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.lang.Object _originatorInfo> = null;

        r0.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.lang.Object _unprotectedAttributes> = null;

        return;
    }

    public void <init>(java.security.SecureRandom)
    {
        java.security.SecureRandom r1;
        org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator r0;

        r0 := @this: org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator;

        r1 := @parameter0: java.security.SecureRandom;

        specialinvoke r0.<org.bouncycastle.cms.CMSEnvelopedGenerator: void <init>(java.security.SecureRandom)>(r1);

        r0.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.lang.Object _originatorInfo> = null;

        r0.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.lang.Object _unprotectedAttributes> = null;

        return;
    }

    public void setBufferSize(int)
    {
        int i0;
        org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator r0;

        r0 := @this: org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator;

        i0 := @parameter0: int;

        r0.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: int _bufferSize> = i0;

        return;
    }

    public void setBEREncodeRecipients(boolean)
    {
        org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator r0;
        boolean z0;

        r0 := @this: org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator;

        z0 := @parameter0: boolean;

        r0.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: boolean _berEncodeRecipientSet> = z0;

        return;
    }

    private org.bouncycastle.asn1.DERInteger getVersion()
    {
        org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator r0;
        java.lang.Object $r1, $r3;
        org.bouncycastle.asn1.DERInteger $r2, $r4;

        r0 := @this: org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator;

        $r1 = r0.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.lang.Object _originatorInfo>;

        if $r1 != null goto label1;

        $r3 = r0.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.lang.Object _unprotectedAttributes>;

        if $r3 == null goto label2;

     label1:
        $r2 = new org.bouncycastle.asn1.DERInteger;

        specialinvoke $r2.<org.bouncycastle.asn1.DERInteger: void <init>(int)>(2);

        return $r2;

     label2:
        $r4 = new org.bouncycastle.asn1.DERInteger;

        specialinvoke $r4.<org.bouncycastle.asn1.DERInteger: void <init>(int)>(0);

        return $r4;
    }

    private java.io.OutputStream open(java.io.OutputStream, java.lang.String, javax.crypto.KeyGenerator, java.security.Provider) throws java.security.NoSuchAlgorithmException, org.bouncycastle.cms.CMSException
    {
        org.bouncycastle.cms.CMSException $r17, $r19;
        javax.crypto.KeyGenerator r0;
        java.security.SecureRandom $r14;
        java.security.GeneralSecurityException $r16;
        org.bouncycastle.asn1.cms.RecipientInfo $r15;
        java.lang.String r4;
        boolean $z0;
        java.io.OutputStream r9, $r10;
        java.util.Iterator $r7;
        org.bouncycastle.asn1.ASN1EncodableVector $r8;
        java.security.AlgorithmParameters $r5;
        java.security.Provider $r1, r13;
        java.util.List $r6;
        org.bouncycastle.cms.RecipientInfoGenerator r12;
        org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator r3;
        java.lang.Object $r11;
        java.security.InvalidKeyException $r18;
        javax.crypto.SecretKey $r2;

        r3 := @this: org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator;

        r9 := @parameter0: java.io.OutputStream;

        r4 := @parameter1: java.lang.String;

        r0 := @parameter2: javax.crypto.KeyGenerator;

        r13 := @parameter3: java.security.Provider;

        $r1 = virtualinvoke r0.<javax.crypto.KeyGenerator: java.security.Provider getProvider()>();

        $r2 = virtualinvoke r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        $r5 = virtualinvoke r3.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.security.AlgorithmParameters generateParameters(java.lang.String,javax.crypto.SecretKey,java.security.Provider)>(r4, $r2, $r1);

        $r6 = r3.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.util.List recipientInfoGenerators>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        $r8 = new org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r8.<org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r11 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.bouncycastle.cms.RecipientInfoGenerator) $r11;

     label2:
        $r14 = r3.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.security.SecureRandom rand>;

        $r15 = interfaceinvoke r12.<org.bouncycastle.cms.RecipientInfoGenerator: org.bouncycastle.asn1.cms.RecipientInfo generate(javax.crypto.SecretKey,java.security.SecureRandom,java.security.Provider)>($r2, $r14, r13);

        virtualinvoke $r8.<org.bouncycastle.asn1.ASN1EncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r15);

     label3:
        goto label6;

     label4:
        $r18 := @caughtexception;

        $r19 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r19.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("key inappropriate for algorithm.", $r18);

        throw $r19;

     label5:
        $r16 := @caughtexception;

        $r17 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r17.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("error making encrypted content.", $r16);

        throw $r17;

     label6:
        goto label1;

     label7:
        $r10 = virtualinvoke r3.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.io.OutputStream open(java.io.OutputStream,java.lang.String,javax.crypto.SecretKey,java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1EncodableVector,java.security.Provider)>(r9, r4, $r2, $r5, $r8, $r1);

        return $r10;

        catch java.security.InvalidKeyException from label2 to label3 with label4;
        catch java.security.GeneralSecurityException from label2 to label3 with label5;
    }

    protected java.io.OutputStream open(java.io.OutputStream, java.lang.String, javax.crypto.SecretKey, java.security.AlgorithmParameters, org.bouncycastle.asn1.ASN1EncodableVector, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, org.bouncycastle.cms.CMSException
    {
        java.io.OutputStream r1, $r8;
        org.bouncycastle.asn1.ASN1EncodableVector r5;
        java.security.AlgorithmParameters r4;
        java.security.Provider $r7;
        org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator r0;
        java.lang.String r2, r6;
        javax.crypto.SecretKey r3;

        r0 := @this: org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.crypto.SecretKey;

        r4 := @parameter3: java.security.AlgorithmParameters;

        r5 := @parameter4: org.bouncycastle.asn1.ASN1EncodableVector;

        r6 := @parameter5: java.lang.String;

        $r7 = staticinvoke <org.bouncycastle.cms.CMSUtils: java.security.Provider getProvider(java.lang.String)>(r6);

        $r8 = virtualinvoke r0.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.io.OutputStream open(java.io.OutputStream,java.lang.String,javax.crypto.SecretKey,java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1EncodableVector,java.security.Provider)>(r1, r2, r3, r4, r5, $r7);

        return $r8;
    }

    protected java.io.OutputStream open(java.io.OutputStream, java.lang.String, javax.crypto.SecretKey, java.security.AlgorithmParameters, org.bouncycastle.asn1.ASN1EncodableVector, java.security.Provider) throws java.security.NoSuchAlgorithmException, org.bouncycastle.cms.CMSException
    {
        byte[] $r10, $r22, $r29;
        java.security.SecureRandom $r16;
        org.bouncycastle.asn1.DERObjectIdentifier $r2, $r19;
        boolean $z0;
        org.bouncycastle.asn1.DERSet $r8;
        java.security.Provider r12;
        org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator r5;
        java.security.InvalidKeyException $r36;
        javax.crypto.SecretKey r15;
        org.bouncycastle.cms.CMSException $r31, $r33, $r35, $r37;
        javax.crypto.Cipher $r14;
        org.bouncycastle.cms.CMSEnvelopedHelper $r13;
        java.security.InvalidAlgorithmParameterException $r32;
        javax.crypto.NoSuchPaddingException $r34;
        org.bouncycastle.asn1.BERSet $r28;
        int $i0;
        java.lang.String r11;
        javax.crypto.CipherOutputStream $r25;
        org.bouncycastle.asn1.BERSequenceGenerator $r0, $r3, $r17;
        java.io.OutputStream r1, $r4, $r7, $r18, $r21, $r23, $r24, $r27;
        org.bouncycastle.asn1.ASN1EncodableVector r9;
        java.io.IOException $r30;
        org.bouncycastle.asn1.DERInteger $r6;
        java.security.AlgorithmParameters r38;
        org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator$CmsEnvelopedDataOutputStream $r26;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r20;

        r5 := @this: org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator;

        r1 := @parameter0: java.io.OutputStream;

        r11 := @parameter1: java.lang.String;

        r15 := @parameter2: javax.crypto.SecretKey;

        r38 := @parameter3: java.security.AlgorithmParameters;

        r9 := @parameter4: org.bouncycastle.asn1.ASN1EncodableVector;

        r12 := @parameter5: java.security.Provider;

     label1:
        $r0 = new org.bouncycastle.asn1.BERSequenceGenerator;

        specialinvoke $r0.<org.bouncycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream)>(r1);

        $r2 = <org.bouncycastle.asn1.cms.CMSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier envelopedData>;

        virtualinvoke $r0.<org.bouncycastle.asn1.BERSequenceGenerator: void addObject(org.bouncycastle.asn1.DEREncodable)>($r2);

        $r3 = new org.bouncycastle.asn1.BERSequenceGenerator;

        $r4 = virtualinvoke $r0.<org.bouncycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        specialinvoke $r3.<org.bouncycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream,int,boolean)>($r4, 0, 1);

        $r6 = specialinvoke r5.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: org.bouncycastle.asn1.DERInteger getVersion()>();

        virtualinvoke $r3.<org.bouncycastle.asn1.BERSequenceGenerator: void addObject(org.bouncycastle.asn1.DEREncodable)>($r6);

        $z0 = r5.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: boolean _berEncodeRecipientSet>;

        if $z0 == 0 goto label2;

        $r27 = virtualinvoke $r3.<org.bouncycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $r28 = new org.bouncycastle.asn1.BERSet;

        specialinvoke $r28.<org.bouncycastle.asn1.BERSet: void <init>(org.bouncycastle.asn1.DEREncodableVector)>(r9);

        $r29 = virtualinvoke $r28.<org.bouncycastle.asn1.BERSet: byte[] getEncoded()>();

        virtualinvoke $r27.<java.io.OutputStream: void write(byte[])>($r29);

        goto label3;

     label2:
        $r7 = virtualinvoke $r3.<org.bouncycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $r8 = new org.bouncycastle.asn1.DERSet;

        specialinvoke $r8.<org.bouncycastle.asn1.DERSet: void <init>(org.bouncycastle.asn1.DEREncodableVector)>(r9);

        $r10 = virtualinvoke $r8.<org.bouncycastle.asn1.DERSet: byte[] getEncoded()>();

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[])>($r10);

     label3:
        $r13 = <org.bouncycastle.cms.CMSEnvelopedHelper: org.bouncycastle.cms.CMSEnvelopedHelper INSTANCE>;

        $r14 = virtualinvoke $r13.<org.bouncycastle.cms.CMSEnvelopedHelper: javax.crypto.Cipher getSymmetricCipher(java.lang.String,java.security.Provider)>(r11, r12);

        $r16 = r5.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.security.SecureRandom rand>;

        virtualinvoke $r14.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)>(1, r15, r38, $r16);

        $r17 = new org.bouncycastle.asn1.BERSequenceGenerator;

        $r18 = virtualinvoke $r3.<org.bouncycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        specialinvoke $r17.<org.bouncycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream)>($r18);

        $r19 = <org.bouncycastle.asn1.cms.CMSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier data>;

        virtualinvoke $r17.<org.bouncycastle.asn1.BERSequenceGenerator: void addObject(org.bouncycastle.asn1.DEREncodable)>($r19);

        if r38 != null goto label4;

        r38 = virtualinvoke $r14.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>();

     label4:
        $r20 = virtualinvoke r5.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.lang.String,java.security.AlgorithmParameters)>(r11, r38);

        $r21 = virtualinvoke $r17.<org.bouncycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $r22 = virtualinvoke $r20.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: byte[] getEncoded()>();

        virtualinvoke $r21.<java.io.OutputStream: void write(byte[])>($r22);

        $r23 = virtualinvoke $r17.<org.bouncycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $i0 = r5.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: int _bufferSize>;

        $r24 = staticinvoke <org.bouncycastle.cms.CMSUtils: java.io.OutputStream createBEROctetOutputStream(java.io.OutputStream,int,boolean,int)>($r23, 0, 0, $i0);

        $r25 = new javax.crypto.CipherOutputStream;

        specialinvoke $r25.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r24, $r14);

        $r26 = new org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator$CmsEnvelopedDataOutputStream;

        specialinvoke $r26.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator$CmsEnvelopedDataOutputStream: void <init>(org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator,javax.crypto.CipherOutputStream,org.bouncycastle.asn1.BERSequenceGenerator,org.bouncycastle.asn1.BERSequenceGenerator,org.bouncycastle.asn1.BERSequenceGenerator)>(r5, $r25, $r0, $r3, $r17);

     label5:
        return $r26;

     label6:
        $r36 := @caughtexception;

        $r37 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r37.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("key invalid in message.", $r36);

        throw $r37;

     label7:
        $r34 := @caughtexception;

        $r35 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r35.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("required padding not supported.", $r34);

        throw $r35;

     label8:
        $r32 := @caughtexception;

        $r33 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r33.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("algorithm parameters invalid.", $r32);

        throw $r33;

     label9:
        $r30 := @caughtexception;

        $r31 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r31.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("exception decoding algorithm parameters.", $r30);

        throw $r31;

        catch java.security.InvalidKeyException from label1 to label5 with label6;
        catch javax.crypto.NoSuchPaddingException from label1 to label5 with label7;
        catch java.security.InvalidAlgorithmParameterException from label1 to label5 with label8;
        catch java.io.IOException from label1 to label5 with label9;
    }

    public java.io.OutputStream open(java.io.OutputStream, java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, org.bouncycastle.cms.CMSException, java.io.IOException
    {
        java.io.OutputStream r1, $r5;
        org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator r0;
        java.lang.String r2, r3;
        java.security.Provider $r4;

        r0 := @this: org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = staticinvoke <org.bouncycastle.cms.CMSUtils: java.security.Provider getProvider(java.lang.String)>(r3);

        $r5 = virtualinvoke r0.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.io.OutputStream open(java.io.OutputStream,java.lang.String,java.security.Provider)>(r1, r2, $r4);

        return $r5;
    }

    public java.io.OutputStream open(java.io.OutputStream, java.lang.String, java.security.Provider) throws java.security.NoSuchAlgorithmException, org.bouncycastle.cms.CMSException, java.io.IOException
    {
        java.io.OutputStream r6, $r7;
        org.bouncycastle.cms.CMSEnvelopedHelper $r2;
        javax.crypto.KeyGenerator $r3;
        java.security.Provider r1;
        java.security.SecureRandom $r5;
        org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator r4;
        java.lang.String r0;

        r4 := @this: org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator;

        r6 := @parameter0: java.io.OutputStream;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.security.Provider;

        $r2 = <org.bouncycastle.cms.CMSEnvelopedHelper: org.bouncycastle.cms.CMSEnvelopedHelper INSTANCE>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.cms.CMSEnvelopedHelper: javax.crypto.KeyGenerator createSymmetricKeyGenerator(java.lang.String,java.security.Provider)>(r0, r1);

        $r5 = r4.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.security.SecureRandom rand>;

        virtualinvoke $r3.<javax.crypto.KeyGenerator: void init(java.security.SecureRandom)>($r5);

        $r7 = specialinvoke r4.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.io.OutputStream open(java.io.OutputStream,java.lang.String,javax.crypto.KeyGenerator,java.security.Provider)>(r6, r0, $r3, r1);

        return $r7;
    }

    public java.io.OutputStream open(java.io.OutputStream, java.lang.String, int, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, org.bouncycastle.cms.CMSException, java.io.IOException
    {
        java.io.OutputStream r1, $r5;
        org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator r0;
        int i0;
        java.lang.String r2, r3;
        java.security.Provider $r4;

        r0 := @this: org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        $r4 = staticinvoke <org.bouncycastle.cms.CMSUtils: java.security.Provider getProvider(java.lang.String)>(r3);

        $r5 = virtualinvoke r0.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.io.OutputStream open(java.io.OutputStream,java.lang.String,int,java.security.Provider)>(r1, r2, i0, $r4);

        return $r5;
    }

    public java.io.OutputStream open(java.io.OutputStream, java.lang.String, int, java.security.Provider) throws java.security.NoSuchAlgorithmException, org.bouncycastle.cms.CMSException, java.io.IOException
    {
        java.io.OutputStream r6, $r7;
        org.bouncycastle.cms.CMSEnvelopedHelper $r2;
        javax.crypto.KeyGenerator $r3;
        java.security.Provider r1;
        java.security.SecureRandom $r5;
        org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator r4;
        int i0;
        java.lang.String r0;

        r4 := @this: org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator;

        r6 := @parameter0: java.io.OutputStream;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r1 := @parameter3: java.security.Provider;

        $r2 = <org.bouncycastle.cms.CMSEnvelopedHelper: org.bouncycastle.cms.CMSEnvelopedHelper INSTANCE>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.cms.CMSEnvelopedHelper: javax.crypto.KeyGenerator createSymmetricKeyGenerator(java.lang.String,java.security.Provider)>(r0, r1);

        $r5 = r4.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.security.SecureRandom rand>;

        virtualinvoke $r3.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(i0, $r5);

        $r7 = specialinvoke r4.<org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator: java.io.OutputStream open(java.io.OutputStream,java.lang.String,javax.crypto.KeyGenerator,java.security.Provider)>(r6, r0, $r3, r1);

        return $r7;
    }
}
