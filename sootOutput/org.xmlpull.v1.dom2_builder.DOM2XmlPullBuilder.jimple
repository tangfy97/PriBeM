public class org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder extends java.lang.Object
{

    public void <init>()
    {
        org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder r0;

        r0 := @this: org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected org.w3c.dom.Document newDoc() throws org.xmlpull.v1.XmlPullParserException
    {
        org.w3c.dom.Document $r2;
        java.lang.StringBuffer $r5, $r6, $r7, $r11, $r12, $r13;
        java.lang.String $r8, $r14;
        org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder r15;
        javax.xml.parsers.FactoryConfigurationError $r9;
        org.xmlpull.v1.XmlPullParserException $r4, $r10;
        javax.xml.parsers.ParserConfigurationException $r3;
        javax.xml.parsers.DocumentBuilder $r1;
        javax.xml.parsers.DocumentBuilderFactory $r0;

        r15 := @this: org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder;

     label1:
        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.DOMImplementation getDOMImplementation()>();

        $r2 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

     label2:
        return $r2;

     label3:
        $r9 := @caughtexception;

        $r10 = new org.xmlpull.v1.XmlPullParserException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not configure factory JAXP DocumentBuilderFactory: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r14, null, $r9);

        throw $r10;

     label4:
        $r3 := @caughtexception;

        $r4 = new org.xmlpull.v1.XmlPullParserException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not configure parser JAXP DocumentBuilderFactory: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r8, null, $r3);

        throw $r4;

        catch javax.xml.parsers.FactoryConfigurationError from label1 to label2 with label3;
        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label4;
    }

    protected org.xmlpull.v1.XmlPullParser newParser() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder r2;
        org.xmlpull.v1.XmlPullParserFactory $r0;
        org.xmlpull.v1.XmlPullParser $r1;

        r2 := @this: org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder;

        $r0 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r1 = virtualinvoke $r0.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        return $r1;
    }

    public org.w3c.dom.Element parse(java.io.Reader) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder r0;
        org.w3c.dom.Element $r3;
        org.w3c.dom.Document $r1;
        java.io.Reader r2;

        r0 := @this: org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder;

        r2 := @parameter0: java.io.Reader;

        $r1 = virtualinvoke r0.<org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder: org.w3c.dom.Document newDoc()>();

        $r3 = virtualinvoke r0.<org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder: org.w3c.dom.Element parse(java.io.Reader,org.w3c.dom.Document)>(r2, $r1);

        return $r3;
    }

    public org.w3c.dom.Element parse(java.io.Reader, org.w3c.dom.Document) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder r0;
        org.w3c.dom.Element $r4;
        org.w3c.dom.Document r3;
        java.io.Reader r2;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder;

        r2 := @parameter0: java.io.Reader;

        r3 := @parameter1: org.w3c.dom.Document;

        $r1 = virtualinvoke r0.<org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder: org.xmlpull.v1.XmlPullParser newParser()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", 1);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r2);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r4 = virtualinvoke r0.<org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder: org.w3c.dom.Element parse(org.xmlpull.v1.XmlPullParser,org.w3c.dom.Document)>($r1, r3);

        return $r4;
    }

    public org.w3c.dom.Element parse(org.xmlpull.v1.XmlPullParser, org.w3c.dom.Document) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder r0;
        org.w3c.dom.Element $r3;
        org.w3c.dom.Document r2;
        org.xmlpull.v1.XmlPullParser r1;

        r0 := @this: org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: org.w3c.dom.Document;

        $r3 = virtualinvoke r0.<org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder: org.w3c.dom.Element parseSubTree(org.xmlpull.v1.XmlPullParser,org.w3c.dom.Document)>(r1, r2);

        return $r3;
    }

    public org.w3c.dom.Element parseSubTree(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder r0;
        org.w3c.dom.Element $r3;
        org.w3c.dom.Document $r1;
        org.xmlpull.v1.XmlPullParser r2;

        r0 := @this: org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder;

        r2 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 = virtualinvoke r0.<org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder: org.w3c.dom.Document newDoc()>();

        $r3 = virtualinvoke r0.<org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder: org.w3c.dom.Element parseSubTree(org.xmlpull.v1.XmlPullParser,org.w3c.dom.Document)>(r2, $r1);

        return $r3;
    }

    public org.w3c.dom.Element parseSubTree(org.xmlpull.v1.XmlPullParser, org.w3c.dom.Document) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder r4;
        org.w3c.dom.Element $r3;
        org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder$BuildProcess $r0;
        org.w3c.dom.Document r2;
        org.xmlpull.v1.XmlPullParser r1;

        r4 := @this: org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: org.w3c.dom.Document;

        $r0 = new org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder$BuildProcess;

        specialinvoke $r0.<org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder$BuildProcess: void <init>(org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder$1)>(null);

        $r3 = virtualinvoke $r0.<org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder$BuildProcess: org.w3c.dom.Element parseSubTree(org.xmlpull.v1.XmlPullParser,org.w3c.dom.Document)>(r1, r2);

        return $r3;
    }

    private static void assertEquals(java.lang.String, java.lang.String)
    {
        java.lang.RuntimeException $r2;
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.String r0, r1, $r9;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

     label1:
        if r0 != null goto label3;

        if r1 != null goto label3;

     label2:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expected \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' but got \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r2;

     label3:
        return;
    }

    private static void assertNotNull(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("expected no null value");

        throw $r1;

     label1:
        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        return;
    }
}
