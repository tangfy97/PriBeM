public class org.codehaus.groovy.tools.StringHelper extends java.lang.Object
{
    private static final char SPACE;
    private static final char SINGLE_QUOTE;
    private static final char DOUBLE_QUOTE;

    public void <init>()
    {
        org.codehaus.groovy.tools.StringHelper r0;

        r0 := @this: org.codehaus.groovy.tools.StringHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String[] tokenizeUnquoted(java.lang.String)
    {
        java.lang.Object[] $r3;
        java.lang.String[] $r2, $r4, $r5;
        int $i0, $i1, $i2, i3;
        java.lang.String r1, $r6;
        java.util.LinkedList $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        i3 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i3 >= $i0 goto label3;

        $i1 = staticinvoke <org.codehaus.groovy.tools.StringHelper: int skipWhitespace(java.lang.String,int)>(r1, i3);

        $i2 = staticinvoke <org.codehaus.groovy.tools.StringHelper: int scanToken(java.lang.String,int)>(r1, $i1);

        if $i1 >= $i2 goto label2;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        i3 = $i2;

        goto label1;

     label3:
        $r2 = newarray (java.lang.String)[0];

        $r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (java.lang.String[]) $r3;

        $r5 = (java.lang.String[]) $r4;

        return $r5;
    }

    private static int scanToken(java.lang.String, int)
    {
        char $c2;
        int i0, $i1, i3, $i4, $i5, $i6;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i3 = i0;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i1 goto label5;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c2;

        if 32 != $i4 goto label2;

        goto label5;

     label2:
        i3 = i3 + 1;

        $i5 = (int) $c2;

        if 39 != $i5 goto label3;

        i3 = staticinvoke <org.codehaus.groovy.tools.StringHelper: int scanQuoted(java.lang.String,int,char)>(r0, i3, 39);

        goto label4;

     label3:
        $i6 = (int) $c2;

        if 34 != $i6 goto label4;

        i3 = staticinvoke <org.codehaus.groovy.tools.StringHelper: int scanQuoted(java.lang.String,int,char)>(r0, i3, 34);

     label4:
        goto label1;

     label5:
        return i3;
    }

    private static int scanQuoted(java.lang.String, int, char)
    {
        char $c3, c4;
        int i0, $i1, $i2, i5, $i6, $i7;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        c4 := @parameter2: char;

        i5 = i0;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i5 >= $i1 goto label3;

        $i2 = i5;

        i5 = i5 + 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i6 = (int) c4;

        $i7 = (int) $c3;

        if $i6 != $i7 goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        return i5;
    }

    private static int skipWhitespace(java.lang.String, int)
    {
        int i0, $i1, i3, $i4;
        char $c2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i3 = i0;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i1 goto label3;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c2;

        if 32 == $i4 goto label2;

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i3;
    }

    public static void <clinit>()
    {
        <org.codehaus.groovy.tools.StringHelper: char DOUBLE_QUOTE> = 34;

        <org.codehaus.groovy.tools.StringHelper: char SINGLE_QUOTE> = 39;

        <org.codehaus.groovy.tools.StringHelper: char SPACE> = 32;

        return;
    }
}
