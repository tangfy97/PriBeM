class org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream extends java.io.FilterOutputStream implements org.apache.poi.poifs.filesystem.POIFSWriterListener
{
    private long _pos;
    private final byte[] _chunk;
    private javax.crypto.Cipher _cipher;
    private final java.io.File fileOut;
    protected final org.apache.poi.poifs.filesystem.DirectoryNode dir;
    final org.apache.poi.poifs.crypt.agile.AgileEncryptor this$0;

    public void <init>(org.apache.poi.poifs.crypt.agile.AgileEncryptor, org.apache.poi.poifs.filesystem.DirectoryNode) throws java.io.IOException
    {
        byte[] $r2;
        org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder $r7;
        org.apache.poi.poifs.crypt.ChainingMode $r11;
        java.io.FileOutputStream $r4;
        javax.crypto.Cipher $r12;
        java.io.File $r3, $r5;
        org.apache.poi.poifs.filesystem.DirectoryNode r6;
        org.apache.poi.poifs.crypt.agile.AgileEncryptor r1;
        org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream r0;
        javax.crypto.SecretKey $r9;
        org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader $r8;
        org.apache.poi.poifs.crypt.CipherAlgorithm $r10;

        r0 := @this: org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream;

        r1 := @parameter0: org.apache.poi.poifs.crypt.agile.AgileEncryptor;

        r6 := @parameter1: org.apache.poi.poifs.filesystem.DirectoryNode;

        r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: org.apache.poi.poifs.crypt.agile.AgileEncryptor this$0> = r1;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(null);

        r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: long _pos> = 0L;

        $r2 = newarray (byte)[4096];

        r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: byte[] _chunk> = $r2;

        $r3 = staticinvoke <org.apache.poi.util.TempFile: java.io.File createTempFile(java.lang.String,java.lang.String)>("encrypted_package", "crypt");

        r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: java.io.File fileOut> = $r3;

        $r4 = new java.io.FileOutputStream;

        $r5 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: java.io.File fileOut>;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.io.File)>($r5);

        r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: java.io.OutputStream out> = $r4;

        r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: org.apache.poi.poifs.filesystem.DirectoryNode dir> = r6;

        $r7 = staticinvoke <org.apache.poi.poifs.crypt.agile.AgileEncryptor: org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder access$000(org.apache.poi.poifs.crypt.agile.AgileEncryptor)>(r1);

        $r8 = virtualinvoke $r7.<org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder: org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader getHeader()>();

        $r9 = virtualinvoke r1.<org.apache.poi.poifs.crypt.agile.AgileEncryptor: javax.crypto.SecretKey getSecretKey()>();

        $r10 = virtualinvoke $r8.<org.apache.poi.poifs.crypt.EncryptionHeader: org.apache.poi.poifs.crypt.CipherAlgorithm getCipherAlgorithm()>();

        $r11 = virtualinvoke $r8.<org.apache.poi.poifs.crypt.EncryptionHeader: org.apache.poi.poifs.crypt.ChainingMode getChainingMode()>();

        $r12 = staticinvoke <org.apache.poi.poifs.crypt.CryptoFunctions: javax.crypto.Cipher getCipher(javax.crypto.SecretKey,org.apache.poi.poifs.crypt.CipherAlgorithm,org.apache.poi.poifs.crypt.ChainingMode,byte[],int)>($r9, $r10, $r11, null, 1);

        r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: javax.crypto.Cipher _cipher> = $r12;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        byte[] $r1;
        byte $b1;
        int i0;
        org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream r0;

        r0 := @this: org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream;

        i0 := @parameter0: int;

        $r1 = newarray (byte)[1];

        $b1 = (byte) i0;

        $r1[0] = $b1;

        virtualinvoke r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: void write(byte[])>($r1);

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        int $i0;
        byte[] r1;
        org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream r0;

        r0 := @this: org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        byte[] r1, $r3;
        long $l2, $l3, $l7, $l8, $l9, $l10, $l11;
        byte $b12;
        int $i0, $i1, i4, $i5, $i6, i13, i14;
        java.io.IOException $r0;
        org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream r2;

        r2 := @this: org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream;

        r1 := @parameter0: byte[];

        i13 := @parameter1: int;

        i14 := @parameter2: int;

        if i14 != 0 goto label1;

        return;

     label1:
        if i14 < 0 goto label2;

        $i1 = lengthof r1;

        $i0 = i13 + i14;

        if $i1 >= $i0 goto label3;

     label2:
        $r0 = new java.io.IOException;

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>("not enough bytes in your input buffer");

        throw $r0;

     label3:
        if i14 <= 0 goto label5;

        $l2 = r2.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: long _pos>;

        $l3 = $l2 & 4095L;

        i4 = (int) $l3;

        $i5 = 4096 - i4;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i5, i14);

        $r3 = r2.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: byte[] _chunk>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i13, $r3, i4, $i6);

        $l8 = r2.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: long _pos>;

        $l7 = (long) $i6;

        $l9 = $l8 + $l7;

        r2.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: long _pos> = $l9;

        i13 = i13 + $i6;

        i14 = i14 - $i6;

        $l10 = r2.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: long _pos>;

        $l11 = $l10 & 4095L;

        $b12 = $l11 cmp 0L;

        if $b12 != 0 goto label4;

        specialinvoke r2.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: void writeChunk()>();

     label4:
        goto label3;

     label5:
        return;
    }

    private void writeChunk() throws java.io.IOException
    {
        byte[] $r10, $r11, $r18, $r19, $r21, $r26, $r27;
        org.apache.poi.poifs.crypt.ChainingMode $r7;
        java.security.GeneralSecurityException $r28;
        java.security.spec.AlgorithmParameterSpec r32;
        org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder $r2;
        javax.crypto.SecretKey $r5, $r17, $r25;
        java.lang.Throwable $r30;
        long $l1, $l2, $l3, $l4;
        javax.crypto.Cipher $r8, $r16, $r20;
        javax.crypto.spec.IvParameterSpec $r34;
        int $i0, $i5, $i6, $i7, i8, i9, $i11;
        org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader $r3;
        java.io.OutputStream $r22;
        java.io.IOException $r31, $r35;
        org.apache.poi.poifs.crypt.HashAlgorithm $r9;
        javax.crypto.spec.RC2ParameterSpec $r33;
        org.apache.poi.poifs.crypt.agile.AgileEncryptor $r1, $r4, $r15, $r24;
        org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream r0;
        org.apache.poi.poifs.crypt.CipherAlgorithm $r6, $r12, $r13;

        r0 := @this: org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream;

        $r1 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: org.apache.poi.poifs.crypt.agile.AgileEncryptor this$0>;

        $r2 = staticinvoke <org.apache.poi.poifs.crypt.agile.AgileEncryptor: org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder access$000(org.apache.poi.poifs.crypt.agile.AgileEncryptor)>($r1);

        $r3 = virtualinvoke $r2.<org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder: org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader getHeader()>();

        $i0 = virtualinvoke $r3.<org.apache.poi.poifs.crypt.EncryptionHeader: int getBlockSize()>();

        $l1 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: long _pos>;

        $l2 = $l1 & 4095L;

        i8 = (int) $l2;

        $l3 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: long _pos>;

        $l4 = $l3 >> 12;

        i9 = (int) $l4;

        if i8 != 0 goto label1;

        $i11 = (int) -1;

        i9 = i9 + $i11;

        i8 = 4096;

        goto label2;

     label1:
        $r4 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: org.apache.poi.poifs.crypt.agile.AgileEncryptor this$0>;

        $r5 = virtualinvoke $r4.<org.apache.poi.poifs.crypt.agile.AgileEncryptor: javax.crypto.SecretKey getSecretKey()>();

        $r6 = virtualinvoke $r3.<org.apache.poi.poifs.crypt.EncryptionHeader: org.apache.poi.poifs.crypt.CipherAlgorithm getCipherAlgorithm()>();

        $r7 = virtualinvoke $r3.<org.apache.poi.poifs.crypt.EncryptionHeader: org.apache.poi.poifs.crypt.ChainingMode getChainingMode()>();

        $r8 = staticinvoke <org.apache.poi.poifs.crypt.CryptoFunctions: javax.crypto.Cipher getCipher(javax.crypto.SecretKey,org.apache.poi.poifs.crypt.CipherAlgorithm,org.apache.poi.poifs.crypt.ChainingMode,byte[],int,java.lang.String)>($r5, $r6, $r7, null, 1, "PKCS5Padding");

        r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: javax.crypto.Cipher _cipher> = $r8;

     label2:
        $r27 = newarray (byte)[4];

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r27, 0, i9);

        $r9 = virtualinvoke $r3.<org.apache.poi.poifs.crypt.EncryptionHeader: org.apache.poi.poifs.crypt.HashAlgorithm getHashAlgorithmEx()>();

        $r10 = virtualinvoke $r3.<org.apache.poi.poifs.crypt.EncryptionHeader: byte[] getKeySalt()>();

        $r11 = staticinvoke <org.apache.poi.poifs.crypt.CryptoFunctions: byte[] generateIv(org.apache.poi.poifs.crypt.HashAlgorithm,byte[],byte[],int)>($r9, $r10, $r27, $i0);

     label3:
        $r12 = virtualinvoke $r3.<org.apache.poi.poifs.crypt.EncryptionHeader: org.apache.poi.poifs.crypt.CipherAlgorithm getCipherAlgorithm()>();

        $r13 = <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm rc2>;

        if $r12 != $r13 goto label4;

        $r33 = new javax.crypto.spec.RC2ParameterSpec;

        $r24 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: org.apache.poi.poifs.crypt.agile.AgileEncryptor this$0>;

        $r25 = virtualinvoke $r24.<org.apache.poi.poifs.crypt.agile.AgileEncryptor: javax.crypto.SecretKey getSecretKey()>();

        $r26 = interfaceinvoke $r25.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $i6 = lengthof $r26;

        $i7 = $i6 * 8;

        specialinvoke $r33.<javax.crypto.spec.RC2ParameterSpec: void <init>(int,byte[])>($i7, $r11);

        r32 = $r33;

        goto label5;

     label4:
        $r34 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r34.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r11);

        r32 = $r34;

     label5:
        $r16 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: javax.crypto.Cipher _cipher>;

        $r15 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: org.apache.poi.poifs.crypt.agile.AgileEncryptor this$0>;

        $r17 = virtualinvoke $r15.<org.apache.poi.poifs.crypt.agile.AgileEncryptor: javax.crypto.SecretKey getSecretKey()>();

        virtualinvoke $r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r17, r32);

        $r20 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: javax.crypto.Cipher _cipher>;

        $r19 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: byte[] _chunk>;

        $r18 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: byte[] _chunk>;

        $i5 = virtualinvoke $r20.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r19, 0, i8, $r18);

        $r22 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: java.io.OutputStream out>;

        $r21 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: byte[] _chunk>;

        virtualinvoke $r22.<java.io.OutputStream: void write(byte[],int,int)>($r21, 0, $i5);

     label6:
        goto label8;

     label7:
        $r28 := @caughtexception;

        $r35 = new java.io.IOException;

        specialinvoke $r35.<java.io.IOException: void <init>()>();

        $r30 = virtualinvoke $r35.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>($r28);

        $r31 = (java.io.IOException) $r30;

        throw $r31;

     label8:
        return;

        catch java.security.GeneralSecurityException from label3 to label6 with label7;
    }

    public void close() throws java.io.IOException
    {
        org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream r0;

        r0 := @this: org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream;

        specialinvoke r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: void writeChunk()>();

        specialinvoke r0.<java.io.FilterOutputStream: void close()>();

        virtualinvoke r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: void writeToPOIFS()>();

        return;
    }

    void writeToPOIFS() throws java.io.IOException
    {
        byte[] r2, $r12, $r14, $r15, $r16, $r22, $r23;
        org.apache.poi.poifs.crypt.ChainingMode $r20;
        java.security.GeneralSecurityException $r30;
        org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder $r8;
        javax.crypto.Mac $r4, $r11, $r29;
        org.apache.poi.poifs.filesystem.DirectoryNode $r1, $r24, $r27;
        javax.crypto.SecretKey $r18;
        long $l0, $l6, $l7;
        javax.crypto.Cipher $r21;
        int $i1, $i2, $i3, $i4, $i5, i8, $i10;
        org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader $r9;
        java.io.FileInputStream $r32;
        org.apache.poi.poifs.crypt.HashAlgorithm $r13;
        java.io.File $r6, $r26;
        org.apache.poi.EncryptedDocumentException $r33;
        org.apache.poi.poifs.crypt.agile.AgileEncryptor $r3, $r7, $r10, $r17, $r25, $r28;
        org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream r0;
        org.apache.poi.poifs.crypt.CipherAlgorithm $r19;

        r0 := @this: org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream;

        $r1 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: org.apache.poi.poifs.filesystem.DirectoryNode dir>;

        staticinvoke <org.apache.poi.poifs.crypt.DataSpaceMapUtils: void addDefaultDataSpace(org.apache.poi.poifs.filesystem.DirectoryEntry)>($r1);

        r2 = newarray (byte)[4096];

        $l0 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: long _pos>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putLong(byte[],int,long)>(r2, 0, $l0);

        $r3 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: org.apache.poi.poifs.crypt.agile.AgileEncryptor this$0>;

        $r4 = staticinvoke <org.apache.poi.poifs.crypt.agile.AgileEncryptor: javax.crypto.Mac access$100(org.apache.poi.poifs.crypt.agile.AgileEncryptor)>($r3);

        virtualinvoke $r4.<javax.crypto.Mac: void update(byte[],int,int)>(r2, 0, 8);

        $r32 = new java.io.FileInputStream;

        $r6 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: java.io.File fileOut>;

        specialinvoke $r32.<java.io.FileInputStream: void <init>(java.io.File)>($r6);

     label1:
        $i1 = virtualinvoke $r32.<java.io.InputStream: int read(byte[])>(r2);

        $i10 = (int) -1;

        if $i1 == $i10 goto label2;

        $r28 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: org.apache.poi.poifs.crypt.agile.AgileEncryptor this$0>;

        $r29 = staticinvoke <org.apache.poi.poifs.crypt.agile.AgileEncryptor: javax.crypto.Mac access$100(org.apache.poi.poifs.crypt.agile.AgileEncryptor)>($r28);

        virtualinvoke $r29.<javax.crypto.Mac: void update(byte[],int,int)>(r2, 0, $i1);

        goto label1;

     label2:
        virtualinvoke $r32.<java.io.InputStream: void close()>();

        $r7 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: org.apache.poi.poifs.crypt.agile.AgileEncryptor this$0>;

        $r8 = staticinvoke <org.apache.poi.poifs.crypt.agile.AgileEncryptor: org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder access$000(org.apache.poi.poifs.crypt.agile.AgileEncryptor)>($r7);

        $r9 = virtualinvoke $r8.<org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder: org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader getHeader()>();

        $i2 = virtualinvoke $r9.<org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader: int getBlockSize()>();

        $r10 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: org.apache.poi.poifs.crypt.agile.AgileEncryptor this$0>;

        $r11 = staticinvoke <org.apache.poi.poifs.crypt.agile.AgileEncryptor: javax.crypto.Mac access$100(org.apache.poi.poifs.crypt.agile.AgileEncryptor)>($r10);

        $r12 = virtualinvoke $r11.<javax.crypto.Mac: byte[] doFinal()>();

        $r13 = virtualinvoke $r9.<org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader: org.apache.poi.poifs.crypt.HashAlgorithm getHashAlgorithmEx()>();

        $r14 = virtualinvoke $r9.<org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader: byte[] getKeySalt()>();

        $r15 = <org.apache.poi.poifs.crypt.agile.AgileDecryptor: byte[] kIntegrityValueBlock>;

        $i3 = virtualinvoke $r9.<org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader: int getBlockSize()>();

        $r16 = staticinvoke <org.apache.poi.poifs.crypt.CryptoFunctions: byte[] generateIv(org.apache.poi.poifs.crypt.HashAlgorithm,byte[],byte[],int)>($r13, $r14, $r15, $i3);

        $r17 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: org.apache.poi.poifs.crypt.agile.AgileEncryptor this$0>;

        $r18 = virtualinvoke $r17.<org.apache.poi.poifs.crypt.agile.AgileEncryptor: javax.crypto.SecretKey getSecretKey()>();

        $r19 = virtualinvoke $r9.<org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader: org.apache.poi.poifs.crypt.CipherAlgorithm getCipherAlgorithm()>();

        $r20 = virtualinvoke $r9.<org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader: org.apache.poi.poifs.crypt.ChainingMode getChainingMode()>();

        $r21 = staticinvoke <org.apache.poi.poifs.crypt.CryptoFunctions: javax.crypto.Cipher getCipher(javax.crypto.SecretKey,org.apache.poi.poifs.crypt.CipherAlgorithm,org.apache.poi.poifs.crypt.ChainingMode,byte[],int)>($r18, $r19, $r20, $r16, 1);

     label3:
        $i4 = lengthof $r12;

        $i5 = staticinvoke <org.apache.poi.poifs.crypt.agile.AgileDecryptor: int getNextBlockSize(int,int)>($i4, $i2);

        $r22 = staticinvoke <org.apache.poi.poifs.crypt.CryptoFunctions: byte[] getBlock0(byte[],int)>($r12, $i5);

        $r23 = virtualinvoke $r21.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r22);

        virtualinvoke $r9.<org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader: void setEncryptedHmacValue(byte[])>($r23);

     label4:
        goto label6;

     label5:
        $r30 := @caughtexception;

        $r33 = new org.apache.poi.EncryptedDocumentException;

        specialinvoke $r33.<org.apache.poi.EncryptedDocumentException: void <init>(java.lang.Throwable)>($r30);

        throw $r33;

     label6:
        $r25 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: org.apache.poi.poifs.crypt.agile.AgileEncryptor this$0>;

        $r24 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: org.apache.poi.poifs.filesystem.DirectoryNode dir>;

        virtualinvoke $r25.<org.apache.poi.poifs.crypt.agile.AgileEncryptor: void createEncryptionInfoEntry(org.apache.poi.poifs.filesystem.DirectoryNode)>($r24);

        $r26 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: java.io.File fileOut>;

        $l6 = virtualinvoke $r26.<java.io.File: long length()>();

        $l7 = $l6 + 8L;

        i8 = (int) $l7;

        $r27 = r0.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: org.apache.poi.poifs.filesystem.DirectoryNode dir>;

        virtualinvoke $r27.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.DocumentEntry createDocument(java.lang.String,int,org.apache.poi.poifs.filesystem.POIFSWriterListener)>("EncryptedPackage", i8, r0);

        return;

        catch java.security.GeneralSecurityException from label3 to label4 with label5;
    }

    public void processPOIFSWriterEvent(org.apache.poi.poifs.filesystem.POIFSWriterEvent)
    {
        org.apache.poi.util.LittleEndianOutputStream $r0;
        org.apache.poi.poifs.filesystem.DocumentOutputStream $r2;
        long $l0;
        java.io.IOException $r7;
        org.apache.poi.poifs.filesystem.POIFSWriterEvent r1;
        java.io.FileInputStream $r4;
        java.io.File $r5, $r6;
        org.apache.poi.EncryptedDocumentException $r8;
        org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream r3;

        r3 := @this: org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.POIFSWriterEvent;

     label1:
        $r0 = new org.apache.poi.util.LittleEndianOutputStream;

        $r2 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.POIFSWriterEvent: org.apache.poi.poifs.filesystem.DocumentOutputStream getStream()>();

        specialinvoke $r0.<org.apache.poi.util.LittleEndianOutputStream: void <init>(java.io.OutputStream)>($r2);

        $l0 = r3.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: long _pos>;

        virtualinvoke $r0.<org.apache.poi.util.LittleEndianOutputStream: void writeLong(long)>($l0);

        $r4 = new java.io.FileInputStream;

        $r5 = r3.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: java.io.File fileOut>;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r5);

        staticinvoke <org.apache.poi.util.IOUtils: void copy(java.io.InputStream,java.io.OutputStream)>($r4, $r0);

        virtualinvoke $r4.<java.io.FileInputStream: void close()>();

        $r6 = r3.<org.apache.poi.poifs.crypt.agile.AgileEncryptor$ChunkedCipherOutputStream: java.io.File fileOut>;

        virtualinvoke $r6.<java.io.File: boolean delete()>();

        virtualinvoke $r0.<org.apache.poi.util.LittleEndianOutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new org.apache.poi.EncryptedDocumentException;

        specialinvoke $r8.<org.apache.poi.EncryptedDocumentException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
