class org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser extends org.apache.xml.dtm.DTMAxisTraverser
{
    private final org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0;

    private void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        specialinvoke r0.<org.apache.xml.dtm.DTMAxisTraverser: void <init>()>();

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0> = r1;

        return;
    }

    public int next(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1;
        int i0, $i1, i2;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i1 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int getParent(int)>(i0);

        return $i1;
    }

    public int next(int, int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r4, $r6;
        int $i0, $i1, i2, $i3, i4, i5, i6, $i8, $i10;
        org.apache.xml.utils.SuballocatedIntVector $r3, $r5;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser;

        i4 := @parameter0: int;

        i5 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i6 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i5);

        goto label2;

     label1:
        $r4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r5 = $r4.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.utils.SuballocatedIntVector m_exptype>;

        $i1 = virtualinvoke $r5.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>($i0);

        if $i1 != i2 goto label2;

        $r6 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i3 = virtualinvoke $r6.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>($i0);

        return $i3;

     label2:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r3 = $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.utils.SuballocatedIntVector m_parent>;

        $i0 = virtualinvoke $r3.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i6);

        i6 = $i0;

        $i8 = (int) -1;

        if $i8 != $i0 goto label1;

        $i10 = (int) -1;

        return $i10;
    }

    void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers, org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1 r2;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r2 := @parameter1: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)>(r1);

        return;
    }
}
