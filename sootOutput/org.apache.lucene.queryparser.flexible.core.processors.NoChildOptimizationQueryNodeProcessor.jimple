public class org.apache.lucene.queryparser.flexible.core.processors.NoChildOptimizationQueryNodeProcessor extends org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl
{

    public void <init>()
    {
        org.apache.lucene.queryparser.flexible.core.processors.NoChildOptimizationQueryNodeProcessor r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.NoChildOptimizationQueryNodeProcessor;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl: void <init>()>();

        return;
    }

    protected org.apache.lucene.queryparser.flexible.core.nodes.QueryNode postProcessNode(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        java.util.Iterator $r1;
        org.apache.lucene.queryparser.flexible.core.nodes.MatchNoDocsQueryNode $r6;
        org.apache.lucene.queryparser.flexible.core.processors.NoChildOptimizationQueryNodeProcessor r4;
        java.util.List $r5;
        int $i0;
        java.lang.Object $r2;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r0, r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r4 := @this: org.apache.lucene.queryparser.flexible.core.processors.NoChildOptimizationQueryNodeProcessor;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        $z0 = r0 instanceof org.apache.lucene.queryparser.flexible.core.nodes.BooleanQueryNode;

        if $z0 != 0 goto label1;

        $z3 = r0 instanceof org.apache.lucene.queryparser.flexible.core.nodes.BoostQueryNode;

        if $z3 != 0 goto label1;

        $z4 = r0 instanceof org.apache.lucene.queryparser.flexible.core.nodes.TokenizedPhraseQueryNode;

        if $z4 != 0 goto label1;

        $z5 = r0 instanceof org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode;

        if $z5 == 0 goto label5;

     label1:
        $r5 = interfaceinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNode: java.util.List getChildren()>();

        if $r5 == null goto label4;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 <= 0 goto label4;

        $r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) $r2;

        $z2 = r3 instanceof org.apache.lucene.queryparser.flexible.core.nodes.DeletedQueryNode;

        if $z2 != 0 goto label3;

        return r0;

     label3:
        goto label2;

     label4:
        $r6 = new org.apache.lucene.queryparser.flexible.core.nodes.MatchNoDocsQueryNode;

        specialinvoke $r6.<org.apache.lucene.queryparser.flexible.core.nodes.MatchNoDocsQueryNode: void <init>()>();

        return $r6;

     label5:
        return r0;
    }

    protected org.apache.lucene.queryparser.flexible.core.nodes.QueryNode preProcessNode(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r0;
        org.apache.lucene.queryparser.flexible.core.processors.NoChildOptimizationQueryNodeProcessor r1;

        r1 := @this: org.apache.lucene.queryparser.flexible.core.processors.NoChildOptimizationQueryNodeProcessor;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        return r0;
    }

    protected java.util.List setChildrenOrder(java.util.List) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        java.util.List r0;
        org.apache.lucene.queryparser.flexible.core.processors.NoChildOptimizationQueryNodeProcessor r1;

        r1 := @this: org.apache.lucene.queryparser.flexible.core.processors.NoChildOptimizationQueryNodeProcessor;

        r0 := @parameter0: java.util.List;

        return r0;
    }
}
