public interface  org.apache.batik.css.engine.value.ValueManager extends java.lang.Object
{

    public abstract java.lang.String getPropertyName();

    public abstract boolean isInheritedProperty();

    public abstract boolean isAnimatableProperty();

    public abstract boolean isAdditiveProperty();

    public abstract int getPropertyType();

    public abstract org.apache.batik.css.engine.value.Value getDefaultValue();

    public abstract org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit, org.apache.batik.css.engine.CSSEngine) throws org.w3c.dom.DOMException;

    public abstract org.apache.batik.css.engine.value.Value createFloatValue(short, float) throws org.w3c.dom.DOMException;

    public abstract org.apache.batik.css.engine.value.Value createStringValue(short, java.lang.String, org.apache.batik.css.engine.CSSEngine) throws org.w3c.dom.DOMException;

    public abstract org.apache.batik.css.engine.value.Value computeValue(org.apache.batik.css.engine.CSSStylableElement, java.lang.String, org.apache.batik.css.engine.CSSEngine, int, org.apache.batik.css.engine.StyleMap, org.apache.batik.css.engine.value.Value);
}
