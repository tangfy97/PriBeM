final class org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber extends java.lang.Object implements org.springframework.core.convert.converter.Converter
{
    private final java.lang.Class targetType;

    public void <init>(java.lang.Class)
    {
        org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber r0;
        java.lang.Class r1;

        r0 := @this: org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: java.lang.Class targetType> = r1;

        return;
    }

    public java.lang.Number convert(java.lang.Character)
    {
        org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber r2;
        short $s1;
        java.lang.Character r0;
        java.lang.Short $r1;
        char $c0;
        java.lang.Class $r3;
        java.lang.Number $r4;

        r2 := @this: org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber;

        r0 := @parameter0: java.lang.Character;

        $c0 = virtualinvoke r0.<java.lang.Character: char charValue()>();

        $s1 = (short) $c0;

        $r1 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = r2.<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: java.lang.Class targetType>;

        $r4 = staticinvoke <org.springframework.util.NumberUtils: java.lang.Number convertNumberToTargetClass(java.lang.Number,java.lang.Class)>($r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object convert(java.lang.Object)
    {
        org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber r0;
        java.lang.Character $r2;
        java.lang.Object r1;
        java.lang.Number $r3;

        r0 := @this: org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Character) r1;

        $r3 = virtualinvoke r0.<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: java.lang.Number convert(java.lang.Character)>($r2);

        return $r3;
    }
}
