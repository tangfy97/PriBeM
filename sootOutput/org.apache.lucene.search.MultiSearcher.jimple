public class org.apache.lucene.search.MultiSearcher extends org.apache.lucene.search.Searcher
{
    private org.apache.lucene.search.Searchable[] searchables;
    private int[] starts;
    private int maxDoc;

    public transient void <init>(org.apache.lucene.search.Searchable[]) throws java.io.IOException
    {
        int[] $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        org.apache.lucene.search.Searchable $r5;
        org.apache.lucene.search.Searchable[] r1;
        org.apache.lucene.search.MultiSearcher r0;

        r0 := @this: org.apache.lucene.search.MultiSearcher;

        r1 := @parameter0: org.apache.lucene.search.Searchable[];

        specialinvoke r0.<org.apache.lucene.search.Searcher: void <init>()>();

        r0.<org.apache.lucene.search.MultiSearcher: int maxDoc> = 0;

        r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables> = r1;

        $i0 = lengthof r1;

        $i1 = $i0 + 1;

        $r2 = newarray (int)[$i1];

        r0.<org.apache.lucene.search.MultiSearcher: int[] starts> = $r2;

        i9 = 0;

     label1:
        $i2 = lengthof r1;

        if i9 >= $i2 goto label2;

        $r4 = r0.<org.apache.lucene.search.MultiSearcher: int[] starts>;

        $i5 = r0.<org.apache.lucene.search.MultiSearcher: int maxDoc>;

        $r4[i9] = $i5;

        $i6 = r0.<org.apache.lucene.search.MultiSearcher: int maxDoc>;

        $r5 = r1[i9];

        $i7 = interfaceinvoke $r5.<org.apache.lucene.search.Searchable: int maxDoc()>();

        $i8 = $i6 + $i7;

        r0.<org.apache.lucene.search.MultiSearcher: int maxDoc> = $i8;

        i9 = i9 + 1;

        goto label1;

     label2:
        $r3 = r0.<org.apache.lucene.search.MultiSearcher: int[] starts>;

        $i4 = lengthof r1;

        $i3 = r0.<org.apache.lucene.search.MultiSearcher: int maxDoc>;

        $r3[$i4] = $i3;

        return;
    }

    public org.apache.lucene.search.Searchable[] getSearchables()
    {
        org.apache.lucene.search.Searchable[] $r1;
        org.apache.lucene.search.MultiSearcher r0;

        r0 := @this: org.apache.lucene.search.MultiSearcher;

        $r1 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        return $r1;
    }

    protected int[] getStarts()
    {
        int[] $r1;
        org.apache.lucene.search.MultiSearcher r0;

        r0 := @this: org.apache.lucene.search.MultiSearcher;

        $r1 = r0.<org.apache.lucene.search.MultiSearcher: int[] starts>;

        return $r1;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.search.Searchable[] $r1, $r2;
        int $i0, i1;
        org.apache.lucene.search.Searchable $r3;
        org.apache.lucene.search.MultiSearcher r0;

        r0 := @this: org.apache.lucene.search.MultiSearcher;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        $r3 = $r2[i1];

        interfaceinvoke $r3.<org.apache.lucene.search.Searchable: void close()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public int docFreq(org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.index.Term r3;
        org.apache.lucene.search.Searchable $r4;
        org.apache.lucene.search.Searchable[] $r1, $r2;
        int $i0, $i1, i2, i3;
        org.apache.lucene.search.MultiSearcher r0;

        r0 := @this: org.apache.lucene.search.MultiSearcher;

        r3 := @parameter0: org.apache.lucene.index.Term;

        i2 = 0;

        i3 = 0;

     label1:
        $r1 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        $i0 = lengthof $r1;

        if i3 >= $i0 goto label2;

        $r2 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        $r4 = $r2[i3];

        $i1 = interfaceinvoke $r4.<org.apache.lucene.search.Searchable: int docFreq(org.apache.lucene.index.Term)>(r3);

        i2 = i2 + $i1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }

    public org.apache.lucene.document.Document doc(int) throws org.apache.lucene.index.CorruptIndexException, java.io.IOException
    {
        org.apache.lucene.search.Searchable $r3;
        org.apache.lucene.document.Document $r4;
        org.apache.lucene.search.Searchable[] $r1;
        int[] $r2;
        int i0, $i1, $i2, $i3;
        org.apache.lucene.search.MultiSearcher r0;

        r0 := @this: org.apache.lucene.search.MultiSearcher;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.lucene.search.MultiSearcher: int subSearcher(int)>(i0);

        $r1 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        $r3 = $r1[$i1];

        $r2 = r0.<org.apache.lucene.search.MultiSearcher: int[] starts>;

        $i2 = $r2[$i1];

        $i3 = i0 - $i2;

        $r4 = interfaceinvoke $r3.<org.apache.lucene.search.Searchable: org.apache.lucene.document.Document doc(int)>($i3);

        return $r4;
    }

    public org.apache.lucene.document.Document doc(int, org.apache.lucene.document.FieldSelector) throws org.apache.lucene.index.CorruptIndexException, java.io.IOException
    {
        org.apache.lucene.document.FieldSelector r3;
        org.apache.lucene.search.Searchable $r4;
        org.apache.lucene.document.Document $r5;
        org.apache.lucene.search.Searchable[] $r1;
        int[] $r2;
        int i0, $i1, $i2, $i3;
        org.apache.lucene.search.MultiSearcher r0;

        r0 := @this: org.apache.lucene.search.MultiSearcher;

        i0 := @parameter0: int;

        r3 := @parameter1: org.apache.lucene.document.FieldSelector;

        $i1 = virtualinvoke r0.<org.apache.lucene.search.MultiSearcher: int subSearcher(int)>(i0);

        $r1 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        $r4 = $r1[$i1];

        $r2 = r0.<org.apache.lucene.search.MultiSearcher: int[] starts>;

        $i2 = $r2[$i1];

        $i3 = i0 - $i2;

        $r5 = interfaceinvoke $r4.<org.apache.lucene.search.Searchable: org.apache.lucene.document.Document doc(int,org.apache.lucene.document.FieldSelector)>($i3, r3);

        return $r5;
    }

    public int subSearcher(int)
    {
        int[] $r1;
        int i0, $i1;
        org.apache.lucene.search.MultiSearcher r0;

        r0 := @this: org.apache.lucene.search.MultiSearcher;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.MultiSearcher: int[] starts>;

        $i1 = staticinvoke <org.apache.lucene.util.ReaderUtil: int subIndex(int,int[])>(i0, $r1);

        return $i1;
    }

    public int subDoc(int)
    {
        int[] $r1;
        int i0, $i1, $i2, $i3;
        org.apache.lucene.search.MultiSearcher r0;

        r0 := @this: org.apache.lucene.search.MultiSearcher;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.MultiSearcher: int[] starts>;

        $i1 = virtualinvoke r0.<org.apache.lucene.search.MultiSearcher: int subSearcher(int)>(i0);

        $i2 = $r1[$i1];

        $i3 = i0 - $i2;

        return $i3;
    }

    public int maxDoc() throws java.io.IOException
    {
        int $i0;
        org.apache.lucene.search.MultiSearcher r0;

        r0 := @this: org.apache.lucene.search.MultiSearcher;

        $i0 = r0.<org.apache.lucene.search.MultiSearcher: int maxDoc>;

        return $i0;
    }

    public org.apache.lucene.search.TopDocs search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, int) throws java.io.IOException
    {
        org.apache.lucene.search.ScoreDoc $r3, $r6;
        org.apache.lucene.search.MultiSearcher$MultiSearcherCallableNoSort $r17;
        org.apache.lucene.search.HitQueue $r16;
        org.apache.lucene.search.Weight r9;
        int[] $r11;
        org.apache.lucene.search.ScoreDoc[] r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, $i11;
        org.apache.lucene.search.TopDocs $r14, $r18;
        org.apache.lucene.util.DummyConcurrentLock $r13;
        org.apache.lucene.search.Searchable $r12;
        org.apache.lucene.search.Filter r10;
        org.apache.lucene.search.Searchable[] $r2, $r8;
        float $f0;
        java.lang.Object $r5;
        org.apache.lucene.search.MultiSearcher r0;

        r0 := @this: org.apache.lucene.search.MultiSearcher;

        r9 := @parameter0: org.apache.lucene.search.Weight;

        r10 := @parameter1: org.apache.lucene.search.Filter;

        i6 := @parameter2: int;

        $i0 = virtualinvoke r0.<org.apache.lucene.search.MultiSearcher: int maxDoc()>();

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(i6, $i0);

        $r16 = new org.apache.lucene.search.HitQueue;

        specialinvoke $r16.<org.apache.lucene.search.HitQueue: void <init>(int,boolean)>($i1, 0);

        i7 = 0;

        i8 = 0;

     label1:
        $r2 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        $i2 = lengthof $r2;

        if i8 >= $i2 goto label2;

        $r17 = new org.apache.lucene.search.MultiSearcher$MultiSearcherCallableNoSort;

        $r13 = <org.apache.lucene.util.DummyConcurrentLock: org.apache.lucene.util.DummyConcurrentLock INSTANCE>;

        $r8 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        $r12 = $r8[i8];

        $r11 = r0.<org.apache.lucene.search.MultiSearcher: int[] starts>;

        specialinvoke $r17.<org.apache.lucene.search.MultiSearcher$MultiSearcherCallableNoSort: void <init>(java.util.concurrent.locks.Lock,org.apache.lucene.search.Searchable,org.apache.lucene.search.Weight,org.apache.lucene.search.Filter,int,org.apache.lucene.search.HitQueue,int,int[])>($r13, $r12, r9, r10, $i1, $r16, i8, $r11);

        $r14 = virtualinvoke $r17.<org.apache.lucene.search.MultiSearcher$MultiSearcherCallableNoSort: org.apache.lucene.search.TopDocs call()>();

        $i5 = $r14.<org.apache.lucene.search.TopDocs: int totalHits>;

        i7 = i7 + $i5;

        i8 = i8 + 1;

        goto label1;

     label2:
        $i3 = virtualinvoke $r16.<org.apache.lucene.search.HitQueue: int size()>();

        r15 = newarray (org.apache.lucene.search.ScoreDoc)[$i3];

        $i4 = virtualinvoke $r16.<org.apache.lucene.search.HitQueue: int size()>();

        i9 = $i4 - 1;

     label3:
        if i9 < 0 goto label4;

        $r5 = virtualinvoke $r16.<org.apache.lucene.search.HitQueue: java.lang.Object pop()>();

        $r6 = (org.apache.lucene.search.ScoreDoc) $r5;

        r15[i9] = $r6;

        $i11 = (int) -1;

        i9 = i9 + $i11;

        goto label3;

     label4:
        if i7 != 0 goto label5;

        $f0 = #-InfinityF;

        goto label6;

     label5:
        $r3 = r15[0];

        $f0 = $r3.<org.apache.lucene.search.ScoreDoc: float score>;

     label6:
        $r18 = new org.apache.lucene.search.TopDocs;

        specialinvoke $r18.<org.apache.lucene.search.TopDocs: void <init>(int,org.apache.lucene.search.ScoreDoc[],float)>(i7, r15, $f0);

        return $r18;
    }

    public org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, int, org.apache.lucene.search.Sort) throws java.io.IOException
    {
        org.apache.lucene.search.ScoreDoc $r6;
        org.apache.lucene.search.SortField[] $r4;
        org.apache.lucene.search.Weight r9;
        int[] $r12;
        org.apache.lucene.search.ScoreDoc[] r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, $i11;
        org.apache.lucene.util.DummyConcurrentLock $r14;
        org.apache.lucene.search.FieldDocSortedHitQueue $r17;
        org.apache.lucene.search.Sort r11;
        org.apache.lucene.search.Searchable $r13;
        org.apache.lucene.search.Filter r10;
        org.apache.lucene.search.MultiSearcher$MultiSearcherCallableWithSort $r18;
        org.apache.lucene.search.Searchable[] $r2, $r8;
        float $f0, f1;
        java.lang.Object $r5;
        org.apache.lucene.search.TopFieldDocs $r15, $r19;
        org.apache.lucene.search.MultiSearcher r0;

        r0 := @this: org.apache.lucene.search.MultiSearcher;

        r9 := @parameter0: org.apache.lucene.search.Weight;

        r10 := @parameter1: org.apache.lucene.search.Filter;

        i6 := @parameter2: int;

        r11 := @parameter3: org.apache.lucene.search.Sort;

        $i0 = virtualinvoke r0.<org.apache.lucene.search.MultiSearcher: int maxDoc()>();

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(i6, $i0);

        $r17 = new org.apache.lucene.search.FieldDocSortedHitQueue;

        specialinvoke $r17.<org.apache.lucene.search.FieldDocSortedHitQueue: void <init>(int)>($i1);

        i7 = 0;

        f1 = #-InfinityF;

        i8 = 0;

     label1:
        $r2 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        $i2 = lengthof $r2;

        if i8 >= $i2 goto label2;

        $r18 = new org.apache.lucene.search.MultiSearcher$MultiSearcherCallableWithSort;

        $r14 = <org.apache.lucene.util.DummyConcurrentLock: org.apache.lucene.util.DummyConcurrentLock INSTANCE>;

        $r8 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        $r13 = $r8[i8];

        $r12 = r0.<org.apache.lucene.search.MultiSearcher: int[] starts>;

        specialinvoke $r18.<org.apache.lucene.search.MultiSearcher$MultiSearcherCallableWithSort: void <init>(java.util.concurrent.locks.Lock,org.apache.lucene.search.Searchable,org.apache.lucene.search.Weight,org.apache.lucene.search.Filter,int,org.apache.lucene.search.FieldDocSortedHitQueue,org.apache.lucene.search.Sort,int,int[])>($r14, $r13, r9, r10, $i1, $r17, r11, i8, $r12);

        $r15 = virtualinvoke $r18.<org.apache.lucene.search.MultiSearcher$MultiSearcherCallableWithSort: org.apache.lucene.search.TopFieldDocs call()>();

        $i5 = $r15.<org.apache.lucene.search.TopFieldDocs: int totalHits>;

        i7 = i7 + $i5;

        $f0 = virtualinvoke $r15.<org.apache.lucene.search.TopFieldDocs: float getMaxScore()>();

        f1 = staticinvoke <java.lang.Math: float max(float,float)>(f1, $f0);

        i8 = i8 + 1;

        goto label1;

     label2:
        $i3 = virtualinvoke $r17.<org.apache.lucene.search.FieldDocSortedHitQueue: int size()>();

        r16 = newarray (org.apache.lucene.search.ScoreDoc)[$i3];

        $i4 = virtualinvoke $r17.<org.apache.lucene.search.FieldDocSortedHitQueue: int size()>();

        i9 = $i4 - 1;

     label3:
        if i9 < 0 goto label4;

        $r5 = virtualinvoke $r17.<org.apache.lucene.search.FieldDocSortedHitQueue: java.lang.Object pop()>();

        $r6 = (org.apache.lucene.search.ScoreDoc) $r5;

        r16[i9] = $r6;

        $i11 = (int) -1;

        i9 = i9 + $i11;

        goto label3;

     label4:
        $r19 = new org.apache.lucene.search.TopFieldDocs;

        $r4 = virtualinvoke $r17.<org.apache.lucene.search.FieldDocSortedHitQueue: org.apache.lucene.search.SortField[] getFields()>();

        specialinvoke $r19.<org.apache.lucene.search.TopFieldDocs: void <init>(int,org.apache.lucene.search.ScoreDoc[],org.apache.lucene.search.SortField[],float)>(i7, r16, $r4, f1);

        return $r19;
    }

    public void search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, org.apache.lucene.search.Collector) throws java.io.IOException
    {
        org.apache.lucene.search.Weight r6;
        org.apache.lucene.search.Collector r4;
        org.apache.lucene.search.Searchable $r8;
        org.apache.lucene.search.Filter r7;
        org.apache.lucene.search.Searchable[] $r1, $r5;
        int[] $r2;
        int $i0, i1, i2;
        org.apache.lucene.search.MultiSearcher$1 $r3;
        org.apache.lucene.search.MultiSearcher r0;

        r0 := @this: org.apache.lucene.search.MultiSearcher;

        r6 := @parameter0: org.apache.lucene.search.Weight;

        r7 := @parameter1: org.apache.lucene.search.Filter;

        r4 := @parameter2: org.apache.lucene.search.Collector;

        i2 = 0;

     label1:
        $r1 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        $i0 = lengthof $r1;

        if i2 >= $i0 goto label2;

        $r2 = r0.<org.apache.lucene.search.MultiSearcher: int[] starts>;

        i1 = $r2[i2];

        $r3 = new org.apache.lucene.search.MultiSearcher$1;

        specialinvoke $r3.<org.apache.lucene.search.MultiSearcher$1: void <init>(org.apache.lucene.search.MultiSearcher,org.apache.lucene.search.Collector,int)>(r0, r4, i1);

        $r5 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        $r8 = $r5[i2];

        interfaceinvoke $r8.<org.apache.lucene.search.Searchable: void search(org.apache.lucene.search.Weight,org.apache.lucene.search.Filter,org.apache.lucene.search.Collector)>(r6, r7, $r3);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public org.apache.lucene.search.Query rewrite(org.apache.lucene.search.Query) throws java.io.IOException
    {
        org.apache.lucene.search.Query $r4, $r5, r7, $r9;
        org.apache.lucene.search.Searchable $r8;
        org.apache.lucene.search.Searchable[] $r1, $r3, $r6;
        int $i0, $i1, i2;
        org.apache.lucene.search.MultiSearcher r0;
        org.apache.lucene.search.Query[] r2;

        r0 := @this: org.apache.lucene.search.MultiSearcher;

        r7 := @parameter0: org.apache.lucene.search.Query;

        $r1 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        $i0 = lengthof $r1;

        r2 = newarray (org.apache.lucene.search.Query)[$i0];

        i2 = 0;

     label1:
        $r3 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        $i1 = lengthof $r3;

        if i2 >= $i1 goto label2;

        $r6 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        $r8 = $r6[i2];

        $r9 = interfaceinvoke $r8.<org.apache.lucene.search.Searchable: org.apache.lucene.search.Query rewrite(org.apache.lucene.search.Query)>(r7);

        r2[i2] = $r9;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = r2[0];

        $r5 = virtualinvoke $r4.<org.apache.lucene.search.Query: org.apache.lucene.search.Query combine(org.apache.lucene.search.Query[])>(r2);

        return $r5;
    }

    public org.apache.lucene.search.Explanation explain(org.apache.lucene.search.Weight, int) throws java.io.IOException
    {
        org.apache.lucene.search.Explanation $r5;
        org.apache.lucene.search.Weight r2;
        org.apache.lucene.search.Searchable $r4;
        org.apache.lucene.search.Searchable[] $r1;
        int[] $r3;
        int i0, $i1, $i2, $i3;
        org.apache.lucene.search.MultiSearcher r0;

        r0 := @this: org.apache.lucene.search.MultiSearcher;

        r2 := @parameter0: org.apache.lucene.search.Weight;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<org.apache.lucene.search.MultiSearcher: int subSearcher(int)>(i0);

        $r1 = r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        $r4 = $r1[$i1];

        $r3 = r0.<org.apache.lucene.search.MultiSearcher: int[] starts>;

        $i2 = $r3[$i1];

        $i3 = i0 - $i2;

        $r5 = interfaceinvoke $r4.<org.apache.lucene.search.Searchable: org.apache.lucene.search.Explanation explain(org.apache.lucene.search.Weight,int)>(r2, $i3);

        return $r5;
    }

    public org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query) throws java.io.IOException
    {
        org.apache.lucene.search.Query r1, $r2;
        org.apache.lucene.search.Weight $r7;
        java.util.HashSet $r3;
        org.apache.lucene.search.MultiSearcher$CachedDfSource $r5;
        org.apache.lucene.search.Similarity $r6;
        java.util.Map $r4;
        int $i0;
        org.apache.lucene.search.MultiSearcher r0;

        r0 := @this: org.apache.lucene.search.MultiSearcher;

        r1 := @parameter0: org.apache.lucene.search.Query;

        $r2 = virtualinvoke r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Query rewrite(org.apache.lucene.search.Query)>(r1);

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        virtualinvoke $r2.<org.apache.lucene.search.Query: void extractTerms(java.util.Set)>($r3);

        $r4 = virtualinvoke r0.<org.apache.lucene.search.MultiSearcher: java.util.Map createDocFrequencyMap(java.util.Set)>($r3);

        $i0 = virtualinvoke r0.<org.apache.lucene.search.MultiSearcher: int maxDoc()>();

        $r5 = new org.apache.lucene.search.MultiSearcher$CachedDfSource;

        $r6 = virtualinvoke r0.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Similarity getSimilarity()>();

        specialinvoke $r5.<org.apache.lucene.search.MultiSearcher$CachedDfSource: void <init>(java.util.Map,int,org.apache.lucene.search.Similarity)>($r4, $i0, $r6);

        $r7 = virtualinvoke $r5.<org.apache.lucene.search.MultiSearcher$CachedDfSource: org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query)>($r2);

        return $r7;
    }

    java.util.Map createDocFrequencyMap(java.util.Set) throws java.io.IOException
    {
        java.lang.Object[] $r2;
        org.apache.lucene.index.Term $r7;
        java.util.HashMap $r6;
        java.lang.Integer $r8;
        int[] r4, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        org.apache.lucene.index.Term[] $r1, r3;
        java.util.Set r0;
        org.apache.lucene.search.Searchable r9;
        org.apache.lucene.search.Searchable[] r11;
        org.apache.lucene.search.MultiSearcher r5;

        r5 := @this: org.apache.lucene.search.MultiSearcher;

        r0 := @parameter0: java.util.Set;

        $i0 = interfaceinvoke r0.<java.util.Set: int size()>();

        $r1 = newarray (org.apache.lucene.index.Term)[$i0];

        $r2 = interfaceinvoke r0.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        r3 = (org.apache.lucene.index.Term[]) $r2;

        $i1 = lengthof r3;

        r4 = newarray (int)[$i1];

        r11 = r5.<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Searchable[] searchables>;

        i8 = lengthof r11;

        i9 = 0;

     label1:
        if i9 >= i8 goto label4;

        r9 = r11[i9];

        $r10 = interfaceinvoke r9.<org.apache.lucene.search.Searchable: int[] docFreqs(org.apache.lucene.index.Term[])>(r3);

        i10 = 0;

     label2:
        $i4 = lengthof r4;

        if i10 >= $i4 goto label3;

        $i6 = r4[i10];

        $i5 = $r10[i10];

        $i7 = $i6 + $i5;

        r4[i10] = $i7;

        i10 = i10 + 1;

        goto label2;

     label3:
        i9 = i9 + 1;

        goto label1;

     label4:
        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        i11 = 0;

     label5:
        $i2 = lengthof r3;

        if i11 >= $i2 goto label6;

        $r7 = r3[i11];

        $i3 = r4[i11];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        i11 = i11 + 1;

        goto label5;

     label6:
        return $r6;
    }
}
