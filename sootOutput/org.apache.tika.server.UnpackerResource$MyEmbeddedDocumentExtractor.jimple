class org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor extends java.lang.Object implements org.apache.tika.extractor.EmbeddedDocumentExtractor
{
    private final org.apache.commons.lang.mutable.MutableInt count;
    private final java.util.Map zout;
    final org.apache.tika.server.UnpackerResource this$0;

    void <init>(org.apache.tika.server.UnpackerResource, org.apache.commons.lang.mutable.MutableInt, java.util.Map)
    {
        org.apache.tika.server.UnpackerResource r1;
        org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor r0;
        java.util.Map r3;
        org.apache.commons.lang.mutable.MutableInt r2;

        r0 := @this: org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor;

        r1 := @parameter0: org.apache.tika.server.UnpackerResource;

        r2 := @parameter1: org.apache.commons.lang.mutable.MutableInt;

        r3 := @parameter2: java.util.Map;

        r0.<org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor: org.apache.tika.server.UnpackerResource this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor: org.apache.commons.lang.mutable.MutableInt count> = r2;

        r0.<org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor: java.util.Map zout> = r3;

        return;
    }

    public boolean shouldParseEmbedded(org.apache.tika.metadata.Metadata)
    {
        org.apache.tika.metadata.Metadata r1;
        org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor r0;

        r0 := @this: org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor;

        r1 := @parameter0: org.apache.tika.metadata.Metadata;

        return 1;
    }

    public void parseEmbedded(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, boolean) throws org.xml.sax.SAXException, java.io.IOException
    {
        byte[] $r2, $r15, r49;
        org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor r9;
        org.apache.tika.metadata.Metadata r3;
        java.util.Map $r14, $r16;
        org.apache.commons.lang.mutable.MutableInt $r17, $r30, $r43;
        org.apache.tika.server.UnpackerResource $r35;
        org.apache.poi.poifs.filesystem.DirectoryNode $r12;
        java.lang.StringBuilder $r22, $r23, $r24, $r26, $r29, $r32, $r33, $r34, $r40, $r41, $r42;
        java.io.ByteArrayOutputStream $r0, $r13;
        org.apache.tika.config.TikaConfig $r36;
        java.lang.String $r4, $r5, $r25, $r28, $r31, $r39, r50, $r51, r52;
        org.apache.tika.mime.MimeTypeException $r46;
        org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType $r20, $r21;
        org.apache.tika.mime.MimeType $r38;
        java.io.ByteArrayInputStream $r19;
        boolean $z0, $z1, $z2, $z3, z4, $z5;
        org.apache.poi.poifs.filesystem.DirectoryEntry $r11;
        org.apache.poi.poifs.filesystem.Ole10Native $r27;
        org.apache.poi.poifs.filesystem.Ole10NativeException $r44;
        org.apache.poi.poifs.filesystem.POIFSFileSystem $r8, $r18;
        int $i0, $i1, $i2, $i3;
        org.apache.tika.io.TikaInputStream r53;
        org.xml.sax.ContentHandler r48;
        org.apache.tika.mime.MimeTypes $r37;
        java.lang.Object $r6, $r7, $r10;
        org.apache.commons.logging.Log $r45, $r47;
        java.io.InputStream r1;

        r9 := @this: org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor;

        r1 := @parameter0: java.io.InputStream;

        r48 := @parameter1: org.xml.sax.ContentHandler;

        r3 := @parameter2: org.apache.tika.metadata.Metadata;

        z4 := @parameter3: boolean;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <org.apache.poi.util.IOUtils: void copy(java.io.InputStream,java.io.OutputStream)>(r1, $r0);

        $r2 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r49 = $r2;

        $r4 = virtualinvoke r3.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("resourceName");

        r50 = $r4;

        $r5 = virtualinvoke r3.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("Content-Type");

        if $r4 != null goto label01;

        $r43 = r9.<org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor: org.apache.commons.lang.mutable.MutableInt count>;

        $i2 = virtualinvoke $r43.<org.apache.commons.lang.mutable.MutableInt: int intValue()>();

        r50 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

     label01:
        $z0 = virtualinvoke r50.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z0 != 0 goto label05;

        if $r5 == null goto label05;

     label02:
        $r35 = r9.<org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor: org.apache.tika.server.UnpackerResource this$0>;

        $r36 = staticinvoke <org.apache.tika.server.UnpackerResource: org.apache.tika.config.TikaConfig access$000(org.apache.tika.server.UnpackerResource)>($r35);

        $r37 = virtualinvoke $r36.<org.apache.tika.config.TikaConfig: org.apache.tika.mime.MimeTypes getMimeRepository()>();

        $r38 = virtualinvoke $r37.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeType forName(java.lang.String)>($r5);

        $r39 = virtualinvoke $r38.<org.apache.tika.mime.MimeType: java.lang.String getExtension()>();

        if $r39 == null goto label03;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        r50 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        goto label05;

     label04:
        $r46 := @caughtexception;

        $r47 = staticinvoke <org.apache.tika.server.UnpackerResource: org.apache.commons.logging.Log access$100()>();

        interfaceinvoke $r47.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("Unexpected MimeTypeException", $r46);

     label05:
        $r51 = "application/vnd.openxmlformats-officedocument.oleObject";

        $z5 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z5 == 0 goto label11;

        $r18 = new org.apache.poi.poifs.filesystem.POIFSFileSystem;

        $r19 = new java.io.ByteArrayInputStream;

        specialinvoke $r19.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        specialinvoke $r18.<org.apache.poi.poifs.filesystem.POIFSFileSystem: void <init>(java.io.InputStream)>($r19);

        $r20 = staticinvoke <org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType: org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType detectType(org.apache.poi.poifs.filesystem.POIFSFileSystem)>($r18);

        $r21 = <org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType: org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType OLE10_NATIVE>;

        if $r20 != $r21 goto label10;

     label06:
        $r27 = staticinvoke <org.apache.poi.poifs.filesystem.Ole10Native: org.apache.poi.poifs.filesystem.Ole10Native createFromEmbeddedOleObject(org.apache.poi.poifs.filesystem.POIFSFileSystem)>($r18);

        $i0 = virtualinvoke $r27.<org.apache.poi.poifs.filesystem.Ole10Native: int getDataSize()>();

        if $i0 <= 0 goto label08;

        $r28 = virtualinvoke $r27.<org.apache.poi.poifs.filesystem.Ole10Native: java.lang.String getLabel()>();

        r52 = $r28;

        $z3 = virtualinvoke $r28.<java.lang.String: boolean startsWith(java.lang.String)>("ole-");

        if $z3 == 0 goto label07;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = r9.<org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor: org.apache.commons.lang.mutable.MutableInt count>;

        $i1 = virtualinvoke $r30.<org.apache.commons.lang.mutable.MutableInt: int intValue()>();

        $r31 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        r52 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        r50 = r52;

        r49 = virtualinvoke $r27.<org.apache.poi.poifs.filesystem.Ole10Native: byte[] getDataBuffer()>();

     label08:
        goto label11;

     label09:
        $r44 := @caughtexception;

        $r45 = staticinvoke <org.apache.tika.server.UnpackerResource: org.apache.commons.logging.Log access$100()>();

        interfaceinvoke $r45.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("Skipping invalid part", $r44);

        goto label11;

     label10:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r25 = virtualinvoke $r20.<org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType: java.lang.String getExtension()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        r50 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $i3 = lengthof r49;

        if $i3 <= 0 goto label12;

        $r16 = r9.<org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor: java.util.Map zout>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r50, r49);

        $r17 = r9.<org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor: org.apache.commons.lang.mutable.MutableInt count>;

        virtualinvoke $r17.<org.apache.commons.lang.mutable.MutableInt: void increment()>();

        goto label13;

     label12:
        $z1 = r1 instanceof org.apache.tika.io.TikaInputStream;

        if $z1 == 0 goto label13;

        r53 = (org.apache.tika.io.TikaInputStream) r1;

        $r6 = virtualinvoke r53.<org.apache.tika.io.TikaInputStream: java.lang.Object getOpenContainer()>();

        if $r6 == null goto label13;

        $r7 = virtualinvoke r53.<org.apache.tika.io.TikaInputStream: java.lang.Object getOpenContainer()>();

        $z2 = $r7 instanceof org.apache.poi.poifs.filesystem.DirectoryEntry;

        if $z2 == 0 goto label13;

        $r8 = new org.apache.poi.poifs.filesystem.POIFSFileSystem;

        specialinvoke $r8.<org.apache.poi.poifs.filesystem.POIFSFileSystem: void <init>()>();

        $r10 = virtualinvoke r53.<org.apache.tika.io.TikaInputStream: java.lang.Object getOpenContainer()>();

        $r11 = (org.apache.poi.poifs.filesystem.DirectoryEntry) $r10;

        $r12 = virtualinvoke $r8.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        virtualinvoke r9.<org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor: void copy(org.apache.poi.poifs.filesystem.DirectoryEntry,org.apache.poi.poifs.filesystem.DirectoryEntry)>($r11, $r12);

        $r13 = new java.io.ByteArrayOutputStream;

        specialinvoke $r13.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke $r8.<org.apache.poi.poifs.filesystem.POIFSFileSystem: void writeFilesystem(java.io.OutputStream)>($r13);

        virtualinvoke $r13.<java.io.ByteArrayOutputStream: void close()>();

        $r14 = r9.<org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor: java.util.Map zout>;

        $r15 = virtualinvoke $r13.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r50, $r15);

     label13:
        return;

        catch org.apache.tika.mime.MimeTypeException from label02 to label03 with label04;
        catch org.apache.poi.poifs.filesystem.Ole10NativeException from label06 to label08 with label09;
    }

    protected void copy(org.apache.poi.poifs.filesystem.DirectoryEntry, org.apache.poi.poifs.filesystem.DirectoryEntry) throws java.io.IOException
    {
        java.lang.Throwable $r12;
        java.util.Iterator $r1;
        org.apache.poi.poifs.filesystem.Entry r3;
        org.apache.poi.poifs.filesystem.DirectoryEntry r0, r6, $r9, $r11;
        org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor r10;
        java.lang.Object $r2;
        java.lang.String $r7, $r8;
        org.apache.poi.poifs.filesystem.DocumentEntry $r5;
        org.apache.poi.poifs.filesystem.DocumentInputStream $r4;
        boolean $z0, $z1;

        r10 := @this: org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryEntry;

        r6 := @parameter1: org.apache.poi.poifs.filesystem.DirectoryEntry;

        $r1 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.poi.poifs.filesystem.Entry) $r2;

        $z1 = r3 instanceof org.apache.poi.poifs.filesystem.DirectoryEntry;

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke r3.<org.apache.poi.poifs.filesystem.Entry: java.lang.String getName()>();

        $r9 = interfaceinvoke r6.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.DirectoryEntry createDirectory(java.lang.String)>($r8);

        $r11 = (org.apache.poi.poifs.filesystem.DirectoryEntry) r3;

        virtualinvoke r10.<org.apache.tika.server.UnpackerResource$MyEmbeddedDocumentExtractor: void copy(org.apache.poi.poifs.filesystem.DirectoryEntry,org.apache.poi.poifs.filesystem.DirectoryEntry)>($r11, $r9);

        goto label7;

     label2:
        $r4 = new org.apache.poi.poifs.filesystem.DocumentInputStream;

        $r5 = (org.apache.poi.poifs.filesystem.DocumentEntry) r3;

        specialinvoke $r4.<org.apache.poi.poifs.filesystem.DocumentInputStream: void <init>(org.apache.poi.poifs.filesystem.DocumentEntry)>($r5);

     label3:
        $r7 = interfaceinvoke r3.<org.apache.poi.poifs.filesystem.Entry: java.lang.String getName()>();

        interfaceinvoke r6.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.DocumentEntry createDocument(java.lang.String,java.io.InputStream)>($r7, $r4);

     label4:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

        goto label7;

     label5:
        $r12 := @caughtexception;

     label6:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

        throw $r12;

     label7:
        goto label1;

     label8:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
