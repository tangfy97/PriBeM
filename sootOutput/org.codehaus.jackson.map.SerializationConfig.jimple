public class org.codehaus.jackson.map.SerializationConfig extends org.codehaus.jackson.map.MapperConfig$Impl
{
    protected org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion;
    protected java.lang.Class _serializationView;
    protected org.codehaus.jackson.map.ser.FilterProvider _filterProvider;

    public void <init>(org.codehaus.jackson.map.ClassIntrospector, org.codehaus.jackson.map.AnnotationIntrospector, org.codehaus.jackson.map.introspect.VisibilityChecker, org.codehaus.jackson.map.jsontype.SubtypeResolver, org.codehaus.jackson.map.PropertyNamingStrategy, org.codehaus.jackson.map.type.TypeFactory, org.codehaus.jackson.map.HandlerInstantiator)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver r4;
        org.codehaus.jackson.map.HandlerInstantiator r7;
        org.codehaus.jackson.map.PropertyNamingStrategy r5;
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.AnnotationIntrospector r2;
        org.codehaus.jackson.map.type.TypeFactory r6;
        org.codehaus.jackson.map.introspect.VisibilityChecker r3;
        int $i0;
        org.codehaus.jackson.map.ClassIntrospector r1;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.ClassIntrospector;

        r2 := @parameter1: org.codehaus.jackson.map.AnnotationIntrospector;

        r3 := @parameter2: org.codehaus.jackson.map.introspect.VisibilityChecker;

        r4 := @parameter3: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        r5 := @parameter4: org.codehaus.jackson.map.PropertyNamingStrategy;

        r6 := @parameter5: org.codehaus.jackson.map.type.TypeFactory;

        r7 := @parameter6: org.codehaus.jackson.map.HandlerInstantiator;

        $i0 = staticinvoke <org.codehaus.jackson.map.SerializationConfig: int collectFeatureDefaults(java.lang.Class)>(class "Lorg/codehaus/jackson/map/SerializationConfig$Feature;");

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void <init>(org.codehaus.jackson.map.ClassIntrospector,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver,org.codehaus.jackson.map.PropertyNamingStrategy,org.codehaus.jackson.map.type.TypeFactory,org.codehaus.jackson.map.HandlerInstantiator,int)>(r1, r2, r3, r4, r5, r6, r7, $i0);

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion> = null;

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ser.FilterProvider _filterProvider> = null;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.SerializationConfig)
    {
        org.codehaus.jackson.map.SerializationConfig r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r2;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig;

        $r2 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        specialinvoke r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r2);

        return;
    }

    protected void <init>(org.codehaus.jackson.map.SerializationConfig, java.util.HashMap, org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver r4;
        java.util.HashMap r3;
        org.codehaus.jackson.map.SerializationConfig r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r2;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig;

        r3 := @parameter1: java.util.HashMap;

        r4 := @parameter2: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        $r2 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        specialinvoke r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r2);

        r0.<org.codehaus.jackson.map.SerializationConfig: java.util.HashMap _mixInAnnotations> = r3;

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver> = r4;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.map.MapperConfig$Base)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r3;
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion $r4;
        java.lang.Class $r5;
        org.codehaus.jackson.map.ser.FilterProvider $r6;
        org.codehaus.jackson.map.SerializationConfig r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base r2;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter1: org.codehaus.jackson.map.MapperConfig$Base;

        $r3 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void <init>(org.codehaus.jackson.map.MapperConfig$Impl,org.codehaus.jackson.map.MapperConfig$Base,org.codehaus.jackson.map.jsontype.SubtypeResolver)>(r1, r2, $r3);

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion> = null;

        $r4 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion>;

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion> = $r4;

        $r5 = r1.<org.codehaus.jackson.map.SerializationConfig: java.lang.Class _serializationView>;

        r0.<org.codehaus.jackson.map.SerializationConfig: java.lang.Class _serializationView> = $r5;

        $r6 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ser.FilterProvider _filterProvider>;

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ser.FilterProvider _filterProvider> = $r6;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.map.ser.FilterProvider)
    {
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion $r2;
        java.lang.Class $r3;
        org.codehaus.jackson.map.ser.FilterProvider r4;
        org.codehaus.jackson.map.SerializationConfig r0, r1;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig;

        r4 := @parameter1: org.codehaus.jackson.map.ser.FilterProvider;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void <init>(org.codehaus.jackson.map.MapperConfig$Impl)>(r1);

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion> = null;

        $r2 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion>;

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion> = $r2;

        $r3 = r1.<org.codehaus.jackson.map.SerializationConfig: java.lang.Class _serializationView>;

        r0.<org.codehaus.jackson.map.SerializationConfig: java.lang.Class _serializationView> = $r3;

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ser.FilterProvider _filterProvider> = r4;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.SerializationConfig, java.lang.Class)
    {
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion $r2;
        java.lang.Class r3;
        org.codehaus.jackson.map.ser.FilterProvider $r4;
        org.codehaus.jackson.map.SerializationConfig r0, r1;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig;

        r3 := @parameter1: java.lang.Class;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void <init>(org.codehaus.jackson.map.MapperConfig$Impl)>(r1);

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion> = null;

        $r2 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion>;

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion> = $r2;

        r0.<org.codehaus.jackson.map.SerializationConfig: java.lang.Class _serializationView> = r3;

        $r4 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ser.FilterProvider _filterProvider>;

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ser.FilterProvider _filterProvider> = $r4;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)
    {
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion r2, $r3;
        org.codehaus.jackson.map.ser.FilterProvider $r6;
        org.codehaus.jackson.map.SerializationConfig r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        java.lang.Class $r5;
        org.codehaus.jackson.map.SerializationConfig$Feature $r4, $r7;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter1: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void <init>(org.codehaus.jackson.map.MapperConfig$Impl)>(r1);

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion> = null;

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion> = r2;

        $r3 = <org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_NULL>;

        if r2 != $r3 goto label1;

        $i3 = r0.<org.codehaus.jackson.map.SerializationConfig: int _featureFlags>;

        $r7 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_PROPERTIES>;

        $i4 = virtualinvoke $r7.<org.codehaus.jackson.map.SerializationConfig$Feature: int getMask()>();

        $i8 = (int) -1;

        $i5 = $i4 ^ $i8;

        $i6 = $i3 & $i5;

        r0.<org.codehaus.jackson.map.SerializationConfig: int _featureFlags> = $i6;

        goto label2;

     label1:
        $i0 = r0.<org.codehaus.jackson.map.SerializationConfig: int _featureFlags>;

        $r4 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_PROPERTIES>;

        $i1 = virtualinvoke $r4.<org.codehaus.jackson.map.SerializationConfig$Feature: int getMask()>();

        $i2 = $i0 | $i1;

        r0.<org.codehaus.jackson.map.SerializationConfig: int _featureFlags> = $i2;

     label2:
        $r5 = r1.<org.codehaus.jackson.map.SerializationConfig: java.lang.Class _serializationView>;

        r0.<org.codehaus.jackson.map.SerializationConfig: java.lang.Class _serializationView> = $r5;

        $r6 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ser.FilterProvider _filterProvider>;

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ser.FilterProvider _filterProvider> = $r6;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.SerializationConfig, int)
    {
        int i0;
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion $r2;
        java.lang.Class $r3;
        org.codehaus.jackson.map.ser.FilterProvider $r4;
        org.codehaus.jackson.map.SerializationConfig r0, r1;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig;

        i0 := @parameter1: int;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void <init>(org.codehaus.jackson.map.MapperConfig$Impl,int)>(r1, i0);

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion> = null;

        $r2 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion>;

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion> = $r2;

        $r3 = r1.<org.codehaus.jackson.map.SerializationConfig: java.lang.Class _serializationView>;

        r0.<org.codehaus.jackson.map.SerializationConfig: java.lang.Class _serializationView> = $r3;

        $r4 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ser.FilterProvider _filterProvider>;

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ser.FilterProvider _filterProvider> = $r4;

        return;
    }

    public org.codehaus.jackson.map.SerializationConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)
    {
        org.codehaus.jackson.map.ClassIntrospector r2;
        org.codehaus.jackson.map.SerializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;

        r1 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.ClassIntrospector;

        $r0 = new org.codehaus.jackson.map.SerializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.SerializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.SerializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;
        org.codehaus.jackson.map.AnnotationIntrospector r2;

        r1 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r0 = new org.codehaus.jackson.map.SerializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.SerializationConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.SerializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;
        org.codehaus.jackson.map.AnnotationIntrospector r2;

        r1 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r0 = new org.codehaus.jackson.map.SerializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.SerializationConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.SerializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;
        org.codehaus.jackson.map.AnnotationIntrospector r2;

        r1 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r0 = new org.codehaus.jackson.map.SerializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.SerializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)
    {
        org.codehaus.jackson.map.introspect.VisibilityChecker r2;
        org.codehaus.jackson.map.SerializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;

        r1 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.introspect.VisibilityChecker;

        $r0 = new org.codehaus.jackson.map.SerializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.SerializationConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod, org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    {
        org.codehaus.jackson.annotate.JsonAutoDetect$Visibility r3;
        org.codehaus.jackson.map.SerializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r4, $r5;
        org.codehaus.jackson.annotate.JsonMethod r2;

        r1 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: org.codehaus.jackson.annotate.JsonMethod;

        r3 := @parameter1: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility;

        $r0 = new org.codehaus.jackson.map.SerializationConfig;

        $r4 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>(r2, r3);

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r5);

        return $r0;
    }

    public org.codehaus.jackson.map.SerializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)
    {
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder r2;
        org.codehaus.jackson.map.SerializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;

        r1 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.jsontype.TypeResolverBuilder;

        $r0 = new org.codehaus.jackson.map.SerializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.SerializationConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.SerializationConfig $r0, r1;
        org.codehaus.jackson.map.jsontype.SubtypeResolver r2;

        r1 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        $r0 = new org.codehaus.jackson.map.SerializationConfig;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig)>(r1);

        $r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver> = r2;

        return $r0;
    }

    public org.codehaus.jackson.map.SerializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)
    {
        org.codehaus.jackson.map.PropertyNamingStrategy r2;
        org.codehaus.jackson.map.SerializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;

        r1 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.PropertyNamingStrategy;

        $r0 = new org.codehaus.jackson.map.SerializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.SerializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)
    {
        org.codehaus.jackson.map.type.TypeFactory r2;
        org.codehaus.jackson.map.SerializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;

        r1 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.type.TypeFactory;

        $r0 = new org.codehaus.jackson.map.SerializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.SerializationConfig withDateFormat(java.text.DateFormat)
    {
        org.codehaus.jackson.map.SerializationConfig $r0, r1, r9;
        org.codehaus.jackson.map.SerializationConfig$Feature[] $r5, $r7;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;
        java.text.DateFormat r2;
        org.codehaus.jackson.map.SerializationConfig$Feature $r6, $r8;

        r1 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: java.text.DateFormat;

        $r0 = new org.codehaus.jackson.map.SerializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withDateFormat(java.text.DateFormat)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        if r2 != null goto label1;

        $r7 = newarray (org.codehaus.jackson.map.SerializationConfig$Feature)[1];

        $r8 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_DATES_AS_TIMESTAMPS>;

        $r7[0] = $r8;

        r9 = virtualinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig 'with'(org.codehaus.jackson.map.SerializationConfig$Feature[])>($r7);

        goto label2;

     label1:
        $r5 = newarray (org.codehaus.jackson.map.SerializationConfig$Feature)[1];

        $r6 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_DATES_AS_TIMESTAMPS>;

        $r5[0] = $r6;

        r9 = virtualinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig without(org.codehaus.jackson.map.SerializationConfig$Feature[])>($r5);

     label2:
        return r9;
    }

    public org.codehaus.jackson.map.SerializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)
    {
        org.codehaus.jackson.map.HandlerInstantiator r2;
        org.codehaus.jackson.map.SerializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;

        r1 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.HandlerInstantiator;

        $r0 = new org.codehaus.jackson.map.SerializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.SerializationConfig withFilters(org.codehaus.jackson.map.ser.FilterProvider)
    {
        org.codehaus.jackson.map.ser.FilterProvider r2;
        org.codehaus.jackson.map.SerializationConfig $r0, r1;

        r1 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.ser.FilterProvider;

        $r0 = new org.codehaus.jackson.map.SerializationConfig;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.ser.FilterProvider)>(r1, r2);

        return $r0;
    }

    public org.codehaus.jackson.map.SerializationConfig withView(java.lang.Class)
    {
        java.lang.Class r2;
        org.codehaus.jackson.map.SerializationConfig $r0, r1;

        r1 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: java.lang.Class;

        $r0 = new org.codehaus.jackson.map.SerializationConfig;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,java.lang.Class)>(r1, r2);

        return $r0;
    }

    public org.codehaus.jackson.map.SerializationConfig withSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)
    {
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion r2;
        org.codehaus.jackson.map.SerializationConfig $r0, r1;

        r1 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion;

        $r0 = new org.codehaus.jackson.map.SerializationConfig;

        specialinvoke $r0.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)>(r1, r2);

        return $r0;
    }

    public transient org.codehaus.jackson.map.SerializationConfig 'with'(org.codehaus.jackson.map.SerializationConfig$Feature[])
    {
        org.codehaus.jackson.map.SerializationConfig r0, $r2;
        org.codehaus.jackson.map.SerializationConfig$Feature[] r1;
        int i0, $i1, i2, i3;
        org.codehaus.jackson.map.SerializationConfig$Feature r3;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig$Feature[];

        i2 = r0.<org.codehaus.jackson.map.SerializationConfig: int _featureFlags>;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        r3 = r1[i3];

        $i1 = virtualinvoke r3.<org.codehaus.jackson.map.SerializationConfig$Feature: int getMask()>();

        i2 = i2 | $i1;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r2 = new org.codehaus.jackson.map.SerializationConfig;

        specialinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,int)>(r0, i2);

        return $r2;
    }

    public transient org.codehaus.jackson.map.SerializationConfig without(org.codehaus.jackson.map.SerializationConfig$Feature[])
    {
        org.codehaus.jackson.map.SerializationConfig r0, $r4;
        org.codehaus.jackson.map.SerializationConfig$Feature[] r1;
        int i0, $i1, $i2, i3, i4, $i6;
        org.codehaus.jackson.map.SerializationConfig$Feature r3;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig$Feature[];

        i3 = r0.<org.codehaus.jackson.map.SerializationConfig: int _featureFlags>;

        i0 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        r3 = r1[i4];

        $i1 = virtualinvoke r3.<org.codehaus.jackson.map.SerializationConfig$Feature: int getMask()>();

        $i6 = (int) -1;

        $i2 = $i1 ^ $i6;

        i3 = i3 & $i2;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r4 = new org.codehaus.jackson.map.SerializationConfig;

        specialinvoke $r4.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,int)>(r0, i3);

        return $r4;
    }

    public void fromAnnotations(java.lang.Class)
    {
        org.codehaus.jackson.map.annotate.JsonSerialize$Typing $r10, $r11;
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion $r8, $r9;
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r1;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r3;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r5, $r6;
        java.lang.Class r2;
        org.codehaus.jackson.map.MapperConfig$Base $r4, $r7;
        org.codehaus.jackson.map.SerializationConfig$Feature $r12;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r3 = staticinvoke <org.codehaus.jackson.map.introspect.AnnotatedClass: org.codehaus.jackson.map.introspect.AnnotatedClass construct(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>(r2, $r1, null);

        $r4 = r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()>();

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker)>($r3, $r5);

        $r7 = virtualinvoke $r4.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)>($r6);

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base> = $r7;

        $r8 = virtualinvoke $r1.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)>($r3, null);

        $r9 = r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion>;

        if $r8 == $r9 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: void setSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)>($r8);

     label1:
        $r10 = virtualinvoke $r1.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated)>($r3);

        if $r10 == null goto label4;

        $r12 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature USE_STATIC_TYPING>;

        $r11 = <org.codehaus.jackson.map.annotate.JsonSerialize$Typing: org.codehaus.jackson.map.annotate.JsonSerialize$Typing STATIC>;

        if $r10 != $r11 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: void set(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)>($r12, $z0);

     label4:
        return;
    }

    public org.codehaus.jackson.map.SerializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver r3;
        java.util.HashMap r1;
        org.codehaus.jackson.map.SerializationConfig r0, $r2;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r3 := @parameter0: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        r1 = r0.<org.codehaus.jackson.map.SerializationConfig: java.util.HashMap _mixInAnnotations>;

        r0.<org.codehaus.jackson.map.SerializationConfig: boolean _mixInAnnotationsShared> = 1;

        $r2 = new org.codehaus.jackson.map.SerializationConfig;

        specialinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,java.util.HashMap,org.codehaus.jackson.map.jsontype.SubtypeResolver)>(r0, r1, r3);

        return $r2;
    }

    public org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()
    {
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r2, $r3;
        org.codehaus.jackson.map.SerializationConfig$Feature $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        $r1 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature USE_ANNOTATIONS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r1);

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        return $r3;

     label1:
        $r2 = staticinvoke <org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.AnnotationIntrospector nopInstance()>();

        return $r2;
    }

    public org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.ClassIntrospector $r1;
        org.codehaus.jackson.type.JavaType r2;
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.BeanDescription $r3;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ClassIntrospector getClassIntrospector()>();

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.ClassIntrospector: org.codehaus.jackson.map.BeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>(r0, r2, r0);

        return $r3;
    }

    public org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.ClassIntrospector $r1;
        org.codehaus.jackson.type.JavaType r2;
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.BeanDescription $r3;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ClassIntrospector getClassIntrospector()>();

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.ClassIntrospector: org.codehaus.jackson.map.BeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>(r0, r2, r0);

        return $r3;
    }

    public boolean isAnnotationProcessingEnabled()
    {
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        $r1 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature USE_ANNOTATIONS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r1);

        return $z0;
    }

    public boolean canOverrideAccessModifiers()
    {
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        $r1 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r1);

        return $z0;
    }

    public boolean shouldSortPropertiesAlphabetically()
    {
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        $r1 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature SORT_PROPERTIES_ALPHABETICALLY>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r1);

        return $z0;
    }

    public org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()
    {
        org.codehaus.jackson.annotate.JsonAutoDetect$Visibility $r5, $r6, $r7;
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r1, r8;
        org.codehaus.jackson.map.SerializationConfig$Feature $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        $r1 = specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()>();

        r8 = $r1;

        $r2 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_GETTERS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r2);

        if $z0 != 0 goto label1;

        $r7 = <org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NONE>;

        r8 = interfaceinvoke $r1.<org.codehaus.jackson.map.introspect.VisibilityChecker: org.codehaus.jackson.map.introspect.VisibilityChecker withGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>($r7);

     label1:
        $r3 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_IS_GETTERS>;

        $z1 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r3);

        if $z1 != 0 goto label2;

        $r6 = <org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NONE>;

        r8 = interfaceinvoke r8.<org.codehaus.jackson.map.introspect.VisibilityChecker: org.codehaus.jackson.map.introspect.VisibilityChecker withIsGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>($r6);

     label2:
        $r4 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_FIELDS>;

        $z2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r4);

        if $z2 != 0 goto label3;

        $r5 = <org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NONE>;

        r8 = interfaceinvoke r8.<org.codehaus.jackson.map.introspect.VisibilityChecker: org.codehaus.jackson.map.introspect.VisibilityChecker withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>($r5);

     label3:
        return r8;
    }

    public boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)
    {
        int $i0, $i1, $i2;
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.SerializationConfig$Feature r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig$Feature;

        $i0 = r0.<org.codehaus.jackson.map.SerializationConfig: int _featureFlags>;

        $i1 = virtualinvoke r1.<org.codehaus.jackson.map.SerializationConfig$Feature: int getMask()>();

        $i2 = $i0 & $i1;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void enable(org.codehaus.jackson.map.SerializationConfig$Feature)
    {
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.SerializationConfig$Feature r1;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void enable(org.codehaus.jackson.map.MapperConfig$ConfigFeature)>(r1);

        return;
    }

    public void disable(org.codehaus.jackson.map.SerializationConfig$Feature)
    {
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.SerializationConfig$Feature r1;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig$Feature;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void disable(org.codehaus.jackson.map.MapperConfig$ConfigFeature)>(r1);

        return;
    }

    public void set(org.codehaus.jackson.map.SerializationConfig$Feature, boolean)
    {
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.SerializationConfig$Feature r1;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig$Feature;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void set(org.codehaus.jackson.map.MapperConfig$ConfigFeature,boolean)>(r1, z0);

        return;
    }

    public java.lang.Class getSerializationView()
    {
        java.lang.Class $r1;
        org.codehaus.jackson.map.SerializationConfig r0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        $r1 = r0.<org.codehaus.jackson.map.SerializationConfig: java.lang.Class _serializationView>;

        return $r1;
    }

    public org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion getSerializationInclusion()
    {
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion $r1, $r3, $r4;
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        $r1 = r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion>;

        if $r1 == null goto label1;

        $r3 = r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion>;

        return $r3;

     label1:
        $r2 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_PROPERTIES>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r2);

        if $z0 == 0 goto label2;

        $r4 = <org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion ALWAYS>;

        goto label3;

     label2:
        $r4 = <org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_NULL>;

     label3:
        return $r4;
    }

    public void setSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)
    {
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion r1, $r2;
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r3, $r4;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion;

        r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion> = r1;

        $r2 = <org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_NULL>;

        if r1 != $r2 goto label1;

        $r4 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_PROPERTIES>;

        virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: void disable(org.codehaus.jackson.map.SerializationConfig$Feature)>($r4);

        goto label2;

     label1:
        $r3 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_PROPERTIES>;

        virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: void enable(org.codehaus.jackson.map.SerializationConfig$Feature)>($r3);

     label2:
        return;
    }

    public org.codehaus.jackson.map.ser.FilterProvider getFilterProvider()
    {
        org.codehaus.jackson.map.ser.FilterProvider $r1;
        org.codehaus.jackson.map.SerializationConfig r0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        $r1 = r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ser.FilterProvider _filterProvider>;

        return $r1;
    }

    public org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.ClassIntrospector $r1;
        org.codehaus.jackson.type.JavaType r2;
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.BeanDescription $r3;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r2 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ClassIntrospector getClassIntrospector()>();

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.ClassIntrospector: org.codehaus.jackson.map.BeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>(r0, r2, r0);

        return $r3;
    }

    public org.codehaus.jackson.map.JsonSerializer serializerInstance(org.codehaus.jackson.map.introspect.Annotated, java.lang.Class)
    {
        org.codehaus.jackson.map.HandlerInstantiator $r1;
        org.codehaus.jackson.map.JsonSerializer $r4, $r6;
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.introspect.Annotated r5;
        java.lang.Class r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r5 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        r2 := @parameter1: java.lang.Class;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.HandlerInstantiator getHandlerInstantiator()>();

        if $r1 == null goto label1;

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.HandlerInstantiator: org.codehaus.jackson.map.JsonSerializer serializerInstance(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class)>(r0, r5, r2);

        if $r6 == null goto label1;

        return $r6;

     label1:
        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: boolean canOverrideAccessModifiers()>();

        $r3 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(r2, $z0);

        $r4 = (org.codehaus.jackson.map.JsonSerializer) $r3;

        return $r4;
    }

    public final void setDateFormat(java.text.DateFormat)
    {
        org.codehaus.jackson.map.SerializationConfig r0;
        java.text.DateFormat r1;
        org.codehaus.jackson.map.SerializationConfig$Feature $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: java.text.DateFormat;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void setDateFormat(java.text.DateFormat)>(r1);

        $r2 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature WRITE_DATES_AS_TIMESTAMPS>;

        if r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: void set(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)>($r2, $z0);

        return;
    }

    public void setSerializationView(java.lang.Class)
    {
        java.lang.Class r1;
        org.codehaus.jackson.map.SerializationConfig r0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: java.lang.Class;

        r0.<org.codehaus.jackson.map.SerializationConfig: java.lang.Class _serializationView> = r1;

        return;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.SerializationConfig r2;
        int $i0;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;

        r2 := @this: org.codehaus.jackson.map.SerializationConfig;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SerializationConfig: flags=0x");

        $i0 = r2.<org.codehaus.jackson.map.SerializationConfig: int _featureFlags>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public volatile void set(org.codehaus.jackson.map.MapperConfig$ConfigFeature, boolean)
    {
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.MapperConfig$ConfigFeature r1;
        boolean z0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r2;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.MapperConfig$ConfigFeature;

        z0 := @parameter1: boolean;

        $r2 = (org.codehaus.jackson.map.SerializationConfig$Feature) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: void set(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)>($r2, z0);

        return;
    }

    public volatile void disable(org.codehaus.jackson.map.MapperConfig$ConfigFeature)
    {
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.MapperConfig$ConfigFeature r1;
        org.codehaus.jackson.map.SerializationConfig$Feature $r2;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.MapperConfig$ConfigFeature;

        $r2 = (org.codehaus.jackson.map.SerializationConfig$Feature) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: void disable(org.codehaus.jackson.map.SerializationConfig$Feature)>($r2);

        return;
    }

    public volatile void enable(org.codehaus.jackson.map.MapperConfig$ConfigFeature)
    {
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.MapperConfig$ConfigFeature r1;
        org.codehaus.jackson.map.SerializationConfig$Feature $r2;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.MapperConfig$ConfigFeature;

        $r2 = (org.codehaus.jackson.map.SerializationConfig$Feature) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: void enable(org.codehaus.jackson.map.SerializationConfig$Feature)>($r2);

        return;
    }

    public volatile boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature)
    {
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.map.MapperConfig$ConfigFeature r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.MapperConfig$ConfigFeature;

        $z0 = specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature)>(r1);

        return $z0;
    }

    public volatile org.codehaus.jackson.map.MapperConfig$Impl without(org.codehaus.jackson.map.MapperConfig$ConfigFeature[])
    {
        org.codehaus.jackson.map.SerializationConfig r0, $r3;
        org.codehaus.jackson.map.MapperConfig$ConfigFeature[] r1;
        org.codehaus.jackson.map.SerializationConfig$Feature[] $r2;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.MapperConfig$ConfigFeature[];

        $r2 = (org.codehaus.jackson.map.SerializationConfig$Feature[]) r1;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig without(org.codehaus.jackson.map.SerializationConfig$Feature[])>($r2);

        return $r3;
    }

    public volatile org.codehaus.jackson.map.MapperConfig$Impl 'with'(org.codehaus.jackson.map.MapperConfig$ConfigFeature[])
    {
        org.codehaus.jackson.map.SerializationConfig r0, $r3;
        org.codehaus.jackson.map.MapperConfig$ConfigFeature[] r1;
        org.codehaus.jackson.map.SerializationConfig$Feature[] $r2;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.MapperConfig$ConfigFeature[];

        $r2 = (org.codehaus.jackson.map.SerializationConfig$Feature[]) r1;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig 'with'(org.codehaus.jackson.map.SerializationConfig$Feature[])>($r2);

        return $r3;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.SerializationConfig r0, $r2;
        org.codehaus.jackson.map.AnnotationIntrospector r1;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.SerializationConfig r0, $r2;
        org.codehaus.jackson.map.AnnotationIntrospector r1;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)
    {
        org.codehaus.jackson.map.SerializationConfig r0, $r2;
        org.codehaus.jackson.map.HandlerInstantiator r1;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.HandlerInstantiator;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withDateFormat(java.text.DateFormat)
    {
        org.codehaus.jackson.map.SerializationConfig r0, $r2;
        java.text.DateFormat r1;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: java.text.DateFormat;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withDateFormat(java.text.DateFormat)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)
    {
        org.codehaus.jackson.map.type.TypeFactory r1;
        org.codehaus.jackson.map.SerializationConfig r0, $r2;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.type.TypeFactory;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)
    {
        org.codehaus.jackson.map.PropertyNamingStrategy r1;
        org.codehaus.jackson.map.SerializationConfig r0, $r2;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.PropertyNamingStrategy;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.SerializationConfig r0, $r2;
        org.codehaus.jackson.map.jsontype.SubtypeResolver r1;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)
    {
        org.codehaus.jackson.map.SerializationConfig r0, $r2;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder r1;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.jsontype.TypeResolverBuilder;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod, org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    {
        org.codehaus.jackson.annotate.JsonAutoDetect$Visibility r2;
        org.codehaus.jackson.map.SerializationConfig r0, $r3;
        org.codehaus.jackson.annotate.JsonMethod r1;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.annotate.JsonMethod;

        r2 := @parameter1: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>(r1, r2);

        return $r3;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)
    {
        org.codehaus.jackson.map.SerializationConfig r0, $r2;
        org.codehaus.jackson.map.introspect.VisibilityChecker r1;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.VisibilityChecker;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.SerializationConfig r0, $r2;
        org.codehaus.jackson.map.AnnotationIntrospector r1;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)
    {
        org.codehaus.jackson.map.ClassIntrospector r1;
        org.codehaus.jackson.map.SerializationConfig r0, $r2;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.ClassIntrospector;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.SerializationConfig r0, $r2;
        org.codehaus.jackson.map.jsontype.SubtypeResolver r1;

        r0 := @this: org.codehaus.jackson.map.SerializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)>(r1);

        return $r2;
    }
}
