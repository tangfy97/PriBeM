public class org.apache.tika.utils.RereadableInputStream extends java.io.InputStream
{
    private java.io.InputStream originalInputStream;
    private java.io.InputStream inputStream;
    private int maxBytesInMemory;
    private boolean firstPass;
    private boolean bufferIsInFile;
    private byte[] byteBuffer;
    private int size;
    private java.io.File storeFile;
    private java.io.OutputStream storeOutputStream;
    private boolean readToEndOfStreamOnFirstRewind;
    private boolean closeOriginalStreamOnClose;

    public void <init>(java.io.InputStream, int, boolean, boolean)
    {
        byte[] $r2;
        int i0;
        org.apache.tika.utils.RereadableInputStream r0;
        java.io.InputStream r1;
        boolean z0, z1;

        r0 := @this: org.apache.tika.utils.RereadableInputStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.apache.tika.utils.RereadableInputStream: boolean firstPass> = 1;

        r0.<org.apache.tika.utils.RereadableInputStream: boolean readToEndOfStreamOnFirstRewind> = 1;

        r0.<org.apache.tika.utils.RereadableInputStream: boolean closeOriginalStreamOnClose> = 1;

        r0.<org.apache.tika.utils.RereadableInputStream: java.io.InputStream inputStream> = r1;

        r0.<org.apache.tika.utils.RereadableInputStream: java.io.InputStream originalInputStream> = r1;

        r0.<org.apache.tika.utils.RereadableInputStream: int maxBytesInMemory> = i0;

        $r2 = newarray (byte)[i0];

        r0.<org.apache.tika.utils.RereadableInputStream: byte[] byteBuffer> = $r2;

        r0.<org.apache.tika.utils.RereadableInputStream: boolean readToEndOfStreamOnFirstRewind> = z0;

        r0.<org.apache.tika.utils.RereadableInputStream: boolean closeOriginalStreamOnClose> = z1;

        return;
    }

    public int read() throws java.io.IOException
    {
        int $i0;
        org.apache.tika.utils.RereadableInputStream r0;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: org.apache.tika.utils.RereadableInputStream;

        $r1 = r0.<org.apache.tika.utils.RereadableInputStream: java.io.InputStream inputStream>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $z0 = r0.<org.apache.tika.utils.RereadableInputStream: boolean firstPass>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.tika.utils.RereadableInputStream: void saveByte(int)>($i0);

     label1:
        return $i0;
    }

    public void rewind() throws java.io.IOException
    {
        byte[] $r3;
        java.io.BufferedInputStream $r9;
        java.io.ByteArrayInputStream $r7;
        int $i0, $i1, $i2, $i4;
        org.apache.tika.utils.RereadableInputStream r0;
        boolean $z0, $z1, $z2;
        java.io.OutputStream $r4, $r5;
        java.io.FileInputStream $r8;
        java.io.File $r2;
        java.io.InputStream $r6;

        r0 := @this: org.apache.tika.utils.RereadableInputStream;

        $z0 = r0.<org.apache.tika.utils.RereadableInputStream: boolean firstPass>;

        if $z0 == 0 goto label2;

        $z1 = r0.<org.apache.tika.utils.RereadableInputStream: boolean readToEndOfStreamOnFirstRewind>;

        if $z1 == 0 goto label2;

     label1:
        $i2 = virtualinvoke r0.<org.apache.tika.utils.RereadableInputStream: int read()>();

        $i4 = (int) -1;

        if $i2 == $i4 goto label2;

        goto label1;

     label2:
        specialinvoke r0.<org.apache.tika.utils.RereadableInputStream: void closeStream()>();

        $r5 = r0.<org.apache.tika.utils.RereadableInputStream: java.io.OutputStream storeOutputStream>;

        if $r5 == null goto label3;

        $r4 = r0.<org.apache.tika.utils.RereadableInputStream: java.io.OutputStream storeOutputStream>;

        virtualinvoke $r4.<java.io.OutputStream: void close()>();

        r0.<org.apache.tika.utils.RereadableInputStream: java.io.OutputStream storeOutputStream> = null;

     label3:
        r0.<org.apache.tika.utils.RereadableInputStream: boolean firstPass> = 0;

        $i1 = r0.<org.apache.tika.utils.RereadableInputStream: int size>;

        $i0 = r0.<org.apache.tika.utils.RereadableInputStream: int maxBytesInMemory>;

        if $i1 >= $i0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        if $z2 == 0 goto label6;

        $r7 = new java.io.ByteArrayInputStream;

        $r6 = $r7;

        $r3 = r0.<org.apache.tika.utils.RereadableInputStream: byte[] byteBuffer>;

        specialinvoke $r7.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        goto label7;

     label6:
        $r9 = new java.io.BufferedInputStream;

        $r6 = $r9;

        $r8 = new java.io.FileInputStream;

        $r2 = r0.<org.apache.tika.utils.RereadableInputStream: java.io.File storeFile>;

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        specialinvoke $r9.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r8);

     label7:
        r0.<org.apache.tika.utils.RereadableInputStream: java.io.InputStream inputStream> = $r6;

        return;
    }

    private void closeStream() throws java.io.IOException
    {
        org.apache.tika.utils.RereadableInputStream r0;
        java.io.InputStream $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.tika.utils.RereadableInputStream;

        $r1 = r0.<org.apache.tika.utils.RereadableInputStream: java.io.InputStream inputStream>;

        if $r1 == null goto label2;

        $r3 = r0.<org.apache.tika.utils.RereadableInputStream: java.io.InputStream inputStream>;

        $r2 = r0.<org.apache.tika.utils.RereadableInputStream: java.io.InputStream originalInputStream>;

        if $r3 != $r2 goto label1;

        $z0 = r0.<org.apache.tika.utils.RereadableInputStream: boolean closeOriginalStreamOnClose>;

        if $z0 == 0 goto label2;

     label1:
        $r4 = r0.<org.apache.tika.utils.RereadableInputStream: java.io.InputStream inputStream>;

        virtualinvoke $r4.<java.io.InputStream: void close()>();

        r0.<org.apache.tika.utils.RereadableInputStream: java.io.InputStream inputStream> = null;

     label2:
        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.tika.utils.RereadableInputStream r0;
        java.io.File $r1, $r2;

        r0 := @this: org.apache.tika.utils.RereadableInputStream;

        specialinvoke r0.<org.apache.tika.utils.RereadableInputStream: void closeStream()>();

        specialinvoke r0.<java.io.InputStream: void close()>();

        $r1 = r0.<org.apache.tika.utils.RereadableInputStream: java.io.File storeFile>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.tika.utils.RereadableInputStream: java.io.File storeFile>;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label1:
        return;
    }

    public int getSize()
    {
        int $i0;
        org.apache.tika.utils.RereadableInputStream r0;

        r0 := @this: org.apache.tika.utils.RereadableInputStream;

        $i0 = r0.<org.apache.tika.utils.RereadableInputStream: int size>;

        return $i0;
    }

    private void saveByte(int) throws java.io.IOException
    {
        byte[] $r2, $r7;
        java.io.BufferedOutputStream $r4;
        byte $b5;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7;
        org.apache.tika.utils.RereadableInputStream r0;
        boolean $z0, $z1;
        java.io.OutputStream $r1, $r8, $r9;
        java.io.FileOutputStream $r5;
        java.io.File $r3, $r6;

        r0 := @this: org.apache.tika.utils.RereadableInputStream;

        i0 := @parameter0: int;

        $z0 = r0.<org.apache.tika.utils.RereadableInputStream: boolean bufferIsInFile>;

        if $z0 != 0 goto label5;

        $i4 = r0.<org.apache.tika.utils.RereadableInputStream: int size>;

        $i3 = r0.<org.apache.tika.utils.RereadableInputStream: int maxBytesInMemory>;

        if $i4 != $i3 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r3 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("TIKA_streamstore_", ".tmp");

        r0.<org.apache.tika.utils.RereadableInputStream: java.io.File storeFile> = $r3;

        r0.<org.apache.tika.utils.RereadableInputStream: boolean bufferIsInFile> = 1;

        $r4 = new java.io.BufferedOutputStream;

        $r5 = new java.io.FileOutputStream;

        $r6 = r0.<org.apache.tika.utils.RereadableInputStream: java.io.File storeFile>;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>($r6);

        specialinvoke $r4.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r5);

        r0.<org.apache.tika.utils.RereadableInputStream: java.io.OutputStream storeOutputStream> = $r4;

        $r8 = r0.<org.apache.tika.utils.RereadableInputStream: java.io.OutputStream storeOutputStream>;

        $r7 = r0.<org.apache.tika.utils.RereadableInputStream: byte[] byteBuffer>;

        $i7 = r0.<org.apache.tika.utils.RereadableInputStream: int size>;

        virtualinvoke $r8.<java.io.OutputStream: void write(byte[],int,int)>($r7, 0, $i7);

        $r9 = r0.<org.apache.tika.utils.RereadableInputStream: java.io.OutputStream storeOutputStream>;

        virtualinvoke $r9.<java.io.OutputStream: void write(int)>(i0);

        r0.<org.apache.tika.utils.RereadableInputStream: byte[] byteBuffer> = null;

        goto label4;

     label3:
        $r2 = r0.<org.apache.tika.utils.RereadableInputStream: byte[] byteBuffer>;

        $i6 = r0.<org.apache.tika.utils.RereadableInputStream: int size>;

        $b5 = (byte) i0;

        $r2[$i6] = $b5;

     label4:
        goto label6;

     label5:
        $r1 = r0.<org.apache.tika.utils.RereadableInputStream: java.io.OutputStream storeOutputStream>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

     label6:
        $i1 = r0.<org.apache.tika.utils.RereadableInputStream: int size>;

        $i2 = $i1 + 1;

        r0.<org.apache.tika.utils.RereadableInputStream: int size> = $i2;

        return;
    }
}
