class org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    final java.util.concurrent.atomic.AtomicInteger threadNumber;
    java.lang.ThreadGroup group;
    java.lang.String name;
    java.lang.ClassLoader loader;
    final org.apache.cxf.workqueue.AutomaticWorkQueueImpl this$0;

    void <init>(org.apache.cxf.workqueue.AutomaticWorkQueueImpl, java.lang.ThreadGroup, java.lang.String)
    {
        java.util.concurrent.atomic.AtomicInteger $r2;
        org.apache.cxf.workqueue.AutomaticWorkQueueImpl r1;
        org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory r0;
        java.lang.Class $r5;
        java.lang.ThreadGroup r3;
        java.lang.String r4;
        java.lang.ClassLoader $r6;

        r0 := @this: org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory;

        r1 := @parameter0: org.apache.cxf.workqueue.AutomaticWorkQueueImpl;

        r3 := @parameter1: java.lang.ThreadGroup;

        r4 := @parameter2: java.lang.String;

        r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory: org.apache.cxf.workqueue.AutomaticWorkQueueImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory: java.util.concurrent.atomic.AtomicInteger threadNumber> = $r2;

        r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory: java.lang.ThreadGroup group> = r3;

        r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory: java.lang.String name> = r4;

        $r5 = class "Lorg/apache/cxf/workqueue/AutomaticWorkQueueImpl;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory: java.lang.ClassLoader loader> = $r6;

        return;
    }

    public java.lang.Thread newThread(java.lang.Runnable)
    {
        org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory r0;
        java.lang.ThreadGroup $r1, $r6, $r14, $r15, $r16;
        java.lang.Runnable r3;
        java.util.concurrent.atomic.AtomicInteger $r10;
        java.lang.Thread $r4;
        int $i0, $i1;
        java.lang.String $r7, $r12, $r18, $r21;
        boolean $z0;
        java.lang.StringBuilder $r5, $r8, $r9, $r11, $r17, $r19, $r20;
        org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1 $r2;
        org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$2 $r13;

        r0 := @this: org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory;

        r3 := @parameter0: java.lang.Runnable;

        $r1 = r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory: java.lang.ThreadGroup group>;

        $z0 = virtualinvoke $r1.<java.lang.ThreadGroup: boolean isDestroyed()>();

        if $z0 == 0 goto label1;

        $r14 = new java.lang.ThreadGroup;

        $r15 = r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory: java.lang.ThreadGroup group>;

        $r16 = virtualinvoke $r15.<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory: java.lang.String name>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-workqueue");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>($r16, $r21);

        r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory: java.lang.ThreadGroup group> = $r14;

     label1:
        $r2 = new org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1;

        specialinvoke $r2.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1: void <init>(org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory,java.lang.Runnable)>(r0, r3);

        $r4 = new java.lang.Thread;

        $r6 = r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory: java.lang.ThreadGroup group>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory: java.lang.String name>;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-workqueue-");

        $r10 = r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory: java.util.concurrent.atomic.AtomicInteger threadNumber>;

        $i0 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)>($r6, $r2, $r12, 0L);

        $r13 = new org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$2;

        specialinvoke $r13.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$2: void <init>(org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory,java.lang.Thread)>(r0, $r4);

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r13);

        virtualinvoke $r4.<java.lang.Thread: void setDaemon(boolean)>(1);

        $i1 = virtualinvoke $r4.<java.lang.Thread: int getPriority()>();

        if $i1 == 5 goto label2;

        virtualinvoke $r4.<java.lang.Thread: void setPriority(int)>(5);

     label2:
        return $r4;
    }

    public void setName(java.lang.String)
    {
        org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory: java.lang.String name> = r1;

        return;
    }

    public void shutdown()
    {
        java.lang.Throwable $r4;
        org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory r0;
        java.lang.ThreadGroup $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory;

        $r1 = r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory: java.lang.ThreadGroup group>;

        $z0 = virtualinvoke $r1.<java.lang.ThreadGroup: boolean isDestroyed()>();

        if $z0 != 0 goto label4;

     label1:
        $r2 = r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory: java.lang.ThreadGroup group>;

        virtualinvoke $r2.<java.lang.ThreadGroup: void destroy()>();

        $r3 = r0.<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory: java.lang.ThreadGroup group>;

        virtualinvoke $r3.<java.lang.ThreadGroup: void setDaemon(boolean)>(1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
