public class com.coremedia.iso.boxes.fragment.TrackRunBox extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    private int dataOffset;
    private com.coremedia.iso.boxes.fragment.SampleFlags firstSampleFlags;
    private java.util.List entries;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_6;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_7;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_8;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_9;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_10;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_11;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_12;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_13;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_14;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_15;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_16;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_17;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_18;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_19;

    public java.util.List getEntries()
    {
        java.util.List $r4;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        return $r4;
    }

    public void setDataOffset(int)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        int i0, $i1, $i2, $i3, $i4, $i6;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        i0 := @parameter0: int;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object intObject(int)>(i0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        $i6 = (int) -1;

        if i0 != $i6 goto label1;

        $i3 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i4 = $i3 & 16777214;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i4);

        goto label2;

     label1:
        $i1 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i2 = $i1 | 1;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i2);

     label2:
        r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int dataOffset> = i0;

        return;
    }

    public long[] getSampleCompositionTimeOffsets()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        long $l2;
        com.coremedia.iso.boxes.fragment.TrackRunBox$Entry $r8;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        java.util.List $r4, $r6;
        long[] r5;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1, i3;
        java.lang.Object $r7;
        org.aspectj.lang.JoinPoint $r2;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $z0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isSampleCompositionTimeOffsetPresent()>();

        if $z0 == 0 goto label3;

        $r4 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        r5 = newarray (long)[$i0];

        i3 = 0;

        goto label2;

     label1:
        $r6 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i3);

        $r8 = (com.coremedia.iso.boxes.fragment.TrackRunBox$Entry) $r7;

        $l2 = virtualinvoke $r8.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: long getSampleCompositionTimeOffset()>();

        r5[i3] = $l2;

        i3 = i3 + 1;

     label2:
        $i1 = lengthof r5;

        if i3 < $i1 goto label1;

        return r5;

     label3:
        return null;
    }

    public void <init>()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        java.util.ArrayList $r1;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("trun");

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries> = $r1;

        return;
    }

    protected long getContentSize()
    {
        long $l8, $l9, $l10, l11, l12;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        l11 = 8L;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 1;

        if $i1 != 1 goto label1;

        l11 = 12L;

     label1:
        $i2 = $i0 & 4;

        if $i2 != 4 goto label2;

        l11 = l11 + 4L;

     label2:
        l12 = 0L;

        $i3 = $i0 & 256;

        if $i3 != 256 goto label3;

        l12 = 4L;

     label3:
        $i4 = $i0 & 512;

        if $i4 != 512 goto label4;

        l12 = l12 + 4L;

     label4:
        $i5 = $i0 & 1024;

        if $i5 != 1024 goto label5;

        l12 = l12 + 4L;

     label5:
        $i6 = $i0 & 2048;

        if $i6 != 2048 goto label6;

        l12 = l12 + 4L;

     label6:
        $r1 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        $i7 = interfaceinvoke $r1.<java.util.List: int size()>();

        $l8 = (long) $i7;

        $l9 = l12 * $l8;

        $l10 = l11 + $l9;

        return $l10;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        long $l1, $l10, $l12, $l13, $l14, $l16;
        com.coremedia.iso.boxes.fragment.TrackRunBox$Entry r6;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        java.nio.ByteBuffer r1;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i15;
        boolean $z0;
        java.util.Iterator $r4;
        java.util.List $r2, $r3;
        com.coremedia.iso.boxes.fragment.SampleFlags $r7, $r8;
        java.lang.Object $r5;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $r2 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $l1 = (long) $i0;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l1);

        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i3 = $i2 & 1;

        if $i3 != 1 goto label1;

        $i15 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int dataOffset>;

        $l16 = (long) $i15;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l16);

     label1:
        $i4 = $i2 & 4;

        if $i4 != 4 goto label2;

        $r8 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: com.coremedia.iso.boxes.fragment.SampleFlags firstSampleFlags>;

        virtualinvoke $r8.<com.coremedia.iso.boxes.fragment.SampleFlags: void getContent(java.nio.ByteBuffer)>(r1);

     label2:
        $r3 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label8;

     label3:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.coremedia.iso.boxes.fragment.TrackRunBox$Entry) $r5;

        $i5 = $i2 & 256;

        if $i5 != 256 goto label4;

        $l14 = staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: long access$0(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry)>(r6);

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l14);

     label4:
        $i6 = $i2 & 512;

        if $i6 != 512 goto label5;

        $l13 = staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: long access$1(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry)>(r6);

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l13);

     label5:
        $i7 = $i2 & 1024;

        if $i7 != 1024 goto label6;

        $r7 = staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: com.coremedia.iso.boxes.fragment.SampleFlags access$2(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry)>(r6);

        virtualinvoke $r7.<com.coremedia.iso.boxes.fragment.SampleFlags: void getContent(java.nio.ByteBuffer)>(r1);

     label6:
        $i8 = $i2 & 2048;

        if $i8 != 2048 goto label8;

        $i9 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getVersion()>();

        if $i9 != 0 goto label7;

        $l12 = staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: long access$3(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry)>(r6);

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l12);

        goto label8;

     label7:
        $l10 = staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: long access$3(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry)>(r6);

        $i11 = (int) $l10;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i11);

     label8:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        return;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox$Entry $r7;
        java.nio.ByteBuffer r1;
        byte $b23;
        java.util.List $r5;
        long $l0, $l15, $l16, $l17, $l18, $l19, $l22;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i20, i21, $i25, $i26;
        com.coremedia.iso.boxes.fragment.SampleFlags $r6, $r8;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $l0 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $i1 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i2 = $i1 & 1;

        if $i2 != 1 goto label01;

        $l19 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $i20 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l19);

        r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int dataOffset> = $i20;

        goto label02;

     label01:
        $i25 = (int) -1;

        r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int dataOffset> = $i25;

     label02:
        $i3 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i4 = $i3 & 4;

        if $i4 != 4 goto label03;

        $r6 = new com.coremedia.iso.boxes.fragment.SampleFlags;

        specialinvoke $r6.<com.coremedia.iso.boxes.fragment.SampleFlags: void <init>(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: com.coremedia.iso.boxes.fragment.SampleFlags firstSampleFlags> = $r6;

     label03:
        i21 = 0;

        goto label10;

     label04:
        $r7 = new com.coremedia.iso.boxes.fragment.TrackRunBox$Entry;

        specialinvoke $r7.<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void <init>()>();

        $i5 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i6 = $i5 & 256;

        if $i6 != 256 goto label05;

        $l18 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void access$4(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry,long)>($r7, $l18);

     label05:
        $i7 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i8 = $i7 & 512;

        if $i8 != 512 goto label06;

        $l17 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void access$5(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry,long)>($r7, $l17);

     label06:
        $i9 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i10 = $i9 & 1024;

        if $i10 != 1024 goto label07;

        $r8 = new com.coremedia.iso.boxes.fragment.SampleFlags;

        specialinvoke $r8.<com.coremedia.iso.boxes.fragment.SampleFlags: void <init>(java.nio.ByteBuffer)>(r1);

        staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void access$6(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry,com.coremedia.iso.boxes.fragment.SampleFlags)>($r7, $r8);

     label07:
        $i11 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i12 = $i11 & 2048;

        if $i12 != 2048 goto label09;

        $i13 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getVersion()>();

        if $i13 != 0 goto label08;

        $l16 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void access$7(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry,long)>($r7, $l16);

        goto label09;

     label08:
        $i14 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $l15 = (long) $i14;

        staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: void access$7(com.coremedia.iso.boxes.fragment.TrackRunBox$Entry,long)>($r7, $l15);

     label09:
        $r5 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7);

        i21 = i21 + 1;

     label10:
        $l22 = (long) i21;

        $b23 = $l22 cmp $l0;

        $i26 = (int) $b23;

        if $i26 < 0 goto label04;

        return;
    }

    public long getSampleCount()
    {
        java.util.List $r4;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0;
        long $l1;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $l1 = (long) $i0;

        return $l1;
    }

    public boolean isDataOffsetPresent()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 1;

        if $i1 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isFirstSampleFlagsPresent()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 4;

        if $i1 != 4 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isSampleSizePresent()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_6>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 512;

        if $i1 != 512 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isSampleDurationPresent()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_7>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 256;

        if $i1 != 256 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isSampleFlagsPresent()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_8>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 1024;

        if $i1 != 1024 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isSampleCompositionTimeOffsetPresent()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_9>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 2048;

        if $i1 != 2048 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setDataOffsetPresent(boolean)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;
        boolean z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        z0 := @parameter0: boolean;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_10>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object booleanObject(boolean)>(z0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        if z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i3 = $i2 | 1;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i3);

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 16777214;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i1);

     label2:
        return;
    }

    public void setSampleSizePresent(boolean)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;
        boolean z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        z0 := @parameter0: boolean;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_11>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object booleanObject(boolean)>(z0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        if z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i3 = $i2 | 512;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i3);

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 16776703;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i1);

     label2:
        return;
    }

    public void setSampleDurationPresent(boolean)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;
        boolean z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        z0 := @parameter0: boolean;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_12>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object booleanObject(boolean)>(z0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        if z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i3 = $i2 | 256;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i3);

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 16776959;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i1);

     label2:
        return;
    }

    public void setSampleFlagsPresent(boolean)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;
        boolean z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        z0 := @parameter0: boolean;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_13>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object booleanObject(boolean)>(z0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        if z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i3 = $i2 | 1024;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i3);

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 16776191;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i1);

     label2:
        return;
    }

    public void setSampleCompositionTimeOffsetPresent(boolean)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;
        boolean z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        z0 := @parameter0: boolean;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_14>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object booleanObject(boolean)>(z0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        if z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i3 = $i2 | 2048;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i3);

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 & 16775167;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i1);

     label2:
        return;
    }

    public int getDataOffset()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_15>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $i0 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int dataOffset>;

        return $i0;
    }

    public com.coremedia.iso.boxes.fragment.SampleFlags getFirstSampleFlags()
    {
        com.coremedia.iso.boxes.fragment.SampleFlags $r4;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_16>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: com.coremedia.iso.boxes.fragment.SampleFlags firstSampleFlags>;

        return $r4;
    }

    public void setFirstSampleFlags(com.coremedia.iso.boxes.fragment.SampleFlags)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        com.coremedia.iso.boxes.fragment.TrackRunBox r1;
        com.coremedia.iso.boxes.fragment.SampleFlags r0;
        org.aspectj.lang.JoinPoint$StaticPart $r2;
        int $i0, $i1, $i2, $i3;
        org.aspectj.lang.JoinPoint $r3;

        r1 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        r0 := @parameter0: com.coremedia.iso.boxes.fragment.SampleFlags;

        $r2 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_17>;

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r1, r1, r0);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        if r0 != null goto label1;

        $i2 = virtualinvoke r1.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i3 = $i2 & 16777211;

        virtualinvoke r1.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i3);

        goto label2;

     label1:
        $i0 = virtualinvoke r1.<com.coremedia.iso.boxes.fragment.TrackRunBox: int getFlags()>();

        $i1 = $i0 | 4;

        virtualinvoke r1.<com.coremedia.iso.boxes.fragment.TrackRunBox: void setFlags(int)>($i1);

     label2:
        r1.<com.coremedia.iso.boxes.fragment.TrackRunBox: com.coremedia.iso.boxes.fragment.SampleFlags firstSampleFlags> = r0;

        return;
    }

    public java.lang.String toString()
    {
        com.coremedia.iso.boxes.fragment.TrackRunBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1;
        java.lang.String $r15;
        org.aspectj.lang.JoinPoint $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        java.util.List $r6;
        com.coremedia.iso.boxes.fragment.SampleFlags $r14;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_18>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TrackRunBox");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{sampleCount=");

        $r6 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dataOffset=");

        $i1 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: int dataOffset>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dataOffsetPresent=");

        $z0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isDataOffsetPresent()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleSizePresent=");

        $z1 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isSampleSizePresent()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleDurationPresent=");

        $z2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isSampleDurationPresent()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleFlagsPresentPresent=");

        $z3 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isSampleFlagsPresent()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleCompositionTimeOffsetPresent=");

        $z4 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: boolean isSampleCompositionTimeOffsetPresent()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", firstSampleFlags=");

        $r14 = r0.<com.coremedia.iso.boxes.fragment.TrackRunBox: com.coremedia.iso.boxes.fragment.SampleFlags firstSampleFlags>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r15 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public void setEntries(java.util.List)
    {
        java.util.List r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        org.aspectj.lang.JoinPoint$StaticPart $r2;
        com.coremedia.iso.boxes.fragment.TrackRunBox r1;
        org.aspectj.lang.JoinPoint $r3;

        r1 := @this: com.coremedia.iso.boxes.fragment.TrackRunBox;

        r0 := @parameter0: java.util.List;

        $r2 = <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_19>;

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r1, r1, r0);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        r1.<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List entries> = r0;

        return;
    }

    static void <clinit>()
    {
        <com.coremedia.iso.boxes.fragment.TrackRunBox: java.lang.String TYPE> = "trun";

        staticinvoke <com.coremedia.iso.boxes.fragment.TrackRunBox: void ajc$preClinit()>();

        return;
    }

    private static void ajc$preClinit()
    {
        org.aspectj.runtime.reflect.Factory $r0;
        org.aspectj.lang.JoinPoint$StaticPart $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40;
        org.aspectj.lang.reflect.MethodSignature $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39;

        $r0 = new org.aspectj.runtime.reflect.Factory;

        specialinvoke $r0.<org.aspectj.runtime.reflect.Factory: void <init>(java.lang.String,java.lang.Class)>("TrackRunBox.java", class "Lcom/coremedia/iso/boxes/fragment/TrackRunBox;");

        $r1 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getEntries", "com.coremedia.iso.boxes.fragment.TrackRunBox", "", "", "", "java.util.List");

        $r2 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r1, 57);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0> = $r2;

        $r3 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setDataOffset", "com.coremedia.iso.boxes.fragment.TrackRunBox", "int", "dataOffset", "", "void");

        $r4 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r3, 120);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1> = $r4;

        $r5 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setDataOffsetPresent", "com.coremedia.iso.boxes.fragment.TrackRunBox", "boolean", "v", "", "void");

        $r6 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r5, 271);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_10> = $r6;

        $r7 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setSampleSizePresent", "com.coremedia.iso.boxes.fragment.TrackRunBox", "boolean", "v", "", "void");

        $r8 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r7, 279);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_11> = $r8;

        $r9 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setSampleDurationPresent", "com.coremedia.iso.boxes.fragment.TrackRunBox", "boolean", "v", "", "void");

        $r10 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r9, 287);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_12> = $r10;

        $r11 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setSampleFlagsPresent", "com.coremedia.iso.boxes.fragment.TrackRunBox", "boolean", "v", "", "void");

        $r12 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r11, 296);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_13> = $r12;

        $r13 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setSampleCompositionTimeOffsetPresent", "com.coremedia.iso.boxes.fragment.TrackRunBox", "boolean", "v", "", "void");

        $r14 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r13, 304);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_14> = $r14;

        $r15 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getDataOffset", "com.coremedia.iso.boxes.fragment.TrackRunBox", "", "", "", "int");

        $r16 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r15, 313);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_15> = $r16;

        $r17 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getFirstSampleFlags", "com.coremedia.iso.boxes.fragment.TrackRunBox", "", "", "", "com.coremedia.iso.boxes.fragment.SampleFlags");

        $r18 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r17, 317);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_16> = $r18;

        $r19 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setFirstSampleFlags", "com.coremedia.iso.boxes.fragment.TrackRunBox", "com.coremedia.iso.boxes.fragment.SampleFlags", "firstSampleFlags", "", "void");

        $r20 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r19, 321);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_17> = $r20;

        $r21 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "toString", "com.coremedia.iso.boxes.fragment.TrackRunBox", "", "", "", "java.lang.String");

        $r22 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r21, 331);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_18> = $r22;

        $r23 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setEntries", "com.coremedia.iso.boxes.fragment.TrackRunBox", "java.util.List", "entries", "", "void");

        $r24 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r23, 346);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_19> = $r24;

        $r25 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getSampleCompositionTimeOffsets", "com.coremedia.iso.boxes.fragment.TrackRunBox", "", "", "", "[J");

        $r26 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r25, 129);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2> = $r26;

        $r27 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getSampleCount", "com.coremedia.iso.boxes.fragment.TrackRunBox", "", "", "", "long");

        $r28 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r27, 242);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3> = $r28;

        $r29 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "isDataOffsetPresent", "com.coremedia.iso.boxes.fragment.TrackRunBox", "", "", "", "boolean");

        $r30 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r29, 246);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4> = $r30;

        $r31 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "isFirstSampleFlagsPresent", "com.coremedia.iso.boxes.fragment.TrackRunBox", "", "", "", "boolean");

        $r32 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r31, 250);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5> = $r32;

        $r33 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "isSampleSizePresent", "com.coremedia.iso.boxes.fragment.TrackRunBox", "", "", "", "boolean");

        $r34 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r33, 255);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_6> = $r34;

        $r35 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "isSampleDurationPresent", "com.coremedia.iso.boxes.fragment.TrackRunBox", "", "", "", "boolean");

        $r36 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r35, 259);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_7> = $r36;

        $r37 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "isSampleFlagsPresent", "com.coremedia.iso.boxes.fragment.TrackRunBox", "", "", "", "boolean");

        $r38 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r37, 263);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_8> = $r38;

        $r39 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "isSampleCompositionTimeOffsetPresent", "com.coremedia.iso.boxes.fragment.TrackRunBox", "", "", "", "boolean");

        $r40 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r39, 267);

        <com.coremedia.iso.boxes.fragment.TrackRunBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_9> = $r40;

        return;
    }
}
