public abstract class org.apache.commons.configuration.AbstractFileConfiguration extends org.apache.commons.configuration.BaseConfiguration implements org.apache.commons.configuration.FileConfiguration
{
    public static final int EVENT_RELOAD;
    protected java.lang.String fileName;
    protected java.lang.String basePath;
    protected boolean autoSave;
    protected org.apache.commons.configuration.reloading.ReloadingStrategy strategy;
    private java.lang.Object reloadLock;
    private java.lang.String encoding;
    private java.net.URL sourceURL;
    private int noReload;

    public void <init>()
    {
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.lang.Object $r1;
        java.lang.Class $r2;
        org.apache.commons.logging.Log $r3;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.BaseConfiguration: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.Object reloadLock> = $r1;

        specialinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void initReloadingStrategy()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r2);

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setLogger(org.apache.commons.logging.Log)>($r3);

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void addErrorLogListener()>();

        return;
    }

    public void <init>(java.lang.String) throws org.apache.commons.configuration.ConfigurationException
    {
        java.lang.String r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void <init>()>();

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setFileName(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void load()>();

        return;
    }

    public void <init>(java.io.File) throws org.apache.commons.configuration.ConfigurationException
    {
        java.io.File r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void <init>()>();

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setFile(java.io.File)>(r1);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void load()>();

     label1:
        return;
    }

    public void <init>(java.net.URL) throws org.apache.commons.configuration.ConfigurationException
    {
        java.net.URL r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.net.URL;

        specialinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void <init>()>();

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setURL(java.net.URL)>(r1);

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void load()>();

        return;
    }

    public void load() throws org.apache.commons.configuration.ConfigurationException
    {
        java.net.URL $r1, $r3;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        $r1 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL>;

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void load(java.net.URL)>($r3);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String getFileName()>();

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void load(java.lang.String)>($r2);

     label2:
        return;
    }

    public void load(java.lang.String) throws org.apache.commons.configuration.ConfigurationException
    {
        java.net.URL $r3;
        java.lang.StringBuffer $r5, $r6, $r7, $r11, $r12, $r13;
        java.lang.String r1, $r2, $r8, $r14;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.lang.Exception $r9;
        org.apache.commons.configuration.ConfigurationException $r4, $r10, $r15;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String basePath>;

        $r3 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: java.net.URL locate(java.lang.String,java.lang.String)>($r2, r1);

        if $r3 != null goto label2;

        $r4 = new org.apache.commons.configuration.ConfigurationException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot locate configuration source ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void load(java.net.URL)>($r3);

     label3:
        goto label6;

     label4:
        $r15 := @caughtexception;

        throw $r15;

     label5:
        $r9 := @caughtexception;

        $r10 = new org.apache.commons.configuration.ConfigurationException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to load the configuration file ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r14, $r9);

        throw $r10;

     label6:
        return;

        catch org.apache.commons.configuration.ConfigurationException from label1 to label3 with label4;
        catch java.lang.Exception from label1 to label3 with label5;
    }

    public void load(java.io.File) throws org.apache.commons.configuration.ConfigurationException
    {
        java.net.URL $r2;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.io.File r1;
        java.lang.Exception $r3;
        java.lang.StringBuffer $r5, $r6, $r7;
        java.lang.String $r8;
        org.apache.commons.configuration.ConfigurationException $r4, $r9;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.io.File;

     label1:
        $r2 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: java.net.URL toURL(java.io.File)>(r1);

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void load(java.net.URL)>($r2);

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        throw $r9;

     label4:
        $r3 := @caughtexception;

        $r4 = new org.apache.commons.configuration.ConfigurationException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to load the configuration file ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r3);

        throw $r4;

     label5:
        return;

        catch org.apache.commons.configuration.ConfigurationException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public void load(java.net.URL) throws org.apache.commons.configuration.ConfigurationException
    {
        java.lang.Throwable $r11;
        java.net.URL $r1, r2;
        java.lang.StringBuffer $r14, $r15, $r16;
        java.lang.String $r5, $r6, $r17;
        boolean $z0, $z1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.io.IOException $r7, $r9;
        java.lang.Exception $r12;
        java.io.File $r19;
        org.apache.commons.logging.Log $r8, $r10;
        org.apache.commons.configuration.ConfigurationException $r4, $r13, $r18;
        java.io.InputStream $r3, r20;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r2 := @parameter0: java.net.URL;

        $r1 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL>;

        if $r1 != null goto label02;

        $r5 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String getBasePath()>();

        $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r5);

        if $z1 == 0 goto label01;

        $r6 = virtualinvoke r2.<java.net.URL: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setBasePath(java.lang.String)>($r6);

     label01:
        r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL> = r2;

     label02:
        $r19 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: java.io.File fileFromURL(java.net.URL)>(r2);

        if $r19 == null goto label03;

        $z0 = virtualinvoke $r19.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label03;

        $r4 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r4.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String)>("Cannot load a configuration from a directory");

        throw $r4;

     label03:
        r20 = null;

     label04:
        $r3 = virtualinvoke r2.<java.net.URL: java.io.InputStream openStream()>();

        r20 = $r3;

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void load(java.io.InputStream)>($r3);

     label05:
        goto label12;

     label06:
        goto label11;

     label07:
        $r18 := @caughtexception;

        throw $r18;

     label08:
        $r12 := @caughtexception;

        $r13 = new org.apache.commons.configuration.ConfigurationException;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to load the configuration from the URL ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r17, $r12);

        throw $r13;

     label09:
        $r11 := @caughtexception;

        goto label16;

     label10:
        throw $r11;

     label11:
        return;

     label12:
        if $r3 == null goto label13;

        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label13:
        goto label15;

     label14:
        $r9 := @caughtexception;

        $r10 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: org.apache.commons.logging.Log getLogger()>();

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("Could not close input stream", $r9);

     label15:
        goto label06;

     label16:
        if r20 == null goto label17;

        virtualinvoke r20.<java.io.InputStream: void close()>();

     label17:
        goto label19;

     label18:
        $r7 := @caughtexception;

        $r8 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: org.apache.commons.logging.Log getLogger()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("Could not close input stream", $r7);

     label19:
        goto label10;

        catch org.apache.commons.configuration.ConfigurationException from label04 to label05 with label07;
        catch java.lang.Exception from label04 to label05 with label08;
        catch java.lang.Throwable from label04 to label06 with label09;
        catch java.lang.Throwable from label07 to label10 with label09;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label16 to label17 with label18;
    }

    public void load(java.io.InputStream) throws org.apache.commons.configuration.ConfigurationException
    {
        java.lang.String $r2;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String getEncoding()>();

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void load(java.io.InputStream,java.lang.String)>(r1, $r2);

        return;
    }

    public void load(java.io.InputStream, java.lang.String) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.AbstractFileConfiguration r1;
        java.io.InputStreamReader $r2, $r4, r7;
        java.lang.String r0;
        java.io.UnsupportedEncodingException $r5;
        org.apache.commons.configuration.ConfigurationException $r6;
        java.io.InputStream r3;

        r1 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r3 := @parameter0: java.io.InputStream;

        r0 := @parameter1: java.lang.String;

        r7 = null;

        if r0 == null goto label4;

     label1:
        $r4 = new java.io.InputStreamReader;

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r3, r0);

        r7 = $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r6.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("The requested encoding is not supported, try the default encoding.", $r5);

        throw $r6;

     label4:
        if r7 != null goto label5;

        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r3);

        r7 = $r2;

     label5:
        virtualinvoke r1.<org.apache.commons.configuration.AbstractFileConfiguration: void load(java.io.Reader)>(r7);

        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public void save() throws org.apache.commons.configuration.ConfigurationException
    {
        java.net.URL $r2, $r5;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        org.apache.commons.configuration.reloading.ReloadingStrategy $r4;
        java.lang.String $r1, $r3;
        org.apache.commons.configuration.ConfigurationException $r6;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String getFileName()>();

        if $r1 != null goto label1;

        $r6 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r6.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String)>("No file name has been set!");

        throw $r6;

     label1:
        $r2 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL>;

        if $r2 == null goto label2;

        $r5 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL>;

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void save(java.net.URL)>($r5);

        goto label3;

     label2:
        $r3 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String fileName>;

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void save(java.lang.String)>($r3);

     label3:
        $r4 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: org.apache.commons.configuration.reloading.ReloadingStrategy strategy>;

        interfaceinvoke $r4.<org.apache.commons.configuration.reloading.ReloadingStrategy: void init()>();

        return;
    }

    public void save(java.lang.String) throws org.apache.commons.configuration.ConfigurationException
    {
        java.lang.StringBuffer $r5, $r6, $r7, $r11, $r12, $r13;
        java.lang.String r1, $r2, $r8, $r14;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.io.File $r3;
        java.lang.Exception $r9;
        org.apache.commons.configuration.ConfigurationException $r4, $r10, $r15;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String basePath>;

        $r3 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: java.io.File getFile(java.lang.String,java.lang.String)>($r2, r1);

        if $r3 != null goto label2;

        $r4 = new org.apache.commons.configuration.ConfigurationException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid file name for save: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void save(java.io.File)>($r3);

     label3:
        goto label6;

     label4:
        $r15 := @caughtexception;

        throw $r15;

     label5:
        $r9 := @caughtexception;

        $r10 = new org.apache.commons.configuration.ConfigurationException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to save the configuration to the file ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r14, $r9);

        throw $r10;

     label6:
        return;

        catch org.apache.commons.configuration.ConfigurationException from label1 to label3 with label4;
        catch java.lang.Exception from label1 to label3 with label5;
    }

    public void save(java.net.URL) throws org.apache.commons.configuration.ConfigurationException
    {
        java.lang.Throwable $r13;
        java.net.HttpURLConnection r21, r22;
        java.net.URL r0;
        java.net.URLConnection $r2;
        java.lang.StringBuffer $r6, $r7, $r8, $r9, $r11, $r16, $r17, $r18;
        int $i0, $i1;
        java.lang.String $r10, $r12, $r19;
        boolean $z0, $z1;
        java.io.OutputStream $r3, r20;
        org.apache.commons.configuration.AbstractFileConfiguration r4;
        java.io.IOException $r5, $r14;
        java.io.File $r1;
        org.apache.commons.configuration.ConfigurationException $r15;

        r4 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r0 := @parameter0: java.net.URL;

        $r1 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: java.io.File fileFromURL(java.net.URL)>(r0);

        if $r1 == null goto label1;

        virtualinvoke r4.<org.apache.commons.configuration.AbstractFileConfiguration: void save(java.io.File)>($r1);

        goto label8;

     label1:
        r20 = null;

     label2:
        $r2 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r2.<java.net.URLConnection: void setDoOutput(boolean)>(1);

        $z0 = $r2 instanceof java.net.HttpURLConnection;

        if $z0 == 0 goto label3;

        r21 = (java.net.HttpURLConnection) $r2;

        virtualinvoke r21.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("PUT");

     label3:
        $r3 = virtualinvoke $r2.<java.net.URLConnection: java.io.OutputStream getOutputStream()>();

        r20 = $r3;

        virtualinvoke r4.<org.apache.commons.configuration.AbstractFileConfiguration: void save(java.io.OutputStream)>($r3);

        $z1 = $r2 instanceof java.net.HttpURLConnection;

        if $z1 == 0 goto label4;

        r22 = (java.net.HttpURLConnection) $r2;

        $i0 = virtualinvoke r22.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i0 < 400 goto label4;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("HTTP Error ");

        $i1 = virtualinvoke r22.<java.net.HttpURLConnection: int getResponseCode()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r10 = virtualinvoke r22.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r5;

     label4:
        specialinvoke r4.<org.apache.commons.configuration.AbstractFileConfiguration: void closeSilent(java.io.OutputStream)>($r3);

        goto label8;

     label5:
        $r14 := @caughtexception;

        $r15 = new org.apache.commons.configuration.ConfigurationException;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not save to URL ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r19, $r14);

        throw $r15;

     label6:
        $r13 := @caughtexception;

     label7:
        specialinvoke r4.<org.apache.commons.configuration.AbstractFileConfiguration: void closeSilent(java.io.OutputStream)>(r20);

        throw $r13;

     label8:
        return;

        catch java.io.IOException from label2 to label4 with label5;
        catch java.lang.Throwable from label2 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public void save(java.io.File) throws org.apache.commons.configuration.ConfigurationException
    {
        java.lang.Throwable $r3;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.io.FileOutputStream $r2, r10;
        java.io.IOException $r4;
        java.io.File r1;
        java.lang.StringBuffer $r6, $r7, $r8;
        java.lang.String $r9;
        org.apache.commons.configuration.ConfigurationException $r5;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.io.File;

        r10 = null;

     label1:
        specialinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void createPath(java.io.File)>(r1);

        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        r10 = $r2;

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void save(java.io.OutputStream)>($r2);

     label2:
        specialinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void closeSilent(java.io.OutputStream)>($r2);

        goto label6;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.commons.configuration.ConfigurationException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to save the configuration to the file ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r4);

        throw $r5;

     label4:
        $r3 := @caughtexception;

     label5:
        specialinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void closeSilent(java.io.OutputStream)>(r10);

        throw $r3;

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public void save(java.io.OutputStream) throws org.apache.commons.configuration.ConfigurationException
    {
        java.io.OutputStream r1;
        java.lang.String $r2;
        org.apache.commons.configuration.AbstractFileConfiguration r0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String getEncoding()>();

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void save(java.io.OutputStream,java.lang.String)>(r1, $r2);

        return;
    }

    public void save(java.io.OutputStream, java.lang.String) throws org.apache.commons.configuration.ConfigurationException
    {
        java.io.OutputStream r3;
        org.apache.commons.configuration.AbstractFileConfiguration r1;
        java.io.OutputStreamWriter $r2, $r4, r7;
        java.lang.String r0;
        java.io.UnsupportedEncodingException $r5;
        org.apache.commons.configuration.ConfigurationException $r6;

        r1 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r3 := @parameter0: java.io.OutputStream;

        r0 := @parameter1: java.lang.String;

        r7 = null;

        if r0 == null goto label4;

     label1:
        $r4 = new java.io.OutputStreamWriter;

        specialinvoke $r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r3, r0);

        r7 = $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r6.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("The requested encoding is not supported, try the default encoding.", $r5);

        throw $r6;

     label4:
        if r7 != null goto label5;

        $r2 = new java.io.OutputStreamWriter;

        specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r3);

        r7 = $r2;

     label5:
        virtualinvoke r1.<org.apache.commons.configuration.AbstractFileConfiguration: void save(java.io.Writer)>(r7);

        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public java.lang.String getFileName()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        $r1 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String fileName>;

        return $r1;
    }

    public void setFileName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL> = null;

        r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String fileName> = r1;

        return;
    }

    public java.lang.String getBasePath()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        $r1 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String basePath>;

        return $r1;
    }

    public void setBasePath(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL> = null;

        r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String basePath> = r1;

        return;
    }

    public java.io.File getFile()
    {
        java.net.URL $r2, $r6, $r8;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.io.File $r5, $r7;
        java.lang.String $r1, $r3, $r4;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String getFileName()>();

        if $r1 != null goto label1;

        $r8 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL>;

        if $r8 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL>;

        if $r2 == null goto label2;

        $r6 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL>;

        $r7 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: java.io.File fileFromURL(java.net.URL)>($r6);

        return $r7;

     label2:
        $r3 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String getBasePath()>();

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String getFileName()>();

        $r5 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: java.io.File getFile(java.lang.String,java.lang.String)>($r3, $r4);

        return $r5;
    }

    public void setFile(java.io.File)
    {
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.lang.String $r2, $r5;
        java.io.File r1, $r3, $r4;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.io.File;

        r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL> = null;

        $r2 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setFileName(java.lang.String)>($r2);

        $r3 = virtualinvoke r1.<java.io.File: java.io.File getParentFile()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke r1.<java.io.File: java.io.File getParentFile()>();

        $r5 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        goto label2;

     label1:
        $r5 = null;

     label2:
        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setBasePath(java.lang.String)>($r5);

        return;
    }

    public java.lang.String getPath()
    {
        java.net.MalformedURLException $r7;
        java.net.URL $r2, $r5, $r6;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.io.File $r1;
        java.lang.String $r3, $r4, r8;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r8 = null;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.io.File getFile()>();

        if $r1 == null goto label1;

        r8 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

     label1:
        if r8 != null goto label5;

        $r2 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL>;

        if $r2 == null goto label2;

        $r6 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL>;

        r8 = virtualinvoke $r6.<java.net.URL: java.lang.String getPath()>();

        goto label5;

     label2:
        $r3 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String getBasePath()>();

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String getFileName()>();

        $r5 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: java.net.URL getURL(java.lang.String,java.lang.String)>($r3, $r4);

        r8 = virtualinvoke $r5.<java.net.URL: java.lang.String getPath()>();

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        return r8;

        catch java.net.MalformedURLException from label2 to label3 with label4;
    }

    public void setPath(java.lang.String)
    {
        java.lang.String r2;
        java.io.File $r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setFile(java.io.File)>($r1);

        return;
    }

    public java.net.URL getURL()
    {
        java.net.URL $r1, $r4;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        $r1 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL>;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String getBasePath()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String getFileName()>();

        $r4 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: java.net.URL locate(java.lang.String,java.lang.String)>($r2, $r3);

     label2:
        return $r4;
    }

    public void setURL(java.net.URL)
    {
        java.net.URL r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.net.URL;

        $r2 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: java.lang.String getBasePath(java.net.URL)>(r1);

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setBasePath(java.lang.String)>($r2);

        $r3 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: java.lang.String getFileName(java.net.URL)>(r1);

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setFileName(java.lang.String)>($r3);

        r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL sourceURL> = r1;

        return;
    }

    public void setAutoSave(boolean)
    {
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        boolean z0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.configuration.AbstractFileConfiguration: boolean autoSave> = z0;

        return;
    }

    public boolean isAutoSave()
    {
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        $z0 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: boolean autoSave>;

        return $z0;
    }

    protected void possiblySave()
    {
        org.apache.commons.configuration.ConfigurationRuntimeException $r3;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.lang.String $r1;
        org.apache.commons.configuration.ConfigurationException $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        $z0 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: boolean autoSave>;

        if $z0 == 0 goto label4;

        $r1 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String fileName>;

        if $r1 == null goto label4;

     label1:
        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void save()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.apache.commons.configuration.ConfigurationRuntimeException;

        specialinvoke $r3.<org.apache.commons.configuration.ConfigurationRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to auto-save", $r2);

        throw $r3;

     label4:
        return;

        catch org.apache.commons.configuration.ConfigurationException from label1 to label2 with label3;
    }

    public void addProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.commons.configuration.BaseConfiguration: void addProperty(java.lang.String,java.lang.Object)>(r1, r2);

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void possiblySave()>();

        return;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.commons.configuration.BaseConfiguration: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void possiblySave()>();

        return;
    }

    public void clearProperty(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.configuration.BaseConfiguration: void clearProperty(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void possiblySave()>();

        return;
    }

    public org.apache.commons.configuration.reloading.ReloadingStrategy getReloadingStrategy()
    {
        org.apache.commons.configuration.reloading.ReloadingStrategy $r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        $r1 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: org.apache.commons.configuration.reloading.ReloadingStrategy strategy>;

        return $r1;
    }

    public void setReloadingStrategy(org.apache.commons.configuration.reloading.ReloadingStrategy)
    {
        org.apache.commons.configuration.reloading.ReloadingStrategy r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.reloading.ReloadingStrategy;

        r0.<org.apache.commons.configuration.AbstractFileConfiguration: org.apache.commons.configuration.reloading.ReloadingStrategy strategy> = r1;

        interfaceinvoke r1.<org.apache.commons.configuration.reloading.ReloadingStrategy: void setConfiguration(org.apache.commons.configuration.FileConfiguration)>(r0);

        interfaceinvoke r1.<org.apache.commons.configuration.reloading.ReloadingStrategy: void init()>();

        return;
    }

    public void reload()
    {
        java.lang.Throwable $r13, $r14, $r16;
        java.net.URL $r4, $r5, $r10;
        java.lang.StringBuffer $r8, $r9, $r11;
        int $i0;
        java.lang.String $r12;
        boolean $z0, $z1, $z2;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.lang.Exception $r15;
        org.apache.commons.configuration.reloading.ReloadingStrategy $r2, $r6;
        java.lang.Object $r1;
        org.apache.commons.logging.Log $r3, $r7;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        $r1 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.Object reloadLock>;

        entermonitor $r1;

     label01:
        $i0 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: int noReload>;

        if $i0 != 0 goto label14;

     label02:
        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void enterNoReload()>();

        $r2 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: org.apache.commons.configuration.reloading.ReloadingStrategy strategy>;

        $z0 = interfaceinvoke $r2.<org.apache.commons.configuration.reloading.ReloadingStrategy: boolean reloadingRequired()>();

        if $z0 == 0 goto label09;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: org.apache.commons.logging.Log getLogger()>();

        $z1 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();

        if $z1 == 0 goto label03;

        $r7 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: org.apache.commons.logging.Log getLogger()>();

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Reloading configuration. URL is ");

        $r10 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL getURL()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r12);

     label03:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL getURL()>();

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(20, null, $r4, 1);

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setDetailEvents(boolean)>(0);

        $z2 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: boolean isAutoSave()>();

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setAutoSave(boolean)>(0);

     label04:
        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void clear()>();

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void load()>();

     label05:
        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setAutoSave(boolean)>($z2);

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setDetailEvents(boolean)>(1);

        goto label08;

     label06:
        $r16 := @caughtexception;

     label07:
        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setAutoSave(boolean)>($z2);

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setDetailEvents(boolean)>(1);

        throw $r16;

     label08:
        $r5 = virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.net.URL getURL()>();

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(20, null, $r5, 0);

        $r6 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: org.apache.commons.configuration.reloading.ReloadingStrategy strategy>;

        interfaceinvoke $r6.<org.apache.commons.configuration.reloading.ReloadingStrategy: void reloadingPerformed()>();

     label09:
        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void exitNoReload()>();

        goto label14;

     label10:
        $r15 := @caughtexception;

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void fireError(int,java.lang.String,java.lang.Object,java.lang.Throwable)>(20, null, null, $r15);

     label11:
        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void exitNoReload()>();

        goto label14;

     label12:
        $r14 := @caughtexception;

     label13:
        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void exitNoReload()>();

        throw $r14;

     label14:
        exitmonitor $r1;

     label15:
        goto label18;

     label16:
        $r13 := @caughtexception;

        exitmonitor $r1;

     label17:
        throw $r13;

     label18:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Exception from label02 to label09 with label10;
        catch java.lang.Throwable from label02 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label01 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    protected void enterNoReload()
    {
        java.lang.Throwable $r2;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        int $i0, $i1;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        $r1 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.Object reloadLock>;

        entermonitor $r1;

     label1:
        $i0 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: int noReload>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.configuration.AbstractFileConfiguration: int noReload> = $i1;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void exitNoReload()
    {
        java.lang.Throwable $r2;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        $r1 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.Object reloadLock>;

        entermonitor $r1;

     label1:
        $i0 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: int noReload>;

        if $i0 <= 0 goto label2;

        $i1 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: int noReload>;

        $i2 = $i1 - 1;

        r0.<org.apache.commons.configuration.AbstractFileConfiguration: int noReload> = $i2;

     label2:
        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void fireEvent(int, java.lang.String, java.lang.Object, boolean)
    {
        java.lang.Throwable $r3;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        int i0;
        java.lang.Object r2;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void enterNoReload()>();

     label1:
        specialinvoke r0.<org.apache.commons.configuration.BaseConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(i0, r1, r2, z0);

     label2:
        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void exitNoReload()>();

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void exitNoReload()>();

        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        java.lang.Throwable $r4;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.lang.Object $r1, $r3;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.Object reloadLock>;

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void reload()>();

        $r3 = specialinvoke r0.<org.apache.commons.configuration.BaseConfiguration: java.lang.Object getProperty(java.lang.String)>(r2);

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isEmpty()
    {
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void reload()>();

        $z0 = specialinvoke r0.<org.apache.commons.configuration.BaseConfiguration: boolean isEmpty()>();

        return $z0;
    }

    public boolean containsKey(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void reload()>();

        $z0 = specialinvoke r0.<org.apache.commons.configuration.BaseConfiguration: boolean containsKey(java.lang.String)>(r1);

        return $z0;
    }

    public java.util.Iterator getKeys()
    {
        java.lang.Throwable $r5;
        java.util.Iterator $r2, $r3;
        org.apache.commons.configuration.AbstractFileConfiguration r0;
        java.lang.Object $r4;
        java.util.LinkedList $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void reload()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void enterNoReload()>();

     label1:
        $r2 = specialinvoke r0.<org.apache.commons.configuration.BaseConfiguration: java.util.Iterator getKeys()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label2;

     label3:
        $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label4:
        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void exitNoReload()>();

        return $r3;

     label5:
        $r5 := @caughtexception;

     label6:
        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void exitNoReload()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void createPath(java.io.File)
    {
        org.apache.commons.configuration.AbstractFileConfiguration r2;
        java.io.File r0, $r1;
        boolean $z0, $z1;

        r2 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r0 := @parameter0: java.io.File;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<java.io.File: java.io.File getParentFile()>();

        if $r1 == null goto label1;

        $z1 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label1;

        virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

     label1:
        return;
    }

    public java.lang.String getEncoding()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        $r1 = r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String encoding>;

        return $r1;
    }

    public void setEncoding(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String encoding> = r1;

        return;
    }

    public java.lang.Object clone()
    {
        java.lang.Object $r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0, r2;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.BaseConfiguration: java.lang.Object clone()>();

        r2 = (org.apache.commons.configuration.AbstractFileConfiguration) $r1;

        virtualinvoke r2.<org.apache.commons.configuration.AbstractFileConfiguration: void setBasePath(java.lang.String)>(null);

        virtualinvoke r2.<org.apache.commons.configuration.AbstractFileConfiguration: void setFileName(java.lang.String)>(null);

        specialinvoke r2.<org.apache.commons.configuration.AbstractFileConfiguration: void initReloadingStrategy()>();

        return r2;
    }

    private void initReloadingStrategy()
    {
        org.apache.commons.configuration.reloading.InvariantReloadingStrategy $r1;
        org.apache.commons.configuration.AbstractFileConfiguration r0;

        r0 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        $r1 = new org.apache.commons.configuration.reloading.InvariantReloadingStrategy;

        specialinvoke $r1.<org.apache.commons.configuration.reloading.InvariantReloadingStrategy: void <init>()>();

        virtualinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setReloadingStrategy(org.apache.commons.configuration.reloading.ReloadingStrategy)>($r1);

        return;
    }

    private void closeSilent(java.io.OutputStream)
    {
        java.io.OutputStream r0;
        org.apache.commons.configuration.AbstractFileConfiguration r2;
        java.io.IOException $r1;
        org.apache.commons.logging.Log $r3;

        r2 := @this: org.apache.commons.configuration.AbstractFileConfiguration;

        r0 := @parameter0: java.io.OutputStream;

     label1:
        if r0 == null goto label2;

        virtualinvoke r0.<java.io.OutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r3 = virtualinvoke r2.<org.apache.commons.configuration.AbstractFileConfiguration: org.apache.commons.logging.Log getLogger()>();

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("Could not close output stream", $r1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.commons.configuration.AbstractFileConfiguration: int EVENT_RELOAD> = 20;

        return;
    }
}
