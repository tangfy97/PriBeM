final class org.apache.poi.ss.formula.atp.YearFrac extends java.lang.Object implements org.apache.poi.ss.formula.functions.FreeRefFunction
{
    public static final org.apache.poi.ss.formula.functions.FreeRefFunction instance;

    private void <init>()
    {
        org.apache.poi.ss.formula.atp.YearFrac r0;

        r0 := @this: org.apache.poi.ss.formula.atp.YearFrac;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.poi.ss.formula.eval.ValueEval evaluate(org.apache.poi.ss.formula.eval.ValueEval[], org.apache.poi.ss.formula.OperationEvaluationContext)
    {
        org.apache.poi.ss.formula.eval.ErrorEval $r6, $r8;
        org.apache.poi.ss.formula.eval.ValueEval[] r1;
        org.apache.poi.ss.formula.OperationEvaluationContext r0;
        int $i0, $i1, $i2, i3;
        org.apache.poi.ss.formula.eval.EvaluationException $r7;
        org.apache.poi.ss.formula.atp.YearFrac r9;
        double $d0, $d1, $d2;
        org.apache.poi.ss.formula.eval.ValueEval $r2, $r3, $r4;
        org.apache.poi.ss.formula.eval.NumberEval $r5;

        r9 := @this: org.apache.poi.ss.formula.atp.YearFrac;

        r1 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval[];

        r0 := @parameter1: org.apache.poi.ss.formula.OperationEvaluationContext;

        $i0 = virtualinvoke r0.<org.apache.poi.ss.formula.OperationEvaluationContext: int getRowIndex()>();

        $i1 = virtualinvoke r0.<org.apache.poi.ss.formula.OperationEvaluationContext: int getColumnIndex()>();

     label1:
        i3 = 0;

        $i2 = lengthof r1;

        lookupswitch($i2)
        {
            case 2: goto label3;
            case 3: goto label2;
            default: goto label4;
        };

     label2:
        $r2 = r1[2];

        i3 = staticinvoke <org.apache.poi.ss.formula.atp.YearFrac: int evaluateIntArg(org.apache.poi.ss.formula.eval.ValueEval,int,int)>($r2, $i0, $i1);

     label3:
        goto label6;

     label4:
        $r6 = <org.apache.poi.ss.formula.eval.ErrorEval: org.apache.poi.ss.formula.eval.ErrorEval VALUE_INVALID>;

     label5:
        return $r6;

     label6:
        $r3 = r1[0];

        $d0 = staticinvoke <org.apache.poi.ss.formula.atp.YearFrac: double evaluateDateArg(org.apache.poi.ss.formula.eval.ValueEval,int,int)>($r3, $i0, $i1);

        $r4 = r1[1];

        $d1 = staticinvoke <org.apache.poi.ss.formula.atp.YearFrac: double evaluateDateArg(org.apache.poi.ss.formula.eval.ValueEval,int,int)>($r4, $i0, $i1);

        $d2 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: double calculate(double,double,int)>($d0, $d1, i3);

     label7:
        goto label9;

     label8:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.ErrorEval getErrorEval()>();

        return $r8;

     label9:
        $r5 = new org.apache.poi.ss.formula.eval.NumberEval;

        specialinvoke $r5.<org.apache.poi.ss.formula.eval.NumberEval: void <init>(double)>($d2);

        return $r5;

        catch org.apache.poi.ss.formula.eval.EvaluationException from label1 to label5 with label8;
        catch org.apache.poi.ss.formula.eval.EvaluationException from label6 to label7 with label8;
    }

    private static double evaluateDateArg(org.apache.poi.ss.formula.eval.ValueEval, int, int) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        java.lang.Double $r4;
        org.apache.poi.ss.formula.eval.StringEval $r2;
        short $s2;
        java.util.Calendar $r5;
        org.apache.poi.ss.formula.eval.ValueEval r0, $r1;
        int i0, i1, $i3;
        java.lang.String $r3;
        boolean $z0;
        double $d0, $d1, $d2;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $s2 = (short) i1;

        $i3 = (int) $s2;

        $r1 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: org.apache.poi.ss.formula.eval.ValueEval getSingleValue(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r0, i0, $i3);

        $z0 = $r1 instanceof org.apache.poi.ss.formula.eval.StringEval;

        if $z0 == 0 goto label2;

        $r2 = (org.apache.poi.ss.formula.eval.StringEval) $r1;

        $r3 = virtualinvoke $r2.<org.apache.poi.ss.formula.eval.StringEval: java.lang.String getStringValue()>();

        $r4 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: java.lang.Double parseDouble(java.lang.String)>($r3);

        if $r4 == null goto label1;

        $d2 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        return $d2;

     label1:
        $r5 = staticinvoke <org.apache.poi.ss.formula.atp.DateParser: java.util.Calendar parseDate(java.lang.String)>($r3);

        $d1 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: double getExcelDate(java.util.Calendar,boolean)>($r5, 0);

        return $d1;

     label2:
        $d0 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: double coerceValueToDouble(org.apache.poi.ss.formula.eval.ValueEval)>($r1);

        return $d0;
    }

    private static int evaluateIntArg(org.apache.poi.ss.formula.eval.ValueEval, int, int) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        short $s2;
        org.apache.poi.ss.formula.eval.ValueEval r0, $r1;
        int i0, i1, $i3, $i4;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $s2 = (short) i1;

        $i4 = (int) $s2;

        $r1 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: org.apache.poi.ss.formula.eval.ValueEval getSingleValue(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r0, i0, $i4);

        $i3 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: int coerceValueToInt(org.apache.poi.ss.formula.eval.ValueEval)>($r1);

        return $i3;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.formula.atp.YearFrac $r0;

        $r0 = new org.apache.poi.ss.formula.atp.YearFrac;

        specialinvoke $r0.<org.apache.poi.ss.formula.atp.YearFrac: void <init>()>();

        <org.apache.poi.ss.formula.atp.YearFrac: org.apache.poi.ss.formula.functions.FreeRefFunction instance> = $r0;

        return;
    }
}
