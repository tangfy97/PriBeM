public class org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter extends java.lang.Object implements org.apache.cxf.databinding.DataWriter
{
    private static final java.util.logging.Logger LOG;

    public void <init>()
    {
        org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter r0;

        r0 := @this: org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void write(java.lang.Object, org.apache.cxf.service.model.MessagePartInfo, javax.xml.stream.XMLStreamWriter)
    {
        org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter r0;
        java.lang.Object r1;
        javax.xml.stream.XMLStreamWriter r2;
        org.apache.cxf.service.model.MessagePartInfo r3;

        r0 := @this: org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: org.apache.cxf.service.model.MessagePartInfo;

        r2 := @parameter2: javax.xml.stream.XMLStreamWriter;

        virtualinvoke r0.<org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter: void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)>(r1, r2);

        return;
    }

    public void write(java.lang.Object, javax.xml.stream.XMLStreamWriter)
    {
        java.lang.Object[] $r13;
        org.apache.cxf.common.i18n.Message $r12;
        org.apache.cxf.interceptor.Fault $r11;
        javax.xml.stream.XMLStreamReader r16;
        javax.xml.stream.XMLStreamException $r10;
        javax.xml.stream.XMLStreamWriter r8;
        java.lang.String $r7;
        boolean $z0, $z1;
        java.lang.UnsupportedOperationException $r1;
        org.apache.cxf.databinding.stax.XMLStreamWriterCallback $r9;
        java.util.logging.Logger $r14;
        org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter r15;
        java.lang.Object r0;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        java.lang.Class $r4;

        r15 := @this: org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter;

        r0 := @parameter0: java.lang.Object;

        r8 := @parameter1: javax.xml.stream.XMLStreamWriter;

     label1:
        $z0 = r0 instanceof javax.xml.stream.XMLStreamReader;

        if $z0 == 0 goto label2;

        r16 = (javax.xml.stream.XMLStreamReader) r0;

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)>(r16, r8);

        interfaceinvoke r16.<javax.xml.stream.XMLStreamReader: void close()>();

        goto label4;

     label2:
        $z1 = r0 instanceof org.apache.cxf.databinding.stax.XMLStreamWriterCallback;

        if $z1 == 0 goto label3;

        $r9 = (org.apache.cxf.databinding.stax.XMLStreamWriterCallback) r0;

        interfaceinvoke $r9.<org.apache.cxf.databinding.stax.XMLStreamWriterCallback: void write(javax.xml.stream.XMLStreamWriter)>(r8);

        goto label4;

     label3:
        $r1 = new java.lang.UnsupportedOperationException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data types of ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" are not supported.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        $r11 = new org.apache.cxf.interceptor.Fault;

        $r12 = new org.apache.cxf.common.i18n.Message;

        $r14 = <org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter: java.util.logging.Logger LOG>;

        $r13 = newarray (java.lang.Object)[0];

        specialinvoke $r12.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("COULD_NOT_READ_XML_STREAM", $r14, $r13);

        specialinvoke $r11.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message,java.lang.Throwable)>($r12, $r10);

        throw $r11;

     label6:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label4 with label5;
    }

    public void setSchema(javax.xml.validation.Schema)
    {
        org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter r0;
        javax.xml.validation.Schema r1;

        r0 := @this: org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter;

        r1 := @parameter0: javax.xml.validation.Schema;

        return;
    }

    public void setAttachments(java.util.Collection)
    {
        org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter r0;
        java.util.Collection r1;

        r0 := @this: org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter;

        r1 := @parameter0: java.util.Collection;

        return;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter r0;

        r0 := @this: org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    public volatile void write(java.lang.Object, org.apache.cxf.service.model.MessagePartInfo, java.lang.Object)
    {
        org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter r0;
        java.lang.Object r1, r3;
        javax.xml.stream.XMLStreamWriter $r4;
        org.apache.cxf.service.model.MessagePartInfo r2;

        r0 := @this: org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.cxf.service.model.MessagePartInfo;

        r3 := @parameter2: java.lang.Object;

        $r4 = (javax.xml.stream.XMLStreamWriter) r3;

        virtualinvoke r0.<org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter: void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)>(r1, r2, $r4);

        return;
    }

    public volatile void write(java.lang.Object, java.lang.Object)
    {
        org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter r0;
        java.lang.Object r1, r2;
        javax.xml.stream.XMLStreamWriter $r3;

        r0 := @this: org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (javax.xml.stream.XMLStreamWriter) r2;

        virtualinvoke r0.<org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter: void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)>(r1, $r3);

        return;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/databinding/stax/StaxDataBinding$XMLStreamDataWriter;");

        <org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
