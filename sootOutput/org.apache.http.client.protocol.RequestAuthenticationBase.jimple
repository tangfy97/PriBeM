abstract class org.apache.http.client.protocol.RequestAuthenticationBase extends java.lang.Object implements org.apache.http.HttpRequestInterceptor
{
    final org.apache.commons.logging.Log log;

    public void <init>()
    {
        org.apache.http.client.protocol.RequestAuthenticationBase r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;

        r0 := @this: org.apache.http.client.protocol.RequestAuthenticationBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.apache.http.client.protocol.RequestAuthenticationBase: org.apache.commons.logging.Log log> = $r2;

        return;
    }

    void process(org.apache.http.auth.AuthState, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.Header $r9, $r15;
        org.apache.http.auth.AuthOption r11;
        int[] $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.http.client.protocol.RequestAuthenticationBase r6;
        org.apache.http.HttpRequest r7;
        java.lang.StringBuilder $r16, $r18, $r20, $r21, $r25, $r27, $r28, $r30, $r34, $r36, $r37, $r39;
        org.apache.http.auth.AuthState r0;
        java.util.Queue $r5;
        org.apache.http.auth.AuthenticationException $r23, $r32;
        org.apache.http.auth.Credentials $r2, $r13;
        int $i0, $i1;
        org.apache.http.auth.AuthScheme $r1, $r12;
        java.lang.String $r19, $r22, $r29, $r31, $r38, $r40;
        org.apache.http.auth.AuthProtocolState $r4;
        org.apache.http.protocol.HttpContext r8;
        java.lang.Object $r10;
        org.apache.commons.logging.Log $r14, $r17, $r24, $r26, $r33, $r35;

        r6 := @this: org.apache.http.client.protocol.RequestAuthenticationBase;

        r0 := @parameter0: org.apache.http.auth.AuthState;

        r7 := @parameter1: org.apache.http.HttpRequest;

        r8 := @parameter2: org.apache.http.protocol.HttpContext;

        $r1 = virtualinvoke r0.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        $r2 = virtualinvoke r0.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>();

        $r3 = <org.apache.http.client.protocol.RequestAuthenticationBase$1: int[] $SwitchMap$org$apache$http$auth$AuthProtocolState>;

        $r4 = virtualinvoke r0.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthProtocolState getState()>();

        $i0 = virtualinvoke $r4.<org.apache.http.auth.AuthProtocolState: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            default: goto label11;
        };

     label01:
        return;

     label02:
        specialinvoke r6.<org.apache.http.client.protocol.RequestAuthenticationBase: void ensureAuthScheme(org.apache.http.auth.AuthScheme)>($r1);

        $z2 = interfaceinvoke $r1.<org.apache.http.auth.AuthScheme: boolean isConnectionBased()>();

        if $z2 == 0 goto label11;

        return;

     label03:
        $r5 = virtualinvoke r0.<org.apache.http.auth.AuthState: java.util.Queue getAuthOptions()>();

        if $r5 == null goto label10;

     label04:
        $z0 = interfaceinvoke $r5.<java.util.Queue: boolean isEmpty()>();

        if $z0 != 0 goto label09;

        $r10 = interfaceinvoke $r5.<java.util.Queue: java.lang.Object remove()>();

        r11 = (org.apache.http.auth.AuthOption) $r10;

        $r12 = virtualinvoke r11.<org.apache.http.auth.AuthOption: org.apache.http.auth.AuthScheme getAuthScheme()>();

        $r13 = virtualinvoke r11.<org.apache.http.auth.AuthOption: org.apache.http.auth.Credentials getCredentials()>();

        virtualinvoke r0.<org.apache.http.auth.AuthState: void update(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials)>($r12, $r13);

        $r14 = r6.<org.apache.http.client.protocol.RequestAuthenticationBase: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r14.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label05;

        $r17 = r6.<org.apache.http.client.protocol.RequestAuthenticationBase: org.apache.commons.logging.Log log>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Generating response to an authentication challenge using ");

        $r19 = interfaceinvoke $r12.<org.apache.http.auth.AuthScheme: java.lang.String getSchemeName()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scheme");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r22);

     label05:
        $r15 = specialinvoke r6.<org.apache.http.client.protocol.RequestAuthenticationBase: org.apache.http.Header authenticate(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>($r12, $r13, r7, r8);

        interfaceinvoke r7.<org.apache.http.HttpRequest: void addHeader(org.apache.http.Header)>($r15);

     label06:
        goto label09;

     label07:
        $r32 := @caughtexception;

        $r33 = r6.<org.apache.http.client.protocol.RequestAuthenticationBase: org.apache.commons.logging.Log log>;

        $z4 = interfaceinvoke $r33.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z4 == 0 goto label08;

        $r35 = r6.<org.apache.http.client.protocol.RequestAuthenticationBase: org.apache.commons.logging.Log log>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authentication error: ");

        $r38 = virtualinvoke $r32.<org.apache.http.auth.AuthenticationException: java.lang.String getMessage()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r35.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r40);

     label08:
        goto label04;

     label09:
        return;

     label10:
        specialinvoke r6.<org.apache.http.client.protocol.RequestAuthenticationBase: void ensureAuthScheme(org.apache.http.auth.AuthScheme)>($r1);

     label11:
        if $r1 == null goto label15;

     label12:
        $r9 = specialinvoke r6.<org.apache.http.client.protocol.RequestAuthenticationBase: org.apache.http.Header authenticate(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>($r1, $r2, r7, r8);

        interfaceinvoke r7.<org.apache.http.HttpRequest: void addHeader(org.apache.http.Header)>($r9);

     label13:
        goto label15;

     label14:
        $r23 := @caughtexception;

        $r24 = r6.<org.apache.http.client.protocol.RequestAuthenticationBase: org.apache.commons.logging.Log log>;

        $z3 = interfaceinvoke $r24.<org.apache.commons.logging.Log: boolean isErrorEnabled()>();

        if $z3 == 0 goto label15;

        $r26 = r6.<org.apache.http.client.protocol.RequestAuthenticationBase: org.apache.commons.logging.Log log>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authentication error: ");

        $r29 = virtualinvoke $r23.<org.apache.http.auth.AuthenticationException: java.lang.String getMessage()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r26.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r31);

     label15:
        return;

        catch org.apache.http.auth.AuthenticationException from label05 to label06 with label07;
        catch org.apache.http.auth.AuthenticationException from label12 to label13 with label14;
    }

    private void ensureAuthScheme(org.apache.http.auth.AuthScheme)
    {
        org.apache.http.client.protocol.RequestAuthenticationBase r2;
        org.apache.http.auth.AuthScheme r0;
        java.lang.IllegalStateException $r1;

        r2 := @this: org.apache.http.client.protocol.RequestAuthenticationBase;

        r0 := @parameter0: org.apache.http.auth.AuthScheme;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Auth scheme is not set");

        throw $r1;

     label1:
        return;
    }

    private org.apache.http.Header authenticate(org.apache.http.auth.AuthScheme, org.apache.http.auth.Credentials, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.auth.AuthenticationException
    {
        java.lang.IllegalStateException $r7;
        org.apache.http.client.protocol.RequestAuthenticationBase r8;
        org.apache.http.HttpRequest r2;
        org.apache.http.Header $r3, $r6;
        org.apache.http.auth.ContextAwareAuthScheme $r5;
        org.apache.http.auth.Credentials r1;
        org.apache.http.protocol.HttpContext r4;
        org.apache.http.auth.AuthScheme r0;
        boolean $z0;

        r8 := @this: org.apache.http.client.protocol.RequestAuthenticationBase;

        r0 := @parameter0: org.apache.http.auth.AuthScheme;

        r1 := @parameter1: org.apache.http.auth.Credentials;

        r2 := @parameter2: org.apache.http.HttpRequest;

        r4 := @parameter3: org.apache.http.protocol.HttpContext;

        if r0 != null goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Auth state object is null");

        throw $r7;

     label1:
        $z0 = r0 instanceof org.apache.http.auth.ContextAwareAuthScheme;

        if $z0 == 0 goto label2;

        $r5 = (org.apache.http.auth.ContextAwareAuthScheme) r0;

        $r6 = interfaceinvoke $r5.<org.apache.http.auth.ContextAwareAuthScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>(r1, r2, r4);

        return $r6;

     label2:
        $r3 = interfaceinvoke r0.<org.apache.http.auth.AuthScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>(r1, r2);

        return $r3;
    }
}
