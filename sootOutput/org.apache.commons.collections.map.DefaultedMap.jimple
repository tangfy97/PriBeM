public class org.apache.commons.collections.map.DefaultedMap extends org.apache.commons.collections.map.AbstractMapDecorator implements java.util.Map, java.io.Serializable
{
    private static final long serialVersionUID;
    protected final java.lang.Object value;

    public static java.util.Map decorate(java.util.Map, java.lang.Object)
    {
        java.util.Map r1;
        org.apache.commons.collections.map.DefaultedMap $r0;
        java.lang.Object r2;
        boolean $z0;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.lang.Object;

        $z0 = r2 instanceof org.apache.commons.collections.Transformer;

        if $z0 == 0 goto label1;

        r2 = staticinvoke <org.apache.commons.collections.functors.ConstantTransformer: org.apache.commons.collections.Transformer getInstance(java.lang.Object)>(r2);

     label1:
        $r0 = new org.apache.commons.collections.map.DefaultedMap;

        specialinvoke $r0.<org.apache.commons.collections.map.DefaultedMap: void <init>(java.util.Map,java.lang.Object)>(r1, r2);

        return $r0;
    }

    public static java.util.Map decorate(java.util.Map, org.apache.commons.collections.Factory)
    {
        org.apache.commons.collections.Transformer $r3;
        java.util.Map r2;
        org.apache.commons.collections.map.DefaultedMap $r1;
        org.apache.commons.collections.Factory r0;
        java.lang.IllegalArgumentException $r4;

        r2 := @parameter0: java.util.Map;

        r0 := @parameter1: org.apache.commons.collections.Factory;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Factory must not be null");

        throw $r4;

     label1:
        $r1 = new org.apache.commons.collections.map.DefaultedMap;

        $r3 = staticinvoke <org.apache.commons.collections.functors.FactoryTransformer: org.apache.commons.collections.Transformer getInstance(org.apache.commons.collections.Factory)>(r0);

        specialinvoke $r1.<org.apache.commons.collections.map.DefaultedMap: void <init>(java.util.Map,java.lang.Object)>(r2, $r3);

        return $r1;
    }

    public static java.util.Map decorate(java.util.Map, org.apache.commons.collections.Transformer)
    {
        org.apache.commons.collections.Transformer r0;
        java.util.Map r2;
        org.apache.commons.collections.map.DefaultedMap $r1;
        java.lang.IllegalArgumentException $r3;

        r2 := @parameter0: java.util.Map;

        r0 := @parameter1: org.apache.commons.collections.Transformer;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Transformer must not be null");

        throw $r3;

     label1:
        $r1 = new org.apache.commons.collections.map.DefaultedMap;

        specialinvoke $r1.<org.apache.commons.collections.map.DefaultedMap: void <init>(java.util.Map,java.lang.Object)>(r2, r0);

        return $r1;
    }

    public void <init>(java.lang.Object)
    {
        org.apache.commons.collections.map.DefaultedMap r0;
        java.util.HashMap $r1;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.DefaultedMap;

        r2 := @parameter0: java.lang.Object;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        specialinvoke r0.<org.apache.commons.collections.map.AbstractMapDecorator: void <init>(java.util.Map)>($r1);

        $z0 = r2 instanceof org.apache.commons.collections.Transformer;

        if $z0 == 0 goto label1;

        r2 = staticinvoke <org.apache.commons.collections.functors.ConstantTransformer: org.apache.commons.collections.Transformer getInstance(java.lang.Object)>(r2);

     label1:
        r0.<org.apache.commons.collections.map.DefaultedMap: java.lang.Object value> = r2;

        return;
    }

    protected void <init>(java.util.Map, java.lang.Object)
    {
        org.apache.commons.collections.map.DefaultedMap r0;
        java.lang.Object r2;
        java.util.Map r1;

        r0 := @this: org.apache.commons.collections.map.DefaultedMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.commons.collections.map.AbstractMapDecorator: void <init>(java.util.Map)>(r1);

        r0.<org.apache.commons.collections.map.DefaultedMap: java.lang.Object value> = r2;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.commons.collections.map.DefaultedMap r1;
        java.io.ObjectOutputStream r0;
        java.util.Map $r2;

        r1 := @this: org.apache.commons.collections.map.DefaultedMap;

        r0 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r1.<org.apache.commons.collections.map.DefaultedMap: java.util.Map map>;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.Map $r3;
        java.io.ObjectInputStream r0;
        org.apache.commons.collections.map.DefaultedMap r1;
        java.lang.Object $r2;

        r1 := @this: org.apache.commons.collections.map.DefaultedMap;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (java.util.Map) $r2;

        r1.<org.apache.commons.collections.map.DefaultedMap: java.util.Map map> = $r3;

        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.commons.collections.Transformer $r8;
        org.apache.commons.collections.map.DefaultedMap r0;
        java.util.Map $r2, $r3;
        java.lang.Object r1, $r4, $r5, $r6, $r7, $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections.map.DefaultedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.map.DefaultedMap: java.util.Map map>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r5 = r0.<org.apache.commons.collections.map.DefaultedMap: java.lang.Object value>;

        $z1 = $r5 instanceof org.apache.commons.collections.Transformer;

        if $z1 == 0 goto label1;

        $r7 = r0.<org.apache.commons.collections.map.DefaultedMap: java.lang.Object value>;

        $r8 = (org.apache.commons.collections.Transformer) $r7;

        $r9 = interfaceinvoke $r8.<org.apache.commons.collections.Transformer: java.lang.Object transform(java.lang.Object)>(r1);

        return $r9;

     label1:
        $r6 = r0.<org.apache.commons.collections.map.DefaultedMap: java.lang.Object value>;

        return $r6;

     label2:
        $r3 = r0.<org.apache.commons.collections.map.DefaultedMap: java.util.Map map>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r4;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.map.DefaultedMap: long serialVersionUID> = 19698628745827L;

        return;
    }
}
