public class org.springframework.remoting.caucho.SimpleHessianServiceExporter extends org.springframework.remoting.caucho.HessianExporter implements com.sun.net.httpserver.HttpHandler
{

    public void <init>()
    {
        org.springframework.remoting.caucho.SimpleHessianServiceExporter r0;

        r0 := @this: org.springframework.remoting.caucho.SimpleHessianServiceExporter;

        specialinvoke r0.<org.springframework.remoting.caucho.HessianExporter: void <init>()>();

        return;
    }

    public void handle(com.sun.net.httpserver.HttpExchange) throws java.io.IOException
    {
        java.io.OutputStream $r8;
        java.lang.Throwable $r10;
        byte[] $r7;
        java.io.ByteArrayOutputStream $r3;
        long $l1;
        org.springframework.remoting.caucho.SimpleHessianServiceExporter r4;
        com.sun.net.httpserver.Headers $r6, $r9;
        int $i0;
        com.sun.net.httpserver.HttpExchange r0;
        org.apache.commons.logging.Log $r11;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.io.InputStream $r5;

        r4 := @this: org.springframework.remoting.caucho.SimpleHessianServiceExporter;

        r0 := @parameter0: com.sun.net.httpserver.HttpExchange;

        $r1 = "POST";

        $r2 = virtualinvoke r0.<com.sun.net.httpserver.HttpExchange: java.lang.String getRequestMethod()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r9 = virtualinvoke r0.<com.sun.net.httpserver.HttpExchange: com.sun.net.httpserver.Headers getResponseHeaders()>();

        virtualinvoke $r9.<com.sun.net.httpserver.Headers: void set(java.lang.String,java.lang.String)>("Allow", "POST");

        virtualinvoke r0.<com.sun.net.httpserver.HttpExchange: void sendResponseHeaders(int,long)>(405, -1L);

        return;

     label1:
        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>(int)>(1024);

     label2:
        $r5 = virtualinvoke r0.<com.sun.net.httpserver.HttpExchange: java.io.InputStream getRequestBody()>();

        virtualinvoke r4.<org.springframework.remoting.caucho.SimpleHessianServiceExporter: void invoke(java.io.InputStream,java.io.OutputStream)>($r5, $r3);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        virtualinvoke r0.<com.sun.net.httpserver.HttpExchange: void sendResponseHeaders(int,long)>(500, -1L);

        $r11 = r4.<org.springframework.remoting.caucho.SimpleHessianServiceExporter: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r11.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("Hessian skeleton invocation failed", $r10);

        return;

     label5:
        $r6 = virtualinvoke r0.<com.sun.net.httpserver.HttpExchange: com.sun.net.httpserver.Headers getResponseHeaders()>();

        virtualinvoke $r6.<com.sun.net.httpserver.Headers: void set(java.lang.String,java.lang.String)>("Content-Type", "application/x-hessian");

        $i0 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: int size()>();

        $l1 = (long) $i0;

        virtualinvoke r0.<com.sun.net.httpserver.HttpExchange: void sendResponseHeaders(int,long)>(200, $l1);

        $r7 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r8 = virtualinvoke r0.<com.sun.net.httpserver.HttpExchange: java.io.OutputStream getResponseBody()>();

        staticinvoke <org.springframework.util.FileCopyUtils: void copy(byte[],java.io.OutputStream)>($r7, $r8);

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }
}
