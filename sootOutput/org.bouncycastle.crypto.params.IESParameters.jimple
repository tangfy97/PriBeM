public class org.bouncycastle.crypto.params.IESParameters extends java.lang.Object implements org.bouncycastle.crypto.CipherParameters
{
    private byte[] derivation;
    private byte[] encoding;
    private int macKeySize;

    public void <init>(byte[], byte[], int)
    {
        byte[] r1, r2;
        int i0;
        org.bouncycastle.crypto.params.IESParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.IESParameters;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.params.IESParameters: byte[] derivation> = r1;

        r0.<org.bouncycastle.crypto.params.IESParameters: byte[] encoding> = r2;

        r0.<org.bouncycastle.crypto.params.IESParameters: int macKeySize> = i0;

        return;
    }

    public byte[] getDerivationV()
    {
        org.bouncycastle.crypto.params.IESParameters r0;
        byte[] $r1;

        r0 := @this: org.bouncycastle.crypto.params.IESParameters;

        $r1 = r0.<org.bouncycastle.crypto.params.IESParameters: byte[] derivation>;

        return $r1;
    }

    public byte[] getEncodingV()
    {
        org.bouncycastle.crypto.params.IESParameters r0;
        byte[] $r1;

        r0 := @this: org.bouncycastle.crypto.params.IESParameters;

        $r1 = r0.<org.bouncycastle.crypto.params.IESParameters: byte[] encoding>;

        return $r1;
    }

    public int getMacKeySize()
    {
        int $i0;
        org.bouncycastle.crypto.params.IESParameters r0;

        r0 := @this: org.bouncycastle.crypto.params.IESParameters;

        $i0 = r0.<org.bouncycastle.crypto.params.IESParameters: int macKeySize>;

        return $i0;
    }
}
