public abstract enum class com.google.gxp.compiler.parser.GxpNamespace$ElementType extends java.lang.Enum
{
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType ABBR;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType ATTR;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType CLAUSE;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType COND;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType CONSTRUCTOR;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType ELIF;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType ELSE;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType EPH;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType EVAL;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType IF;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType IMPLEMENTS;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType IMPORT;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType INTERFACE;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType LOOP;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType MSG;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType NOMSG;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType PARAM;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType PH;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType TEMPLATE;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType THROWS;
    public static final enum com.google.gxp.compiler.parser.GxpNamespace$ElementType TYPEPARAM;
    private final boolean canBeRoot;
    private static final com.google.gxp.compiler.parser.GxpNamespace$ElementType[] $VALUES;

    public static com.google.gxp.compiler.parser.GxpNamespace$ElementType[] values()
    {
        java.lang.Object $r1;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType[] $r0, $r2;

        $r0 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.google.gxp.compiler.parser.GxpNamespace$ElementType[]) $r1;

        return $r2;
    }

    public static com.google.gxp.compiler.parser.GxpNamespace$ElementType valueOf(java.lang.String)
    {
        com.google.gxp.compiler.parser.GxpNamespace$ElementType $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/gxp/compiler/parser/GxpNamespace$ElementType;", r0);

        $r2 = (com.google.gxp.compiler.parser.GxpNamespace$ElementType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType r0;
        java.lang.String r1;

        r0 := @this: com.google.gxp.compiler.parser.GxpNamespace$ElementType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.google.gxp.compiler.parser.GxpNamespace$ElementType: void <init>(java.lang.String,int,boolean)>(r1, i0, 0);

        return;
    }

    private void <init>(java.lang.String, int, boolean)
    {
        com.google.gxp.compiler.parser.GxpNamespace$ElementType r0;
        int i0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: com.google.gxp.compiler.parser.GxpNamespace$ElementType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<com.google.gxp.compiler.parser.GxpNamespace$ElementType: boolean canBeRoot> = z0;

        return;
    }

    boolean canBeRoot()
    {
        com.google.gxp.compiler.parser.GxpNamespace$ElementType r0;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.parser.GxpNamespace$ElementType;

        $z0 = r0.<com.google.gxp.compiler.parser.GxpNamespace$ElementType: boolean canBeRoot>;

        return $z0;
    }

    abstract java.lang.Object acceptVisitor(com.google.gxp.compiler.parser.ParsedElementVisitor, com.google.gxp.compiler.parser.GxpNamespace$GxpElement);

    void <init>(java.lang.String, int, com.google.gxp.compiler.parser.GxpNamespace$1)
    {
        com.google.gxp.compiler.parser.GxpNamespace$ElementType r0;
        com.google.gxp.compiler.parser.GxpNamespace$1 r2;
        int i0;
        java.lang.String r1;

        r0 := @this: com.google.gxp.compiler.parser.GxpNamespace$ElementType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.gxp.compiler.parser.GxpNamespace$1;

        specialinvoke r0.<com.google.gxp.compiler.parser.GxpNamespace$ElementType: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    void <init>(java.lang.String, int, boolean, com.google.gxp.compiler.parser.GxpNamespace$1)
    {
        com.google.gxp.compiler.parser.GxpNamespace$ElementType r0;
        com.google.gxp.compiler.parser.GxpNamespace$1 r2;
        int i0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: com.google.gxp.compiler.parser.GxpNamespace$ElementType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: com.google.gxp.compiler.parser.GxpNamespace$1;

        specialinvoke r0.<com.google.gxp.compiler.parser.GxpNamespace$ElementType: void <init>(java.lang.String,int,boolean)>(r1, i0, z0);

        return;
    }

    static void <clinit>()
    {
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$12 $r11;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$13 $r12;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$14 $r13;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$15 $r14;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$16 $r15;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$17 $r16;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$18 $r17;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$19 $r18;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType[] $r21;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$20 $r19;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$21 $r20;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$1 $r0;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$2 $r1;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$3 $r2;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$4 $r3;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$5 $r4;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$6 $r5;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$7 $r6;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$8 $r7;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$9 $r8;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$10 $r9;
        com.google.gxp.compiler.parser.GxpNamespace$ElementType$11 $r10;

        $r0 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$1;

        specialinvoke $r0.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$1: void <init>(java.lang.String,int)>("ABBR", 0);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType ABBR> = $r0;

        $r1 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$2;

        specialinvoke $r1.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$2: void <init>(java.lang.String,int)>("ATTR", 1);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType ATTR> = $r1;

        $r2 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$3;

        specialinvoke $r2.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$3: void <init>(java.lang.String,int)>("CLAUSE", 2);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType CLAUSE> = $r2;

        $r3 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$4;

        specialinvoke $r3.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$4: void <init>(java.lang.String,int)>("COND", 3);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType COND> = $r3;

        $r4 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$5;

        specialinvoke $r4.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$5: void <init>(java.lang.String,int)>("CONSTRUCTOR", 4);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType CONSTRUCTOR> = $r4;

        $r5 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$6;

        specialinvoke $r5.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$6: void <init>(java.lang.String,int)>("ELIF", 5);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType ELIF> = $r5;

        $r6 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$7;

        specialinvoke $r6.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$7: void <init>(java.lang.String,int)>("ELSE", 6);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType ELSE> = $r6;

        $r7 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$8;

        specialinvoke $r7.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$8: void <init>(java.lang.String,int)>("EPH", 7);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType EPH> = $r7;

        $r8 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$9;

        specialinvoke $r8.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$9: void <init>(java.lang.String,int)>("EVAL", 8);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType EVAL> = $r8;

        $r9 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$10;

        specialinvoke $r9.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$10: void <init>(java.lang.String,int)>("IF", 9);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType IF> = $r9;

        $r10 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$11;

        specialinvoke $r10.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$11: void <init>(java.lang.String,int)>("IMPLEMENTS", 10);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType IMPLEMENTS> = $r10;

        $r11 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$12;

        specialinvoke $r11.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$12: void <init>(java.lang.String,int)>("IMPORT", 11);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType IMPORT> = $r11;

        $r12 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$13;

        specialinvoke $r12.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$13: void <init>(java.lang.String,int,boolean)>("INTERFACE", 12, 1);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType INTERFACE> = $r12;

        $r13 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$14;

        specialinvoke $r13.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$14: void <init>(java.lang.String,int)>("LOOP", 13);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType LOOP> = $r13;

        $r14 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$15;

        specialinvoke $r14.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$15: void <init>(java.lang.String,int)>("MSG", 14);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType MSG> = $r14;

        $r15 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$16;

        specialinvoke $r15.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$16: void <init>(java.lang.String,int)>("NOMSG", 15);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType NOMSG> = $r15;

        $r16 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$17;

        specialinvoke $r16.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$17: void <init>(java.lang.String,int)>("PARAM", 16);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType PARAM> = $r16;

        $r17 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$18;

        specialinvoke $r17.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$18: void <init>(java.lang.String,int)>("PH", 17);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType PH> = $r17;

        $r18 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$19;

        specialinvoke $r18.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$19: void <init>(java.lang.String,int,boolean)>("TEMPLATE", 18, 1);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType TEMPLATE> = $r18;

        $r19 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$20;

        specialinvoke $r19.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$20: void <init>(java.lang.String,int)>("THROWS", 19);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType THROWS> = $r19;

        $r20 = new com.google.gxp.compiler.parser.GxpNamespace$ElementType$21;

        specialinvoke $r20.<com.google.gxp.compiler.parser.GxpNamespace$ElementType$21: void <init>(java.lang.String,int)>("TYPEPARAM", 20);

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType TYPEPARAM> = $r20;

        $r21 = newarray (com.google.gxp.compiler.parser.GxpNamespace$ElementType)[21];

        $r22 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType ABBR>;

        $r21[0] = $r22;

        $r23 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType ATTR>;

        $r21[1] = $r23;

        $r24 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType CLAUSE>;

        $r21[2] = $r24;

        $r25 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType COND>;

        $r21[3] = $r25;

        $r26 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType CONSTRUCTOR>;

        $r21[4] = $r26;

        $r27 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType ELIF>;

        $r21[5] = $r27;

        $r28 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType ELSE>;

        $r21[6] = $r28;

        $r29 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType EPH>;

        $r21[7] = $r29;

        $r30 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType EVAL>;

        $r21[8] = $r30;

        $r31 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType IF>;

        $r21[9] = $r31;

        $r32 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType IMPLEMENTS>;

        $r21[10] = $r32;

        $r33 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType IMPORT>;

        $r21[11] = $r33;

        $r34 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType INTERFACE>;

        $r21[12] = $r34;

        $r35 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType LOOP>;

        $r21[13] = $r35;

        $r36 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType MSG>;

        $r21[14] = $r36;

        $r37 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType NOMSG>;

        $r21[15] = $r37;

        $r38 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType PARAM>;

        $r21[16] = $r38;

        $r39 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType PH>;

        $r21[17] = $r39;

        $r40 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType TEMPLATE>;

        $r21[18] = $r40;

        $r41 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType THROWS>;

        $r21[19] = $r41;

        $r42 = <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType TYPEPARAM>;

        $r21[20] = $r42;

        <com.google.gxp.compiler.parser.GxpNamespace$ElementType: com.google.gxp.compiler.parser.GxpNamespace$ElementType[] $VALUES> = $r21;

        return;
    }
}
