class org.springframework.aop.config.SpringConfiguredBeanDefinitionParser extends java.lang.Object implements org.springframework.beans.factory.xml.BeanDefinitionParser
{
    public static final java.lang.String BEAN_CONFIGURER_ASPECT_BEAN_NAME;
    private static final java.lang.String BEAN_CONFIGURER_ASPECT_CLASS_NAME;

    void <init>()
    {
        org.springframework.aop.config.SpringConfiguredBeanDefinitionParser r0;

        r0 := @this: org.springframework.aop.config.SpringConfiguredBeanDefinitionParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.beans.factory.support.RootBeanDefinition $r2;
        org.springframework.aop.config.SpringConfiguredBeanDefinitionParser r6;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r1;
        org.w3c.dom.Element r3;
        org.springframework.beans.factory.xml.ParserContext r0;
        org.springframework.beans.factory.parsing.BeanComponentDefinition $r5;
        java.lang.Object $r4;
        boolean $z0;

        r6 := @this: org.springframework.aop.config.SpringConfiguredBeanDefinitionParser;

        r3 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $z0 = interfaceinvoke $r1.<org.springframework.beans.factory.support.BeanDefinitionRegistry: boolean containsBeanDefinition(java.lang.String)>("org.springframework.context.config.internalBeanConfigurerAspect");

        if $z0 != 0 goto label1;

        $r2 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r2.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>()>();

        virtualinvoke $r2.<org.springframework.beans.factory.support.RootBeanDefinition: void setBeanClassName(java.lang.String)>("org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect");

        virtualinvoke $r2.<org.springframework.beans.factory.support.RootBeanDefinition: void setFactoryMethodName(java.lang.String)>("aspectOf");

        $r4 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: java.lang.Object extractSource(java.lang.Object)>(r3);

        virtualinvoke $r2.<org.springframework.beans.factory.support.RootBeanDefinition: void setSource(java.lang.Object)>($r4);

        $r5 = new org.springframework.beans.factory.parsing.BeanComponentDefinition;

        specialinvoke $r5.<org.springframework.beans.factory.parsing.BeanComponentDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>($r2, "org.springframework.context.config.internalBeanConfigurerAspect");

        virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: void registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)>($r5);

     label1:
        return null;
    }

    public static void <clinit>()
    {
        <org.springframework.aop.config.SpringConfiguredBeanDefinitionParser: java.lang.String BEAN_CONFIGURER_ASPECT_CLASS_NAME> = "org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect";

        <org.springframework.aop.config.SpringConfiguredBeanDefinitionParser: java.lang.String BEAN_CONFIGURER_ASPECT_BEAN_NAME> = "org.springframework.context.config.internalBeanConfigurerAspect";

        return;
    }
}
