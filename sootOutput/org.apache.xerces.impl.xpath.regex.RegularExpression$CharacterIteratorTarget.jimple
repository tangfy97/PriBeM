final class org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget extends org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget
{
    java.text.CharacterIterator target;

    void <init>(java.text.CharacterIterator)
    {
        java.text.CharacterIterator r1;
        org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget r0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget;

        r1 := @parameter0: java.text.CharacterIterator;

        specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: void <init>()>();

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget: java.text.CharacterIterator target> = r1;

        return;
    }

    final void resetTarget(java.text.CharacterIterator)
    {
        java.text.CharacterIterator r1;
        org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget r0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget;

        r1 := @parameter0: java.text.CharacterIterator;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget: java.text.CharacterIterator target> = r1;

        return;
    }

    final char charAt(int)
    {
        java.text.CharacterIterator $r1;
        org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget r0;
        int i0;
        char $c1;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget: java.text.CharacterIterator target>;

        $c1 = interfaceinvoke $r1.<java.text.CharacterIterator: char setIndex(int)>(i0);

        return $c1;
    }

    final boolean regionMatches(boolean, int, int, java.lang.String, int)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget r0;
        int i0, i1, i2, $i3;
        java.lang.String r1;
        boolean z0, $z1;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        if i0 < 0 goto label1;

        $i3 = i1 - i0;

        if $i3 >= i2 goto label2;

     label1:
        return 0;

     label2:
        if z0 == 0 goto label3;

        $z1 = specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget: boolean regionMatchesIgnoreCase(int,int,java.lang.String,int)>(i0, i1, r1, i2);

        goto label4;

     label3:
        $z1 = specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget: boolean regionMatches(int,int,java.lang.String,int)>(i0, i1, r1, i2);

     label4:
        return $z1;
    }

    private final boolean regionMatches(int, int, java.lang.String, int)
    {
        java.text.CharacterIterator $r1;
        char $c2, $c4;
        org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget r0;
        int $i0, $i1, $i3, i5, i6, i7, i8, $i9, $i10, $i12;
        java.lang.String r2;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget;

        i6 := @parameter0: int;

        i5 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i7 := @parameter3: int;

        i8 = 0;

        goto label2;

     label1:
        $r1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget: java.text.CharacterIterator target>;

        $i1 = i6;

        i6 = i6 + 1;

        $c2 = interfaceinvoke $r1.<java.text.CharacterIterator: char setIndex(int)>($i1);

        $i3 = i8;

        i8 = i8 + 1;

        $c4 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i3);

        $i9 = (int) $c2;

        $i10 = (int) $c4;

        if $i9 == $i10 goto label2;

        return 0;

     label2:
        $i0 = i7;

        $i12 = (int) -1;

        i7 = i7 + $i12;

        if $i0 > 0 goto label1;

        return 1;
    }

    private final boolean regionMatchesIgnoreCase(int, int, java.lang.String, int)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget r0;
        int $i0, $i2, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20;
        java.lang.String r2;
        java.text.CharacterIterator $r1;
        char $c1, $c3, $c4, $c5, $c6, $c7;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget;

        i9 := @parameter0: int;

        i8 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i10 := @parameter3: int;

        i11 = 0;

        goto label4;

     label1:
        $r1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget: java.text.CharacterIterator target>;

        $i0 = i9;

        i9 = i9 + 1;

        $c1 = interfaceinvoke $r1.<java.text.CharacterIterator: char setIndex(int)>($i0);

        $i2 = i11;

        i11 = i11 + 1;

        $c3 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i2);

        $i13 = (int) $c1;

        $i14 = (int) $c3;

        if $i13 != $i14 goto label2;

        goto label4;

     label2:
        $c4 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        $c5 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c3);

        $i15 = (int) $c4;

        $i16 = (int) $c5;

        if $i15 != $i16 goto label3;

        goto label4;

     label3:
        $c6 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c4);

        $c7 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c5);

        $i17 = (int) $c6;

        $i18 = (int) $c7;

        if $i17 == $i18 goto label4;

        return 0;

     label4:
        $i12 = i10;

        $i20 = (int) -1;

        i10 = i10 + $i20;

        if $i12 > 0 goto label1;

        return 1;
    }

    final boolean regionMatches(boolean, int, int, int, int)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget r0;
        int i0, i1, i2, $i3, i4;
        boolean z0, $z1;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i4 := @parameter3: int;

        i2 := @parameter4: int;

        if i0 < 0 goto label1;

        $i3 = i1 - i0;

        if $i3 >= i2 goto label2;

     label1:
        return 0;

     label2:
        if z0 == 0 goto label3;

        $z1 = specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget: boolean regionMatchesIgnoreCase(int,int,int,int)>(i0, i1, i4, i2);

        goto label4;

     label3:
        $z1 = specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget: boolean regionMatches(int,int,int,int)>(i0, i1, i4, i2);

     label4:
        return $z1;
    }

    private final boolean regionMatches(int, int, int, int)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget r0;
        int i0, $i1, $i2, $i4, i6, i7, i8, i9, $i10, $i11, $i13;
        java.text.CharacterIterator $r1, $r2;
        char $c3, $c5;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget;

        i7 := @parameter0: int;

        i6 := @parameter1: int;

        i0 := @parameter2: int;

        i8 := @parameter3: int;

        i9 = i0;

        goto label2;

     label1:
        $r1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget: java.text.CharacterIterator target>;

        $i2 = i7;

        i7 = i7 + 1;

        $c3 = interfaceinvoke $r1.<java.text.CharacterIterator: char setIndex(int)>($i2);

        $r2 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget: java.text.CharacterIterator target>;

        $i4 = i9;

        i9 = i9 + 1;

        $c5 = interfaceinvoke $r2.<java.text.CharacterIterator: char setIndex(int)>($i4);

        $i10 = (int) $c3;

        $i11 = (int) $c5;

        if $i10 == $i11 goto label2;

        return 0;

     label2:
        $i1 = i8;

        $i13 = (int) -1;

        i8 = i8 + $i13;

        if $i1 > 0 goto label1;

        return 1;
    }

    private final boolean regionMatchesIgnoreCase(int, int, int, int)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget r0;
        int i0, $i1, $i3, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21;
        java.text.CharacterIterator $r1, $r2;
        char $c2, $c4, $c5, $c6, $c7, $c8;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget;

        i10 := @parameter0: int;

        i9 := @parameter1: int;

        i0 := @parameter2: int;

        i11 := @parameter3: int;

        i12 = i0;

        goto label4;

     label1:
        $r1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget: java.text.CharacterIterator target>;

        $i1 = i10;

        i10 = i10 + 1;

        $c2 = interfaceinvoke $r1.<java.text.CharacterIterator: char setIndex(int)>($i1);

        $r2 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$CharacterIteratorTarget: java.text.CharacterIterator target>;

        $i3 = i12;

        i12 = i12 + 1;

        $c4 = interfaceinvoke $r2.<java.text.CharacterIterator: char setIndex(int)>($i3);

        $i14 = (int) $c2;

        $i15 = (int) $c4;

        if $i14 != $i15 goto label2;

        goto label4;

     label2:
        $c5 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c2);

        $c6 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c4);

        $i16 = (int) $c5;

        $i17 = (int) $c6;

        if $i16 != $i17 goto label3;

        goto label4;

     label3:
        $c7 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c5);

        $c8 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c6);

        $i18 = (int) $c7;

        $i19 = (int) $c8;

        if $i18 == $i19 goto label4;

        return 0;

     label4:
        $i13 = i11;

        $i21 = (int) -1;

        i11 = i11 + $i21;

        if $i13 > 0 goto label1;

        return 1;
    }
}
