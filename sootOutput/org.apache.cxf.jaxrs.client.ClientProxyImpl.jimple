public class org.apache.cxf.jaxrs.client.ClientProxyImpl extends org.apache.cxf.jaxrs.client.AbstractClient implements org.apache.cxf.jaxrs.client.InvocationHandlerAware, java.lang.reflect.InvocationHandler
{
    private static final java.util.logging.Logger LOG;
    private static final java.util.ResourceBundle BUNDLE;
    private static final java.lang.String SLASH;
    private org.apache.cxf.jaxrs.model.ClassResourceInfo cri;
    private java.lang.ClassLoader proxyLoader;
    private boolean inheritHeaders;
    private boolean isRoot;
    private java.util.Map valuesMap;

    public transient void <init>(java.net.URI, java.lang.ClassLoader, org.apache.cxf.jaxrs.model.ClassResourceInfo, boolean, boolean, java.lang.Object[])
    {
        java.lang.Object[] r5;
        org.apache.cxf.jaxrs.client.ClientProxyImpl r0;
        org.apache.cxf.jaxrs.client.LocalClientState $r1;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r4;
        java.net.URI r2;
        java.lang.ClassLoader r3;
        boolean z0, z1;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r2 := @parameter0: java.net.URI;

        r3 := @parameter1: java.lang.ClassLoader;

        r4 := @parameter2: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r5 := @parameter5: java.lang.Object[];

        $r1 = new org.apache.cxf.jaxrs.client.LocalClientState;

        specialinvoke $r1.<org.apache.cxf.jaxrs.client.LocalClientState: void <init>(java.net.URI)>(r2);

        specialinvoke r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void <init>(org.apache.cxf.jaxrs.client.ClientState,java.lang.ClassLoader,org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean,boolean,java.lang.Object[])>($r1, r3, r4, z0, z1, r5);

        return;
    }

    public transient void <init>(org.apache.cxf.jaxrs.client.ClientState, java.lang.ClassLoader, org.apache.cxf.jaxrs.model.ClassResourceInfo, boolean, boolean, java.lang.Object[])
    {
        java.lang.Object[] r5;
        org.apache.cxf.jaxrs.client.ClientProxyImpl r0;
        org.apache.cxf.jaxrs.client.ClientState r1;
        java.util.Map $r2;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r4;
        java.lang.ClassLoader r3;
        boolean z0, z1;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r1 := @parameter0: org.apache.cxf.jaxrs.client.ClientState;

        r3 := @parameter1: java.lang.ClassLoader;

        r4 := @parameter2: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r5 := @parameter5: java.lang.Object[];

        specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: void <init>(org.apache.cxf.jaxrs.client.ClientState)>(r1);

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.Map valuesMap> = $r2;

        r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.ClassLoader proxyLoader> = r3;

        r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: org.apache.cxf.jaxrs.model.ClassResourceInfo cri> = r4;

        r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: boolean isRoot> = z0;

        r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: boolean inheritHeaders> = z1;

        specialinvoke r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void initValuesMap(java.lang.Object[])>(r5);

        return;
    }

    private transient void initValuesMap(java.lang.Object[])
    {
        java.lang.Object[] r5, $r9;
        org.apache.cxf.jaxrs.client.ClientProxyImpl r0;
        org.apache.cxf.jaxrs.model.URITemplate $r2;
        org.apache.cxf.common.i18n.Message $r8;
        java.lang.Integer $r11, $r12;
        java.util.LinkedHashMap $r4;
        java.util.ResourceBundle $r10;
        java.util.Map $r6, $r15;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r14;
        boolean $z0;
        java.util.logging.Logger $r13;
        java.util.List $r3;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r1;
        java.lang.Object $r7, $r16, $r17;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r5 := @parameter0: java.lang.Object[];

        $z0 = r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: boolean isRoot>;

        if $z0 == 0 goto label5;

        $r1 = r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: org.apache.cxf.jaxrs.model.ClassResourceInfo cri>;

        $r2 = virtualinvoke $r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.URITemplate getURITemplate()>();

        $r3 = virtualinvoke $r2.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List getVariables()>();

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.Map valuesMap> = $r4;

        i5 = 0;

     label1:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i5 >= $i0 goto label5;

        $i1 = lengthof r5;

        if $i1 <= 0 goto label3;

        $i2 = lengthof r5;

        if i5 >= $i2 goto label2;

        $r15 = r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.Map valuesMap>;

        $r16 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i5);

        $r17 = r5[i5];

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17);

        goto label4;

     label2:
        $r8 = new org.apache.cxf.common.i18n.Message;

        $r10 = <org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.ResourceBundle BUNDLE>;

        $r9 = newarray (java.lang.Object)[2];

        $i3 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r9[0] = $r11;

        $i4 = lengthof r5;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r9[1] = $r12;

        specialinvoke $r8.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("ROOT_VARS_MISMATCH", $r10, $r9);

        $r13 = <org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.logging.Logger LOG>;

        $r14 = virtualinvoke $r8.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r13.<java.util.logging.Logger: void info(java.lang.String)>($r14);

        goto label5;

     label3:
        $r6 = r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.Map valuesMap>;

        $r7 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i5);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, "");

     label4:
        i5 = i5 + 1;

        goto label1;

     label5:
        return;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        org.apache.cxf.jaxrs.client.ClientProxyImpl r2, $r52;
        org.apache.cxf.jaxrs.impl.MetadataMap $r51;
        org.apache.cxf.jaxrs.model.OperationResourceInfo $r6;
        org.apache.cxf.jaxrs.model.ParameterType $r8, $r20, $r26, $r27;
        javax.ws.rs.core.UriBuilder $r11, $r12;
        java.net.URI $r16, $r17;
        java.lang.reflect.Method r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r39;
        java.util.List $r9, $r10;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r4, $r28, $r31, $r43;
        java.lang.ClassLoader $r38, $r41;
        java.lang.Object[] r3, $r15, $r37;
        org.apache.cxf.jaxrs.model.URITemplate $r13, $r24, $r33, $r44;
        org.apache.cxf.jaxrs.client.ClientState $r23, $r32, $r35;
        int $i0, $i2, $i4;
        java.lang.String $r14, $r45;
        javax.ws.rs.core.MultivaluedMap $r7, $r18, $r25, $r34;
        java.lang.Class $r1, $r22, $r29, $r30, $r40, $r48;
        java.lang.Object $r21, $r42, r46, $r47, r49, $r50;
        org.apache.cxf.jaxrs.model.MethodDispatcher $r5;

        r2 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r46 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.reflect.Method;

        r3 := @parameter2: java.lang.Object[];

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        if class "Lorg/apache/cxf/jaxrs/client/Client;" == $r1 goto label01;

        if class "Lorg/apache/cxf/jaxrs/client/InvocationHandlerAware;" == $r1 goto label01;

        if class "Ljava/lang/Object;" != $r1 goto label02;

     label01:
        $r47 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, r3);

        return $r47;

     label02:
        virtualinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void resetResponse()>();

        $r4 = r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: org.apache.cxf.jaxrs.model.ClassResourceInfo cri>;

        $r5 = virtualinvoke $r4.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.MethodDispatcher getMethodDispatcher()>();

        $r6 = virtualinvoke $r5.<org.apache.cxf.jaxrs.model.MethodDispatcher: org.apache.cxf.jaxrs.model.OperationResourceInfo getOperationResourceInfo(java.lang.reflect.Method)>(r0);

        if $r6 != null goto label03;

        staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: void reportInvalidResourceMethod(java.lang.reflect.Method,java.lang.String)>(r0, "INVALID_RESOURCE_METHOD");

     label03:
        $r7 = staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: javax.ws.rs.core.MultivaluedMap getParametersInfo(java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)>(r3, $r6);

        $r8 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType BEAN>;

        $r9 = staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.List getParameters(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType)>($r7, $r8);

        $r10 = specialinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.util.List,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)>($r7, $r9, r3, $r6);

        $i0 = staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: int getBodyIndex(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)>($r7, $r6);

        $r11 = virtualinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: javax.ws.rs.core.UriBuilder getCurrentBuilder()>();

        $r12 = virtualinvoke $r11.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder clone()>();

        $z0 = r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: boolean isRoot>;

        if $z0 == 0 goto label04;

        $r43 = virtualinvoke $r6.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getClassResourceInfo()>();

        $r44 = virtualinvoke $r43.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.URITemplate getURITemplate()>();

        $r45 = virtualinvoke $r44.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String getValue()>();

        specialinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void addNonEmptyPath(javax.ws.rs.core.UriBuilder,java.lang.String)>($r12, $r45);

     label04:
        $r13 = virtualinvoke $r6.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.URITemplate getURITemplate()>();

        $r14 = virtualinvoke $r13.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String getValue()>();

        specialinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void addNonEmptyPath(javax.ws.rs.core.UriBuilder,java.lang.String)>($r12, $r14);

        specialinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void handleMatrixes(javax.ws.rs.core.MultivaluedMap,java.util.List,java.lang.Object[],javax.ws.rs.core.UriBuilder)>($r7, $r9, r3, $r12);

        specialinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void handleQueries(javax.ws.rs.core.MultivaluedMap,java.util.List,java.lang.Object[],javax.ws.rs.core.UriBuilder)>($r7, $r9, r3, $r12);

        $r15 = interfaceinvoke $r10.<java.util.List: java.lang.Object[] toArray()>();

        $r16 = virtualinvoke $r12.<javax.ws.rs.core.UriBuilder: java.net.URI buildFromEncoded(java.lang.Object[])>($r15);

        $r17 = virtualinvoke $r16.<java.net.URI: java.net.URI normalize()>();

        $r18 = virtualinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: javax.ws.rs.core.MultivaluedMap getHeaders()>();

        $r51 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r51.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        specialinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void handleHeaders(javax.ws.rs.core.MultivaluedMap,java.util.List,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])>($r51, $r9, $r7, r3);

        specialinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void handleCookies(javax.ws.rs.core.MultivaluedMap,java.util.List,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])>($r51, $r9, $r7, r3);

        $z1 = virtualinvoke $r6.<org.apache.cxf.jaxrs.model.OperationResourceInfo: boolean isSubResourceLocator()>();

        if $z1 == 0 goto label07;

        $r28 = r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: org.apache.cxf.jaxrs.model.ClassResourceInfo cri>;

        $r29 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r30 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r31 = virtualinvoke $r28.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getSubResource(java.lang.Class,java.lang.Class)>($r29, $r30);

        if $r31 != null goto label05;

        staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: void reportInvalidResourceMethod(java.lang.reflect.Method,java.lang.String)>(r0, "INVALID_SUBRESOURCE");

     label05:
        $z5 = r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: boolean inheritHeaders>;

        if $z5 == 0 goto label06;

        interfaceinvoke $r51.<javax.ws.rs.core.MultivaluedMap: void putAll(java.util.Map)>($r18);

     label06:
        $r32 = virtualinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: org.apache.cxf.jaxrs.client.ClientState getState()>();

        $r33 = virtualinvoke $r6.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.URITemplate getURITemplate()>();

        $r34 = virtualinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: javax.ws.rs.core.MultivaluedMap getTemplateParametersMap(org.apache.cxf.jaxrs.model.URITemplate,java.util.List)>($r33, $r10);

        $r35 = interfaceinvoke $r32.<org.apache.cxf.jaxrs.client.ClientState: org.apache.cxf.jaxrs.client.ClientState newState(java.net.URI,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)>($r17, $r51, $r34);

        $r52 = new org.apache.cxf.jaxrs.client.ClientProxyImpl;

        $r38 = r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.ClassLoader proxyLoader>;

        $z6 = r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: boolean inheritHeaders>;

        $r37 = newarray (java.lang.Object)[0];

        specialinvoke $r52.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void <init>(org.apache.cxf.jaxrs.client.ClientState,java.lang.ClassLoader,org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean,boolean,java.lang.Object[])>($r35, $r38, $r31, 0, $z6, $r37);

        $r39 = virtualinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: org.apache.cxf.jaxrs.client.ClientConfiguration getConfiguration()>();

        virtualinvoke $r52.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void setConfiguration(org.apache.cxf.jaxrs.client.ClientConfiguration)>($r39);

        $r40 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r41 = r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.ClassLoader proxyLoader>;

        $r42 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: java.lang.Object createProxy(java.lang.Class,java.lang.ClassLoader,java.lang.reflect.InvocationHandler)>($r40, $r41, $r52);

        return $r42;

     label07:
        interfaceinvoke $r18.<javax.ws.rs.core.MultivaluedMap: void putAll(java.util.Map)>($r51);

        $r20 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType FORM>;

        $z2 = interfaceinvoke $r7.<javax.ws.rs.core.MultivaluedMap: boolean containsKey(java.lang.Object)>($r20);

        $i2 = (int) -1;

        if $i0 != $i2 goto label08;

        $r48 = null;

        goto label09;

     label08:
        $r21 = r3[$i0];

        $r48 = virtualinvoke $r21.<java.lang.Object: java.lang.Class getClass()>();

     label09:
        $r22 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        specialinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: javax.ws.rs.core.MultivaluedMap setRequestHeaders(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,java.lang.Class,java.lang.Class)>($r18, $r6, $z2, $r48, $r22);

        $r23 = virtualinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: org.apache.cxf.jaxrs.client.ClientState getState()>();

        $r24 = virtualinvoke $r6.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.URITemplate getURITemplate()>();

        $r25 = virtualinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: javax.ws.rs.core.MultivaluedMap getTemplateParametersMap(org.apache.cxf.jaxrs.model.URITemplate,java.util.List)>($r24, $r10);

        interfaceinvoke $r23.<org.apache.cxf.jaxrs.client.ClientState: void setTemplates(javax.ws.rs.core.MultivaluedMap)>($r25);

        r49 = null;

        $i4 = (int) -1;

        if $i0 == $i4 goto label10;

        r49 = r3[$i0];

        goto label12;

     label10:
        $r26 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType FORM>;

        $z3 = interfaceinvoke $r7.<javax.ws.rs.core.MultivaluedMap: boolean containsKey(java.lang.Object)>($r26);

        if $z3 == 0 goto label11;

        r49 = specialinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: javax.ws.rs.core.MultivaluedMap handleForm(javax.ws.rs.core.MultivaluedMap,java.util.List,java.lang.Object[])>($r7, $r9, r3);

        goto label12;

     label11:
        $r27 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType REQUEST_BODY>;

        $z4 = interfaceinvoke $r7.<javax.ws.rs.core.MultivaluedMap: boolean containsKey(java.lang.Object)>($r27);

        if $z4 == 0 goto label12;

        r49 = specialinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.List handleMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object[])>($r7, $r6, r3);

     label12:
        $r50 = specialinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)>($r17, $r18, $r6, r49, $i0, null, null);

        return $r50;
    }

    private void addNonEmptyPath(javax.ws.rs.core.UriBuilder, java.lang.String)
    {
        org.apache.cxf.jaxrs.client.ClientProxyImpl r3;
        javax.ws.rs.core.UriBuilder r2;
        java.lang.String r0, $r1;
        boolean $z0;

        r3 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r2 := @parameter0: javax.ws.rs.core.UriBuilder;

        r0 := @parameter1: java.lang.String;

        $r1 = "/";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        virtualinvoke r2.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder path(java.lang.String)>(r0);

     label1:
        return;
    }

    private static javax.ws.rs.core.MultivaluedMap getParametersInfo(java.lang.Object[], org.apache.cxf.jaxrs.model.OperationResourceInfo)
    {
        java.lang.Object[] r12;
        org.apache.cxf.jaxrs.impl.MetadataMap $r0;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r1;
        org.apache.cxf.jaxrs.model.Parameter r8;
        org.apache.cxf.jaxrs.model.ParameterType $r4, $r9, $r10, $r13, $r14;
        org.apache.cxf.jaxrs.ext.multipart.Multipart $r11;
        int $i0, $i1, i2, i3;
        java.lang.reflect.Method $r5, $r6;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r3;
        java.util.List $r2;
        java.lang.Object $r7;

        r12 := @parameter0: java.lang.Object[];

        r1 := @parameter1: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        $r0 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getParameters()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return $r0;

     label1:
        i2 = 0;

        i3 = 0;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.cxf.jaxrs.model.Parameter) $r7;

        $z1 = staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: boolean isIgnorableParameter(org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.Parameter)>(r1, r8);

        if $z1 == 0 goto label3;

        goto label2;

     label3:
        $r9 = virtualinvoke r8.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r10 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType REQUEST_BODY>;

        if $r9 != $r10 goto label4;

        i2 = i2 + 1;

        $i1 = virtualinvoke r8.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r11 = staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: org.apache.cxf.jaxrs.ext.multipart.Multipart getMultipart(org.apache.cxf.jaxrs.model.OperationResourceInfo,int)>(r1, $i1);

        if $r11 == null goto label4;

        i3 = i3 + 1;

     label4:
        $r13 = virtualinvoke r8.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        interfaceinvoke $r0.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>($r13, r8);

        goto label2;

     label5:
        $r4 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType REQUEST_BODY>;

        $z0 = interfaceinvoke $r0.<javax.ws.rs.core.MultivaluedMap: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label7;

        if i2 <= 1 goto label6;

        if i2 == i3 goto label6;

        $r6 = virtualinvoke r1.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

        staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: void reportInvalidResourceMethod(java.lang.reflect.Method,java.lang.String)>($r6, "SINGLE_BODY_ONLY");

     label6:
        $r14 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType FORM>;

        $z3 = interfaceinvoke $r0.<javax.ws.rs.core.MultivaluedMap: boolean containsKey(java.lang.Object)>($r14);

        if $z3 == 0 goto label7;

        $r5 = virtualinvoke r1.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

        staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: void reportInvalidResourceMethod(java.lang.reflect.Method,java.lang.String)>($r5, "ONLY_FORM_ALLOWED");

     label7:
        return $r0;
    }

    private static boolean isIgnorableParameter(org.apache.cxf.jaxrs.model.OperationResourceInfo, org.apache.cxf.jaxrs.model.Parameter)
    {
        java.lang.Class[] $r7;
        org.apache.cxf.jaxrs.model.Parameter r0;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r5;
        org.apache.cxf.jaxrs.model.ParameterType $r1, $r2, $r3, $r4;
        int $i0;
        java.lang.Class $r8;
        java.lang.reflect.Method $r6;

        r5 := @parameter0: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        r0 := @parameter1: org.apache.cxf.jaxrs.model.Parameter;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r2 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType CONTEXT>;

        if $r1 != $r2 goto label1;

        return 1;

     label1:
        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r4 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType REQUEST_BODY>;

        if $r3 != $r4 goto label2;

        $r6 = virtualinvoke r5.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getAnnotatedMethod()>();

        if $r6 == null goto label2;

        $r7 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r8 = $r7[$i0];

        if $r8 != class "Ljavax/ws/rs/container/AsyncResponse;" goto label2;

        return 1;

     label2:
        return 0;
    }

    private static int getBodyIndex(javax.ws.rs.core.MultivaluedMap, org.apache.cxf.jaxrs.model.OperationResourceInfo)
    {
        org.apache.cxf.jaxrs.model.OperationResourceInfo r4;
        org.apache.cxf.jaxrs.model.Parameter $r7;
        javax.ws.rs.core.MultivaluedMap r0;
        org.apache.cxf.jaxrs.model.ParameterType $r1;
        java.util.List r3;
        int i0, $i1, $i2, $i4, $i6;
        java.lang.Object $r2, $r6;
        java.lang.reflect.Method $r5;
        boolean $z0;

        r0 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r4 := @parameter1: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        $r1 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType REQUEST_BODY>;

        $r2 = interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>($r1);

        r3 = (java.util.List) $r2;

        if r3 == null goto label1;

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i1 <= 1 goto label2;

     label1:
        $i4 = (int) -1;

        $i2 = $i4;

        goto label3;

     label2:
        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (org.apache.cxf.jaxrs.model.Parameter) $r6;

        $i2 = virtualinvoke $r7.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

     label3:
        i0 = $i2;

        $z0 = virtualinvoke r4.<org.apache.cxf.jaxrs.model.OperationResourceInfo: boolean isSubResourceLocator()>();

        if $z0 == 0 goto label4;

        $i6 = (int) -1;

        if $i2 == $i6 goto label4;

        $r5 = virtualinvoke r4.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

        staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: void reportInvalidResourceMethod(java.lang.reflect.Method,java.lang.String)>($r5, "NO_BODY_IN_SUBRESOURCE");

     label4:
        return i0;
    }

    private void checkResponse(java.lang.reflect.Method, javax.ws.rs.core.Response, org.apache.cxf.message.Message) throws java.lang.Throwable
    {
        org.apache.cxf.jaxrs.client.ClientProxyImpl r3;
        org.apache.cxf.interceptor.InterceptorChain $r10;
        org.apache.cxf.jaxrs.client.ResponseExceptionMapper $r16;
        java.lang.reflect.Method r1;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r8;
        javax.ws.rs.core.Response r0;
        org.apache.cxf.transport.MessageObserver $r11, $r12;
        javax.ws.rs.WebApplicationException $r22;
        java.lang.Throwable $r17, r19;
        org.apache.cxf.interceptor.Fault $r9;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r24;
        org.apache.cxf.message.Message r4;
        java.lang.Class[] $r2, $r14, $r18, r20, r21;
        org.apache.cxf.message.Exchange $r5, $r7, $r23;
        org.apache.cxf.endpoint.Endpoint r26;
        java.lang.Object $r6, $r25;
        java.lang.Class $r13, r15;

        r3 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r1 := @parameter0: java.lang.reflect.Method;

        r0 := @parameter1: javax.ws.rs.core.Response;

        r4 := @parameter2: org.apache.cxf.message.Message;

        r19 = null;

        $i0 = virtualinvoke r0.<javax.ws.rs.core.Response: int getStatus()>();

        if $i0 < 300 goto label8;

        $r2 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>();

        r20 = $r2;

        $i1 = lengthof $r2;

        if $i1 != 0 goto label1;

        $r18 = newarray (java.lang.Class)[1];

        $r18[0] = class "Ljavax/ws/rs/WebApplicationException;";

        r20 = $r18;

     label1:
        r21 = r20;

        $i3 = lengthof r20;

        i4 = 0;

     label2:
        if i4 >= $i3 goto label4;

        r15 = r21[i4];

        $r16 = staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: org.apache.cxf.jaxrs.client.ResponseExceptionMapper findExceptionMapper(org.apache.cxf.message.Message,java.lang.Class)>(r4, r15);

        if $r16 == null goto label3;

        $r17 = interfaceinvoke $r16.<org.apache.cxf.jaxrs.client.ResponseExceptionMapper: java.lang.Throwable fromResponse(javax.ws.rs.core.Response)>(r0);

        r19 = $r17;

        if $r17 == null goto label3;

        throw $r17;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        if r19 != null goto label5;

        $r13 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        if $r13 != class "Ljavax/ws/rs/core/Response;" goto label5;

        $r14 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>();

        $i2 = lengthof $r14;

        if $i2 != 0 goto label5;

        return;

     label5:
        $r22 = virtualinvoke r3.<org.apache.cxf.jaxrs.client.ClientProxyImpl: javax.ws.rs.WebApplicationException convertToWebApplicationException(javax.ws.rs.core.Response)>(r0);

        $r23 = interfaceinvoke r4.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r24 = <org.apache.cxf.message.Message: java.lang.String RESPONSE_CODE>;

        $r25 = interfaceinvoke $r23.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>($r24);

        if $r25 != null goto label6;

        throw $r22;

     label6:
        $r5 = interfaceinvoke r4.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r6 = interfaceinvoke $r5.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/Endpoint;");

        r26 = (org.apache.cxf.endpoint.Endpoint) $r6;

        $r7 = interfaceinvoke r4.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r8 = virtualinvoke r3.<org.apache.cxf.jaxrs.client.ClientProxyImpl: org.apache.cxf.jaxrs.client.ClientConfiguration getConfiguration()>();

        interfaceinvoke $r7.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/interceptor/InterceptorProvider;", $r8);

        $r9 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r9.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r22);

        interfaceinvoke r4.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/lang/Exception;", $r9);

        $r10 = interfaceinvoke r4.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        interfaceinvoke $r10.<org.apache.cxf.interceptor.InterceptorChain: void abort()>();

        $r11 = interfaceinvoke r26.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.transport.MessageObserver getInFaultObserver()>();

        if $r11 == null goto label7;

        $r12 = interfaceinvoke r26.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.transport.MessageObserver getInFaultObserver()>();

        interfaceinvoke $r12.<org.apache.cxf.transport.MessageObserver: void onMessage(org.apache.cxf.message.Message)>(r4);

     label7:
        throw $r22;

     label8:
        return;
    }

    private static org.apache.cxf.jaxrs.client.ResponseExceptionMapper findExceptionMapper(org.apache.cxf.message.Message, java.lang.Class)
    {
        org.apache.cxf.message.Message r0;
        java.lang.Class r2;
        org.apache.cxf.jaxrs.client.ResponseExceptionMapper $r3;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r1;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r2 := @parameter1: java.lang.Class;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r0);

        $r3 = virtualinvoke $r1.<org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.client.ResponseExceptionMapper createResponseExceptionMapper(java.lang.Class)>(r2);

        return $r3;
    }

    private javax.ws.rs.core.MultivaluedMap setRequestHeaders(javax.ws.rs.core.MultivaluedMap, org.apache.cxf.jaxrs.model.OperationResourceInfo, boolean, java.lang.Class, java.lang.Class)
    {
        org.apache.cxf.jaxrs.client.ClientProxyImpl r2;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r3;
        javax.ws.rs.core.MediaType r7, $r10, $r11, $r12, $r15, $r16, $r21, $r22, $r26;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6, $z7;
        java.util.List $r4, $r13, $r18, $r19, $r23, $r29, $r30, r31;
        java.lang.String[] $r8, $r25;
        int $i0;
        java.lang.String $r9, $r28;
        java.util.Iterator $r32;
        javax.ws.rs.core.MultivaluedMap r0;
        java.lang.Object $r1, $r6, $r14, $r20, $r24;
        java.lang.Class r5, r17, $r27;

        r2 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r0 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r3 := @parameter1: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        z2 := @parameter2: boolean;

        r17 := @parameter3: java.lang.Class;

        r5 := @parameter4: java.lang.Class;

        $r1 = interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("Content-Type");

        if $r1 != null goto label06;

        if z2 != 0 goto label01;

        if r17 == null goto label02;

        $r27 = class "Ljavax/ws/rs/core/MultivaluedMap;";

        $z5 = virtualinvoke $r27.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r17);

        if $z5 == 0 goto label02;

     label01:
        interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>("Content-Type", "application/x-www-form-urlencoded");

        goto label06;

     label02:
        $r18 = virtualinvoke r3.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getConsumeTypes()>();

        $z3 = interfaceinvoke $r18.<java.util.List: boolean isEmpty()>();

        if $z3 != 0 goto label03;

        $r19 = virtualinvoke r3.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getConsumeTypes()>();

        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(0);

        $r22 = (javax.ws.rs.core.MediaType) $r20;

        $r21 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType WILDCARD_TYPE>;

        $z4 = virtualinvoke $r22.<javax.ws.rs.core.MediaType: boolean equals(java.lang.Object)>($r21);

        if $z4 == 0 goto label04;

     label03:
        $r28 = "application/xml";

        goto label05;

     label04:
        $r23 = virtualinvoke r3.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getConsumeTypes()>();

        $r24 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(0);

        $r26 = (javax.ws.rs.core.MediaType) $r24;

        $r25 = newarray (java.lang.String)[0];

        $r28 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String mediaTypeToString(javax.ws.rs.core.MediaType,java.lang.String[])>($r26, $r25);

     label05:
        interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>("Content-Type", $r28);

     label06:
        $r29 = specialinvoke r2.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.List getAccept(javax.ws.rs.core.MultivaluedMap)>(r0);

        if $r29 != null goto label16;

        $r4 = virtualinvoke r3.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getProduceTypes()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 == 0 goto label07;

        $r13 = virtualinvoke r3.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getProduceTypes()>();

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(0);

        $r16 = (javax.ws.rs.core.MediaType) $r14;

        $r15 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType WILDCARD_TYPE>;

        $z1 = virtualinvoke $r16.<javax.ws.rs.core.MediaType: boolean equals(java.lang.Object)>($r15);

        if $z1 == 0 goto label08;

     label07:
        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        if $z6 == 0 goto label12;

        $z0 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: boolean isPrimitive(java.lang.Class)>(r5);

        if $z0 == 0 goto label10;

        $r12 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType TEXT_PLAIN_TYPE>;

        $r30 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r12);

        goto label11;

     label10:
        $r11 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_XML_TYPE>;

        $r30 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r11);

     label11:
        r31 = $r30;

        goto label14;

     label12:
        if r5 != class "Ljava/lang/Void;" goto label13;

        $r10 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType WILDCARD_TYPE>;

        r31 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r10);

        goto label14;

     label13:
        r31 = virtualinvoke r3.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getProduceTypes()>();

     label14:
        $r32 = interfaceinvoke r31.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z7 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label16;

        $r6 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r7 = (javax.ws.rs.core.MediaType) $r6;

        $r8 = newarray (java.lang.String)[0];

        $r9 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String mediaTypeToString(javax.ws.rs.core.MediaType,java.lang.String[])>(r7, $r8);

        interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>("Accept", $r9);

        goto label15;

     label16:
        return r0;
    }

    private java.util.List getAccept(javax.ws.rs.core.MultivaluedMap)
    {
        java.util.Iterator $r4;
        org.apache.cxf.jaxrs.client.ClientProxyImpl r8;
        java.util.ArrayList $r3;
        javax.ws.rs.core.MultivaluedMap r0;
        java.util.List r2;
        javax.ws.rs.core.MediaType $r7;
        int $i0;
        java.lang.Object $r1, $r5;
        java.lang.String r6;
        boolean $z0;

        r8 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r0 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        $r1 = interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>("Accept");

        r2 = (java.util.List) $r1;

        if r2 == null goto label1;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>(r6);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label3;

     label4:
        return $r3;
    }

    private java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap, java.util.List, java.lang.Object[], org.apache.cxf.jaxrs.model.OperationResourceInfo)
    {
        org.apache.cxf.jaxrs.model.OperationResourceInfo r2;
        java.util.Map $r17, $r19, $r36, $r46;
        java.util.Set $r20;
        java.lang.Object[] r25;
        org.apache.cxf.jaxrs.model.URITemplate $r3;
        org.apache.cxf.jaxrs.model.Parameter r48, r50, r52, r53;
        java.util.LinkedHashMap $r8;
        java.lang.String $r18, $r23, $r24, $r27, $r31, $r33, $r38, $r39, r49, r51;
        org.apache.cxf.jaxrs.client.ClientProxyImpl r1;
        org.apache.cxf.jaxrs.model.ParameterType $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.util.Collection $r14, $r45, $r47;
        java.util.List $r4, $r7, r11;
        java.util.HashMap $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.util.LinkedList $r0;
        java.util.Iterator $r9, $r12, $r13, $r15, $r21, $r42;
        javax.ws.rs.core.MultivaluedMap r5, $r41;
        java.lang.Object $r16, $r22, $r26, $r28, $r29, $r30, $r32, $r34, $r35, $r37, $r40, $r43, $r44;

        r1 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r5 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r11 := @parameter1: java.util.List;

        r25 := @parameter2: java.lang.Object[];

        r2 := @parameter3: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        $z0 = r1.<org.apache.cxf.jaxrs.client.ClientProxyImpl: boolean isRoot>;

        if $z0 == 0 goto label01;

        $r46 = r1.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.Map valuesMap>;

        $r47 = interfaceinvoke $r46.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r47);

     label01:
        $r3 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.URITemplate getURITemplate()>();

        $r4 = virtualinvoke $r3.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List getVariables()>();

        $r6 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType PATH>;

        $r7 = staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.List getParameters(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType)>(r5, $r6);

        $r8 = new java.util.LinkedHashMap;

        specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>();

        $r9 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z9 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label07;

        $r37 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r48 = (org.apache.cxf.jaxrs.model.Parameter) $r37;

        $r38 = virtualinvoke r48.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getName()>();

        $i5 = virtualinvoke $r38.<java.lang.String: int length()>();

        if $i5 != 0 goto label05;

        $i6 = virtualinvoke r48.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r40 = r25[$i6];

        $r41 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: javax.ws.rs.core.MultivaluedMap extractValuesFromBean(java.lang.Object,java.lang.String)>($r40, "");

        $r42 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z8 = interfaceinvoke $r42.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label04;

        $r43 = interfaceinvoke $r42.<java.util.Iterator: java.lang.Object next()>();

        r49 = (java.lang.String) $r43;

        $r44 = interfaceinvoke $r41.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>(r49);

        $r45 = (java.util.Collection) $r44;

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r45);

        goto label03;

     label04:
        goto label06;

     label05:
        $r39 = virtualinvoke r48.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getName()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r39, r48);

     label06:
        goto label02;

     label07:
        $r10 = new java.util.HashMap;

        $i0 = interfaceinvoke r11.<java.util.List: int size()>();

        specialinvoke $r10.<java.util.HashMap: void <init>(int)>($i0);

        $r12 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r34 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r50 = (org.apache.cxf.jaxrs.model.Parameter) $r34;

        $i4 = virtualinvoke r50.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r35 = r25[$i4];

        $r36 = specialinvoke r1.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.Map getValuesFromBeanParam(java.lang.Object,java.lang.Class)>($r35, class "Ljavax/ws/rs/PathParam;");

        interfaceinvoke $r10.<java.util.Map: void putAll(java.util.Map)>($r36);

        goto label08;

     label09:
        $r13 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r28 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r51 = (java.lang.String) $r28;

        $r29 = interfaceinvoke $r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r51);

        r52 = (org.apache.cxf.jaxrs.model.Parameter) $r29;

        if r52 == null goto label11;

        $i3 = virtualinvoke r52.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r32 = r25[$i3];

        $r33 = virtualinvoke r1.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.String convertParamValue(java.lang.Object)>($r32);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r33);

        goto label12;

     label11:
        $z7 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>(r51);

        if $z7 == 0 goto label12;

        $r30 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r51);

        $r31 = virtualinvoke r1.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.String convertParamValue(java.lang.Object)>($r30);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r31);

     label12:
        goto label10;

     label13:
        $r14 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>();

        $r15 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label14:
        $z3 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label18;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r53 = (org.apache.cxf.jaxrs.model.Parameter) $r16;

        $r17 = r1.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.Map valuesMap>;

        $r18 = virtualinvoke r53.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getName()>();

        $z4 = interfaceinvoke $r17.<java.util.Map: boolean containsKey(java.lang.Object)>($r18);

        if $z4 == 0 goto label17;

        i7 = 0;

        $r19 = r1.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.Map valuesMap>;

        $r20 = interfaceinvoke $r19.<java.util.Map: java.util.Set keySet()>();

        $r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label15:
        $z5 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label17;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        $r23 = (java.lang.String) $r22;

        $r24 = virtualinvoke r53.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getName()>();

        $z6 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z6 == 0 goto label16;

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if i7 >= $i1 goto label16;

        interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>(i7);

        $i2 = virtualinvoke r53.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r26 = r25[$i2];

        $r27 = virtualinvoke r1.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.String convertParamValue(java.lang.Object)>($r26);

        interfaceinvoke $r0.<java.util.List: void add(int,java.lang.Object)>(i7, $r27);

        goto label17;

     label16:
        i7 = i7 + 1;

        goto label15;

     label17:
        goto label14;

     label18:
        return $r0;
    }

    private static java.util.List getParameters(javax.ws.rs.core.MultivaluedMap, org.apache.cxf.jaxrs.model.ParameterType)
    {
        javax.ws.rs.core.MultivaluedMap r0;
        org.apache.cxf.jaxrs.model.ParameterType r1;
        java.util.List $r4;
        java.lang.Object $r2, $r3;

        r0 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r1 := @parameter1: org.apache.cxf.jaxrs.model.ParameterType;

        $r2 = interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>(r1);

        if $r2 != null goto label1;

        $r4 = <java.util.Collections: java.util.List EMPTY_LIST>;

        goto label2;

     label1:
        $r3 = interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.List) $r3;

     label2:
        return $r4;
    }

    private void handleQueries(javax.ws.rs.core.MultivaluedMap, java.util.List, java.lang.Object[], javax.ws.rs.core.UriBuilder)
    {
        org.apache.cxf.jaxrs.client.ClientProxyImpl r7;
        org.apache.cxf.jaxrs.model.ParameterType $r1, $r20, $r26;
        java.util.Map $r10;
        javax.ws.rs.core.UriBuilder r16;
        boolean $z0, $z1, $z2;
        java.util.Set $r11;
        java.util.List $r2, r4;
        java.lang.Object[] r8, $r18, $r25;
        org.apache.cxf.jaxrs.model.Parameter r28, r29;
        int $i0, $i1, $i2;
        java.lang.String $r19, $r24;
        java.util.Map$Entry r14;
        java.util.Iterator $r3, $r5, $r12;
        javax.ws.rs.core.MultivaluedMap r0;
        java.lang.Object $r6, $r9, $r13, $r15, $r17, $r21, $r22, $r23, $r27;

        r7 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r0 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r4 := @parameter1: java.util.List;

        r8 := @parameter2: java.lang.Object[];

        r16 := @parameter3: javax.ws.rs.core.UriBuilder;

        $r1 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType QUERY>;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.List getParameters(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType)>(r0, $r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r22 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r28 = (org.apache.cxf.jaxrs.model.Parameter) $r22;

        $i1 = virtualinvoke r28.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r23 = r8[$i1];

        if $r23 == null goto label2;

        $r24 = virtualinvoke r28.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getName()>();

        $r26 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType QUERY>;

        $r25 = newarray (java.lang.Object)[1];

        $i2 = virtualinvoke r28.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r27 = r8[$i2];

        $r25[0] = $r27;

        virtualinvoke r7.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void addMatrixQueryParamsToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,org.apache.cxf.jaxrs.model.ParameterType,java.lang.Object[])>(r16, $r24, $r26, $r25);

     label2:
        goto label1;

     label3:
        $r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r29 = (org.apache.cxf.jaxrs.model.Parameter) $r6;

        $i0 = virtualinvoke r29.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r9 = r8[$i0];

        $r10 = specialinvoke r7.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.Map getValuesFromBeanParam(java.lang.Object,java.lang.Class)>($r9, class "Ljavax/ws/rs/QueryParam;");

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.util.Map$Entry) $r13;

        $r15 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r15 == null goto label6;

        $r17 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r19 = (java.lang.String) $r17;

        $r20 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType QUERY>;

        $r18 = newarray (java.lang.Object)[1];

        $r21 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18[0] = $r21;

        virtualinvoke r7.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void addMatrixQueryParamsToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,org.apache.cxf.jaxrs.model.ParameterType,java.lang.Object[])>(r16, $r19, $r20, $r18);

     label6:
        goto label5;

     label7:
        goto label4;

     label8:
        return;
    }

    private java.util.Map getValuesFromBeanParam(java.lang.Object, java.lang.Class)
    {
        java.lang.Throwable $r19;
        java.lang.Object[] $r16;
        org.apache.cxf.jaxrs.client.ClientProxyImpl r20;
        java.util.HashMap $r0;
        java.lang.reflect.Method[] $r3;
        int i0, i1;
        java.lang.String $r7, $r8, $r13, $r18;
        java.lang.reflect.Method r4, $r15;
        java.lang.Class[] $r14;
        java.lang.'annotation'.Annotation $r6;
        java.lang.Object r1, $r17;
        java.lang.Class $r2, r5, $r9;
        java.lang.StringBuilder $r10, $r11, $r12;

        r20 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r1 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.Class;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i0 = lengthof $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r4 = $r3[i1];

        $r6 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r5);

        if $r6 == null goto label5;

     label2:
        $r7 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>(3);

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("get");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = newarray (java.lang.Class)[0];

        $r15 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r13, $r14);

        $r16 = newarray (java.lang.Object)[0];

        $r17 = virtualinvoke $r15.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r16);

        $r18 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r17);

     label3:
        goto label5;

     label4:
        $r19 := @caughtexception;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return $r0;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private void handleMatrixes(javax.ws.rs.core.MultivaluedMap, java.util.List, java.lang.Object[], javax.ws.rs.core.UriBuilder)
    {
        org.apache.cxf.jaxrs.client.ClientProxyImpl r7;
        org.apache.cxf.jaxrs.model.ParameterType $r1, $r20, $r26;
        java.util.Map $r10;
        javax.ws.rs.core.UriBuilder r16;
        boolean $z0, $z1, $z2;
        java.util.Set $r11;
        java.util.List $r2, r4;
        java.lang.Object[] r8, $r18, $r25;
        org.apache.cxf.jaxrs.model.Parameter r28, r29;
        int $i0, $i1, $i2;
        java.lang.String $r19, $r24;
        java.util.Map$Entry r14;
        java.util.Iterator $r3, $r5, $r12;
        javax.ws.rs.core.MultivaluedMap r0;
        java.lang.Object $r6, $r9, $r13, $r15, $r17, $r21, $r22, $r23, $r27;

        r7 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r0 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r4 := @parameter1: java.util.List;

        r8 := @parameter2: java.lang.Object[];

        r16 := @parameter3: javax.ws.rs.core.UriBuilder;

        $r1 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType MATRIX>;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.List getParameters(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType)>(r0, $r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r22 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r28 = (org.apache.cxf.jaxrs.model.Parameter) $r22;

        $i1 = virtualinvoke r28.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r23 = r8[$i1];

        if $r23 == null goto label2;

        $r24 = virtualinvoke r28.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getName()>();

        $r26 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType MATRIX>;

        $r25 = newarray (java.lang.Object)[1];

        $i2 = virtualinvoke r28.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r27 = r8[$i2];

        $r25[0] = $r27;

        virtualinvoke r7.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void addMatrixQueryParamsToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,org.apache.cxf.jaxrs.model.ParameterType,java.lang.Object[])>(r16, $r24, $r26, $r25);

     label2:
        goto label1;

     label3:
        $r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r29 = (org.apache.cxf.jaxrs.model.Parameter) $r6;

        $i0 = virtualinvoke r29.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r9 = r8[$i0];

        $r10 = specialinvoke r7.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.Map getValuesFromBeanParam(java.lang.Object,java.lang.Class)>($r9, class "Ljavax/ws/rs/MatrixParam;");

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.util.Map$Entry) $r13;

        $r15 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r15 == null goto label6;

        $r17 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r19 = (java.lang.String) $r17;

        $r20 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType MATRIX>;

        $r18 = newarray (java.lang.Object)[1];

        $r21 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18[0] = $r21;

        virtualinvoke r7.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void addMatrixQueryParamsToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,org.apache.cxf.jaxrs.model.ParameterType,java.lang.Object[])>(r16, $r19, $r20, $r18);

     label6:
        goto label5;

     label7:
        goto label4;

     label8:
        return;
    }

    private javax.ws.rs.core.MultivaluedMap handleForm(javax.ws.rs.core.MultivaluedMap, java.util.List, java.lang.Object[])
    {
        java.lang.Object[] r9;
        org.apache.cxf.jaxrs.client.ClientProxyImpl r8;
        org.apache.cxf.jaxrs.impl.MetadataMap $r0;
        org.apache.cxf.jaxrs.model.Parameter r22, r23;
        org.apache.cxf.jaxrs.model.ParameterType $r2;
        java.util.Map $r11;
        int $i0, $i1;
        java.lang.String $r17, $r20;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r15;
        java.util.Iterator $r4, $r6, $r13;
        java.util.Set $r12;
        javax.ws.rs.core.MultivaluedMap r1;
        java.util.List $r3, r5;
        java.lang.Object $r7, $r10, $r14, $r16, $r18, $r19, $r21;

        r8 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r1 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r5 := @parameter1: java.util.List;

        r9 := @parameter2: java.lang.Object[];

        $r0 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        $r2 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType FORM>;

        $r3 = staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.List getParameters(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType)>(r1, $r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r19 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.apache.cxf.jaxrs.model.Parameter) $r19;

        $r20 = virtualinvoke r22.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getName()>();

        $i1 = virtualinvoke r22.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r21 = r9[$i1];

        specialinvoke r8.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void addFormValue(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)>($r0, $r20, $r21);

        goto label1;

     label2:
        $r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r23 = (org.apache.cxf.jaxrs.model.Parameter) $r7;

        $i0 = virtualinvoke r23.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r10 = r9[$i0];

        $r11 = specialinvoke r8.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.Map getValuesFromBeanParam(java.lang.Object,java.lang.Class)>($r10, class "Ljavax/ws/rs/FormParam;");

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.util.Map$Entry) $r14;

        $r16 = interfaceinvoke r15.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (java.lang.String) $r16;

        $r18 = interfaceinvoke r15.<java.util.Map$Entry: java.lang.Object getValue()>();

        specialinvoke r8.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void addFormValue(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)>($r0, $r17, $r18);

        goto label4;

     label5:
        goto label3;

     label6:
        return $r0;
    }

    private void addFormValue(javax.ws.rs.core.MultivaluedMap, java.lang.String, java.lang.Object)
    {
        java.lang.Object[] $r9, $r10;
        org.apache.cxf.jaxrs.client.ClientProxyImpl r4;
        java.lang.String r3, $r8;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r6;
        java.util.Collection $r11;
        javax.ws.rs.core.MultivaluedMap r2;
        java.lang.Object r0, $r7, $r12;
        java.lang.Class $r1, $r5;

        r4 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r2 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.Object;

        if r0 == null goto label8;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: boolean isSupportedCollectionOrArray(java.lang.Class)>($r1);

        if $z0 == 0 goto label5;

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r5.<java.lang.Class: boolean isArray()>();

        if $z2 == 0 goto label1;

        $r9 = (java.lang.Object[]) r0;

        $r10 = (java.lang.Object[]) $r9;

        $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10);

        goto label2;

     label1:
        $r11 = (java.util.Collection) r0;

     label2:
        $r6 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = virtualinvoke r4.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.String convertParamValue(java.lang.Object)>($r7);

        staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)>(r2, r3, $r8);

        goto label3;

     label4:
        goto label8;

     label5:
        $z1 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label6;

        $r12 = r0;

        goto label7;

     label6:
        $r12 = virtualinvoke r4.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.String convertParamValue(java.lang.Object)>(r0);

     label7:
        staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)>(r2, r3, $r12);

     label8:
        return;
    }

    private java.util.List handleMultipart(javax.ws.rs.core.MultivaluedMap, org.apache.cxf.jaxrs.model.OperationResourceInfo, java.lang.Object[])
    {
        java.lang.Object[] r12;
        org.apache.cxf.jaxrs.client.ClientProxyImpl r14;
        org.apache.cxf.jaxrs.ext.multipart.Attachment $r9;
        org.apache.cxf.jaxrs.model.Parameter r6;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r7;
        org.apache.cxf.jaxrs.model.ParameterType $r2;
        org.apache.cxf.jaxrs.ext.multipart.Multipart $r8;
        int $i0, $i1;
        java.lang.String $r10, $r11;
        java.util.LinkedList $r0;
        boolean $z0;
        java.util.Iterator $r4;
        javax.ws.rs.core.MultivaluedMap r1;
        java.util.List $r3;
        java.lang.Object $r5, $r13;

        r14 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r1 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r7 := @parameter1: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        r12 := @parameter2: java.lang.Object[];

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        $r2 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType REQUEST_BODY>;

        $r3 = staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.List getParameters(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType)>(r1, $r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.cxf.jaxrs.model.Parameter) $r5;

        $i0 = virtualinvoke r6.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r8 = staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: org.apache.cxf.jaxrs.ext.multipart.Multipart getMultipart(org.apache.cxf.jaxrs.model.OperationResourceInfo,int)>(r7, $i0);

        if $r8 == null goto label2;

        $r9 = new org.apache.cxf.jaxrs.ext.multipart.Attachment;

        $r10 = interfaceinvoke $r8.<org.apache.cxf.jaxrs.ext.multipart.Multipart: java.lang.String value()>();

        $r11 = interfaceinvoke $r8.<org.apache.cxf.jaxrs.ext.multipart.Multipart: java.lang.String type()>();

        $i1 = virtualinvoke r6.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r13 = r12[$i1];

        specialinvoke $r9.<org.apache.cxf.jaxrs.ext.multipart.Attachment: void <init>(java.lang.String,java.lang.String,java.lang.Object)>($r10, $r11, $r13);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    private void handleHeaders(javax.ws.rs.core.MultivaluedMap, java.util.List, javax.ws.rs.core.MultivaluedMap, java.lang.Object[])
    {
        org.apache.cxf.jaxrs.client.ClientProxyImpl r7;
        org.apache.cxf.jaxrs.model.ParameterType $r1;
        java.util.Map $r10;
        boolean $z0, $z1, $z2;
        java.util.Set $r11;
        java.util.List $r2, r4;
        java.lang.Object[] r8;
        org.apache.cxf.jaxrs.model.Parameter r25, r26;
        int $i0, $i1, $i2;
        java.lang.String $r19, $r22, $r24;
        java.util.Map$Entry r14;
        java.util.Iterator $r3, $r5, $r12;
        javax.ws.rs.core.MultivaluedMap r0, r16;
        java.lang.Object $r6, $r9, $r13, $r15, $r17, $r18, $r20, $r21, $r23;

        r7 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r16 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r4 := @parameter1: java.util.List;

        r0 := @parameter2: javax.ws.rs.core.MultivaluedMap;

        r8 := @parameter3: java.lang.Object[];

        $r1 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType HEADER>;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.List getParameters(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType)>(r0, $r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r20 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r25 = (org.apache.cxf.jaxrs.model.Parameter) $r20;

        $i1 = virtualinvoke r25.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r21 = r8[$i1];

        if $r21 == null goto label2;

        $r22 = virtualinvoke r25.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getName()>();

        $i2 = virtualinvoke r25.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r23 = r8[$i2];

        $r24 = virtualinvoke r7.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.String convertParamValue(java.lang.Object)>($r23);

        interfaceinvoke r16.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>($r22, $r24);

     label2:
        goto label1;

     label3:
        $r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r26 = (org.apache.cxf.jaxrs.model.Parameter) $r6;

        $i0 = virtualinvoke r26.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r9 = r8[$i0];

        $r10 = specialinvoke r7.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.Map getValuesFromBeanParam(java.lang.Object,java.lang.Class)>($r9, class "Ljavax/ws/rs/HeaderParam;");

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.util.Map$Entry) $r13;

        $r15 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r15 == null goto label6;

        $r17 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = virtualinvoke r7.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.String convertParamValue(java.lang.Object)>($r18);

        interfaceinvoke r16.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>($r17, $r19);

     label6:
        goto label5;

     label7:
        goto label4;

     label8:
        return;
    }

    private static org.apache.cxf.jaxrs.ext.multipart.Multipart getMultipart(org.apache.cxf.jaxrs.model.OperationResourceInfo, int)
    {
        java.lang.'annotation'.Annotation[][] $r2;
        org.apache.cxf.jaxrs.ext.multipart.Multipart $r5;
        int i0;
        java.lang.Object $r4;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r0;
        java.lang.'annotation'.Annotation[] $r3;
        java.lang.reflect.Method $r1;

        r0 := @parameter0: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getAnnotatedMethod()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        $r3 = $r2[i0];

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>($r3, class "Lorg/apache/cxf/jaxrs/ext/multipart/Multipart;");

        $r5 = (org.apache.cxf.jaxrs.ext.multipart.Multipart) $r4;

        goto label2;

     label1:
        $r5 = null;

     label2:
        return $r5;
    }

    private void handleCookies(javax.ws.rs.core.MultivaluedMap, java.util.List, javax.ws.rs.core.MultivaluedMap, java.lang.Object[])
    {
        org.apache.cxf.jaxrs.client.ClientProxyImpl r7;
        org.apache.cxf.jaxrs.model.ParameterType $r1;
        java.util.Map $r10;
        boolean $z0, $z1, $z2;
        java.util.Set $r11;
        java.util.List $r2, r4;
        java.lang.StringBuilder $r17, $r20, $r21, $r24, $r28, $r30, $r31, $r35;
        java.lang.Object[] r8;
        org.apache.cxf.jaxrs.model.Parameter r37, r38;
        int $i0, $i1, $i2;
        java.lang.String $r19, $r23, $r25, $r29, $r33, $r34, $r36;
        java.util.Map$Entry r14;
        java.util.Iterator $r3, $r5, $r12;
        javax.ws.rs.core.MultivaluedMap r0, r16;
        java.lang.Object $r6, $r9, $r13, $r15, $r18, $r22, $r26, $r27, $r32;

        r7 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r16 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r4 := @parameter1: java.util.List;

        r0 := @parameter2: javax.ws.rs.core.MultivaluedMap;

        r8 := @parameter3: java.lang.Object[];

        $r1 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType COOKIE>;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.List getParameters(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType)>(r0, $r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r26 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r37 = (org.apache.cxf.jaxrs.model.Parameter) $r26;

        $i1 = virtualinvoke r37.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r27 = r8[$i1];

        if $r27 == null goto label2;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke r37.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getName()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $i2 = virtualinvoke r37.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r32 = r8[$i2];

        $r33 = virtualinvoke $r32.<java.lang.Object: java.lang.String toString()>();

        $r34 = virtualinvoke r7.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.String convertParamValue(java.lang.Object)>($r33);

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r16.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>("Cookie", $r36);

     label2:
        goto label1;

     label3:
        $r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r38 = (org.apache.cxf.jaxrs.model.Parameter) $r6;

        $i0 = virtualinvoke r38.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r9 = r8[$i0];

        $r10 = specialinvoke r7.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.Map getValuesFromBeanParam(java.lang.Object,java.lang.Class)>($r9, class "Ljavax/ws/rs/CookieParam;");

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.util.Map$Entry) $r13;

        $r15 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r15 == null goto label6;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r19 = (java.lang.String) $r18;

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r22 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r23 = virtualinvoke r7.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.String convertParamValue(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r16.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>("Cookie", $r25);

     label6:
        goto label5;

     label7:
        goto label4;

     label8:
        return;
    }

    private java.lang.Object doChainedInvocation(java.net.URI, javax.ws.rs.core.MultivaluedMap, org.apache.cxf.jaxrs.model.OperationResourceInfo, java.lang.Object, int, org.apache.cxf.message.Exchange, java.util.Map) throws java.lang.Throwable
    {
        org.apache.cxf.jaxrs.client.ClientProxyImpl r0;
        org.apache.cxf.interceptor.InterceptorChain $r29;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r2;
        java.lang.Integer $r21, $r28;
        java.util.Map r7, $r18;
        java.net.URI r5;
        java.lang.reflect.Method $r10, $r13, $r16;
        boolean $z0;
        java.lang.Exception $r33;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r23;
        java.lang.Throwable $r31;
        java.lang.Object[] $r22;
        java.lang.'annotation'.Annotation[] $r17;
        int i0, $i1;
        java.lang.String $r3, $r11, $r15, $r20;
        org.apache.cxf.message.Message $r8;
        org.apache.cxf.jaxrs.client.ClientProxyImpl$BodyWriter $r30;
        org.apache.cxf.message.Exchange r6, $r9, $r12, $r26, $r32;
        javax.ws.rs.core.MultivaluedMap r4;
        java.lang.Object r1, $r25, $r27, r34;
        java.lang.Class $r14, $r19, $r24;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r5 := @parameter0: java.net.URI;

        r4 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        r2 := @parameter2: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        r1 := @parameter3: java.lang.Object;

        i0 := @parameter4: int;

        r6 := @parameter5: org.apache.cxf.message.Exchange;

        r7 := @parameter6: java.util.Map;

        $r3 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.String getHttpMethod()>();

        $r8 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)>(r1, $r3, r4, r5, r6, r7, 1);

        $r9 = interfaceinvoke $r8.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $z0 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: boolean isOneway()>();

        interfaceinvoke $r9.<org.apache.cxf.message.Exchange: void setOneWay(boolean)>($z0);

        interfaceinvoke $r8.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/jaxrs/model/OperationResourceInfo;", r2);

        $r10 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

        $r11 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void setPlainOperationNameProperty(org.apache.cxf.message.Message,java.lang.String)>($r8, $r11);

        $r12 = interfaceinvoke $r8.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r13 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

        interfaceinvoke $r12.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Ljava/lang/reflect/Method;", $r13);

        $r14 = class "Ljava/lang/annotation/Annotation;";

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getAnnotatedMethod()>();

        $r17 = staticinvoke <org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.'annotation'.Annotation[] getMethodAnnotations(java.lang.reflect.Method,int)>($r16, i0);

        interfaceinvoke $r8.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r17);

        if r1 == null goto label1;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r8.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("BODY_INDEX", $r28);

        $r29 = interfaceinvoke $r8.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        $r30 = new org.apache.cxf.jaxrs.client.ClientProxyImpl$BodyWriter;

        specialinvoke $r30.<org.apache.cxf.jaxrs.client.ClientProxyImpl$BodyWriter: void <init>(org.apache.cxf.jaxrs.client.ClientProxyImpl,org.apache.cxf.jaxrs.client.ClientProxyImpl$1)>(r0, null);

        interfaceinvoke $r29.<org.apache.cxf.interceptor.InterceptorChain: void add(org.apache.cxf.interceptor.Interceptor)>($r30);

     label1:
        $r18 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.Map getRequestContext(org.apache.cxf.message.Message)>($r8);

        $r19 = class "Lorg/apache/cxf/jaxrs/model/OperationResourceInfo;";

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r2);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BODY_INDEX", $r21);

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void doRunInterceptorChain(org.apache.cxf.message.Message)>($r8);

        $r22 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.Object[] preProcessResult(org.apache.cxf.message.Message)>($r8);

        if $r22 == null goto label2;

        $i1 = lengthof $r22;

        if $i1 != 1 goto label2;

        $r27 = $r22[0];

        return $r27;

     label2:
        r34 = null;

     label3:
        $r23 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getClassResourceInfo()>();

        $r24 = virtualinvoke $r23.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r25 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.Object handleResponse(org.apache.cxf.message.Message,java.lang.Class)>($r8, $r24);

        r34 = $r25;

     label4:
        $r26 = interfaceinvoke $r8.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void completeExchange(java.lang.Object,org.apache.cxf.message.Exchange,boolean)>($r25, $r26, 1);

        return $r25;

     label5:
        $r33 := @caughtexception;

        r34 = $r33;

        throw $r33;

     label6:
        $r31 := @caughtexception;

     label7:
        $r32 = interfaceinvoke $r8.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void completeExchange(java.lang.Object,org.apache.cxf.message.Exchange,boolean)>(r34, $r32, 1);

        throw $r31;

        catch java.lang.Exception from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    protected java.lang.Object retryInvoke(java.net.URI, javax.ws.rs.core.MultivaluedMap, java.lang.Object, org.apache.cxf.message.Exchange, java.util.Map) throws java.lang.Throwable
    {
        org.apache.cxf.jaxrs.client.ClientProxyImpl r8;
        org.apache.cxf.jaxrs.model.OperationResourceInfo $r15;
        java.lang.Integer $r14;
        java.util.Map r0, $r2, $r3;
        int $i0, $i2;
        java.lang.String $r6;
        java.net.URI r9;
        org.apache.cxf.message.Exchange r11;
        javax.ws.rs.core.MultivaluedMap r10;
        java.lang.Object $r1, r4, $r7, $r12, $r13;
        java.lang.Class $r5;

        r8 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r9 := @parameter0: java.net.URI;

        r10 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        r4 := @parameter2: java.lang.Object;

        r11 := @parameter3: org.apache.cxf.message.Exchange;

        r0 := @parameter4: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("RequestContext");

        $r2 = (java.util.Map) $r1;

        $r3 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map)>($r2);

        if r4 == null goto label1;

        $r13 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("BODY_INDEX");

        $r14 = (java.lang.Integer) $r13;

        $i0 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i2 = (int) -1;

        $i0 = $i2;

     label2:
        $r5 = class "Lorg/apache/cxf/jaxrs/model/OperationResourceInfo;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r15 = (org.apache.cxf.jaxrs.model.OperationResourceInfo) $r7;

        $r12 = specialinvoke r8.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)>(r9, r10, $r15, r4, $i0, r11, r0);

        return $r12;
    }

    protected java.lang.Object handleResponse(org.apache.cxf.message.Message, java.lang.Class) throws java.lang.Throwable
    {
        org.apache.cxf.jaxrs.client.ClientProxyImpl r0;
        java.lang.reflect.Method r9;
        boolean $z0;
        javax.ws.rs.core.Response $r4;
        java.lang.reflect.Type $r24, $r25;
        javax.ws.rs.core.Response$ResponseBuilder $r3;
        java.lang.Throwable $r21;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r14, $r20, $r22, $r29;
        java.lang.'annotation'.Annotation[] $r27;
        org.apache.cxf.jaxrs.client.ClientState $r6;
        int $i0;
        org.apache.cxf.message.Message r1;
        org.apache.cxf.message.Exchange $r2, $r7;
        java.lang.Object $r8, $r13, $r16, $r18, $r28;
        java.lang.Class $r10, $r11, r12, $r15, $r17, $r23, $r26;
        org.apache.cxf.jaxrs.impl.ResponseImpl $r5;
        java.io.InputStream $r19;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r12 := @parameter1: java.lang.Class;

     label1:
        $r2 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)>(r1, $r2);

        $r4 = virtualinvoke $r3.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        $r5 = (org.apache.cxf.jaxrs.impl.ResponseImpl) $r4;

        virtualinvoke $r5.<org.apache.cxf.jaxrs.impl.ResponseImpl: void setMessage(org.apache.cxf.message.Message)>(r1);

        $r6 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: org.apache.cxf.jaxrs.client.ClientState getState()>();

        interfaceinvoke $r6.<org.apache.cxf.jaxrs.client.ClientState: void setResponse(javax.ws.rs.core.Response)>($r4);

        $r7 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r8 = interfaceinvoke $r7.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Ljava/lang/reflect/Method;");

        r9 = (java.lang.reflect.Method) $r8;

        specialinvoke r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: void checkResponse(java.lang.reflect.Method,javax.ws.rs.core.Response,org.apache.cxf.message.Message)>(r9, $r4, r1);

        $r10 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        if $r10 != class "Ljava/lang/Void;" goto label3;

     label2:
        $r20 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r1);

        virtualinvoke $r20.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

        return null;

     label3:
        $r11 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        if $r11 != class "Ljavax/ws/rs/core/Response;" goto label5;

        $r13 = virtualinvoke $r4.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        if $r13 == null goto label4;

        $r15 = class "Ljava/io/InputStream;";

        $r16 = virtualinvoke $r4.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        $r17 = virtualinvoke $r16.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r15.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r17);

        if $z0 == 0 goto label5;

        $r18 = virtualinvoke $r4.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        $r19 = (java.io.InputStream) $r18;

        $i0 = virtualinvoke $r19.<java.io.InputStream: int available()>();

        if $i0 != 0 goto label5;

     label4:
        $r14 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r1);

        virtualinvoke $r14.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

        return $r4;

     label5:
        $r23 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r24 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();

        $r25 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.reflect.Type processGenericTypeIfNeeded(java.lang.Class,java.lang.Class,java.lang.reflect.Type)>(r12, $r23, $r24);

        $r26 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Class updateParamClassToTypeIfNeeded(java.lang.Class,java.lang.reflect.Type)>($r23, $r25);

        $r27 = virtualinvoke r9.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>();

        $r28 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>($r4, r1, $r26, $r25, $r27);

     label6:
        $r29 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r1);

        virtualinvoke $r29.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

        return $r28;

     label7:
        $r21 := @caughtexception;

     label8:
        $r22 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r1);

        virtualinvoke $r22.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

        throw $r21;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public java.lang.Object getInvocationHandler()
    {
        org.apache.cxf.jaxrs.client.ClientProxyImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientProxyImpl;

        return r0;
    }

    protected static void reportInvalidResourceMethod(java.lang.reflect.Method, java.lang.String)
    {
        java.lang.Object[] $r2;
        org.apache.cxf.common.i18n.Message $r0;
        java.util.logging.Logger $r8;
        javax.ws.rs.client.ClientException $r10;
        java.util.ResourceBundle $r4;
        java.lang.Class $r5;
        java.lang.String r1, $r6, $r7, $r9, $r11;
        java.lang.reflect.Method r3;

        r3 := @parameter0: java.lang.reflect.Method;

        r1 := @parameter1: java.lang.String;

        $r0 = new org.apache.cxf.common.i18n.Message;

        $r4 = <org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.ResourceBundle BUNDLE>;

        $r2 = newarray (java.lang.Object)[2];

        $r5 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r2[0] = $r6;

        $r7 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.String getName()>();

        $r2[1] = $r7;

        specialinvoke $r0.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>(r1, $r4, $r2);

        $r8 = <org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.logging.Logger LOG>;

        $r9 = virtualinvoke $r0.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.logging.Logger: void severe(java.lang.String)>($r9);

        $r10 = new javax.ws.rs.client.ClientException;

        $r11 = virtualinvoke $r0.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        specialinvoke $r10.<javax.ws.rs.client.ClientException: void <init>(java.lang.String)>($r11);

        throw $r10;
    }

    protected static java.lang.'annotation'.Annotation[] getMethodAnnotations(java.lang.reflect.Method, int)
    {
        java.lang.'annotation'.Annotation[][] $r1;
        int i0, $i2;
        java.lang.'annotation'.Annotation[] $r2;
        java.lang.reflect.Method r0;

        r0 := @parameter0: java.lang.reflect.Method;

        i0 := @parameter1: int;

        if r0 == null goto label1;

        $i2 = (int) -1;

        if i0 != $i2 goto label2;

     label1:
        $r2 = newarray (java.lang.'annotation'.Annotation)[0];

        goto label3;

     label2:
        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        $r2 = $r1[i0];

     label3:
        return $r2;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;
        java.util.ResourceBundle $r1;

        <org.apache.cxf.jaxrs.client.ClientProxyImpl: java.lang.String SLASH> = "/";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/client/ClientProxyImpl;");

        <org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.logging.Logger LOG> = $r0;

        $r1 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/client/ClientProxyImpl;");

        <org.apache.cxf.jaxrs.client.ClientProxyImpl: java.util.ResourceBundle BUNDLE> = $r1;

        return;
    }
}
