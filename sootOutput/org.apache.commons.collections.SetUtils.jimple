public class org.apache.commons.collections.SetUtils extends java.lang.Object
{
    public static final java.util.Set EMPTY_SET;
    public static final java.util.SortedSet EMPTY_SORTED_SET;

    public void <init>()
    {
        org.apache.commons.collections.SetUtils r0;

        r0 := @this: org.apache.commons.collections.SetUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isEqualSet(java.util.Collection, java.util.Collection)
    {
        java.util.Collection r0, r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.util.Collection;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 == null goto label2;

        if r1 == null goto label2;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i0 == $i1 goto label3;

     label2:
        return 0;

     label3:
        $z0 = interfaceinvoke r0.<java.util.Collection: boolean containsAll(java.util.Collection)>(r1);

        return $z0;
    }

    public static int hashCodeForSet(java.util.Collection)
    {
        java.util.Iterator $r1;
        java.util.Collection r0;
        int $i0, i1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @parameter0: java.util.Collection;

        if r0 != null goto label1;

        return 0;

     label1:
        i1 = 0;

        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i1 = i1 + $i0;

        goto label2;

     label3:
        return i1;
    }

    public static java.util.Set synchronizedSet(java.util.Set)
    {
        java.util.Set r0, $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = staticinvoke <org.apache.commons.collections.set.SynchronizedSet: java.util.Set decorate(java.util.Set)>(r0);

        return $r1;
    }

    public static java.util.Set unmodifiableSet(java.util.Set)
    {
        java.util.Set r0, $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = staticinvoke <org.apache.commons.collections.set.UnmodifiableSet: java.util.Set decorate(java.util.Set)>(r0);

        return $r1;
    }

    public static java.util.Set predicatedSet(java.util.Set, org.apache.commons.collections.Predicate)
    {
        org.apache.commons.collections.Predicate r1;
        java.util.Set r0, $r2;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: org.apache.commons.collections.Predicate;

        $r2 = staticinvoke <org.apache.commons.collections.set.PredicatedSet: java.util.Set decorate(java.util.Set,org.apache.commons.collections.Predicate)>(r0, r1);

        return $r2;
    }

    public static java.util.Set typedSet(java.util.Set, java.lang.Class)
    {
        java.util.Set r0, $r2;
        java.lang.Class r1;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <org.apache.commons.collections.set.TypedSet: java.util.Set decorate(java.util.Set,java.lang.Class)>(r0, r1);

        return $r2;
    }

    public static java.util.Set transformedSet(java.util.Set, org.apache.commons.collections.Transformer)
    {
        java.util.Set r0, $r2;
        org.apache.commons.collections.Transformer r1;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: org.apache.commons.collections.Transformer;

        $r2 = staticinvoke <org.apache.commons.collections.set.TransformedSet: java.util.Set decorate(java.util.Set,org.apache.commons.collections.Transformer)>(r0, r1);

        return $r2;
    }

    public static java.util.Set orderedSet(java.util.Set)
    {
        java.util.Set r0;
        org.apache.commons.collections.set.ListOrderedSet $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = staticinvoke <org.apache.commons.collections.set.ListOrderedSet: org.apache.commons.collections.set.ListOrderedSet decorate(java.util.Set)>(r0);

        return $r1;
    }

    public static java.util.SortedSet synchronizedSortedSet(java.util.SortedSet)
    {
        java.util.SortedSet r0, $r1;

        r0 := @parameter0: java.util.SortedSet;

        $r1 = staticinvoke <org.apache.commons.collections.set.SynchronizedSortedSet: java.util.SortedSet decorate(java.util.SortedSet)>(r0);

        return $r1;
    }

    public static java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet)
    {
        java.util.SortedSet r0, $r1;

        r0 := @parameter0: java.util.SortedSet;

        $r1 = staticinvoke <org.apache.commons.collections.set.UnmodifiableSortedSet: java.util.SortedSet decorate(java.util.SortedSet)>(r0);

        return $r1;
    }

    public static java.util.SortedSet predicatedSortedSet(java.util.SortedSet, org.apache.commons.collections.Predicate)
    {
        org.apache.commons.collections.Predicate r1;
        java.util.SortedSet r0, $r2;

        r0 := @parameter0: java.util.SortedSet;

        r1 := @parameter1: org.apache.commons.collections.Predicate;

        $r2 = staticinvoke <org.apache.commons.collections.set.PredicatedSortedSet: java.util.SortedSet decorate(java.util.SortedSet,org.apache.commons.collections.Predicate)>(r0, r1);

        return $r2;
    }

    public static java.util.SortedSet typedSortedSet(java.util.SortedSet, java.lang.Class)
    {
        java.lang.Class r1;
        java.util.SortedSet r0, $r2;

        r0 := @parameter0: java.util.SortedSet;

        r1 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <org.apache.commons.collections.set.TypedSortedSet: java.util.SortedSet decorate(java.util.SortedSet,java.lang.Class)>(r0, r1);

        return $r2;
    }

    public static java.util.SortedSet transformedSortedSet(java.util.SortedSet, org.apache.commons.collections.Transformer)
    {
        java.util.SortedSet r0, $r2;
        org.apache.commons.collections.Transformer r1;

        r0 := @parameter0: java.util.SortedSet;

        r1 := @parameter1: org.apache.commons.collections.Transformer;

        $r2 = staticinvoke <org.apache.commons.collections.set.TransformedSortedSet: java.util.SortedSet decorate(java.util.SortedSet,org.apache.commons.collections.Transformer)>(r0, r1);

        return $r2;
    }

    static void <clinit>()
    {
        java.util.Set $r0;
        java.util.SortedSet $r2;
        java.util.TreeSet $r1;

        $r0 = <java.util.Collections: java.util.Set EMPTY_SET>;

        <org.apache.commons.collections.SetUtils: java.util.Set EMPTY_SET> = $r0;

        $r1 = new java.util.TreeSet;

        specialinvoke $r1.<java.util.TreeSet: void <init>()>();

        $r2 = staticinvoke <org.apache.commons.collections.set.UnmodifiableSortedSet: java.util.SortedSet decorate(java.util.SortedSet)>($r1);

        <org.apache.commons.collections.SetUtils: java.util.SortedSet EMPTY_SORTED_SET> = $r2;

        return;
    }
}
