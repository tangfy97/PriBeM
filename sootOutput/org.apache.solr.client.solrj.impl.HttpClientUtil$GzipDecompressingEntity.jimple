class org.apache.solr.client.solrj.impl.HttpClientUtil$GzipDecompressingEntity extends org.apache.http.entity.HttpEntityWrapper
{

    public void <init>(org.apache.http.HttpEntity)
    {
        org.apache.http.HttpEntity r1;
        org.apache.solr.client.solrj.impl.HttpClientUtil$GzipDecompressingEntity r0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpClientUtil$GzipDecompressingEntity;

        r1 := @parameter0: org.apache.http.HttpEntity;

        specialinvoke r0.<org.apache.http.entity.HttpEntityWrapper: void <init>(org.apache.http.HttpEntity)>(r1);

        return;
    }

    public java.io.InputStream getContent() throws java.io.IOException, java.lang.IllegalStateException
    {
        java.util.zip.GZIPInputStream $r0;
        org.apache.solr.client.solrj.impl.HttpClientUtil$GzipDecompressingEntity r1;
        org.apache.http.HttpEntity $r2;
        java.io.InputStream $r3;

        r1 := @this: org.apache.solr.client.solrj.impl.HttpClientUtil$GzipDecompressingEntity;

        $r0 = new java.util.zip.GZIPInputStream;

        $r2 = r1.<org.apache.solr.client.solrj.impl.HttpClientUtil$GzipDecompressingEntity: org.apache.http.HttpEntity wrappedEntity>;

        $r3 = interfaceinvoke $r2.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        specialinvoke $r0.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r3);

        return $r0;
    }

    public long getContentLength()
    {
        org.apache.solr.client.solrj.impl.HttpClientUtil$GzipDecompressingEntity r0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpClientUtil$GzipDecompressingEntity;

        return -1L;
    }
}
