class org.eclipse.jetty.client.HttpDestination$ConnectExchange extends org.eclipse.jetty.client.ContentExchange
{
    private final org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint proxyEndPoint;
    private final org.eclipse.jetty.client.HttpExchange exchange;
    final org.eclipse.jetty.client.HttpDestination this$0;

    public void <init>(org.eclipse.jetty.client.HttpDestination, org.eclipse.jetty.client.Address, org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint, org.eclipse.jetty.client.HttpExchange)
    {
        org.eclipse.jetty.client.Address r4;
        int $i0;
        java.lang.String $r5;
        org.eclipse.jetty.client.HttpDestination$ConnectExchange r0;
        org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint r2;
        org.eclipse.jetty.client.HttpDestination r1;
        org.eclipse.jetty.client.HttpExchange r3;

        r0 := @this: org.eclipse.jetty.client.HttpDestination$ConnectExchange;

        r1 := @parameter0: org.eclipse.jetty.client.HttpDestination;

        r4 := @parameter1: org.eclipse.jetty.client.Address;

        r2 := @parameter2: org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint;

        r3 := @parameter3: org.eclipse.jetty.client.HttpExchange;

        r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: org.eclipse.jetty.client.HttpDestination this$0> = r1;

        specialinvoke r0.<org.eclipse.jetty.client.ContentExchange: void <init>()>();

        r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint proxyEndPoint> = r2;

        r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: org.eclipse.jetty.client.HttpExchange exchange> = r3;

        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: void setMethod(java.lang.String)>("CONNECT");

        $i0 = virtualinvoke r3.<org.eclipse.jetty.client.HttpExchange: int getVersion()>();

        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: void setVersion(int)>($i0);

        $r5 = virtualinvoke r4.<org.eclipse.jetty.client.Address: java.lang.String toString()>();

        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: void setRequestURI(java.lang.String)>($r5);

        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: void addRequestHeader(java.lang.String,java.lang.String)>("Host", $r5);

        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: void addRequestHeader(java.lang.String,java.lang.String)>("Proxy-Connection", "keep-alive");

        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: void addRequestHeader(java.lang.String,java.lang.String)>("User-Agent", "Jetty-Client");

        return;
    }

    protected void onResponseComplete() throws java.io.IOException
    {
        org.eclipse.jetty.client.Address $r14;
        org.eclipse.jetty.client.HttpDestination$ConnectExchange r0;
        int $i0, $i1;
        java.lang.String $r5, $r15, $r17;
        org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint $r4, $r8, $r18;
        java.net.ProtocolException $r1;
        java.lang.StringBuilder $r2, $r3, $r6, $r7, $r9, $r10, $r11, $r12, $r16;
        org.eclipse.jetty.client.HttpExchange $r13;

        r0 := @this: org.eclipse.jetty.client.HttpDestination$ConnectExchange;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: int getResponseStatus()>();

        if $i0 != 200 goto label1;

        $r18 = r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint proxyEndPoint>;

        virtualinvoke $r18.<org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint: void upgrade()>();

        goto label3;

     label1:
        if $i0 != 504 goto label2;

        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: void onExpire()>();

        goto label3;

     label2:
        $r1 = new java.net.ProtocolException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proxy: ");

        $r4 = r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint proxyEndPoint>;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint: java.lang.String getRemoteAddr()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r8 = r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint proxyEndPoint>;

        $i1 = virtualinvoke $r8.<org.eclipse.jetty.client.SelectConnector$UpgradableEndPoint: int getRemotePort()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" didn\'t return http return code 200, but ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while trying to request: ");

        $r13 = r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: org.eclipse.jetty.client.HttpExchange exchange>;

        $r14 = virtualinvoke $r13.<org.eclipse.jetty.client.HttpExchange: org.eclipse.jetty.client.Address getAddress()>();

        $r15 = virtualinvoke $r14.<org.eclipse.jetty.client.Address: java.lang.String toString()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.net.ProtocolException: void <init>(java.lang.String)>($r17);

        virtualinvoke r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: void onException(java.lang.Throwable)>($r1);

     label3:
        return;
    }

    protected void onConnectionFailed(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        org.eclipse.jetty.client.HttpDestination$ConnectExchange r0;
        org.eclipse.jetty.client.HttpDestination $r2;

        r0 := @this: org.eclipse.jetty.client.HttpDestination$ConnectExchange;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: org.eclipse.jetty.client.HttpDestination this$0>;

        virtualinvoke $r2.<org.eclipse.jetty.client.HttpDestination: void onConnectionFailed(java.lang.Throwable)>(r1);

        return;
    }

    protected void onException(java.lang.Throwable)
    {
        java.lang.Throwable r7;
        org.eclipse.jetty.client.HttpDestination$ConnectExchange r0;
        java.util.List $r2;
        org.eclipse.jetty.client.HttpEventListener $r6;
        org.eclipse.jetty.client.HttpDestination $r1;
        org.eclipse.jetty.client.HttpExchange $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination$ConnectExchange;

        r7 := @parameter0: java.lang.Throwable;

        $r1 = r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: org.eclipse.jetty.client.HttpDestination this$0>;

        $r2 = staticinvoke <org.eclipse.jetty.client.HttpDestination: java.util.List access$000(org.eclipse.jetty.client.HttpDestination)>($r1);

        $r3 = r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: org.eclipse.jetty.client.HttpExchange exchange>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r3);

        $r4 = r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: org.eclipse.jetty.client.HttpExchange exchange>;

        $z0 = virtualinvoke $r4.<org.eclipse.jetty.client.HttpExchange: boolean setStatus(int)>(9);

        if $z0 == 0 goto label1;

        $r5 = r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: org.eclipse.jetty.client.HttpExchange exchange>;

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.client.HttpExchange: org.eclipse.jetty.client.HttpEventListener getEventListener()>();

        interfaceinvoke $r6.<org.eclipse.jetty.client.HttpEventListener: void onException(java.lang.Throwable)>(r7);

     label1:
        return;
    }

    protected void onExpire()
    {
        org.eclipse.jetty.client.HttpDestination$ConnectExchange r0;
        java.util.List $r2;
        org.eclipse.jetty.client.HttpEventListener $r6;
        org.eclipse.jetty.client.HttpDestination $r1;
        org.eclipse.jetty.client.HttpExchange $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.client.HttpDestination$ConnectExchange;

        $r1 = r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: org.eclipse.jetty.client.HttpDestination this$0>;

        $r2 = staticinvoke <org.eclipse.jetty.client.HttpDestination: java.util.List access$000(org.eclipse.jetty.client.HttpDestination)>($r1);

        $r3 = r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: org.eclipse.jetty.client.HttpExchange exchange>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r3);

        $r4 = r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: org.eclipse.jetty.client.HttpExchange exchange>;

        $z0 = virtualinvoke $r4.<org.eclipse.jetty.client.HttpExchange: boolean setStatus(int)>(8);

        if $z0 == 0 goto label1;

        $r5 = r0.<org.eclipse.jetty.client.HttpDestination$ConnectExchange: org.eclipse.jetty.client.HttpExchange exchange>;

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.client.HttpExchange: org.eclipse.jetty.client.HttpEventListener getEventListener()>();

        interfaceinvoke $r6.<org.eclipse.jetty.client.HttpEventListener: void onExpire()>();

     label1:
        return;
    }
}
