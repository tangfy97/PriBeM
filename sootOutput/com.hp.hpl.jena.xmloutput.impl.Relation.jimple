class com.hp.hpl.jena.xmloutput.impl.Relation extends java.lang.Object
{
    private final java.util.Map rows;
    private final java.util.Map cols;
    private final java.util.Set index;

    public void <init>()
    {
        java.util.HashSet $r3;
        com.hp.hpl.jena.xmloutput.impl.Relation r0;
        java.util.HashMap $r1, $r2;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Relation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Map rows> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Map cols> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Set index> = $r3;

        return;
    }

    public synchronized void set(java.lang.Object, java.lang.Object)
    {
        com.hp.hpl.jena.xmloutput.impl.Relation r0;
        java.util.Map $r5, $r6;
        java.util.Set $r2, $r4;
        java.lang.Object r1, r3;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Relation;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r2 = r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Set index>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Set index>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r3);

        $r5 = r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Map rows>;

        staticinvoke <com.hp.hpl.jena.xmloutput.impl.Relation: void innerAdd(java.util.Map,java.lang.Object,java.lang.Object)>($r5, r1, r3);

        $r6 = r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Map cols>;

        staticinvoke <com.hp.hpl.jena.xmloutput.impl.Relation: void innerAdd(java.util.Map,java.lang.Object,java.lang.Object)>($r6, r3, r1);

        return;
    }

    public synchronized void set11(java.lang.Object, java.lang.Object)
    {
        com.hp.hpl.jena.xmloutput.impl.Relation r0;
        java.util.Set $r2, $r4;
        java.lang.Object r1, r3;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Relation;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Set forward(java.lang.Object)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Relation: void clearX(java.lang.Object,java.util.Set)>(r1, $r2);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Set backward(java.lang.Object)>(r3);

        specialinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Relation: void clearX(java.util.Set,java.lang.Object)>($r4, r3);

        virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Relation: void set(java.lang.Object,java.lang.Object)>(r1, r3);

        return;
    }

    public synchronized void set1N(java.lang.Object, java.lang.Object)
    {
        com.hp.hpl.jena.xmloutput.impl.Relation r0;
        java.util.Set $r2;
        java.lang.Object r1, r3;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Relation;

        r3 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Set backward(java.lang.Object)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Relation: void clearX(java.util.Set,java.lang.Object)>($r2, r1);

        virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Relation: void set(java.lang.Object,java.lang.Object)>(r3, r1);

        return;
    }

    public synchronized void setN1(java.lang.Object, java.lang.Object)
    {
        com.hp.hpl.jena.xmloutput.impl.Relation r0;
        java.util.Set $r2;
        java.lang.Object r1, r3;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Relation;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Set forward(java.lang.Object)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Relation: void clearX(java.lang.Object,java.util.Set)>(r1, $r2);

        virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Relation: void set(java.lang.Object,java.lang.Object)>(r1, r3);

        return;
    }

    public synchronized void setNN(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2;
        com.hp.hpl.jena.xmloutput.impl.Relation r0;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Relation;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Relation: void set(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public synchronized void clear(java.lang.Object, java.lang.Object)
    {
        com.hp.hpl.jena.xmloutput.impl.Relation r0;
        java.util.Map $r3, $r4;
        java.lang.Object r1, r2;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Relation;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Map rows>;

        staticinvoke <com.hp.hpl.jena.xmloutput.impl.Relation: void innerClear(java.util.Map,java.lang.Object,java.lang.Object)>($r3, r1, r2);

        $r4 = r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Map cols>;

        staticinvoke <com.hp.hpl.jena.xmloutput.impl.Relation: void innerClear(java.util.Map,java.lang.Object,java.lang.Object)>($r4, r2, r1);

        return;
    }

    private void clearX(java.util.Set, java.lang.Object)
    {
        java.util.Iterator $r1;
        com.hp.hpl.jena.xmloutput.impl.Relation r2;
        java.util.Set r0;
        java.lang.Object $r3, r4;
        boolean $z0;

        r2 := @this: com.hp.hpl.jena.xmloutput.impl.Relation;

        r0 := @parameter0: java.util.Set;

        r4 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r2.<com.hp.hpl.jena.xmloutput.impl.Relation: void clear(java.lang.Object,java.lang.Object)>($r3, r4);

        goto label2;

     label3:
        return;
    }

    private void clearX(java.lang.Object, java.util.Set)
    {
        java.util.Iterator $r1;
        com.hp.hpl.jena.xmloutput.impl.Relation r2;
        java.util.Set r0;
        java.lang.Object r3, $r4;
        boolean $z0;

        r2 := @this: com.hp.hpl.jena.xmloutput.impl.Relation;

        r3 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.util.Set;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r2.<com.hp.hpl.jena.xmloutput.impl.Relation: void clear(java.lang.Object,java.lang.Object)>(r3, $r4);

        goto label2;

     label3:
        return;
    }

    private static void innerAdd(java.util.Map, java.lang.Object, java.lang.Object)
    {
        java.util.HashSet $r4;
        java.util.Map r0;
        java.util.Set r5;
        java.lang.Object r1, $r2, r3;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (java.util.Set) $r2;

        if r5 != null goto label1;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r5 = $r4;

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

     label1:
        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r3);

        return;
    }

    private static void innerClear(java.util.Map, java.lang.Object, java.lang.Object)
    {
        java.util.Map r0;
        java.util.Set r3;
        java.lang.Object r1, $r2, r4;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.Set) $r2;

        if r3 == null goto label1;

        interfaceinvoke r3.<java.util.Set: boolean remove(java.lang.Object)>(r4);

     label1:
        return;
    }

    public boolean get(java.lang.Object, java.lang.Object)
    {
        java.util.Set r4;
        com.hp.hpl.jena.xmloutput.impl.Relation r0;
        java.util.Map $r2;
        java.lang.Object r1, $r3, r5;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Relation;

        r1 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.Object;

        $r2 = r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Map rows>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Set) $r3;

        if r4 == null goto label1;

        $z0 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r5);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public synchronized void transitiveClosure()
    {
        com.hp.hpl.jena.xmloutput.impl.Relation r0;
        java.util.Map $r4, $r7;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r2, $r10, $r12;
        java.util.Set $r1, r6, r9;
        java.lang.Object $r3, $r5, $r8, $r11, $r13;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Relation;

        $r1 = r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Set index>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Map cols>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r6 = (java.util.Set) $r5;

        $r7 = r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Map rows>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r9 = (java.util.Set) $r8;

        if r6 == null goto label6;

        if r9 == null goto label6;

        $r10 = interfaceinvoke r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        if $r11 == $r3 goto label5;

        $r12 = interfaceinvoke r9.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        if $r13 == $r3 goto label4;

        virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Relation: void set(java.lang.Object,java.lang.Object)>($r11, $r13);

     label4:
        goto label3;

     label5:
        goto label2;

     label6:
        goto label1;

     label7:
        return;
    }

    public synchronized java.util.Set getDiagonal()
    {
        java.util.HashSet $r0;
        java.util.Iterator $r3;
        com.hp.hpl.jena.xmloutput.impl.Relation r1;
        java.util.Set $r2;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.xmloutput.impl.Relation;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = r1.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Set index>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r1.<com.hp.hpl.jena.xmloutput.impl.Relation: boolean get(java.lang.Object,java.lang.Object)>($r4, $r4);

        if $z1 == 0 goto label2;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r4);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    public synchronized com.hp.hpl.jena.xmloutput.impl.Relation copy()
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        com.hp.hpl.jena.xmloutput.impl.Relation $r0, r1;
        java.lang.Object $r3, $r5, $r6;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.xmloutput.impl.Relation;

        $r0 = new com.hp.hpl.jena.xmloutput.impl.Relation;

        specialinvoke $r0.<com.hp.hpl.jena.xmloutput.impl.Relation: void <init>()>();

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r0.<com.hp.hpl.jena.xmloutput.impl.Relation: void set(java.lang.Object,java.lang.Object)>($r5, $r6);

        goto label1;

     label2:
        return $r0;
    }

    public java.util.Set forward(java.lang.Object)
    {
        com.hp.hpl.jena.xmloutput.impl.Relation r0;
        java.util.Map $r2;
        java.util.Set $r4;
        java.lang.Object r1, $r3;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Relation;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Map rows>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.Set) $r3;

        return $r4;
    }

    public java.util.Set backward(java.lang.Object)
    {
        com.hp.hpl.jena.xmloutput.impl.Relation r0;
        java.util.Map $r2;
        java.util.Set $r4;
        java.lang.Object r1, $r3;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Relation;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Map cols>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.Set) $r3;

        return $r4;
    }

    private static com.hp.hpl.jena.util.iterator.Map1 inner(java.lang.Object)
    {
        java.lang.Object r1;
        com.hp.hpl.jena.xmloutput.impl.Relation$1 $r0;

        r1 := @parameter0: java.lang.Object;

        $r0 = new com.hp.hpl.jena.xmloutput.impl.Relation$1;

        specialinvoke $r0.<com.hp.hpl.jena.xmloutput.impl.Relation$1: void <init>(java.lang.Object)>(r1);

        return $r0;
    }

    private static java.util.Iterator pairEntry(java.util.Map$Entry)
    {
        java.util.Map$Entry r0;
        com.hp.hpl.jena.util.iterator.Map1Iterator $r4;
        java.util.Iterator $r6;
        java.util.Set r3;
        java.lang.Object $r1, $r2;
        com.hp.hpl.jena.util.iterator.Map1 $r5;

        r0 := @parameter0: java.util.Map$Entry;

        $r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r2 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();

        r3 = (java.util.Set) $r2;

        $r4 = new com.hp.hpl.jena.util.iterator.Map1Iterator;

        $r5 = staticinvoke <com.hp.hpl.jena.xmloutput.impl.Relation: com.hp.hpl.jena.util.iterator.Map1 inner(java.lang.Object)>($r1);

        $r6 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

        specialinvoke $r4.<com.hp.hpl.jena.util.iterator.Map1Iterator: void <init>(com.hp.hpl.jena.util.iterator.Map1,java.util.Iterator)>($r5, $r6);

        return $r4;
    }

    public java.util.Iterator iterator()
    {
        com.hp.hpl.jena.util.iterator.Map1Iterator $r2;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r6;
        java.util.Iterator $r5;
        com.hp.hpl.jena.xmloutput.impl.Relation r1;
        java.util.Map $r3;
        java.util.Set $r4;
        com.hp.hpl.jena.xmloutput.impl.Relation$2 $r0;

        r1 := @this: com.hp.hpl.jena.xmloutput.impl.Relation;

        $r0 = new com.hp.hpl.jena.xmloutput.impl.Relation$2;

        specialinvoke $r0.<com.hp.hpl.jena.xmloutput.impl.Relation$2: void <init>(com.hp.hpl.jena.xmloutput.impl.Relation)>(r1);

        $r2 = new com.hp.hpl.jena.util.iterator.Map1Iterator;

        $r3 = r1.<com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Map rows>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        specialinvoke $r2.<com.hp.hpl.jena.util.iterator.Map1Iterator: void <init>(com.hp.hpl.jena.util.iterator.Map1,java.util.Iterator)>($r0, $r5);

        $r6 = staticinvoke <com.hp.hpl.jena.util.iterator.WrappedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)>($r2);

        return $r6;
    }

    static java.util.Iterator access$000(java.util.Map$Entry)
    {
        java.util.Map$Entry r0;
        java.util.Iterator $r1;

        r0 := @parameter0: java.util.Map$Entry;

        $r1 = staticinvoke <com.hp.hpl.jena.xmloutput.impl.Relation: java.util.Iterator pairEntry(java.util.Map$Entry)>(r0);

        return $r1;
    }
}
