class ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset extends java.lang.Object implements ucar.nc2.ft.fmrc.TimeInventory
{
    double offset;
    final ucar.nc2.ft.fmrc.FmrcInvLite this$0;

    void <init>(ucar.nc2.ft.fmrc.FmrcInvLite, double) throws java.io.FileNotFoundException
    {
        double[] $r2;
        ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset r0;
        java.io.FileNotFoundException $r3;
        ucar.nc2.ft.fmrc.FmrcInvLite r1;
        int $i0, i1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        double d0, $d1;
        boolean $z0, z1;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset;

        r1 := @parameter0: ucar.nc2.ft.fmrc.FmrcInvLite;

        d0 := @parameter1: double;

        r0.<ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset: ucar.nc2.ft.fmrc.FmrcInvLite this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset: double offset> = d0;

        z1 = 0;

        $r2 = virtualinvoke r1.<ucar.nc2.ft.fmrc.FmrcInvLite: double[] getForecastOffsets()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r2;

        if i1 >= $i0 goto label3;

        $d1 = $r2[i1];

        $z0 = staticinvoke <ucar.nc2.util.Misc: boolean closeEnough(double,double)>($d1, d0);

        if $z0 == 0 goto label2;

        z1 = 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if z1 != 0 goto label4;

        $r3 = new java.io.FileNotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No constant offset dataset for = ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label4:
        return;
    }

    public java.lang.String getName()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4;
        ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset r2;
        java.lang.String $r5;
        double $d0;

        r2 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constant Offset ");

        $d0 = r2.<ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset: double offset>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hours");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public int getTimeLength(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset)
    {
        ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset r4;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r0;
        java.util.List r8;
        java.util.Map $r2;
        int $i0;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.Object $r7;
        java.lang.String $r6;
        double $d0, $d1;

        r4 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset;

        $r2 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.Map timeCoordMap>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset");

        $d0 = r4.<ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset: double offset>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r8 = (java.util.List) $r7;

        if r8 != null goto label1;

        $d1 = r4.<ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset: double offset>;

        r8 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.List access$500(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset,double)>(r0, $d1);

     label1:
        $i0 = interfaceinvoke r8.<java.util.List: int size()>();

        return $i0;
    }

    public ucar.nc2.ft.fmrc.FmrcInvLite$ValueB getTimeCoords(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset)
    {
        ucar.nc2.ft.fmrc.FmrcInvLite$ValueB $r8;
        ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset r4;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r0;
        java.util.List r9;
        java.util.Map $r2;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.Object $r7;
        java.lang.String $r6;
        double $d0, $d1;

        r4 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset;

        $r2 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.Map timeCoordMap>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset");

        $d0 = r4.<ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset: double offset>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r9 = (java.util.List) $r7;

        if r9 != null goto label1;

        $d1 = r4.<ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset: double offset>;

        r9 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.List access$500(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset,double)>(r0, $d1);

     label1:
        $r8 = new ucar.nc2.ft.fmrc.FmrcInvLite$ValueB;

        specialinvoke $r8.<ucar.nc2.ft.fmrc.FmrcInvLite$ValueB: void <init>(java.util.List)>(r9);

        return $r8;
    }

    public double[] getRunTimeCoords(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset)
    {
        ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv r9;
        double[] $r10;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r0;
        java.util.Map $r2;
        int $i0, $i1, i2, $i3;
        java.lang.String $r6;
        double $d0, $d1, $d2;
        ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset r4;
        java.util.List r11;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.Object $r7, $r8;

        r4 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset;

        $r2 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.Map timeCoordMap>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset");

        $d0 = r4.<ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset: double offset>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r11 = (java.util.List) $r7;

        if r11 != null goto label1;

        $d2 = r4.<ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset: double offset>;

        r11 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.List access$500(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset,double)>(r0, $d2);

     label1:
        $i0 = interfaceinvoke r11.<java.util.List: int size()>();

        $r10 = newarray (double)[$i0];

        i2 = 0;

     label2:
        $i3 = interfaceinvoke r11.<java.util.List: int size()>();

        if i2 >= $i3 goto label3;

        $r8 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(i2);

        r9 = (ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv) $r8;

        $i1 = r9.<ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv: int runIdx>;

        $d1 = virtualinvoke r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double getTimeCoord(int,int)>($i1, 0);

        $r10[i2] = $d1;

        i2 = i2 + 1;

        goto label2;

     label3:
        return $r10;
    }

    public double[] getOffsetCoords(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset)
    {
        ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset r0;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r1;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset;

        r1 := @parameter0: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset;

        return null;
    }

    public ucar.nc2.ft.fmrc.TimeInventory$Instance getInstance(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid, int)
    {
        ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv $r11;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid r0;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset $r1;
        java.util.Map $r3;
        int i0, $i1, $i2;
        java.lang.String $r7;
        double $d0, $d1;
        ucar.nc2.ft.fmrc.TimeInventory$Instance $r10;
        ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset r5;
        java.util.List r12;
        java.lang.StringBuilder $r2, $r4, $r6;
        java.lang.Object $r8, $r9;

        r5 := @this: ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid: ucar.nc2.ft.fmrc.FmrcInvLite$Gridset getGridset()>();

        $r3 = $r1.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.Map timeCoordMap>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset");

        $d0 = r5.<ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset: double offset>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r12 = (java.util.List) $r8;

        if r12 != null goto label1;

        $d1 = r5.<ucar.nc2.ft.fmrc.FmrcInvLite$ConstantOffsetDataset: double offset>;

        r12 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.List access$500(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset,double)>($r1, $d1);

     label1:
        $r9 = interfaceinvoke r12.<java.util.List: java.lang.Object get(int)>(i0);

        $r11 = (ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv) $r9;

        $i2 = $r11.<ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv: int runIdx>;

        $i1 = $r11.<ucar.nc2.ft.fmrc.FmrcInvLite$TimeInv: int timeIdx>;

        $r10 = virtualinvoke r0.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid: ucar.nc2.ft.fmrc.TimeInventory$Instance getInstance(int,int)>($i2, $i1);

        return $r10;
    }
}
