public abstract class org.apache.xmlbeans.impl.jam.JamServiceFactory extends java.lang.Object
{
    private static final org.apache.xmlbeans.impl.jam.JamServiceFactory DEFAULT;

    public static org.apache.xmlbeans.impl.jam.JamServiceFactory getInstance()
    {
        org.apache.xmlbeans.impl.jam.JamServiceFactory $r0;

        $r0 = <org.apache.xmlbeans.impl.jam.JamServiceFactory: org.apache.xmlbeans.impl.jam.JamServiceFactory DEFAULT>;

        return $r0;
    }

    protected void <init>()
    {
        org.apache.xmlbeans.impl.jam.JamServiceFactory r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.JamServiceFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract org.apache.xmlbeans.impl.jam.JamServiceParams createServiceParams();

    public abstract org.apache.xmlbeans.impl.jam.JamService createService(org.apache.xmlbeans.impl.jam.JamServiceParams) throws java.io.IOException;

    public abstract org.apache.xmlbeans.impl.jam.JamClassLoader createSystemJamClassLoader();

    public abstract org.apache.xmlbeans.impl.jam.JamClassLoader createJamClassLoader(java.lang.ClassLoader);

    public static void main(java.lang.String[])
    {
        org.apache.xmlbeans.impl.jam.JamClassIterator $r8;
        java.lang.String[] r2;
        org.apache.xmlbeans.impl.jam.JamService $r4;
        int $i0, i1;
        java.lang.String $r14;
        boolean $z0;
        java.io.PrintWriter $r6;
        java.io.PrintStream $r7, $r9, $r10;
        org.apache.xmlbeans.impl.jam.JClass $r11;
        org.apache.xmlbeans.impl.jam.JamServiceFactory $r0, $r3;
        org.apache.xmlbeans.impl.jam.internal.JamPrinter $r5;
        java.io.File $r13;
        java.lang.Exception $r15;
        java.io.File[] $r12;
        org.apache.xmlbeans.impl.jam.JamServiceParams $r1;

        r2 := @parameter0: java.lang.String[];

     label1:
        $r0 = staticinvoke <org.apache.xmlbeans.impl.jam.JamServiceFactory: org.apache.xmlbeans.impl.jam.JamServiceFactory getInstance()>();

        $r1 = virtualinvoke $r0.<org.apache.xmlbeans.impl.jam.JamServiceFactory: org.apache.xmlbeans.impl.jam.JamServiceParams createServiceParams()>();

        i1 = 0;

     label2:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label3;

        $r12 = newarray (java.io.File)[1];

        $r13 = new java.io.File;

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>(".");

        $r12[0] = $r13;

        $r14 = r2[i1];

        interfaceinvoke $r1.<org.apache.xmlbeans.impl.jam.JamServiceParams: void includeSourcePattern(java.io.File[],java.lang.String)>($r12, $r14);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r3 = staticinvoke <org.apache.xmlbeans.impl.jam.JamServiceFactory: org.apache.xmlbeans.impl.jam.JamServiceFactory getInstance()>();

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.jam.JamServiceFactory: org.apache.xmlbeans.impl.jam.JamService createService(org.apache.xmlbeans.impl.jam.JamServiceParams)>($r1);

        $r5 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.JamPrinter: org.apache.xmlbeans.impl.jam.internal.JamPrinter newInstance()>();

        $r6 = new java.io.PrintWriter;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r6.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r7);

        $r8 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.jam.JamService: org.apache.xmlbeans.impl.jam.JamClassIterator getClasses()>();

     label4:
        $z0 = virtualinvoke $r8.<org.apache.xmlbeans.impl.jam.JamClassIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        virtualinvoke $r6.<java.io.PrintWriter: void println(java.lang.String)>("-------- ");

        $r11 = virtualinvoke $r8.<org.apache.xmlbeans.impl.jam.JamClassIterator: org.apache.xmlbeans.impl.jam.JClass nextClass()>();

        virtualinvoke $r5.<org.apache.xmlbeans.impl.jam.internal.JamPrinter: void print(org.apache.xmlbeans.impl.jam.JElement,java.io.PrintWriter)>($r11, $r6);

        goto label4;

     label5:
        virtualinvoke $r6.<java.io.PrintWriter: void flush()>();

     label6:
        goto label8;

     label7:
        $r15 := @caughtexception;

        virtualinvoke $r15.<java.lang.Exception: void printStackTrace()>();

     label8:
        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void flush()>();

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void flush()>();

        return;

        catch java.lang.Exception from label1 to label6 with label7;
    }

    static void <clinit>()
    {
        org.apache.xmlbeans.impl.jam.provider.JamServiceFactoryImpl $r0;

        $r0 = new org.apache.xmlbeans.impl.jam.provider.JamServiceFactoryImpl;

        specialinvoke $r0.<org.apache.xmlbeans.impl.jam.provider.JamServiceFactoryImpl: void <init>()>();

        <org.apache.xmlbeans.impl.jam.JamServiceFactory: org.apache.xmlbeans.impl.jam.JamServiceFactory DEFAULT> = $r0;

        return;
    }
}
