public class org.apache.xmlbeans.impl.common.QNameHelper extends java.lang.Object
{
    private static final java.util.Map WELL_KNOWN_PREFIXES;
    private static final char[] hexdigits;
    public static final int MAX_NAME_LENGTH;
    public static final java.lang.String URI_SHA1_PREFIX;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$common$QNameHelper;

    public void <init>()
    {
        org.apache.xmlbeans.impl.common.QNameHelper r0;

        r0 := @this: org.apache.xmlbeans.impl.common.QNameHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.xmlbeans.xml.stream.XMLName getXMLName(javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r0;
        java.lang.String $r1, $r2;
        org.apache.xmlbeans.xml.stream.XMLName $r3;

        r0 := @parameter0: javax.xml.namespace.QName;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r2 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r3 = staticinvoke <org.apache.xmlbeans.impl.common.XMLNameHelper: org.apache.xmlbeans.xml.stream.XMLName forLNS(java.lang.String,java.lang.String)>($r1, $r2);

        return $r3;
    }

    public static javax.xml.namespace.QName forLNS(java.lang.String, java.lang.String)
    {
        javax.xml.namespace.QName $r0;
        java.lang.String r1, r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r2 != null goto label1;

        r2 = "";

     label1:
        $r0 = new javax.xml.namespace.QName;

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>(r2, r1);

        return $r0;
    }

    public static javax.xml.namespace.QName forLN(java.lang.String)
    {
        javax.xml.namespace.QName $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new javax.xml.namespace.QName;

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", r1);

        return $r0;
    }

    public static javax.xml.namespace.QName forPretty(java.lang.String, int)
    {
        int i0, $i1, $i2;
        java.lang.String r0, $r2, $r3, $r5;
        javax.xml.namespace.QName $r1, $r4;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(64, i0);

        if $i1 >= 0 goto label1;

        $r4 = new javax.xml.namespace.QName;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0);

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", $r5);

        return $r4;

     label1:
        $r1 = new javax.xml.namespace.QName;

        $i2 = $i1 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, $i1);

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        return $r1;
    }

    public static java.lang.String pretty(javax.xml.namespace.QName)
    {
        java.lang.StringBuffer $r4, $r6, $r7, $r9;
        int $i0;
        javax.xml.namespace.QName r0;
        java.lang.String $r1, $r2, $r3, $r5, $r8, $r10;

        r0 := @parameter0: javax.xml.namespace.QName;

        if r0 != null goto label1;

        return "null";

     label1:
        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        if $r1 == null goto label2;

        $r3 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        $r2 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        return $r2;

     label3:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

        $r8 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    private static boolean isSafe(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 < 97 goto label1;

        if i0 > 122 goto label1;

        return 1;

     label1:
        if i0 < 65 goto label2;

        if i0 > 90 goto label2;

        return 1;

     label2:
        if i0 < 48 goto label3;

        if i0 > 57 goto label3;

        return 1;

     label3:
        return 0;
    }

    public static java.lang.String hexsafe(java.lang.String)
    {
        byte[] $r3, $r11, r18;
        java.lang.IllegalStateException $r22;
        byte $b2, $b6, $b7, $b13, $b17, $b18;
        boolean $z0, $z1;
        java.security.NoSuchAlgorithmException $r14;
        java.io.UnsupportedEncodingException $r16, $r17;
        java.security.MessageDigest $r2;
        java.lang.AssertionError $r20;
        java.lang.StringBuffer $r19, $r21;
        int $i0, $i1, $i3, $i4, $i9, $i11, $i12, $i14, $i15, i20, i21, i22, $i23, $i24, $i25, $i26, $i27, $i28;
        java.lang.String r1, $r5, $r9, $r10;
        char $c5, $c8, $c10, $c16, $c19;
        char[] $r6, $r7, $r12, $r13;

        r1 := @parameter0: java.lang.String;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        i20 = 0;

     label01:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i20 >= $i0 goto label07;

        $c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i20);

        $i24 = (int) $c10;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: boolean isSafe(int)>($i24);

        if $z1 == 0 goto label02;

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c10);

        goto label06;

     label02:
        $i11 = i20 + 1;

        $r10 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i20, $i11);

        $r11 = virtualinvoke $r10.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        i21 = 0;

     label03:
        $i12 = lengthof $r11;

        if i21 >= $i12 goto label04;

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(95);

        $r12 = <org.apache.xmlbeans.impl.common.QNameHelper: char[] hexdigits>;

        $b13 = $r11[i21];

        $i25 = (int) $b13;

        $i14 = $i25 >> 4;

        $i15 = $i14 & 15;

        $c16 = $r12[$i15];

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c16);

        $r13 = <org.apache.xmlbeans.impl.common.QNameHelper: char[] hexdigits>;

        $b17 = $r11[i21];

        $b18 = $b17 & 15;

        $i26 = (int) $b18;

        $c19 = $r13[$i26];

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c19);

        i21 = i21 + 1;

        goto label03;

     label04:
        goto label06;

     label05:
        $r17 := @caughtexception;

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_BAD_UTF8_CHAR");

     label06:
        i20 = i20 + 1;

        goto label01;

     label07:
        $i1 = virtualinvoke $r19.<java.lang.StringBuffer: int length()>();

        if $i1 > 64 goto label08;

        $r9 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;

     label08:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA");

     label09:
        r18 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label10:
        goto label12;

     label11:
        $r16 := @caughtexception;

        r18 = newarray (byte)[0];

     label12:
        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>(r18);

        $z0 = <org.apache.xmlbeans.impl.common.QNameHelper: boolean $assertionsDisabled>;

        if $z0 != 0 goto label13;

        $i9 = lengthof $r3;

        if $i9 == 20 goto label13;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label13:
        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>(java.lang.String)>("URI_SHA_1_");

        i22 = 0;

     label14:
        $i23 = lengthof $r3;

        if i22 >= $i23 goto label15;

        $r6 = <org.apache.xmlbeans.impl.common.QNameHelper: char[] hexdigits>;

        $b2 = $r3[i22];

        $i27 = (int) $b2;

        $i3 = $i27 >> 4;

        $i4 = $i3 & 15;

        $c5 = $r6[$i4];

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        $r7 = <org.apache.xmlbeans.impl.common.QNameHelper: char[] hexdigits>;

        $b6 = $r3[i22];

        $b7 = $b6 & 15;

        $i28 = (int) $b7;

        $c8 = $r7[$i28];

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c8);

        i22 = i22 + 1;

        goto label14;

     label15:
        $r5 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

     label16:
        return $r5;

     label17:
        $r14 := @caughtexception;

        $r22 = new java.lang.IllegalStateException;

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Using in a JDK without an SHA implementation");

        throw $r22;

        catch java.io.UnsupportedEncodingException from label02 to label04 with label05;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label11;
        catch java.security.NoSuchAlgorithmException from label08 to label16 with label17;
    }

    public static java.lang.String hexsafedir(javax.xml.namespace.QName)
    {
        java.lang.StringBuffer $r2, $r3, $r6, $r9, $r12, $r13, $r16;
        int $i0;
        java.lang.String $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r14, $r15, $r17;
        javax.xml.namespace.QName r0;

        r0 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        if $r1 == null goto label1;

        $r8 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_nons/");

        $r4 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r5 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String hexsafe(java.lang.String)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;

     label2:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r11 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String hexsafe(java.lang.String)>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r14 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r15 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String hexsafe(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r17;
    }

    private static java.util.Map buildWKP()
    {
        java.util.HashMap $r0;
        java.util.Map $r1;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.w3.org/XML/1998/namespace", "xml");

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.w3.org/2001/XMLSchema", "xs");

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.w3.org/2001/XMLSchema-instance", "xsi");

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.xmlsoap.org/wsdl/", "wsdl");

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.xmlsoap.org/soap/encoding/", "soapenc");

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.xmlsoap.org/soap/envelope/", "soapenv");

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r0);

        return $r1;
    }

    public static java.lang.String readable(org.apache.xmlbeans.SchemaType)
    {
        java.lang.String $r2;
        org.apache.xmlbeans.SchemaType r0;
        java.util.Map $r1;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        $r1 = <org.apache.xmlbeans.impl.common.QNameHelper: java.util.Map WELL_KNOWN_PREFIXES>;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType,java.util.Map)>(r0, $r1);

        return $r2;
    }

    public static java.lang.String readable(org.apache.xmlbeans.SchemaType, java.util.Map)
    {
        java.util.Map r8;
        org.apache.xmlbeans.SchemaType r0, $r2, $r3, $r5;
        javax.xml.namespace.QName $r1, $r31, $r40, $r49, $r55, $r61, $r67, $r71;
        org.apache.xmlbeans.SchemaField $r4;
        java.lang.StringBuffer $r6, $r7, $r10, $r12, $r13, $r14, $r15, $r17, $r19, $r20, $r22, $r24, $r25, $r27, $r29, $r30, $r33, $r34, $r36, $r38, $r39, $r42, $r43, $r45, $r47, $r48, $r51, $r53, $r54, $r57, $r59, $r60, $r63, $r65, $r66, $r69;
        java.lang.String $r9, $r11, $r16, $r18, $r21, $r23, $r26, $r28, $r32, $r35, $r37, $r41, $r44, $r46, $r50, $r52, $r56, $r58, $r62, $r64, $r68, $r70, $r72;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, $i2;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        r8 := @parameter1: java.util.Map;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        if $r1 == null goto label01;

        $r71 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r72 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(javax.xml.namespace.QName,java.util.Map)>($r71, r8);

        return $r72;

     label01:
        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isAttributeType()>();

        if $z0 == 0 goto label02;

        $r65 = new java.lang.StringBuffer;

        specialinvoke $r65.<java.lang.StringBuffer: void <init>()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("attribute type ");

        $r67 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getAttributeTypeAttributeName()>();

        $r68 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(javax.xml.namespace.QName,java.util.Map)>($r67, r8);

        $r69 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r68);

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r70;

     label02:
        $z1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isDocumentType()>();

        if $z1 == 0 goto label03;

        $r59 = new java.lang.StringBuffer;

        specialinvoke $r59.<java.lang.StringBuffer: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("document type ");

        $r61 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getDocumentElementName()>();

        $r62 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(javax.xml.namespace.QName,java.util.Map)>($r61, r8);

        $r63 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r64;

     label03:
        $z2 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isNoType()>();

        if $z2 != 0 goto label04;

        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getOuterType()>();

        if $r2 != null goto label05;

     label04:
        return "invalid type";

     label05:
        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getOuterType()>();

        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaField getContainerField()>();

        $z3 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaType: boolean isAttributeType()>();

        if $z3 == 0 goto label06;

        $r53 = new java.lang.StringBuffer;

        specialinvoke $r53.<java.lang.StringBuffer: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("type of attribute ");

        $r55 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaField: javax.xml.namespace.QName getName()>();

        $r56 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(javax.xml.namespace.QName,java.util.Map)>($r55, r8);

        $r57 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r58;

     label06:
        $z4 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaType: boolean isDocumentType()>();

        if $z4 == 0 goto label07;

        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("type of element ");

        $r49 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaField: javax.xml.namespace.QName getName()>();

        $r50 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(javax.xml.namespace.QName,java.util.Map)>($r49, r8);

        $r51 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r52;

     label07:
        if $r4 == null goto label09;

        $z5 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaField: boolean isAttribute()>();

        if $z5 == 0 goto label08;

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("type of ");

        $r40 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaField: javax.xml.namespace.QName getName()>();

        $r41 = virtualinvoke $r40.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r42 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" attribute in ");

        $r44 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType,java.util.Map)>($r3, r8);

        $r45 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r46;

     label08:
        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("type of ");

        $r31 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaField: javax.xml.namespace.QName getName()>();

        $r32 = virtualinvoke $r31.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r33 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" element in ");

        $r35 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType,java.util.Map)>($r3, r8);

        $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r37;

     label09:
        $r5 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getBaseType()>();

        if $r5 != r0 goto label10;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("base type of ");

        $r26 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType,java.util.Map)>($r3, r8);

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r28;

     label10:
        $i0 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i0 != 3 goto label11;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("item type of ");

        $r21 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType,java.util.Map)>($r3, r8);

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r23;

     label11:
        $i1 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i1 != 2 goto label12;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("member type ");

        $i2 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getAnonymousUnionMemberOrdinal()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" of ");

        $r16 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType,java.util.Map)>($r3, r8);

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r18;

     label12:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("inner type in ");

        $r9 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType,java.util.Map)>($r3, r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;
    }

    public static java.lang.String readable(javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r0;
        java.lang.String $r2;
        java.util.Map $r1;

        r0 := @parameter0: javax.xml.namespace.QName;

        $r1 = <org.apache.xmlbeans.impl.common.QNameHelper: java.util.Map WELL_KNOWN_PREFIXES>;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(javax.xml.namespace.QName,java.util.Map)>(r0, $r1);

        return $r2;
    }

    public static java.lang.String readable(javax.xml.namespace.QName, java.util.Map)
    {
        java.lang.StringBuffer $r6, $r8, $r9, $r11, $r13, $r14, $r15, $r17;
        java.util.Map r2;
        int $i0;
        java.lang.String $r1, $r3, r5, $r7, $r10, $r12, $r16, $r18, $r19;
        java.lang.Object $r4;
        javax.xml.namespace.QName r0;

        r0 := @parameter0: javax.xml.namespace.QName;

        r2 := @parameter1: java.util.Map;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r19 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        return $r19;

     label1:
        $r3 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r4 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (java.lang.String) $r4;

        if r5 == null goto label2;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r16 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r18;

     label2:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in namespace ");

        $r10 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;
    }

    public static java.lang.String suggestPrefix(java.lang.String)
    {
        java.util.Map $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.StringBuffer $r7, $r8, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8, $i9, $i10, $i16, $i17, $i18, i19, i20, i21, i22, $i23, $i24, $i25;
        java.lang.String r0, r3, $r4, $r5, $r9;
        char $c5, $c7, $c11, $c12, $c13, $c14, $c15;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.xmlbeans.impl.common.QNameHelper: java.util.Map WELL_KNOWN_PREFIXES>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.String) $r2;

        if r3 == null goto label01;

        return r3;

     label01:
        i19 = virtualinvoke r0.<java.lang.String: int length()>();

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        i20 = $i0;

        if $i0 <= 0 goto label02;

        $i16 = virtualinvoke r0.<java.lang.String: int length()>();

        $i17 = $i16 - 1;

        if $i0 != $i17 goto label02;

        i19 = $i0;

        $i18 = $i0 - 1;

        i20 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int,int)>(47, $i18);

     label02:
        i21 = i20 + 1;

        $z6 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String,int)>("www.", i21);

        if $z6 == 0 goto label03;

        i21 = i21 + 4;

     label03:
        if i21 >= i19 goto label05;

        $c15 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i21);

        $i24 = (int) $c15;

        $z5 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isNCNameStart(int)>($i24);

        if $z5 == 0 goto label04;

        goto label05;

     label04:
        i21 = i21 + 1;

        goto label03;

     label05:
        i22 = i21 + 1;

     label06:
        if i22 >= i19 goto label09;

        $c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i22);

        $i25 = (int) $c13;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isNCName(int)>($i25);

        if $z3 == 0 goto label07;

        $c14 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i22);

        $z4 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c14);

        if $z4 != 0 goto label08;

     label07:
        i19 = i22;

        goto label09;

     label08:
        i22 = i22 + 1;

        goto label06;

     label09:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = i21 + 3;

        if $i1 < $i2 goto label11;

        $z2 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: boolean startsWithXml(java.lang.String,int)>(r0, i21);

        if $z2 == 0 goto label11;

        $i8 = virtualinvoke r0.<java.lang.String: int length()>();

        $i9 = i21 + 4;

        if $i8 < $i9 goto label10;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("x");

        $i10 = i21 + 3;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i10);

        $c12 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c11);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c12);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;

     label10:
        return "ns";

     label11:
        $i3 = i19 - i21;

        if $i3 <= 4 goto label13;

        $i4 = i21 + 2;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: boolean isVowel(char)>($c5);

        if $z0 == 0 goto label12;

        $i6 = i21 + 3;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $z1 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: boolean isVowel(char)>($c7);

        if $z1 != 0 goto label12;

        i19 = i21 + 4;

        goto label13;

     label12:
        i19 = i21 + 3;

     label13:
        $i23 = i19 - i21;

        if $i23 != 0 goto label14;

        return "ns";

     label14:
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i21, i19);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

        return $r5;
    }

    private static boolean startsWithXml(java.lang.String, int)
    {
        int $i0, i1, $i2, $i4, $i6, $i8, $i10, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.String r0;
        char $c3, $c5, $c7, $c9, $c11, $c12;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = i1 + 3;

        if $i0 >= $i2 goto label1;

        return 0;

     label1:
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $i13 = (int) $c3;

        if $i13 == 88 goto label2;

        $c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $i14 = (int) $c12;

        if $i14 == 120 goto label2;

        return 0;

     label2:
        $i4 = i1 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $i15 = (int) $c5;

        if $i15 == 77 goto label3;

        $i10 = i1 + 1;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i10);

        $i16 = (int) $c11;

        if $i16 == 109 goto label3;

        return 0;

     label3:
        $i6 = i1 + 2;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $i17 = (int) $c7;

        if $i17 == 76 goto label4;

        $i8 = i1 + 2;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i8);

        $i18 = (int) $c9;

        if $i18 == 108 goto label4;

        return 0;

     label4:
        return 1;
    }

    private static boolean isVowel(char)
    {
        int $i1;
        char c0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        lookupswitch($i1)
        {
            case 65: goto label1;
            case 69: goto label1;
            case 73: goto label1;
            case 79: goto label1;
            case 85: goto label1;
            case 97: goto label1;
            case 101: goto label1;
            case 105: goto label1;
            case 111: goto label1;
            case 117: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    public static java.lang.String namespace(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.SchemaField $r1, $r2, $r5;
        int $i0;
        javax.xml.namespace.QName $r0, $r3, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        org.apache.xmlbeans.SchemaType r10;

        r10 := @parameter0: org.apache.xmlbeans.SchemaType;

     label1:
        if r10 == null goto label4;

        $r0 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        if $r0 == null goto label2;

        $r8 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r9 = virtualinvoke $r8.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        return $r9;

     label2:
        $r1 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaField getContainerField()>();

        if $r1 == null goto label3;

        $r2 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaField getContainerField()>();

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaField: javax.xml.namespace.QName getName()>();

        $r4 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r5 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaField getContainerField()>();

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.SchemaField: javax.xml.namespace.QName getName()>();

        $r7 = virtualinvoke $r6.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        return $r7;

     label3:
        r10 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getOuterType()>();

        goto label1;

     label4:
        return "";
    }

    public static java.lang.String getLocalPart(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        if $i0 >= 0 goto label1;

        $r1 = r0;

        goto label2;

     label1:
        $i1 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

     label2:
        return $r1;
    }

    public static java.lang.String getPrefixPart(java.lang.String)
    {
        int $i0;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        if $i0 < 0 goto label1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        goto label2;

     label1:
        $r1 = "";

     label2:
        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.Map $r1;
        char[] $r2;
        java.lang.Class $r0, $r3;
        boolean $z0, $z1;

        <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String URI_SHA1_PREFIX> = "URI_SHA_1_";

        <org.apache.xmlbeans.impl.common.QNameHelper: int MAX_NAME_LENGTH> = 64;

        $r0 = <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.Class class$org$apache$xmlbeans$impl$common$QNameHelper>;

        if $r0 != null goto label1;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.common.QNameHelper");

        <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.Class class$org$apache$xmlbeans$impl$common$QNameHelper> = $r3;

        goto label2;

     label1:
        $r3 = <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.Class class$org$apache$xmlbeans$impl$common$QNameHelper>;

     label2:
        $z0 = virtualinvoke $r3.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.common.QNameHelper: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.util.Map buildWKP()>();

        <org.apache.xmlbeans.impl.common.QNameHelper: java.util.Map WELL_KNOWN_PREFIXES> = $r1;

        $r2 = newarray (char)[16];

        $r2[0] = 48;

        $r2[1] = 49;

        $r2[2] = 50;

        $r2[3] = 51;

        $r2[4] = 52;

        $r2[5] = 53;

        $r2[6] = 54;

        $r2[7] = 55;

        $r2[8] = 56;

        $r2[9] = 57;

        $r2[10] = 65;

        $r2[11] = 66;

        $r2[12] = 67;

        $r2[13] = 68;

        $r2[14] = 69;

        $r2[15] = 70;

        <org.apache.xmlbeans.impl.common.QNameHelper: char[] hexdigits> = $r2;

        return;
    }
}
