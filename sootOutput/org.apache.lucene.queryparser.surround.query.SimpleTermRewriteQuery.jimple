class org.apache.lucene.queryparser.surround.query.SimpleTermRewriteQuery extends org.apache.lucene.queryparser.surround.query.RewriteQuery
{

    void <init>(org.apache.lucene.queryparser.surround.query.SimpleTerm, java.lang.String, org.apache.lucene.queryparser.surround.query.BasicQueryFactory)
    {
        org.apache.lucene.queryparser.surround.query.SimpleTerm r1;
        org.apache.lucene.queryparser.surround.query.BasicQueryFactory r3;
        org.apache.lucene.queryparser.surround.query.SimpleTermRewriteQuery r0;
        java.lang.String r2;

        r0 := @this: org.apache.lucene.queryparser.surround.query.SimpleTermRewriteQuery;

        r1 := @parameter0: org.apache.lucene.queryparser.surround.query.SimpleTerm;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.lucene.queryparser.surround.query.BasicQueryFactory;

        specialinvoke r0.<org.apache.lucene.queryparser.surround.query.RewriteQuery: void <init>(org.apache.lucene.queryparser.surround.query.SrndQuery,java.lang.String,org.apache.lucene.queryparser.surround.query.BasicQueryFactory)>(r1, r2, r3);

        return;
    }

    public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.search.Query $r9;
        org.apache.lucene.queryparser.surround.query.SrndQuery $r2;
        org.apache.lucene.queryparser.surround.query.SimpleTerm $r5;
        org.apache.lucene.queryparser.surround.query.SimpleTermRewriteQuery$1 $r4;
        java.util.ArrayList $r0;
        int $i0, $i1;
        org.apache.lucene.queryparser.surround.query.SimpleTermRewriteQuery r1;
        java.lang.Object $r8;
        java.lang.String $r6;
        org.apache.lucene.index.IndexReader r3;
        org.apache.lucene.search.BooleanClause$Occur $r7;

        r1 := @this: org.apache.lucene.queryparser.surround.query.SimpleTermRewriteQuery;

        r3 := @parameter0: org.apache.lucene.index.IndexReader;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.lucene.queryparser.surround.query.SimpleTermRewriteQuery: org.apache.lucene.queryparser.surround.query.SrndQuery srndQuery>;

        $r5 = (org.apache.lucene.queryparser.surround.query.SimpleTerm) $r2;

        $r6 = r1.<org.apache.lucene.queryparser.surround.query.SimpleTermRewriteQuery: java.lang.String fieldName>;

        $r4 = new org.apache.lucene.queryparser.surround.query.SimpleTermRewriteQuery$1;

        specialinvoke $r4.<org.apache.lucene.queryparser.surround.query.SimpleTermRewriteQuery$1: void <init>(org.apache.lucene.queryparser.surround.query.SimpleTermRewriteQuery,java.util.List)>(r1, $r0);

        virtualinvoke $r5.<org.apache.lucene.queryparser.surround.query.SimpleTerm: void visitMatchingTerms(org.apache.lucene.index.IndexReader,java.lang.String,org.apache.lucene.queryparser.surround.query.SimpleTerm$MatchingTermVisitor)>(r3, $r6, $r4);

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r9 = <org.apache.lucene.queryparser.surround.query.SrndQuery: org.apache.lucene.search.Query theEmptyLcnQuery>;

        goto label3;

     label1:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 != 1 goto label2;

        $r8 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (org.apache.lucene.search.Query) $r8;

        goto label3;

     label2:
        $r7 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur SHOULD>;

        $r9 = staticinvoke <org.apache.lucene.queryparser.surround.query.SrndBooleanQuery: org.apache.lucene.search.Query makeBooleanQuery(java.util.List,org.apache.lucene.search.BooleanClause$Occur)>($r0, $r7);

     label3:
        return $r9;
    }
}
