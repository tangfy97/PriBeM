public class com.mycila.inject.internal.cglib.proxy.Mixin$Generator extends com.mycila.inject.internal.cglib.core.AbstractClassGenerator
{
    private static final com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source SOURCE;
    private java.lang.Class[] classes;
    private java.lang.Object[] delegates;
    private int style;
    private int[] route;

    public void <init>()
    {
        com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source $r1;
        com.mycila.inject.internal.cglib.proxy.Mixin$Generator r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.Mixin$Generator;

        $r1 = <com.mycila.inject.internal.cglib.proxy.Mixin$Generator: com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source SOURCE>;

        specialinvoke r0.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator: void <init>(com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source)>($r1);

        r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: int style> = 0;

        return;
    }

    protected java.lang.ClassLoader getDefaultClassLoader()
    {
        com.mycila.inject.internal.cglib.proxy.Mixin$Generator r0;
        java.lang.Class[] $r1;
        java.lang.Class $r2;
        java.lang.ClassLoader $r3;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.Mixin$Generator;

        $r1 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes>;

        $r2 = $r1[0];

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        return $r3;
    }

    public void setStyle(int)
    {
        com.mycila.inject.internal.cglib.proxy.Mixin$Generator r0;
        java.lang.StringBuffer $r2, $r3, $r4;
        int i0;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.Mixin$Generator;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label1;
            default: goto label2;
        };

     label1:
        r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: int style> = i0;

        goto label3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown mixin style: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label3:
        return;
    }

    public void setClasses(java.lang.Class[])
    {
        com.mycila.inject.internal.cglib.proxy.Mixin$Generator r0;
        java.lang.Class[] r1;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.Mixin$Generator;

        r1 := @parameter0: java.lang.Class[];

        r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes> = r1;

        return;
    }

    public void setDelegates(java.lang.Object[])
    {
        com.mycila.inject.internal.cglib.proxy.Mixin$Generator r0;
        java.lang.Object[] r1;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.Mixin$Generator;

        r1 := @parameter0: java.lang.Object[];

        r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Object[] delegates> = r1;

        return;
    }

    public com.mycila.inject.internal.cglib.proxy.Mixin create()
    {
        java.lang.IllegalStateException $r11, $r24, $r33;
        int[] $r31, $r41;
        boolean $z0;
        java.lang.Object[] $r3, $r4, $r25, $r28, $r32;
        java.lang.String[] $r40;
        com.mycila.inject.internal.cglib.proxy.Mixin$Generator r0;
        java.lang.StringBuffer $r12, $r13, $r16, $r17, $r19, $r20, $r21, $r22;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6;
        java.lang.String $r23, $r37;
        com.mycila.inject.internal.cglib.proxy.Mixin$MixinKey $r38;
        com.mycila.inject.internal.cglib.proxy.Mixin $r44;
        java.lang.Class[] $r1, $r2, $r5, $r6, $r7, $r8, $r14, $r26, $r27, $r30, $r34, $r35, $r39;
        java.lang.Class $r9, $r10, $r15, $r18, $r36;
        java.lang.Object $r42, $r43;
        com.mycila.inject.internal.cglib.proxy.Mixin$Route $r29;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.Mixin$Generator;

        $r1 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes>;

        if $r1 != null goto label1;

        $r32 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Object[] delegates>;

        if $r32 != null goto label1;

        $r33 = new java.lang.IllegalStateException;

        specialinvoke $r33.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Either classes or delegates must be set");

        throw $r33;

     label1:
        $i0 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: int style>;

        tableswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label3;
            default: goto label8;
        };

     label2:
        $r27 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes>;

        if $r27 != null goto label8;

        $r28 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Object[] delegates>;

        $r29 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Mixin: com.mycila.inject.internal.cglib.proxy.Mixin$Route access$000(java.lang.Object[])>($r28);

        $r30 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Mixin$Route: java.lang.Class[] access$100(com.mycila.inject.internal.cglib.proxy.Mixin$Route)>($r29);

        r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes> = $r30;

        $r31 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Mixin$Route: int[] access$200(com.mycila.inject.internal.cglib.proxy.Mixin$Route)>($r29);

        r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: int[] route> = $r31;

        goto label8;

     label3:
        $r2 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes>;

        if $r2 != null goto label4;

        $r25 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Object[] delegates>;

        $r26 = staticinvoke <com.mycila.inject.internal.cglib.core.ReflectUtils: java.lang.Class[] getClasses(java.lang.Object[])>($r25);

        r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes> = $r26;

        goto label8;

     label4:
        $r3 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Object[] delegates>;

        if $r3 == null goto label8;

        $r4 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Object[] delegates>;

        $r5 = staticinvoke <com.mycila.inject.internal.cglib.core.ReflectUtils: java.lang.Class[] getClasses(java.lang.Object[])>($r4);

        $r6 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes>;

        $i2 = lengthof $r6;

        $i1 = lengthof $r5;

        if $i2 == $i1 goto label5;

        $r24 = new java.lang.IllegalStateException;

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Specified classes are incompatible with delegates");

        throw $r24;

     label5:
        i4 = 0;

     label6:
        $r7 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes>;

        $i3 = lengthof $r7;

        if i4 >= $i3 goto label8;

        $r8 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes>;

        $r10 = $r8[i4];

        $r9 = $r5[i4];

        $z0 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r9);

        if $z0 != 0 goto label7;

        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Specified class ");

        $r14 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes>;

        $r15 = $r14[i4];

        $r16 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is incompatible with delegate class ");

        $r18 = $r5[i4];

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (index ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i4);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r23);

        throw $r11;

     label7:
        i4 = i4 + 1;

        goto label6;

     label8:
        $r34 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes>;

        $r35 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes>;

        $i5 = staticinvoke <com.mycila.inject.internal.cglib.core.ReflectUtils: int findPackageProtected(java.lang.Class[])>($r35);

        $r36 = $r34[$i5];

        $r37 = virtualinvoke $r36.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: void setNamePrefix(java.lang.String)>($r37);

        $r38 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Mixin: com.mycila.inject.internal.cglib.proxy.Mixin$MixinKey access$300()>();

        $i6 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: int style>;

        $r39 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes>;

        $r40 = staticinvoke <com.mycila.inject.internal.cglib.core.ReflectUtils: java.lang.String[] getNames(java.lang.Class[])>($r39);

        $r41 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: int[] route>;

        $r42 = interfaceinvoke $r38.<com.mycila.inject.internal.cglib.proxy.Mixin$MixinKey: java.lang.Object newInstance(int,java.lang.String[],int[])>($i6, $r40, $r41);

        $r43 = specialinvoke r0.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator: java.lang.Object create(java.lang.Object)>($r42);

        $r44 = (com.mycila.inject.internal.cglib.proxy.Mixin) $r43;

        return $r44;
    }

    public void generateClass(com.mycila.inject.internal.asm.ClassVisitor)
    {
        java.lang.Class[] $r4, $r7, $r11;
        com.mycila.inject.internal.cglib.proxy.MixinEverythingEmitter $r1;
        com.mycila.inject.internal.cglib.proxy.MixinEmitter $r8;
        com.mycila.inject.internal.cglib.proxy.Mixin$Generator r0;
        int[] $r10;
        com.mycila.inject.internal.cglib.proxy.MixinBeanEmitter $r5;
        int $i0;
        java.lang.String $r3, $r6, $r9;
        com.mycila.inject.internal.asm.ClassVisitor r2;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.Mixin$Generator;

        r2 := @parameter0: com.mycila.inject.internal.asm.ClassVisitor;

        $i0 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: int style>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r8 = new com.mycila.inject.internal.cglib.proxy.MixinEmitter;

        $r9 = virtualinvoke r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.String getClassName()>();

        $r11 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes>;

        $r10 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: int[] route>;

        specialinvoke $r8.<com.mycila.inject.internal.cglib.proxy.MixinEmitter: void <init>(com.mycila.inject.internal.asm.ClassVisitor,java.lang.String,java.lang.Class[],int[])>(r2, $r9, $r11, $r10);

        goto label4;

     label2:
        $r5 = new com.mycila.inject.internal.cglib.proxy.MixinBeanEmitter;

        $r6 = virtualinvoke r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.String getClassName()>();

        $r7 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes>;

        specialinvoke $r5.<com.mycila.inject.internal.cglib.proxy.MixinBeanEmitter: void <init>(com.mycila.inject.internal.asm.ClassVisitor,java.lang.String,java.lang.Class[])>(r2, $r6, $r7);

        goto label4;

     label3:
        $r1 = new com.mycila.inject.internal.cglib.proxy.MixinEverythingEmitter;

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.String getClassName()>();

        $r4 = r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Class[] classes>;

        specialinvoke $r1.<com.mycila.inject.internal.cglib.proxy.MixinEverythingEmitter: void <init>(com.mycila.inject.internal.asm.ClassVisitor,java.lang.String,java.lang.Class[])>(r2, $r3, $r4);

     label4:
        return;
    }

    protected java.lang.Object firstInstance(java.lang.Class)
    {
        com.mycila.inject.internal.cglib.proxy.Mixin$Generator r2;
        java.lang.Object[] $r3;
        com.mycila.inject.internal.cglib.proxy.Mixin $r4, $r5;
        java.lang.Class r0;
        java.lang.Object $r1;

        r2 := @this: com.mycila.inject.internal.cglib.proxy.Mixin$Generator;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <com.mycila.inject.internal.cglib.core.ReflectUtils: java.lang.Object newInstance(java.lang.Class)>(r0);

        $r4 = (com.mycila.inject.internal.cglib.proxy.Mixin) $r1;

        $r3 = r2.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Object[] delegates>;

        $r5 = virtualinvoke $r4.<com.mycila.inject.internal.cglib.proxy.Mixin: com.mycila.inject.internal.cglib.proxy.Mixin newInstance(java.lang.Object[])>($r3);

        return $r5;
    }

    protected java.lang.Object nextInstance(java.lang.Object)
    {
        com.mycila.inject.internal.cglib.proxy.Mixin$Generator r1;
        java.lang.Object[] $r2;
        com.mycila.inject.internal.cglib.proxy.Mixin $r3, $r4;
        java.lang.Object r0;

        r1 := @this: com.mycila.inject.internal.cglib.proxy.Mixin$Generator;

        r0 := @parameter0: java.lang.Object;

        $r3 = (com.mycila.inject.internal.cglib.proxy.Mixin) r0;

        $r2 = r1.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: java.lang.Object[] delegates>;

        $r4 = virtualinvoke $r3.<com.mycila.inject.internal.cglib.proxy.Mixin: com.mycila.inject.internal.cglib.proxy.Mixin newInstance(java.lang.Object[])>($r2);

        return $r4;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source $r0;
        java.lang.Class $r1, $r3;
        java.lang.String $r2;

        $r0 = new com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source;

        $r1 = <com.mycila.inject.internal.cglib.proxy.Mixin: java.lang.Class class$net$sf$cglib$proxy$Mixin>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Mixin: java.lang.Class class$(java.lang.String)>("com.mycila.inject.internal.cglib.proxy.Mixin");

        <com.mycila.inject.internal.cglib.proxy.Mixin: java.lang.Class class$net$sf$cglib$proxy$Mixin> = $r3;

        goto label2;

     label1:
        $r3 = <com.mycila.inject.internal.cglib.proxy.Mixin: java.lang.Class class$net$sf$cglib$proxy$Mixin>;

     label2:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source: void <init>(java.lang.String)>($r2);

        <com.mycila.inject.internal.cglib.proxy.Mixin$Generator: com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source SOURCE> = $r0;

        return;
    }
}
