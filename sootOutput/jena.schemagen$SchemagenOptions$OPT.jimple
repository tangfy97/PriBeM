public final enum class jena.schemagen$SchemagenOptions$OPT extends java.lang.Enum
{
    public static final enum jena.schemagen$SchemagenOptions$OPT CONFIG_FILE;
    public static final enum jena.schemagen$SchemagenOptions$OPT NO_COMMENTS;
    public static final enum jena.schemagen$SchemagenOptions$OPT INPUT;
    public static final enum jena.schemagen$SchemagenOptions$OPT LANG_DAML;
    public static final enum jena.schemagen$SchemagenOptions$OPT LANG_OWL;
    public static final enum jena.schemagen$SchemagenOptions$OPT LANG_RDFS;
    public static final enum jena.schemagen$SchemagenOptions$OPT OUTPUT;
    public static final enum jena.schemagen$SchemagenOptions$OPT HEADER;
    public static final enum jena.schemagen$SchemagenOptions$OPT FOOTER;
    public static final enum jena.schemagen$SchemagenOptions$OPT ROOT;
    public static final enum jena.schemagen$SchemagenOptions$OPT MARKER;
    public static final enum jena.schemagen$SchemagenOptions$OPT PACKAGENAME;
    public static final enum jena.schemagen$SchemagenOptions$OPT ONTOLOGY;
    public static final enum jena.schemagen$SchemagenOptions$OPT CLASSNAME;
    public static final enum jena.schemagen$SchemagenOptions$OPT CLASSDEC;
    public static final enum jena.schemagen$SchemagenOptions$OPT NAMESPACE;
    public static final enum jena.schemagen$SchemagenOptions$OPT DECLARATIONS;
    public static final enum jena.schemagen$SchemagenOptions$OPT PROPERTY_SECTION;
    public static final enum jena.schemagen$SchemagenOptions$OPT CLASS_SECTION;
    public static final enum jena.schemagen$SchemagenOptions$OPT INDIVIDUALS_SECTION;
    public static final enum jena.schemagen$SchemagenOptions$OPT NOPROPERTIES;
    public static final enum jena.schemagen$SchemagenOptions$OPT NOCLASSES;
    public static final enum jena.schemagen$SchemagenOptions$OPT NOINDIVIDUALS;
    public static final enum jena.schemagen$SchemagenOptions$OPT NOHEADER;
    public static final enum jena.schemagen$SchemagenOptions$OPT PROP_TEMPLATE;
    public static final enum jena.schemagen$SchemagenOptions$OPT CLASS_TEMPLATE;
    public static final enum jena.schemagen$SchemagenOptions$OPT INDIVIDUAL_TEMPLATE;
    public static final enum jena.schemagen$SchemagenOptions$OPT UC_NAMES;
    public static final enum jena.schemagen$SchemagenOptions$OPT INCLUDE;
    public static final enum jena.schemagen$SchemagenOptions$OPT CLASSNAME_SUFFIX;
    public static final enum jena.schemagen$SchemagenOptions$OPT ENCODING;
    public static final enum jena.schemagen$SchemagenOptions$OPT HELP;
    public static final enum jena.schemagen$SchemagenOptions$OPT DOS;
    public static final enum jena.schemagen$SchemagenOptions$OPT USE_INF;
    public static final enum jena.schemagen$SchemagenOptions$OPT STRICT_INDIVIDUALS;
    public static final enum jena.schemagen$SchemagenOptions$OPT INCLUDE_SOURCE;
    public static final enum jena.schemagen$SchemagenOptions$OPT NO_STRICT;
    private static final jena.schemagen$SchemagenOptions$OPT[] $VALUES;

    public static jena.schemagen$SchemagenOptions$OPT[] values()
    {
        java.lang.Object $r1;
        jena.schemagen$SchemagenOptions$OPT[] $r0, $r2;

        $r0 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (jena.schemagen$SchemagenOptions$OPT[]) $r1;

        return $r2;
    }

    public static jena.schemagen$SchemagenOptions$OPT valueOf(java.lang.String)
    {
        jena.schemagen$SchemagenOptions$OPT $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Ljena/schemagen$SchemagenOptions$OPT;", r0);

        $r2 = (jena.schemagen$SchemagenOptions$OPT) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        jena.schemagen$SchemagenOptions$OPT r0;
        int i0;
        java.lang.String r1;

        r0 := @this: jena.schemagen$SchemagenOptions$OPT;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        jena.schemagen$SchemagenOptions$OPT[] $r37;
        jena.schemagen$SchemagenOptions$OPT $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74;

        $r0 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r0.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("CONFIG_FILE", 0);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CONFIG_FILE> = $r0;

        $r1 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r1.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("NO_COMMENTS", 1);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NO_COMMENTS> = $r1;

        $r2 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r2.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("INPUT", 2);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT INPUT> = $r2;

        $r3 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r3.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("LANG_DAML", 3);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT LANG_DAML> = $r3;

        $r4 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r4.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("LANG_OWL", 4);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT LANG_OWL> = $r4;

        $r5 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r5.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("LANG_RDFS", 5);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT LANG_RDFS> = $r5;

        $r6 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r6.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("OUTPUT", 6);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT OUTPUT> = $r6;

        $r7 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r7.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("HEADER", 7);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT HEADER> = $r7;

        $r8 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r8.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("FOOTER", 8);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT FOOTER> = $r8;

        $r9 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r9.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("ROOT", 9);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT ROOT> = $r9;

        $r10 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r10.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("MARKER", 10);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT MARKER> = $r10;

        $r11 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r11.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("PACKAGENAME", 11);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT PACKAGENAME> = $r11;

        $r12 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r12.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("ONTOLOGY", 12);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT ONTOLOGY> = $r12;

        $r13 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r13.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("CLASSNAME", 13);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CLASSNAME> = $r13;

        $r14 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r14.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("CLASSDEC", 14);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CLASSDEC> = $r14;

        $r15 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r15.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("NAMESPACE", 15);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NAMESPACE> = $r15;

        $r16 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r16.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("DECLARATIONS", 16);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT DECLARATIONS> = $r16;

        $r17 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r17.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("PROPERTY_SECTION", 17);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT PROPERTY_SECTION> = $r17;

        $r18 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r18.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("CLASS_SECTION", 18);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CLASS_SECTION> = $r18;

        $r19 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r19.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("INDIVIDUALS_SECTION", 19);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT INDIVIDUALS_SECTION> = $r19;

        $r20 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r20.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("NOPROPERTIES", 20);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NOPROPERTIES> = $r20;

        $r21 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r21.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("NOCLASSES", 21);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NOCLASSES> = $r21;

        $r22 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r22.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("NOINDIVIDUALS", 22);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NOINDIVIDUALS> = $r22;

        $r23 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r23.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("NOHEADER", 23);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NOHEADER> = $r23;

        $r24 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r24.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("PROP_TEMPLATE", 24);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT PROP_TEMPLATE> = $r24;

        $r25 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r25.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("CLASS_TEMPLATE", 25);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CLASS_TEMPLATE> = $r25;

        $r26 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r26.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("INDIVIDUAL_TEMPLATE", 26);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT INDIVIDUAL_TEMPLATE> = $r26;

        $r27 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r27.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("UC_NAMES", 27);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT UC_NAMES> = $r27;

        $r28 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r28.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("INCLUDE", 28);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT INCLUDE> = $r28;

        $r29 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r29.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("CLASSNAME_SUFFIX", 29);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CLASSNAME_SUFFIX> = $r29;

        $r30 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r30.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("ENCODING", 30);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT ENCODING> = $r30;

        $r31 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r31.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("HELP", 31);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT HELP> = $r31;

        $r32 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r32.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("DOS", 32);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT DOS> = $r32;

        $r33 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r33.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("USE_INF", 33);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT USE_INF> = $r33;

        $r34 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r34.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("STRICT_INDIVIDUALS", 34);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT STRICT_INDIVIDUALS> = $r34;

        $r35 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r35.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("INCLUDE_SOURCE", 35);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT INCLUDE_SOURCE> = $r35;

        $r36 = new jena.schemagen$SchemagenOptions$OPT;

        specialinvoke $r36.<jena.schemagen$SchemagenOptions$OPT: void <init>(java.lang.String,int)>("NO_STRICT", 36);

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NO_STRICT> = $r36;

        $r37 = newarray (jena.schemagen$SchemagenOptions$OPT)[37];

        $r38 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CONFIG_FILE>;

        $r37[0] = $r38;

        $r39 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NO_COMMENTS>;

        $r37[1] = $r39;

        $r40 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT INPUT>;

        $r37[2] = $r40;

        $r41 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT LANG_DAML>;

        $r37[3] = $r41;

        $r42 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT LANG_OWL>;

        $r37[4] = $r42;

        $r43 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT LANG_RDFS>;

        $r37[5] = $r43;

        $r44 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT OUTPUT>;

        $r37[6] = $r44;

        $r45 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT HEADER>;

        $r37[7] = $r45;

        $r46 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT FOOTER>;

        $r37[8] = $r46;

        $r47 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT ROOT>;

        $r37[9] = $r47;

        $r48 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT MARKER>;

        $r37[10] = $r48;

        $r49 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT PACKAGENAME>;

        $r37[11] = $r49;

        $r50 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT ONTOLOGY>;

        $r37[12] = $r50;

        $r51 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CLASSNAME>;

        $r37[13] = $r51;

        $r52 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CLASSDEC>;

        $r37[14] = $r52;

        $r53 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NAMESPACE>;

        $r37[15] = $r53;

        $r54 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT DECLARATIONS>;

        $r37[16] = $r54;

        $r55 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT PROPERTY_SECTION>;

        $r37[17] = $r55;

        $r56 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CLASS_SECTION>;

        $r37[18] = $r56;

        $r57 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT INDIVIDUALS_SECTION>;

        $r37[19] = $r57;

        $r58 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NOPROPERTIES>;

        $r37[20] = $r58;

        $r59 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NOCLASSES>;

        $r37[21] = $r59;

        $r60 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NOINDIVIDUALS>;

        $r37[22] = $r60;

        $r61 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NOHEADER>;

        $r37[23] = $r61;

        $r62 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT PROP_TEMPLATE>;

        $r37[24] = $r62;

        $r63 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CLASS_TEMPLATE>;

        $r37[25] = $r63;

        $r64 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT INDIVIDUAL_TEMPLATE>;

        $r37[26] = $r64;

        $r65 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT UC_NAMES>;

        $r37[27] = $r65;

        $r66 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT INCLUDE>;

        $r37[28] = $r66;

        $r67 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CLASSNAME_SUFFIX>;

        $r37[29] = $r67;

        $r68 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT ENCODING>;

        $r37[30] = $r68;

        $r69 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT HELP>;

        $r37[31] = $r69;

        $r70 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT DOS>;

        $r37[32] = $r70;

        $r71 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT USE_INF>;

        $r37[33] = $r71;

        $r72 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT STRICT_INDIVIDUALS>;

        $r37[34] = $r72;

        $r73 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT INCLUDE_SOURCE>;

        $r37[35] = $r73;

        $r74 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NO_STRICT>;

        $r37[36] = $r74;

        <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT[] $VALUES> = $r37;

        return;
    }
}
