public class ucar.nc2.units.DateRange extends java.lang.Object
{
    private ucar.nc2.units.DateType start;
    private ucar.nc2.units.DateType end;
    private ucar.nc2.units.TimeDuration duration;
    private ucar.nc2.units.TimeDuration resolution;
    private boolean isEmpty;
    private boolean isMoving;
    private boolean useStart;
    private boolean useEnd;
    private boolean useDuration;
    private boolean useResolution;
    private int hashCode;

    public void <init>() throws java.text.ParseException
    {
        ucar.nc2.units.DateRange r0;
        java.util.Date $r2;
        ucar.nc2.units.TimeDuration $r3, $r4;
        ucar.nc2.units.DateType $r1;

        r0 := @this: ucar.nc2.units.DateRange;

        $r1 = new ucar.nc2.units.DateType;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        specialinvoke $r1.<ucar.nc2.units.DateType: void <init>(boolean,java.util.Date)>(0, $r2);

        $r3 = new ucar.nc2.units.TimeDuration;

        specialinvoke $r3.<ucar.nc2.units.TimeDuration: void <init>(java.lang.String)>("1 day");

        $r4 = new ucar.nc2.units.TimeDuration;

        specialinvoke $r4.<ucar.nc2.units.TimeDuration: void <init>(java.lang.String)>("15 min");

        specialinvoke r0.<ucar.nc2.units.DateRange: void <init>(ucar.nc2.units.DateType,ucar.nc2.units.DateType,ucar.nc2.units.TimeDuration,ucar.nc2.units.TimeDuration)>(null, $r1, $r3, $r4);

        return;
    }

    public void <init>(java.util.Date, java.util.Date)
    {
        ucar.nc2.units.DateRange r0;
        java.util.Date r2, r4;
        ucar.nc2.units.DateType $r1, $r3;

        r0 := @this: ucar.nc2.units.DateRange;

        r2 := @parameter0: java.util.Date;

        r4 := @parameter1: java.util.Date;

        $r1 = new ucar.nc2.units.DateType;

        specialinvoke $r1.<ucar.nc2.units.DateType: void <init>(boolean,java.util.Date)>(0, r2);

        $r3 = new ucar.nc2.units.DateType;

        specialinvoke $r3.<ucar.nc2.units.DateType: void <init>(boolean,java.util.Date)>(0, r4);

        specialinvoke r0.<ucar.nc2.units.DateRange: void <init>(ucar.nc2.units.DateType,ucar.nc2.units.DateType,ucar.nc2.units.TimeDuration,ucar.nc2.units.TimeDuration)>($r1, $r3, null, null);

        return;
    }

    public void <init>(java.util.Date, ucar.nc2.units.TimeDuration)
    {
        ucar.nc2.units.DateRange r0;
        java.util.Date r2;
        ucar.nc2.units.TimeDuration r3;
        ucar.nc2.units.DateType $r1;

        r0 := @this: ucar.nc2.units.DateRange;

        r2 := @parameter0: java.util.Date;

        r3 := @parameter1: ucar.nc2.units.TimeDuration;

        $r1 = new ucar.nc2.units.DateType;

        specialinvoke $r1.<ucar.nc2.units.DateType: void <init>(boolean,java.util.Date)>(0, r2);

        specialinvoke r0.<ucar.nc2.units.DateRange: void <init>(ucar.nc2.units.DateType,ucar.nc2.units.DateType,ucar.nc2.units.TimeDuration,ucar.nc2.units.TimeDuration)>($r1, null, r3, null);

        return;
    }

    public void <init>(ucar.nc2.units.DateRange, java.lang.String) throws java.lang.Exception
    {
        java.util.Date $r4, $r7;
        ucar.nc2.units.TimeDuration $r8;
        ucar.nc2.units.DateRange r0, r2;
        java.lang.String r9;
        ucar.nc2.units.DateType $r1, $r3, $r5, $r6;

        r0 := @this: ucar.nc2.units.DateRange;

        r2 := @parameter0: ucar.nc2.units.DateRange;

        r9 := @parameter1: java.lang.String;

        $r1 = new ucar.nc2.units.DateType;

        $r3 = virtualinvoke r2.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $r4 = virtualinvoke $r3.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        specialinvoke $r1.<ucar.nc2.units.DateType: void <init>(boolean,java.util.Date)>(0, $r4);

        $r5 = new ucar.nc2.units.DateType;

        $r6 = virtualinvoke r2.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $r7 = virtualinvoke $r6.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        specialinvoke $r5.<ucar.nc2.units.DateType: void <init>(boolean,java.util.Date)>(0, $r7);

        $r8 = new ucar.nc2.units.TimeDuration;

        specialinvoke $r8.<ucar.nc2.units.TimeDuration: void <init>(java.lang.String)>(r9);

        specialinvoke r0.<ucar.nc2.units.DateRange: void <init>(ucar.nc2.units.DateType,ucar.nc2.units.DateType,ucar.nc2.units.TimeDuration,ucar.nc2.units.TimeDuration)>($r1, $r5, null, $r8);

        return;
    }

    public void <init>(ucar.nc2.units.DateType, ucar.nc2.units.DateType, ucar.nc2.units.TimeDuration, ucar.nc2.units.TimeDuration)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, z16, $z17;
        ucar.nc2.units.TimeDuration r3, r4;
        ucar.nc2.units.DateRange r0;
        ucar.nc2.units.DateType r1, r2, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: ucar.nc2.units.DateRange;

        r1 := @parameter0: ucar.nc2.units.DateType;

        r2 := @parameter1: ucar.nc2.units.DateType;

        r3 := @parameter2: ucar.nc2.units.TimeDuration;

        r4 := @parameter3: ucar.nc2.units.TimeDuration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.units.DateRange: int hashCode> = 0;

        r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start> = r1;

        r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end> = r2;

        r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration> = r3;

        r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration resolution> = r4;

        if r1 == null goto label01;

        $z11 = virtualinvoke r1.<ucar.nc2.units.DateType: boolean isBlank()>();

        if $z11 != 0 goto label01;

        $z12 = 1;

        goto label02;

     label01:
        $z12 = 0;

     label02:
        r0.<ucar.nc2.units.DateRange: boolean useStart> = $z12;

        if r2 == null goto label03;

        $z10 = virtualinvoke r2.<ucar.nc2.units.DateType: boolean isBlank()>();

        if $z10 != 0 goto label03;

        $z13 = 1;

        goto label04;

     label03:
        $z13 = 0;

     label04:
        r0.<ucar.nc2.units.DateRange: boolean useEnd> = $z13;

        if r3 == null goto label05;

        $z14 = 1;

        goto label06;

     label05:
        $z14 = 0;

     label06:
        r0.<ucar.nc2.units.DateRange: boolean useDuration> = $z14;

        if r4 == null goto label07;

        $z15 = 1;

        goto label08;

     label07:
        $z15 = 0;

     label08:
        r0.<ucar.nc2.units.DateRange: boolean useResolution> = $z15;

        z16 = 1;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean useStart>;

        if $z0 == 0 goto label12;

        $z7 = r0.<ucar.nc2.units.DateRange: boolean useEnd>;

        if $z7 == 0 goto label12;

        z16 = 0;

        $r12 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $z8 = virtualinvoke $r12.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z8 != 0 goto label09;

        $r13 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $z9 = virtualinvoke $r13.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z9 == 0 goto label10;

     label09:
        $z17 = 1;

        goto label11;

     label10:
        $z17 = 0;

     label11:
        r0.<ucar.nc2.units.DateRange: boolean isMoving> = $z17;

        r0.<ucar.nc2.units.DateRange: boolean useDuration> = 0;

        specialinvoke r0.<ucar.nc2.units.DateRange: void recalcDuration()>();

        goto label14;

     label12:
        $z1 = r0.<ucar.nc2.units.DateRange: boolean useStart>;

        if $z1 == 0 goto label13;

        $z5 = r0.<ucar.nc2.units.DateRange: boolean useDuration>;

        if $z5 == 0 goto label13;

        z16 = 0;

        $r9 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $z6 = virtualinvoke $r9.<ucar.nc2.units.DateType: boolean isPresent()>();

        r0.<ucar.nc2.units.DateRange: boolean isMoving> = $z6;

        $r10 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $r11 = virtualinvoke $r10.<ucar.nc2.units.DateType: ucar.nc2.units.DateType add(ucar.nc2.units.TimeDuration)>(r3);

        r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end> = $r11;

        goto label14;

     label13:
        $z2 = r0.<ucar.nc2.units.DateRange: boolean useEnd>;

        if $z2 == 0 goto label14;

        $z3 = r0.<ucar.nc2.units.DateRange: boolean useDuration>;

        if $z3 == 0 goto label14;

        z16 = 0;

        $r6 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $z4 = virtualinvoke $r6.<ucar.nc2.units.DateType: boolean isPresent()>();

        r0.<ucar.nc2.units.DateRange: boolean isMoving> = $z4;

        $r7 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $r8 = virtualinvoke $r7.<ucar.nc2.units.DateType: ucar.nc2.units.DateType subtract(ucar.nc2.units.TimeDuration)>(r3);

        r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start> = $r8;

     label14:
        if z16 == 0 goto label15;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DateRange must have 2 of start, end, duration");

        throw $r5;

     label15:
        specialinvoke r0.<ucar.nc2.units.DateRange: void checkIfEmpty()>();

        r0.<ucar.nc2.units.DateRange: int hashCode> = 0;

        return;
    }

    private void checkIfEmpty()
    {
        byte $b0;
        int $i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        double $d0;
        ucar.nc2.units.TimeDuration $r3, $r4;
        ucar.nc2.units.DateRange r0;
        ucar.nc2.units.DateType $r1, $r2, $r5, $r6, $r7, $r8;

        r0 := @this: ucar.nc2.units.DateRange;

        $r1 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $z0 = virtualinvoke $r1.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $z4 = virtualinvoke $r8.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z4 == 0 goto label1;

        r0.<ucar.nc2.units.DateRange: boolean isEmpty> = 1;

        goto label6;

     label1:
        $r2 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $z1 = virtualinvoke $r2.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z1 != 0 goto label2;

        $r5 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $z2 = virtualinvoke $r5.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z2 == 0 goto label5;

     label2:
        $r3 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration>;

        $d0 = virtualinvoke $r3.<ucar.nc2.units.TimeDuration: double getValue()>();

        $b0 = $d0 cmpg 0.0;

        $i1 = (int) $b0;

        if $i1 > 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        r0.<ucar.nc2.units.DateRange: boolean isEmpty> = $z5;

        goto label6;

     label5:
        $r7 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $r6 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $z3 = virtualinvoke $r7.<ucar.nc2.units.DateType: boolean before(ucar.nc2.units.DateType)>($r6);

        r0.<ucar.nc2.units.DateRange: boolean isEmpty> = $z3;

     label6:
        $z6 = r0.<ucar.nc2.units.DateRange: boolean isEmpty>;

        if $z6 == 0 goto label7;

        $r4 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration>;

        virtualinvoke $r4.<ucar.nc2.units.TimeDuration: void setValueInSeconds(double)>(0.0);

     label7:
        return;
    }

    private java.lang.String chooseResolution(double)
    {
        byte $b0, $b1, $b2, $b3, $b4;
        int $i5, $i6, $i7, $i8, $i9;
        double d0, d1, d2, d3, d4;
        ucar.nc2.units.DateRange r0;

        r0 := @this: ucar.nc2.units.DateRange;

        d0 := @parameter0: double;

        $b0 = d0 cmpg 180.0;

        $i5 = (int) $b0;

        if $i5 >= 0 goto label1;

        return "secs";

     label1:
        d1 = d0 / 60.0;

        $b1 = d1 cmpg 180.0;

        $i6 = (int) $b1;

        if $i6 >= 0 goto label2;

        return "minutes";

     label2:
        d2 = d1 / 60.0;

        $b2 = d2 cmpg 72.0;

        $i7 = (int) $b2;

        if $i7 >= 0 goto label3;

        return "hours";

     label3:
        d3 = d2 / 24.0;

        $b3 = d3 cmpg 90.0;

        $i8 = (int) $b3;

        if $i8 >= 0 goto label4;

        return "days";

     label4:
        d4 = d3 / 30.0;

        $b4 = d4 cmpg 36.0;

        $i9 = (int) $b4;

        if $i9 >= 0 goto label5;

        return "months";

     label5:
        return "years";
    }

    public boolean included(java.util.Date)
    {
        ucar.nc2.units.DateRange r0;
        java.util.Date r2;
        boolean $z0, $z1, $z2;
        ucar.nc2.units.DateType $r1, $r3;

        r0 := @this: ucar.nc2.units.DateRange;

        r2 := @parameter0: java.util.Date;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean isEmpty>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $z1 = virtualinvoke $r1.<ucar.nc2.units.DateType: boolean after(java.util.Date)>(r2);

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $z2 = virtualinvoke $r3.<ucar.nc2.units.DateType: boolean before(java.util.Date)>(r2);

        if $z2 == 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public boolean contains(java.util.Date)
    {
        ucar.nc2.units.DateRange r0;
        java.util.Date r1;
        boolean $z0;

        r0 := @this: ucar.nc2.units.DateRange;

        r1 := @parameter0: java.util.Date;

        $z0 = virtualinvoke r0.<ucar.nc2.units.DateRange: boolean included(java.util.Date)>(r1);

        return $z0;
    }

    public boolean intersects(java.util.Date, java.util.Date)
    {
        java.util.Date r2, r4;
        ucar.nc2.units.DateRange r0;
        boolean $z0, $z1, $z2;
        ucar.nc2.units.DateType $r1, $r3;

        r0 := @this: ucar.nc2.units.DateRange;

        r4 := @parameter0: java.util.Date;

        r2 := @parameter1: java.util.Date;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean isEmpty>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $z1 = virtualinvoke $r1.<ucar.nc2.units.DateType: boolean after(java.util.Date)>(r2);

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $z2 = virtualinvoke $r3.<ucar.nc2.units.DateType: boolean before(java.util.Date)>(r4);

        if $z2 == 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public boolean intersects(ucar.nc2.units.DateRange)
    {
        ucar.nc2.units.DateRange r0, r1;
        java.util.Date $r3, $r5;
        ucar.nc2.units.DateType $r2, $r4;
        boolean $z0;

        r0 := @this: ucar.nc2.units.DateRange;

        r1 := @parameter0: ucar.nc2.units.DateRange;

        $r2 = virtualinvoke r1.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $r3 = virtualinvoke $r2.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $r4 = virtualinvoke r1.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $r5 = virtualinvoke $r4.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $z0 = virtualinvoke r0.<ucar.nc2.units.DateRange: boolean intersects(java.util.Date,java.util.Date)>($r3, $r5);

        return $z0;
    }

    public ucar.nc2.units.DateRange intersect(ucar.nc2.units.DateRange)
    {
        ucar.nc2.units.TimeDuration $r8;
        ucar.nc2.units.DateRange r0, r1, $r7;
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.units.DateType $r2, $r3, r4, $r5, $r6, $r9, $r10;

        r0 := @this: ucar.nc2.units.DateRange;

        r1 := @parameter0: ucar.nc2.units.DateRange;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean isEmpty>;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $z1 = r1.<ucar.nc2.units.DateRange: boolean isEmpty>;

        if $z1 == 0 goto label2;

        return r1;

     label2:
        $r2 = virtualinvoke r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $r3 = virtualinvoke r1.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $z2 = virtualinvoke $r2.<ucar.nc2.units.DateType: boolean before(ucar.nc2.units.DateType)>($r3);

        if $z2 == 0 goto label3;

        $r9 = virtualinvoke r1.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        goto label4;

     label3:
        $r9 = $r2;

     label4:
        r4 = $r9;

        $r5 = virtualinvoke r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $r6 = virtualinvoke r1.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $z3 = virtualinvoke $r5.<ucar.nc2.units.DateType: boolean before(ucar.nc2.units.DateType)>($r6);

        if $z3 == 0 goto label5;

        $r10 = $r5;

        goto label6;

     label5:
        $r10 = virtualinvoke r1.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

     label6:
        $r7 = new ucar.nc2.units.DateRange;

        $r8 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration resolution>;

        specialinvoke $r7.<ucar.nc2.units.DateRange: void <init>(ucar.nc2.units.DateType,ucar.nc2.units.DateType,ucar.nc2.units.TimeDuration,ucar.nc2.units.TimeDuration)>(r4, $r10, null, $r8);

        return $r7;
    }

    public void extend(ucar.nc2.units.DateRange)
    {
        ucar.nc2.units.DateRange r0, r1;
        boolean z0, $z1, $z2;
        ucar.nc2.units.DateType $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: ucar.nc2.units.DateRange;

        r1 := @parameter0: ucar.nc2.units.DateRange;

        z0 = r0.<ucar.nc2.units.DateRange: boolean isEmpty>;

        if z0 != 0 goto label1;

        $r6 = virtualinvoke r1.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $r7 = virtualinvoke r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $z2 = virtualinvoke $r6.<ucar.nc2.units.DateType: boolean before(ucar.nc2.units.DateType)>($r7);

        if $z2 == 0 goto label2;

     label1:
        $r2 = virtualinvoke r1.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        virtualinvoke r0.<ucar.nc2.units.DateRange: void setStart(ucar.nc2.units.DateType)>($r2);

     label2:
        if z0 != 0 goto label3;

        $r4 = virtualinvoke r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $r5 = virtualinvoke r1.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $z1 = virtualinvoke $r4.<ucar.nc2.units.DateType: boolean before(ucar.nc2.units.DateType)>($r5);

        if $z1 == 0 goto label4;

     label3:
        $r3 = virtualinvoke r1.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        virtualinvoke r0.<ucar.nc2.units.DateRange: void setEnd(ucar.nc2.units.DateType)>($r3);

     label4:
        return;
    }

    public void extend(java.util.Date)
    {
        java.util.Date r0, $r3;
        ucar.nc2.units.DateRange r1;
        ucar.nc2.units.DateType $r2, $r4, $r5, $r6;
        boolean $z0, $z1;

        r1 := @this: ucar.nc2.units.DateRange;

        r0 := @parameter0: java.util.Date;

        $r2 = virtualinvoke r1.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $r3 = virtualinvoke $r2.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $z0 = virtualinvoke r0.<java.util.Date: boolean before(java.util.Date)>($r3);

        if $z0 == 0 goto label1;

        $r6 = new ucar.nc2.units.DateType;

        specialinvoke $r6.<ucar.nc2.units.DateType: void <init>(boolean,java.util.Date)>(0, r0);

        virtualinvoke r1.<ucar.nc2.units.DateRange: void setStart(ucar.nc2.units.DateType)>($r6);

     label1:
        $r4 = virtualinvoke r1.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $z1 = virtualinvoke $r4.<ucar.nc2.units.DateType: boolean before(java.util.Date)>(r0);

        if $z1 == 0 goto label2;

        $r5 = new ucar.nc2.units.DateType;

        specialinvoke $r5.<ucar.nc2.units.DateType: void <init>(boolean,java.util.Date)>(0, r0);

        virtualinvoke r1.<ucar.nc2.units.DateRange: void setEnd(ucar.nc2.units.DateType)>($r5);

     label2:
        return;
    }

    public ucar.nc2.units.DateType getStart()
    {
        ucar.nc2.units.DateRange r0;
        ucar.nc2.units.TimeDuration $r1;
        boolean $z0, $z1;
        ucar.nc2.units.DateType $r2, $r3;

        r0 := @this: ucar.nc2.units.DateRange;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean isMoving>;

        if $z0 == 0 goto label1;

        $z1 = r0.<ucar.nc2.units.DateRange: boolean useStart>;

        if $z1 != 0 goto label1;

        $r2 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $r1 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration>;

        $r3 = virtualinvoke $r2.<ucar.nc2.units.DateType: ucar.nc2.units.DateType subtract(ucar.nc2.units.TimeDuration)>($r1);

        goto label2;

     label1:
        $r3 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

     label2:
        return $r3;
    }

    public void setStart(ucar.nc2.units.DateType)
    {
        ucar.nc2.units.TimeDuration $r3;
        ucar.nc2.units.DateRange r0;
        ucar.nc2.units.DateType r1, $r2, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: ucar.nc2.units.DateRange;

        r1 := @parameter0: ucar.nc2.units.DateType;

        r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start> = r1;

        r0.<ucar.nc2.units.DateRange: boolean useStart> = 1;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean useEnd>;

        if $z0 == 0 goto label4;

        $r6 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $z2 = virtualinvoke $r6.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z2 != 0 goto label1;

        $r7 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $z3 = virtualinvoke $r7.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        r0.<ucar.nc2.units.DateRange: boolean isMoving> = $z4;

        r0.<ucar.nc2.units.DateRange: boolean useDuration> = 0;

        specialinvoke r0.<ucar.nc2.units.DateRange: void recalcDuration()>();

        goto label5;

     label4:
        $r2 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $z1 = virtualinvoke $r2.<ucar.nc2.units.DateType: boolean isPresent()>();

        r0.<ucar.nc2.units.DateRange: boolean isMoving> = $z1;

        $r4 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $r3 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration>;

        $r5 = virtualinvoke $r4.<ucar.nc2.units.DateType: ucar.nc2.units.DateType add(ucar.nc2.units.TimeDuration)>($r3);

        r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end> = $r5;

     label5:
        specialinvoke r0.<ucar.nc2.units.DateRange: void checkIfEmpty()>();

        return;
    }

    public ucar.nc2.units.DateType getEnd()
    {
        ucar.nc2.units.DateRange r0;
        ucar.nc2.units.TimeDuration $r1;
        boolean $z0, $z1;
        ucar.nc2.units.DateType $r2, $r3;

        r0 := @this: ucar.nc2.units.DateRange;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean isMoving>;

        if $z0 == 0 goto label1;

        $z1 = r0.<ucar.nc2.units.DateRange: boolean useEnd>;

        if $z1 != 0 goto label1;

        $r2 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $r1 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration>;

        $r3 = virtualinvoke $r2.<ucar.nc2.units.DateType: ucar.nc2.units.DateType add(ucar.nc2.units.TimeDuration)>($r1);

        goto label2;

     label1:
        $r3 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

     label2:
        return $r3;
    }

    public void setEnd(ucar.nc2.units.DateType)
    {
        ucar.nc2.units.TimeDuration $r3;
        ucar.nc2.units.DateRange r0;
        ucar.nc2.units.DateType r1, $r2, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: ucar.nc2.units.DateRange;

        r1 := @parameter0: ucar.nc2.units.DateType;

        r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end> = r1;

        r0.<ucar.nc2.units.DateRange: boolean useEnd> = 1;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean useStart>;

        if $z0 == 0 goto label4;

        $r6 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $z2 = virtualinvoke $r6.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z2 != 0 goto label1;

        $r7 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $z3 = virtualinvoke $r7.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        r0.<ucar.nc2.units.DateRange: boolean isMoving> = $z4;

        r0.<ucar.nc2.units.DateRange: boolean useDuration> = 0;

        specialinvoke r0.<ucar.nc2.units.DateRange: void recalcDuration()>();

        goto label5;

     label4:
        $r2 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $z1 = virtualinvoke $r2.<ucar.nc2.units.DateType: boolean isPresent()>();

        r0.<ucar.nc2.units.DateRange: boolean isMoving> = $z1;

        $r4 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $r3 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration>;

        $r5 = virtualinvoke $r4.<ucar.nc2.units.DateType: ucar.nc2.units.DateType subtract(ucar.nc2.units.TimeDuration)>($r3);

        r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start> = $r5;

     label5:
        specialinvoke r0.<ucar.nc2.units.DateRange: void checkIfEmpty()>();

        return;
    }

    public ucar.nc2.units.TimeDuration getDuration()
    {
        ucar.nc2.units.DateRange r0;
        ucar.nc2.units.TimeDuration $r1;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.units.DateRange;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean isMoving>;

        if $z0 == 0 goto label1;

        $z1 = r0.<ucar.nc2.units.DateRange: boolean useDuration>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<ucar.nc2.units.DateRange: void recalcDuration()>();

     label1:
        $r1 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration>;

        return $r1;
    }

    public void setDuration(ucar.nc2.units.TimeDuration)
    {
        ucar.nc2.units.TimeDuration r1;
        ucar.nc2.units.DateRange r0;
        boolean $z0, $z1, $z2;
        ucar.nc2.units.DateType $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: ucar.nc2.units.DateRange;

        r1 := @parameter0: ucar.nc2.units.TimeDuration;

        r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration> = r1;

        r0.<ucar.nc2.units.DateRange: boolean useDuration> = 1;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean useStart>;

        if $z0 == 0 goto label1;

        $r5 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $z2 = virtualinvoke $r5.<ucar.nc2.units.DateType: boolean isPresent()>();

        r0.<ucar.nc2.units.DateRange: boolean isMoving> = $z2;

        $r6 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $r7 = virtualinvoke $r6.<ucar.nc2.units.DateType: ucar.nc2.units.DateType add(ucar.nc2.units.TimeDuration)>(r1);

        r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end> = $r7;

        r0.<ucar.nc2.units.DateRange: boolean useEnd> = 0;

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $z1 = virtualinvoke $r2.<ucar.nc2.units.DateType: boolean isPresent()>();

        r0.<ucar.nc2.units.DateRange: boolean isMoving> = $z1;

        $r3 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $r4 = virtualinvoke $r3.<ucar.nc2.units.DateType: ucar.nc2.units.DateType subtract(ucar.nc2.units.TimeDuration)>(r1);

        r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start> = $r4;

     label2:
        specialinvoke r0.<ucar.nc2.units.DateRange: void checkIfEmpty()>();

        return;
    }

    private void recalcDuration()
    {
        java.util.Date $r2, $r4;
        long $l0, $l1, $l2, $l4;
        byte $b3;
        int $i5;
        java.lang.String $r10;
        java.text.ParseException $r11;
        double $d0, $d1, $d2, d3, d4, d5;
        ucar.nc2.units.TimeDuration $r5, $r6, $r7, $r8, $r12, $r13;
        ucar.nc2.units.DateRange r0;
        ucar.nc2.units.DateType $r1, $r3;

        r0 := @this: ucar.nc2.units.DateRange;

        $r1 = virtualinvoke r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $r2 = virtualinvoke $r1.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $r3 = virtualinvoke r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $r4 = virtualinvoke $r3.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $l1 = virtualinvoke $r4.<java.util.Date: long getTime()>();

        $l2 = $l1 - $l0;

        $d0 = (double) $l2;

        d4 = 0.001 * $d0;

        $b3 = d4 cmpg 0.0;

        $i5 = (int) $b3;

        if $i5 >= 0 goto label1;

        d4 = 0.0;

     label1:
        $r5 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration>;

        if $r5 != null goto label5;

     label2:
        $r13 = new ucar.nc2.units.TimeDuration;

        $r10 = specialinvoke r0.<ucar.nc2.units.DateRange: java.lang.String chooseResolution(double)>(d4);

        specialinvoke $r13.<ucar.nc2.units.TimeDuration: void <init>(java.lang.String)>($r10);

        r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration> = $r13;

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

     label5:
        $r12 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration resolution>;

        if $r12 != null goto label6;

        $r8 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration>;

        virtualinvoke $r8.<ucar.nc2.units.TimeDuration: void setValueInSeconds(double)>(d4);

        goto label7;

     label6:
        $r6 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration resolution>;

        $d1 = virtualinvoke $r6.<ucar.nc2.units.TimeDuration: double getValueInSeconds()>();

        $d2 = d4 / $d1;

        $l4 = staticinvoke <java.lang.Math: long round(double)>($d2);

        d3 = (double) $l4;

        d5 = d3 * $d1;

        $r7 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration>;

        virtualinvoke $r7.<ucar.nc2.units.TimeDuration: void setValueInSeconds(double)>(d5);

     label7:
        r0.<ucar.nc2.units.DateRange: int hashCode> = 0;

        return;

        catch java.text.ParseException from label2 to label3 with label4;
    }

    public ucar.nc2.units.TimeDuration getResolution()
    {
        ucar.nc2.units.TimeDuration $r1;
        ucar.nc2.units.DateRange r0;

        r0 := @this: ucar.nc2.units.DateRange;

        $r1 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration resolution>;

        return $r1;
    }

    public void setResolution(ucar.nc2.units.TimeDuration)
    {
        ucar.nc2.units.TimeDuration r1;
        ucar.nc2.units.DateRange r0;

        r0 := @this: ucar.nc2.units.DateRange;

        r1 := @parameter0: ucar.nc2.units.TimeDuration;

        r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration resolution> = r1;

        r0.<ucar.nc2.units.DateRange: boolean useResolution> = 1;

        return;
    }

    public boolean useStart()
    {
        ucar.nc2.units.DateRange r0;
        boolean $z0;

        r0 := @this: ucar.nc2.units.DateRange;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean useStart>;

        return $z0;
    }

    public boolean useEnd()
    {
        ucar.nc2.units.DateRange r0;
        boolean $z0;

        r0 := @this: ucar.nc2.units.DateRange;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean useEnd>;

        return $z0;
    }

    public boolean useDuration()
    {
        ucar.nc2.units.DateRange r0;
        boolean $z0;

        r0 := @this: ucar.nc2.units.DateRange;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean useDuration>;

        return $z0;
    }

    public boolean useResolution()
    {
        ucar.nc2.units.DateRange r0;
        boolean $z0;

        r0 := @this: ucar.nc2.units.DateRange;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean useResolution>;

        return $z0;
    }

    public boolean isPoint()
    {
        ucar.nc2.units.DateRange r0;
        boolean $z0, $z1, $z2;
        ucar.nc2.units.DateType $r1, $r2;

        r0 := @this: ucar.nc2.units.DateRange;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean isEmpty>;

        if $z0 != 0 goto label1;

        $r2 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $r1 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $z1 = virtualinvoke $r2.<ucar.nc2.units.DateType: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isEmpty()
    {
        ucar.nc2.units.DateRange r0;
        boolean $z0;

        r0 := @this: ucar.nc2.units.DateRange;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean isEmpty>;

        return $z0;
    }

    public java.lang.String toString()
    {
        ucar.nc2.units.TimeDuration $r9, $r12;
        ucar.nc2.units.DateRange r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r13;
        java.lang.String $r14;
        ucar.nc2.units.DateType $r3, $r6;

        r2 := @this: ucar.nc2.units.DateRange;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start= ");

        $r3 = r2.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end= ");

        $r6 = r2.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" duration= ");

        $r9 = r2.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resolution= ");

        $r12 = r2.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration resolution>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public boolean equals(java.lang.Object)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        ucar.nc2.units.TimeDuration $r3, $r4, $r5, $r6;
        ucar.nc2.units.DateRange r0, r2;
        java.lang.Object r1;
        ucar.nc2.units.DateType $r7, $r8, $r9, $r10;

        r0 := @this: ucar.nc2.units.DateRange;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof ucar.nc2.units.DateRange;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (ucar.nc2.units.DateRange) r1;

        $z1 = r0.<ucar.nc2.units.DateRange: boolean useStart>;

        if $z1 == 0 goto label3;

        $r10 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $r9 = r2.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $z8 = virtualinvoke $r10.<ucar.nc2.units.DateType: boolean equals(java.lang.Object)>($r9);

        if $z8 != 0 goto label3;

        return 0;

     label3:
        $z2 = r0.<ucar.nc2.units.DateRange: boolean useEnd>;

        if $z2 == 0 goto label4;

        $r8 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $r7 = r2.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $z7 = virtualinvoke $r8.<ucar.nc2.units.DateType: boolean equals(java.lang.Object)>($r7);

        if $z7 != 0 goto label4;

        return 0;

     label4:
        $z3 = r0.<ucar.nc2.units.DateRange: boolean useDuration>;

        if $z3 == 0 goto label5;

        $r6 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration>;

        $r5 = r2.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration>;

        $z6 = virtualinvoke $r6.<ucar.nc2.units.TimeDuration: boolean equals(java.lang.Object)>($r5);

        if $z6 != 0 goto label5;

        return 0;

     label5:
        $z4 = r0.<ucar.nc2.units.DateRange: boolean useResolution>;

        if $z4 == 0 goto label6;

        $r4 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration resolution>;

        $r3 = r2.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration resolution>;

        $z5 = virtualinvoke $r4.<ucar.nc2.units.TimeDuration: boolean equals(java.lang.Object)>($r3);

        if $z5 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9;
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.units.TimeDuration $r1, $r2;
        ucar.nc2.units.DateRange r0;
        ucar.nc2.units.DateType $r3, $r4;

        r0 := @this: ucar.nc2.units.DateRange;

        $i0 = r0.<ucar.nc2.units.DateRange: int hashCode>;

        if $i0 != 0 goto label5;

        i8 = 17;

        $z0 = r0.<ucar.nc2.units.DateRange: boolean useStart>;

        if $z0 == 0 goto label1;

        $r4 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType start>;

        $i7 = virtualinvoke $r4.<ucar.nc2.units.DateType: int hashCode()>();

        i8 = 629 + $i7;

     label1:
        $z1 = r0.<ucar.nc2.units.DateRange: boolean useEnd>;

        if $z1 == 0 goto label2;

        $i5 = 37 * i8;

        $r3 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType end>;

        $i6 = virtualinvoke $r3.<ucar.nc2.units.DateType: int hashCode()>();

        i8 = $i5 + $i6;

     label2:
        $z2 = r0.<ucar.nc2.units.DateRange: boolean useDuration>;

        if $z2 == 0 goto label3;

        $i3 = 37 * i8;

        $r2 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration duration>;

        $i4 = virtualinvoke $r2.<ucar.nc2.units.TimeDuration: int hashCode()>();

        i8 = $i3 + $i4;

     label3:
        $z3 = r0.<ucar.nc2.units.DateRange: boolean useResolution>;

        if $z3 == 0 goto label4;

        $i1 = 37 * i8;

        $r1 = r0.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration resolution>;

        $i2 = virtualinvoke $r1.<ucar.nc2.units.TimeDuration: int hashCode()>();

        i8 = $i1 + $i2;

     label4:
        r0.<ucar.nc2.units.DateRange: int hashCode> = i8;

     label5:
        $i9 = r0.<ucar.nc2.units.DateRange: int hashCode>;

        return $i9;
    }
}
