public class org.apache.xml.utils.StringBufferPool extends java.lang.Object
{
    private static org.apache.xml.utils.ObjectPool m_stringBufPool;
    static java.lang.Class class$org$apache$xml$utils$FastStringBuffer;

    public void <init>()
    {
        org.apache.xml.utils.StringBufferPool r0;

        r0 := @this: org.apache.xml.utils.StringBufferPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static synchronized org.apache.xml.utils.FastStringBuffer get()
    {
        java.lang.Object $r1;
        org.apache.xml.utils.FastStringBuffer $r2;
        org.apache.xml.utils.ObjectPool $r0;

        $r0 = <org.apache.xml.utils.StringBufferPool: org.apache.xml.utils.ObjectPool m_stringBufPool>;

        $r1 = virtualinvoke $r0.<org.apache.xml.utils.ObjectPool: java.lang.Object getInstance()>();

        $r2 = (org.apache.xml.utils.FastStringBuffer) $r1;

        return $r2;
    }

    public static synchronized void free(org.apache.xml.utils.FastStringBuffer)
    {
        org.apache.xml.utils.FastStringBuffer r0;
        org.apache.xml.utils.ObjectPool $r1;

        r0 := @parameter0: org.apache.xml.utils.FastStringBuffer;

        virtualinvoke r0.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

        $r1 = <org.apache.xml.utils.StringBufferPool: org.apache.xml.utils.ObjectPool m_stringBufPool>;

        virtualinvoke $r1.<org.apache.xml.utils.ObjectPool: void freeInstance(java.lang.Object)>(r0);

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r1, $r2;
        org.apache.xml.utils.ObjectPool $r0;

        $r0 = new org.apache.xml.utils.ObjectPool;

        $r1 = <org.apache.xml.utils.StringBufferPool: java.lang.Class class$org$apache$xml$utils$FastStringBuffer>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <org.apache.xml.utils.StringBufferPool: java.lang.Class class$(java.lang.String)>("org.apache.xml.utils.FastStringBuffer");

        <org.apache.xml.utils.StringBufferPool: java.lang.Class class$org$apache$xml$utils$FastStringBuffer> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.xml.utils.StringBufferPool: java.lang.Class class$org$apache$xml$utils$FastStringBuffer>;

     label2:
        specialinvoke $r0.<org.apache.xml.utils.ObjectPool: void <init>(java.lang.Class)>($r2);

        <org.apache.xml.utils.StringBufferPool: org.apache.xml.utils.ObjectPool m_stringBufPool> = $r0;

        return;
    }
}
