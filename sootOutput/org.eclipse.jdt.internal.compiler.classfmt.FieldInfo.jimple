public class org.eclipse.jdt.internal.compiler.classfmt.FieldInfo extends org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct implements org.eclipse.jdt.internal.compiler.env.IBinaryField, java.lang.Comparable
{
    protected int accessFlags;
    protected int attributeBytes;
    protected org.eclipse.jdt.internal.compiler.impl.Constant constant;
    protected char[] descriptor;
    protected char[] name;
    protected char[] signature;
    protected int signatureUtf8Offset;
    protected long tagBits;
    protected java.lang.Object wrappedConstantValue;

    public static org.eclipse.jdt.internal.compiler.classfmt.FieldInfo createField(byte[], int[], int)
    {
        byte[] r1;
        int[] r2;
        int i0;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] $r3;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo $r0;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation $r4;

        r1 := @parameter0: byte[];

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        $r0 = new org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: void <init>(byte[],int[],int)>(r1, r2, i0);

        $r3 = specialinvoke $r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] readAttributes()>();

        if $r3 != null goto label1;

        return $r0;

     label1:
        $r4 = new org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation;

        specialinvoke $r4.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: void <init>(org.eclipse.jdt.internal.compiler.classfmt.FieldInfo,org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[])>($r0, $r3);

        return $r4;
    }

    protected void <init>(byte[], int[], int)
    {
        byte[] r1;
        int[] r2;
        int i0, $i2, $i4;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        r1 := @parameter0: byte[];

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct: void <init>(byte[],int[],int)>(r1, r2, i0);

        $i2 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int accessFlags> = $i2;

        $i4 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int signatureUtf8Offset> = $i4;

        return;
    }

    private org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] decodeAnnotations(int, boolean)
    {
        byte[] $r3;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] $r4, $r5, r6;
        long l6, $l10, $l11;
        byte $b7;
        int[] $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i8, $i9, $i12, i13, i14, i15;
        boolean z0;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = i0 + 6;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>($i1);

        if $i2 <= 0 goto label7;

        i13 = i0 + 8;

        r6 = (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[]) null;

        i14 = 0;

        i15 = 0;

        goto label5;

     label1:
        $r1 = new org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: byte[] reference>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int[] constantPoolOffsets>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int structOffset>;

        $i4 = i13 + $i3;

        specialinvoke $r1.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: void <init>(byte[],int[],int,boolean,boolean)>($r3, $r2, $i4, z0, 0);

        $i5 = $r1.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        i13 = i13 + $i5;

        l6 = $r1.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long standardAnnotationTagBits>;

        $b7 = l6 cmp 0L;

        if $b7 == 0 goto label2;

        $l10 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: long tagBits>;

        $l11 = $l10 | l6;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: long tagBits> = $l11;

        goto label4;

     label2:
        if r6 != null goto label3;

        $i9 = $i2 - i15;

        r6 = newarray (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo)[$i9];

     label3:
        $i8 = i14;

        i14 = i14 + 1;

        r6[$i8] = $r1;

     label4:
        i15 = i15 + 1;

     label5:
        if i15 < $i2 goto label1;

        if r6 == null goto label7;

        $i12 = lengthof r6;

        if i14 == $i12 goto label6;

        $r5 = r6;

        $r4 = newarray (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo)[i14];

        r6 = $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, i14);

     label6:
        return r6;

     label7:
        return null;
    }

    public int compareTo(java.lang.Object)
    {
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r1, $r5;
        int $i0;
        char[] $r2, $r6;
        java.lang.Object r4;
        java.lang.String $r0, $r3;

        r1 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        r4 := @parameter0: java.lang.Object;

        $r0 = new java.lang.String;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getName()>();

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        $r3 = new java.lang.String;

        $r5 = (org.eclipse.jdt.internal.compiler.classfmt.FieldInfo) r4;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r6);

        $i0 = virtualinvoke $r0.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        char[] $r2, $r4;
        java.lang.Object r0;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r1, $r3;
        boolean $z0, $z1;

        r1 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getName()>();

        $r3 = (org.eclipse.jdt.internal.compiler.classfmt.FieldInfo) r0;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getName()>();

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r4);

        return $z1;
    }

    public int hashCode()
    {
        int $i0;
        char[] $r1;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getName()>();

        $i0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>($r1);

        return $i0;
    }

    public org.eclipse.jdt.internal.compiler.impl.Constant getConstant()
    {
        org.eclipse.jdt.internal.compiler.impl.Constant $r1, $r2;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: void readConstantAttribute()>();

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        return $r2;
    }

    public char[] getGenericSignature()
    {
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int signatureUtf8Offset>;

        $i7 = (int) -1;

        if $i0 == $i7 goto label2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] signature>;

        if $r1 != null goto label1;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int signatureUtf8Offset>;

        $i4 = $i1 + 3;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int signatureUtf8Offset>;

        $i3 = $i2 + 1;

        $i5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>($i3);

        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] utf8At(int,int)>($i4, $i5);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] signature> = $r3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] signature>;

        return $r2;

     label2:
        return null;
    }

    public int getModifiers()
    {
        int $i0, $i1, $i2, $i4;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int accessFlags>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>(0);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int accessFlags> = $i2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: void readModifierRelatedAttributes()>();

     label1:
        $i1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int accessFlags>;

        return $i1;
    }

    public char[] getName()
    {
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;
        int[] $r3;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6;
        char[] $r1, $r2, $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] name>;

        if $r1 != null goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int[] constantPoolOffsets>;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>(2);

        $i2 = $r3[$i0];

        $i1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int structOffset>;

        i3 = $i2 - $i1;

        $i5 = i3 + 3;

        $i4 = i3 + 1;

        $i6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>($i4);

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] utf8At(int,int)>($i5, $i6);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] name> = $r4;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] name>;

        return $r2;
    }

    public long getTagBits()
    {
        long $l0;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $l0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: long tagBits>;

        return $l0;
    }

    public char[] getTypeName()
    {
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;
        int[] $r3;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6;
        char[] $r1, $r2, $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] descriptor>;

        if $r1 != null goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int[] constantPoolOffsets>;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>(4);

        $i2 = $r3[$i0];

        $i1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int structOffset>;

        i3 = $i2 - $i1;

        $i5 = i3 + 3;

        $i4 = i3 + 1;

        $i6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>($i4);

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] utf8At(int,int)>($i5, $i6);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] descriptor> = $r4;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] descriptor>;

        return $r2;
    }

    public org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation[] getAnnotations()
    {
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        return null;
    }

    public java.lang.Object getWrappedConstantValue()
    {
        java.lang.Float $r5;
        java.lang.Double $r6;
        long $l2;
        java.lang.Integer $r4;
        short $s3;
        byte $b4;
        java.lang.Character $r11;
        java.lang.Long $r7;
        java.lang.Short $r9;
        int $i0, $i1;
        java.lang.Boolean $r8;
        java.lang.String $r3;
        java.lang.Byte $r10;
        boolean $z0, $z1;
        double $d0;
        char $c5;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;
        org.eclipse.jdt.internal.compiler.impl.Constant $r2;
        float $f0;
        java.lang.Object $r1, $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: java.lang.Object wrappedConstantValue>;

        if $r1 != null goto label10;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: boolean hasConstant()>();

        if $z0 == 0 goto label10;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant getConstant()>();

        $i0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.Constant: int typeID()>();

        tableswitch($i0)
        {
            case 2: goto label04;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label07;
            case 6: goto label10;
            case 7: goto label08;
            case 8: goto label06;
            case 9: goto label05;
            case 10: goto label01;
            case 11: goto label09;
            default: goto label10;
        };

     label01:
        $r4 = new java.lang.Integer;

        $i1 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i1);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: java.lang.Object wrappedConstantValue> = $r4;

        goto label10;

     label02:
        $r10 = new java.lang.Byte;

        $b4 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.Constant: byte byteValue()>();

        specialinvoke $r10.<java.lang.Byte: void <init>(byte)>($b4);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: java.lang.Object wrappedConstantValue> = $r10;

        goto label10;

     label03:
        $r9 = new java.lang.Short;

        $s3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.Constant: short shortValue()>();

        specialinvoke $r9.<java.lang.Short: void <init>(short)>($s3);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: java.lang.Object wrappedConstantValue> = $r9;

        goto label10;

     label04:
        $r11 = new java.lang.Character;

        $c5 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.Constant: char charValue()>();

        specialinvoke $r11.<java.lang.Character: void <init>(char)>($c5);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: java.lang.Object wrappedConstantValue> = $r11;

        goto label10;

     label05:
        $r5 = new java.lang.Float;

        $f0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.Constant: float floatValue()>();

        specialinvoke $r5.<java.lang.Float: void <init>(float)>($f0);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: java.lang.Object wrappedConstantValue> = $r5;

        goto label10;

     label06:
        $r6 = new java.lang.Double;

        $d0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        specialinvoke $r6.<java.lang.Double: void <init>(double)>($d0);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: java.lang.Object wrappedConstantValue> = $r6;

        goto label10;

     label07:
        $z1 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        $r8 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: java.lang.Boolean toBoolean(boolean)>($z1);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: java.lang.Object wrappedConstantValue> = $r8;

        goto label10;

     label08:
        $r7 = new java.lang.Long;

        $l2 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        specialinvoke $r7.<java.lang.Long: void <init>(long)>($l2);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: java.lang.Object wrappedConstantValue> = $r7;

        goto label10;

     label09:
        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.Constant: java.lang.String stringValue()>();

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: java.lang.Object wrappedConstantValue> = $r3;

     label10:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: java.lang.Object wrappedConstantValue>;

        return $r12;
    }

    public boolean hasConstant()
    {
        org.eclipse.jdt.internal.compiler.impl.Constant $r1, $r2;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant getConstant()>();

        $r2 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r1 == $r2 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected void initialize()
    {
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int getModifiers()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getName()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant getConstant()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getTypeName()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getGenericSignature()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: void reset()>();

        return;
    }

    public boolean isSynthetic()
    {
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int getModifiers()>();

        $i1 = $i0 & 4096;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] readAttributes()
    {
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] r7, r8, r9;
        int[] $r1, $r4;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;
        long $l21, $l23, $l24, $l25;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, i15, $i16, $i17, $i18, i19, i20, $i22, $i26;
        char $c9;
        char[] $r2, $r3, $r5, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>(6);

        i19 = 8;

        r8 = (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[]) null;

        i20 = 0;

        goto label8;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int[] constantPoolOffsets>;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>(i19);

        $i3 = $r1[$i1];

        $i2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int structOffset>;

        i4 = $i3 - $i2;

        $i6 = i4 + 3;

        $i5 = i4 + 1;

        $i7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>($i5);

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] utf8At(int,int)>($i6, $i7);

        $i8 = lengthof $r2;

        if $i8 <= 0 goto label7;

        $c9 = $r2[0];

        $i26 = (int) $c9;

        tableswitch($i26)
        {
            case 82: goto label3;
            case 83: goto label2;
            default: goto label7;
        };

     label2:
        $r3 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] SignatureName>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r3, $r2);

        if $z0 == 0 goto label7;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int[] constantPoolOffsets>;

        $i10 = i19 + 6;

        $i11 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>($i10);

        $i13 = $r4[$i11];

        $i12 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int structOffset>;

        $i14 = $i13 - $i12;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int signatureUtf8Offset> = $i14;

        goto label7;

     label3:
        r9 = (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[]) null;

        $r5 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] RuntimeVisibleAnnotationsName>;

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r5);

        if $z1 == 0 goto label4;

        r9 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] decodeAnnotations(int,boolean)>(i19, 1);

        goto label5;

     label4:
        $r6 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] RuntimeInvisibleAnnotationsName>;

        $z2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r6);

        if $z2 == 0 goto label5;

        r9 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] decodeAnnotations(int,boolean)>(i19, 0);

     label5:
        if r9 == null goto label7;

        if r8 != null goto label6;

        r8 = r9;

        goto label7;

     label6:
        i15 = lengthof r8;

        $i16 = lengthof r9;

        $i17 = i15 + $i16;

        r7 = newarray (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo)[$i17];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r7, 0, i15);

        $i18 = lengthof r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r9, 0, r7, i15, $i18);

        r8 = r7;

     label7:
        $l21 = (long) i19;

        $i22 = i19 + 2;

        $l23 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: long u4At(int)>($i22);

        $l24 = 6L + $l23;

        $l25 = $l21 + $l24;

        i19 = (int) $l25;

        i20 = i20 + 1;

     label8:
        if i20 < $i0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int attributeBytes> = i19;

        return r8;
    }

    private void readConstantAttribute()
    {
        byte $b38;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;
        org.eclipse.jdt.internal.compiler.impl.Constant $r8, $r9, $r10, $r11, $r13, $r15, $r16, $r17, $r18, $r19, $r20;
        org.eclipse.jdt.internal.compiler.impl.BooleanConstant $r14;
        long $l22, $l43, $l45, $l46, $l47;
        short $s30;
        java.lang.String $r7;
        char[] $r2, $r3, $r6, $r12;
        int[] $r1, $r4, $r5;
        boolean $z0, z1, $z2;
        float $f0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i26, $i27, $i28, $i29, $i31, $i32, $i33, $i34, $i36, $i37, i39, i40, i41, i42, $i44, $i48;
        double $d0;
        char $c25, $c35;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>(6);

        i39 = 8;

        z1 = 0;

        i40 = 0;

        goto label17;

     label01:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int[] constantPoolOffsets>;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>(i39);

        $i3 = $r1[$i1];

        $i2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int structOffset>;

        i41 = $i3 - $i2;

        $i5 = i41 + 3;

        $i4 = i41 + 1;

        $i6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>($i4);

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] utf8At(int,int)>($i5, $i6);

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] ConstantValueName>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r3);

        if $z0 == 0 goto label16;

        z1 = 1;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int[] constantPoolOffsets>;

        $i7 = i39 + 6;

        $i8 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>($i7);

        $i10 = $r4[$i8];

        $i9 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int structOffset>;

        i11 = $i10 - $i9;

        $i12 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u1At(int)>(i11);

        tableswitch($i12)
        {
            case 3: goto label02;
            case 4: goto label12;
            case 5: goto label14;
            case 6: goto label13;
            case 7: goto label16;
            case 8: goto label15;
            default: goto label16;
        };

     label02:
        $r12 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getTypeName()>();

        $i24 = lengthof $r12;

        if $i24 != 1 goto label11;

        $c25 = $r12[0];

        $i48 = (int) $c25;

        lookupswitch($i48)
        {
            case 66: goto label08;
            case 67: goto label07;
            case 73: goto label06;
            case 83: goto label09;
            case 90: goto label03;
            default: goto label10;
        };

     label03:
        $i26 = i11 + 1;

        $i27 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int i4At(int)>($i26);

        if $i27 != 1 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $r14 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.BooleanConstant: org.eclipse.jdt.internal.compiler.impl.BooleanConstant fromValue(boolean)>($z2);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r14;

        goto label16;

     label06:
        $i31 = i11 + 1;

        $i32 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int i4At(int)>($i31);

        $r16 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.IntConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(int)>($i32);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r16;

        goto label16;

     label07:
        $i33 = i11 + 1;

        $i34 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int i4At(int)>($i33);

        $c35 = (char) $i34;

        $r17 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.CharConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(char)>($c35);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r17;

        goto label16;

     label08:
        $i36 = i11 + 1;

        $i37 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int i4At(int)>($i36);

        $b38 = (byte) $i37;

        $r18 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.ByteConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(byte)>($b38);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r18;

        goto label16;

     label09:
        $i28 = i11 + 1;

        $i29 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int i4At(int)>($i28);

        $s30 = (short) $i29;

        $r15 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.ShortConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(short)>($s30);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r15;

        goto label16;

     label10:
        $r19 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r19;

        goto label16;

     label11:
        $r13 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r13;

        goto label16;

     label12:
        $i23 = i11 + 1;

        $f0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: float floatAt(int)>($i23);

        $r11 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.FloatConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(float)>($f0);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r11;

        goto label16;

     label13:
        $i20 = i11 + 1;

        $d0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: double doubleAt(int)>($i20);

        $r9 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.DoubleConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(double)>($d0);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r9;

        goto label16;

     label14:
        $i21 = i11 + 1;

        $l22 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: long i8At(int)>($i21);

        $r10 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.LongConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(long)>($l22);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r10;

        goto label16;

     label15:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int[] constantPoolOffsets>;

        $i13 = i11 + 1;

        $i14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>($i13);

        $i16 = $r5[$i14];

        $i15 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int structOffset>;

        i42 = $i16 - $i15;

        $i18 = i42 + 3;

        $i17 = i42 + 1;

        $i19 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>($i17);

        $r6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] utf8At(int,int)>($i18, $i19);

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r6);

        $r8 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.StringConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(java.lang.String)>($r7);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r8;

     label16:
        $l43 = (long) i39;

        $i44 = i39 + 2;

        $l45 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: long u4At(int)>($i44);

        $l46 = 6L + $l45;

        $l47 = $l43 + $l46;

        i39 = (int) $l47;

        i40 = i40 + 1;

     label17:
        if i40 < $i0 goto label01;

        if z1 != 0 goto label18;

        $r20 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r20;

     label18:
        return;
    }

    private void readModifierRelatedAttributes()
    {
        long $l16, $l18, $l19, $l20;
        int[] $r1;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, i14, i15, $i17, $i21;
        boolean $z0, $z1;
        char $c9;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;
        char[] $r2, $r3, $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>(6);

        i14 = 8;

        i15 = 0;

        goto label5;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int[] constantPoolOffsets>;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>(i14);

        $i3 = $r1[$i1];

        $i2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int structOffset>;

        i4 = $i3 - $i2;

        $i6 = i4 + 3;

        $i5 = i4 + 1;

        $i7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int u2At(int)>($i5);

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] utf8At(int,int)>($i6, $i7);

        $i8 = lengthof $r2;

        if $i8 == 0 goto label4;

        $c9 = $r2[0];

        $i21 = (int) $c9;

        lookupswitch($i21)
        {
            case 68: goto label2;
            case 83: goto label3;
            default: goto label4;
        };

     label2:
        $r4 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] DeprecatedName>;

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r4);

        if $z1 == 0 goto label4;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int accessFlags>;

        $i13 = $i12 | 1048576;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int accessFlags> = $i13;

        goto label4;

     label3:
        $r3 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] SyntheticName>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r3);

        if $z0 == 0 goto label4;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int accessFlags>;

        $i11 = $i10 | 4096;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int accessFlags> = $i11;

     label4:
        $l16 = (long) i14;

        $i17 = i14 + 2;

        $l18 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: long u4At(int)>($i17);

        $l19 = 6L + $l18;

        $l20 = $l16 + $l19;

        i14 = (int) $l20;

        i15 = i15 + 1;

     label5:
        if i15 < $i0 goto label1;

        return;
    }

    public int sizeInBytes()
    {
        int $i0;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int attributeBytes>;

        return $i0;
    }

    public void throwFormatException() throws org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
    {
        org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException $r0;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $r0 = new org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException;

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException: void <init>(int)>(17);

        throw $r0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0;
        java.lang.Class $r2;
        java.lang.String $r3, $r4;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        $r0 = new java.lang.StringBuffer;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: void toStringContent(java.lang.StringBuffer)>($r0);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    protected void toStringContent(java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r0;
        org.eclipse.jdt.internal.compiler.impl.Constant $r20;
        java.lang.StringBuffer r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r16, $r18, $r19, $r21, $r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r4, $r12, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;
        char[] $r14, $r17;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        r1 := @parameter0: java.lang.StringBuffer;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int getModifiers()>();

        $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

        $r3 = new java.lang.StringBuffer;

        $i1 = $i0 & 1048576;

        if $i1 == 0 goto label01;

        $r23 = "deprecated ";

        goto label02;

     label01:
        $r23 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label02:
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r23);

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>($r4);

        $i2 = $i0 & 1;

        if $i2 != 1 goto label03;

        $r24 = "public ";

        goto label04;

     label03:
        $r24 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label04:
        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $i3 = $i0 & 2;

        if $i3 != 2 goto label05;

        $r25 = "private ";

        goto label06;

     label05:
        $r25 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label06:
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $i4 = $i0 & 4;

        if $i4 != 4 goto label07;

        $r26 = "protected ";

        goto label08;

     label07:
        $r26 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label08:
        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $i5 = $i0 & 8;

        if $i5 != 8 goto label09;

        $r27 = "static ";

        goto label10;

     label09:
        $r27 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label10:
        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $i6 = $i0 & 16;

        if $i6 != 16 goto label11;

        $r28 = "final ";

        goto label12;

     label11:
        $r28 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label12:
        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $i7 = $i0 & 64;

        if $i7 != 64 goto label13;

        $r29 = "volatile ";

        goto label14;

     label13:
        $r29 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label14:
        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $i8 = $i0 & 128;

        if $i8 != 128 goto label15;

        $r30 = "transient ";

        goto label16;

     label15:
        $r30 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label16:
        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getTypeName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r17 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] getName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r20 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant getConstant()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        return;
    }
}
