public abstract class org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor extends org.springframework.aop.support.AbstractPointcutAdvisor implements org.springframework.beans.factory.BeanFactoryAware
{
    private java.lang.String adviceBeanName;
    private org.springframework.beans.factory.BeanFactory beanFactory;
    private transient org.aopalliance.aop.Advice advice;
    private transient volatile java.lang.Object adviceMonitor;

    public void <init>()
    {
        java.lang.Object $r1;
        org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor r0;

        r0 := @this: org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor;

        specialinvoke r0.<org.springframework.aop.support.AbstractPointcutAdvisor: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: java.lang.Object adviceMonitor> = $r1;

        return;
    }

    public void setAdviceBeanName(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor r0;

        r0 := @this: org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: java.lang.String adviceBeanName> = r1;

        return;
    }

    public java.lang.String getAdviceBeanName()
    {
        java.lang.String $r1;
        org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor r0;

        r0 := @this: org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor;

        $r1 = r0.<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: java.lang.String adviceBeanName>;

        return $r1;
    }

    public void setBeanFactory(org.springframework.beans.factory.BeanFactory)
    {
        org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor r0;
        org.springframework.beans.factory.BeanFactory r1;

        r0 := @this: org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor;

        r1 := @parameter0: org.springframework.beans.factory.BeanFactory;

        r0.<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: org.springframework.beans.factory.BeanFactory beanFactory> = r1;

        return;
    }

    public org.aopalliance.aop.Advice getAdvice()
    {
        java.lang.Throwable $r9;
        org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor r0;
        org.springframework.beans.factory.BeanFactory $r4, $r6;
        org.aopalliance.aop.Advice $r2, $r8, $r10;
        java.lang.Object $r1, $r7;
        java.lang.String $r3, $r5;
        boolean $z0;

        r0 := @this: org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor;

        $r1 = r0.<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: java.lang.Object adviceMonitor>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: org.aopalliance.aop.Advice advice>;

        if $r2 != null goto label4;

        $r3 = r0.<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: java.lang.String adviceBeanName>;

        if $r3 == null goto label4;

        $r4 = r0.<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: org.springframework.beans.factory.BeanFactory beanFactory>;

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z0, "BeanFactory must be set to resolve \'adviceBeanName\'");

        $r6 = r0.<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r5 = r0.<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: java.lang.String adviceBeanName>;

        $r7 = interfaceinvoke $r6.<org.springframework.beans.factory.BeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>($r5, class "Lorg/aopalliance/aop/Advice;");

        $r8 = (org.aopalliance.aop.Advice) $r7;

        r0.<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: org.aopalliance.aop.Advice advice> = $r8;

     label4:
        $r10 = r0.<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: org.aopalliance.aop.Advice advice>;

        exitmonitor $r1;

     label5:
        return $r10;

     label6:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public java.lang.String toString()
    {
        org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor r1;
        java.lang.StringBuilder $r0, $r5, $r7, $r8;
        java.lang.Class $r2;
        java.lang.String $r3, $r4, $r6, $r9;

        r1 := @this: org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor;

        $r0 = new java.lang.StringBuilder;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": advice bean \'");

        $r6 = virtualinvoke r1.<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: java.lang.String getAdviceBeanName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream r0;
        java.lang.Object $r2;
        org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor r1;

        r1 := @this: org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r1.<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: java.lang.Object adviceMonitor> = $r2;

        return;
    }
}
