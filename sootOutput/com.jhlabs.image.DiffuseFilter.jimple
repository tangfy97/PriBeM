public class com.jhlabs.image.DiffuseFilter extends com.jhlabs.image.TransformFilter
{
    public float[] sinTable;
    public float[] cosTable;
    public float scale;

    public void <init>()
    {
        com.jhlabs.image.DiffuseFilter r0;

        r0 := @this: com.jhlabs.image.DiffuseFilter;

        specialinvoke r0.<com.jhlabs.image.TransformFilter: void <init>()>();

        r0.<com.jhlabs.image.DiffuseFilter: float scale> = 4.0F;

        virtualinvoke r0.<com.jhlabs.image.TransformFilter: void setEdgeAction(int)>(1);

        return;
    }

    public void setScale(float)
    {
        float f0;
        com.jhlabs.image.DiffuseFilter r0;

        r0 := @this: com.jhlabs.image.DiffuseFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.DiffuseFilter: float scale> = f0;

        return;
    }

    public float getScale()
    {
        float $f0;
        com.jhlabs.image.DiffuseFilter r0;

        r0 := @this: com.jhlabs.image.DiffuseFilter;

        $f0 = r0.<com.jhlabs.image.DiffuseFilter: float scale>;

        return $f0;
    }

    protected void transformInverse(int, int, float[])
    {
        float[] r0, $r2, $r3;
        com.jhlabs.image.DiffuseFilter r1;
        int i0, i1, i2;
        double $d0, $d1, $d2;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r1 := @this: com.jhlabs.image.DiffuseFilter;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        r0 := @parameter2: float[];

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d1 = $d0 * 255.0;

        i0 = (int) $d1;

        $d2 = staticinvoke <java.lang.Math: double random()>();

        f0 = (float) $d2;

        $f3 = (float) i1;

        $r2 = r1.<com.jhlabs.image.DiffuseFilter: float[] sinTable>;

        $f1 = $r2[i0];

        $f2 = f0 * $f1;

        $f4 = $f3 + $f2;

        r0[0] = $f4;

        $f7 = (float) i2;

        $r3 = r1.<com.jhlabs.image.DiffuseFilter: float[] cosTable>;

        $f5 = $r3[i0];

        $f6 = f0 * $f5;

        $f8 = $f7 + $f6;

        r0[1] = $f8;

        return;
    }

    public java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)
    {
        float[] $r1, $r2, $r6, $r7;
        com.jhlabs.image.DiffuseFilter r0;
        int i0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        java.awt.image.BufferedImage r3, r4, $r5;
        float $f0, $f1, f2, $f3, $f4, $f5, $f6;

        r0 := @this: com.jhlabs.image.DiffuseFilter;

        r3 := @parameter0: java.awt.image.BufferedImage;

        r4 := @parameter1: java.awt.image.BufferedImage;

        $r1 = newarray (float)[256];

        r0.<com.jhlabs.image.DiffuseFilter: float[] sinTable> = $r1;

        $r2 = newarray (float)[256];

        r0.<com.jhlabs.image.DiffuseFilter: float[] cosTable> = $r2;

        i0 = 0;

     label1:
        if i0 >= 256 goto label2;

        $f0 = (float) i0;

        $f1 = 6.2831855F * $f0;

        f2 = $f1 / 256.0F;

        $r6 = r0.<com.jhlabs.image.DiffuseFilter: float[] sinTable>;

        $f3 = r0.<com.jhlabs.image.DiffuseFilter: float scale>;

        $d1 = (double) $f3;

        $d0 = (double) f2;

        $d2 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        $d3 = $d1 * $d2;

        $f4 = (float) $d3;

        $r6[i0] = $f4;

        $r7 = r0.<com.jhlabs.image.DiffuseFilter: float[] cosTable>;

        $f5 = r0.<com.jhlabs.image.DiffuseFilter: float scale>;

        $d5 = (double) $f5;

        $d4 = (double) f2;

        $d6 = staticinvoke <java.lang.Math: double cos(double)>($d4);

        $d7 = $d5 * $d6;

        $f6 = (float) $d7;

        $r7[i0] = $f6;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r5 = specialinvoke r0.<com.jhlabs.image.TransformFilter: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>(r3, r4);

        return $r5;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.DiffuseFilter r0;

        r0 := @this: com.jhlabs.image.DiffuseFilter;

        return "Distort/Diffuse...";
    }
}
