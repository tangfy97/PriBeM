public abstract class com.google.wave.api.AbstractRobot extends javax.servlet.http.HttpServlet implements com.google.wave.api.event.EventHandler
{
    public static final java.lang.String JSON_MIME_TYPE;
    public static final java.lang.String TEXT_MIME_TYPE;
    public static final java.lang.String XML_MIME_TYPE;
    public static final java.lang.String UTF_8;
    public static final java.lang.String NAME_QUERY_PARAMETER_KEY;
    public static final java.lang.String SECURITY_TOKEN_PARAMETER_KEY;
    public static final java.lang.String RPC_PATH;
    public static final java.lang.String PROFILE_PATH;
    public static final java.lang.String CAPABILITIES_PATH;
    public static final java.lang.String VERIFY_TOKEN_PATH;
    public static final java.lang.String DEFAULT_AVATAR;
    private static final java.util.logging.Logger LOG;
    private static final com.google.gson.Gson SERIALIZER;
    private java.util.Map capabilityMap;
    private java.lang.String version;
    private com.google.wave.api.WaveService waveService;
    private java.lang.String verificationToken;
    private java.lang.String securityToken;
    private boolean allowUnsignedRequests;

    protected void <init>()
    {
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        specialinvoke r0.<javax.servlet.http.HttpServlet: void <init>()>();

        r0.<com.google.wave.api.AbstractRobot: boolean allowUnsignedRequests> = 1;

        virtualinvoke r0.<com.google.wave.api.AbstractRobot: void initRobot()>();

        return;
    }

    protected void initRobot()
    {
        com.google.wave.api.WaveService $r3;
        java.util.Map $r1;
        java.lang.String $r2, $r4;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        $r1 = virtualinvoke r0.<com.google.wave.api.AbstractRobot: java.util.Map computeCapabilityMap()>();

        r0.<com.google.wave.api.AbstractRobot: java.util.Map capabilityMap> = $r1;

        $r2 = virtualinvoke r0.<com.google.wave.api.AbstractRobot: java.lang.String computeHash()>();

        r0.<com.google.wave.api.AbstractRobot: java.lang.String version> = $r2;

        $r3 = new com.google.wave.api.WaveService;

        $r4 = r0.<com.google.wave.api.AbstractRobot: java.lang.String version>;

        specialinvoke $r3.<com.google.wave.api.WaveService: void <init>(java.lang.String)>($r4);

        r0.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService> = $r3;

        return;
    }

    public java.util.List submit(com.google.wave.api.Wavelet, java.lang.String) throws java.io.IOException
    {
        java.util.List $r4;
        com.google.wave.api.WaveService $r3;
        java.lang.String r2;
        com.google.wave.api.Wavelet r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.Wavelet;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r4 = virtualinvoke $r3.<com.google.wave.api.WaveService: java.util.List submit(com.google.wave.api.Wavelet,java.lang.String)>(r1, r2);

        return $r4;
    }

    public com.google.wave.api.Wavelet blindWavelet(org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.id.WaveId r1;
        com.google.wave.api.WaveService $r3;
        org.waveprotocol.wave.model.id.WaveletId r2;
        com.google.wave.api.Wavelet $r4;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        $r3 = r0.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r4 = virtualinvoke $r3.<com.google.wave.api.WaveService: com.google.wave.api.Wavelet blindWavelet(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId)>(r1, r2);

        return $r4;
    }

    public com.google.wave.api.Wavelet blindWavelet(org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId, java.lang.String)
    {
        org.waveprotocol.wave.model.id.WaveId r1;
        com.google.wave.api.WaveService $r4;
        org.waveprotocol.wave.model.id.WaveletId r2;
        java.lang.String r3;
        com.google.wave.api.Wavelet $r5;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r5 = virtualinvoke $r4.<com.google.wave.api.WaveService: com.google.wave.api.Wavelet blindWavelet(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String)>(r1, r2, r3);

        return $r5;
    }

    public com.google.wave.api.Wavelet blindWavelet(org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId, java.lang.String, java.util.Map)
    {
        org.waveprotocol.wave.model.id.WaveId r1;
        com.google.wave.api.WaveService $r5;
        java.util.Map r4;
        org.waveprotocol.wave.model.id.WaveletId r2;
        java.lang.String r3;
        com.google.wave.api.Wavelet $r6;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Map;

        $r5 = r0.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r6 = virtualinvoke $r5.<com.google.wave.api.WaveService: com.google.wave.api.Wavelet blindWavelet(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String,java.util.Map)>(r1, r2, r3, r4);

        return $r6;
    }

    public com.google.wave.api.Wavelet blindWavelet(org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId, java.lang.String, java.util.Map, java.util.Map)
    {
        org.waveprotocol.wave.model.id.WaveId r1;
        org.waveprotocol.wave.model.id.WaveletId r2;
        com.google.wave.api.Wavelet $r7;
        com.google.wave.api.WaveService $r6;
        java.util.Map r4, r5;
        java.lang.String r3;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Map;

        r5 := @parameter4: java.util.Map;

        $r6 = r0.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r7 = virtualinvoke $r6.<com.google.wave.api.WaveService: com.google.wave.api.Wavelet blindWavelet(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String,java.util.Map,java.util.Map)>(r1, r2, r3, r4, r5);

        return $r7;
    }

    public com.google.wave.api.Wavelet newWave(java.lang.String, java.util.Set)
    {
        com.google.wave.api.WaveService $r3;
        java.util.Set r2;
        java.lang.String r1;
        com.google.wave.api.Wavelet $r4;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        $r3 = r0.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r4 = virtualinvoke $r3.<com.google.wave.api.WaveService: com.google.wave.api.Wavelet newWave(java.lang.String,java.util.Set)>(r1, r2);

        return $r4;
    }

    public com.google.wave.api.Wavelet newWave(java.lang.String, java.util.Set, java.lang.String)
    {
        com.google.wave.api.WaveService $r4;
        java.util.Set r2;
        java.lang.String r1, r3;
        com.google.wave.api.Wavelet $r5;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r5 = virtualinvoke $r4.<com.google.wave.api.WaveService: com.google.wave.api.Wavelet newWave(java.lang.String,java.util.Set,java.lang.String)>(r1, r2, r3);

        return $r5;
    }

    public com.google.wave.api.Wavelet newWave(java.lang.String, java.util.Set, java.lang.String, java.lang.String)
    {
        com.google.wave.api.WaveService $r5;
        java.util.Set r2;
        java.lang.String r1, r3, r4;
        com.google.wave.api.Wavelet $r6;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = r0.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r6 = virtualinvoke $r5.<com.google.wave.api.WaveService: com.google.wave.api.Wavelet newWave(java.lang.String,java.util.Set,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        return $r6;
    }

    public com.google.wave.api.Wavelet newWave(java.lang.String, java.util.Set, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException, org.waveprotocol.wave.model.id.InvalidIdException
    {
        java.util.Set r2;
        com.google.wave.api.Wavelet $r7;
        com.google.wave.api.WaveService $r6;
        java.lang.String r1, r3, r4, r5;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $r6 = r0.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r7 = virtualinvoke $r6.<com.google.wave.api.WaveService: com.google.wave.api.Wavelet newWave(java.lang.String,java.util.Set,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5);

        return $r7;
    }

    public com.google.wave.api.SearchResult search(java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.String) throws java.io.IOException
    {
        com.google.wave.api.WaveService $r5;
        com.google.wave.api.SearchResult $r6;
        java.lang.String r1, r4;
        java.lang.Integer r2, r3;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Integer;

        r3 := @parameter2: java.lang.Integer;

        r4 := @parameter3: java.lang.String;

        $r5 = r0.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r6 = virtualinvoke $r5.<com.google.wave.api.WaveService: com.google.wave.api.SearchResult search(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String)>(r1, r2, r3, r4);

        return $r6;
    }

    public com.google.wave.api.Wavelet fetchWavelet(org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId, java.lang.String) throws java.io.IOException
    {
        org.waveprotocol.wave.model.id.WaveId r1;
        com.google.wave.api.WaveService $r4;
        org.waveprotocol.wave.model.id.WaveletId r2;
        java.lang.String r3;
        com.google.wave.api.Wavelet $r5;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r5 = virtualinvoke $r4.<com.google.wave.api.WaveService: com.google.wave.api.Wavelet fetchWavelet(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String)>(r1, r2, r3);

        return $r5;
    }

    public com.google.wave.api.Wavelet fetchWavelet(org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.waveprotocol.wave.model.id.WaveId r1;
        com.google.wave.api.WaveService $r5;
        org.waveprotocol.wave.model.id.WaveletId r2;
        java.lang.String r3, r4;
        com.google.wave.api.Wavelet $r6;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = r0.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r6 = virtualinvoke $r5.<com.google.wave.api.WaveService: com.google.wave.api.Wavelet fetchWavelet(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        return $r6;
    }

    protected void doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        javax.servlet.http.HttpServletRequest r0;
        javax.servlet.http.HttpServletResponse r2;
        java.lang.String $r1;
        boolean $z0;
        com.google.wave.api.AbstractRobot r3;

        r3 := @this: com.google.wave.api.AbstractRobot;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("/_wave/robot/jsonrpc");

        if $z0 == 0 goto label1;

        specialinvoke r3.<com.google.wave.api.AbstractRobot: void processRpc(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r0, r2);

        goto label2;

     label1:
        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(404);

     label2:
        return;
    }

    protected void doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        javax.servlet.http.HttpServletRequest r0;
        javax.servlet.http.HttpServletResponse r2;
        java.lang.String $r1;
        boolean $z0, $z1, $z2;
        com.google.wave.api.AbstractRobot r3;

        r3 := @this: com.google.wave.api.AbstractRobot;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("/_wave/robot/profile");

        if $z0 == 0 goto label1;

        specialinvoke r3.<com.google.wave.api.AbstractRobot: void processProfile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r0, r2);

        goto label4;

     label1:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("/_wave/capabilities.xml");

        if $z1 == 0 goto label2;

        specialinvoke r3.<com.google.wave.api.AbstractRobot: void processCapabilities(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r0, r2);

        goto label4;

     label2:
        $z2 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("/_wave/verify_token");

        if $z2 == 0 goto label3;

        specialinvoke r3.<com.google.wave.api.AbstractRobot: void processVerifyToken(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r0, r2);

        goto label4;

     label3:
        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(404);

     label4:
        return;
    }

    protected com.google.wave.api.ParticipantProfile getCustomProfile(java.lang.String)
    {
        java.lang.String r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    protected java.lang.String getRobotAvatarUrl()
    {
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        return "https://wave.google.com/a/wavesandbox.com/static/images/profiles/rusty.png";
    }

    protected void setupVerificationToken(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r0.<com.google.wave.api.AbstractRobot: java.lang.String verificationToken> = r1;

        r0.<com.google.wave.api.AbstractRobot: java.lang.String securityToken> = r2;

        return;
    }

    protected void setupOAuth(java.lang.String, java.lang.String, java.lang.String)
    {
        com.google.wave.api.WaveService $r4;
        java.lang.String r1, r2, r3;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        virtualinvoke $r4.<com.google.wave.api.WaveService: void setupOAuth(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        virtualinvoke r0.<com.google.wave.api.AbstractRobot: void setAllowUnsignedRequests(boolean)>(0);

        return;
    }

    protected void setupOAuth(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.google.wave.api.AbstractRobot: void setupOAuth(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, "https://www-opensocial.googleusercontent.com/api/rpc");

        return;
    }

    protected void setAllowUnsignedRequests(boolean)
    {
        com.google.wave.api.WaveService $r1;
        java.util.Map $r2;
        java.lang.IllegalArgumentException $r3;
        boolean z0, $z1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $r1 = r0.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r2 = virtualinvoke $r1.<com.google.wave.api.WaveService: java.util.Map getConsumerDataMap()>();

        $z1 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Please call AbstractRobot.setupOAuth() first to setup the consumer key and secret to validate the request.");

        throw $r3;

     label1:
        r0.<com.google.wave.api.AbstractRobot: boolean allowUnsignedRequests> = z0;

        return;
    }

    protected boolean isUnsignedRequestsAllowed()
    {
        com.google.wave.api.AbstractRobot r0;
        boolean $z0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        $z0 = r0.<com.google.wave.api.AbstractRobot: boolean allowUnsignedRequests>;

        return $z0;
    }

    private void processVerifyToken(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        javax.servlet.http.HttpServletRequest r5;
        java.lang.String $r1, $r4, $r6, $r7, $r9, $r10, $r17, $r20;
        com.google.wave.api.AbstractRobot r0;
        boolean $z0, $z1;
        java.io.PrintWriter $r8;
        javax.servlet.http.HttpServletResponse r3;
        java.io.IOException $r21;
        java.util.logging.Logger $r2, $r12;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r16, $r18, $r19;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r5 := @parameter0: javax.servlet.http.HttpServletRequest;

        r3 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r1 = r0.<com.google.wave.api.AbstractRobot: java.lang.String verificationToken>;

        if $r1 == null goto label1;

        $r4 = r0.<com.google.wave.api.AbstractRobot: java.lang.String verificationToken>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r2 = <com.google.wave.api.AbstractRobot: java.util.logging.Logger LOG>;

        virtualinvoke $r2.<java.util.logging.Logger: void info(java.lang.String)>("Please register a verification token by calling AbstractRobot.setVerificationToken().");

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(500);

        return;

     label2:
        $r6 = interfaceinvoke r5.<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("st");

        $r7 = r0.<com.google.wave.api.AbstractRobot: java.lang.String securityToken>;

        if $r7 == null goto label3;

        $r10 = r0.<com.google.wave.api.AbstractRobot: java.lang.String securityToken>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label3;

        $r12 = <com.google.wave.api.AbstractRobot: java.util.logging.Logger LOG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The incoming security token ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match the ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected security token ");

        $r17 = r0.<com.google.wave.api.AbstractRobot: java.lang.String securityToken>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.util.logging.Logger: void info(java.lang.String)>($r20);

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(401);

        return;

     label3:
        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("text/plain");

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setCharacterEncoding(java.lang.String)>("UTF-8");

     label4:
        $r8 = interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: java.io.PrintWriter getWriter()>();

        $r9 = r0.<com.google.wave.api.AbstractRobot: java.lang.String verificationToken>;

        virtualinvoke $r8.<java.io.PrintWriter: void write(java.lang.String)>($r9);

     label5:
        goto label7;

     label6:
        $r21 := @caughtexception;

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(500);

        return;

     label7:
        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(200);

        return;

        catch java.io.IOException from label4 to label5 with label6;
    }

    private void processCapabilities(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        java.util.Map $r5, $r9, $r14;
        com.google.wave.api.WaveService$ConsumerData r47;
        boolean $z0, $z1, $z2, $z3, z4;
        java.io.PrintWriter $r11;
        com.google.wave.api.Context r42;
        java.util.Collection $r15;
        java.util.Set $r6;
        com.google.wave.api.event.EventHandler$Capability r36;
        com.google.wave.api.WaveService $r8, $r13;
        com.google.wave.api.ProtocolVersion $r3;
        java.lang.StringBuilder $r0, $r18, $r19, $r21, $r22, $r24, $r25, $r28, $r29, $r32, $r33;
        javax.servlet.http.HttpServletRequest r45;
        com.google.wave.api.Context[] $r37, $r41;
        int $i0, i1, i2;
        java.lang.String $r2, $r4, $r12, $r20, $r23, $r26, $r31, $r34, $r38, $r39, $r40, $r43;
        com.google.wave.api.AbstractRobot r1;
        java.util.Map$Entry r46;
        java.util.Iterator $r7, $r16;
        javax.servlet.http.HttpServletResponse r10;
        java.io.IOException $r44;
        java.lang.Object $r17, $r27, $r30, $r35;

        r1 := @this: com.google.wave.api.AbstractRobot;

        r45 := @parameter0: javax.servlet.http.HttpServletRequest;

        r10 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<?xml version=\"1.0\"?>\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<w:robot xmlns:w=\"http://wave.google.com/extensions/robots/1.0\">\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <w:version>");

        $r2 = r1.<com.google.wave.api.AbstractRobot: java.lang.String version>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</w:version>\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <w:protocolversion>");

        $r3 = <com.google.wave.api.WaveService: com.google.wave.api.ProtocolVersion PROTOCOL_VERSION>;

        $r4 = virtualinvoke $r3.<com.google.wave.api.ProtocolVersion: java.lang.String getVersionString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</w:protocolversion>\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <w:capabilities>\n");

        $r5 = r1.<com.google.wave.api.AbstractRobot: java.util.Map capabilityMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r27 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r46 = (java.util.Map$Entry) $r27;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    <w:capability name=\"");

        $r30 = interfaceinvoke r46.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r31 = (java.lang.String) $r30;

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r35 = interfaceinvoke r46.<java.util.Map$Entry: java.lang.Object getValue()>();

        r36 = (com.google.wave.api.event.EventHandler$Capability) $r35;

        if r36 == null goto label07;

        $r37 = interfaceinvoke r36.<com.google.wave.api.event.EventHandler$Capability: com.google.wave.api.Context[] contexts()>();

        $i0 = lengthof $r37;

        if $i0 == 0 goto label06;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" context=\"");

        z4 = 1;

        $r41 = interfaceinvoke r36.<com.google.wave.api.event.EventHandler$Capability: com.google.wave.api.Context[] contexts()>();

        i1 = lengthof $r41;

        i2 = 0;

     label02:
        if i2 >= i1 goto label05;

        r42 = $r41[i2];

        if z4 == 0 goto label03;

        z4 = 0;

        goto label04;

     label03:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label04:
        $r43 = virtualinvoke r42.<com.google.wave.api.Context: java.lang.String name()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        i2 = i2 + 1;

        goto label02;

     label05:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

     label06:
        $r38 = interfaceinvoke r36.<com.google.wave.api.event.EventHandler$Capability: java.lang.String filter()>();

        if $r38 == null goto label07;

        $r39 = interfaceinvoke r36.<com.google.wave.api.event.EventHandler$Capability: java.lang.String filter()>();

        $z3 = virtualinvoke $r39.<java.lang.String: boolean isEmpty()>();

        if $z3 != 0 goto label07;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" filter=\"");

        $r40 = interfaceinvoke r36.<com.google.wave.api.event.EventHandler$Capability: java.lang.String filter()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

     label07:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/>\n");

        goto label01;

     label08:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  </w:capabilities>\n");

        $r8 = r1.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r9 = virtualinvoke $r8.<com.google.wave.api.WaveService: java.util.Map getConsumerDataMap()>();

        $z1 = interfaceinvoke $r9.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label11;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <w:consumer_keys>\n");

        $r13 = r1.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r14 = virtualinvoke $r13.<com.google.wave.api.WaveService: java.util.Map getConsumerDataMap()>();

        $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Collection values()>();

        $r16 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r47 = (com.google.wave.api.WaveService$ConsumerData) $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    <w:consumer_key for=\"");

        $r20 = virtualinvoke r47.<com.google.wave.api.WaveService$ConsumerData: java.lang.String getRpcServerUrl()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");

        $r23 = virtualinvoke r47.<com.google.wave.api.WaveService$ConsumerData: java.lang.String getConsumerKey()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</w:consumer_key>\n");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        goto label09;

     label10:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  </w:consumer_keys>\n");

     label11:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</w:robot>\n");

        interfaceinvoke r10.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("application/xml");

        interfaceinvoke r10.<javax.servlet.http.HttpServletResponse: void setCharacterEncoding(java.lang.String)>("UTF-8");

     label12:
        $r11 = interfaceinvoke r10.<javax.servlet.http.HttpServletResponse: java.io.PrintWriter getWriter()>();

        $r12 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintWriter: void write(java.lang.String)>($r12);

     label13:
        goto label15;

     label14:
        $r44 := @caughtexception;

        interfaceinvoke r10.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(500);

        return;

     label15:
        interfaceinvoke r10.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(200);

        return;

        catch java.io.IOException from label12 to label13 with label14;
    }

    private void processProfile(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        java.io.PrintWriter $r3;
        javax.servlet.http.HttpServletResponse r2;
        com.google.wave.api.ParticipantProfile $r6, r12;
        java.io.IOException $r11;
        javax.servlet.http.HttpServletRequest r0;
        com.google.gson.Gson $r4;
        java.lang.String $r1, $r5, $r8, $r9, $r10;
        com.google.wave.api.AbstractRobot r7;

        r7 := @this: com.google.wave.api.AbstractRobot;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        r12 = null;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("name");

        if $r1 == null goto label1;

        r12 = virtualinvoke r7.<com.google.wave.api.AbstractRobot: com.google.wave.api.ParticipantProfile getCustomProfile(java.lang.String)>($r1);

     label1:
        if r12 != null goto label2;

        $r6 = new com.google.wave.api.ParticipantProfile;

        $r8 = virtualinvoke r7.<com.google.wave.api.AbstractRobot: java.lang.String getRobotName()>();

        $r9 = virtualinvoke r7.<com.google.wave.api.AbstractRobot: java.lang.String getRobotAvatarUrl()>();

        $r10 = virtualinvoke r7.<com.google.wave.api.AbstractRobot: java.lang.String getRobotProfilePageUrl()>();

        specialinvoke $r6.<com.google.wave.api.ParticipantProfile: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, $r10);

        r12 = $r6;

     label2:
        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("application/json; charset=utf-8");

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setCharacterEncoding(java.lang.String)>("UTF-8");

     label3:
        $r3 = interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: java.io.PrintWriter getWriter()>();

        $r4 = <com.google.wave.api.AbstractRobot: com.google.gson.Gson SERIALIZER>;

        $r5 = virtualinvoke $r4.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r12);

        virtualinvoke $r3.<java.io.PrintWriter: void write(java.lang.String)>($r5);

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(500);

        return;

     label6:
        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(200);

        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    private void processRpc(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        com.google.wave.api.impl.EventMessageBundle $r2;
        javax.servlet.http.HttpServletResponse r8;
        java.io.IOException $r9;
        com.google.wave.api.Wavelet $r3;
        javax.servlet.http.HttpServletRequest r1;
        java.util.List $r7;
        com.google.wave.api.OperationQueue $r4;
        com.google.wave.api.ProtocolVersion $r6;
        java.lang.String $r5;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r8 := @parameter1: javax.servlet.http.HttpServletResponse;

     label1:
        $r2 = specialinvoke r0.<com.google.wave.api.AbstractRobot: com.google.wave.api.impl.EventMessageBundle deserializeEvents(javax.servlet.http.HttpServletRequest)>(r1);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(500);

        return;

     label4:
        $r3 = virtualinvoke $r2.<com.google.wave.api.impl.EventMessageBundle: com.google.wave.api.Wavelet getWavelet()>();

        $r4 = virtualinvoke $r3.<com.google.wave.api.Wavelet: com.google.wave.api.OperationQueue getOperationQueue()>();

        $r6 = <com.google.wave.api.WaveService: com.google.wave.api.ProtocolVersion PROTOCOL_VERSION>;

        $r5 = r0.<com.google.wave.api.AbstractRobot: java.lang.String version>;

        virtualinvoke $r4.<com.google.wave.api.OperationQueue: void notifyRobotInformation(com.google.wave.api.ProtocolVersion,java.lang.String)>($r6, $r5);

        virtualinvoke r0.<com.google.wave.api.AbstractRobot: void processEvents(com.google.wave.api.impl.EventMessageBundle)>($r2);

        $r7 = virtualinvoke $r4.<com.google.wave.api.OperationQueue: java.util.List getPendingOperations()>();

        staticinvoke <com.google.wave.api.AbstractRobot: void serializeOperations(java.util.List,javax.servlet.http.HttpServletResponse)>($r7, r8);

        virtualinvoke $r4.<com.google.wave.api.OperationQueue: void clear()>();

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected void processEvents(com.google.wave.api.impl.EventMessageBundle)
    {
        com.google.wave.api.event.WaveletFetchedEvent $r14;
        com.google.wave.api.impl.EventMessageBundle r0;
        com.google.wave.api.event.FormButtonClickedEvent $r19;
        com.google.wave.api.event.Event r4;
        com.google.wave.api.event.EventType $r6;
        com.google.wave.api.event.WaveletTagsChangedEvent $r10;
        com.google.wave.api.event.WaveletCreatedEvent $r15;
        com.google.wave.api.event.BlipContributorsChangedEvent $r22;
        int[] $r5;
        int $i0, $i1;
        com.google.wave.api.event.WaveletSelfRemovedEvent $r11;
        boolean $z0;
        com.google.wave.api.AbstractRobot r7;
        com.google.wave.api.event.DocumentChangedEvent $r20;
        com.google.wave.api.event.BlipSubmittedEvent $r21;
        java.util.Iterator $r2;
        com.google.wave.api.event.WaveletBlipRemovedEvent $r16;
        com.google.wave.api.event.WaveletTitleChangedEvent $r9;
        com.google.wave.api.event.WaveletParticipantsChangedEvent $r13;
        com.google.wave.api.event.AnnotatedTextChangedEvent $r23;
        com.google.wave.api.event.OperationErrorEvent $r8;
        com.google.wave.api.event.GadgetStateChangedEvent $r18;
        java.util.List $r1;
        com.google.wave.api.event.WaveletBlipCreatedEvent $r17;
        com.google.wave.api.event.WaveletSelfAddedEvent $r12;
        java.lang.Object $r3;

        r7 := @this: com.google.wave.api.AbstractRobot;

        r0 := @parameter0: com.google.wave.api.impl.EventMessageBundle;

        $r1 = virtualinvoke r0.<com.google.wave.api.impl.EventMessageBundle: java.util.List getEvents()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.google.wave.api.event.Event) $r3;

        $r5 = <com.google.wave.api.AbstractRobot$1: int[] $SwitchMap$com$google$wave$api$event$EventType>;

        $r6 = interfaceinvoke r4.<com.google.wave.api.event.Event: com.google.wave.api.event.EventType getType()>();

        $i0 = virtualinvoke $r6.<com.google.wave.api.event.EventType: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label10;
            case 10: goto label11;
            case 11: goto label12;
            case 12: goto label13;
            case 13: goto label14;
            case 14: goto label15;
            case 15: goto label16;
            case 16: goto label17;
            default: goto label18;
        };

     label02:
        $r23 = staticinvoke <com.google.wave.api.event.AnnotatedTextChangedEvent: com.google.wave.api.event.AnnotatedTextChangedEvent as(com.google.wave.api.event.Event)>(r4);

        virtualinvoke r7.<com.google.wave.api.AbstractRobot: void onAnnotatedTextChanged(com.google.wave.api.event.AnnotatedTextChangedEvent)>($r23);

        goto label18;

     label03:
        $r22 = staticinvoke <com.google.wave.api.event.BlipContributorsChangedEvent: com.google.wave.api.event.BlipContributorsChangedEvent as(com.google.wave.api.event.Event)>(r4);

        virtualinvoke r7.<com.google.wave.api.AbstractRobot: void onBlipContributorsChanged(com.google.wave.api.event.BlipContributorsChangedEvent)>($r22);

        goto label18;

     label04:
        $r21 = staticinvoke <com.google.wave.api.event.BlipSubmittedEvent: com.google.wave.api.event.BlipSubmittedEvent as(com.google.wave.api.event.Event)>(r4);

        virtualinvoke r7.<com.google.wave.api.AbstractRobot: void onBlipSubmitted(com.google.wave.api.event.BlipSubmittedEvent)>($r21);

        goto label18;

     label05:
        $r20 = staticinvoke <com.google.wave.api.event.DocumentChangedEvent: com.google.wave.api.event.DocumentChangedEvent as(com.google.wave.api.event.Event)>(r4);

        virtualinvoke r7.<com.google.wave.api.AbstractRobot: void onDocumentChanged(com.google.wave.api.event.DocumentChangedEvent)>($r20);

        goto label18;

     label06:
        $r19 = staticinvoke <com.google.wave.api.event.FormButtonClickedEvent: com.google.wave.api.event.FormButtonClickedEvent as(com.google.wave.api.event.Event)>(r4);

        virtualinvoke r7.<com.google.wave.api.AbstractRobot: void onFormButtonClicked(com.google.wave.api.event.FormButtonClickedEvent)>($r19);

        goto label18;

     label07:
        $r18 = staticinvoke <com.google.wave.api.event.GadgetStateChangedEvent: com.google.wave.api.event.GadgetStateChangedEvent as(com.google.wave.api.event.Event)>(r4);

        virtualinvoke r7.<com.google.wave.api.AbstractRobot: void onGadgetStateChanged(com.google.wave.api.event.GadgetStateChangedEvent)>($r18);

        goto label18;

     label08:
        $r17 = staticinvoke <com.google.wave.api.event.WaveletBlipCreatedEvent: com.google.wave.api.event.WaveletBlipCreatedEvent as(com.google.wave.api.event.Event)>(r4);

        virtualinvoke r7.<com.google.wave.api.AbstractRobot: void onWaveletBlipCreated(com.google.wave.api.event.WaveletBlipCreatedEvent)>($r17);

        goto label18;

     label09:
        $r16 = staticinvoke <com.google.wave.api.event.WaveletBlipRemovedEvent: com.google.wave.api.event.WaveletBlipRemovedEvent as(com.google.wave.api.event.Event)>(r4);

        virtualinvoke r7.<com.google.wave.api.AbstractRobot: void onWaveletBlipRemoved(com.google.wave.api.event.WaveletBlipRemovedEvent)>($r16);

        goto label18;

     label10:
        $r15 = staticinvoke <com.google.wave.api.event.WaveletCreatedEvent: com.google.wave.api.event.WaveletCreatedEvent as(com.google.wave.api.event.Event)>(r4);

        virtualinvoke r7.<com.google.wave.api.AbstractRobot: void onWaveletCreated(com.google.wave.api.event.WaveletCreatedEvent)>($r15);

        goto label18;

     label11:
        $r14 = staticinvoke <com.google.wave.api.event.WaveletFetchedEvent: com.google.wave.api.event.WaveletFetchedEvent as(com.google.wave.api.event.Event)>(r4);

        virtualinvoke r7.<com.google.wave.api.AbstractRobot: void onWaveletFetched(com.google.wave.api.event.WaveletFetchedEvent)>($r14);

        goto label18;

     label12:
        $r13 = staticinvoke <com.google.wave.api.event.WaveletParticipantsChangedEvent: com.google.wave.api.event.WaveletParticipantsChangedEvent as(com.google.wave.api.event.Event)>(r4);

        virtualinvoke r7.<com.google.wave.api.AbstractRobot: void onWaveletParticipantsChanged(com.google.wave.api.event.WaveletParticipantsChangedEvent)>($r13);

        goto label18;

     label13:
        $r12 = staticinvoke <com.google.wave.api.event.WaveletSelfAddedEvent: com.google.wave.api.event.WaveletSelfAddedEvent as(com.google.wave.api.event.Event)>(r4);

        virtualinvoke r7.<com.google.wave.api.AbstractRobot: void onWaveletSelfAdded(com.google.wave.api.event.WaveletSelfAddedEvent)>($r12);

        goto label18;

     label14:
        $r11 = staticinvoke <com.google.wave.api.event.WaveletSelfRemovedEvent: com.google.wave.api.event.WaveletSelfRemovedEvent as(com.google.wave.api.event.Event)>(r4);

        virtualinvoke r7.<com.google.wave.api.AbstractRobot: void onWaveletSelfRemoved(com.google.wave.api.event.WaveletSelfRemovedEvent)>($r11);

        goto label18;

     label15:
        $r10 = staticinvoke <com.google.wave.api.event.WaveletTagsChangedEvent: com.google.wave.api.event.WaveletTagsChangedEvent as(com.google.wave.api.event.Event)>(r4);

        virtualinvoke r7.<com.google.wave.api.AbstractRobot: void onWaveletTagsChanged(com.google.wave.api.event.WaveletTagsChangedEvent)>($r10);

        goto label18;

     label16:
        $r9 = staticinvoke <com.google.wave.api.event.WaveletTitleChangedEvent: com.google.wave.api.event.WaveletTitleChangedEvent as(com.google.wave.api.event.Event)>(r4);

        virtualinvoke r7.<com.google.wave.api.AbstractRobot: void onWaveletTitleChanged(com.google.wave.api.event.WaveletTitleChangedEvent)>($r9);

        goto label18;

     label17:
        $r8 = staticinvoke <com.google.wave.api.event.OperationErrorEvent: com.google.wave.api.event.OperationErrorEvent as(com.google.wave.api.event.Event)>(r4);

        virtualinvoke r7.<com.google.wave.api.AbstractRobot: void onOperationError(com.google.wave.api.event.OperationErrorEvent)>($r8);

     label18:
        goto label01;

     label19:
        return;
    }

    protected java.util.Map computeCapabilityMap()
    {
        java.lang.NoSuchMethodException $r17;
        java.util.HashMap $r0;
        com.google.wave.api.event.EventType $r13;
        java.lang.reflect.Method[] $r2;
        int i0, i1;
        java.lang.String $r6, $r16;
        java.lang.reflect.Method r3, $r8;
        com.google.wave.api.AbstractRobot r4;
        boolean $z0;
        java.lang.Class[] $r7, $r11;
        com.google.wave.api.event.EventHandler$Capability r15;
        java.lang.'annotation'.Annotation $r14;
        java.lang.Class $r1, $r5, $r9, $r10, $r12;

        r4 := @this: com.google.wave.api.AbstractRobot;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = class "Lcom/google/wave/api/event/EventHandler;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        i0 = lengthof $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label8;

        r3 = $r2[i1];

     label2:
        $r5 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.String getName()>();

        $r7 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r8 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r6, $r7);

     label3:
        goto label5;

     label4:
        $r17 := @caughtexception;

        goto label7;

     label5:
        $r9 = class "Lcom/google/wave/api/AbstractRobot;";

        $r10 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $z0 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label6;

        goto label7;

     label6:
        $r11 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r12 = $r11[0];

        $r13 = staticinvoke <com.google.wave.api.event.EventType: com.google.wave.api.event.EventType fromClass(java.lang.Class)>($r12);

        $r14 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/google/wave/api/event/EventHandler$Capability;");

        r15 = (com.google.wave.api.event.EventHandler$Capability) $r14;

        $r16 = virtualinvoke $r13.<com.google.wave.api.event.EventType: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r15);

     label7:
        i1 = i1 + 1;

        goto label1;

     label8:
        return $r0;

        catch java.lang.NoSuchMethodException from label2 to label3 with label4;
    }

    protected java.lang.String computeHash()
    {
        long $l1, $l3, $l5, $l6, $l8, l9, l10;
        com.google.wave.api.Context[] $r11;
        java.util.Map $r1;
        int $i0, i2, $i4, $i7, i11;
        java.lang.String $r4, $r8, $r12, $r14;
        com.google.wave.api.AbstractRobot r0;
        boolean $z0;
        java.util.Map$Entry r6;
        com.google.wave.api.Context r13;
        java.util.Iterator $r3;
        java.util.Set $r2;
        com.google.wave.api.event.EventHandler$Capability r10;
        java.lang.Object $r5, $r7, $r9;

        r0 := @this: com.google.wave.api.AbstractRobot;

        l9 = 0L;

        $r1 = r0.<com.google.wave.api.AbstractRobot: java.util.Map capabilityMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        $i0 = virtualinvoke $r8.<java.lang.String: int hashCode()>();

        l10 = (long) $i0;

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r10 = (com.google.wave.api.event.EventHandler$Capability) $r9;

        if r10 == null goto label4;

        $r11 = interfaceinvoke r10.<com.google.wave.api.event.EventHandler$Capability: com.google.wave.api.Context[] contexts()>();

        i2 = lengthof $r11;

        i11 = 0;

     label2:
        if i11 >= i2 goto label3;

        r13 = $r11[i11];

        $l6 = l10 * 31L;

        $r14 = virtualinvoke r13.<com.google.wave.api.Context: java.lang.String name()>();

        $i7 = virtualinvoke $r14.<java.lang.String: int hashCode()>();

        $l8 = (long) $i7;

        l10 = $l6 + $l8;

        i11 = i11 + 1;

        goto label2;

     label3:
        $l3 = l10 * 31L;

        $r12 = interfaceinvoke r10.<com.google.wave.api.event.EventHandler$Capability: java.lang.String filter()>();

        $i4 = virtualinvoke $r12.<java.lang.String: int hashCode()>();

        $l5 = (long) $i4;

        l10 = $l3 + $l5;

     label4:
        $l1 = l9 * 17L;

        l9 = $l1 + l10;

        goto label1;

     label5:
        $r4 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l9);

        return $r4;
    }

    private com.google.wave.api.impl.EventMessageBundle deserializeEvents(javax.servlet.http.HttpServletRequest) throws java.io.IOException
    {
        com.google.wave.api.impl.EventMessageBundle r9;
        javax.servlet.http.HttpServletRequest r0;
        com.google.gson.Gson $r7;
        java.lang.StringBuffer $r16;
        java.util.Map $r14;
        java.lang.String $r1, $r6, $r10, $r13, $r17, $r18, $r22, $r24;
        com.google.wave.api.AbstractRobot r11;
        boolean $z0, $z1;
        net.oauth.OAuthException $r26;
        java.util.logging.Logger $r3;
        java.lang.IllegalArgumentException $r19, $r25, $r27;
        com.google.wave.api.WaveService $r12, $r15;
        java.lang.StringBuilder $r2, $r4, $r5, $r20, $r21, $r23;
        java.lang.Object $r8;

        r11 := @this: com.google.wave.api.AbstractRobot;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r1 = staticinvoke <com.google.wave.api.AbstractRobot: java.lang.String readRequestBody(javax.servlet.http.HttpServletRequest)>(r0);

        $r3 = <com.google.wave.api.AbstractRobot: java.util.logging.Logger LOG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incoming events: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.logging.Logger: void info(java.lang.String)>($r6);

        $r7 = <com.google.wave.api.AbstractRobot: com.google.gson.Gson SERIALIZER>;

        $r8 = virtualinvoke $r7.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>($r1, class "Lcom/google/wave/api/impl/EventMessageBundle;");

        r9 = (com.google.wave.api.impl.EventMessageBundle) $r8;

        $r10 = virtualinvoke r9.<com.google.wave.api.impl.EventMessageBundle: java.lang.String getRpcServerUrl()>();

        if $r10 != null goto label1;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("RPC server URL is not set in the event bundle.");

        throw $r25;

     label1:
        $z0 = virtualinvoke r11.<com.google.wave.api.AbstractRobot: boolean isUnsignedRequestsAllowed()>();

        if $z0 != 0 goto label5;

        $r12 = r11.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r13 = virtualinvoke r9.<com.google.wave.api.impl.EventMessageBundle: java.lang.String getRpcServerUrl()>();

        $z1 = virtualinvoke $r12.<com.google.wave.api.WaveService: boolean hasConsumerData(java.lang.String)>($r13);

        if $z1 != 0 goto label2;

        $r19 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No consumer key is found for the RPC server URL: ");

        $r22 = virtualinvoke r9.<com.google.wave.api.impl.EventMessageBundle: java.lang.String getRpcServerUrl()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r19;

     label2:
        $r14 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.util.Map getParameterMap()>();

        $r15 = r11.<com.google.wave.api.AbstractRobot: com.google.wave.api.WaveService waveService>;

        $r16 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        $r18 = virtualinvoke r9.<com.google.wave.api.impl.EventMessageBundle: java.lang.String getRpcServerUrl()>();

        virtualinvoke $r15.<com.google.wave.api.WaveService: void validateOAuthRequest(java.lang.String,java.util.Map,java.lang.String,java.lang.String)>($r17, $r14, $r1, $r18);

     label3:
        goto label5;

     label4:
        $r26 := @caughtexception;

        $r27 = new java.lang.IllegalArgumentException;

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Error validating OAuth request", $r26);

        throw $r27;

     label5:
        return r9;

        catch net.oauth.OAuthException from label2 to label3 with label4;
    }

    private static void serializeOperations(java.util.List, javax.servlet.http.HttpServletResponse)
    {
        java.io.PrintWriter $r10;
        javax.servlet.http.HttpServletResponse r9;
        java.io.IOException $r11;
        java.util.logging.Logger $r5;
        java.util.List r0;
        java.lang.reflect.Type $r1;
        com.google.gson.Gson $r2;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String $r3, $r8;

        r0 := @parameter0: java.util.List;

        r9 := @parameter1: javax.servlet.http.HttpServletResponse;

     label1:
        $r2 = <com.google.wave.api.AbstractRobot: com.google.gson.Gson SERIALIZER>;

        $r1 = <com.google.wave.api.impl.GsonFactory: java.lang.reflect.Type OPERATION_REQUEST_LIST_TYPE>;

        $r3 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>(r0, $r1);

        $r5 = <com.google.wave.api.AbstractRobot: java.util.logging.Logger LOG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Outgoing operations: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.logging.Logger: void info(java.lang.String)>($r8);

        interfaceinvoke r9.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("application/json; charset=utf-8");

        interfaceinvoke r9.<javax.servlet.http.HttpServletResponse: void setCharacterEncoding(java.lang.String)>("UTF-8");

        $r10 = interfaceinvoke r9.<javax.servlet.http.HttpServletResponse: java.io.PrintWriter getWriter()>();

        virtualinvoke $r10.<java.io.PrintWriter: void write(java.lang.String)>($r3);

        interfaceinvoke r9.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(200);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        interfaceinvoke r9.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(500);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static java.lang.String readRequestBody(javax.servlet.http.HttpServletRequest) throws java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r1;
        java.lang.StringBuilder $r0;
        java.io.BufferedReader $r2;
        java.lang.String $r3, $r4;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.io.BufferedReader getReader()>();

     label1:
        $r3 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r3 == null goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public void onAnnotatedTextChanged(com.google.wave.api.event.AnnotatedTextChangedEvent)
    {
        com.google.wave.api.event.AnnotatedTextChangedEvent r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.event.AnnotatedTextChangedEvent;

        return;
    }

    public void onBlipContributorsChanged(com.google.wave.api.event.BlipContributorsChangedEvent)
    {
        com.google.wave.api.event.BlipContributorsChangedEvent r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.event.BlipContributorsChangedEvent;

        return;
    }

    public void onBlipSubmitted(com.google.wave.api.event.BlipSubmittedEvent)
    {
        com.google.wave.api.event.BlipSubmittedEvent r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.event.BlipSubmittedEvent;

        return;
    }

    public void onDocumentChanged(com.google.wave.api.event.DocumentChangedEvent)
    {
        com.google.wave.api.event.DocumentChangedEvent r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.event.DocumentChangedEvent;

        return;
    }

    public void onFormButtonClicked(com.google.wave.api.event.FormButtonClickedEvent)
    {
        com.google.wave.api.event.FormButtonClickedEvent r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.event.FormButtonClickedEvent;

        return;
    }

    public void onGadgetStateChanged(com.google.wave.api.event.GadgetStateChangedEvent)
    {
        com.google.wave.api.event.GadgetStateChangedEvent r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.event.GadgetStateChangedEvent;

        return;
    }

    public void onWaveletBlipCreated(com.google.wave.api.event.WaveletBlipCreatedEvent)
    {
        com.google.wave.api.event.WaveletBlipCreatedEvent r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.event.WaveletBlipCreatedEvent;

        return;
    }

    public void onWaveletBlipRemoved(com.google.wave.api.event.WaveletBlipRemovedEvent)
    {
        com.google.wave.api.event.WaveletBlipRemovedEvent r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.event.WaveletBlipRemovedEvent;

        return;
    }

    public void onWaveletCreated(com.google.wave.api.event.WaveletCreatedEvent)
    {
        com.google.wave.api.event.WaveletCreatedEvent r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.event.WaveletCreatedEvent;

        return;
    }

    public void onWaveletFetched(com.google.wave.api.event.WaveletFetchedEvent)
    {
        com.google.wave.api.event.WaveletFetchedEvent r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.event.WaveletFetchedEvent;

        return;
    }

    public void onWaveletParticipantsChanged(com.google.wave.api.event.WaveletParticipantsChangedEvent)
    {
        com.google.wave.api.event.WaveletParticipantsChangedEvent r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.event.WaveletParticipantsChangedEvent;

        return;
    }

    public void onWaveletSelfAdded(com.google.wave.api.event.WaveletSelfAddedEvent)
    {
        com.google.wave.api.event.WaveletSelfAddedEvent r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.event.WaveletSelfAddedEvent;

        return;
    }

    public void onWaveletSelfRemoved(com.google.wave.api.event.WaveletSelfRemovedEvent)
    {
        com.google.wave.api.event.WaveletSelfRemovedEvent r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.event.WaveletSelfRemovedEvent;

        return;
    }

    public void onWaveletTagsChanged(com.google.wave.api.event.WaveletTagsChangedEvent)
    {
        com.google.wave.api.event.WaveletTagsChangedEvent r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.event.WaveletTagsChangedEvent;

        return;
    }

    public void onWaveletTitleChanged(com.google.wave.api.event.WaveletTitleChangedEvent)
    {
        com.google.wave.api.event.WaveletTitleChangedEvent r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.event.WaveletTitleChangedEvent;

        return;
    }

    public void onOperationError(com.google.wave.api.event.OperationErrorEvent)
    {
        com.google.wave.api.event.OperationErrorEvent r1;
        com.google.wave.api.AbstractRobot r0;

        r0 := @this: com.google.wave.api.AbstractRobot;

        r1 := @parameter0: com.google.wave.api.event.OperationErrorEvent;

        return;
    }

    protected abstract java.lang.String getRobotName();

    protected abstract java.lang.String getRobotProfilePageUrl();

    static void <clinit>()
    {
        com.google.wave.api.impl.GsonFactory $r3;
        com.google.gson.Gson $r4;
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        <com.google.wave.api.AbstractRobot: java.lang.String DEFAULT_AVATAR> = "https://wave.google.com/a/wavesandbox.com/static/images/profiles/rusty.png";

        <com.google.wave.api.AbstractRobot: java.lang.String VERIFY_TOKEN_PATH> = "/_wave/verify_token";

        <com.google.wave.api.AbstractRobot: java.lang.String CAPABILITIES_PATH> = "/_wave/capabilities.xml";

        <com.google.wave.api.AbstractRobot: java.lang.String PROFILE_PATH> = "/_wave/robot/profile";

        <com.google.wave.api.AbstractRobot: java.lang.String RPC_PATH> = "/_wave/robot/jsonrpc";

        <com.google.wave.api.AbstractRobot: java.lang.String SECURITY_TOKEN_PARAMETER_KEY> = "st";

        <com.google.wave.api.AbstractRobot: java.lang.String NAME_QUERY_PARAMETER_KEY> = "name";

        <com.google.wave.api.AbstractRobot: java.lang.String UTF_8> = "UTF-8";

        <com.google.wave.api.AbstractRobot: java.lang.String XML_MIME_TYPE> = "application/xml";

        <com.google.wave.api.AbstractRobot: java.lang.String TEXT_MIME_TYPE> = "text/plain";

        <com.google.wave.api.AbstractRobot: java.lang.String JSON_MIME_TYPE> = "application/json; charset=utf-8";

        $r0 = class "Lcom/google/wave/api/AbstractRobot;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.wave.api.AbstractRobot: java.util.logging.Logger LOG> = $r2;

        $r3 = new com.google.wave.api.impl.GsonFactory;

        specialinvoke $r3.<com.google.wave.api.impl.GsonFactory: void <init>()>();

        $r4 = virtualinvoke $r3.<com.google.wave.api.impl.GsonFactory: com.google.gson.Gson create()>();

        <com.google.wave.api.AbstractRobot: com.google.gson.Gson SERIALIZER> = $r4;

        return;
    }
}
