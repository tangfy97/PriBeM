public class com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler extends com.hp.hpl.jena.graph.impl.TransactionHandlerBase implements com.hp.hpl.jena.graph.TransactionHandler
{
    protected final com.hp.hpl.jena.reasoner.BaseInfGraph base;

    public void <init>(com.hp.hpl.jena.reasoner.BaseInfGraph)
    {
        com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler r0;
        com.hp.hpl.jena.reasoner.BaseInfGraph r1;

        r0 := @this: com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.BaseInfGraph;

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.TransactionHandlerBase: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler: com.hp.hpl.jena.reasoner.BaseInfGraph base> = r1;

        return;
    }

    public boolean transactionsSupported()
    {
        com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler r0;
        com.hp.hpl.jena.graph.TransactionHandler $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler: com.hp.hpl.jena.graph.TransactionHandler getBaseHandler()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.TransactionHandler: boolean transactionsSupported()>();

        return $z0;
    }

    protected com.hp.hpl.jena.graph.TransactionHandler getBaseHandler()
    {
        com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler r0;
        com.hp.hpl.jena.reasoner.BaseInfGraph $r1;
        com.hp.hpl.jena.graph.TransactionHandler $r3;
        com.hp.hpl.jena.graph.Graph $r2;

        r0 := @this: com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler;

        $r1 = r0.<com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler: com.hp.hpl.jena.reasoner.BaseInfGraph base>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.reasoner.BaseInfGraph: com.hp.hpl.jena.graph.Graph getRawGraph()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.graph.TransactionHandler getTransactionHandler()>();

        return $r3;
    }

    public void begin()
    {
        com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler r0;
        com.hp.hpl.jena.graph.TransactionHandler $r1;

        r0 := @this: com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler: com.hp.hpl.jena.graph.TransactionHandler getBaseHandler()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.TransactionHandler: void begin()>();

        return;
    }

    public void abort()
    {
        com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler r0;
        com.hp.hpl.jena.graph.TransactionHandler $r1;
        com.hp.hpl.jena.reasoner.BaseInfGraph $r2;

        r0 := @this: com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler: com.hp.hpl.jena.graph.TransactionHandler getBaseHandler()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.TransactionHandler: void abort()>();

        $r2 = r0.<com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler: com.hp.hpl.jena.reasoner.BaseInfGraph base>;

        virtualinvoke $r2.<com.hp.hpl.jena.reasoner.BaseInfGraph: void rebind()>();

        return;
    }

    public void commit()
    {
        com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler r0;
        com.hp.hpl.jena.graph.TransactionHandler $r1;

        r0 := @this: com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.BaseInfGraph$InfTransactionHandler: com.hp.hpl.jena.graph.TransactionHandler getBaseHandler()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.TransactionHandler: void commit()>();

        return;
    }
}
