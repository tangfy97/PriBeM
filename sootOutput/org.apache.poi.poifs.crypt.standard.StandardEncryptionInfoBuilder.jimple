public class org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder extends java.lang.Object implements org.apache.poi.poifs.crypt.EncryptionInfoBuilder
{
    org.apache.poi.poifs.crypt.EncryptionInfo info;
    org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader header;
    org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier verifier;
    org.apache.poi.poifs.crypt.standard.StandardDecryptor decryptor;
    org.apache.poi.poifs.crypt.standard.StandardEncryptor encryptor;

    public void <init>()
    {
        org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder r0;

        r0 := @this: org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void initialize(org.apache.poi.poifs.crypt.EncryptionInfo, org.apache.poi.poifs.filesystem.DocumentInputStream) throws java.io.IOException
    {
        org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader $r3, $r5;
        org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder r0;
        org.apache.poi.poifs.crypt.standard.StandardDecryptor $r6;
        int $i0, $i1, $i2;
        org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier $r4;
        org.apache.poi.poifs.filesystem.DocumentInputStream r2;
        org.apache.poi.poifs.crypt.EncryptionInfo r1;

        r0 := @this: org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder;

        r1 := @parameter0: org.apache.poi.poifs.crypt.EncryptionInfo;

        r2 := @parameter1: org.apache.poi.poifs.filesystem.DocumentInputStream;

        r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.EncryptionInfo info> = r1;

        virtualinvoke r2.<org.apache.poi.poifs.filesystem.DocumentInputStream: int readInt()>();

        $r3 = new org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader;

        specialinvoke $r3.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void <init>(org.apache.poi.poifs.filesystem.DocumentInputStream)>(r2);

        r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader header> = $r3;

        $r4 = new org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier;

        $r5 = r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader header>;

        specialinvoke $r4.<org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier: void <init>(org.apache.poi.poifs.filesystem.DocumentInputStream,org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader)>(r2, $r5);

        r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier verifier> = $r4;

        $i0 = virtualinvoke r1.<org.apache.poi.poifs.crypt.EncryptionInfo: int getVersionMinor()>();

        if $i0 != 2 goto label2;

        $i1 = virtualinvoke r1.<org.apache.poi.poifs.crypt.EncryptionInfo: int getVersionMajor()>();

        if $i1 == 3 goto label1;

        $i2 = virtualinvoke r1.<org.apache.poi.poifs.crypt.EncryptionInfo: int getVersionMajor()>();

        if $i2 != 4 goto label2;

     label1:
        $r6 = new org.apache.poi.poifs.crypt.standard.StandardDecryptor;

        specialinvoke $r6.<org.apache.poi.poifs.crypt.standard.StandardDecryptor: void <init>(org.apache.poi.poifs.crypt.EncryptionInfo)>(r1);

        r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.standard.StandardDecryptor decryptor> = $r6;

     label2:
        return;
    }

    public void initialize(org.apache.poi.poifs.crypt.EncryptionInfo, org.apache.poi.poifs.crypt.CipherAlgorithm, org.apache.poi.poifs.crypt.HashAlgorithm, int, int, org.apache.poi.poifs.crypt.ChainingMode)
    {
        org.apache.poi.poifs.crypt.ChainingMode $r3, r21;
        org.apache.poi.poifs.crypt.standard.StandardDecryptor $r28;
        int[] $r16;
        org.apache.poi.poifs.crypt.EncryptionInfo r1;
        boolean $z0, z1, $z2;
        org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader $r26;
        org.apache.poi.poifs.crypt.standard.StandardEncryptor $r29;
        org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder r0;
        java.lang.StringBuilder $r10, $r11, $r12, $r14, $r24;
        org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier $r27;
        int i0, $i1, i2, i3, i4, $i6, $i8;
        java.lang.String $r13, $r15;
        org.apache.poi.poifs.crypt.HashAlgorithm $r2, r20;
        org.apache.poi.EncryptedDocumentException $r22, $r23, $r25;
        org.apache.poi.poifs.crypt.CipherAlgorithm r19;

        r0 := @this: org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder;

        r1 := @parameter0: org.apache.poi.poifs.crypt.EncryptionInfo;

        r19 := @parameter1: org.apache.poi.poifs.crypt.CipherAlgorithm;

        r20 := @parameter2: org.apache.poi.poifs.crypt.HashAlgorithm;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r21 := @parameter5: org.apache.poi.poifs.crypt.ChainingMode;

        r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.EncryptionInfo info> = r1;

        if r19 != null goto label01;

        r19 = <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm rc4>;

     label01:
        if r20 != null goto label02;

        r20 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm sha1>;

     label02:
        $r2 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm sha1>;

        if r20 == $r2 goto label03;

        $r22 = new org.apache.poi.EncryptedDocumentException;

        specialinvoke $r22.<org.apache.poi.EncryptedDocumentException: void <init>(java.lang.String)>("Standard encryption only supports SHA-1.");

        throw $r22;

     label03:
        if r21 != null goto label04;

        r21 = <org.apache.poi.poifs.crypt.ChainingMode: org.apache.poi.poifs.crypt.ChainingMode ecb>;

     label04:
        $r3 = <org.apache.poi.poifs.crypt.ChainingMode: org.apache.poi.poifs.crypt.ChainingMode ecb>;

        if r21 == $r3 goto label05;

        $r23 = new org.apache.poi.EncryptedDocumentException;

        specialinvoke $r23.<org.apache.poi.EncryptedDocumentException: void <init>(java.lang.String)>("Standard encryption only supports ECB chaining.");

        throw $r23;

     label05:
        $i6 = (int) -1;

        if i2 != $i6 goto label06;

        i2 = r19.<org.apache.poi.poifs.crypt.CipherAlgorithm: int defaultKeySize>;

     label06:
        $i8 = (int) -1;

        if i3 != $i8 goto label07;

        i3 = r19.<org.apache.poi.poifs.crypt.CipherAlgorithm: int blockSize>;

     label07:
        z1 = 0;

        $r16 = r19.<org.apache.poi.poifs.crypt.CipherAlgorithm: int[] allowedKeySize>;

        $i1 = lengthof $r16;

        i4 = 0;

     label08:
        if i4 >= $i1 goto label11;

        i0 = $r16[i4];

        $z0 = z1;

        if i0 != i2 goto label09;

        $z2 = 1;

        goto label10;

     label09:
        $z2 = 0;

     label10:
        z1 = $z0 | $z2;

        i4 = i4 + 1;

        goto label08;

     label11:
        if z1 != 0 goto label12;

        $r25 = new org.apache.poi.EncryptedDocumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KeySize ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not allowed for Cipher ");

        $r13 = virtualinvoke r19.<org.apache.poi.poifs.crypt.CipherAlgorithm: java.lang.String toString()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<org.apache.poi.EncryptedDocumentException: void <init>(java.lang.String)>($r15);

        throw $r25;

     label12:
        $r26 = new org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader;

        specialinvoke $r26.<org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader: void <init>(org.apache.poi.poifs.crypt.CipherAlgorithm,org.apache.poi.poifs.crypt.HashAlgorithm,int,int,org.apache.poi.poifs.crypt.ChainingMode)>(r19, r20, i2, i3, r21);

        r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader header> = $r26;

        $r27 = new org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier;

        specialinvoke $r27.<org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier: void <init>(org.apache.poi.poifs.crypt.CipherAlgorithm,org.apache.poi.poifs.crypt.HashAlgorithm,int,int,org.apache.poi.poifs.crypt.ChainingMode)>(r19, r20, i2, i3, r21);

        r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier verifier> = $r27;

        $r28 = new org.apache.poi.poifs.crypt.standard.StandardDecryptor;

        specialinvoke $r28.<org.apache.poi.poifs.crypt.standard.StandardDecryptor: void <init>(org.apache.poi.poifs.crypt.EncryptionInfo)>(r1);

        r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.standard.StandardDecryptor decryptor> = $r28;

        $r29 = new org.apache.poi.poifs.crypt.standard.StandardEncryptor;

        specialinvoke $r29.<org.apache.poi.poifs.crypt.standard.StandardEncryptor: void <init>(org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder)>(r0);

        r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.standard.StandardEncryptor encryptor> = $r29;

        return;
    }

    public org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader getHeader()
    {
        org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader $r1;
        org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder r0;

        r0 := @this: org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder;

        $r1 = r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader header>;

        return $r1;
    }

    public org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier getVerifier()
    {
        org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder r0;
        org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier $r1;

        r0 := @this: org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder;

        $r1 = r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier verifier>;

        return $r1;
    }

    public org.apache.poi.poifs.crypt.standard.StandardDecryptor getDecryptor()
    {
        org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder r0;
        org.apache.poi.poifs.crypt.standard.StandardDecryptor $r1;

        r0 := @this: org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder;

        $r1 = r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.standard.StandardDecryptor decryptor>;

        return $r1;
    }

    public org.apache.poi.poifs.crypt.standard.StandardEncryptor getEncryptor()
    {
        org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder r0;
        org.apache.poi.poifs.crypt.standard.StandardEncryptor $r1;

        r0 := @this: org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder;

        $r1 = r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.standard.StandardEncryptor encryptor>;

        return $r1;
    }

    public org.apache.poi.poifs.crypt.EncryptionInfo getEncryptionInfo()
    {
        org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder r0;
        org.apache.poi.poifs.crypt.EncryptionInfo $r1;

        r0 := @this: org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder;

        $r1 = r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.EncryptionInfo info>;

        return $r1;
    }

    public volatile org.apache.poi.poifs.crypt.Encryptor getEncryptor()
    {
        org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder r0;
        org.apache.poi.poifs.crypt.standard.StandardEncryptor $r1;

        r0 := @this: org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder;

        $r1 = virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.standard.StandardEncryptor getEncryptor()>();

        return $r1;
    }

    public volatile org.apache.poi.poifs.crypt.Decryptor getDecryptor()
    {
        org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder r0;
        org.apache.poi.poifs.crypt.standard.StandardDecryptor $r1;

        r0 := @this: org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder;

        $r1 = virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.standard.StandardDecryptor getDecryptor()>();

        return $r1;
    }

    public volatile org.apache.poi.poifs.crypt.EncryptionVerifier getVerifier()
    {
        org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder r0;
        org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier $r1;

        r0 := @this: org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder;

        $r1 = virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier getVerifier()>();

        return $r1;
    }

    public volatile org.apache.poi.poifs.crypt.EncryptionHeader getHeader()
    {
        org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader $r1;
        org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder r0;

        r0 := @this: org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder;

        $r1 = virtualinvoke r0.<org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder: org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader getHeader()>();

        return $r1;
    }
}
