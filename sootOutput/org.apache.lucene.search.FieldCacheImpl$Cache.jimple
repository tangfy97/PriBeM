abstract class org.apache.lucene.search.FieldCacheImpl$Cache extends java.lang.Object
{
    final org.apache.lucene.search.FieldCacheImpl wrapper;
    final java.util.Map readerCache;

    void <init>(org.apache.lucene.search.FieldCacheImpl)
    {
        org.apache.lucene.search.FieldCacheImpl$Cache r0;
        org.apache.lucene.search.FieldCacheImpl r2;
        java.util.WeakHashMap $r1;

        r0 := @this: org.apache.lucene.search.FieldCacheImpl$Cache;

        r2 := @parameter0: org.apache.lucene.search.FieldCacheImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        r0.<org.apache.lucene.search.FieldCacheImpl$Cache: java.util.Map readerCache> = $r1;

        r0.<org.apache.lucene.search.FieldCacheImpl$Cache: org.apache.lucene.search.FieldCacheImpl wrapper> = r2;

        return;
    }

    protected abstract java.lang.Object createValue(org.apache.lucene.index.AtomicReader, org.apache.lucene.search.FieldCacheImpl$CacheKey, boolean) throws java.io.IOException;

    public void purge(org.apache.lucene.index.AtomicReader)
    {
        org.apache.lucene.search.FieldCacheImpl$Cache r2;
        java.lang.Throwable $r5;
        java.util.Map $r3, $r4;
        java.lang.Object $r1;
        org.apache.lucene.index.AtomicReader r0;

        r2 := @this: org.apache.lucene.search.FieldCacheImpl$Cache;

        r0 := @parameter0: org.apache.lucene.index.AtomicReader;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: java.lang.Object getCoreCacheKey()>();

        $r3 = r2.<org.apache.lucene.search.FieldCacheImpl$Cache: java.util.Map readerCache>;

        entermonitor $r3;

     label1:
        $r4 = r2.<org.apache.lucene.search.FieldCacheImpl$Cache: java.util.Map readerCache>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        exitmonitor $r3;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void put(org.apache.lucene.index.AtomicReader, org.apache.lucene.search.FieldCacheImpl$CacheKey, java.lang.Object)
    {
        org.apache.lucene.search.FieldCacheImpl$Cache r2;
        java.lang.Throwable $r12;
        org.apache.lucene.search.FieldCacheImpl$CacheKey r6;
        java.util.HashMap $r9;
        org.apache.lucene.search.FieldCacheImpl $r11;
        java.util.Map $r3, $r4, $r10, r13;
        java.lang.Object $r1, $r5, $r7, r8;
        org.apache.lucene.index.AtomicReader r0;

        r2 := @this: org.apache.lucene.search.FieldCacheImpl$Cache;

        r0 := @parameter0: org.apache.lucene.index.AtomicReader;

        r6 := @parameter1: org.apache.lucene.search.FieldCacheImpl$CacheKey;

        r8 := @parameter2: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: java.lang.Object getCoreCacheKey()>();

        $r3 = r2.<org.apache.lucene.search.FieldCacheImpl$Cache: java.util.Map readerCache>;

        entermonitor $r3;

     label1:
        $r4 = r2.<org.apache.lucene.search.FieldCacheImpl$Cache: java.util.Map readerCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r13 = (java.util.Map) $r5;

        if r13 != null goto label2;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r13 = $r9;

        $r10 = r2.<org.apache.lucene.search.FieldCacheImpl$Cache: java.util.Map readerCache>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r9);

        $r11 = r2.<org.apache.lucene.search.FieldCacheImpl$Cache: org.apache.lucene.search.FieldCacheImpl wrapper>;

        staticinvoke <org.apache.lucene.search.FieldCacheImpl: void access$000(org.apache.lucene.search.FieldCacheImpl,org.apache.lucene.index.AtomicReader)>($r11, r0);

     label2:
        $r7 = interfaceinvoke r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        if $r7 != null goto label3;

        interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r8);

     label3:
        exitmonitor $r3;

     label4:
        goto label7;

     label5:
        $r12 := @caughtexception;

        exitmonitor $r3;

     label6:
        throw $r12;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.Object get(org.apache.lucene.index.AtomicReader, org.apache.lucene.search.FieldCacheImpl$CacheKey, boolean) throws java.io.IOException
    {
        java.lang.Throwable $r20, $r21, $r22;
        org.apache.lucene.search.FieldCacheImpl$CacheKey r6;
        java.util.HashMap $r17;
        java.util.Map $r3, $r4, $r9, $r18, r23;
        boolean $z0, z1;
        org.apache.lucene.search.FieldCacheImpl$Cache r2;
        java.io.PrintStream $r14;
        org.apache.lucene.search.FieldCacheImpl $r12, $r13, $r19;
        org.apache.lucene.search.FieldCache$CreationPlaceholder $r16, r26;
        java.lang.Object $r1, $r5, $r7, $r8, $r10, $r11, $r15, r24, r25, $r27;
        org.apache.lucene.index.AtomicReader r0;

        r2 := @this: org.apache.lucene.search.FieldCacheImpl$Cache;

        r0 := @parameter0: org.apache.lucene.index.AtomicReader;

        r6 := @parameter1: org.apache.lucene.search.FieldCacheImpl$CacheKey;

        z1 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: java.lang.Object getCoreCacheKey()>();

        $r3 = r2.<org.apache.lucene.search.FieldCacheImpl$Cache: java.util.Map readerCache>;

        entermonitor $r3;

     label01:
        $r4 = r2.<org.apache.lucene.search.FieldCacheImpl$Cache: java.util.Map readerCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r23 = (java.util.Map) $r5;

        if r23 != null goto label02;

        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        r23 = $r17;

        $r18 = r2.<org.apache.lucene.search.FieldCacheImpl$Cache: java.util.Map readerCache>;

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r17);

        $r19 = r2.<org.apache.lucene.search.FieldCacheImpl$Cache: org.apache.lucene.search.FieldCacheImpl wrapper>;

        staticinvoke <org.apache.lucene.search.FieldCacheImpl: void access$000(org.apache.lucene.search.FieldCacheImpl,org.apache.lucene.index.AtomicReader)>($r19, r0);

        r24 = null;

        goto label03;

     label02:
        r24 = interfaceinvoke r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

     label03:
        if r24 != null goto label04;

        $r16 = new org.apache.lucene.search.FieldCache$CreationPlaceholder;

        specialinvoke $r16.<org.apache.lucene.search.FieldCache$CreationPlaceholder: void <init>()>();

        r24 = $r16;

        interfaceinvoke r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r16);

     label04:
        exitmonitor $r3;

     label05:
        goto label08;

     label06:
        $r22 := @caughtexception;

        exitmonitor $r3;

     label07:
        throw $r22;

     label08:
        $z0 = r24 instanceof org.apache.lucene.search.FieldCache$CreationPlaceholder;

        if $z0 == 0 goto label19;

        r25 = r24;

        entermonitor r24;

     label09:
        r26 = (org.apache.lucene.search.FieldCache$CreationPlaceholder) r24;

        $r7 = r26.<org.apache.lucene.search.FieldCache$CreationPlaceholder: java.lang.Object value>;

        if $r7 != null goto label15;

        $r8 = virtualinvoke r2.<org.apache.lucene.search.FieldCacheImpl$Cache: java.lang.Object createValue(org.apache.lucene.index.AtomicReader,org.apache.lucene.search.FieldCacheImpl$CacheKey,boolean)>(r0, r6, z1);

        r26.<org.apache.lucene.search.FieldCache$CreationPlaceholder: java.lang.Object value> = $r8;

        $r9 = r2.<org.apache.lucene.search.FieldCacheImpl$Cache: java.util.Map readerCache>;

        entermonitor $r9;

     label10:
        $r10 = r26.<org.apache.lucene.search.FieldCache$CreationPlaceholder: java.lang.Object value>;

        interfaceinvoke r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r10);

        exitmonitor $r9;

     label11:
        goto label14;

     label12:
        $r21 := @caughtexception;

        exitmonitor $r9;

     label13:
        throw $r21;

     label14:
        $r11 = r6.<org.apache.lucene.search.FieldCacheImpl$CacheKey: java.lang.Object custom>;

        if $r11 == null goto label15;

        $r12 = r2.<org.apache.lucene.search.FieldCacheImpl$Cache: org.apache.lucene.search.FieldCacheImpl wrapper>;

        if $r12 == null goto label15;

        $r13 = r2.<org.apache.lucene.search.FieldCacheImpl$Cache: org.apache.lucene.search.FieldCacheImpl wrapper>;

        $r14 = virtualinvoke $r13.<org.apache.lucene.search.FieldCacheImpl: java.io.PrintStream getInfoStream()>();

        if $r14 == null goto label15;

        $r15 = r26.<org.apache.lucene.search.FieldCache$CreationPlaceholder: java.lang.Object value>;

        specialinvoke r2.<org.apache.lucene.search.FieldCacheImpl$Cache: void printNewInsanity(java.io.PrintStream,java.lang.Object)>($r14, $r15);

     label15:
        $r27 = r26.<org.apache.lucene.search.FieldCache$CreationPlaceholder: java.lang.Object value>;

        exitmonitor r25;

     label16:
        return $r27;

     label17:
        $r20 := @caughtexception;

        exitmonitor r25;

     label18:
        throw $r20;

     label19:
        return r24;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label09 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    private void printNewInsanity(java.io.PrintStream, java.lang.Object)
    {
        java.lang.Throwable $r14;
        org.apache.lucene.search.FieldCache$CacheEntry[] $r4;
        int $i0, $i1, i2, i3;
        java.lang.String $r11, $r13;
        org.apache.lucene.search.FieldCacheImpl$Cache r0;
        java.io.PrintStream r8;
        org.apache.lucene.util.FieldCacheSanityChecker$Insanity[] $r2;
        org.apache.lucene.search.FieldCacheImpl $r1;
        org.apache.lucene.util.FieldCacheSanityChecker$Insanity r3;
        org.apache.lucene.search.FieldCache$CacheEntry $r5;
        java.lang.Object $r6, r7;
        java.lang.StringBuilder $r9, $r10, $r12;

        r0 := @this: org.apache.lucene.search.FieldCacheImpl$Cache;

        r8 := @parameter0: java.io.PrintStream;

        r7 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.lucene.search.FieldCacheImpl$Cache: org.apache.lucene.search.FieldCacheImpl wrapper>;

        $r2 = staticinvoke <org.apache.lucene.util.FieldCacheSanityChecker: org.apache.lucene.util.FieldCacheSanityChecker$Insanity[] checkSanity(org.apache.lucene.search.FieldCache)>($r1);

        i2 = 0;

     label1:
        $i0 = lengthof $r2;

        if i2 >= $i0 goto label5;

        r3 = $r2[i2];

        $r4 = virtualinvoke r3.<org.apache.lucene.util.FieldCacheSanityChecker$Insanity: org.apache.lucene.search.FieldCache$CacheEntry[] getCacheEntries()>();

        i3 = 0;

     label2:
        $i1 = lengthof $r4;

        if i3 >= $i1 goto label4;

        $r5 = $r4[i3];

        $r6 = virtualinvoke $r5.<org.apache.lucene.search.FieldCache$CacheEntry: java.lang.Object getValue()>();

        if $r6 != r7 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING: new FieldCache insanity created\nDetails: ");

        $r11 = virtualinvoke r3.<org.apache.lucene.util.FieldCacheSanityChecker$Insanity: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<java.io.PrintStream: void println(java.lang.String)>($r13);

        virtualinvoke r8.<java.io.PrintStream: void println(java.lang.String)>("\nStack:\n");

        $r14 = new java.lang.Throwable;

        specialinvoke $r14.<java.lang.Throwable: void <init>()>();

        virtualinvoke $r14.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r8);

        goto label4;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return;
    }
}
