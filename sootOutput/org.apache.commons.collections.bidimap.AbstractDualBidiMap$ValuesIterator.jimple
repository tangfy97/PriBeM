public class org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator extends org.apache.commons.collections.iterators.AbstractIteratorDecorator
{
    protected final org.apache.commons.collections.bidimap.AbstractDualBidiMap parent;
    protected java.lang.Object lastValue;
    protected boolean canRemove;

    protected void <init>(java.util.Iterator, org.apache.commons.collections.bidimap.AbstractDualBidiMap)
    {
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator r0;
        java.util.Iterator r1;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap r2;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator;

        r1 := @parameter0: java.util.Iterator;

        r2 := @parameter1: org.apache.commons.collections.bidimap.AbstractDualBidiMap;

        specialinvoke r0.<org.apache.commons.collections.iterators.AbstractIteratorDecorator: void <init>(java.util.Iterator)>(r1);

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator: java.lang.Object lastValue> = null;

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator: boolean canRemove> = 0;

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator: org.apache.commons.collections.bidimap.AbstractDualBidiMap parent> = r2;

        return;
    }

    public java.lang.Object next()
    {
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator r0;
        java.lang.Object $r1, $r2;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator;

        $r1 = specialinvoke r0.<org.apache.commons.collections.iterators.AbstractIteratorDecorator: java.lang.Object next()>();

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator: java.lang.Object lastValue> = $r1;

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator: boolean canRemove> = 1;

        $r2 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator: java.lang.Object lastValue>;

        return $r2;
    }

    public void remove()
    {
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator r0;
        java.lang.IllegalStateException $r5;
        java.util.Map[] $r2;
        java.util.Map $r4;
        java.lang.Object $r3;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator;

        $z0 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator: boolean canRemove>;

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Iterator remove() can only be called once after next()");

        throw $r5;

     label1:
        specialinvoke r0.<org.apache.commons.collections.iterators.AbstractIteratorDecorator: void remove()>();

        $r1 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator: org.apache.commons.collections.bidimap.AbstractDualBidiMap parent>;

        $r2 = $r1.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: java.util.Map[] maps>;

        $r4 = $r2[1];

        $r3 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator: java.lang.Object lastValue>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r3);

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator: java.lang.Object lastValue> = null;

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$ValuesIterator: boolean canRemove> = 0;

        return;
    }
}
