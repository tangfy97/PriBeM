public class com.jidesoft.converter.MultilineStringConverter extends java.lang.Object implements com.jidesoft.converter.ObjectConverter
{
    public static final com.jidesoft.converter.ConverterContext CONTEXT;

    public void <init>()
    {
        com.jidesoft.converter.MultilineStringConverter r0;

        r0 := @this: com.jidesoft.converter.MultilineStringConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String toString(java.lang.Object, com.jidesoft.converter.ConverterContext)
    {
        com.jidesoft.converter.MultilineStringConverter r10;
        com.jidesoft.converter.ConverterContext r11;
        java.lang.Object r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0;

        r10 := @this: com.jidesoft.converter.MultilineStringConverter;

        r0 := @parameter0: java.lang.Object;

        r11 := @parameter1: com.jidesoft.converter.ConverterContext;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r5 = (java.lang.String) r0;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\n", "\\\\\\\\n");

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\r", "\\\\\\\\r");

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n", "\\\\n");

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\r", "\\\\r");

        return $r9;

     label1:
        if r0 != null goto label2;

        return "";

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public boolean supportToString(java.lang.Object, com.jidesoft.converter.ConverterContext)
    {
        java.lang.Object r1;
        com.jidesoft.converter.MultilineStringConverter r0;
        com.jidesoft.converter.ConverterContext r2;

        r0 := @this: com.jidesoft.converter.MultilineStringConverter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.jidesoft.converter.ConverterContext;

        return 1;
    }

    public java.lang.Object fromString(java.lang.String, com.jidesoft.converter.ConverterContext)
    {
        com.jidesoft.converter.ConverterContext r4;
        java.lang.String r0, $r1, $r2;
        com.jidesoft.converter.MultilineStringConverter r3;

        r3 := @this: com.jidesoft.converter.MultilineStringConverter;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: com.jidesoft.converter.ConverterContext;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\\\\\n", "\\\\n");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\\\\\r", "\\\\r");

        return $r2;

     label1:
        return null;
    }

    public boolean supportFromString(java.lang.String, com.jidesoft.converter.ConverterContext)
    {
        com.jidesoft.converter.MultilineStringConverter r0;
        java.lang.String r1;
        com.jidesoft.converter.ConverterContext r2;

        r0 := @this: com.jidesoft.converter.MultilineStringConverter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.jidesoft.converter.ConverterContext;

        return 1;
    }

    static void <clinit>()
    {
        com.jidesoft.converter.ConverterContext $r0;

        $r0 = new com.jidesoft.converter.ConverterContext;

        specialinvoke $r0.<com.jidesoft.converter.ConverterContext: void <init>(java.lang.String)>("MultilineString");

        <com.jidesoft.converter.MultilineStringConverter: com.jidesoft.converter.ConverterContext CONTEXT> = $r0;

        return;
    }
}
