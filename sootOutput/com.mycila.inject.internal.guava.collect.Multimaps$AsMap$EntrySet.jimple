class com.mycila.inject.internal.guava.collect.Multimaps$AsMap$EntrySet extends com.mycila.inject.internal.guava.collect.Maps$EntrySet
{
    final com.mycila.inject.internal.guava.collect.Multimaps$AsMap this$0;

    void <init>(com.mycila.inject.internal.guava.collect.Multimaps$AsMap)
    {
        com.mycila.inject.internal.guava.collect.Multimaps$AsMap r1;
        com.mycila.inject.internal.guava.collect.Multimaps$AsMap$EntrySet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multimaps$AsMap$EntrySet;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.Multimaps$AsMap;

        r0.<com.mycila.inject.internal.guava.collect.Multimaps$AsMap$EntrySet: com.mycila.inject.internal.guava.collect.Multimaps$AsMap this$0> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Maps$EntrySet: void <init>()>();

        return;
    }

    java.util.Map map()
    {
        com.mycila.inject.internal.guava.collect.Multimaps$AsMap $r1;
        com.mycila.inject.internal.guava.collect.Multimaps$AsMap$EntrySet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multimaps$AsMap$EntrySet;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Multimaps$AsMap$EntrySet: com.mycila.inject.internal.guava.collect.Multimaps$AsMap this$0>;

        return $r1;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r2;
        com.mycila.inject.internal.guava.collect.Multimaps$AsMap $r1;
        com.mycila.inject.internal.guava.collect.Multimaps$AsMap$EntrySet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multimaps$AsMap$EntrySet;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Multimaps$AsMap$EntrySet: com.mycila.inject.internal.guava.collect.Multimaps$AsMap this$0>;

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.Multimaps$AsMap: java.util.Iterator entryIterator()>();

        return $r2;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Map$Entry r2;
        com.mycila.inject.internal.guava.collect.Multimaps$AsMap $r3;
        java.lang.Object r1, $r4;
        com.mycila.inject.internal.guava.collect.Multimaps$AsMap$EntrySet r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multimaps$AsMap$EntrySet;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Multimaps$AsMap$EntrySet: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.util.Map$Entry) r1;

        $r3 = r0.<com.mycila.inject.internal.guava.collect.Multimaps$AsMap$EntrySet: com.mycila.inject.internal.guava.collect.Multimaps$AsMap this$0>;

        $r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r3.<com.mycila.inject.internal.guava.collect.Multimaps$AsMap: void removeValuesForKey(java.lang.Object)>($r4);

        return 1;
    }
}
