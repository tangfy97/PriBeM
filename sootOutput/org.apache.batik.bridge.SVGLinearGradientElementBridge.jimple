public class org.apache.batik.bridge.SVGLinearGradientElementBridge extends org.apache.batik.bridge.AbstractSVGGradientElementBridge
{

    public void <init>()
    {
        org.apache.batik.bridge.SVGLinearGradientElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGLinearGradientElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractSVGGradientElementBridge: void <init>()>();

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGLinearGradientElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGLinearGradientElementBridge;

        return "linearGradient";
    }

    protected java.awt.Paint buildGradient(org.w3c.dom.Element, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum, org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum, java.awt.geom.AffineTransform, java.awt.Color[], float[], org.apache.batik.bridge.BridgeContext)
    {
        java.awt.Color $r17;
        org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum r15;
        java.awt.geom.Point2D $r10, $r11;
        java.awt.geom.Rectangle2D $r20;
        org.apache.batik.dom.svg.SVGContext $r8;
        byte $b5, $b6, $b9, $b10;
        boolean $z0;
        org.apache.batik.gvt.GraphicsNode r18;
        org.apache.batik.bridge.BridgeContext r1;
        org.apache.batik.bridge.AbstractGraphicsNodeBridge $r19;
        java.awt.geom.AffineTransform r22;
        org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum r16;
        org.apache.batik.ext.awt.LinearGradientPaint $r12;
        float[] r13;
        short s11;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8;
        java.lang.String $r2, $r3, $r4, $r5, $r6, r23, r24, r25, r26;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        org.apache.batik.parser.UnitProcessor$Context $r9;
        org.w3c.dom.Element r0, r7;
        org.apache.batik.bridge.SVGLinearGradientElementBridge r21;
        java.awt.Color[] r14;

        r21 := @this: org.apache.batik.bridge.SVGLinearGradientElementBridge;

        r0 := @parameter0: org.w3c.dom.Element;

        r7 := @parameter1: org.w3c.dom.Element;

        r18 := @parameter2: org.apache.batik.gvt.GraphicsNode;

        r15 := @parameter3: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum;

        r16 := @parameter4: org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum;

        r22 := @parameter5: java.awt.geom.AffineTransform;

        r14 := @parameter6: java.awt.Color[];

        r13 := @parameter7: float[];

        r1 := @parameter8: org.apache.batik.bridge.BridgeContext;

        $r2 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.lang.String getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)>(r0, null, "x1", r1);

        r23 = $r2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        r23 = "0%";

     label01:
        $r3 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.lang.String getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)>(r0, null, "y1", r1);

        r24 = $r3;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 != 0 goto label02;

        r24 = "0%";

     label02:
        $r4 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.lang.String getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)>(r0, null, "x2", r1);

        r25 = $r4;

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i2 != 0 goto label03;

        r25 = "100%";

     label03:
        $r5 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.lang.String getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)>(r0, null, "y2", r1);

        r26 = $r5;

        $i3 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i3 != 0 goto label04;

        r26 = "0%";

     label04:
        $r6 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.lang.String getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)>(r0, null, "gradientUnits", r1);

        $i4 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i4 != 0 goto label05;

        s11 = 2;

        goto label06;

     label05:
        s11 = staticinvoke <org.apache.batik.bridge.SVGUtilities: short parseCoordinateSystem(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)>(r0, "gradientUnits", $r6, r1);

     label06:
        $r8 = staticinvoke <org.apache.batik.bridge.BridgeContext: org.apache.batik.dom.svg.SVGContext getSVGContext(org.w3c.dom.Node)>(r7);

        if s11 != 2 goto label09;

        $z0 = $r8 instanceof org.apache.batik.bridge.AbstractGraphicsNodeBridge;

        if $z0 == 0 goto label09;

        $r19 = (org.apache.batik.bridge.AbstractGraphicsNodeBridge) $r8;

        $r20 = virtualinvoke $r19.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: java.awt.geom.Rectangle2D getBBox()>();

        if $r20 == null goto label07;

        $d5 = virtualinvoke $r20.<java.awt.geom.RectangularShape: double getWidth()>();

        $b10 = $d5 cmpl 0.0;

        if $b10 == 0 goto label08;

     label07:
        $d4 = virtualinvoke $r20.<java.awt.geom.RectangularShape: double getHeight()>();

        $b9 = $d4 cmpl 0.0;

        if $b9 != 0 goto label09;

     label08:
        return null;

     label09:
        if s11 != 2 goto label10;

        r22 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.awt.geom.AffineTransform toObjectBBox(java.awt.geom.AffineTransform,org.apache.batik.gvt.GraphicsNode)>(r22, r18);

     label10:
        $r9 = staticinvoke <org.apache.batik.bridge.UnitProcessor: org.apache.batik.parser.UnitProcessor$Context createContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>(r1, r0);

        $r10 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.awt.geom.Point2D convertPoint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,org.apache.batik.parser.UnitProcessor$Context)>(r23, "x1", r24, "y1", s11, $r9);

        $r11 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.awt.geom.Point2D convertPoint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,org.apache.batik.parser.UnitProcessor$Context)>(r25, "x2", r26, "y2", s11, $r9);

        $d0 = virtualinvoke $r10.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke $r11.<java.awt.geom.Point2D: double getX()>();

        $b5 = $d0 cmpl $d1;

        if $b5 != 0 goto label11;

        $d2 = virtualinvoke $r10.<java.awt.geom.Point2D: double getY()>();

        $d3 = virtualinvoke $r11.<java.awt.geom.Point2D: double getY()>();

        $b6 = $d2 cmpl $d3;

        if $b6 != 0 goto label11;

        $i7 = lengthof r14;

        $i8 = $i7 - 1;

        $r17 = r14[$i8];

        return $r17;

     label11:
        $r12 = new org.apache.batik.ext.awt.LinearGradientPaint;

        specialinvoke $r12.<org.apache.batik.ext.awt.LinearGradientPaint: void <init>(java.awt.geom.Point2D,java.awt.geom.Point2D,float[],java.awt.Color[],org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum,org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum,java.awt.geom.AffineTransform)>($r10, $r11, r13, r14, r15, r16, r22);

        return $r12;
    }
}
