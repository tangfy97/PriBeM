public class com.jidesoft.swing.CheckBoxListWithSelectable$Handler extends java.lang.Object implements java.awt.event.MouseListener, java.awt.event.KeyListener
{
    protected com.jidesoft.swing.CheckBoxListWithSelectable _list;
    int _hotspot;

    public void <init>(com.jidesoft.swing.CheckBoxListWithSelectable)
    {
        java.awt.Dimension $r2;
        com.jidesoft.swing.CheckBoxListWithSelectable r3;
        com.jidesoft.swing.CheckBoxListWithSelectable$Handler r0;
        javax.swing.JCheckBox $r1;
        int $i0;

        r0 := @this: com.jidesoft.swing.CheckBoxListWithSelectable$Handler;

        r3 := @parameter0: com.jidesoft.swing.CheckBoxListWithSelectable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new javax.swing.JCheckBox;

        specialinvoke $r1.<javax.swing.JCheckBox: void <init>()>();

        $r2 = virtualinvoke $r1.<javax.swing.JCheckBox: java.awt.Dimension getPreferredSize()>();

        $i0 = $r2.<java.awt.Dimension: int width>;

        r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: int _hotspot> = $i0;

        r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list> = r3;

        return;
    }

    protected boolean clicksInCheckBox(java.awt.event.MouseEvent)
    {
        java.awt.Rectangle $r5;
        java.awt.Point $r3;
        com.jidesoft.swing.CheckBoxListWithSelectable$Handler r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0, $z1, $z2;
        java.awt.event.MouseEvent r1;
        java.awt.ComponentOrientation $r7;
        com.jidesoft.swing.CheckBoxListWithSelectable $r2, $r4, $r6;

        r0 := @this: com.jidesoft.swing.CheckBoxListWithSelectable$Handler;

        r1 := @parameter0: java.awt.event.MouseEvent;

        $r2 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        $r3 = virtualinvoke r1.<java.awt.event.MouseEvent: java.awt.Point getPoint()>();

        $i0 = virtualinvoke $r2.<com.jidesoft.swing.CheckBoxListWithSelectable: int locationToIndex(java.awt.Point)>($r3);

        $r4 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        $r5 = virtualinvoke $r4.<com.jidesoft.swing.CheckBoxListWithSelectable: java.awt.Rectangle getCellBounds(int,int)>($i0, $i0);

        if $r5 == null goto label6;

        $r6 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        $r7 = virtualinvoke $r6.<com.jidesoft.swing.CheckBoxListWithSelectable: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r7.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z0 == 0 goto label3;

        $i7 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();

        $i9 = $r5.<java.awt.Rectangle: int x>;

        $i8 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: int _hotspot>;

        $i10 = $i9 + $i8;

        if $i7 >= $i10 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        $i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();

        $i3 = $r5.<java.awt.Rectangle: int x>;

        $i2 = $r5.<java.awt.Rectangle: int width>;

        $i5 = $i3 + $i2;

        $i4 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: int _hotspot>;

        $i6 = $i5 - $i4;

        if $i1 <= $i6 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;

     label6:
        return 0;
    }

    public void mouseClicked(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.CheckBoxListWithSelectable$Handler r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.jidesoft.swing.CheckBoxListWithSelectable$Handler;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void mousePressed(java.awt.event.MouseEvent)
    {
        java.awt.Point $r6;
        java.awt.event.MouseEvent r4;
        com.jidesoft.swing.CheckBoxListWithSelectable $r1, $r2, $r3, $r5;
        com.jidesoft.swing.CheckBoxListWithSelectable$Handler r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.jidesoft.swing.CheckBoxListWithSelectable$Handler;

        r4 := @parameter0: java.awt.event.MouseEvent;

        $r1 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.CheckBoxListWithSelectable: boolean isCheckBoxEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        $z1 = virtualinvoke $r2.<com.jidesoft.swing.CheckBoxListWithSelectable: boolean isEnabled()>();

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        $z2 = virtualinvoke $r3.<com.jidesoft.swing.CheckBoxListWithSelectable: boolean isClickInCheckBoxOnly()>();

        if $z2 == 0 goto label3;

        $z3 = virtualinvoke r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: boolean clicksInCheckBox(java.awt.event.MouseEvent)>(r4);

        if $z3 == 0 goto label4;

     label3:
        $r5 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        $r6 = virtualinvoke r4.<java.awt.event.MouseEvent: java.awt.Point getPoint()>();

        $i0 = virtualinvoke $r5.<com.jidesoft.swing.CheckBoxListWithSelectable: int locationToIndex(java.awt.Point)>($r6);

        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: void toggleSelection(int)>($i0);

     label4:
        return;
    }

    public void mouseReleased(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.CheckBoxListWithSelectable$Handler r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.jidesoft.swing.CheckBoxListWithSelectable$Handler;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void mouseEntered(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.CheckBoxListWithSelectable$Handler r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.jidesoft.swing.CheckBoxListWithSelectable$Handler;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void mouseExited(java.awt.event.MouseEvent)
    {
        com.jidesoft.swing.CheckBoxListWithSelectable$Handler r0;
        java.awt.event.MouseEvent r1;

        r0 := @this: com.jidesoft.swing.CheckBoxListWithSelectable$Handler;

        r1 := @parameter0: java.awt.event.MouseEvent;

        return;
    }

    public void keyPressed(java.awt.event.KeyEvent)
    {
        char $c1;
        java.awt.event.KeyEvent r3;
        com.jidesoft.swing.CheckBoxListWithSelectable $r1, $r2;
        com.jidesoft.swing.CheckBoxListWithSelectable$Handler r0;
        int $i0, $i2;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.swing.CheckBoxListWithSelectable$Handler;

        r3 := @parameter0: java.awt.event.KeyEvent;

        $r1 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        $z0 = virtualinvoke $r1.<com.jidesoft.swing.CheckBoxListWithSelectable: boolean isCheckBoxEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        $z1 = virtualinvoke $r2.<com.jidesoft.swing.CheckBoxListWithSelectable: boolean isEnabled()>();

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        $i0 = virtualinvoke r3.<java.awt.event.KeyEvent: int getModifiers()>();

        if $i0 != 0 goto label3;

        $c1 = virtualinvoke r3.<java.awt.event.KeyEvent: char getKeyChar()>();

        $i2 = (int) $c1;

        if $i2 != 32 goto label3;

        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: void toggleSelections()>();

     label3:
        return;
    }

    public void keyTyped(java.awt.event.KeyEvent)
    {
        java.awt.event.KeyEvent r1;
        com.jidesoft.swing.CheckBoxListWithSelectable$Handler r0;

        r0 := @this: com.jidesoft.swing.CheckBoxListWithSelectable$Handler;

        r1 := @parameter0: java.awt.event.KeyEvent;

        return;
    }

    public void keyReleased(java.awt.event.KeyEvent)
    {
        java.awt.event.KeyEvent r1;
        com.jidesoft.swing.CheckBoxListWithSelectable$Handler r0;

        r0 := @this: com.jidesoft.swing.CheckBoxListWithSelectable$Handler;

        r1 := @parameter0: java.awt.event.KeyEvent;

        return;
    }

    protected void toggleSelections()
    {
        byte $b3;
        com.jidesoft.swing.CheckBoxListWithSelectable$Handler r0;
        int[] $r2;
        int i0, i1, i2;
        boolean $z0, $z1, $z2;
        java.awt.event.ItemEvent $r10;
        com.jidesoft.swing.CheckBoxListWithSelectable $r1, $r3, $r5, $r11, $r12;
        java.lang.Object $r6;
        com.jidesoft.swing.Selectable $r7, $r8, $r9;
        javax.swing.ListModel $r4;

        r0 := @this: com.jidesoft.swing.CheckBoxListWithSelectable$Handler;

        $r1 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.CheckBoxListWithSelectable: int[] getSelectedIndices()>();

        $r3 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        $r4 = virtualinvoke $r3.<com.jidesoft.swing.CheckBoxListWithSelectable: javax.swing.ListModel getModel()>();

        i0 = lengthof $r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label5;

        i1 = $r2[i2];

        $r6 = interfaceinvoke $r4.<javax.swing.ListModel: java.lang.Object getElementAt(int)>(i1);

        $z0 = $r6 instanceof com.jidesoft.swing.Selectable;

        if $z0 == 0 goto label4;

        $r7 = (com.jidesoft.swing.Selectable) $r6;

        $z1 = interfaceinvoke $r7.<com.jidesoft.swing.Selectable: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        $r8 = (com.jidesoft.swing.Selectable) $r6;

        interfaceinvoke $r8.<com.jidesoft.swing.Selectable: void invertSelected()>();

        $r9 = (com.jidesoft.swing.Selectable) $r6;

        $z2 = interfaceinvoke $r9.<com.jidesoft.swing.Selectable: boolean isSelected()>();

        $r12 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        $r10 = new java.awt.event.ItemEvent;

        $r11 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        if $z2 == 0 goto label2;

        $b3 = 1;

        goto label3;

     label2:
        $b3 = 2;

     label3:
        specialinvoke $r10.<java.awt.event.ItemEvent: void <init>(java.awt.ItemSelectable,int,java.lang.Object,int)>($r11, 701, $r6, $b3);

        virtualinvoke $r12.<com.jidesoft.swing.CheckBoxListWithSelectable: void fireItemStateChanged(java.awt.event.ItemEvent)>($r10);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        $r5 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        virtualinvoke $r5.<com.jidesoft.swing.CheckBoxListWithSelectable: void repaint()>();

        return;
    }

    protected void toggleSelection(int)
    {
        byte $b1;
        com.jidesoft.swing.CheckBoxListWithSelectable$Handler r0;
        int i0;
        boolean $z0, $z1, $z2;
        java.awt.event.ItemEvent $r7;
        com.jidesoft.swing.CheckBoxListWithSelectable $r1, $r8, $r9, $r10;
        java.lang.Object $r3;
        com.jidesoft.swing.Selectable $r4, $r5, $r6;
        javax.swing.ListModel $r2;

        r0 := @this: com.jidesoft.swing.CheckBoxListWithSelectable$Handler;

        i0 := @parameter0: int;

        $r1 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        $r2 = virtualinvoke $r1.<com.jidesoft.swing.CheckBoxListWithSelectable: javax.swing.ListModel getModel()>();

        if i0 < 0 goto label4;

        $r3 = interfaceinvoke $r2.<javax.swing.ListModel: java.lang.Object getElementAt(int)>(i0);

        $z0 = $r3 instanceof com.jidesoft.swing.Selectable;

        if $z0 == 0 goto label3;

        $r4 = (com.jidesoft.swing.Selectable) $r3;

        $z1 = interfaceinvoke $r4.<com.jidesoft.swing.Selectable: boolean isEnabled()>();

        if $z1 == 0 goto label3;

        $r5 = (com.jidesoft.swing.Selectable) $r3;

        interfaceinvoke $r5.<com.jidesoft.swing.Selectable: void invertSelected()>();

        $r6 = (com.jidesoft.swing.Selectable) $r3;

        $z2 = interfaceinvoke $r6.<com.jidesoft.swing.Selectable: boolean isSelected()>();

        $r9 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        $r7 = new java.awt.event.ItemEvent;

        $r8 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        if $z2 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 2;

     label2:
        specialinvoke $r7.<java.awt.event.ItemEvent: void <init>(java.awt.ItemSelectable,int,java.lang.Object,int)>($r8, 701, $r3, $b1);

        virtualinvoke $r9.<com.jidesoft.swing.CheckBoxListWithSelectable: void fireItemStateChanged(java.awt.event.ItemEvent)>($r7);

     label3:
        $r10 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        virtualinvoke $r10.<com.jidesoft.swing.CheckBoxListWithSelectable: void repaint()>();

     label4:
        return;
    }

    protected void toggleSelection()
    {
        int $i0;
        com.jidesoft.swing.CheckBoxListWithSelectable $r1;
        com.jidesoft.swing.CheckBoxListWithSelectable$Handler r0;

        r0 := @this: com.jidesoft.swing.CheckBoxListWithSelectable$Handler;

        $r1 = r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: com.jidesoft.swing.CheckBoxListWithSelectable _list>;

        $i0 = virtualinvoke $r1.<com.jidesoft.swing.CheckBoxListWithSelectable: int getSelectedIndex()>();

        virtualinvoke r0.<com.jidesoft.swing.CheckBoxListWithSelectable$Handler: void toggleSelection(int)>($i0);

        return;
    }
}
