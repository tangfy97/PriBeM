public class org.apache.poi.xssf.extractor.XSSFImportFromXML extends java.lang.Object
{
    private final org.apache.poi.xssf.usermodel.XSSFMap _map;
    private static org.apache.poi.util.POILogger logger;

    public void <init>(org.apache.poi.xssf.usermodel.XSSFMap)
    {
        org.apache.poi.xssf.extractor.XSSFImportFromXML r0;
        org.apache.poi.xssf.usermodel.XSSFMap r1;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFImportFromXML;

        r1 := @parameter0: org.apache.poi.xssf.usermodel.XSSFMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xssf.extractor.XSSFImportFromXML: org.apache.poi.xssf.usermodel.XSSFMap _map> = r1;

        return;
    }

    public void importFromXML(java.lang.String) throws org.xml.sax.SAXException, javax.xml.xpath.XPathExpressionException, java.io.IOException
    {
        org.w3c.dom.Document $r5;
        java.lang.StringBuilder $r30, $r31, $r32, $r33, $r34, $r42, $r43, $r44, $r45, $r46, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r62, $r73, $r74, $r75, $r76, $r77, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r91, $r102, $r103, $r104, $r105, $r106;
        javax.xml.namespace.QName $r18, $r37, $r68;
        org.apache.poi.xssf.usermodel.XSSFMap $r7, $r9;
        javax.xml.xpath.XPath $r12;
        long $l3;
        org.apache.poi.xssf.extractor.XSSFImportFromXML r6;
        short $s1;
        org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext $r101;
        java.lang.String r3, $r4, $r17, $r26, $r27, $r28, $r35, r39, $r47, $r61, $r63, $r64, $r67, $r70, $r78, $r90, $r92;
        java.io.StringReader $r99;
        javax.xml.parsers.DocumentBuilder $r0;
        org.apache.poi.xssf.usermodel.XSSFSheet $r48, $r60, $r65, $r89;
        boolean $z0, $z1, $z2;
        org.apache.poi.util.POILogger $r41, $r52, $r72, $r81;
        java.util.List $r8, $r10, $r22;
        org.apache.poi.xssf.usermodel.helpers.XSSFXmlColumnPr r25;
        org.apache.poi.ss.util.CellReference $r20, $r21;
        org.apache.poi.xssf.usermodel.XSSFRow $r49, r97;
        org.apache.poi.xssf.usermodel.helpers.XSSFSingleXmlCell r93;
        org.w3c.dom.Node $r36, r94;
        int $i0, $i2, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, $i17;
        org.xml.sax.InputSource $r100;
        org.w3c.dom.NodeList r96;
        java.util.Iterator $r14, $r15, $r23;
        org.apache.poi.xssf.usermodel.XSSFTable r95;
        javax.xml.xpath.XPathFactory $r11;
        java.lang.Object $r16, $r19, $r24, $r38, $r66, $r69;
        org.apache.poi.xssf.usermodel.XSSFCell $r50, $r79, r98;

        r6 := @this: org.apache.poi.xssf.extractor.XSSFImportFromXML;

        r3 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.apache.poi.util.DocumentHelper: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r100 = new org.xml.sax.InputSource;

        $r99 = new java.io.StringReader;

        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        specialinvoke $r99.<java.io.StringReader: void <init>(java.lang.String)>($r4);

        specialinvoke $r100.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r99);

        $r5 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>($r100);

        $r7 = r6.<org.apache.poi.xssf.extractor.XSSFImportFromXML: org.apache.poi.xssf.usermodel.XSSFMap _map>;

        $r8 = virtualinvoke $r7.<org.apache.poi.xssf.usermodel.XSSFMap: java.util.List getRelatedSingleXMLCell()>();

        $r9 = r6.<org.apache.poi.xssf.extractor.XSSFImportFromXML: org.apache.poi.xssf.usermodel.XSSFMap _map>;

        $r10 = virtualinvoke $r9.<org.apache.poi.xssf.usermodel.XSSFMap: java.util.List getRelatedTables()>();

        $r11 = staticinvoke <javax.xml.xpath.XPathFactory: javax.xml.xpath.XPathFactory newInstance()>();

        $r12 = virtualinvoke $r11.<javax.xml.xpath.XPathFactory: javax.xml.xpath.XPath newXPath()>();

        $r101 = new org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext;

        specialinvoke $r101.<org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext: void <init>(org.w3c.dom.Document)>($r5);

        interfaceinvoke $r12.<javax.xml.xpath.XPath: void setNamespaceContext(javax.xml.namespace.NamespaceContext)>($r101);

        $r14 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r66 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r93 = (org.apache.poi.xssf.usermodel.helpers.XSSFSingleXmlCell) $r66;

        $r67 = virtualinvoke r93.<org.apache.poi.xssf.usermodel.helpers.XSSFSingleXmlCell: java.lang.String getXpath()>();

        $r68 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName NODE>;

        $r69 = interfaceinvoke $r12.<javax.xml.xpath.XPath: java.lang.Object evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)>($r67, $r5, $r68);

        r94 = (org.w3c.dom.Node) $r69;

        $r70 = interfaceinvoke r94.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        $r72 = <org.apache.poi.xssf.extractor.XSSFImportFromXML: org.apache.poi.util.POILogger logger>;

        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extracting with xpath ");

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : value is \'");

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r72.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(1, $r78);

        $r79 = virtualinvoke r93.<org.apache.poi.xssf.usermodel.helpers.XSSFSingleXmlCell: org.apache.poi.xssf.usermodel.XSSFCell getReferencedCell()>();

        $r81 = <org.apache.poi.xssf.extractor.XSSFImportFromXML: org.apache.poi.util.POILogger logger>;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r82 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting \'");

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' to cell ");

        $i12 = virtualinvoke $r79.<org.apache.poi.xssf.usermodel.XSSFCell: int getColumnIndex()>();

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $i13 = virtualinvoke $r79.<org.apache.poi.xssf.usermodel.XSSFCell: int getRowIndex()>();

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in sheet ");

        $r89 = virtualinvoke $r79.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r90 = virtualinvoke $r89.<org.apache.poi.xssf.usermodel.XSSFSheet: java.lang.String getSheetName()>();

        $r91 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r81.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(1, $r92);

        virtualinvoke $r79.<org.apache.poi.xssf.usermodel.XSSFCell: void setCellValue(java.lang.String)>($r70);

        goto label01;

     label02:
        $r15 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r95 = (org.apache.poi.xssf.usermodel.XSSFTable) $r16;

        $r17 = virtualinvoke r95.<org.apache.poi.xssf.usermodel.XSSFTable: java.lang.String getCommonXpath()>();

        $r18 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName NODESET>;

        $r19 = interfaceinvoke $r12.<javax.xml.xpath.XPath: java.lang.Object evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)>($r17, $r5, $r18);

        r96 = (org.w3c.dom.NodeList) $r19;

        $r20 = virtualinvoke r95.<org.apache.poi.xssf.usermodel.XSSFTable: org.apache.poi.ss.util.CellReference getStartCellReference()>();

        $i0 = virtualinvoke $r20.<org.apache.poi.ss.util.CellReference: int getRow()>();

        i14 = $i0 + 1;

        $r21 = virtualinvoke r95.<org.apache.poi.xssf.usermodel.XSSFTable: org.apache.poi.ss.util.CellReference getStartCellReference()>();

        $s1 = virtualinvoke $r21.<org.apache.poi.ss.util.CellReference: short getCol()>();

        $i17 = (int) $s1;

        i15 = $i17 - 1;

        i16 = 0;

     label04:
        $i2 = interfaceinvoke r96.<org.w3c.dom.NodeList: int getLength()>();

        if i16 >= $i2 goto label09;

        $r22 = virtualinvoke r95.<org.apache.poi.xssf.usermodel.XSSFTable: java.util.List getXmlColumnPrs()>();

        $r23 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r25 = (org.apache.poi.xssf.usermodel.helpers.XSSFXmlColumnPr) $r24;

        $l3 = virtualinvoke r25.<org.apache.poi.xssf.usermodel.helpers.XSSFXmlColumnPr: long getId()>();

        i4 = (int) $l3;

        i5 = i14 + i16;

        i6 = i15 + i4;

        $r26 = virtualinvoke r25.<org.apache.poi.xssf.usermodel.helpers.XSSFXmlColumnPr: java.lang.String getLocalXPath()>();

        $r27 = virtualinvoke $r26.<java.lang.String: java.lang.String substring(int)>(1);

        $i7 = virtualinvoke $r27.<java.lang.String: int indexOf(int)>(47);

        $i8 = $i7 + 1;

        $r28 = virtualinvoke $r26.<java.lang.String: java.lang.String substring(int)>($i8);

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i9 = i16 + 1;

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        $r36 = interfaceinvoke r96.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i16);

        $r37 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName STRING>;

        $r38 = interfaceinvoke $r12.<javax.xml.xpath.XPath: java.lang.Object evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)>($r35, $r36, $r37);

        r39 = (java.lang.String) $r38;

        $r41 = <org.apache.poi.xssf.extractor.XSSFImportFromXML: org.apache.poi.util.POILogger logger>;

        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extracting with xpath ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : value is \'");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(1, $r47);

        $r48 = virtualinvoke r95.<org.apache.poi.xssf.usermodel.XSSFTable: org.apache.poi.xssf.usermodel.XSSFSheet getXSSFSheet()>();

        $r49 = virtualinvoke $r48.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFRow getRow(int)>(i5);

        r97 = $r49;

        if $r49 != null goto label06;

        $r65 = virtualinvoke r95.<org.apache.poi.xssf.usermodel.XSSFTable: org.apache.poi.xssf.usermodel.XSSFSheet getXSSFSheet()>();

        r97 = virtualinvoke $r65.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFRow createRow(int)>(i5);

     label06:
        $r50 = virtualinvoke r97.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFCell getCell(int)>(i6);

        r98 = $r50;

        if $r50 != null goto label07;

        r98 = virtualinvoke r97.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFCell createCell(int)>(i6);

     label07:
        $r52 = <org.apache.poi.xssf.extractor.XSSFImportFromXML: org.apache.poi.util.POILogger logger>;

        $r106 = new java.lang.StringBuilder;

        specialinvoke $r106.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting \'");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' to cell ");

        $i10 = virtualinvoke r98.<org.apache.poi.xssf.usermodel.XSSFCell: int getColumnIndex()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $i11 = virtualinvoke r98.<org.apache.poi.xssf.usermodel.XSSFCell: int getRowIndex()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in sheet ");

        $r60 = virtualinvoke r95.<org.apache.poi.xssf.usermodel.XSSFTable: org.apache.poi.xssf.usermodel.XSSFSheet getXSSFSheet()>();

        $r61 = virtualinvoke $r60.<org.apache.poi.xssf.usermodel.XSSFSheet: java.lang.String getSheetName()>();

        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(1, $r63);

        $r64 = virtualinvoke r39.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r98.<org.apache.poi.xssf.usermodel.XSSFCell: void setCellValue(java.lang.String)>($r64);

        goto label05;

     label08:
        i16 = i16 + 1;

        goto label04;

     label09:
        goto label03;

     label10:
        return;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/xssf/extractor/XSSFImportFromXML;");

        <org.apache.poi.xssf.extractor.XSSFImportFromXML: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
