public abstract class org.apache.batik.bridge.AnimatableSVGBridge extends org.apache.batik.bridge.AbstractSVGBridge implements org.apache.batik.dom.svg.SVGAnimationTargetContext
{
    protected org.w3c.dom.Element e;
    protected org.apache.batik.bridge.BridgeContext ctx;
    protected java.util.HashMap targetListeners;

    public void <init>()
    {
        org.apache.batik.bridge.AnimatableSVGBridge r0;

        r0 := @this: org.apache.batik.bridge.AnimatableSVGBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractSVGBridge: void <init>()>();

        return;
    }

    public void addTargetListener(java.lang.String, org.apache.batik.dom.anim.AnimationTargetListener)
    {
        org.apache.batik.dom.anim.AnimationTargetListener r5;
        java.util.HashMap $r1, $r3, $r7, $r8;
        org.apache.batik.bridge.AnimatableSVGBridge r0;
        java.lang.Object $r4;
        java.lang.String r2;
        java.util.LinkedList $r6, $r9, r10;

        r0 := @this: org.apache.batik.bridge.AnimatableSVGBridge;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: org.apache.batik.dom.anim.AnimationTargetListener;

        $r1 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: java.util.HashMap targetListeners>;

        if $r1 != null goto label1;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.bridge.AnimatableSVGBridge: java.util.HashMap targetListeners> = $r8;

     label1:
        $r3 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: java.util.HashMap targetListeners>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r9 = (java.util.LinkedList) $r4;

        r10 = $r9;

        if $r9 != null goto label2;

        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        r10 = $r6;

        $r7 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: java.util.HashMap targetListeners>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6);

     label2:
        virtualinvoke r10.<java.util.LinkedList: boolean add(java.lang.Object)>(r5);

        return;
    }

    public void removeTargetListener(java.lang.String, org.apache.batik.dom.anim.AnimationTargetListener)
    {
        org.apache.batik.dom.anim.AnimationTargetListener r5;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        java.util.LinkedList r4;
        org.apache.batik.bridge.AnimatableSVGBridge r0;

        r0 := @this: org.apache.batik.bridge.AnimatableSVGBridge;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: org.apache.batik.dom.anim.AnimationTargetListener;

        $r2 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: java.util.HashMap targetListeners>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.LinkedList) $r3;

        virtualinvoke r4.<java.util.LinkedList: boolean remove(java.lang.Object)>(r5);

        return;
    }

    protected void fireBaseAttributeListeners(java.lang.String)
    {
        org.apache.batik.dom.anim.AnimationTarget $r10;
        java.util.Iterator $r6;
        org.apache.batik.dom.anim.AnimationTargetListener r8;
        java.util.HashMap $r1, $r3;
        org.apache.batik.bridge.AnimatableSVGBridge r0;
        org.w3c.dom.Element $r9;
        java.lang.Object $r4, $r7;
        java.lang.String r2;
        java.util.LinkedList r5;
        boolean $z0;

        r0 := @this: org.apache.batik.bridge.AnimatableSVGBridge;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: java.util.HashMap targetListeners>;

        if $r1 == null goto label3;

        $r3 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: java.util.HashMap targetListeners>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (java.util.LinkedList) $r4;

        if r5 == null goto label3;

        $r6 = virtualinvoke r5.<java.util.AbstractSequentialList: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.batik.dom.anim.AnimationTargetListener) $r7;

        $r9 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $r10 = (org.apache.batik.dom.anim.AnimationTarget) $r9;

        interfaceinvoke r8.<org.apache.batik.dom.anim.AnimationTargetListener: void baseValueChanged(org.apache.batik.dom.anim.AnimationTarget,java.lang.String,java.lang.String,boolean)>($r10, null, r2, 1);

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

     label3:
        return;
    }

    public abstract float getFontSize();

    public abstract float getViewportHeight();

    public abstract float getViewportWidth();

    public abstract java.awt.geom.AffineTransform getGlobalTransform();

    public abstract java.awt.geom.AffineTransform getCTM();

    public abstract void setScreenTransform(java.awt.geom.AffineTransform);

    public abstract java.awt.geom.AffineTransform getScreenTransform();

    public abstract java.awt.geom.Rectangle2D getBBox();

    public abstract float getPixelToMM();

    public abstract float getPixelUnitToMillimeter();
}
