class com.pff.PSTTimeZone$TZRule extends java.lang.Object
{
    com.pff.PSTTimeZone$SYSTEMTIME dtStart;
    int lBias;
    int lStandardBias;
    int lDaylightBias;
    com.pff.PSTTimeZone$SYSTEMTIME startStandard;
    com.pff.PSTTimeZone$SYSTEMTIME startDaylight;
    final com.pff.PSTTimeZone this$0;

    void <init>(com.pff.PSTTimeZone, com.pff.PSTTimeZone$SYSTEMTIME, byte[], int)
    {
        byte[] r3;
        com.pff.PSTTimeZone r1;
        com.pff.PSTTimeZone$TZRule r0;
        com.pff.PSTTimeZone$SYSTEMTIME r2, $r4, $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.pff.PSTTimeZone$TZRule;

        r1 := @parameter0: com.pff.PSTTimeZone;

        r2 := @parameter1: com.pff.PSTTimeZone$SYSTEMTIME;

        r3 := @parameter2: byte[];

        i0 := @parameter3: int;

        r0.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME dtStart> = r2;

        specialinvoke r0.<com.pff.PSTTimeZone$TZRule: void InitBiases(byte[],int)>(r3, i0);

        $i2 = i0 + 12;

        $i1 = i0 + 14;

        staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r3, $i2, $i1);

        $r4 = new com.pff.PSTTimeZone$SYSTEMTIME;

        $i3 = i0 + 14;

        specialinvoke $r4.<com.pff.PSTTimeZone$SYSTEMTIME: void <init>(com.pff.PSTTimeZone,byte[],int)>(r1, r3, $i3);

        r0.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startStandard> = $r4;

        $i5 = i0 + 30;

        $i4 = i0 + 32;

        staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r3, $i5, $i4);

        $r5 = new com.pff.PSTTimeZone$SYSTEMTIME;

        $i6 = i0 + 32;

        specialinvoke $r5.<com.pff.PSTTimeZone$SYSTEMTIME: void <init>(com.pff.PSTTimeZone,byte[],int)>(r1, r3, $i6);

        r0.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startDaylight> = $r5;

        return;
    }

    void <init>(com.pff.PSTTimeZone, byte[], int)
    {
        byte[] r3;
        com.pff.PSTTimeZone r1;
        com.pff.PSTTimeZone$TZRule r0;
        com.pff.PSTTimeZone$SYSTEMTIME $r2, $r4, $r5;
        int i0, $i1, $i2, $i3;

        r0 := @this: com.pff.PSTTimeZone$TZRule;

        r1 := @parameter0: com.pff.PSTTimeZone;

        r3 := @parameter1: byte[];

        i0 := @parameter2: int;

        r0.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.pff.PSTTimeZone$SYSTEMTIME;

        specialinvoke $r2.<com.pff.PSTTimeZone$SYSTEMTIME: void <init>(com.pff.PSTTimeZone,byte[],int)>(r1, r3, i0);

        r0.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME dtStart> = $r2;

        $i1 = i0 + 16;

        specialinvoke r0.<com.pff.PSTTimeZone$TZRule: void InitBiases(byte[],int)>(r3, $i1);

        $r4 = new com.pff.PSTTimeZone$SYSTEMTIME;

        $i2 = i0 + 28;

        specialinvoke $r4.<com.pff.PSTTimeZone$SYSTEMTIME: void <init>(com.pff.PSTTimeZone,byte[],int)>(r1, r3, $i2);

        r0.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startStandard> = $r4;

        $r5 = new com.pff.PSTTimeZone$SYSTEMTIME;

        $i3 = i0 + 44;

        specialinvoke $r5.<com.pff.PSTTimeZone$SYSTEMTIME: void <init>(com.pff.PSTTimeZone,byte[],int)>(r1, r3, $i3);

        r0.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startDaylight> = $r5;

        return;
    }

    private void InitBiases(byte[], int)
    {
        byte[] r1;
        long $l2, $l6, $l10;
        com.pff.PSTTimeZone$TZRule r0;
        int i0, $i1, $i3, $i4, $i5, $i7, $i8, $i9, $i11;

        r0 := @this: com.pff.PSTTimeZone$TZRule;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 + 4;

        $l2 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r1, i0, $i1);

        $i3 = (int) $l2;

        r0.<com.pff.PSTTimeZone$TZRule: int lBias> = $i3;

        $i5 = i0 + 4;

        $i4 = i0 + 8;

        $l6 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r1, $i5, $i4);

        $i7 = (int) $l6;

        r0.<com.pff.PSTTimeZone$TZRule: int lStandardBias> = $i7;

        $i9 = i0 + 8;

        $i8 = i0 + 12;

        $l10 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r1, $i9, $i8);

        $i11 = (int) $l10;

        r0.<com.pff.PSTTimeZone$TZRule: int lDaylightBias> = $i11;

        return;
    }

    boolean isEqual(com.pff.PSTTimeZone$TZRule)
    {
        com.pff.PSTTimeZone$SYSTEMTIME $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3;
        com.pff.PSTTimeZone$TZRule r0, r1;

        r0 := @this: com.pff.PSTTimeZone$TZRule;

        r1 := @parameter0: com.pff.PSTTimeZone$TZRule;

        $r3 = r0.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME dtStart>;

        $r2 = r1.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME dtStart>;

        $z0 = virtualinvoke $r3.<com.pff.PSTTimeZone$SYSTEMTIME: boolean isEqual(com.pff.PSTTimeZone$SYSTEMTIME)>($r2);

        if $z0 == 0 goto label1;

        $i1 = r0.<com.pff.PSTTimeZone$TZRule: int lBias>;

        $i0 = r1.<com.pff.PSTTimeZone$TZRule: int lBias>;

        if $i1 != $i0 goto label1;

        $i3 = r0.<com.pff.PSTTimeZone$TZRule: int lStandardBias>;

        $i2 = r1.<com.pff.PSTTimeZone$TZRule: int lStandardBias>;

        if $i3 != $i2 goto label1;

        $i5 = r0.<com.pff.PSTTimeZone$TZRule: int lDaylightBias>;

        $i4 = r1.<com.pff.PSTTimeZone$TZRule: int lDaylightBias>;

        if $i5 != $i4 goto label1;

        $r5 = r0.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startStandard>;

        $r4 = r1.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startStandard>;

        $z1 = virtualinvoke $r5.<com.pff.PSTTimeZone$SYSTEMTIME: boolean isEqual(com.pff.PSTTimeZone$SYSTEMTIME)>($r4);

        if $z1 == 0 goto label1;

        $r7 = r0.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startDaylight>;

        $r6 = r1.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startDaylight>;

        $z2 = virtualinvoke $r7.<com.pff.PSTTimeZone$SYSTEMTIME: boolean isEqual(com.pff.PSTTimeZone$SYSTEMTIME)>($r6);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }
}
