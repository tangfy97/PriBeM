public class org.jdesktop.swingx.decorator.CompoundHighlighter extends org.jdesktop.swingx.decorator.AbstractHighlighter implements org.jdesktop.swingx.plaf.UIDependent
{
    public static final org.jdesktop.swingx.decorator.Highlighter[] EMPTY_HIGHLIGHTERS;
    protected java.util.List highlighters;
    private javax.swing.event.ChangeListener highlighterChangeListener;

    public transient void <init>(org.jdesktop.swingx.decorator.Highlighter[])
    {
        org.jdesktop.swingx.decorator.CompoundHighlighter r0;
        org.jdesktop.swingx.decorator.Highlighter[] r1;

        r0 := @this: org.jdesktop.swingx.decorator.CompoundHighlighter;

        r1 := @parameter0: org.jdesktop.swingx.decorator.Highlighter[];

        specialinvoke r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: void <init>(org.jdesktop.swingx.decorator.HighlightPredicate,org.jdesktop.swingx.decorator.Highlighter[])>(null, r1);

        return;
    }

    public transient void <init>(org.jdesktop.swingx.decorator.HighlightPredicate, org.jdesktop.swingx.decorator.Highlighter[])
    {
        org.jdesktop.swingx.decorator.CompoundHighlighter r0;
        org.jdesktop.swingx.decorator.HighlightPredicate r1;
        org.jdesktop.swingx.decorator.Highlighter[] r3;
        java.util.ArrayList $r2;

        r0 := @this: org.jdesktop.swingx.decorator.CompoundHighlighter;

        r1 := @parameter0: org.jdesktop.swingx.decorator.HighlightPredicate;

        r3 := @parameter1: org.jdesktop.swingx.decorator.Highlighter[];

        specialinvoke r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: void <init>(org.jdesktop.swingx.decorator.HighlightPredicate)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: java.util.List highlighters> = $r2;

        virtualinvoke r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: void setHighlighters(org.jdesktop.swingx.decorator.Highlighter[])>(r3);

        return;
    }

    public transient void setHighlighters(org.jdesktop.swingx.decorator.Highlighter[])
    {
        org.jdesktop.swingx.decorator.Highlighter[] r0;
        org.jdesktop.swingx.decorator.Highlighter r3;
        java.util.List $r2;
        org.jdesktop.swingx.decorator.CompoundHighlighter r1;
        int $i0, $i1, i2;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.decorator.CompoundHighlighter;

        r0 := @parameter0: org.jdesktop.swingx.decorator.Highlighter[];

        staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r0, "Highlighter must not be null");

        $r2 = r1.<org.jdesktop.swingx.decorator.CompoundHighlighter: java.util.List highlighters>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        return;

     label1:
        specialinvoke r1.<org.jdesktop.swingx.decorator.CompoundHighlighter: void removeAllHighlightersSilently()>();

        $i1 = lengthof r0;

        i2 = 0;

     label2:
        if i2 >= $i1 goto label3;

        r3 = r0[i2];

        specialinvoke r1.<org.jdesktop.swingx.decorator.CompoundHighlighter: void addHighlighterSilently(org.jdesktop.swingx.decorator.Highlighter,boolean)>(r3, 0);

        i2 = i2 + 1;

        goto label2;

     label3:
        virtualinvoke r1.<org.jdesktop.swingx.decorator.CompoundHighlighter: void fireStateChanged()>();

        return;
    }

    private void removeAllHighlightersSilently()
    {
        java.util.Iterator $r2;
        org.jdesktop.swingx.decorator.Highlighter r5;
        java.util.List $r1, $r3;
        org.jdesktop.swingx.decorator.CompoundHighlighter r0;
        java.lang.Object $r4;
        javax.swing.event.ChangeListener $r6;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.decorator.CompoundHighlighter;

        $r1 = r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: java.util.List highlighters>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.jdesktop.swingx.decorator.Highlighter) $r4;

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: javax.swing.event.ChangeListener getHighlighterChangeListener()>();

        interfaceinvoke r5.<org.jdesktop.swingx.decorator.Highlighter: void removeChangeListener(javax.swing.event.ChangeListener)>($r6);

        goto label1;

     label2:
        $r3 = r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: java.util.List highlighters>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        return;
    }

    public void addHighlighter(org.jdesktop.swingx.decorator.Highlighter)
    {
        org.jdesktop.swingx.decorator.Highlighter r1;
        org.jdesktop.swingx.decorator.CompoundHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.CompoundHighlighter;

        r1 := @parameter0: org.jdesktop.swingx.decorator.Highlighter;

        virtualinvoke r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: void addHighlighter(org.jdesktop.swingx.decorator.Highlighter,boolean)>(r1, 0);

        return;
    }

    public void addHighlighter(org.jdesktop.swingx.decorator.Highlighter, boolean)
    {
        org.jdesktop.swingx.decorator.Highlighter r1;
        org.jdesktop.swingx.decorator.CompoundHighlighter r0;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.decorator.CompoundHighlighter;

        r1 := @parameter0: org.jdesktop.swingx.decorator.Highlighter;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: void addHighlighterSilently(org.jdesktop.swingx.decorator.Highlighter,boolean)>(r1, z0);

        virtualinvoke r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: void fireStateChanged()>();

        return;
    }

    private void addHighlighterSilently(org.jdesktop.swingx.decorator.Highlighter, boolean)
    {
        org.jdesktop.swingx.decorator.Highlighter r0;
        java.util.List $r2, $r3, $r5;
        org.jdesktop.swingx.decorator.CompoundHighlighter r1;
        int $i0;
        javax.swing.event.ChangeListener $r4;
        boolean z0;

        r1 := @this: org.jdesktop.swingx.decorator.CompoundHighlighter;

        r0 := @parameter0: org.jdesktop.swingx.decorator.Highlighter;

        z0 := @parameter1: boolean;

        staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r0, "Highlighter must not be null");

        if z0 == 0 goto label1;

        $r5 = r1.<org.jdesktop.swingx.decorator.CompoundHighlighter: java.util.List highlighters>;

        interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(0, r0);

        goto label2;

     label1:
        $r3 = r1.<org.jdesktop.swingx.decorator.CompoundHighlighter: java.util.List highlighters>;

        $r2 = r1.<org.jdesktop.swingx.decorator.CompoundHighlighter: java.util.List highlighters>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>($i0, r0);

     label2:
        specialinvoke r1.<org.jdesktop.swingx.decorator.CompoundHighlighter: void updateUI(org.jdesktop.swingx.decorator.Highlighter)>(r0);

        $r4 = virtualinvoke r1.<org.jdesktop.swingx.decorator.CompoundHighlighter: javax.swing.event.ChangeListener getHighlighterChangeListener()>();

        interfaceinvoke r0.<org.jdesktop.swingx.decorator.Highlighter: void addChangeListener(javax.swing.event.ChangeListener)>($r4);

        return;
    }

    public void removeHighlighter(org.jdesktop.swingx.decorator.Highlighter)
    {
        org.jdesktop.swingx.decorator.Highlighter r1;
        java.util.List $r2;
        org.jdesktop.swingx.decorator.CompoundHighlighter r0;
        javax.swing.event.ChangeListener $r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.decorator.CompoundHighlighter;

        r1 := @parameter0: org.jdesktop.swingx.decorator.Highlighter;

        $r2 = r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: java.util.List highlighters>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: javax.swing.event.ChangeListener getHighlighterChangeListener()>();

        interfaceinvoke r1.<org.jdesktop.swingx.decorator.Highlighter: void removeChangeListener(javax.swing.event.ChangeListener)>($r3);

        virtualinvoke r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: void fireStateChanged()>();

     label1:
        return;
    }

    public org.jdesktop.swingx.decorator.Highlighter[] getHighlighters()
    {
        java.lang.Object[] $r5;
        org.jdesktop.swingx.decorator.Highlighter[] $r4, $r6, $r7;
        java.util.List $r1, $r2, $r3;
        org.jdesktop.swingx.decorator.CompoundHighlighter r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.decorator.CompoundHighlighter;

        $r1 = r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: java.util.List highlighters>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r7 = <org.jdesktop.swingx.decorator.CompoundHighlighter: org.jdesktop.swingx.decorator.Highlighter[] EMPTY_HIGHLIGHTERS>;

        return $r7;

     label1:
        $r3 = r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: java.util.List highlighters>;

        $r2 = r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: java.util.List highlighters>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r4 = newarray (org.jdesktop.swingx.decorator.Highlighter)[$i0];

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.jdesktop.swingx.decorator.Highlighter[]) $r5;

        return $r6;
    }

    public void updateUI()
    {
        org.jdesktop.swingx.decorator.Highlighter r4;
        java.util.List $r1;
        org.jdesktop.swingx.decorator.CompoundHighlighter r0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.decorator.CompoundHighlighter;

        $r1 = r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: java.util.List highlighters>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jdesktop.swingx.decorator.Highlighter) $r3;

        specialinvoke r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: void updateUI(org.jdesktop.swingx.decorator.Highlighter)>(r4);

        goto label1;

     label2:
        return;
    }

    protected javax.swing.event.ChangeListener getHighlighterChangeListener()
    {
        org.jdesktop.swingx.decorator.CompoundHighlighter r0;
        javax.swing.event.ChangeListener $r1, $r2, $r3;

        r0 := @this: org.jdesktop.swingx.decorator.CompoundHighlighter;

        $r1 = r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: javax.swing.event.ChangeListener highlighterChangeListener>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: javax.swing.event.ChangeListener createHighlighterChangeListener()>();

        r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: javax.swing.event.ChangeListener highlighterChangeListener> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: javax.swing.event.ChangeListener highlighterChangeListener>;

        return $r2;
    }

    protected javax.swing.event.ChangeListener createHighlighterChangeListener()
    {
        org.jdesktop.swingx.decorator.CompoundHighlighter$1 $r1;
        org.jdesktop.swingx.decorator.CompoundHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.CompoundHighlighter;

        $r1 = new org.jdesktop.swingx.decorator.CompoundHighlighter$1;

        specialinvoke $r1.<org.jdesktop.swingx.decorator.CompoundHighlighter$1: void <init>(org.jdesktop.swingx.decorator.CompoundHighlighter)>(r0);

        r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: javax.swing.event.ChangeListener highlighterChangeListener> = $r1;

        return $r1;
    }

    private void updateUI(org.jdesktop.swingx.decorator.Highlighter)
    {
        org.jdesktop.swingx.decorator.Highlighter r0;
        org.jdesktop.swingx.plaf.UIDependent $r1;
        org.jdesktop.swingx.decorator.CompoundHighlighter r2;
        boolean $z0;

        r2 := @this: org.jdesktop.swingx.decorator.CompoundHighlighter;

        r0 := @parameter0: org.jdesktop.swingx.decorator.Highlighter;

        $z0 = r0 instanceof org.jdesktop.swingx.plaf.UIDependent;

        if $z0 == 0 goto label1;

        $r1 = (org.jdesktop.swingx.plaf.UIDependent) r0;

        interfaceinvoke $r1.<org.jdesktop.swingx.plaf.UIDependent: void updateUI()>();

     label1:
        return;
    }

    protected java.awt.Component doHighlight(java.awt.Component, org.jdesktop.swingx.decorator.ComponentAdapter)
    {
        java.util.Iterator $r2;
        org.jdesktop.swingx.decorator.ComponentAdapter r5;
        java.awt.Component r6;
        org.jdesktop.swingx.decorator.Highlighter r4;
        java.util.List $r1;
        org.jdesktop.swingx.decorator.CompoundHighlighter r0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.decorator.CompoundHighlighter;

        r6 := @parameter0: java.awt.Component;

        r5 := @parameter1: org.jdesktop.swingx.decorator.ComponentAdapter;

        $r1 = r0.<org.jdesktop.swingx.decorator.CompoundHighlighter: java.util.List highlighters>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jdesktop.swingx.decorator.Highlighter) $r3;

        r6 = interfaceinvoke r4.<org.jdesktop.swingx.decorator.Highlighter: java.awt.Component highlight(java.awt.Component,org.jdesktop.swingx.decorator.ComponentAdapter)>(r6, r5);

        goto label1;

     label2:
        return r6;
    }

    static void <clinit>()
    {
        org.jdesktop.swingx.decorator.Highlighter[] $r0;

        $r0 = newarray (org.jdesktop.swingx.decorator.Highlighter)[0];

        <org.jdesktop.swingx.decorator.CompoundHighlighter: org.jdesktop.swingx.decorator.Highlighter[] EMPTY_HIGHLIGHTERS> = $r0;

        return;
    }
}
