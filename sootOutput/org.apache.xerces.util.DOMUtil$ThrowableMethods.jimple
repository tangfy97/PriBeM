class org.apache.xerces.util.DOMUtil$ThrowableMethods extends java.lang.Object
{
    private static java.lang.reflect.Method fgThrowableInitCauseMethod;
    private static boolean fgThrowableMethodsAvailable;
    static java.lang.Class class$java$lang$Throwable;

    private void <init>()
    {
        org.apache.xerces.util.DOMUtil$ThrowableMethods r0;

        r0 := @this: org.apache.xerces.util.DOMUtil$ThrowableMethods;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean access$000()
    {
        boolean $z0;

        $z0 = <org.apache.xerces.util.DOMUtil$ThrowableMethods: boolean fgThrowableMethodsAvailable>;

        return $z0;
    }

    static java.lang.reflect.Method access$100()
    {
        java.lang.reflect.Method $r0;

        $r0 = <org.apache.xerces.util.DOMUtil$ThrowableMethods: java.lang.reflect.Method fgThrowableInitCauseMethod>;

        return $r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r5;
        java.lang.Exception $r3;
        java.lang.Class $r0, $r1, $r2, $r4, $r6, $r7;
        java.lang.reflect.Method $r8;

        <org.apache.xerces.util.DOMUtil$ThrowableMethods: java.lang.reflect.Method fgThrowableInitCauseMethod> = null;

        <org.apache.xerces.util.DOMUtil$ThrowableMethods: boolean fgThrowableMethodsAvailable> = 0;

     label1:
        $r0 = <org.apache.xerces.util.DOMUtil$ThrowableMethods: java.lang.Class class$java$lang$Throwable>;

        if $r0 != null goto label2;

        $r2 = staticinvoke <org.apache.xerces.util.DOMUtil$ThrowableMethods: java.lang.Class class$(java.lang.String)>("java.lang.Throwable");

        $r4 = $r2;

        <org.apache.xerces.util.DOMUtil$ThrowableMethods: java.lang.Class class$java$lang$Throwable> = $r2;

        goto label3;

     label2:
        $r4 = <org.apache.xerces.util.DOMUtil$ThrowableMethods: java.lang.Class class$java$lang$Throwable>;

     label3:
        $r5 = newarray (java.lang.Class)[1];

        $r1 = <org.apache.xerces.util.DOMUtil$ThrowableMethods: java.lang.Class class$java$lang$Throwable>;

        if $r1 != null goto label4;

        $r6 = staticinvoke <org.apache.xerces.util.DOMUtil$ThrowableMethods: java.lang.Class class$(java.lang.String)>("java.lang.Throwable");

        $r7 = $r6;

        <org.apache.xerces.util.DOMUtil$ThrowableMethods: java.lang.Class class$java$lang$Throwable> = $r6;

        goto label5;

     label4:
        $r7 = <org.apache.xerces.util.DOMUtil$ThrowableMethods: java.lang.Class class$java$lang$Throwable>;

     label5:
        $r5[0] = $r7;

        $r8 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("initCause", $r5);

        <org.apache.xerces.util.DOMUtil$ThrowableMethods: java.lang.reflect.Method fgThrowableInitCauseMethod> = $r8;

        <org.apache.xerces.util.DOMUtil$ThrowableMethods: boolean fgThrowableMethodsAvailable> = 1;

     label6:
        goto label8;

     label7:
        $r3 := @caughtexception;

        <org.apache.xerces.util.DOMUtil$ThrowableMethods: java.lang.reflect.Method fgThrowableInitCauseMethod> = null;

        <org.apache.xerces.util.DOMUtil$ThrowableMethods: boolean fgThrowableMethodsAvailable> = 0;

     label8:
        return;

        catch java.lang.Exception from label1 to label6 with label7;
    }
}
