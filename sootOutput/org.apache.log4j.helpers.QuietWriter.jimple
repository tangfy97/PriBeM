public class org.apache.log4j.helpers.QuietWriter extends java.io.FilterWriter
{
    protected org.apache.log4j.spi.ErrorHandler errorHandler;

    public void <init>(java.io.Writer, org.apache.log4j.spi.ErrorHandler)
    {
        java.io.Writer r1;
        org.apache.log4j.spi.ErrorHandler r2;
        org.apache.log4j.helpers.QuietWriter r0;

        r0 := @this: org.apache.log4j.helpers.QuietWriter;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: org.apache.log4j.spi.ErrorHandler;

        specialinvoke r0.<java.io.FilterWriter: void <init>(java.io.Writer)>(r1);

        virtualinvoke r0.<org.apache.log4j.helpers.QuietWriter: void setErrorHandler(org.apache.log4j.spi.ErrorHandler)>(r2);

        return;
    }

    public void write(java.lang.String)
    {
        org.apache.log4j.spi.ErrorHandler $r5;
        java.lang.Exception $r3;
        java.lang.StringBuffer $r4, $r6, $r7, $r8;
        java.io.Writer $r2;
        java.lang.String r0, $r9;
        org.apache.log4j.helpers.QuietWriter r1;

        r1 := @this: org.apache.log4j.helpers.QuietWriter;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label4;

     label1:
        $r2 = r1.<java.io.FilterWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>(r0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r5 = r1.<org.apache.log4j.helpers.QuietWriter: org.apache.log4j.spi.ErrorHandler errorHandler>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Failed to write [");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String,java.lang.Exception,int)>($r9, $r3, 1);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void flush()
    {
        java.io.Writer $r1;
        org.apache.log4j.spi.ErrorHandler $r3;
        org.apache.log4j.helpers.QuietWriter r0;
        java.lang.Exception $r2;

        r0 := @this: org.apache.log4j.helpers.QuietWriter;

     label1:
        $r1 = r0.<java.io.FilterWriter: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void flush()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = r0.<org.apache.log4j.helpers.QuietWriter: org.apache.log4j.spi.ErrorHandler errorHandler>;

        interfaceinvoke $r3.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String,java.lang.Exception,int)>("Failed to flush writer,", $r2, 2);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setErrorHandler(org.apache.log4j.spi.ErrorHandler)
    {
        org.apache.log4j.spi.ErrorHandler r0;
        java.lang.IllegalArgumentException $r2;
        org.apache.log4j.helpers.QuietWriter r1;

        r1 := @this: org.apache.log4j.helpers.QuietWriter;

        r0 := @parameter0: org.apache.log4j.spi.ErrorHandler;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attempted to set null ErrorHandler.");

        throw $r2;

     label1:
        r1.<org.apache.log4j.helpers.QuietWriter: org.apache.log4j.spi.ErrorHandler errorHandler> = r0;

        return;
    }
}
