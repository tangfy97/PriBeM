public class org.apache.batik.util.gui.MemoryMonitor$History extends javax.swing.JPanel implements org.apache.batik.util.gui.MemoryMonitor$MemoryChangeListener
{
    public static final int PREFERRED_WIDTH;
    public static final int PREFERRED_HEIGHT;
    protected static final java.awt.Stroke GRID_LINES_STROKE;
    protected static final java.awt.Stroke CURVE_STROKE;
    protected static final java.awt.Stroke BORDER_STROKE;
    protected java.awt.Color gridLinesColor;
    protected java.awt.Color curveColor;
    protected java.awt.Color borderColor;
    protected java.util.List data;
    protected int xShift;
    protected long totalMemory;
    protected long freeMemory;
    protected java.awt.geom.GeneralPath path;

    public void <init>()
    {
        java.awt.Color $r1, $r2, $r3, $r6;
        org.apache.batik.util.gui.MemoryMonitor$History r0;
        java.awt.Dimension $r7;
        java.awt.geom.GeneralPath $r5;
        java.util.LinkedList $r4;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$History;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(0, 130, 0);

        r0.<org.apache.batik.util.gui.MemoryMonitor$History: java.awt.Color gridLinesColor> = $r1;

        $r2 = <java.awt.Color: java.awt.Color yellow>;

        r0.<org.apache.batik.util.gui.MemoryMonitor$History: java.awt.Color curveColor> = $r2;

        $r3 = <java.awt.Color: java.awt.Color green>;

        r0.<org.apache.batik.util.gui.MemoryMonitor$History: java.awt.Color borderColor> = $r3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.batik.util.gui.MemoryMonitor$History: java.util.List data> = $r4;

        r0.<org.apache.batik.util.gui.MemoryMonitor$History: int xShift> = 0;

        $r5 = new java.awt.geom.GeneralPath;

        specialinvoke $r5.<java.awt.geom.GeneralPath: void <init>()>();

        r0.<org.apache.batik.util.gui.MemoryMonitor$History: java.awt.geom.GeneralPath path> = $r5;

        $r6 = <java.awt.Color: java.awt.Color black>;

        virtualinvoke r0.<javax.swing.JComponent: void setBackground(java.awt.Color)>($r6);

        $r7 = new java.awt.Dimension;

        specialinvoke $r7.<java.awt.Dimension: void <init>(int,int)>(200, 100);

        virtualinvoke r0.<javax.swing.JComponent: void setPreferredSize(java.awt.Dimension)>($r7);

        return;
    }

    public void memoryStateChanged(long, long)
    {
        org.apache.batik.util.gui.MemoryMonitor$History r0;
        java.lang.Long $r1, $r8, $r10;
        boolean $z0;
        java.util.List $r2, $r3, $r4, $r11;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        java.awt.geom.GeneralPath $r6;
        long l0, l1, $l2, $l3, $l4, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13;
        int $i5, $i14, $i15, $i16, i17;
        java.util.Iterator $r5;
        java.lang.Object $r7, $r9;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$History;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0.<org.apache.batik.util.gui.MemoryMonitor$History: long totalMemory> = l0;

        r0.<org.apache.batik.util.gui.MemoryMonitor$History: long freeMemory> = l1;

        $r2 = r0.<org.apache.batik.util.gui.MemoryMonitor$History: java.util.List data>;

        $r1 = new java.lang.Long;

        $l3 = r0.<org.apache.batik.util.gui.MemoryMonitor$History: long totalMemory>;

        $l2 = r0.<org.apache.batik.util.gui.MemoryMonitor$History: long freeMemory>;

        $l4 = $l3 - $l2;

        specialinvoke $r1.<java.lang.Long: void <init>(long)>($l4);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r3 = r0.<org.apache.batik.util.gui.MemoryMonitor$History: java.util.List data>;

        $i5 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i5 <= 190 goto label1;

        $r11 = r0.<org.apache.batik.util.gui.MemoryMonitor$History: java.util.List data>;

        interfaceinvoke $r11.<java.util.List: java.lang.Object remove(int)>(0);

        $i14 = r0.<org.apache.batik.util.gui.MemoryMonitor$History: int xShift>;

        $i15 = $i14 + 1;

        $i16 = $i15 % 10;

        r0.<org.apache.batik.util.gui.MemoryMonitor$History: int xShift> = $i16;

     label1:
        $r4 = r0.<org.apache.batik.util.gui.MemoryMonitor$History: java.util.List data>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        $r6 = new java.awt.geom.GeneralPath;

        specialinvoke $r6.<java.awt.geom.GeneralPath: void <init>()>();

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.Long) $r7;

        $l6 = virtualinvoke $r8.<java.lang.Long: long longValue()>();

        $l7 = r0.<org.apache.batik.util.gui.MemoryMonitor$History: long totalMemory>;

        $l8 = $l7 - $l6;

        $f1 = (float) $l8;

        $l9 = r0.<org.apache.batik.util.gui.MemoryMonitor$History: long totalMemory>;

        $f0 = (float) $l9;

        $f2 = $f1 / $f0;

        $f3 = $f2 * 80.0F;

        $f4 = $f3 + 10.0F;

        virtualinvoke $r6.<java.awt.geom.GeneralPath: void moveTo(float,float)>(5.0F, $f4);

        i17 = 6;

        goto label3;

     label2:
        $r9 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.lang.Long) $r9;

        $l10 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

        $f10 = (float) i17;

        $l11 = r0.<org.apache.batik.util.gui.MemoryMonitor$History: long totalMemory>;

        $l12 = $l11 - $l10;

        $f6 = (float) $l12;

        $l13 = r0.<org.apache.batik.util.gui.MemoryMonitor$History: long totalMemory>;

        $f5 = (float) $l13;

        $f7 = $f6 / $f5;

        $f8 = $f7 * 80.0F;

        $f9 = $f8 + 10.0F;

        virtualinvoke $r6.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f10, $f9);

        i17 = i17 + 1;

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        r0.<org.apache.batik.util.gui.MemoryMonitor$History: java.awt.geom.GeneralPath path> = $r6;

        return;
    }

    protected void paintComponent(java.awt.Graphics)
    {
        java.awt.Color $r7, $r11, $r15;
        org.apache.batik.util.gui.MemoryMonitor$History r0;
        java.awt.geom.Rectangle2D$Double $r16;
        java.awt.geom.AffineTransform $r6;
        java.awt.Dimension $r5;
        java.awt.Graphics r1;
        java.awt.geom.GeneralPath $r13;
        java.awt.Graphics2D r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9;
        double $d0, d1, $d2, d3, $d4, $d5, $d6, $d7;
        java.awt.Stroke $r8, $r12, $r14;
        java.awt.geom.Line2D$Double $r9, $r10;
        java.awt.RenderingHints$Key $r4;
        java.lang.Object $r3;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$History;

        r1 := @parameter0: java.awt.Graphics;

        specialinvoke r0.<javax.swing.JComponent: void paintComponent(java.awt.Graphics)>(r1);

        r2 = (java.awt.Graphics2D) r1;

        $r4 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r3 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;

        virtualinvoke r2.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r4, $r3);

        $r5 = virtualinvoke r0.<java.awt.Component: java.awt.Dimension getSize()>();

        $i0 = $r5.<java.awt.Dimension: int width>;

        $d0 = (double) $i0;

        d1 = $d0 / 200.0;

        $i1 = $r5.<java.awt.Dimension: int height>;

        $d2 = (double) $i1;

        d3 = $d2 / 100.0;

        $r6 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>(d1, d3);

        virtualinvoke r2.<java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>($r6);

        $r7 = r0.<org.apache.batik.util.gui.MemoryMonitor$History: java.awt.Color gridLinesColor>;

        virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r7);

        $r8 = <org.apache.batik.util.gui.MemoryMonitor$History: java.awt.Stroke GRID_LINES_STROKE>;

        virtualinvoke r2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r8);

        i7 = 1;

        goto label2;

     label1:
        $i2 = i7 * 10;

        $i4 = $i2 + 5;

        $i3 = r0.<org.apache.batik.util.gui.MemoryMonitor$History: int xShift>;

        i8 = $i4 - $i3;

        $r9 = new java.awt.geom.Line2D$Double;

        $d5 = (double) i8;

        $d4 = (double) i8;

        specialinvoke $r9.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d5, 5.0, $d4, 95.0);

        virtualinvoke r2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r9);

        i7 = i7 + 1;

     label2:
        if i7 < 20 goto label1;

        i9 = 1;

        goto label4;

     label3:
        $i5 = i9 * 10;

        i6 = $i5 + 5;

        $r10 = new java.awt.geom.Line2D$Double;

        $d7 = (double) i6;

        $d6 = (double) i6;

        specialinvoke $r10.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(5.0, $d7, 195.0, $d6);

        virtualinvoke r2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r10);

        i9 = i9 + 1;

     label4:
        if i9 < 9 goto label3;

        $r11 = r0.<org.apache.batik.util.gui.MemoryMonitor$History: java.awt.Color curveColor>;

        virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r11);

        $r12 = <org.apache.batik.util.gui.MemoryMonitor$History: java.awt.Stroke CURVE_STROKE>;

        virtualinvoke r2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r12);

        $r13 = r0.<org.apache.batik.util.gui.MemoryMonitor$History: java.awt.geom.GeneralPath path>;

        virtualinvoke r2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r13);

        $r14 = <org.apache.batik.util.gui.MemoryMonitor$History: java.awt.Stroke BORDER_STROKE>;

        virtualinvoke r2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r14);

        $r15 = r0.<org.apache.batik.util.gui.MemoryMonitor$History: java.awt.Color borderColor>;

        virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r15);

        $r16 = new java.awt.geom.Rectangle2D$Double;

        specialinvoke $r16.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(5.0, 5.0, 190.0, 90.0);

        virtualinvoke r2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r16);

        return;
    }

    static void <clinit>()
    {
        java.awt.BasicStroke $r0, $r1, $r2;

        <org.apache.batik.util.gui.MemoryMonitor$History: int PREFERRED_HEIGHT> = 100;

        <org.apache.batik.util.gui.MemoryMonitor$History: int PREFERRED_WIDTH> = 200;

        $r0 = new java.awt.BasicStroke;

        specialinvoke $r0.<java.awt.BasicStroke: void <init>(float)>(1.0F);

        <org.apache.batik.util.gui.MemoryMonitor$History: java.awt.Stroke GRID_LINES_STROKE> = $r0;

        $r1 = new java.awt.BasicStroke;

        specialinvoke $r1.<java.awt.BasicStroke: void <init>(float,int,int)>(2.0F, 1, 1);

        <org.apache.batik.util.gui.MemoryMonitor$History: java.awt.Stroke CURVE_STROKE> = $r1;

        $r2 = new java.awt.BasicStroke;

        specialinvoke $r2.<java.awt.BasicStroke: void <init>(float)>(2.0F);

        <org.apache.batik.util.gui.MemoryMonitor$History: java.awt.Stroke BORDER_STROKE> = $r2;

        return;
    }
}
