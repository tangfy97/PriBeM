class com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair extends java.lang.Object
{
    final java.lang.Runnable runnable;
    final java.util.concurrent.Executor executor;

    void <init>(java.lang.Runnable, java.util.concurrent.Executor)
    {
        com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair r0;
        java.lang.Runnable r1;
        java.util.concurrent.Executor r2;

        r0 := @this: com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: java.lang.Runnable runnable> = r1;

        r0.<com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: java.util.concurrent.Executor executor> = r2;

        return;
    }

    void execute()
    {
        java.util.concurrent.Executor $r2, $r11;
        java.lang.RuntimeException $r3;
        java.util.logging.Logger $r4;
        java.lang.Runnable $r1, $r8;
        java.util.logging.Level $r6;
        com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair r0;
        java.lang.StringBuilder $r5, $r7, $r9, $r10, $r12;
        java.lang.String $r13;

        r0 := @this: com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair;

     label1:
        $r2 = r0.<com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: java.util.concurrent.Executor executor>;

        $r1 = r0.<com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: java.lang.Runnable runnable>;

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <com.google.common.util.concurrent.ExecutionList: java.util.logging.Logger access$000()>();

        $r6 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RuntimeException while executing runnable ");

        $r8 = r0.<com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: java.lang.Runnable runnable>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with executor ");

        $r11 = r0.<com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: java.util.concurrent.Executor executor>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r6, $r13, $r3);

     label4:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }
}
