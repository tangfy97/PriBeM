public class org.apache.james.mime4j.io.BufferedLineReaderInputStream extends org.apache.james.mime4j.io.LineReaderInputStream
{
    private boolean truncated;
    boolean tempBuffer;
    private byte[] origBuffer;
    private int origBufpos;
    private int origBuflen;
    private byte[] buffer;
    private int bufpos;
    private int buflen;
    private final int maxLineLen;

    public void <init>(java.io.InputStream, int, int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r2;
        int i0, i1;
        java.lang.IllegalArgumentException $r3, $r4;
        java.io.InputStream r1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.james.mime4j.io.LineReaderInputStream: void <init>(java.io.InputStream)>(r1);

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean tempBuffer> = 0;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Input stream may not be null");

        throw $r4;

     label1:
        if i0 > 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Buffer size may not be negative or zero");

        throw $r3;

     label2:
        $r2 = newarray (byte)[i0];

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer> = $r2;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = 0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen> = 0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int maxLineLen> = i1;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean truncated> = 0;

        return;
    }

    public void <init>(java.io.InputStream, int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int i0, $i2;
        java.io.InputStream r1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        $i2 = (int) -1;

        specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: void <init>(java.io.InputStream,int,int)>(r1, i0, $i2);

        return;
    }

    private void expand(int)
    {
        byte[] r0, $r2;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r1;
        int i0, $i1, $i2, $i3;

        r1 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        i0 := @parameter0: int;

        r0 = newarray (byte)[i0];

        $i1 = specialinvoke r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufferLen()>();

        if $i1 <= 0 goto label1;

        $r2 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i3 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i2 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i3, r0, $i2, $i1);

     label1:
        r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer> = r0;

        return;
    }

    public void ensureCapacity(int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r1;
        int i0, $i1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i1 = lengthof $r1;

        if i0 <= $i1 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: void expand(int)>(i0);

     label1:
        return;
    }

    public int fillBuffer() throws java.io.IOException
    {
        byte[] $r1, $r2, $r3, $r5, $r7;
        java.lang.IllegalStateException $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i16;
        boolean $z0;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        java.io.InputStream $r6;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $z0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean tempBuffer>;

        if $z0 == 0 goto label2;

        $i5 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i4 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        if $i5 == $i4 goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unread only works when a buffer is fully read before the next refill is asked!");

        throw $r8;

     label1:
        $r3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] origBuffer>;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer> = $r3;

        $i6 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int origBuflen>;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen> = $i6;

        $i7 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int origBufpos>;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = $i7;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean tempBuffer> = 0;

        $i8 = specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufferLen()>();

        return $i8;

     label2:
        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        if $i0 <= 0 goto label4;

        $i2 = specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufferLen()>();

        if $i2 <= 0 goto label3;

        $r2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i3, $r1, 0, $i2);

     label3:
        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = 0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen> = $i2;

     label4:
        $i9 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $r5 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i10 = lengthof $r5;

        $i11 = $i10 - $i9;

        $r6 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: java.io.InputStream in>;

        $r7 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i12 = virtualinvoke $r6.<java.io.InputStream: int read(byte[],int,int)>($r7, $i9, $i11);

        $i14 = (int) -1;

        if $i12 != $i14 goto label5;

        $i16 = (int) -1;

        return $i16;

     label5:
        $i1 = $i9 + $i12;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen> = $i1;

        return $i12;
    }

    private int bufferLen()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public boolean hasBufferedData()
    {
        int $i0;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i0 = specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufferLen()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void truncate()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: void clear()>();

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean truncated> = 1;

        return;
    }

    protected boolean readAllowed()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $z0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean truncated>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int read() throws java.io.IOException
    {
        byte[] $r1;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        short $s3, $s11;
        byte $b2;
        int $i0, $i1, $i4, $i6, $i8, $i10, $i12;
        boolean $z0, $z1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $z0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean readAllowed()>();

        if $z0 != 0 goto label1;

        $i6 = (int) -1;

        return $i6;

     label1:
        $z1 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean hasBufferedData()>();

        if $z1 != 0 goto label2;

        $i4 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int fillBuffer()>();

        $i8 = (int) -1;

        if $i4 != $i8 goto label1;

        $i10 = (int) -1;

        return $i10;

     label2:
        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i1 = $i0 + 1;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = $i1;

        $b2 = $r1[$i0];

        $s11 = (short) $b2;

        $s3 = $s11 & 255;

        $i12 = (int) $s3;

        return $i12;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1, $r2;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, i7, $i9, $i11, $i13;
        boolean $z0, $z1;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        r1 := @parameter0: byte[];

        i2 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean readAllowed()>();

        if $z0 != 0 goto label1;

        $i9 = (int) -1;

        return $i9;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean hasBufferedData()>();

        if $z1 != 0 goto label3;

        $i6 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int fillBuffer()>();

        $i11 = (int) -1;

        if $i6 != $i11 goto label2;

        $i13 = (int) -1;

        return $i13;

     label3:
        $i0 = specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufferLen()>();

        i7 = $i0;

        if $i0 <= i1 goto label4;

        i7 = i1;

     label4:
        $r2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i3, r1, i2, i7);

        $i4 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i5 = $i4 + i7;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = $i5;

        return i7;
    }

    public int read(byte[]) throws java.io.IOException
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] r1;
        int $i0, $i1, $i3;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        r1 := @parameter0: byte[];

        $z0 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean readAllowed()>();

        if $z0 != 0 goto label1;

        $i3 = (int) -1;

        return $i3;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int read(byte[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public boolean markSupported()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        return 0;
    }

    public int readLine(org.apache.james.mime4j.util.ByteArrayBuffer) throws org.apache.james.mime4j.io.MaxLineLimitException, java.io.IOException
    {
        byte[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, $i12, $i14, $i16, $i18, $i20;
        boolean $z0, $z1, z2;
        org.apache.james.mime4j.io.MaxLineLimitException $r6;
        java.lang.IllegalArgumentException $r5;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r1;
        org.apache.james.mime4j.util.ByteArrayBuffer r0;

        r1 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        r0 := @parameter0: org.apache.james.mime4j.util.ByteArrayBuffer;

        if r0 != null goto label01;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Buffer may not be null");

        throw $r5;

     label01:
        $z0 = virtualinvoke r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean readAllowed()>();

        if $z0 != 0 goto label02;

        $i12 = (int) -1;

        return $i12;

     label02:
        i8 = 0;

        z2 = 0;

        i9 = 0;

     label03:
        if z2 != 0 goto label09;

        $z1 = virtualinvoke r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean hasBufferedData()>();

        if $z1 != 0 goto label04;

        $i7 = virtualinvoke r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int fillBuffer()>();

        i9 = $i7;

        $i14 = (int) -1;

        if $i7 != $i14 goto label04;

        goto label09;

     label04:
        $i0 = virtualinvoke r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int indexOf(byte)>(10);

        $i16 = (int) -1;

        if $i0 == $i16 goto label05;

        z2 = 1;

        $i5 = $i0 + 1;

        $i6 = virtualinvoke r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

        i10 = $i5 - $i6;

        goto label06;

     label05:
        i10 = virtualinvoke r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int length()>();

     label06:
        if i10 <= 0 goto label07;

        $r3 = virtualinvoke r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buf()>();

        $i4 = virtualinvoke r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

        virtualinvoke r0.<org.apache.james.mime4j.util.ByteArrayBuffer: void append(byte[],int,int)>($r3, $i4, i10);

        virtualinvoke r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int skip(int)>(i10);

        i8 = i8 + i10;

     label07:
        $i1 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int maxLineLen>;

        if $i1 <= 0 goto label08;

        $i2 = virtualinvoke r0.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        $i3 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int maxLineLen>;

        if $i2 < $i3 goto label08;

        $r6 = new org.apache.james.mime4j.io.MaxLineLimitException;

        specialinvoke $r6.<org.apache.james.mime4j.io.MaxLineLimitException: void <init>(java.lang.String)>("Maximum line length limit exceeded");

        throw $r6;

     label08:
        goto label03;

     label09:
        if i8 != 0 goto label10;

        $i18 = (int) -1;

        if i9 != $i18 goto label10;

        $i20 = (int) -1;

        return $i20;

     label10:
        return i8;
    }

    public int indexOf(byte[], int, int)
    {
        byte[] r0, $r3, $r4, $r5;
        java.lang.IndexOutOfBoundsException $r21;
        byte $b13, $b17, $b18, $b19;
        int[] r2;
        boolean z0;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r1;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r20;
        short s14, s28, $s35, $s39;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i16, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, i29, i30, i31, i32, $i34, $i36, $i37, $i38, $i40, $i42;
        java.lang.String $r18;
        java.lang.IllegalArgumentException $r19;

        r1 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        if r0 != null goto label01;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Pattern may not be null");

        throw $r19;

     label01:
        $i1 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        if i0 < $i1 goto label02;

        if i2 < 0 goto label02;

        $i4 = i0 + i2;

        $i3 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        if $i4 <= $i3 goto label03;

     label02:
        $r21 = new java.lang.IndexOutOfBoundsException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("looking for ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $i24 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i25 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r18);

        throw $r21;

     label03:
        $i5 = lengthof r0;

        if i2 >= $i5 goto label04;

        $i34 = (int) -1;

        return $i34;

     label04:
        r2 = newarray (int)[256];

        i26 = 0;

     label05:
        $i6 = lengthof r2;

        if i26 >= $i6 goto label06;

        $i22 = lengthof r0;

        $i23 = $i22 + 1;

        r2[i26] = $i23;

        i26 = i26 + 1;

        goto label05;

     label06:
        i27 = 0;

     label07:
        $i7 = lengthof r0;

        if i27 >= $i7 goto label08;

        $b19 = r0[i27];

        $s35 = (short) $b19;

        s28 = $s35 & 255;

        $i20 = lengthof r0;

        $i21 = $i20 - i27;

        $i36 = (int) s28;

        r2[$i36] = $i21;

        i27 = i27 + 1;

        goto label07;

     label08:
        i29 = 0;

     label09:
        $i8 = lengthof r0;

        $i9 = i2 - $i8;

        if i29 > $i9 goto label15;

        i30 = i0 + i29;

        z0 = 1;

        i31 = 0;

     label10:
        $i10 = lengthof r0;

        if i31 >= $i10 goto label12;

        $r5 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i16 = i30 + i31;

        $b18 = $r5[$i16];

        $b17 = r0[i31];

        $i37 = (int) $b18;

        $i38 = (int) $b17;

        if $i37 == $i38 goto label11;

        z0 = 0;

        goto label12;

     label11:
        i31 = i31 + 1;

        goto label10;

     label12:
        if z0 == 0 goto label13;

        return i30;

     label13:
        $i11 = lengthof r0;

        i32 = i30 + $i11;

        $r3 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i12 = lengthof $r3;

        if i32 < $i12 goto label14;

        goto label15;

     label14:
        $r4 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $b13 = $r4[i32];

        $s39 = (short) $b13;

        s14 = $s39 & 255;

        $i40 = (int) s14;

        $i15 = r2[$i40];

        i29 = i29 + $i15;

        goto label09;

     label15:
        $i42 = (int) -1;

        return $i42;
    }

    public int indexOf(byte[])
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        r1 := @parameter0: byte[];

        $i3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i2 = $i1 - $i0;

        $i4 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int indexOf(byte[],int,int)>(r1, $i3, $i2);

        return $i4;
    }

    public int indexOf(byte, int, int)
    {
        byte[] $r1;
        java.lang.IndexOutOfBoundsException $r3;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte b6, $b7;
        int i0, $i1, i2, $i3, $i4, $i5, i8, $i9, $i10, $i12;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        b6 := @parameter0: byte;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        if i0 < $i1 goto label1;

        if i2 < 0 goto label1;

        $i4 = i0 + i2;

        $i3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        if $i4 <= $i3 goto label2;

     label1:
        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label2:
        i8 = i0;

     label3:
        $i5 = i0 + i2;

        if i8 >= $i5 goto label5;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $b7 = $r1[i8];

        $i9 = (int) $b7;

        $i10 = (int) b6;

        if $i9 != $i10 goto label4;

        return i8;

     label4:
        i8 = i8 + 1;

        goto label3;

     label5:
        $i12 = (int) -1;

        return $i12;
    }

    public int indexOf(byte)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte b0;
        int $i1, $i2, $i3;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        b0 := @parameter0: byte;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i2 = specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufferLen()>();

        $i3 = virtualinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int indexOf(byte,int,int)>(b0, $i1, $i2);

        return $i3;
    }

    public int byteAt(int)
    {
        byte[] $r10;
        java.lang.IndexOutOfBoundsException $r12;
        short $s6, $s7;
        byte $b5;
        int i0, $i1, $i2, $i3, $i4, $i8;
        java.lang.String $r9;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r11;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        if i0 < $i1 goto label1;

        $i4 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        if i0 <= $i4 goto label2;

     label1:
        $r12 = new java.lang.IndexOutOfBoundsException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("looking for ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $i2 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r9);

        throw $r12;

     label2:
        $r10 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $b5 = $r10[i0];

        $s7 = (short) $b5;

        $s6 = $s7 & 255;

        $i8 = (int) $s6;

        return $i8;
    }

    protected byte[] buf()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        return $r1;
    }

    protected int pos()
    {
        int $i0;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        return $i0;
    }

    protected int limit()
    {
        int $i0;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        return $i0;
    }

    protected int length()
    {
        int $i0;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $i0 = specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufferLen()>();

        return $i0;
    }

    public int capacity()
    {
        int $i0;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        byte[] $r1;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $i0 = lengthof $r1;

        return $i0;
    }

    protected int skip(int)
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufferLen()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i1);

        $i3 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        $i4 = $i3 + $i2;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = $i4;

        return $i2;
    }

    private void clear()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = 0;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen> = 0;

        return;
    }

    public java.lang.String toString()
    {
        byte[] $r3, $r4;
        byte $b6, $b8;
        int $i0, $i1, $i2, $i3, $i4, $i5, i10, i11;
        java.lang.String $r2;
        boolean $z0;
        char $c7, $c9;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r1;
        java.lang.StringBuilder $r0;

        r1 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[pos: ");

        $i0 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[limit: ");

        $i1 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i10 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

     label1:
        $i2 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        if i10 >= $i2 goto label2;

        $r4 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        $b8 = $r4[i10];

        $c9 = (char) $b8;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9);

        i10 = i10 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $z0 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean tempBuffer>;

        if $z0 == 0 goto label5;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-ORIG[pos: ");

        $i3 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int origBufpos>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[limit: ");

        $i4 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int origBuflen>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i11 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int origBufpos>;

     label3:
        $i5 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int origBuflen>;

        if i11 >= $i5 goto label4;

        $r3 = r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] origBuffer>;

        $b6 = $r3[i11];

        $c7 = (char) $b6;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        i11 = i11 + 1;

        goto label3;

     label4:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label5:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public boolean unread(org.apache.james.mime4j.util.ByteArrayBuffer)
    {
        byte[] $r1, $r3;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r0;
        int $i0, $i1, $i2;
        org.apache.james.mime4j.util.ByteArrayBuffer r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        r2 := @parameter0: org.apache.james.mime4j.util.ByteArrayBuffer;

        $z0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean tempBuffer>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer>;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] origBuffer> = $r1;

        $i0 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen>;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int origBuflen> = $i0;

        $i1 = r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos>;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int origBufpos> = $i1;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int bufpos> = 0;

        $i2 = virtualinvoke r2.<org.apache.james.mime4j.util.ByteArrayBuffer: int length()>();

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int buflen> = $i2;

        $r3 = virtualinvoke r2.<org.apache.james.mime4j.util.ByteArrayBuffer: byte[] buffer()>();

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buffer> = $r3;

        r0.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean tempBuffer> = 1;

        return 1;
    }
}
