public class org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy extends java.lang.Object implements org.waveprotocol.wave.model.document.util.FilterProduct$SkipStrategy
{
    private static final int PERSISTENT_INDEX;
    private static final int RENDERED_INDEX;
    private static final org.waveprotocol.wave.model.util.StringSet UNSKIPPED_TRANSIENT_CONTAINERS;
    private static final org.waveprotocol.wave.model.util.StringSet SHALLOW_SKIPPED_TRANSIENT_CONTAINERS;
    private static final org.waveprotocol.wave.model.util.StringSet SHALLOW_SKIPPED_PERSISTENT_CONTAINERS;
    private static final org.waveprotocol.wave.model.util.StringSet DEEP_SKIPPED_PERSISTENT_CONTAINERS;

    public static void registerTagForSelections(java.lang.String, boolean, org.waveprotocol.wave.model.document.util.FilteredView$Skip)
    {
        org.waveprotocol.wave.model.util.StringSet $r3, $r4, $r5, $r6;
        int[] $r1;
        int $i0, $i1;
        java.lang.String r2;
        org.waveprotocol.wave.model.document.util.FilteredView$Skip r0;
        boolean z0;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r0 := @parameter2: org.waveprotocol.wave.model.document.util.FilteredView$Skip;

        $r1 = <org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy$1: int[] $SwitchMap$org$waveprotocol$wave$model$document$util$FilteredView$Skip>;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.FilteredView$Skip: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        if z0 != 0 goto label5;

        $r6 = <org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: org.waveprotocol.wave.model.util.StringSet UNSKIPPED_TRANSIENT_CONTAINERS>;

        interfaceinvoke $r6.<org.waveprotocol.wave.model.util.StringSet: void add(java.lang.String)>(r2);

        goto label5;

     label2:
        if z0 == 0 goto label3;

        $r5 = <org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: org.waveprotocol.wave.model.util.StringSet SHALLOW_SKIPPED_PERSISTENT_CONTAINERS>;

        interfaceinvoke $r5.<org.waveprotocol.wave.model.util.StringSet: void add(java.lang.String)>(r2);

        goto label5;

     label3:
        $r4 = <org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: org.waveprotocol.wave.model.util.StringSet SHALLOW_SKIPPED_TRANSIENT_CONTAINERS>;

        interfaceinvoke $r4.<org.waveprotocol.wave.model.util.StringSet: void add(java.lang.String)>(r2);

        goto label5;

     label4:
        if z0 == 0 goto label5;

        $r3 = <org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: org.waveprotocol.wave.model.util.StringSet DEEP_SKIPPED_PERSISTENT_CONTAINERS>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.util.StringSet: void add(java.lang.String)>(r2);

     label5:
        return;
    }

    public static org.waveprotocol.wave.model.document.util.FilteredView buildSelectionFilter(org.waveprotocol.wave.model.document.util.FilteredView, org.waveprotocol.wave.model.document.util.FilteredView)
    {
        org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy $r1;
        org.waveprotocol.wave.model.document.util.FilterProduct $r0;
        org.waveprotocol.wave.model.document.util.FilteredView[] $r2;
        org.waveprotocol.wave.model.document.util.FilteredView r3, r4;

        r3 := @parameter0: org.waveprotocol.wave.model.document.util.FilteredView;

        r4 := @parameter1: org.waveprotocol.wave.model.document.util.FilteredView;

        $r0 = new org.waveprotocol.wave.model.document.util.FilterProduct;

        $r1 = new org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy;

        specialinvoke $r1.<org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: void <init>()>();

        $r2 = newarray (org.waveprotocol.wave.model.document.util.FilteredView)[2];

        $r2[0] = r3;

        $r2[1] = r4;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.util.FilterProduct: void <init>(org.waveprotocol.wave.model.document.util.FilterProduct$SkipStrategy,org.waveprotocol.wave.model.document.util.FilteredView[])>($r1, $r2);

        return $r0;
    }

    private void <init>()
    {
        org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy r0;

        r0 := @this: org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.document.util.FilteredView$Skip resolveSkip(org.waveprotocol.wave.client.editor.content.ContentNode, org.waveprotocol.wave.model.document.util.FilteredView$Skip[])
    {
        org.waveprotocol.wave.model.document.util.FilteredView$Skip[] r2;
        org.waveprotocol.wave.client.editor.content.ContentNode r0;
        org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy r7;
        int[] $r6;
        int $i0, $i1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r1;
        org.waveprotocol.wave.model.document.util.FilteredView$Skip $r3, $r4, $r5, $r8, $r9, $r10, $r11;
        boolean $z0;

        r7 := @this: org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        r2 := @parameter1: org.waveprotocol.wave.model.document.util.FilteredView$Skip[];

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentNode: org.waveprotocol.wave.client.editor.content.ContentElement asElement()>();

        if $r1 != null goto label1;

        $r10 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip NONE>;

        return $r10;

     label1:
        $r4 = r2[1];

        $r3 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip NONE>;

        if $r4 != $r3 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r6 = <org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy$1: int[] $SwitchMap$org$waveprotocol$wave$model$document$util$FilteredView$Skip>;

        $r5 = r2[0];

        $i0 = virtualinvoke $r5.<org.waveprotocol.wave.model.document.util.FilteredView$Skip: int ordinal()>();

        $i1 = $r6[$i0];

        tableswitch($i1)
        {
            case 1: goto label4;
            case 2: goto label7;
            case 3: goto label7;
            default: goto label8;
        };

     label4:
        if $z0 == 0 goto label5;

        $r11 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip NONE>;

        goto label6;

     label5:
        $r11 = specialinvoke r7.<org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: org.waveprotocol.wave.model.document.util.FilteredView$Skip persistentForExclusion(org.waveprotocol.wave.client.editor.content.ContentElement)>($r1);

     label6:
        return $r11;

     label7:
        $r8 = specialinvoke r7.<org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: org.waveprotocol.wave.model.document.util.FilteredView$Skip transientForInclusion(org.waveprotocol.wave.client.editor.content.ContentElement)>($r1);

        return $r8;

     label8:
        $r9 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip INVALID>;

        return $r9;
    }

    private org.waveprotocol.wave.model.document.util.FilteredView$Skip transientForInclusion(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.model.util.StringSet $r2, $r3;
        org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy r7;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        java.lang.String $r1;
        org.waveprotocol.wave.model.document.util.FilteredView$Skip $r4, $r5, $r6;
        boolean $z0, $z1;

        r7 := @this: org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: java.lang.String getTagName()>();

        $r2 = <org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: org.waveprotocol.wave.model.util.StringSet UNSKIPPED_TRANSIENT_CONTAINERS>;

        $z0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.util.StringSet: boolean contains(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r6 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip NONE>;

        return $r6;

     label1:
        $r3 = <org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: org.waveprotocol.wave.model.util.StringSet SHALLOW_SKIPPED_TRANSIENT_CONTAINERS>;

        $z1 = interfaceinvoke $r3.<org.waveprotocol.wave.model.util.StringSet: boolean contains(java.lang.String)>($r1);

        if $z1 == 0 goto label2;

        $r5 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip SHALLOW>;

        return $r5;

     label2:
        $r4 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip DEEP>;

        return $r4;
    }

    private org.waveprotocol.wave.model.document.util.FilteredView$Skip persistentForExclusion(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.model.util.StringSet $r2, $r3;
        org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy r7;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        java.lang.String $r1;
        org.waveprotocol.wave.model.document.util.FilteredView$Skip $r4, $r5, $r6;
        boolean $z0, $z1;

        r7 := @this: org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: java.lang.String getTagName()>();

        $r2 = <org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: org.waveprotocol.wave.model.util.StringSet SHALLOW_SKIPPED_PERSISTENT_CONTAINERS>;

        $z0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.util.StringSet: boolean contains(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r6 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip SHALLOW>;

        return $r6;

     label1:
        $r3 = <org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: org.waveprotocol.wave.model.util.StringSet DEEP_SKIPPED_PERSISTENT_CONTAINERS>;

        $z1 = interfaceinvoke $r3.<org.waveprotocol.wave.model.util.StringSet: boolean contains(java.lang.String)>($r1);

        if $z1 == 0 goto label2;

        $r5 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip DEEP>;

        return $r5;

     label2:
        $r4 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip NONE>;

        return $r4;
    }

    public volatile org.waveprotocol.wave.model.document.util.FilteredView$Skip resolveSkip(java.lang.Object, org.waveprotocol.wave.model.document.util.FilteredView$Skip[])
    {
        org.waveprotocol.wave.model.document.util.FilteredView$Skip[] r2;
        org.waveprotocol.wave.client.editor.content.ContentNode $r3;
        org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy r0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.document.util.FilteredView$Skip $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.waveprotocol.wave.model.document.util.FilteredView$Skip[];

        $r3 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: org.waveprotocol.wave.model.document.util.FilteredView$Skip resolveSkip(org.waveprotocol.wave.client.editor.content.ContentNode,org.waveprotocol.wave.model.document.util.FilteredView$Skip[])>($r3, r2);

        return $r4;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.util.StringSet $r0, $r1, $r2, $r3;

        <org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: int RENDERED_INDEX> = 1;

        <org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: int PERSISTENT_INDEX> = 0;

        $r0 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringSet createStringSet()>();

        <org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: org.waveprotocol.wave.model.util.StringSet UNSKIPPED_TRANSIENT_CONTAINERS> = $r0;

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringSet createStringSet()>();

        <org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: org.waveprotocol.wave.model.util.StringSet SHALLOW_SKIPPED_TRANSIENT_CONTAINERS> = $r1;

        $r2 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringSet createStringSet()>();

        <org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: org.waveprotocol.wave.model.util.StringSet SHALLOW_SKIPPED_PERSISTENT_CONTAINERS> = $r2;

        $r3 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringSet createStringSet()>();

        <org.waveprotocol.wave.client.editor.selection.content.ValidSelectionStrategy: org.waveprotocol.wave.model.util.StringSet DEEP_SKIPPED_PERSISTENT_CONTAINERS> = $r3;

        return;
    }
}
