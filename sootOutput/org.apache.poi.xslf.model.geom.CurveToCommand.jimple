public class org.apache.poi.xslf.model.geom.CurveToCommand extends java.lang.Object implements org.apache.poi.xslf.model.geom.PathCommand
{
    private java.lang.String arg1;
    private java.lang.String arg2;
    private java.lang.String arg3;
    private java.lang.String arg4;
    private java.lang.String arg5;
    private java.lang.String arg6;

    void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D, org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D, org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D)
    {
        org.apache.poi.xslf.model.geom.CurveToCommand r0;
        java.lang.String $r3, $r5, $r8, $r10, $r13, $r15;
        org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D r1, r6, r11;
        java.lang.Object $r2, $r4, $r7, $r9, $r12, $r14;

        r0 := @this: org.apache.poi.xslf.model.geom.CurveToCommand;

        r1 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D;

        r6 := @parameter1: org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D;

        r11 := @parameter2: org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D: java.lang.Object getX()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        r0.<org.apache.poi.xslf.model.geom.CurveToCommand: java.lang.String arg1> = $r3;

        $r4 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D: java.lang.Object getY()>();

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        r0.<org.apache.poi.xslf.model.geom.CurveToCommand: java.lang.String arg2> = $r5;

        $r7 = interfaceinvoke r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D: java.lang.Object getX()>();

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        r0.<org.apache.poi.xslf.model.geom.CurveToCommand: java.lang.String arg3> = $r8;

        $r9 = interfaceinvoke r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D: java.lang.Object getY()>();

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        r0.<org.apache.poi.xslf.model.geom.CurveToCommand: java.lang.String arg4> = $r10;

        $r12 = interfaceinvoke r11.<org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D: java.lang.Object getX()>();

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        r0.<org.apache.poi.xslf.model.geom.CurveToCommand: java.lang.String arg5> = $r13;

        $r14 = interfaceinvoke r11.<org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D: java.lang.Object getY()>();

        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        r0.<org.apache.poi.xslf.model.geom.CurveToCommand: java.lang.String arg6> = $r15;

        return;
    }

    public void execute(java.awt.geom.GeneralPath, org.apache.poi.xslf.model.geom.Context)
    {
        org.apache.poi.xslf.model.geom.Context r0;
        org.apache.poi.xslf.model.geom.CurveToCommand r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.awt.geom.GeneralPath r8;

        r1 := @this: org.apache.poi.xslf.model.geom.CurveToCommand;

        r8 := @parameter0: java.awt.geom.GeneralPath;

        r0 := @parameter1: org.apache.poi.xslf.model.geom.Context;

        $r2 = r1.<org.apache.poi.xslf.model.geom.CurveToCommand: java.lang.String arg1>;

        $d0 = virtualinvoke r0.<org.apache.poi.xslf.model.geom.Context: double getValue(java.lang.String)>($r2);

        $r3 = r1.<org.apache.poi.xslf.model.geom.CurveToCommand: java.lang.String arg2>;

        $d1 = virtualinvoke r0.<org.apache.poi.xslf.model.geom.Context: double getValue(java.lang.String)>($r3);

        $r4 = r1.<org.apache.poi.xslf.model.geom.CurveToCommand: java.lang.String arg3>;

        $d2 = virtualinvoke r0.<org.apache.poi.xslf.model.geom.Context: double getValue(java.lang.String)>($r4);

        $r5 = r1.<org.apache.poi.xslf.model.geom.CurveToCommand: java.lang.String arg4>;

        $d3 = virtualinvoke r0.<org.apache.poi.xslf.model.geom.Context: double getValue(java.lang.String)>($r5);

        $r6 = r1.<org.apache.poi.xslf.model.geom.CurveToCommand: java.lang.String arg5>;

        $d4 = virtualinvoke r0.<org.apache.poi.xslf.model.geom.Context: double getValue(java.lang.String)>($r6);

        $r7 = r1.<org.apache.poi.xslf.model.geom.CurveToCommand: java.lang.String arg6>;

        $d5 = virtualinvoke r0.<org.apache.poi.xslf.model.geom.Context: double getValue(java.lang.String)>($r7);

        $f5 = (float) $d0;

        $f4 = (float) $d1;

        $f3 = (float) $d2;

        $f2 = (float) $d3;

        $f1 = (float) $d4;

        $f0 = (float) $d5;

        virtualinvoke r8.<java.awt.geom.GeneralPath: void curveTo(float,float,float,float,float,float)>($f5, $f4, $f3, $f2, $f1, $f0);

        return;
    }
}
