public class org.apache.xerces.parsers.XMLGrammarPreparser extends java.lang.Object
{
    private static final java.lang.String CONTINUE_AFTER_FATAL_ERROR;
    protected static final java.lang.String SYMBOL_TABLE;
    protected static final java.lang.String ERROR_REPORTER;
    protected static final java.lang.String ERROR_HANDLER;
    protected static final java.lang.String ENTITY_RESOLVER;
    protected static final java.lang.String GRAMMAR_POOL;
    private static final java.util.Hashtable KNOWN_LOADERS;
    private static final java.lang.String[] RECOGNIZED_PROPERTIES;
    protected final org.apache.xerces.util.SymbolTable fSymbolTable;
    protected final org.apache.xerces.impl.XMLErrorReporter fErrorReporter;
    protected org.apache.xerces.xni.parser.XMLEntityResolver fEntityResolver;
    protected org.apache.xerces.xni.grammars.XMLGrammarPool fGrammarPool;
    protected java.util.Locale fLocale;
    private final java.util.Hashtable fLoaders;
    private int fModCount;

    public void <init>()
    {
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        org.apache.xerces.util.SymbolTable $r1;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        $r1 = new org.apache.xerces.util.SymbolTable;

        specialinvoke $r1.<org.apache.xerces.util.SymbolTable: void <init>()>();

        specialinvoke r0.<org.apache.xerces.parsers.XMLGrammarPreparser: void <init>(org.apache.xerces.util.SymbolTable)>($r1);

        return;
    }

    public void <init>(org.apache.xerces.util.SymbolTable)
    {
        org.apache.xerces.impl.XMLErrorReporter $r3;
        org.apache.xerces.util.SymbolTable r1;
        java.util.Locale $r4;
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        org.apache.xerces.impl.XMLEntityManager $r5;
        java.util.Hashtable $r2;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        r1 := @parameter0: org.apache.xerces.util.SymbolTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.parsers.XMLGrammarPreparser: int fModCount> = 1;

        r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.util.SymbolTable fSymbolTable> = r1;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Hashtable fLoaders> = $r2;

        $r3 = new org.apache.xerces.impl.XMLErrorReporter;

        specialinvoke $r3.<org.apache.xerces.impl.XMLErrorReporter: void <init>()>();

        r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.impl.XMLErrorReporter fErrorReporter> = $r3;

        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        virtualinvoke r0.<org.apache.xerces.parsers.XMLGrammarPreparser: void setLocale(java.util.Locale)>($r4);

        $r5 = new org.apache.xerces.impl.XMLEntityManager;

        specialinvoke $r5.<org.apache.xerces.impl.XMLEntityManager: void <init>()>();

        r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.xni.parser.XMLEntityResolver fEntityResolver> = $r5;

        return;
    }

    public boolean registerPreparser(java.lang.String, org.apache.xerces.xni.grammars.XMLGrammarLoader)
    {
        org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer $r3, $r12;
        org.apache.xerces.xni.grammars.XMLGrammarLoader r0, r11;
        org.apache.xerces.parsers.XMLGrammarPreparser r1;
        java.lang.String r2, r8;
        java.util.Hashtable $r4, $r5, $r6, $r13;
        boolean $z0;
        java.lang.Exception $r14;
        java.lang.Object $r7, $r10;
        java.lang.ClassLoader $r9;

        r1 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.xerces.xni.grammars.XMLGrammarLoader;

        if r0 != null goto label6;

        $r5 = <org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Hashtable KNOWN_LOADERS>;

        $z0 = virtualinvoke $r5.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r2);

        if $z0 == 0 goto label5;

        $r6 = <org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Hashtable KNOWN_LOADERS>;

        $r7 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        r8 = (java.lang.String) $r7;

     label1:
        $r9 = staticinvoke <org.apache.xerces.parsers.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r10 = staticinvoke <org.apache.xerces.parsers.ObjectFactory: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>(r8, $r9, 1);

        r11 = (org.apache.xerces.xni.grammars.XMLGrammarLoader) $r10;

        $r13 = r1.<org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Hashtable fLoaders>;

        $r12 = new org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer;

        specialinvoke $r12.<org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer: void <init>(org.apache.xerces.xni.grammars.XMLGrammarLoader)>(r11);

        virtualinvoke $r13.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r12);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        return 0;

     label4:
        return 1;

     label5:
        return 0;

     label6:
        $r4 = r1.<org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Hashtable fLoaders>;

        $r3 = new org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer;

        specialinvoke $r3.<org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer: void <init>(org.apache.xerces.xni.grammars.XMLGrammarLoader)>(r0);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r3);

        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public org.apache.xerces.xni.grammars.Grammar preparseGrammar(java.lang.String, org.apache.xerces.xni.parser.XMLInputSource) throws org.apache.xerces.xni.XNIException, java.io.IOException
    {
        org.apache.xerces.xni.grammars.Grammar $r14;
        org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer r5;
        org.apache.xerces.xni.grammars.XMLGrammarLoader r6;
        org.apache.xerces.xni.parser.XMLEntityResolver $r9;
        org.apache.xerces.util.SymbolTable $r8;
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        int $i0, $i1, $i2;
        java.lang.String r1;
        java.util.Hashtable $r2, $r3;
        boolean $z0;
        org.apache.xerces.xni.grammars.XMLGrammarPool $r11, $r12;
        org.apache.xerces.xni.parser.XMLInputSource r7;
        java.lang.Exception $r13;
        org.apache.xerces.impl.XMLErrorReporter $r10;
        java.lang.Object $r4;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        r1 := @parameter0: java.lang.String;

        r7 := @parameter1: org.apache.xerces.xni.parser.XMLInputSource;

        $r2 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Hashtable fLoaders>;

        $z0 = virtualinvoke $r2.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label6;

        $r3 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Hashtable fLoaders>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer) $r4;

        r6 = r5.<org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer: org.apache.xerces.xni.grammars.XMLGrammarLoader loader>;

        $i1 = r5.<org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer: int modCount>;

        $i0 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: int fModCount>;

        if $i1 == $i0 goto label5;

        $r8 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.util.SymbolTable fSymbolTable>;

        interfaceinvoke r6.<org.apache.xerces.xni.grammars.XMLGrammarLoader: void setProperty(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/internal/symbol-table", $r8);

        $r9 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.xni.parser.XMLEntityResolver fEntityResolver>;

        interfaceinvoke r6.<org.apache.xerces.xni.grammars.XMLGrammarLoader: void setProperty(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/internal/entity-resolver", $r9);

        $r10 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.impl.XMLErrorReporter fErrorReporter>;

        interfaceinvoke r6.<org.apache.xerces.xni.grammars.XMLGrammarLoader: void setProperty(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/internal/error-reporter", $r10);

        $r11 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.xni.grammars.XMLGrammarPool fGrammarPool>;

        if $r11 == null goto label4;

     label1:
        $r12 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.xni.grammars.XMLGrammarPool fGrammarPool>;

        interfaceinvoke r6.<org.apache.xerces.xni.grammars.XMLGrammarLoader: void setProperty(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/internal/grammar-pool", $r12);

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

     label4:
        $i2 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: int fModCount>;

        r5.<org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer: int modCount> = $i2;

     label5:
        $r14 = interfaceinvoke r6.<org.apache.xerces.xni.grammars.XMLGrammarLoader: org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)>(r7);

        return $r14;

     label6:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setLocale(java.util.Locale)
    {
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        org.apache.xerces.impl.XMLErrorReporter $r2;
        java.util.Locale r1;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        r1 := @parameter0: java.util.Locale;

        r0.<org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Locale fLocale> = r1;

        $r2 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.impl.XMLErrorReporter fErrorReporter>;

        virtualinvoke $r2.<org.apache.xerces.impl.XMLErrorReporter: void setLocale(java.util.Locale)>(r1);

        return;
    }

    public java.util.Locale getLocale()
    {
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        java.util.Locale $r1;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        $r1 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Locale fLocale>;

        return $r1;
    }

    public void setErrorHandler(org.apache.xerces.xni.parser.XMLErrorHandler)
    {
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        org.apache.xerces.impl.XMLErrorReporter $r2;
        org.apache.xerces.xni.parser.XMLErrorHandler r1;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        r1 := @parameter0: org.apache.xerces.xni.parser.XMLErrorHandler;

        $r2 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.impl.XMLErrorReporter fErrorReporter>;

        virtualinvoke $r2.<org.apache.xerces.impl.XMLErrorReporter: void setProperty(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/internal/error-handler", r1);

        return;
    }

    public org.apache.xerces.xni.parser.XMLErrorHandler getErrorHandler()
    {
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        org.apache.xerces.impl.XMLErrorReporter $r1;
        org.apache.xerces.xni.parser.XMLErrorHandler $r2;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        $r1 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.impl.XMLErrorReporter fErrorReporter>;

        $r2 = virtualinvoke $r1.<org.apache.xerces.impl.XMLErrorReporter: org.apache.xerces.xni.parser.XMLErrorHandler getErrorHandler()>();

        return $r2;
    }

    public void setEntityResolver(org.apache.xerces.xni.parser.XMLEntityResolver)
    {
        org.apache.xerces.xni.parser.XMLEntityResolver r1, $r2;
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        int $i0, $i1;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        r1 := @parameter0: org.apache.xerces.xni.parser.XMLEntityResolver;

        $r2 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.xni.parser.XMLEntityResolver fEntityResolver>;

        if $r2 == r1 goto label2;

        $i0 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: int fModCount>;

        $i1 = $i0 + 1;

        r0.<org.apache.xerces.parsers.XMLGrammarPreparser: int fModCount> = $i1;

        if $i1 >= 0 goto label1;

        specialinvoke r0.<org.apache.xerces.parsers.XMLGrammarPreparser: void clearModCounts()>();

     label1:
        r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.xni.parser.XMLEntityResolver fEntityResolver> = r1;

     label2:
        return;
    }

    public org.apache.xerces.xni.parser.XMLEntityResolver getEntityResolver()
    {
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        org.apache.xerces.xni.parser.XMLEntityResolver $r1;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        $r1 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.xni.parser.XMLEntityResolver fEntityResolver>;

        return $r1;
    }

    public void setGrammarPool(org.apache.xerces.xni.grammars.XMLGrammarPool)
    {
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        org.apache.xerces.xni.grammars.XMLGrammarPool r1, $r2;
        int $i0, $i1;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        r1 := @parameter0: org.apache.xerces.xni.grammars.XMLGrammarPool;

        $r2 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.xni.grammars.XMLGrammarPool fGrammarPool>;

        if $r2 == r1 goto label2;

        $i0 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: int fModCount>;

        $i1 = $i0 + 1;

        r0.<org.apache.xerces.parsers.XMLGrammarPreparser: int fModCount> = $i1;

        if $i1 >= 0 goto label1;

        specialinvoke r0.<org.apache.xerces.parsers.XMLGrammarPreparser: void clearModCounts()>();

     label1:
        r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.xni.grammars.XMLGrammarPool fGrammarPool> = r1;

     label2:
        return;
    }

    public org.apache.xerces.xni.grammars.XMLGrammarPool getGrammarPool()
    {
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        org.apache.xerces.xni.grammars.XMLGrammarPool $r1;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        $r1 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.xni.grammars.XMLGrammarPool fGrammarPool>;

        return $r1;
    }

    public org.apache.xerces.xni.grammars.XMLGrammarLoader getLoader(java.lang.String)
    {
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        java.lang.Object $r3;
        org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer r4;
        java.lang.String r1;
        java.util.Hashtable $r2;
        org.apache.xerces.xni.grammars.XMLGrammarLoader $r5;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Hashtable fLoaders>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer) $r3;

        if r4 == null goto label1;

        $r5 = r4.<org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer: org.apache.xerces.xni.grammars.XMLGrammarLoader loader>;

        goto label2;

     label1:
        $r5 = null;

     label2:
        return $r5;
    }

    public void setFeature(java.lang.String, boolean)
    {
        java.util.Enumeration $r2;
        org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer $r4;
        java.lang.Exception $r8;
        org.apache.xerces.xni.grammars.XMLGrammarLoader r5;
        org.apache.xerces.impl.XMLErrorReporter $r7;
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        java.lang.Object $r3;
        java.lang.String r6;
        java.util.Hashtable $r1;
        boolean z0, $z1, $z2;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        r6 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Hashtable fLoaders>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration elements()>();

        goto label5;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer) $r3;

        r5 = $r4.<org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer: org.apache.xerces.xni.grammars.XMLGrammarLoader loader>;

     label2:
        interfaceinvoke r5.<org.apache.xerces.xni.grammars.XMLGrammarLoader: void setFeature(java.lang.String,boolean)>(r6, z0);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

     label5:
        $z2 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 != 0 goto label1;

        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("http://apache.org/xml/features/continue-after-fatal-error");

        if $z1 == 0 goto label6;

        $r7 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: org.apache.xerces.impl.XMLErrorReporter fErrorReporter>;

        virtualinvoke $r7.<org.apache.xerces.impl.XMLErrorReporter: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/continue-after-fatal-error", z0);

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        java.util.Enumeration $r2;
        org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer $r4;
        java.lang.Exception $r8;
        org.apache.xerces.xni.grammars.XMLGrammarLoader r5;
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        java.lang.Object $r3, r7;
        java.lang.String r6;
        java.util.Hashtable $r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Hashtable fLoaders>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration elements()>();

        goto label5;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer) $r3;

        r5 = $r4.<org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer: org.apache.xerces.xni.grammars.XMLGrammarLoader loader>;

     label2:
        interfaceinvoke r5.<org.apache.xerces.xni.grammars.XMLGrammarLoader: void setProperty(java.lang.String,java.lang.Object)>(r6, r7);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

     label5:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label1;

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public boolean getFeature(java.lang.String, java.lang.String)
    {
        org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer $r4;
        org.apache.xerces.xni.grammars.XMLGrammarLoader r5;
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        java.lang.Object $r3;
        java.lang.String r1, r6;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Hashtable fLoaders>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer) $r3;

        r5 = $r4.<org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer: org.apache.xerces.xni.grammars.XMLGrammarLoader loader>;

        $z0 = interfaceinvoke r5.<org.apache.xerces.xni.grammars.XMLGrammarLoader: boolean getFeature(java.lang.String)>(r6);

        return $z0;
    }

    public java.lang.Object getProperty(java.lang.String, java.lang.String)
    {
        org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer $r4;
        org.apache.xerces.xni.grammars.XMLGrammarLoader r5;
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        java.lang.Object $r3, $r7;
        java.lang.String r1, r6;
        java.util.Hashtable $r2;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Hashtable fLoaders>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer) $r3;

        r5 = $r4.<org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer: org.apache.xerces.xni.grammars.XMLGrammarLoader loader>;

        $r7 = interfaceinvoke r5.<org.apache.xerces.xni.grammars.XMLGrammarLoader: java.lang.Object getProperty(java.lang.String)>(r6);

        return $r7;
    }

    private void clearModCounts()
    {
        java.util.Enumeration $r2;
        org.apache.xerces.parsers.XMLGrammarPreparser r0;
        java.lang.Object $r3;
        org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer r4;
        java.util.Hashtable $r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.parsers.XMLGrammarPreparser;

        $r1 = r0.<org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Hashtable fLoaders>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration elements()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer) $r3;

        r4.<org.apache.xerces.parsers.XMLGrammarPreparser$XMLGrammarLoaderContainer: int modCount> = 0;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label1;

        r0.<org.apache.xerces.parsers.XMLGrammarPreparser: int fModCount> = 1;

        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r3;
        java.util.Hashtable $r0, $r1, $r2;

        <org.apache.xerces.parsers.XMLGrammarPreparser: java.lang.String GRAMMAR_POOL> = "http://apache.org/xml/properties/internal/grammar-pool";

        <org.apache.xerces.parsers.XMLGrammarPreparser: java.lang.String ENTITY_RESOLVER> = "http://apache.org/xml/properties/internal/entity-resolver";

        <org.apache.xerces.parsers.XMLGrammarPreparser: java.lang.String ERROR_HANDLER> = "http://apache.org/xml/properties/internal/error-handler";

        <org.apache.xerces.parsers.XMLGrammarPreparser: java.lang.String ERROR_REPORTER> = "http://apache.org/xml/properties/internal/error-reporter";

        <org.apache.xerces.parsers.XMLGrammarPreparser: java.lang.String SYMBOL_TABLE> = "http://apache.org/xml/properties/internal/symbol-table";

        <org.apache.xerces.parsers.XMLGrammarPreparser: java.lang.String CONTINUE_AFTER_FATAL_ERROR> = "http://apache.org/xml/features/continue-after-fatal-error";

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Hashtable KNOWN_LOADERS> = $r0;

        $r1 = <org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Hashtable KNOWN_LOADERS>;

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.w3.org/2001/XMLSchema", "org.apache.xerces.impl.xs.XMLSchemaLoader");

        $r2 = <org.apache.xerces.parsers.XMLGrammarPreparser: java.util.Hashtable KNOWN_LOADERS>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.w3.org/TR/REC-xml", "org.apache.xerces.impl.dtd.XMLDTDLoader");

        $r3 = newarray (java.lang.String)[5];

        $r3[0] = "http://apache.org/xml/properties/internal/symbol-table";

        $r3[1] = "http://apache.org/xml/properties/internal/error-reporter";

        $r3[2] = "http://apache.org/xml/properties/internal/error-handler";

        $r3[3] = "http://apache.org/xml/properties/internal/entity-resolver";

        $r3[4] = "http://apache.org/xml/properties/internal/grammar-pool";

        <org.apache.xerces.parsers.XMLGrammarPreparser: java.lang.String[] RECOGNIZED_PROPERTIES> = $r3;

        return;
    }
}
