public class org.dom4j.io.SAXEventRecorder extends org.xml.sax.helpers.DefaultHandler implements org.xml.sax.ext.LexicalHandler, org.xml.sax.ext.DeclHandler, org.xml.sax.DTDHandler, java.io.Externalizable
{
    public static final long serialVersionUID;
    private static final byte STRING;
    private static final byte OBJECT;
    private static final byte NULL;
    private java.util.List events;
    private java.util.Map prefixMappings;
    private static final java.lang.String XMLNS;
    private static final java.lang.String EMPTY_STRING;

    public void <init>()
    {
        org.dom4j.io.SAXEventRecorder r0;
        java.util.HashMap $r2;
        java.util.ArrayList $r1;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.dom4j.io.SAXEventRecorder: java.util.List events> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.dom4j.io.SAXEventRecorder: java.util.Map prefixMappings> = $r2;

        return;
    }

    public void replay(org.xml.sax.ContentHandler) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent r4;
        java.lang.Integer $r37, $r39, $r59, $r61;
        byte $b0, $b5;
        org.dom4j.io.SAXEventRecorder r0;
        java.lang.StringBuffer $r96, $r97, $r102;
        java.lang.String $r8, $r10, $r12, $r15, $r17, $r20, $r22, $r24, $r26, $r28, $r31, $r33, $r45, $r48, $r52, $r54, $r56, $r63, $r65, $r67, $r72, $r74, $r76, $r79, $r80, $r81, $r82, $r83, $r85, $r87, $r89, $r91, $r93, $r98;
        char[] r35, r100;
        org.xml.sax.ext.LexicalHandler $r40, $r41, $r42, $r43, $r46, $r49, $r50;
        boolean $z0, $z1;
        org.xml.sax.helpers.AttributesImpl $r101;
        java.util.List $r1, r70;
        org.xml.sax.SAXException $r103;
        java.lang.String[] r99;
        int $i1, $i2, $i3, $i4, $i6, $i7;
        org.xml.sax.ContentHandler r5;
        java.util.Iterator $r2, $r77;
        org.xml.sax.ext.DeclHandler $r6, $r13, $r18, $r29;
        java.lang.Object $r3, $r7, $r9, $r11, $r14, $r16, $r19, $r21, $r23, $r25, $r27, $r30, $r32, $r34, $r36, $r38, $r44, $r47, $r51, $r53, $r55, $r57, $r58, $r60, $r62, $r64, $r66, $r69, $r71, $r73, $r75, $r78, $r84, $r86, $r88, $r90, $r92;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        r5 := @parameter0: org.xml.sax.ContentHandler;

        $r1 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label24;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.dom4j.io.SAXEventRecorder$SAXEvent) $r3;

        $b0 = r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: byte event>;

        $i6 = (int) $b0;

        tableswitch($i6)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label10;
            case 8: goto label11;
            case 9: goto label12;
            case 10: goto label13;
            case 11: goto label14;
            case 12: goto label15;
            case 13: goto label16;
            case 14: goto label17;
            case 15: goto label18;
            case 16: goto label19;
            case 17: goto label20;
            case 18: goto label21;
            case 19: goto label22;
            default: goto label23;
        };

     label02:
        $r90 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r91 = (java.lang.String) $r90;

        $r92 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r93 = (java.lang.String) $r92;

        interfaceinvoke r5.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>($r91, $r93);

        goto label01;

     label03:
        $r86 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r87 = (java.lang.String) $r86;

        $r88 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r89 = (java.lang.String) $r88;

        interfaceinvoke r5.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r87, $r89);

        goto label01;

     label04:
        $r84 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r85 = (java.lang.String) $r84;

        interfaceinvoke r5.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r85);

        goto label01;

     label05:
        interfaceinvoke r5.<org.xml.sax.ContentHandler: void startDocument()>();

        goto label01;

     label06:
        interfaceinvoke r5.<org.xml.sax.ContentHandler: void endDocument()>();

        goto label01;

     label07:
        $r101 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r101.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        $r69 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(3);

        r70 = (java.util.List) $r69;

        if r70 == null goto label09;

        $r77 = interfaceinvoke r70.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r77.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r78 = interfaceinvoke $r77.<java.util.Iterator: java.lang.Object next()>();

        r99 = (java.lang.String[]) $r78;

        $r83 = r99[0];

        $r82 = r99[1];

        $r81 = r99[2];

        $r80 = r99[3];

        $r79 = r99[4];

        virtualinvoke $r101.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r83, $r82, $r81, $r80, $r79);

        goto label08;

     label09:
        $r71 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r72 = (java.lang.String) $r71;

        $r73 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r74 = (java.lang.String) $r73;

        $r75 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(2);

        $r76 = (java.lang.String) $r75;

        interfaceinvoke r5.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>($r72, $r74, $r76, $r101);

        goto label01;

     label10:
        $r62 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r63 = (java.lang.String) $r62;

        $r64 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r65 = (java.lang.String) $r64;

        $r66 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(2);

        $r67 = (java.lang.String) $r66;

        interfaceinvoke r5.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r63, $r65, $r67);

        goto label01;

     label11:
        $r57 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        r100 = (char[]) $r57;

        $r58 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r59 = (java.lang.Integer) $r58;

        $i3 = virtualinvoke $r59.<java.lang.Integer: int intValue()>();

        $r60 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(2);

        $r61 = (java.lang.Integer) $r60;

        $i4 = virtualinvoke $r61.<java.lang.Integer: int intValue()>();

        interfaceinvoke r5.<org.xml.sax.ContentHandler: void characters(char[],int,int)>(r100, $i3, $i4);

        goto label01;

     label12:
        $r50 = (org.xml.sax.ext.LexicalHandler) r5;

        $r51 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r52 = (java.lang.String) $r51;

        $r53 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r54 = (java.lang.String) $r53;

        $r55 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(2);

        $r56 = (java.lang.String) $r55;

        interfaceinvoke $r50.<org.xml.sax.ext.LexicalHandler: void startDTD(java.lang.String,java.lang.String,java.lang.String)>($r52, $r54, $r56);

        goto label01;

     label13:
        $r49 = (org.xml.sax.ext.LexicalHandler) r5;

        interfaceinvoke $r49.<org.xml.sax.ext.LexicalHandler: void endDTD()>();

        goto label01;

     label14:
        $r46 = (org.xml.sax.ext.LexicalHandler) r5;

        $r47 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r48 = (java.lang.String) $r47;

        interfaceinvoke $r46.<org.xml.sax.ext.LexicalHandler: void startEntity(java.lang.String)>($r48);

        goto label01;

     label15:
        $r43 = (org.xml.sax.ext.LexicalHandler) r5;

        $r44 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r45 = (java.lang.String) $r44;

        interfaceinvoke $r43.<org.xml.sax.ext.LexicalHandler: void endEntity(java.lang.String)>($r45);

        goto label01;

     label16:
        $r42 = (org.xml.sax.ext.LexicalHandler) r5;

        interfaceinvoke $r42.<org.xml.sax.ext.LexicalHandler: void startCDATA()>();

        goto label01;

     label17:
        $r41 = (org.xml.sax.ext.LexicalHandler) r5;

        interfaceinvoke $r41.<org.xml.sax.ext.LexicalHandler: void endCDATA()>();

        goto label01;

     label18:
        $r34 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        r35 = (char[]) $r34;

        $r36 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r37 = (java.lang.Integer) $r36;

        $i1 = virtualinvoke $r37.<java.lang.Integer: int intValue()>();

        $r38 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(2);

        $r39 = (java.lang.Integer) $r38;

        $i2 = virtualinvoke $r39.<java.lang.Integer: int intValue()>();

        $r40 = (org.xml.sax.ext.LexicalHandler) r5;

        interfaceinvoke $r40.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>(r35, $i1, $i2);

        goto label01;

     label19:
        $r29 = (org.xml.sax.ext.DeclHandler) r5;

        $r30 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r31 = (java.lang.String) $r30;

        $r32 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r33 = (java.lang.String) $r32;

        interfaceinvoke $r29.<org.xml.sax.ext.DeclHandler: void elementDecl(java.lang.String,java.lang.String)>($r31, $r33);

        goto label01;

     label20:
        $r18 = (org.xml.sax.ext.DeclHandler) r5;

        $r19 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r20 = (java.lang.String) $r19;

        $r21 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r22 = (java.lang.String) $r21;

        $r23 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(2);

        $r24 = (java.lang.String) $r23;

        $r25 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(3);

        $r26 = (java.lang.String) $r25;

        $r27 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(4);

        $r28 = (java.lang.String) $r27;

        interfaceinvoke $r18.<org.xml.sax.ext.DeclHandler: void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r20, $r22, $r24, $r26, $r28);

        goto label01;

     label21:
        $r13 = (org.xml.sax.ext.DeclHandler) r5;

        $r14 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r15 = (java.lang.String) $r14;

        $r16 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r17 = (java.lang.String) $r16;

        interfaceinvoke $r13.<org.xml.sax.ext.DeclHandler: void internalEntityDecl(java.lang.String,java.lang.String)>($r15, $r17);

        goto label01;

     label22:
        $r6 = (org.xml.sax.ext.DeclHandler) r5;

        $r7 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r8 = (java.lang.String) $r7;

        $r9 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r10 = (java.lang.String) $r9;

        $r11 = virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(2);

        $r12 = (java.lang.String) $r11;

        interfaceinvoke $r6.<org.xml.sax.ext.DeclHandler: void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)>($r8, $r10, $r12);

        goto label01;

     label23:
        $r103 = new org.xml.sax.SAXException;

        $r102 = new java.lang.StringBuffer;

        specialinvoke $r102.<java.lang.StringBuffer: void <init>()>();

        $r96 = virtualinvoke $r102.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized event: ");

        $b5 = r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: byte event>;

        $i7 = (int) $b5;

        $r97 = virtualinvoke $r96.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i7);

        $r98 = virtualinvoke $r97.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r103.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r98);

        throw $r103;

     label24:
        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        java.util.List $r4;
        org.dom4j.io.SAXEventRecorder r3;
        java.lang.String r1, r2;

        r3 := @this: org.dom4j.io.SAXEventRecorder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(1);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r1);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r2);

        $r4 = r3.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        java.util.List $r4;
        org.dom4j.io.SAXEventRecorder r3;
        java.lang.String r1, r2;

        r3 := @this: org.dom4j.io.SAXEventRecorder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(2);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r1);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r2);

        $r4 = r3.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        java.util.List $r3;
        org.dom4j.io.SAXEventRecorder r2;
        java.lang.String r1;

        r2 := @this: org.dom4j.io.SAXEventRecorder;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(3);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r1);

        $r3 = r2.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder r1;
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        java.util.List $r2;

        r1 := @this: org.dom4j.io.SAXEventRecorder;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(4);

        $r2 = r1.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder r1;
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        java.util.List $r2;

        r1 := @this: org.dom4j.io.SAXEventRecorder;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(5);

        $r2 = r1.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0, $r13;
        java.util.Map $r16, $r19;
        boolean $z0;
        org.dom4j.Namespace $r22;
        org.dom4j.io.SAXEventRecorder r6;
        java.util.List $r15, $r20, r25, $r27;
        java.lang.String[] r26;
        java.util.ArrayList $r7, $r18;
        org.xml.sax.Attributes r5;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String r1, r2, r3, $r8, $r9, $r10, $r11, $r12, $r14, r24;
        org.dom4j.QName $r4, $r21, r23;
        java.lang.Object $r17;

        r6 := @this: org.dom4j.io.SAXEventRecorder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: org.xml.sax.Attributes;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(6);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r1);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r2);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r3);

        if r1 == null goto label01;

        $r21 = new org.dom4j.QName;

        $r22 = staticinvoke <org.dom4j.Namespace: org.dom4j.Namespace get(java.lang.String)>(r1);

        specialinvoke $r21.<org.dom4j.QName: void <init>(java.lang.String,org.dom4j.Namespace)>(r2, $r22);

        r23 = $r21;

        goto label02;

     label01:
        $r4 = new org.dom4j.QName;

        specialinvoke $r4.<org.dom4j.QName: void <init>(java.lang.String)>(r2);

        r23 = $r4;

     label02:
        if r5 == null goto label10;

        $i0 = interfaceinvoke r5.<org.xml.sax.Attributes: int getLength()>();

        if $i0 <= 0 goto label10;

        $r7 = new java.util.ArrayList;

        $i1 = interfaceinvoke r5.<org.xml.sax.Attributes: int getLength()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i1);

        i4 = 0;

     label03:
        $i2 = interfaceinvoke r5.<org.xml.sax.Attributes: int getLength()>();

        if i4 >= $i2 goto label09;

        $r8 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i4);

        $z0 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns");

        if $z0 == 0 goto label07;

        $i3 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i3 <= 5 goto label04;

        r24 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>(6);

        goto label05;

     label04:
        r24 = "";

     label05:
        $r13 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r13.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(2);

        virtualinvoke $r13.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r24);

        $r14 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i4);

        virtualinvoke $r13.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r14);

        $r15 = r6.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r16 = r6.<org.dom4j.io.SAXEventRecorder: java.util.Map prefixMappings>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r23);

        $r20 = (java.util.List) $r17;

        r25 = $r20;

        if $r20 != null goto label06;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r25 = $r18;

        $r19 = r6.<org.dom4j.io.SAXEventRecorder: java.util.Map prefixMappings>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r23, $r18);

     label06:
        interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>(r24);

        goto label08;

     label07:
        r26 = newarray (java.lang.String)[5];

        $r9 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i4);

        r26[0] = $r9;

        r26[1] = $r8;

        $r10 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i4);

        r26[2] = $r10;

        $r11 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getType(int)>(i4);

        r26[3] = $r11;

        $r12 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i4);

        r26[4] = $r12;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r26);

     label08:
        i4 = i4 + 1;

        goto label03;

     label09:
        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r7);

     label10:
        $r27 = r6.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0, $r10;
        java.util.Map $r7;
        java.lang.String r1, r2, r3;
        boolean $z0;
        java.util.Iterator $r9;
        org.dom4j.Namespace $r14;
        org.dom4j.io.SAXEventRecorder r4;
        java.util.List $r5, $r12, $r15;
        org.dom4j.QName $r6, $r13, r16;
        java.lang.Object $r8, $r11;

        r4 := @this: org.dom4j.io.SAXEventRecorder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(7);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r1);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r2);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r3);

        $r5 = r4.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r0);

        if r1 == null goto label1;

        $r13 = new org.dom4j.QName;

        $r14 = staticinvoke <org.dom4j.Namespace: org.dom4j.Namespace get(java.lang.String)>(r1);

        specialinvoke $r13.<org.dom4j.QName: void <init>(java.lang.String,org.dom4j.Namespace)>(r2, $r14);

        r16 = $r13;

        goto label2;

     label1:
        $r6 = new org.dom4j.QName;

        specialinvoke $r6.<org.dom4j.QName: void <init>(java.lang.String)>(r2);

        r16 = $r6;

     label2:
        $r7 = r4.<org.dom4j.io.SAXEventRecorder: java.util.Map prefixMappings>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16);

        $r15 = (java.util.List) $r8;

        if $r15 == null goto label4;

        $r9 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r10.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(3);

        $r11 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r10.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r11);

        $r12 = r4.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label3;

     label4:
        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        org.dom4j.io.SAXEventRecorder r4;
        java.lang.Integer $r2, $r3;
        java.util.List $r5;
        int i0, i1;
        char[] r1;

        r4 := @this: org.dom4j.io.SAXEventRecorder;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(8);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r1);

        $r2 = new java.lang.Integer;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i0);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r2);

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r3);

        $r5 = r4.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        java.util.List $r5;
        org.dom4j.io.SAXEventRecorder r4;
        java.lang.String r1, r2, r3;

        r4 := @this: org.dom4j.io.SAXEventRecorder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(9);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r1);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r2);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r3);

        $r5 = r4.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void endDTD() throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder r1;
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        java.util.List $r2;

        r1 := @this: org.dom4j.io.SAXEventRecorder;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(10);

        $r2 = r1.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void startEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        java.util.List $r3;
        org.dom4j.io.SAXEventRecorder r2;
        java.lang.String r1;

        r2 := @this: org.dom4j.io.SAXEventRecorder;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(11);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r1);

        $r3 = r2.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void endEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        java.util.List $r3;
        org.dom4j.io.SAXEventRecorder r2;
        java.lang.String r1;

        r2 := @this: org.dom4j.io.SAXEventRecorder;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(12);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r1);

        $r3 = r2.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void startCDATA() throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder r1;
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        java.util.List $r2;

        r1 := @this: org.dom4j.io.SAXEventRecorder;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(13);

        $r2 = r1.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void endCDATA() throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder r1;
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        java.util.List $r2;

        r1 := @this: org.dom4j.io.SAXEventRecorder;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(14);

        $r2 = r1.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        org.dom4j.io.SAXEventRecorder r4;
        java.lang.Integer $r2, $r3;
        java.util.List $r5;
        int i0, i1;
        char[] r1;

        r4 := @this: org.dom4j.io.SAXEventRecorder;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(15);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r1);

        $r2 = new java.lang.Integer;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i0);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r2);

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r3);

        $r5 = r4.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void elementDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        java.util.List $r4;
        org.dom4j.io.SAXEventRecorder r3;
        java.lang.String r1, r2;

        r3 := @this: org.dom4j.io.SAXEventRecorder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(16);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r1);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r2);

        $r4 = r3.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        org.dom4j.io.SAXEventRecorder r6;
        java.util.List $r7;
        java.lang.String r1, r2, r3, r4, r5;

        r6 := @this: org.dom4j.io.SAXEventRecorder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(17);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r1);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r2);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r3);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r4);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r5);

        $r7 = r6.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void internalEntityDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        java.util.List $r4;
        org.dom4j.io.SAXEventRecorder r3;
        java.lang.String r1, r2;

        r3 := @this: org.dom4j.io.SAXEventRecorder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(18);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r1);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r2);

        $r4 = r3.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void externalEntityDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent $r0;
        java.util.List $r5;
        org.dom4j.io.SAXEventRecorder r4;
        java.lang.String r1, r2, r3;

        r4 := @this: org.dom4j.io.SAXEventRecorder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r0 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(19);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r1);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r2);

        virtualinvoke $r0.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r3);

        $r5 = r4.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void writeExternal(java.io.ObjectOutput) throws java.io.IOException
    {
        java.util.List $r1, $r3;
        java.io.ObjectOutput r2;
        org.dom4j.io.SAXEventRecorder r0;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        r2 := @parameter0: java.io.ObjectOutput;

        $r1 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        if $r1 != null goto label1;

        interfaceinvoke r2.<java.io.ObjectOutput: void writeByte(int)>(2);

        goto label2;

     label1:
        interfaceinvoke r2.<java.io.ObjectOutput: void writeByte(int)>(1);

        $r3 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke r2.<java.io.ObjectOutput: void writeObject(java.lang.Object)>($r3);

     label2:
        return;
    }

    public void readExternal(java.io.ObjectInput) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        java.util.List $r3;
        byte $b0;
        org.dom4j.io.SAXEventRecorder r1;
        int $i1;
        java.io.ObjectInput r0;
        java.lang.Object $r2;

        r1 := @this: org.dom4j.io.SAXEventRecorder;

        r0 := @parameter0: java.io.ObjectInput;

        $b0 = interfaceinvoke r0.<java.io.ObjectInput: byte readByte()>();

        $i1 = (int) $b0;

        if $i1 == 2 goto label1;

        $r2 = interfaceinvoke r0.<java.io.ObjectInput: java.lang.Object readObject()>();

        $r3 = (java.util.List) $r2;

        r1.<org.dom4j.io.SAXEventRecorder: java.util.List events> = $r3;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <org.dom4j.io.SAXEventRecorder: java.lang.String EMPTY_STRING> = "";

        <org.dom4j.io.SAXEventRecorder: java.lang.String XMLNS> = "xmlns";

        <org.dom4j.io.SAXEventRecorder: byte NULL> = 2;

        <org.dom4j.io.SAXEventRecorder: byte OBJECT> = 1;

        <org.dom4j.io.SAXEventRecorder: byte STRING> = 0;

        <org.dom4j.io.SAXEventRecorder: long serialVersionUID> = 1L;

        return;
    }
}
