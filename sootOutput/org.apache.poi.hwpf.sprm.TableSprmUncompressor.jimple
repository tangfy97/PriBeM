public final class org.apache.poi.hwpf.sprm.TableSprmUncompressor extends org.apache.poi.hwpf.sprm.SprmUncompressor
{
    private static final org.apache.poi.util.POILogger logger;

    public void <init>()
    {
        org.apache.poi.hwpf.sprm.TableSprmUncompressor r0;

        r0 := @this: org.apache.poi.hwpf.sprm.TableSprmUncompressor;

        specialinvoke r0.<org.apache.poi.hwpf.sprm.SprmUncompressor: void <init>()>();

        return;
    }

    public static org.apache.poi.hwpf.usermodel.TableProperties uncompressTAP(byte[], int)
    {
        byte[] r2;
        org.apache.poi.util.POILogger $r5;
        java.lang.ArrayIndexOutOfBoundsException $r4;
        org.apache.poi.hwpf.usermodel.TableProperties $r0;
        int i0, $i1;
        org.apache.poi.hwpf.sprm.SprmIterator $r1;
        org.apache.poi.hwpf.sprm.SprmOperation $r3;
        boolean $z0;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r0 = new org.apache.poi.hwpf.usermodel.TableProperties;

        specialinvoke $r0.<org.apache.poi.hwpf.usermodel.TableProperties: void <init>()>();

        $r1 = new org.apache.poi.hwpf.sprm.SprmIterator;

        specialinvoke $r1.<org.apache.poi.hwpf.sprm.SprmIterator: void <init>(byte[],int)>(r2, i0);

     label1:
        $z0 = virtualinvoke $r1.<org.apache.poi.hwpf.sprm.SprmIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = virtualinvoke $r1.<org.apache.poi.hwpf.sprm.SprmIterator: org.apache.poi.hwpf.sprm.SprmOperation next()>();

        $i1 = virtualinvoke $r3.<org.apache.poi.hwpf.sprm.SprmOperation: int getType()>();

        if $i1 != 5 goto label5;

     label2:
        staticinvoke <org.apache.poi.hwpf.sprm.TableSprmUncompressor: void unCompressTAPOperation(org.apache.poi.hwpf.usermodel.TableProperties,org.apache.poi.hwpf.sprm.SprmOperation)>($r0, $r3);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        $r5 = <org.apache.poi.hwpf.sprm.TableSprmUncompressor: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r5.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Throwable)>(7, "Unable to apply ", $r3, ": ", $r4, $r4);

     label5:
        goto label1;

     label6:
        return $r0;

        catch java.lang.ArrayIndexOutOfBoundsException from label2 to label3 with label4;
    }

    public static org.apache.poi.hwpf.usermodel.TableProperties uncompressTAP(org.apache.poi.hwpf.sprm.SprmBuffer)
    {
        byte[] $r6;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;
        short s3;
        byte $b2;
        org.apache.poi.hwpf.usermodel.TableProperties $r3, $r7, r10;
        int $i0, $i1;
        org.apache.poi.hwpf.sprm.SprmIterator $r4;
        boolean $z0;
        org.apache.poi.util.POILogger $r2, $r9;
        java.lang.ArrayIndexOutOfBoundsException $r8;
        org.apache.poi.hwpf.sprm.SprmOperation $r1, $r5;

        r0 := @parameter0: org.apache.poi.hwpf.sprm.SprmBuffer;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: org.apache.poi.hwpf.sprm.SprmOperation findSprm(short)>(-10744);

        if $r1 == null goto label1;

        $r6 = virtualinvoke $r1.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i1 = virtualinvoke $r1.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        $b2 = $r6[$i1];

        s3 = (short) $b2;

        $r7 = new org.apache.poi.hwpf.usermodel.TableProperties;

        specialinvoke $r7.<org.apache.poi.hwpf.usermodel.TableProperties: void <init>(short)>(s3);

        r10 = $r7;

        goto label2;

     label1:
        $r2 = <org.apache.poi.hwpf.sprm.TableSprmUncompressor: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r2.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "Some table rows didn\'t specify number of columns in SPRMs");

        $r3 = new org.apache.poi.hwpf.usermodel.TableProperties;

        specialinvoke $r3.<org.apache.poi.hwpf.usermodel.TableProperties: void <init>(short)>(1);

        r10 = $r3;

     label2:
        $r4 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: org.apache.poi.hwpf.sprm.SprmIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r4.<org.apache.poi.hwpf.sprm.SprmIterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r5 = virtualinvoke $r4.<org.apache.poi.hwpf.sprm.SprmIterator: org.apache.poi.hwpf.sprm.SprmOperation next()>();

        $i0 = virtualinvoke $r5.<org.apache.poi.hwpf.sprm.SprmOperation: int getType()>();

        if $i0 != 5 goto label7;

     label4:
        staticinvoke <org.apache.poi.hwpf.sprm.TableSprmUncompressor: void unCompressTAPOperation(org.apache.poi.hwpf.usermodel.TableProperties,org.apache.poi.hwpf.sprm.SprmOperation)>(r10, $r5);

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        $r9 = <org.apache.poi.hwpf.sprm.TableSprmUncompressor: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r9.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Throwable)>(7, "Unable to apply ", $r5, ": ", $r8, $r8);

     label7:
        goto label3;

     label8:
        return r10;

        catch java.lang.ArrayIndexOutOfBoundsException from label4 to label5 with label6;
    }

    static void unCompressTAPOperation(org.apache.poi.hwpf.usermodel.TableProperties, org.apache.poi.hwpf.sprm.SprmOperation)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r15, $r18;
        byte $b11, $b12, $b13, $b14, $b40, b106, b107, b108, b109;
        org.apache.poi.hwpf.usermodel.TableCellDescriptor[] $r7, $r10, $r11, $r14, r28, r30;
        short $s10, $s18, $s30, $s32, $s35, $s37, $s50, $s67, $s75, $s77, $s78, $s80, $s83, $s85, $s87, s96;
        org.apache.poi.hwpf.usermodel.BorderCode $r32, $r33, $r34, $r35, $r36, $r37;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i31, $i33, $i34, $i36, $i38, $i39, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i76, $i79, $i81, $i82, $i84, $i86, i88, i89, i90, i91, i92, i93, i94, i95, i97, i98, i99, i100, i101, i102, i103, i104, $i105, i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137;
        org.apache.poi.hwpf.usermodel.TableCellDescriptor $r17, r31, $r38, $r39;
        org.apache.poi.hwpf.sprm.SprmOperation r0;
        org.apache.poi.hwpf.usermodel.TableProperties r6;
        boolean $z0, $z1, $z2, z3;
        short[] $r8, $r9, $r13, $r25, $r26, r27, r29;

        r6 := @parameter0: org.apache.poi.hwpf.usermodel.TableProperties;

        r0 := @parameter1: org.apache.poi.hwpf.sprm.SprmOperation;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperation()>();

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label11;
            case 8: goto label12;
            case 9: goto label21;
            case 10: goto label22;
            case 11: goto label37;
            case 12: goto label37;
            case 13: goto label37;
            case 14: goto label37;
            case 15: goto label37;
            case 16: goto label37;
            case 17: goto label37;
            case 18: goto label37;
            case 19: goto label37;
            case 20: goto label37;
            case 21: goto label37;
            case 22: goto label37;
            case 23: goto label37;
            case 24: goto label37;
            case 25: goto label37;
            case 26: goto label37;
            case 27: goto label37;
            case 28: goto label37;
            case 29: goto label37;
            case 30: goto label37;
            case 31: goto label37;
            case 32: goto label23;
            case 33: goto label24;
            case 34: goto label29;
            case 35: goto label29;
            case 36: goto label29;
            case 37: goto label29;
            case 38: goto label29;
            case 39: goto label29;
            case 40: goto label29;
            case 41: goto label29;
            case 42: goto label29;
            case 43: goto label29;
            case 44: goto label29;
            case 45: goto label37;
            case 46: goto label37;
            case 47: goto label37;
            case 48: goto label37;
            case 49: goto label37;
            case 50: goto label37;
            case 51: goto label37;
            case 52: goto label30;
            default: goto label37;
        };

     label01:
        $i86 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $s87 = (short) $i86;

        virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: void setJc(short)>($s87);

        goto label37;

     label02:
        $r26 = virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: short[] getRgdxaCenter()>();

        $s78 = virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: short getItcMac()>();

        $i79 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $s80 = $r26[0];

        $i81 = virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: int getDxaGapHalf()>();

        $i111 = (int) $s80;

        $i82 = $i111 + $i81;

        i88 = $i79 - $i82;

        i89 = 0;

     label03:
        $i112 = (int) $s78;

        if i89 >= $i112 goto label04;

        $s83 = $r26[i89];

        $i113 = (int) $s83;

        $i84 = $i113 + i88;

        $s85 = (short) $i84;

        $r26[i89] = $s85;

        i89 = i89 + 1;

        goto label03;

     label04:
        goto label37;

     label05:
        $r25 = virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: short[] getRgdxaCenter()>();

        if $r25 == null goto label06;

        $i73 = virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: int getDxaGapHalf()>();

        $i74 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        i90 = $i73 - $i74;

        $s75 = $r25[0];

        $i114 = (int) $s75;

        $i76 = $i114 + i90;

        $s77 = (short) $i76;

        $r25[0] = $s77;

     label06:
        $i72 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: void setDxaGapHalf(int)>($i72);

        goto label37;

     label07:
        $i71 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $z1 = staticinvoke <org.apache.poi.hwpf.sprm.TableSprmUncompressor: boolean getFlag(int)>($i71);

        virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: void setFCantSplit(boolean)>($z1);

        goto label37;

     label08:
        $i70 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $z0 = staticinvoke <org.apache.poi.hwpf.sprm.TableSprmUncompressor: boolean getFlag(int)>($i70);

        virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: void setFTableHeader(boolean)>($z0);

        goto label37;

     label09:
        $r18 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i69 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        $r32 = new org.apache.poi.hwpf.usermodel.BorderCode;

        specialinvoke $r32.<org.apache.poi.hwpf.usermodel.BorderCode: void <init>(byte[],int)>($r18, $i69);

        virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: void setBrcTop(org.apache.poi.hwpf.usermodel.BorderCode)>($r32);

        i91 = $i69 + 4;

        $r33 = new org.apache.poi.hwpf.usermodel.BorderCode;

        specialinvoke $r33.<org.apache.poi.hwpf.usermodel.BorderCode: void <init>(byte[],int)>($r18, i91);

        virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: void setBrcLeft(org.apache.poi.hwpf.usermodel.BorderCode)>($r33);

        i92 = i91 + 4;

        $r34 = new org.apache.poi.hwpf.usermodel.BorderCode;

        specialinvoke $r34.<org.apache.poi.hwpf.usermodel.BorderCode: void <init>(byte[],int)>($r18, i92);

        virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: void setBrcBottom(org.apache.poi.hwpf.usermodel.BorderCode)>($r34);

        i93 = i92 + 4;

        $r35 = new org.apache.poi.hwpf.usermodel.BorderCode;

        specialinvoke $r35.<org.apache.poi.hwpf.usermodel.BorderCode: void <init>(byte[],int)>($r18, i93);

        virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: void setBrcRight(org.apache.poi.hwpf.usermodel.BorderCode)>($r35);

        i94 = i93 + 4;

        $r36 = new org.apache.poi.hwpf.usermodel.BorderCode;

        specialinvoke $r36.<org.apache.poi.hwpf.usermodel.BorderCode: void <init>(byte[],int)>($r18, i94);

        virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: void setBrcHorizontal(org.apache.poi.hwpf.usermodel.BorderCode)>($r36);

        i95 = i94 + 4;

        $r37 = new org.apache.poi.hwpf.usermodel.BorderCode;

        specialinvoke $r37.<org.apache.poi.hwpf.usermodel.BorderCode: void <init>(byte[],int)>($r18, i95);

        virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: void setBrcVertical(org.apache.poi.hwpf.usermodel.BorderCode)>($r37);

        goto label37;

     label10:
        goto label37;

     label11:
        $i68 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: void setDyaRowHeight(int)>($i68);

        goto label37;

     label12:
        $r15 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i39 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        $b40 = $r15[$i39];

        s96 = (short) $b40;

        $i115 = (int) s96;

        $i41 = $i115 + 1;

        r27 = newarray (short)[$i41];

        $i116 = (int) s96;

        r28 = newarray (org.apache.poi.hwpf.usermodel.TableCellDescriptor)[$i116];

        virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: void setItcMac(short)>(s96);

        virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: void setRgdxaCenter(short[])>(r27);

        virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: void setRgtc(org.apache.poi.hwpf.usermodel.TableCellDescriptor[])>(r28);

        i97 = 0;

     label13:
        $i117 = (int) s96;

        if i97 >= $i117 goto label14;

        $i64 = i97 * 2;

        $i65 = 1 + $i64;

        $i66 = $i39 + $i65;

        $s67 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r15, $i66);

        r27[i97] = $s67;

        i97 = i97 + 1;

        goto label13;

     label14:
        $i42 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int size()>();

        $i43 = $i39 + $i42;

        i98 = $i43 - 6;

        $i118 = (int) s96;

        $i44 = $i118 + 1;

        $i45 = $i44 * 2;

        $i46 = 1 + $i45;

        i99 = $i39 + $i46;

        if i99 >= i98 goto label15;

        $z2 = 1;

        goto label16;

     label15:
        $z2 = 0;

     label16:
        z3 = $z2;

        i100 = 0;

     label17:
        $i119 = (int) s96;

        if i100 >= $i119 goto label20;

        if z3 == 0 goto label18;

        $i120 = (int) s96;

        $i51 = $i120 + 1;

        $i52 = $i51 * 2;

        $i54 = 1 + $i52;

        $i53 = i100 * 20;

        $i55 = $i54 + $i53;

        $i57 = $i39 + $i55;

        $i56 = lengthof $r15;

        if $i57 >= $i56 goto label18;

        $i121 = (int) s96;

        $i58 = $i121 + 1;

        $i59 = $i58 * 2;

        $i61 = 1 + $i59;

        $i60 = i100 * 20;

        $i62 = $i61 + $i60;

        $i63 = $i39 + $i62;

        $r17 = staticinvoke <org.apache.poi.hwpf.usermodel.TableCellDescriptor: org.apache.poi.hwpf.usermodel.TableCellDescriptor convertBytesToTC(byte[],int)>($r15, $i63);

        r28[i100] = $r17;

        goto label19;

     label18:
        $r38 = new org.apache.poi.hwpf.usermodel.TableCellDescriptor;

        specialinvoke $r38.<org.apache.poi.hwpf.usermodel.TableCellDescriptor: void <init>()>();

        r28[i100] = $r38;

     label19:
        i100 = i100 + 1;

        goto label17;

     label20:
        $i122 = (int) s96;

        $i47 = $i122 * 2;

        $i48 = 1 + $i47;

        $i49 = $i39 + $i48;

        $s50 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r15, $i49);

        $i123 = (int) s96;

        r27[$i123] = $s50;

        goto label37;

     label21:
        goto label37;

     label22:
        goto label37;

     label23:
        goto label37;

     label24:
        $i15 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperand()>();

        $i16 = $i15 & -16777216;

        i101 = $i16 >> 24;

        $i17 = $i15 & 16711680;

        i102 = $i17 >> 16;

        $i125 = (int) 65535;

        i103 = $i15 & $i125;

        $s18 = virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: short getItcMac()>();

        $i126 = (int) $s18;

        $i19 = $i126 + i102;

        $i20 = $i19 + 1;

        r29 = newarray (short)[$i20];

        $i127 = (int) $s18;

        $i21 = $i127 + i102;

        r30 = newarray (org.apache.poi.hwpf.usermodel.TableCellDescriptor)[$i21];

        $i128 = (int) $s18;

        if i101 < $i128 goto label25;

        $i129 = (int) $s18;

        i101 = $i129;

        $r13 = virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: short[] getRgdxaCenter()>();

        $i130 = (int) $s18;

        $i38 = $i130 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, r29, 0, $i38);

        $r14 = virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: org.apache.poi.hwpf.usermodel.TableCellDescriptor[] getRgtc()>();

        $i131 = (int) $s18;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, r30, 0, $i131);

        goto label26;

     label25:
        $r8 = virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: short[] getRgdxaCenter()>();

        $i22 = i101 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r29, 0, $i22);

        $r9 = virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: short[] getRgdxaCenter()>();

        $i25 = i101 + 1;

        $i24 = i101 + i102;

        $i132 = (int) $s18;

        $i23 = $i132 - i101;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, $i25, r29, $i24, $i23);

        $r10 = virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: org.apache.poi.hwpf.usermodel.TableCellDescriptor[] getRgtc()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, r30, 0, i101);

        $r11 = virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: org.apache.poi.hwpf.usermodel.TableCellDescriptor[] getRgtc()>();

        $i27 = i101 + i102;

        $i133 = (int) $s18;

        $i26 = $i133 - i101;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, i101, r30, $i27, $i26);

     label26:
        i104 = i101;

     label27:
        $i105 = i101 + i102;

        if i104 >= $i105 goto label28;

        $r39 = new org.apache.poi.hwpf.usermodel.TableCellDescriptor;

        specialinvoke $r39.<org.apache.poi.hwpf.usermodel.TableCellDescriptor: void <init>()>();

        r30[i104] = $r39;

        $i34 = i104 - 1;

        $s35 = r29[$i34];

        $i134 = (int) $s35;

        $i36 = $i134 + i103;

        $s37 = (short) $i36;

        r29[i104] = $s37;

        i104 = i104 + 1;

        goto label27;

     label28:
        $i33 = i101 + i102;

        $i28 = i101 + i102;

        $i29 = $i28 - 1;

        $s30 = r29[$i29];

        $i135 = (int) $s30;

        $i31 = $i135 + i103;

        $s32 = (short) $i31;

        r29[$i33] = $s32;

        goto label37;

     label29:
        goto label37;

     label30:
        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i1 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        b106 = $r1[$i1];

        $r2 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i2 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        $i3 = $i2 + 1;

        b107 = $r2[$i3];

        $r3 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i4 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        $i5 = $i4 + 2;

        b108 = $r3[$i5];

        $r4 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i6 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        $i7 = $i6 + 3;

        b109 = $r4[$i7];

        $r5 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: byte[] getGrpprl()>();

        $i8 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        $i9 = $i8 + 4;

        $s10 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r5, $i9);

        $i136 = (int) b106;

        i110 = $i136;

     label31:
        $i137 = (int) b107;

        if i110 >= $i137 goto label36;

        $r7 = virtualinvoke r6.<org.apache.poi.hwpf.usermodel.TableProperties: org.apache.poi.hwpf.usermodel.TableCellDescriptor[] getRgtc()>();

        r31 = $r7[i110];

        $b11 = b108 & 1;

        if $b11 == 0 goto label32;

        virtualinvoke r31.<org.apache.poi.hwpf.usermodel.TableCellDescriptor: void setFtsCellPaddingTop(byte)>(b109);

        virtualinvoke r31.<org.apache.poi.hwpf.usermodel.TableCellDescriptor: void setWCellPaddingTop(short)>($s10);

     label32:
        $b12 = b108 & 2;

        if $b12 == 0 goto label33;

        virtualinvoke r31.<org.apache.poi.hwpf.usermodel.TableCellDescriptor: void setFtsCellPaddingLeft(byte)>(b109);

        virtualinvoke r31.<org.apache.poi.hwpf.usermodel.TableCellDescriptor: void setWCellPaddingLeft(short)>($s10);

     label33:
        $b13 = b108 & 4;

        if $b13 == 0 goto label34;

        virtualinvoke r31.<org.apache.poi.hwpf.usermodel.TableCellDescriptor: void setFtsCellPaddingBottom(byte)>(b109);

        virtualinvoke r31.<org.apache.poi.hwpf.usermodel.TableCellDescriptor: void setWCellPaddingBottom(short)>($s10);

     label34:
        $b14 = b108 & 8;

        if $b14 == 0 goto label35;

        virtualinvoke r31.<org.apache.poi.hwpf.usermodel.TableCellDescriptor: void setFtsCellPaddingRight(byte)>(b109);

        virtualinvoke r31.<org.apache.poi.hwpf.usermodel.TableCellDescriptor: void setWCellPaddingRight(short)>($s10);

     label35:
        i110 = i110 + 1;

        goto label31;

     label36:
        goto label37;

     label37:
        return;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hwpf/sprm/TableSprmUncompressor;");

        <org.apache.poi.hwpf.sprm.TableSprmUncompressor: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
