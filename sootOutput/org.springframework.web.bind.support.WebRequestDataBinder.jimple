public class org.springframework.web.bind.support.WebRequestDataBinder extends org.springframework.web.bind.WebDataBinder
{

    public void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.web.bind.support.WebRequestDataBinder r0;

        r0 := @this: org.springframework.web.bind.support.WebRequestDataBinder;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.springframework.web.bind.WebDataBinder: void <init>(java.lang.Object)>(r1);

        return;
    }

    public void <init>(java.lang.Object, java.lang.String)
    {
        java.lang.Object r1;
        org.springframework.web.bind.support.WebRequestDataBinder r0;
        java.lang.String r2;

        r0 := @this: org.springframework.web.bind.support.WebRequestDataBinder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.springframework.web.bind.WebDataBinder: void <init>(java.lang.Object,java.lang.String)>(r1, r2);

        return;
    }

    public void bind(org.springframework.web.context.request.WebRequest)
    {
        org.springframework.web.context.request.WebRequest r1;
        org.springframework.util.MultiValueMap $r7;
        org.springframework.beans.MutablePropertyValues $r0;
        org.springframework.web.bind.support.WebRequestDataBinder r3;
        org.springframework.web.context.request.NativeWebRequest $r4;
        java.util.Map $r2;
        org.springframework.web.multipart.MultipartRequest r6;
        java.lang.Object $r5;
        boolean $z0;

        r3 := @this: org.springframework.web.bind.support.WebRequestDataBinder;

        r1 := @parameter0: org.springframework.web.context.request.WebRequest;

        $r0 = new org.springframework.beans.MutablePropertyValues;

        $r2 = interfaceinvoke r1.<org.springframework.web.context.request.WebRequest: java.util.Map getParameterMap()>();

        specialinvoke $r0.<org.springframework.beans.MutablePropertyValues: void <init>(java.util.Map)>($r2);

        $z0 = r1 instanceof org.springframework.web.context.request.NativeWebRequest;

        if $z0 == 0 goto label1;

        $r4 = (org.springframework.web.context.request.NativeWebRequest) r1;

        $r5 = interfaceinvoke $r4.<org.springframework.web.context.request.NativeWebRequest: java.lang.Object getNativeRequest(java.lang.Class)>(class "Lorg/springframework/web/multipart/MultipartRequest;");

        r6 = (org.springframework.web.multipart.MultipartRequest) $r5;

        if r6 == null goto label1;

        $r7 = interfaceinvoke r6.<org.springframework.web.multipart.MultipartRequest: org.springframework.util.MultiValueMap getMultiFileMap()>();

        virtualinvoke r3.<org.springframework.web.bind.support.WebRequestDataBinder: void bindMultipart(java.util.Map,org.springframework.beans.MutablePropertyValues)>($r7, $r0);

     label1:
        virtualinvoke r3.<org.springframework.web.bind.support.WebRequestDataBinder: void doBind(org.springframework.beans.MutablePropertyValues)>($r0);

        return;
    }

    public void closeNoCatch() throws org.springframework.validation.BindException
    {
        org.springframework.validation.BindingResult $r1, $r3;
        org.springframework.web.bind.support.WebRequestDataBinder r0;
        org.springframework.validation.BindException $r2;
        boolean $z0;

        r0 := @this: org.springframework.web.bind.support.WebRequestDataBinder;

        $r1 = virtualinvoke r0.<org.springframework.web.bind.support.WebRequestDataBinder: org.springframework.validation.BindingResult getBindingResult()>();

        $z0 = interfaceinvoke $r1.<org.springframework.validation.BindingResult: boolean hasErrors()>();

        if $z0 == 0 goto label1;

        $r2 = new org.springframework.validation.BindException;

        $r3 = virtualinvoke r0.<org.springframework.web.bind.support.WebRequestDataBinder: org.springframework.validation.BindingResult getBindingResult()>();

        specialinvoke $r2.<org.springframework.validation.BindException: void <init>(org.springframework.validation.BindingResult)>($r3);

        throw $r2;

     label1:
        return;
    }
}
