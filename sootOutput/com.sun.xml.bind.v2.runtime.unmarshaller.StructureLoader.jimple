public final class com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader extends com.sun.xml.bind.v2.runtime.unmarshaller.Loader
{
    private final com.sun.xml.bind.v2.util.QNameMap childUnmarshallers;
    private com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader catchAll;
    private com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader textHandler;
    private com.sun.xml.bind.v2.util.QNameMap attUnmarshallers;
    private com.sun.xml.bind.v2.runtime.reflect.Accessor attCatchAll;
    private final com.sun.xml.bind.v2.runtime.JaxBeanInfo beanInfo;
    private int frameSize;
    private static final com.sun.xml.bind.v2.util.QNameMap EMPTY;
    static final boolean $assertionsDisabled;

    public void <init>(com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl)
    {
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r2;
        com.sun.xml.bind.v2.util.QNameMap $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader;

        r2 := @parameter0: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void <init>(boolean)>(1);

        $r1 = new com.sun.xml.bind.v2.util.QNameMap;

        specialinvoke $r1.<com.sun.xml.bind.v2.util.QNameMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap childUnmarshallers> = $r1;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.JaxBeanInfo beanInfo> = r2;

        return;
    }

    public void init(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl, com.sun.xml.bind.v2.runtime.reflect.Accessor)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader r3;
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r2, r28;
        com.sun.xml.bind.v2.runtime.property.UnmarshallerChain $r29;
        int[] $r18;
        com.sun.xml.bind.v2.runtime.property.Property r17;
        com.sun.xml.bind.v2.runtime.property.AttributeProperty $r27;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor $r25;
        javax.xml.namespace.QName $r4, $r8, $r24;
        com.sun.xml.bind.v2.runtime.Name $r22;
        com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader $r7, $r11;
        com.sun.xml.bind.v2.util.QNameMap $r5, $r9, $r13, $r14, $r20, $r21, $r23, $r30;
        int $i0, $i1, $i2, $i3, i4, $i6;
        com.sun.xml.bind.v2.model.core.PropertyKind $r19;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;
        com.sun.xml.bind.v2.runtime.property.Property[] $r15, $r16;
        com.sun.xml.bind.v2.runtime.reflect.Accessor r12;
        java.lang.Object $r6, $r10;

        r3 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        r12 := @parameter2: com.sun.xml.bind.v2.runtime.reflect.Accessor;

        $r29 = new com.sun.xml.bind.v2.runtime.property.UnmarshallerChain;

        specialinvoke $r29.<com.sun.xml.bind.v2.runtime.property.UnmarshallerChain: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r1);

        r28 = r2;

     label01:
        if r28 == null goto label08;

        $r15 = r28.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] properties>;

        $i1 = lengthof $r15;

        i4 = $i1 - 1;

     label02:
        if i4 < 0 goto label07;

        $r16 = r28.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] properties>;

        r17 = $r16[i4];

        $r18 = <com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader$1: int[] $SwitchMap$com$sun$xml$bind$v2$model$core$PropertyKind>;

        $r19 = interfaceinvoke r17.<com.sun.xml.bind.v2.runtime.property.Property: com.sun.xml.bind.v2.model.core.PropertyKind getKind()>();

        $i2 = virtualinvoke $r19.<com.sun.xml.bind.v2.model.core.PropertyKind: int ordinal()>();

        $i3 = $r18[$i2];

        tableswitch($i3)
        {
            case 1: goto label03;
            case 2: goto label05;
            case 3: goto label05;
            case 4: goto label05;
            case 5: goto label05;
            default: goto label06;
        };

     label03:
        $r21 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap attUnmarshallers>;

        if $r21 != null goto label04;

        $r30 = new com.sun.xml.bind.v2.util.QNameMap;

        specialinvoke $r30.<com.sun.xml.bind.v2.util.QNameMap: void <init>()>();

        r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap attUnmarshallers> = $r30;

     label04:
        $r27 = (com.sun.xml.bind.v2.runtime.property.AttributeProperty) r17;

        $r23 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap attUnmarshallers>;

        $r22 = $r27.<com.sun.xml.bind.v2.runtime.property.AttributeProperty: com.sun.xml.bind.v2.runtime.Name attName>;

        $r24 = virtualinvoke $r22.<com.sun.xml.bind.v2.runtime.Name: javax.xml.namespace.QName toQName()>();

        $r25 = $r27.<com.sun.xml.bind.v2.runtime.property.AttributeProperty: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        virtualinvoke $r23.<com.sun.xml.bind.v2.util.QNameMap: void put(javax.xml.namespace.QName,java.lang.Object)>($r24, $r25);

        goto label06;

     label05:
        $r20 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap childUnmarshallers>;

        interfaceinvoke r17.<com.sun.xml.bind.v2.runtime.property.Property: void buildChildElementUnmarshallers(com.sun.xml.bind.v2.runtime.property.UnmarshallerChain,com.sun.xml.bind.v2.util.QNameMap)>($r29, $r20);

     label06:
        $i6 = (int) -1;

        i4 = i4 + $i6;

        goto label02;

     label07:
        r28 = r28.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz>;

        goto label01;

     label08:
        $i0 = virtualinvoke $r29.<com.sun.xml.bind.v2.runtime.property.UnmarshallerChain: int getScopeSize()>();

        r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: int frameSize> = $i0;

        $r5 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap childUnmarshallers>;

        $r4 = <com.sun.xml.bind.v2.runtime.property.StructureLoaderBuilder: javax.xml.namespace.QName TEXT_HANDLER>;

        $r6 = virtualinvoke $r5.<com.sun.xml.bind.v2.util.QNameMap: java.lang.Object get(javax.xml.namespace.QName)>($r4);

        $r7 = (com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader) $r6;

        r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader textHandler> = $r7;

        $r9 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap childUnmarshallers>;

        $r8 = <com.sun.xml.bind.v2.runtime.property.StructureLoaderBuilder: javax.xml.namespace.QName CATCH_ALL>;

        $r10 = virtualinvoke $r9.<com.sun.xml.bind.v2.util.QNameMap: java.lang.Object get(javax.xml.namespace.QName)>($r8);

        $r11 = (com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader) $r10;

        r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader catchAll> = $r11;

        if r12 == null goto label09;

        r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.reflect.Accessor attCatchAll> = r12;

        $r13 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap attUnmarshallers>;

        if $r13 != null goto label10;

        $r14 = <com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap EMPTY>;

        r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap attUnmarshallers> = $r14;

        goto label10;

     label09:
        r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.reflect.Accessor attCatchAll> = null;

     label10:
        return;
    }

    public void startElement(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State, com.sun.xml.bind.v2.runtime.unmarshaller.TagName) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r1;
        java.util.Map r41;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor $r30;
        javax.xml.namespace.QName $r20;
        java.lang.Object[] $r23;
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName r6;
        java.util.HashMap $r28;
        java.lang.AssertionError $r37;
        com.sun.xml.bind.v2.util.QNameMap $r5, $r12;
        int $i0, $i1, $i2, i3;
        org.xml.sax.Attributes r7;
        java.lang.String $r8, $r9, $r10, $r11, $r15, $r16, $r27, r40, r42;
        com.sun.xml.bind.api.AccessorException $r38;
        com.sun.xml.bind.v2.runtime.unmarshaller.Messages $r26;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r0;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r14, $r18, $r21, $r24, $r29;
        java.lang.Object $r2, $r13, r17, $r19, r39;
        java.lang.Class $r22, $r25, $r34, $r35;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r4, $r31, $r32, $r33, $r36;

        r3 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        r6 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.TagName;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext getContext()>();

        $z0 = <com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r36 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.JaxBeanInfo beanInfo>;

        $z4 = virtualinvoke $r36.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: boolean isImmutable()>();

        if $z4 == 0 goto label01;

        $r37 = new java.lang.AssertionError;

        specialinvoke $r37.<java.lang.AssertionError: void <init>()>();

        throw $r37;

     label01:
        $r2 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object getInnerPeer()>();

        r39 = $r2;

        if $r2 == null goto label02;

        $r33 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.JaxBeanInfo beanInfo>;

        $r34 = $r33.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Class jaxbType>;

        $r35 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r34 == $r35 goto label02;

        r39 = null;

     label02:
        if r39 == null goto label03;

        $r32 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.JaxBeanInfo beanInfo>;

        virtualinvoke $r32.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: boolean reset(java.lang.Object,com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext)>(r39, $r1);

     label03:
        if r39 != null goto label04;

        $r31 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.JaxBeanInfo beanInfo>;

        r39 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object createInstance(com.sun.xml.bind.v2.runtime.JaxBeanInfo)>($r31);

     label04:
        virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void recordInnerPeer(java.lang.Object)>(r39);

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target> = r39;

        $r4 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.JaxBeanInfo beanInfo>;

        virtualinvoke r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: void fireBeforeUnmarshal(com.sun.xml.bind.v2.runtime.JaxBeanInfo,java.lang.Object,com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State)>($r4, r39, r0);

        $i0 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: int frameSize>;

        virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void startScope(int)>($i0);

        $r5 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap attUnmarshallers>;

        if $r5 == null goto label20;

        r7 = r6.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: org.xml.sax.Attributes atts>;

        i3 = 0;

     label05:
        $i1 = interfaceinvoke r7.<org.xml.sax.Attributes: int getLength()>();

        if i3 >= $i1 goto label20;

        $r8 = interfaceinvoke r7.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i3);

        $r9 = interfaceinvoke r7.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i3);

        r40 = $r9;

        $r10 = "";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label06;

        r40 = interfaceinvoke r7.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i3);

     label06:
        $r11 = interfaceinvoke r7.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i3);

        $r12 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap attUnmarshallers>;

        $r13 = virtualinvoke $r12.<com.sun.xml.bind.v2.util.QNameMap: java.lang.Object get(java.lang.String,java.lang.String)>($r8, r40);

        $r30 = (com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor) $r13;

     label07:
        if $r30 == null goto label08;

        virtualinvoke $r30.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor: void parse(java.lang.Object,java.lang.CharSequence)>(r39, $r11);

        goto label17;

     label08:
        $r14 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.reflect.Accessor attCatchAll>;

        if $r14 == null goto label17;

        $r15 = interfaceinvoke r7.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i3);

        $r16 = interfaceinvoke r7.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i3);

        $z2 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2001/XMLSchema-instance");

        if $z2 == 0 goto label10;

     label09:
        goto label19;

     label10:
        r17 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target>;

        $r18 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.reflect.Accessor attCatchAll>;

        $r19 = virtualinvoke $r18.<com.sun.xml.bind.v2.runtime.reflect.Accessor: java.lang.Object get(java.lang.Object)>(r17);

        r41 = (java.util.Map) $r19;

        if r41 != null goto label14;

        $r21 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.reflect.Accessor attCatchAll>;

        $r22 = $r21.<com.sun.xml.bind.v2.runtime.reflect.Accessor: java.lang.Class valueType>;

        $z3 = virtualinvoke $r22.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/util/HashMap;");

        if $z3 == 0 goto label11;

        $r28 = new java.util.HashMap;

        specialinvoke $r28.<java.util.HashMap: void <init>()>();

        r41 = $r28;

        goto label13;

     label11:
        $r26 = <com.sun.xml.bind.v2.runtime.unmarshaller.Messages: com.sun.xml.bind.v2.runtime.unmarshaller.Messages UNABLE_TO_CREATE_MAP>;

        $r23 = newarray (java.lang.Object)[1];

        $r24 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.reflect.Accessor attCatchAll>;

        $r25 = $r24.<com.sun.xml.bind.v2.runtime.reflect.Accessor: java.lang.Class valueType>;

        $r23[0] = $r25;

        $r27 = virtualinvoke $r26.<com.sun.xml.bind.v2.runtime.unmarshaller.Messages: java.lang.String format(java.lang.Object[])>($r23);

        virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void handleError(java.lang.String)>($r27);

     label12:
        return;

     label13:
        $r29 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.reflect.Accessor attCatchAll>;

        virtualinvoke $r29.<com.sun.xml.bind.v2.runtime.reflect.Accessor: void set(java.lang.Object,java.lang.Object)>(r17, $r28);

     label14:
        $i2 = virtualinvoke $r15.<java.lang.String: int indexOf(int)>(58);

        if $i2 >= 0 goto label15;

        r42 = "";

        goto label16;

     label15:
        r42 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label16:
        $r20 = new javax.xml.namespace.QName;

        specialinvoke $r20.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r8, r40, r42);

        interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r11);

     label17:
        goto label19;

     label18:
        $r38 := @caughtexception;

        staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: void handleGenericException(java.lang.Exception,boolean)>($r38, 1);

     label19:
        i3 = i3 + 1;

        goto label05;

     label20:
        return;

        catch com.sun.xml.bind.api.AccessorException from label07 to label09 with label18;
        catch com.sun.xml.bind.api.AccessorException from label10 to label12 with label18;
        catch com.sun.xml.bind.api.AccessorException from label13 to label17 with label18;
    }

    public void childElement(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State, com.sun.xml.bind.v2.runtime.unmarshaller.TagName) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader $r13, r19;
        com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r21;
        com.sun.xml.bind.v2.util.QNameMap $r4, $r17;
        java.lang.String $r2, $r3, $r15, $r16;
        boolean $z0;
        java.util.Iterator $r12;
        java.util.Collection $r9, $r11;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r6;
        com.sun.xml.bind.v2.runtime.unmarshaller.Receiver $r22;
        java.lang.Object $r5, $r14, $r18;
        javax.xml.namespace.QName r20;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r7, $r8, $r10;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader;

        r6 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        r1 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.TagName;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap childUnmarshallers>;

        $r3 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: java.lang.String uri>;

        $r2 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: java.lang.String local>;

        $r5 = virtualinvoke $r4.<com.sun.xml.bind.v2.util.QNameMap: java.lang.Object get(java.lang.String,java.lang.String)>($r3, $r2);

        r19 = (com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader) $r5;

        if r19 != null goto label2;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.JaxBeanInfo beanInfo>;

        if $r7 == null goto label1;

        $r8 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.JaxBeanInfo beanInfo>;

        $r9 = virtualinvoke $r8.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.util.Collection getTypeNames()>();

        if $r9 == null goto label1;

        $r10 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.JaxBeanInfo beanInfo>;

        $r11 = virtualinvoke $r10.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.util.Collection getTypeNames()>();

        $r12 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

        if $r12 == null goto label1;

        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r13 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader catchAll>;

        if $r13 != null goto label1;

        $r14 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r20 = (javax.xml.namespace.QName) $r14;

        $r15 = virtualinvoke r20.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r17 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap childUnmarshallers>;

        $r16 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: java.lang.String local>;

        $r18 = virtualinvoke $r17.<com.sun.xml.bind.v2.util.QNameMap: java.lang.Object get(java.lang.String,java.lang.String)>($r15, $r16);

        r19 = (com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader) $r18;

     label1:
        if r19 != null goto label2;

        r19 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader catchAll>;

        if r19 != null goto label2;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void childElement(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,com.sun.xml.bind.v2.runtime.unmarshaller.TagName)>(r6, r1);

        return;

     label2:
        $r21 = r19.<com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader>;

        r6.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader> = $r21;

        $r22 = r19.<com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader: com.sun.xml.bind.v2.runtime.unmarshaller.Receiver receiver>;

        r6.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Receiver receiver> = $r22;

        return;
    }

    public java.util.Collection getExpectedChildElements()
    {
        com.sun.xml.bind.v2.util.QNameMap $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader r0;
        java.util.Collection $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap childUnmarshallers>;

        $r2 = virtualinvoke $r1.<com.sun.xml.bind.v2.util.QNameMap: java.util.Collection keySet()>();

        return $r2;
    }

    public java.util.Collection getExpectedAttributes()
    {
        com.sun.xml.bind.v2.util.QNameMap $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader r0;
        java.util.Collection $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap attUnmarshallers>;

        $r2 = virtualinvoke $r1.<com.sun.xml.bind.v2.util.QNameMap: java.util.Collection keySet()>();

        return $r2;
    }

    public void text(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State, java.lang.CharSequence) throws org.xml.sax.SAXException
    {
        java.lang.CharSequence r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader $r1, $r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r5;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader;

        r3 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        r4 := @parameter1: java.lang.CharSequence;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader textHandler>;

        if $r1 == null goto label1;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader textHandler>;

        $r5 = $r2.<com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader>;

        virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void text(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,java.lang.CharSequence)>(r3, r4);

     label1:
        return;
    }

    public void leaveElement(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State, com.sun.xml.bind.v2.runtime.unmarshaller.TagName) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName r6;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r0, $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r1;
        int $i0;
        java.lang.Object $r4;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r5;

        r2 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        r6 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.TagName;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext getContext()>();

        $i0 = r2.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: int frameSize>;

        virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void endScope(int)>($i0);

        $r5 = r2.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.JaxBeanInfo beanInfo>;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target>;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State prev>;

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: void fireAfterUnmarshal(com.sun.xml.bind.v2.runtime.JaxBeanInfo,java.lang.Object,com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State)>($r5, $r4, $r3);

        return;
    }

    public com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo()
    {
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.runtime.JaxBeanInfo beanInfo>;

        return $r1;
    }

    static void <clinit>()
    {
        com.sun.xml.bind.v2.util.QNameMap $r1;
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/bind/v2/runtime/unmarshaller/StructureLoader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: boolean $assertionsDisabled> = $z1;

        $r1 = new com.sun.xml.bind.v2.util.QNameMap;

        specialinvoke $r1.<com.sun.xml.bind.v2.util.QNameMap: void <init>()>();

        <com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader: com.sun.xml.bind.v2.util.QNameMap EMPTY> = $r1;

        return;
    }
}
