public final class org.codehaus.jackson.map.ser.std.IndexedStringListSerializer extends org.codehaus.jackson.map.ser.std.StaticListSerializerBase implements org.codehaus.jackson.map.ResolvableSerializer
{
    protected org.codehaus.jackson.map.JsonSerializer _serializer;

    public void <init>(org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.ser.std.IndexedStringListSerializer r0;
        org.codehaus.jackson.map.BeanProperty r1;

        r0 := @this: org.codehaus.jackson.map.ser.std.IndexedStringListSerializer;

        r1 := @parameter0: org.codehaus.jackson.map.BeanProperty;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: void <init>(org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer)>(r1, null);

        return;
    }

    public void <init>(org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.JsonSerializer r2;
        org.codehaus.jackson.map.ser.std.IndexedStringListSerializer r0;
        org.codehaus.jackson.map.BeanProperty r1;

        r0 := @this: org.codehaus.jackson.map.ser.std.IndexedStringListSerializer;

        r1 := @parameter0: org.codehaus.jackson.map.BeanProperty;

        r2 := @parameter1: org.codehaus.jackson.map.JsonSerializer;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.StaticListSerializerBase: void <init>(java.lang.Class,org.codehaus.jackson.map.BeanProperty)>(class "Ljava/util/List;", r1);

        r0.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: org.codehaus.jackson.map.JsonSerializer _serializer> = r2;

        return;
    }

    protected org.codehaus.jackson.JsonNode contentSchema()
    {
        org.codehaus.jackson.map.ser.std.IndexedStringListSerializer r0;
        org.codehaus.jackson.node.ObjectNode $r1;

        r0 := @this: org.codehaus.jackson.map.ser.std.IndexedStringListSerializer;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("string", 1);

        return $r1;
    }

    public void resolve(org.codehaus.jackson.map.SerializerProvider) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ser.std.IndexedStringListSerializer r0;
        org.codehaus.jackson.map.SerializerProvider r2;
        org.codehaus.jackson.map.JsonSerializer $r1, $r4;
        org.codehaus.jackson.map.BeanProperty $r3;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ser.std.IndexedStringListSerializer;

        r2 := @parameter0: org.codehaus.jackson.map.SerializerProvider;

        $r1 = r0.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: org.codehaus.jackson.map.JsonSerializer _serializer>;

        if $r1 != null goto label1;

        $r3 = r0.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: org.codehaus.jackson.map.BeanProperty _property>;

        $r4 = virtualinvoke r2.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty)>(class "Ljava/lang/String;", $r3);

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: boolean isDefaultSerializer(org.codehaus.jackson.map.JsonSerializer)>($r4);

        if $z0 != 0 goto label1;

        r0.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: org.codehaus.jackson.map.JsonSerializer _serializer> = $r4;

     label1:
        return;
    }

    public void serialize(java.util.List, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        java.util.List r3;
        org.codehaus.jackson.map.ser.std.IndexedStringListSerializer r1;
        org.codehaus.jackson.JsonGenerator r0;
        org.codehaus.jackson.map.SerializerProvider r4;
        org.codehaus.jackson.map.JsonSerializer $r2;

        r1 := @this: org.codehaus.jackson.map.ser.std.IndexedStringListSerializer;

        r3 := @parameter0: java.util.List;

        r0 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r4 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeStartArray()>();

        $r2 = r1.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: org.codehaus.jackson.map.JsonSerializer _serializer>;

        if $r2 != null goto label1;

        specialinvoke r1.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: void serializeContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(r3, r0, r4);

        goto label2;

     label1:
        specialinvoke r1.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: void serializeUsingCustom(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(r3, r0, r4);

     label2:
        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeEndArray()>();

        return;
    }

    public void serializeWithType(java.util.List, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        java.util.List r1;
        org.codehaus.jackson.map.ser.std.IndexedStringListSerializer r3;
        org.codehaus.jackson.map.TypeSerializer r0;
        org.codehaus.jackson.JsonGenerator r2;
        org.codehaus.jackson.map.SerializerProvider r5;
        org.codehaus.jackson.map.JsonSerializer $r4;

        r3 := @this: org.codehaus.jackson.map.ser.std.IndexedStringListSerializer;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r5 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        r0 := @parameter3: org.codehaus.jackson.map.TypeSerializer;

        virtualinvoke r0.<org.codehaus.jackson.map.TypeSerializer: void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator)>(r1, r2);

        $r4 = r3.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: org.codehaus.jackson.map.JsonSerializer _serializer>;

        if $r4 != null goto label1;

        specialinvoke r3.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: void serializeContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(r1, r2, r5);

        goto label2;

     label1:
        specialinvoke r3.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: void serializeUsingCustom(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(r1, r2, r5);

     label2:
        virtualinvoke r0.<org.codehaus.jackson.map.TypeSerializer: void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator)>(r1, r2);

        return;
    }

    private final void serializeContents(java.util.List, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.ser.std.IndexedStringListSerializer r6;
        org.codehaus.jackson.map.SerializerProvider r4;
        java.lang.Exception $r5;
        java.util.List r0;
        org.codehaus.jackson.JsonGenerator r3;
        int $i0, i1;
        java.lang.Object $r1;
        java.lang.String r2;

        r6 := @this: org.codehaus.jackson.map.ser.std.IndexedStringListSerializer;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r4 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

     label2:
        if i1 >= $i0 goto label5;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (java.lang.String) $r1;

        if r2 != null goto label3;

        virtualinvoke r4.<org.codehaus.jackson.map.SerializerProvider: void defaultSerializeNull(org.codehaus.jackson.JsonGenerator)>(r3);

        goto label4;

     label3:
        virtualinvoke r3.<org.codehaus.jackson.JsonGenerator: void writeString(java.lang.String)>(r2);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;

        virtualinvoke r6.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,int)>(r4, $r5, r0, i1);

     label7:
        return;

        catch java.lang.Exception from label1 to label5 with label6;
    }

    private final void serializeUsingCustom(java.util.List, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.ser.std.IndexedStringListSerializer r1;
        org.codehaus.jackson.map.SerializerProvider r6;
        org.codehaus.jackson.map.JsonSerializer r2;
        java.lang.Exception $r7;
        java.util.List r0;
        org.codehaus.jackson.JsonGenerator r5;
        int $i0, i1;
        java.lang.Object $r3;
        java.lang.String r4;

        r1 := @this: org.codehaus.jackson.map.ser.std.IndexedStringListSerializer;

        r0 := @parameter0: java.util.List;

        r5 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r6 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        r2 = r1.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: org.codehaus.jackson.map.JsonSerializer _serializer>;

        i1 = 0;

     label2:
        if i1 >= $i0 goto label5;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (java.lang.String) $r3;

        if r4 != null goto label3;

        virtualinvoke r6.<org.codehaus.jackson.map.SerializerProvider: void defaultSerializeNull(org.codehaus.jackson.JsonGenerator)>(r5);

        goto label4;

     label3:
        virtualinvoke r2.<org.codehaus.jackson.map.JsonSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(r4, r5, r6);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

        virtualinvoke r1.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,int)>(r6, $r7, r0, i1);

     label7:
        return;

        catch java.lang.Exception from label1 to label5 with label6;
    }

    public volatile void serialize(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        java.util.List $r4;
        org.codehaus.jackson.map.ser.std.IndexedStringListSerializer r0;
        org.codehaus.jackson.JsonGenerator r2;
        org.codehaus.jackson.map.SerializerProvider r3;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.ser.std.IndexedStringListSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 = (java.util.List) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: void serialize(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r4, r2, r3);

        return;
    }

    public volatile void serializeWithType(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.util.List $r5;
        org.codehaus.jackson.map.ser.std.IndexedStringListSerializer r0;
        org.codehaus.jackson.JsonGenerator r2;
        org.codehaus.jackson.map.TypeSerializer r4;
        org.codehaus.jackson.map.SerializerProvider r3;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.ser.std.IndexedStringListSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        r4 := @parameter3: org.codehaus.jackson.map.TypeSerializer;

        $r5 = (java.util.List) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.std.IndexedStringListSerializer: void serializeWithType(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>($r5, r2, r3, r4);

        return;
    }
}
