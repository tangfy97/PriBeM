public class org.apache.xalan.templates.ElemTemplateElement extends org.apache.xml.utils.UnImplNode implements org.apache.xml.utils.PrefixResolver, java.io.Serializable, org.apache.xpath.ExpressionNode, org.apache.xpath.WhitespaceStrippingElementMatcher, org.apache.xalan.templates.XSLTVisitable
{
    private int m_lineNumber;
    private int m_endLineNumber;
    private int m_columnNumber;
    private int m_endColumnNumber;
    private boolean m_defaultSpace;
    private boolean m_hasTextLitOnly;
    protected boolean m_hasVariableDecl;
    private java.util.Vector m_declaredPrefixes;
    java.util.Vector m_prefixTable;
    protected int m_docOrderNumber;
    protected org.apache.xalan.templates.ElemTemplateElement m_parentNode;
    org.apache.xalan.templates.ElemTemplateElement m_nextSibling;
    org.apache.xalan.templates.ElemTemplateElement m_firstChild;
    private transient org.w3c.dom.Node m_DOMBackPointer;

    public void <init>()
    {
        int $i1;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        specialinvoke r0.<org.apache.xml.utils.UnImplNode: void <init>()>();

        r0.<org.apache.xalan.templates.ElemTemplateElement: boolean m_defaultSpace> = 1;

        r0.<org.apache.xalan.templates.ElemTemplateElement: boolean m_hasTextLitOnly> = 0;

        r0.<org.apache.xalan.templates.ElemTemplateElement: boolean m_hasVariableDecl> = 0;

        $i1 = (int) -1;

        r0.<org.apache.xalan.templates.ElemTemplateElement: int m_docOrderNumber> = $i1;

        return;
    }

    public boolean isCompiledTemplate()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        return 0;
    }

    public int getXSLToken()
    {
        int $i1;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $i1 = (int) -1;

        return $i1;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        return "Unknown XSLT Element";
    }

    public java.lang.String getLocalName()
    {
        java.lang.String $r1;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNodeName()>();

        return $r1;
    }

    public void runtimeInit(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        return;
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        return;
    }

    public org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()
    {
        org.apache.xalan.templates.StylesheetComposed $r2;
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        $r2 = virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()>();

        return $r2;
    }

    public org.apache.xalan.templates.Stylesheet getStylesheet()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1, $r2;
        org.apache.xalan.templates.Stylesheet $r3;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        if null != $r1 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        $r3 = virtualinvoke $r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.Stylesheet getStylesheet()>();

     label2:
        return $r3;
    }

    public org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()
    {
        org.apache.xalan.templates.StylesheetRoot $r2;
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        $r2 = virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        return $r2;
    }

    public void recompose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.StylesheetRoot r1;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        return;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.StylesheetRoot r2;
        org.apache.xalan.templates.ElemTemplateElement r0, $r1, $r3;
        org.apache.xalan.templates.StylesheetRoot$ComposeState $r4;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r2 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void resolvePrefixTables()>();

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i0 != 78 goto label1;

        $r3 = virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()>();

        if $r3 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.xalan.templates.ElemTemplateElement: boolean m_hasTextLitOnly> = $z0;

        $r4 = virtualinvoke r2.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        virtualinvoke $r4.<org.apache.xalan.templates.StylesheetRoot$ComposeState: void pushStackMark()>();

        return;
    }

    public void endCompose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.StylesheetRoot r0;
        org.apache.xalan.templates.ElemTemplateElement r2;
        org.apache.xalan.templates.StylesheetRoot$ComposeState $r1;

        r2 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r0 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        virtualinvoke $r1.<org.apache.xalan.templates.StylesheetRoot$ComposeState: void popStackMark()>();

        return;
    }

    public void error(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r1, $r4;
        org.apache.xalan.templates.ElemTemplateElement r6;
        java.lang.String r0, $r2, $r5;
        java.lang.RuntimeException $r3;

        r6 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>(r0, r1);

        $r3 = new java.lang.RuntimeException;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r2;

        $r5 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ELEMTEMPLATEELEM_ERR", $r4);

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r3;
    }

    public void error(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>(r1, null);

        return;
    }

    public org.w3c.dom.Node appendChild(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xalan.templates.ElemTemplateElement r1, $r2, r4, $r5;
        org.w3c.dom.Node r0, $r3;

        r1 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r0 := @parameter0: org.w3c.dom.Node;

        if null != r0 goto label1;

        virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>("ER_NULL_CHILD", null);

     label1:
        $r5 = (org.apache.xalan.templates.ElemTemplateElement) r0;

        $r2 = r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        if null != $r2 goto label2;

        r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild> = $r5;

        goto label3;

     label2:
        $r3 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getLastChild()>();

        r4 = (org.apache.xalan.templates.ElemTemplateElement) $r3;

        r4.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = $r5;

     label3:
        $r5.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode> = r1;

        return r0;
    }

    public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r1, $r2, $r3;

        r1 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r0 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        if null != r0 goto label1;

        virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>("ER_NULL_CHILD", null);

     label1:
        $r2 = r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        if null != $r2 goto label2;

        r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild> = r0;

        goto label3;

     label2:
        $r3 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getLastChildElem()>();

        $r3.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = r0;

     label3:
        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void setParentElem(org.apache.xalan.templates.ElemTemplateElement)>(r1);

        return r0;
    }

    public boolean hasChildNodes()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        if null == $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public short getNodeType()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        return 1;
    }

    public org.w3c.dom.NodeList getChildNodes()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        return r0;
    }

    public org.apache.xalan.templates.ElemTemplateElement removeChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r1, $r2, $r3, $r4, $r5, $r6;

        r1 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r0 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        if r0 == null goto label1;

        $r2 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        if $r2 == r1 goto label2;

     label1:
        return null;

     label2:
        $r3 = r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        if r0 != $r3 goto label3;

        $r6 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild> = $r6;

        goto label4;

     label3:
        $r4 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getPreviousSiblingElem()>();

        $r5 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        $r4.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = $r5;

     label4:
        r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode> = null;

        r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = null;

        return r0;
    }

    public org.w3c.dom.Node replaceChild(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xalan.templates.ElemTemplateElement r2, r4, r5, r7, $r8, $r9;
        org.w3c.dom.Node r0, $r1, r3, $r6;

        r2 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r3 := @parameter0: org.w3c.dom.Node;

        r0 := @parameter1: org.w3c.dom.Node;

        if r0 == null goto label1;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        if $r1 == r2 goto label2;

     label1:
        return null;

     label2:
        r4 = (org.apache.xalan.templates.ElemTemplateElement) r3;

        r5 = (org.apache.xalan.templates.ElemTemplateElement) r0;

        $r6 = virtualinvoke r5.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getPreviousSibling()>();

        r7 = (org.apache.xalan.templates.ElemTemplateElement) $r6;

        if null == r7 goto label3;

        r7.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = r4;

     label3:
        $r8 = r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        if $r8 != r5 goto label4;

        r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild> = r4;

     label4:
        r4.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode> = r2;

        r5.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode> = null;

        $r9 = r5.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        r4.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = $r9;

        r5.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = null;

        return r4;
    }

    public org.w3c.dom.Node insertBefore(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.Node r0, r1, $r9, $r12, r15, r16;
        org.w3c.dom.DOMException $r14;
        boolean z0;
        org.apache.xalan.templates.ElemTemplateElement r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r13;

        r2 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.w3c.dom.Node;

        r0 := @parameter1: org.w3c.dom.Node;

        if null != r0 goto label01;

        virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r1);

        return r1;

     label01:
        if r1 != r0 goto label02;

        return r1;

     label02:
        r15 = r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        r16 = null;

        z0 = 0;

        goto label10;

     label03:
        if r1 != r15 goto label06;

        if null == r16 goto label04;

        $r11 = (org.apache.xalan.templates.ElemTemplateElement) r16;

        $r12 = interfaceinvoke r15.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        $r13 = (org.apache.xalan.templates.ElemTemplateElement) $r12;

        $r11.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = $r13;

        goto label05;

     label04:
        $r9 = interfaceinvoke r15.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        $r10 = (org.apache.xalan.templates.ElemTemplateElement) $r9;

        r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild> = $r10;

     label05:
        r15 = interfaceinvoke r15.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label10;

     label06:
        if r0 != r15 goto label09;

        if null == r16 goto label07;

        $r8 = (org.apache.xalan.templates.ElemTemplateElement) r16;

        $r7 = (org.apache.xalan.templates.ElemTemplateElement) r1;

        $r8.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = $r7;

        goto label08;

     label07:
        $r3 = (org.apache.xalan.templates.ElemTemplateElement) r1;

        r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild> = $r3;

     label08:
        $r5 = (org.apache.xalan.templates.ElemTemplateElement) r1;

        $r4 = (org.apache.xalan.templates.ElemTemplateElement) r0;

        $r5.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = $r4;

        $r6 = (org.apache.xalan.templates.ElemTemplateElement) r1;

        virtualinvoke $r6.<org.apache.xalan.templates.ElemTemplateElement: void setParentElem(org.apache.xalan.templates.ElemTemplateElement)>(r2);

        r16 = r1;

        r15 = interfaceinvoke r15.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        z0 = 1;

        goto label10;

     label09:
        r16 = r15;

        r15 = interfaceinvoke r15.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label10:
        if null != r15 goto label03;

        if z0 != 0 goto label11;

        $r14 = new org.w3c.dom.DOMException;

        specialinvoke $r14.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(8, "refChild was not found in insertBefore method!");

        throw $r14;

     label11:
        return r1;
    }

    public org.apache.xalan.templates.ElemTemplateElement replaceChild(org.apache.xalan.templates.ElemTemplateElement, org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1, r2, $r3, $r4, r5, $r6;

        r2 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r5 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        r0 := @parameter1: org.apache.xalan.templates.ElemTemplateElement;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentElem()>();

        if $r1 == r2 goto label2;

     label1:
        return null;

     label2:
        $r3 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getPreviousSiblingElem()>();

        if null == $r3 goto label3;

        $r3.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = r5;

     label3:
        $r4 = r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        if $r4 != r0 goto label4;

        r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild> = r5;

     label4:
        r5.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode> = r2;

        r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode> = null;

        $r6 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        r5.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = $r6;

        r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = null;

        return r5;
    }

    public int getLength()
    {
        int i0;
        org.apache.xalan.templates.ElemTemplateElement r0, r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        i0 = 0;

        r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        goto label2;

     label1:
        i0 = i0 + 1;

        r1 = r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

     label2:
        if r1 != null goto label1;

        return i0;
    }

    public org.w3c.dom.Node item(int)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r1;
        int i0, i1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        i0 := @parameter0: int;

        r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        i1 = 0;

        goto label2;

     label1:
        r1 = r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        i1 = i1 + 1;

     label2:
        if i1 >= i0 goto label3;

        if r1 != null goto label1;

     label3:
        return r1;
    }

    public org.w3c.dom.Document getOwnerDocument()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.templates.Stylesheet $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.Stylesheet getStylesheet()>();

        return $r1;
    }

    public org.apache.xalan.templates.ElemTemplate getOwnerXSLTemplate()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r2, r3;
        org.apache.xalan.templates.ElemTemplate $r1;
        int i0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r3 = r0;

        i0 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        goto label2;

     label1:
        $r2 = virtualinvoke r3.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentElem()>();

        r3 = $r2;

        if null == $r2 goto label2;

        i0 = virtualinvoke $r2.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

     label2:
        if null == r3 goto label3;

        if i0 != 19 goto label1;

     label3:
        $r1 = (org.apache.xalan.templates.ElemTemplate) r3;

        return $r1;
    }

    public java.lang.String getTagName()
    {
        java.lang.String $r1;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNodeName()>();

        return $r1;
    }

    public boolean hasTextLitOnly()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = r0.<org.apache.xalan.templates.ElemTemplateElement: boolean m_hasTextLitOnly>;

        return $z0;
    }

    public java.lang.String getBaseIdentifier()
    {
        java.lang.String $r1;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getSystemId()>();

        return $r1;
    }

    public int getEndLineNumber()
    {
        int $i0;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = r0.<org.apache.xalan.templates.ElemTemplateElement: int m_endLineNumber>;

        return $i0;
    }

    public int getLineNumber()
    {
        int $i0;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = r0.<org.apache.xalan.templates.ElemTemplateElement: int m_lineNumber>;

        return $i0;
    }

    public int getEndColumnNumber()
    {
        int $i0;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = r0.<org.apache.xalan.templates.ElemTemplateElement: int m_endColumnNumber>;

        return $i0;
    }

    public int getColumnNumber()
    {
        int $i0;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = r0.<org.apache.xalan.templates.ElemTemplateElement: int m_columnNumber>;

        return $i0;
    }

    public java.lang.String getPublicId()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        $r3 = virtualinvoke $r2.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getPublicId()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public java.lang.String getSystemId()
    {
        java.lang.String $r2;
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.templates.Stylesheet $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.Stylesheet getStylesheet()>();

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: java.lang.String getHref()>();

     label2:
        return $r2;
    }

    public void setLocaterInfo(javax.xml.transform.SourceLocator)
    {
        javax.xml.transform.SourceLocator r1;
        org.apache.xalan.templates.ElemTemplateElement r0;
        int $i0, $i1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: javax.xml.transform.SourceLocator;

        $i0 = interfaceinvoke r1.<javax.xml.transform.SourceLocator: int getLineNumber()>();

        r0.<org.apache.xalan.templates.ElemTemplateElement: int m_lineNumber> = $i0;

        $i1 = interfaceinvoke r1.<javax.xml.transform.SourceLocator: int getColumnNumber()>();

        r0.<org.apache.xalan.templates.ElemTemplateElement: int m_columnNumber> = $i1;

        return;
    }

    public void setEndLocaterInfo(javax.xml.transform.SourceLocator)
    {
        javax.xml.transform.SourceLocator r1;
        org.apache.xalan.templates.ElemTemplateElement r0;
        int $i0, $i1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: javax.xml.transform.SourceLocator;

        $i0 = interfaceinvoke r1.<javax.xml.transform.SourceLocator: int getLineNumber()>();

        r0.<org.apache.xalan.templates.ElemTemplateElement: int m_endLineNumber> = $i0;

        $i1 = interfaceinvoke r1.<javax.xml.transform.SourceLocator: int getColumnNumber()>();

        r0.<org.apache.xalan.templates.ElemTemplateElement: int m_endColumnNumber> = $i1;

        return;
    }

    public boolean hasVariableDecl()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = r0.<org.apache.xalan.templates.ElemTemplateElement: boolean m_hasVariableDecl>;

        return $z0;
    }

    public void setXmlSpace(int)
    {
        int i0;
        org.apache.xalan.templates.ElemTemplateElement r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        i0 := @parameter0: int;

        if 2 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.xalan.templates.ElemTemplateElement: boolean m_defaultSpace> = $z0;

        return;
    }

    public boolean getXmlSpace()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = r0.<org.apache.xalan.templates.ElemTemplateElement: boolean m_defaultSpace>;

        return $z0;
    }

    public java.util.Vector getDeclaredPrefixes()
    {
        java.util.Vector $r1;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_declaredPrefixes>;

        return $r1;
    }

    public void setPrefixes(org.xml.sax.helpers.NamespaceSupport) throws javax.xml.transform.TransformerException
    {
        org.xml.sax.helpers.NamespaceSupport r1;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.xml.sax.helpers.NamespaceSupport;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void setPrefixes(org.xml.sax.helpers.NamespaceSupport,boolean)>(r1, 0);

        return;
    }

    public void setPrefixes(org.xml.sax.helpers.NamespaceSupport, boolean) throws javax.xml.transform.TransformerException
    {
        org.xml.sax.helpers.NamespaceSupport r0;
        org.apache.xalan.templates.ElemTemplateElement r4;
        java.util.Enumeration $r1;
        org.apache.xalan.templates.XMLNSDecl $r7;
        java.util.Vector $r5, $r8, $r9;
        java.lang.Object $r2;
        java.lang.String r3, $r6;
        boolean z0, $z1, $z2;

        r4 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r0 := @parameter0: org.xml.sax.helpers.NamespaceSupport;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<org.xml.sax.helpers.NamespaceSupport: java.util.Enumeration getDeclaredPrefixes()>();

        goto label4;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r3 = (java.lang.String) $r2;

        $r5 = r4.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_declaredPrefixes>;

        if null != $r5 goto label2;

        $r9 = new java.util.Vector;

        specialinvoke $r9.<java.util.Vector: void <init>()>();

        r4.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_declaredPrefixes> = $r9;

     label2:
        $r6 = virtualinvoke r0.<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)>(r3);

        if z0 == 0 goto label3;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/1999/XSL/Transform");

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        $r7 = new org.apache.xalan.templates.XMLNSDecl;

        specialinvoke $r7.<org.apache.xalan.templates.XMLNSDecl: void <init>(java.lang.String,java.lang.String,boolean)>(r3, $r6, 0);

        $r8 = r4.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_declaredPrefixes>;

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>($r7);

     label4:
        $z2 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 != 0 goto label1;

        return;
    }

    public java.lang.String getNamespaceForPrefix(java.lang.String, org.w3c.dom.Node)
    {
        java.lang.String r1;
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.w3c.dom.Node r2;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.w3c.dom.Node;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>("ER_CANT_RESOLVE_NSPREFIX", null);

        return null;
    }

    public java.lang.String getNamespaceForPrefix(java.lang.String)
    {
        org.apache.xalan.templates.XMLNSDecl r7;
        java.util.Vector r1;
        int $i0, i1;
        java.lang.String $r3, $r5, $r8, $r9, r10;
        boolean $z0, $z1, $z2;
        org.apache.xalan.templates.ElemTemplateElement r0, $r2, $r4;
        java.lang.Object $r6;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r10 := @parameter0: java.lang.String;

        r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_declaredPrefixes>;

        if null == r1 goto label5;

        $i0 = virtualinvoke r1.<java.util.Vector: int size()>();

        $z1 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("#default");

        if $z1 == 0 goto label1;

        r10 = "";

     label1:
        i1 = 0;

        goto label4;

     label2:
        $r6 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r7 = (org.apache.xalan.templates.XMLNSDecl) $r6;

        $r8 = virtualinvoke r7.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $z2 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label3;

        $r9 = virtualinvoke r7.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getURI()>();

        return $r9;

     label3:
        i1 = i1 + 1;

     label4:
        if i1 < $i0 goto label2;

     label5:
        $r2 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        if null == $r2 goto label6;

        $r4 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        $r5 = virtualinvoke $r4.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNamespaceForPrefix(java.lang.String)>(r10);

        return $r5;

     label6:
        $r3 = "xml";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z0 == 0 goto label7;

        return "http://www.w3.org/XML/1998/namespace";

     label7:
        return null;
    }

    public java.util.Vector getPrefixes()
    {
        java.util.Vector $r1;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable>;

        return $r1;
    }

    public boolean containsExcludeResultPrefix(java.lang.String, java.lang.String)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;
        java.lang.String r2, r3;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentElem()>();

        if null == $r1 goto label1;

        $z0 = virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplateElement: boolean containsExcludeResultPrefix(java.lang.String,java.lang.String)>(r2, r3);

        return $z0;

     label1:
        return 0;
    }

    private boolean excludeResultNSDecl(java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r1;
        java.lang.String r0, r3;
        org.apache.xalan.templates.Stylesheet $r2;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label3;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/1999/XSL/Transform");

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.Stylesheet getStylesheet()>();

        $z1 = virtualinvoke $r2.<org.apache.xalan.templates.Stylesheet: boolean containsExtensionElementURI(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        $z2 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: boolean containsExcludeResultPrefix(java.lang.String,java.lang.String)>(r3, r0);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public void resolvePrefixTables() throws javax.xml.transform.TransformerException
    {
        java.util.Vector $r1, $r3, $r4, $r5, $r12, $r14, $r15, $r19, $r22, $r26, r30;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xalan.templates.ElemTemplateElement r0, $r2;
        org.apache.xalan.templates.NamespaceAlias $r20;
        org.apache.xalan.templates.XMLNSDecl $r9, $r21, $r23, r27, r29, r31;
        int $i0, $i1, i2, i3;
        java.lang.String $r7, $r8, $r10, $r11, $r17, $r18, $r24, $r25, r28;
        org.apache.xalan.templates.StylesheetRoot $r13;
        java.lang.Object $r6, $r16;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable> = null;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_declaredPrefixes>;

        if null == $r1 goto label07;

        $r13 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        $r14 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_declaredPrefixes>;

        $i1 = virtualinvoke $r14.<java.util.Vector: int size()>();

        i2 = 0;

        goto label06;

     label01:
        $r15 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_declaredPrefixes>;

        $r16 = virtualinvoke $r15.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r27 = (org.apache.xalan.templates.XMLNSDecl) $r16;

        $r17 = virtualinvoke r27.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $r18 = virtualinvoke r27.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getURI()>();

        r28 = $r18;

        if null != $r18 goto label02;

        r28 = "";

     label02:
        $z3 = specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: boolean excludeResultNSDecl(java.lang.String,java.lang.String)>($r17, r28);

        $r19 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable>;

        if null != $r19 goto label03;

        $r26 = new java.util.Vector;

        specialinvoke $r26.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable> = $r26;

     label03:
        $r20 = virtualinvoke $r13.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.NamespaceAlias getNamespaceAliasComposed(java.lang.String)>(r28);

        if null == $r20 goto label04;

        $r23 = new org.apache.xalan.templates.XMLNSDecl;

        $r24 = virtualinvoke $r20.<org.apache.xalan.templates.NamespaceAlias: java.lang.String getStylesheetPrefix()>();

        $r25 = virtualinvoke $r20.<org.apache.xalan.templates.NamespaceAlias: java.lang.String getResultNamespace()>();

        specialinvoke $r23.<org.apache.xalan.templates.XMLNSDecl: void <init>(java.lang.String,java.lang.String,boolean)>($r24, $r25, $z3);

        r29 = $r23;

        goto label05;

     label04:
        $r21 = new org.apache.xalan.templates.XMLNSDecl;

        specialinvoke $r21.<org.apache.xalan.templates.XMLNSDecl: void <init>(java.lang.String,java.lang.String,boolean)>($r17, r28, $z3);

        r29 = $r21;

     label05:
        $r22 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable>;

        virtualinvoke $r22.<java.util.Vector: void addElement(java.lang.Object)>(r29);

        i2 = i2 + 1;

     label06:
        if i2 < $i1 goto label01;

     label07:
        $r2 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentNodeElem()>();

        if null == $r2 goto label13;

        r30 = $r2.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable>;

        $r5 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable>;

        if null != $r5 goto label08;

        $z2 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: boolean needToCheckExclude()>();

        if $z2 != 0 goto label08;

        $r12 = $r2.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable>;

        r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable> = $r12;

        goto label12;

     label08:
        $i0 = virtualinvoke r30.<java.util.Vector: int size()>();

        i3 = 0;

        goto label11;

     label09:
        $r6 = virtualinvoke r30.<java.util.Vector: java.lang.Object elementAt(int)>(i3);

        r31 = (org.apache.xalan.templates.XMLNSDecl) $r6;

        $r7 = virtualinvoke r31.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $r8 = virtualinvoke r31.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getURI()>();

        $z0 = specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: boolean excludeResultNSDecl(java.lang.String,java.lang.String)>($r7, $r8);

        $z1 = virtualinvoke r31.<org.apache.xalan.templates.XMLNSDecl: boolean getIsExcluded()>();

        if $z0 == $z1 goto label10;

        $r9 = new org.apache.xalan.templates.XMLNSDecl;

        $r10 = virtualinvoke r31.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $r11 = virtualinvoke r31.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getURI()>();

        specialinvoke $r9.<org.apache.xalan.templates.XMLNSDecl: void <init>(java.lang.String,java.lang.String,boolean)>($r10, $r11, $z0);

        r31 = $r9;

     label10:
        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void addOrReplaceDecls(org.apache.xalan.templates.XMLNSDecl)>(r31);

        i3 = i3 + 1;

     label11:
        if i3 < $i0 goto label09;

     label12:
        goto label14;

     label13:
        $r3 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable>;

        if null != $r3 goto label14;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable> = $r4;

     label14:
        return;
    }

    void addOrReplaceDecls(org.apache.xalan.templates.XMLNSDecl)
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.templates.XMLNSDecl r4, r6;
        java.util.Vector $r1, $r2, $r8;
        int $i0, i1, $i3;
        java.lang.Object $r3;
        java.lang.String $r5, $r7;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r6 := @parameter0: org.apache.xalan.templates.XMLNSDecl;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        i1 = $i0 - 1;

        goto label3;

     label1:
        $r2 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r4 = (org.apache.xalan.templates.XMLNSDecl) $r3;

        $r5 = virtualinvoke r4.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $r7 = virtualinvoke r6.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        return;

     label2:
        $i3 = (int) -1;

        i1 = i1 + $i3;

     label3:
        if i1 >= 0 goto label1;

        $r8 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable>;

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>(r6);

        return;
    }

    boolean needToCheckExclude()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        return 0;
    }

    void executeNSDecls(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void executeNSDecls(org.apache.xalan.transformer.TransformerImpl,java.lang.String)>(r1, null);

        return;
    }

    void executeNSDecls(org.apache.xalan.transformer.TransformerImpl, java.lang.String) throws javax.xml.transform.TransformerException
    {
        javax.xml.transform.TransformerException $r14;
        org.apache.xml.serializer.SerializationHandler $r3;
        org.apache.xalan.templates.XMLNSDecl r7;
        java.util.Vector $r1, $r4, $r5;
        int $i0, i1, $i3;
        java.lang.String r8, $r9, $r10, $r11;
        boolean $z0, $z1;
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.xml.sax.SAXException $r12;
        java.lang.Object $r6;
        org.apache.xalan.transformer.TransformerImpl r2;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r2 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r8 := @parameter1: java.lang.String;

     label1:
        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable>;

        if null == $r1 goto label6;

        $r3 = virtualinvoke r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        $r4 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable>;

        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        i1 = $i0 - 1;

        goto label5;

     label2:
        $r5 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r7 = (org.apache.xalan.templates.XMLNSDecl) $r6;

        $z0 = virtualinvoke r7.<org.apache.xalan.templates.XMLNSDecl: boolean getIsExcluded()>();

        if $z0 != 0 goto label4;

        if null == r8 goto label3;

        $r11 = virtualinvoke r7.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z1 != 0 goto label4;

     label3:
        $r9 = virtualinvoke r7.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $r10 = virtualinvoke r7.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getURI()>();

        interfaceinvoke $r3.<org.apache.xml.serializer.ExtendedContentHandler: boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)>($r9, $r10, 1);

     label4:
        $i3 = (int) -1;

        i1 = i1 + $i3;

     label5:
        if i1 >= 0 goto label2;

     label6:
        goto label8;

     label7:
        $r12 := @caughtexception;

        $r14 = new javax.xml.transform.TransformerException;

        specialinvoke $r14.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r12);

        throw $r14;

     label8:
        return;

        catch org.xml.sax.SAXException from label1 to label6 with label7;
    }

    void unexecuteNSDecls(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void unexecuteNSDecls(org.apache.xalan.transformer.TransformerImpl,java.lang.String)>(r1, null);

        return;
    }

    void unexecuteNSDecls(org.apache.xalan.transformer.TransformerImpl, java.lang.String) throws javax.xml.transform.TransformerException
    {
        javax.xml.transform.TransformerException $r12;
        org.apache.xml.serializer.SerializationHandler $r3;
        org.apache.xalan.templates.XMLNSDecl r7;
        java.util.Vector $r1, $r4, $r5;
        int $i0, i1;
        java.lang.String r8, $r9, $r10;
        boolean $z0, $z1;
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.xml.sax.SAXException $r11;
        java.lang.Object $r6;
        org.apache.xalan.transformer.TransformerImpl r2;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r2 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r8 := @parameter1: java.lang.String;

     label1:
        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable>;

        if null == $r1 goto label6;

        $r3 = virtualinvoke r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        $r4 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable>;

        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        i1 = 0;

        goto label5;

     label2:
        $r5 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector m_prefixTable>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r7 = (org.apache.xalan.templates.XMLNSDecl) $r6;

        $z0 = virtualinvoke r7.<org.apache.xalan.templates.XMLNSDecl: boolean getIsExcluded()>();

        if $z0 != 0 goto label4;

        if null == r8 goto label3;

        $r10 = virtualinvoke r7.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z1 != 0 goto label4;

     label3:
        $r9 = virtualinvoke r7.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        interfaceinvoke $r3.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r9);

     label4:
        i1 = i1 + 1;

     label5:
        if i1 < $i0 goto label2;

     label6:
        goto label8;

     label7:
        $r11 := @caughtexception;

        $r12 = new javax.xml.transform.TransformerException;

        specialinvoke $r12.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r11);

        throw $r12;

     label8:
        return;

        catch org.xml.sax.SAXException from label1 to label6 with label7;
    }

    public void setUid(int)
    {
        int i0;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        i0 := @parameter0: int;

        r0.<org.apache.xalan.templates.ElemTemplateElement: int m_docOrderNumber> = i0;

        return;
    }

    public int getUid()
    {
        int $i0;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = r0.<org.apache.xalan.templates.ElemTemplateElement: int m_docOrderNumber>;

        return $i0;
    }

    public org.w3c.dom.Node getParentNode()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        return $r1;
    }

    public org.apache.xalan.templates.ElemTemplateElement getParentElem()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        return $r1;
    }

    public void setParentElem(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode> = r1;

        return;
    }

    public org.w3c.dom.Node getNextSibling()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        return $r1;
    }

    public org.w3c.dom.Node getPreviousSibling()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.w3c.dom.Node $r1, r2, r3;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getParentNode()>();

        r2 = null;

        if $r1 == null goto label4;

        r3 = interfaceinvoke $r1.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label3;

     label1:
        if r3 != r0 goto label2;

        return r2;

     label2:
        r2 = r3;

        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label3:
        if r3 != null goto label1;

     label4:
        return null;
    }

    public org.apache.xalan.templates.ElemTemplateElement getPreviousSiblingElem()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1, r2, r3;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentNodeElem()>();

        r2 = null;

        if $r1 == null goto label4;

        r3 = virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

        goto label3;

     label1:
        if r3 != r0 goto label2;

        return r2;

     label2:
        r2 = r3;

        r3 = virtualinvoke r3.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()>();

     label3:
        if r3 != null goto label1;

     label4:
        return null;
    }

    public org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        return $r1;
    }

    public org.apache.xalan.templates.ElemTemplateElement getParentNodeElem()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        return $r1;
    }

    public org.w3c.dom.Node getFirstChild()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        return $r1;
    }

    public org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        return $r1;
    }

    public org.w3c.dom.Node getLastChild()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r1, r2;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 = null;

        r2 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        goto label2;

     label1:
        r1 = r2;

        r2 = r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

     label2:
        if r2 != null goto label1;

        return r1;
    }

    public org.apache.xalan.templates.ElemTemplateElement getLastChildElem()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r1, r2;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 = null;

        r2 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        goto label2;

     label1:
        r1 = r2;

        r2 = r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

     label2:
        if r2 != null goto label1;

        return r1;
    }

    public org.w3c.dom.Node getDOMBackPointer()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.w3c.dom.Node $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node m_DOMBackPointer>;

        return $r1;
    }

    public void setDOMBackPointer(org.w3c.dom.Node)
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.w3c.dom.Node;

        r0.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node m_DOMBackPointer> = r1;

        return;
    }

    public int compareTo(java.lang.Object) throws java.lang.ClassCastException
    {
        org.apache.xalan.templates.ElemTemplateElement r1, r3;
        org.apache.xalan.templates.StylesheetComposed $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.Object r0;

        r3 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.apache.xalan.templates.ElemTemplateElement) r0;

        $r2 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()>();

        $i0 = virtualinvoke $r2.<org.apache.xalan.templates.StylesheetComposed: int getImportCountComposed()>();

        $r4 = virtualinvoke r3.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()>();

        $i1 = virtualinvoke $r4.<org.apache.xalan.templates.StylesheetComposed: int getImportCountComposed()>();

        if $i1 >= $i0 goto label1;

        $i6 = (int) -1;

        return $i6;

     label1:
        if $i1 <= $i0 goto label2;

        return 1;

     label2:
        $i2 = virtualinvoke r3.<org.apache.xalan.templates.ElemTemplateElement: int getUid()>();

        $i3 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: int getUid()>();

        $i4 = $i2 - $i3;

        return $i4;
    }

    public boolean shouldStripWhiteSpace(org.apache.xpath.XPathContext, org.w3c.dom.Element) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.StylesheetRoot $r1;
        org.w3c.dom.Element r3;
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xpath.XPathContext r2;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r2 := @parameter0: org.apache.xpath.XPathContext;

        r3 := @parameter1: org.w3c.dom.Element;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        if null == $r1 goto label1;

        $z0 = virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplateElement: boolean shouldStripWhiteSpace(org.apache.xpath.XPathContext,org.w3c.dom.Element)>(r2, r3);

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canStripWhiteSpace()
    {
        org.apache.xalan.templates.StylesheetRoot $r1;
        org.apache.xalan.templates.ElemTemplateElement r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        if null == $r1 goto label1;

        $z0 = virtualinvoke $r1.<org.apache.xalan.templates.StylesheetRoot: boolean canStripWhiteSpace()>();

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canAcceptVariables()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        return 1;
    }

    public void exprSetParent(org.apache.xpath.ExpressionNode)
    {
        org.apache.xpath.ExpressionNode r1;
        org.apache.xalan.templates.ElemTemplateElement r0, $r2;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xpath.ExpressionNode;

        $r2 = (org.apache.xalan.templates.ElemTemplateElement) r1;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void setParentElem(org.apache.xalan.templates.ElemTemplateElement)>($r2);

        return;
    }

    public org.apache.xpath.ExpressionNode exprGetParent()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentElem()>();

        return $r1;
    }

    public void exprAddChild(org.apache.xpath.ExpressionNode, int)
    {
        org.apache.xpath.ExpressionNode r1;
        org.apache.xalan.templates.ElemTemplateElement r0, $r2;
        int i0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xpath.ExpressionNode;

        i0 := @parameter1: int;

        $r2 = (org.apache.xalan.templates.ElemTemplateElement) r1;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)>($r2);

        return;
    }

    public org.apache.xpath.ExpressionNode exprGetChild(int)
    {
        org.apache.xpath.ExpressionNode $r2;
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.w3c.dom.Node $r1;
        int i0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node item(int)>(i0);

        $r2 = (org.apache.xpath.ExpressionNode) $r1;

        return $r2;
    }

    public int exprGetNumChildren()
    {
        int $i0;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: int getLength()>();

        return $i0;
    }

    protected boolean accept(org.apache.xalan.templates.XSLTVisitor)
    {
        org.apache.xalan.templates.XSLTVisitor r0;
        org.apache.xalan.templates.ElemTemplateElement r1;
        boolean $z0;

        r1 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r0 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        $z0 = virtualinvoke r0.<org.apache.xalan.templates.XSLTVisitor: boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)>(r1);

        return $z0;
    }

    public void callVisitors(org.apache.xalan.templates.XSLTVisitor)
    {
        org.apache.xalan.templates.XSLTVisitor r1;
        org.apache.xalan.templates.ElemTemplateElement r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        $z0 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: boolean accept(org.apache.xalan.templates.XSLTVisitor)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)>(r1);

     label1:
        return;
    }

    protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor, boolean)
    {
        org.apache.xalan.templates.XSLTVisitor r1;
        org.apache.xalan.templates.ElemTemplateElement r0, r2;
        boolean z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        z0 := @parameter1: boolean;

        r2 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        goto label2;

     label1:
        virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: void callVisitors(org.apache.xalan.templates.XSLTVisitor)>(r1);

        r2 = r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

     label2:
        if r2 != null goto label1;

        return;
    }

    protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)
    {
        org.apache.xalan.templates.XSLTVisitor r1;
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)>(r1, 1);

        return;
    }

    public boolean handlesNullPrefixes()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        return 0;
    }
}
