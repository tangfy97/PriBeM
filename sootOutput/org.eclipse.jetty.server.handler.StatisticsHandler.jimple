public class org.eclipse.jetty.server.handler.StatisticsHandler extends org.eclipse.jetty.server.handler.HandlerWrapper
{
    private final java.util.concurrent.atomic.AtomicLong _statsStartedAt;
    private final org.eclipse.jetty.util.statistic.CounterStatistic _requestStats;
    private final org.eclipse.jetty.util.statistic.SampleStatistic _requestTimeStats;
    private final org.eclipse.jetty.util.statistic.CounterStatistic _dispatchedStats;
    private final org.eclipse.jetty.util.statistic.SampleStatistic _dispatchedTimeStats;
    private final org.eclipse.jetty.util.statistic.CounterStatistic _suspendStats;
    private final java.util.concurrent.atomic.AtomicInteger _resumes;
    private final java.util.concurrent.atomic.AtomicInteger _expires;
    private final java.util.concurrent.atomic.AtomicInteger _responses1xx;
    private final java.util.concurrent.atomic.AtomicInteger _responses2xx;
    private final java.util.concurrent.atomic.AtomicInteger _responses3xx;
    private final java.util.concurrent.atomic.AtomicInteger _responses4xx;
    private final java.util.concurrent.atomic.AtomicInteger _responses5xx;
    private final java.util.concurrent.atomic.AtomicLong _responsesTotalBytes;
    private final org.eclipse.jetty.continuation.ContinuationListener _onCompletion;

    public void <init>()
    {
        java.util.concurrent.atomic.AtomicInteger $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        java.util.concurrent.atomic.AtomicLong $r1, $r14;
        org.eclipse.jetty.server.handler.StatisticsHandler$1 $r15;
        org.eclipse.jetty.util.statistic.CounterStatistic $r2, $r4, $r6;
        org.eclipse.jetty.util.statistic.SampleStatistic $r3, $r5;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicLong _statsStartedAt> = $r1;

        $r2 = new org.eclipse.jetty.util.statistic.CounterStatistic;

        specialinvoke $r2.<org.eclipse.jetty.util.statistic.CounterStatistic: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _requestStats> = $r2;

        $r3 = new org.eclipse.jetty.util.statistic.SampleStatistic;

        specialinvoke $r3.<org.eclipse.jetty.util.statistic.SampleStatistic: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _requestTimeStats> = $r3;

        $r4 = new org.eclipse.jetty.util.statistic.CounterStatistic;

        specialinvoke $r4.<org.eclipse.jetty.util.statistic.CounterStatistic: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _dispatchedStats> = $r4;

        $r5 = new org.eclipse.jetty.util.statistic.SampleStatistic;

        specialinvoke $r5.<org.eclipse.jetty.util.statistic.SampleStatistic: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _dispatchedTimeStats> = $r5;

        $r6 = new org.eclipse.jetty.util.statistic.CounterStatistic;

        specialinvoke $r6.<org.eclipse.jetty.util.statistic.CounterStatistic: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _suspendStats> = $r6;

        $r7 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _resumes> = $r7;

        $r8 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _expires> = $r8;

        $r9 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r9.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses1xx> = $r9;

        $r10 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses2xx> = $r10;

        $r11 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r11.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses3xx> = $r11;

        $r12 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses4xx> = $r12;

        $r13 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r13.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses5xx> = $r13;

        $r14 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r14.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicLong _responsesTotalBytes> = $r14;

        $r15 = new org.eclipse.jetty.server.handler.StatisticsHandler$1;

        specialinvoke $r15.<org.eclipse.jetty.server.handler.StatisticsHandler$1: void <init>(org.eclipse.jetty.server.handler.StatisticsHandler)>(r0);

        r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.continuation.ContinuationListener _onCompletion> = $r15;

        return;
    }

    public void statsReset()
    {
        long $l0;
        java.util.concurrent.atomic.AtomicInteger $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        java.util.concurrent.atomic.AtomicLong $r1, $r14;
        org.eclipse.jetty.util.statistic.CounterStatistic $r2, $r4, $r6;
        org.eclipse.jetty.util.statistic.SampleStatistic $r3, $r5;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicLong _statsStartedAt>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void set(long)>($l0);

        $r2 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _requestStats>;

        virtualinvoke $r2.<org.eclipse.jetty.util.statistic.CounterStatistic: void reset()>();

        $r3 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _requestTimeStats>;

        virtualinvoke $r3.<org.eclipse.jetty.util.statistic.SampleStatistic: void reset()>();

        $r4 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _dispatchedStats>;

        virtualinvoke $r4.<org.eclipse.jetty.util.statistic.CounterStatistic: void reset()>();

        $r5 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _dispatchedTimeStats>;

        virtualinvoke $r5.<org.eclipse.jetty.util.statistic.SampleStatistic: void reset()>();

        $r6 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _suspendStats>;

        virtualinvoke $r6.<org.eclipse.jetty.util.statistic.CounterStatistic: void reset()>();

        $r7 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _resumes>;

        virtualinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);

        $r8 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _expires>;

        virtualinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);

        $r9 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses1xx>;

        virtualinvoke $r9.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);

        $r10 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses2xx>;

        virtualinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);

        $r11 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses3xx>;

        virtualinvoke $r11.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);

        $r12 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses4xx>;

        virtualinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);

        $r13 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses5xx>;

        virtualinvoke $r13.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);

        $r14 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicLong _responsesTotalBytes>;

        virtualinvoke $r14.<java.util.concurrent.atomic.AtomicLong: void set(long)>(0L);

        return;
    }

    public void handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        org.eclipse.jetty.server.Request r2;
        java.util.concurrent.atomic.AtomicInteger $r12;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.eclipse.jetty.util.statistic.CounterStatistic $r1, $r4, $r8, $r10, $r13, $r15, $r17, $r19, $r21;
        java.lang.Throwable $r14;
        long $l0, l1, l2, $l3, $l4;
        javax.servlet.http.HttpServletRequest r6;
        org.eclipse.jetty.continuation.ContinuationListener $r11, $r20;
        java.lang.String r5;
        javax.servlet.http.HttpServletResponse r7;
        org.eclipse.jetty.util.statistic.SampleStatistic $r9, $r16, $r18, $r22;
        org.eclipse.jetty.server.AsyncContinuation $r3;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        r5 := @parameter0: java.lang.String;

        r2 := @parameter1: org.eclipse.jetty.server.Request;

        r6 := @parameter2: javax.servlet.http.HttpServletRequest;

        r7 := @parameter3: javax.servlet.http.HttpServletResponse;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _dispatchedStats>;

        virtualinvoke $r1.<org.eclipse.jetty.util.statistic.CounterStatistic: void increment()>();

        $r3 = virtualinvoke r2.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation getAsyncContinuation()>();

        $z0 = virtualinvoke $r3.<org.eclipse.jetty.server.AsyncContinuation: boolean isInitial()>();

        if $z0 == 0 goto label01;

        $r13 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _requestStats>;

        virtualinvoke $r13.<org.eclipse.jetty.util.statistic.CounterStatistic: void increment()>();

        l2 = virtualinvoke r2.<org.eclipse.jetty.server.Request: long getTimeStamp()>();

        goto label02;

     label01:
        l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _suspendStats>;

        virtualinvoke $r4.<org.eclipse.jetty.util.statistic.CounterStatistic: void decrement()>();

        $z1 = virtualinvoke $r3.<org.eclipse.jetty.server.AsyncContinuation: boolean isResumed()>();

        if $z1 == 0 goto label02;

        $r12 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _resumes>;

        virtualinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

     label02:
        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r5, r2, r6, r7);

     label03:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = $l3 - l2;

        $r21 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _dispatchedStats>;

        virtualinvoke $r21.<org.eclipse.jetty.util.statistic.CounterStatistic: void decrement()>();

        $r22 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _dispatchedTimeStats>;

        virtualinvoke $r22.<org.eclipse.jetty.util.statistic.SampleStatistic: void set(long)>($l4);

        $z7 = virtualinvoke $r3.<org.eclipse.jetty.server.AsyncContinuation: boolean isSuspended()>();

        if $z7 == 0 goto label05;

        $z3 = virtualinvoke $r3.<org.eclipse.jetty.server.AsyncContinuation: boolean isInitial()>();

        if $z3 == 0 goto label04;

        $r11 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.continuation.ContinuationListener _onCompletion>;

        virtualinvoke $r3.<org.eclipse.jetty.server.AsyncContinuation: void addContinuationListener(org.eclipse.jetty.continuation.ContinuationListener)>($r11);

     label04:
        $r10 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _suspendStats>;

        virtualinvoke $r10.<org.eclipse.jetty.util.statistic.CounterStatistic: void increment()>();

        goto label06;

     label05:
        $z2 = virtualinvoke $r3.<org.eclipse.jetty.server.AsyncContinuation: boolean isInitial()>();

        if $z2 == 0 goto label06;

        $r8 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _requestStats>;

        virtualinvoke $r8.<org.eclipse.jetty.util.statistic.CounterStatistic: void decrement()>();

        $r9 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _requestTimeStats>;

        virtualinvoke $r9.<org.eclipse.jetty.util.statistic.SampleStatistic: void set(long)>($l4);

        specialinvoke r0.<org.eclipse.jetty.server.handler.StatisticsHandler: void updateResponse(org.eclipse.jetty.server.Request)>(r2);

     label06:
        goto label12;

     label07:
        $r14 := @caughtexception;

     label08:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = $l0 - l2;

        $r15 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _dispatchedStats>;

        virtualinvoke $r15.<org.eclipse.jetty.util.statistic.CounterStatistic: void decrement()>();

        $r16 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _dispatchedTimeStats>;

        virtualinvoke $r16.<org.eclipse.jetty.util.statistic.SampleStatistic: void set(long)>(l1);

        $z4 = virtualinvoke $r3.<org.eclipse.jetty.server.AsyncContinuation: boolean isSuspended()>();

        if $z4 == 0 goto label10;

        $z6 = virtualinvoke $r3.<org.eclipse.jetty.server.AsyncContinuation: boolean isInitial()>();

        if $z6 == 0 goto label09;

        $r20 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.continuation.ContinuationListener _onCompletion>;

        virtualinvoke $r3.<org.eclipse.jetty.server.AsyncContinuation: void addContinuationListener(org.eclipse.jetty.continuation.ContinuationListener)>($r20);

     label09:
        $r19 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _suspendStats>;

        virtualinvoke $r19.<org.eclipse.jetty.util.statistic.CounterStatistic: void increment()>();

        goto label11;

     label10:
        $z5 = virtualinvoke $r3.<org.eclipse.jetty.server.AsyncContinuation: boolean isInitial()>();

        if $z5 == 0 goto label11;

        $r17 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _requestStats>;

        virtualinvoke $r17.<org.eclipse.jetty.util.statistic.CounterStatistic: void decrement()>();

        $r18 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _requestTimeStats>;

        virtualinvoke $r18.<org.eclipse.jetty.util.statistic.SampleStatistic: void set(long)>(l1);

        specialinvoke r0.<org.eclipse.jetty.server.handler.StatisticsHandler: void updateResponse(org.eclipse.jetty.server.Request)>(r2);

     label11:
        throw $r14;

     label12:
        return;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    private void updateResponse(org.eclipse.jetty.server.Request)
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.Response $r1;
        long $l2;
        java.util.concurrent.atomic.AtomicLong $r8;
        java.util.concurrent.atomic.AtomicInteger $r3, $r4, $r5, $r6, $r7;
        org.eclipse.jetty.server.handler.StatisticsHandler r2;
        int $i0, $i1;

        r2 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        r0 := @parameter0: org.eclipse.jetty.server.Request;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Response getResponse()>();

        $i0 = virtualinvoke $r1.<org.eclipse.jetty.server.Response: int getStatus()>();

        $i1 = $i0 / 100;

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label1:
        $r7 = r2.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses1xx>;

        virtualinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        goto label6;

     label2:
        $r6 = r2.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses2xx>;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        goto label6;

     label3:
        $r5 = r2.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses3xx>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        goto label6;

     label4:
        $r4 = r2.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses4xx>;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        goto label6;

     label5:
        $r3 = r2.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses5xx>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        goto label6;

     label6:
        $r8 = r2.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicLong _responsesTotalBytes>;

        $l2 = virtualinvoke $r1.<org.eclipse.jetty.server.Response: long getContentCount()>();

        virtualinvoke $r8.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>($l2);

        return;
    }

    protected void doStart() throws java.lang.Exception
    {
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void doStart()>();

        virtualinvoke r0.<org.eclipse.jetty.server.handler.StatisticsHandler: void statsReset()>();

        return;
    }

    public int getRequests()
    {
        org.eclipse.jetty.util.statistic.CounterStatistic $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        int $i1;
        long $l0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _requestStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.CounterStatistic: long getTotal()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public int getRequestsActive()
    {
        org.eclipse.jetty.util.statistic.CounterStatistic $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        int $i1;
        long $l0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _requestStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.CounterStatistic: long getCurrent()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public int getRequestsActiveMax()
    {
        org.eclipse.jetty.util.statistic.CounterStatistic $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        int $i1;
        long $l0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _requestStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.CounterStatistic: long getMax()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public long getRequestTimeMax()
    {
        org.eclipse.jetty.util.statistic.SampleStatistic $r1;
        long $l0;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _requestTimeStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.SampleStatistic: long getMax()>();

        return $l0;
    }

    public long getRequestTimeTotal()
    {
        org.eclipse.jetty.util.statistic.SampleStatistic $r1;
        long $l0;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _requestTimeStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.SampleStatistic: long getTotal()>();

        return $l0;
    }

    public double getRequestTimeMean()
    {
        org.eclipse.jetty.util.statistic.SampleStatistic $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        double $d0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _requestTimeStats>;

        $d0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.SampleStatistic: double getMean()>();

        return $d0;
    }

    public double getRequestTimeStdDev()
    {
        org.eclipse.jetty.util.statistic.SampleStatistic $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        double $d0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _requestTimeStats>;

        $d0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.SampleStatistic: double getStdDev()>();

        return $d0;
    }

    public int getDispatched()
    {
        org.eclipse.jetty.util.statistic.CounterStatistic $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        int $i1;
        long $l0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _dispatchedStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.CounterStatistic: long getTotal()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public int getDispatchedActive()
    {
        org.eclipse.jetty.util.statistic.CounterStatistic $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        int $i1;
        long $l0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _dispatchedStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.CounterStatistic: long getCurrent()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public int getDispatchedActiveMax()
    {
        org.eclipse.jetty.util.statistic.CounterStatistic $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        int $i1;
        long $l0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _dispatchedStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.CounterStatistic: long getMax()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public long getDispatchedTimeMax()
    {
        org.eclipse.jetty.util.statistic.SampleStatistic $r1;
        long $l0;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _dispatchedTimeStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.SampleStatistic: long getMax()>();

        return $l0;
    }

    public long getDispatchedTimeTotal()
    {
        org.eclipse.jetty.util.statistic.SampleStatistic $r1;
        long $l0;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _dispatchedTimeStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.SampleStatistic: long getTotal()>();

        return $l0;
    }

    public double getDispatchedTimeMean()
    {
        org.eclipse.jetty.util.statistic.SampleStatistic $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        double $d0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _dispatchedTimeStats>;

        $d0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.SampleStatistic: double getMean()>();

        return $d0;
    }

    public double getDispatchedTimeStdDev()
    {
        org.eclipse.jetty.util.statistic.SampleStatistic $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        double $d0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _dispatchedTimeStats>;

        $d0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.SampleStatistic: double getStdDev()>();

        return $d0;
    }

    public int getSuspends()
    {
        org.eclipse.jetty.util.statistic.CounterStatistic $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        int $i1;
        long $l0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _suspendStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.CounterStatistic: long getTotal()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public int getSuspendsActive()
    {
        org.eclipse.jetty.util.statistic.CounterStatistic $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        int $i1;
        long $l0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _suspendStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.CounterStatistic: long getCurrent()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public int getSuspendsActiveMax()
    {
        org.eclipse.jetty.util.statistic.CounterStatistic $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        int $i1;
        long $l0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _suspendStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.CounterStatistic: long getMax()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public int getResumes()
    {
        int $i0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _resumes>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public int getExpires()
    {
        int $i0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _expires>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public int getResponses1xx()
    {
        int $i0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses1xx>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public int getResponses2xx()
    {
        int $i0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses2xx>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public int getResponses3xx()
    {
        int $i0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses3xx>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public int getResponses4xx()
    {
        int $i0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses4xx>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public int getResponses5xx()
    {
        int $i0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _responses5xx>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public long getStatsOnMs()
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;
        long $l0, $l1, $l2;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicLong _statsStartedAt>;

        $l1 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $l2 = $l0 - $l1;

        return $l2;
    }

    public long getResponsesBytesTotal()
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        long $l0;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicLong _responsesTotalBytes>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public java.lang.String toStatsHTML()
    {
        org.eclipse.jetty.server.handler.StatisticsHandler r2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50;
        long $l0, $l4, $l5, $l9, $l10, $l19;
        java.lang.String $r51;
        int $i1, $i2, $i3, $i6, $i7, $i8, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        double $d0, $d1, $d2, $d3;

        r2 := @this: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<h1>Statistics:</h1>\n");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Statistics gathering started ");

        $l0 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: long getStatsOnMs()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms ago");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<h2>Requests:</h2>\n");

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total requests: ");

        $i1 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: int getRequests()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Active requests: ");

        $i2 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: int getRequestsActive()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Max active requests: ");

        $i3 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: int getRequestsActiveMax()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total requests time: ");

        $l4 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: long getRequestTimeTotal()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r13 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mean request time: ");

        $d0 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: double getRequestTimeMean()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r15 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Max request time: ");

        $l5 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: long getRequestTimeMax()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r17 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request time standard deviation: ");

        $d1 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: double getRequestTimeStdDev()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<h2>Dispatches:</h2>\n");

        $r19 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total dispatched: ");

        $i6 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: int getDispatched()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r21 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Active dispatched: ");

        $i7 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: int getDispatchedActive()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r23 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Max active dispatched: ");

        $i8 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: int getDispatchedActiveMax()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r25 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total dispatched time: ");

        $l9 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: long getDispatchedTimeTotal()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r27 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mean dispatched time: ");

        $d2 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: double getDispatchedTimeMean()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r29 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Max dispatched time: ");

        $l10 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: long getDispatchedTimeMax()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r31 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dispatched time standard deviation: ");

        $d3 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: double getDispatchedTimeStdDev()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r33 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total requests suspended: ");

        $i11 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: int getSuspends()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r35 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total requests expired: ");

        $i12 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: int getExpires()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r37 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total requests resumed: ");

        $i13 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: int getResumes()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<h2>Responses:</h2>\n");

        $r39 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1xx responses: ");

        $i14 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: int getResponses1xx()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r41 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("2xx responses: ");

        $i15 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: int getResponses2xx()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r43 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("3xx responses: ");

        $i16 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: int getResponses3xx()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r45 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("4xx responses: ");

        $i17 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: int getResponses4xx()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r47 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("5xx responses: ");

        $i18 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: int getResponses5xx()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r49 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bytes sent total: ");

        $l19 = virtualinvoke r2.<org.eclipse.jetty.server.handler.StatisticsHandler: long getResponsesBytesTotal()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l19);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br />\n");

        $r51 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r51;
    }

    static org.eclipse.jetty.util.statistic.CounterStatistic access$000(org.eclipse.jetty.server.handler.StatisticsHandler)
    {
        org.eclipse.jetty.util.statistic.CounterStatistic $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @parameter0: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _requestStats>;

        return $r1;
    }

    static org.eclipse.jetty.util.statistic.SampleStatistic access$100(org.eclipse.jetty.server.handler.StatisticsHandler)
    {
        org.eclipse.jetty.util.statistic.SampleStatistic $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @parameter0: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.SampleStatistic _requestTimeStats>;

        return $r1;
    }

    static void access$200(org.eclipse.jetty.server.handler.StatisticsHandler, org.eclipse.jetty.server.Request)
    {
        org.eclipse.jetty.server.Request r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @parameter0: org.eclipse.jetty.server.handler.StatisticsHandler;

        r1 := @parameter1: org.eclipse.jetty.server.Request;

        specialinvoke r0.<org.eclipse.jetty.server.handler.StatisticsHandler: void updateResponse(org.eclipse.jetty.server.Request)>(r1);

        return;
    }

    static org.eclipse.jetty.util.statistic.CounterStatistic access$300(org.eclipse.jetty.server.handler.StatisticsHandler)
    {
        org.eclipse.jetty.util.statistic.CounterStatistic $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @parameter0: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: org.eclipse.jetty.util.statistic.CounterStatistic _suspendStats>;

        return $r1;
    }

    static java.util.concurrent.atomic.AtomicInteger access$400(org.eclipse.jetty.server.handler.StatisticsHandler)
    {
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.eclipse.jetty.server.handler.StatisticsHandler r0;

        r0 := @parameter0: org.eclipse.jetty.server.handler.StatisticsHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.StatisticsHandler: java.util.concurrent.atomic.AtomicInteger _expires>;

        return $r1;
    }
}
