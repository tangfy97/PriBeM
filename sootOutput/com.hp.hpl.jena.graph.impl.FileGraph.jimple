public class com.hp.hpl.jena.graph.impl.FileGraph extends com.hp.hpl.jena.mem.GraphMem
{
    public final java.io.File name;
    protected final com.hp.hpl.jena.rdf.model.Model model;
    public final java.lang.String lang;
    protected final com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose notify;
    protected com.hp.hpl.jena.graph.TransactionHandler th;

    public void <init>(java.io.File, boolean, boolean)
    {
        com.hp.hpl.jena.graph.impl.FileGraph r0;
        com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose $r2;
        java.io.File r1;
        boolean z0, z1;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraph;

        r1 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r2 = <com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose: com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose ignore>;

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.FileGraph: void <init>(com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose,java.io.File,boolean,boolean)>($r2, r1, z0, z1);

        return;
    }

    public void <init>(com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose, java.io.File, boolean, boolean)
    {
        com.hp.hpl.jena.graph.impl.FileGraph r0;
        com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose r1;
        java.lang.String $r3, $r4;
        java.io.File r2;
        boolean z0, z1;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraph;

        r1 := @parameter0: com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose;

        r2 := @parameter1: java.io.File;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r3 = virtualinvoke r2.<java.io.File: java.lang.String toString()>();

        $r4 = staticinvoke <com.hp.hpl.jena.util.FileUtils: java.lang.String guessLang(java.lang.String)>($r3);

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.FileGraph: void <init>(com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose,java.io.File,java.lang.String,boolean,boolean)>(r1, r2, $r4, z0, z1);

        return;
    }

    public void <init>(com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose, java.io.File, java.lang.String, boolean, boolean)
    {
        com.hp.hpl.jena.graph.impl.FileGraph r0;
        com.hp.hpl.jena.shared.AlreadyExistsException $r6;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r3;
        java.io.File r1;
        com.hp.hpl.jena.rdf.model.Model $r5;
        com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose r2;
        java.lang.String r4, $r7;
        boolean z0, z1, $z2;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraph;

        r2 := @parameter0: com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose;

        r1 := @parameter1: java.io.File;

        r4 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<com.hp.hpl.jena.mem.GraphMem: void <init>()>();

        r0.<com.hp.hpl.jena.graph.impl.FileGraph: java.io.File name> = r1;

        r0.<com.hp.hpl.jena.graph.impl.FileGraph: com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose notify> = r2;

        $r3 = new com.hp.hpl.jena.rdf.model.impl.ModelCom;

        specialinvoke $r3.<com.hp.hpl.jena.rdf.model.impl.ModelCom: void <init>(com.hp.hpl.jena.graph.Graph)>(r0);

        r0.<com.hp.hpl.jena.graph.impl.FileGraph: com.hp.hpl.jena.rdf.model.Model model> = $r3;

        r0.<com.hp.hpl.jena.graph.impl.FileGraph: java.lang.String lang> = r4;

        if z0 == 0 goto label1;

        $z2 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label2;

        if z1 == 0 goto label2;

        $r6 = new com.hp.hpl.jena.shared.AlreadyExistsException;

        $r7 = virtualinvoke r1.<java.io.File: java.lang.String toString()>();

        specialinvoke $r6.<com.hp.hpl.jena.shared.AlreadyExistsException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label1:
        $r5 = r0.<com.hp.hpl.jena.graph.impl.FileGraph: com.hp.hpl.jena.rdf.model.Model model>;

        virtualinvoke r0.<com.hp.hpl.jena.graph.impl.FileGraph: void readModel(com.hp.hpl.jena.rdf.model.Model,boolean)>($r5, z1);

     label2:
        return;
    }

    protected void readModel(com.hp.hpl.jena.rdf.model.Model, boolean)
    {
        com.hp.hpl.jena.graph.impl.FileGraph r0;
        com.hp.hpl.jena.rdf.model.Model r1;
        java.io.File $r2;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraph;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.FileGraph: java.io.File name>;

        virtualinvoke r0.<com.hp.hpl.jena.graph.impl.FileGraph: void readModelFrom(com.hp.hpl.jena.rdf.model.Model,boolean,java.io.File)>(r1, z0, $r2);

        return;
    }

    protected void readModelFrom(com.hp.hpl.jena.rdf.model.Model, boolean, java.io.File)
    {
        java.lang.Throwable $r6;
        com.hp.hpl.jena.graph.impl.FileGraph r2;
        com.hp.hpl.jena.shared.DoesNotExistException $r9;
        java.io.IOException $r5, $r7, $r11;
        java.io.FileInputStream $r0, r13;
        java.io.File r1;
        java.io.FileNotFoundException $r8;
        com.hp.hpl.jena.rdf.model.Model $r4, r12;
        java.lang.String $r3, $r10;
        boolean z0;

        r2 := @this: com.hp.hpl.jena.graph.impl.FileGraph;

        r12 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.io.File;

        r13 = null;

     label01:
        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        r13 = $r0;

        $r4 = r2.<com.hp.hpl.jena.graph.impl.FileGraph: com.hp.hpl.jena.rdf.model.Model model>;

        $r3 = r2.<com.hp.hpl.jena.graph.impl.FileGraph: java.lang.String lang>;

        interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)>($r0, "", $r3);

     label02:
        if $r0 == null goto label17;

     label03:
        virtualinvoke $r0.<java.io.FileInputStream: void close()>();

     label04:
        goto label17;

     label05:
        $r11 := @caughtexception;

        goto label17;

     label06:
        $r8 := @caughtexception;

        if z0 == 0 goto label07;

        $r9 = new com.hp.hpl.jena.shared.DoesNotExistException;

        $r10 = virtualinvoke r1.<java.io.File: java.lang.String toString()>();

        specialinvoke $r9.<com.hp.hpl.jena.shared.DoesNotExistException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label07:
        if r13 == null goto label17;

     label08:
        virtualinvoke r13.<java.io.FileInputStream: void close()>();

     label09:
        goto label17;

     label10:
        $r7 := @caughtexception;

        goto label17;

     label11:
        $r6 := @caughtexception;

     label12:
        if r13 == null goto label16;

     label13:
        virtualinvoke r13.<java.io.FileInputStream: void close()>();

     label14:
        goto label16;

     label15:
        $r5 := @caughtexception;

     label16:
        throw $r6;

     label17:
        return;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.io.FileNotFoundException from label01 to label02 with label06;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void <init>(java.lang.String, boolean)
    {
        com.hp.hpl.jena.graph.impl.FileGraph r0;
        java.lang.String r2;
        java.io.File $r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraph;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r2);

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.FileGraph: void <init>(java.io.File,boolean,boolean)>($r1, z0, 1);

        return;
    }

    public static com.hp.hpl.jena.graph.impl.FileGraph create()
    {
        com.hp.hpl.jena.graph.impl.FileGraph $r0;
        java.io.File $r1;

        $r0 = new com.hp.hpl.jena.graph.impl.FileGraph;

        $r1 = staticinvoke <com.hp.hpl.jena.util.FileUtils: java.io.File tempFileName(java.lang.String,java.lang.String)>("anonymousFileGraph", ".rdf");

        specialinvoke $r0.<com.hp.hpl.jena.graph.impl.FileGraph: void <init>(java.io.File,boolean,boolean)>($r1, 1, 1);

        return $r0;
    }

    public static boolean isPlausibleGraphName(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.util.FileUtils: java.lang.String guessLang(java.lang.String,java.lang.String)>(r0, null);

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void close()
    {
        com.hp.hpl.jena.graph.impl.FileGraph r0;
        int $i0;
        com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose $r3;
        java.io.File $r1, $r2;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraph;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.FileGraph: java.io.File name>;

        virtualinvoke r0.<com.hp.hpl.jena.graph.impl.FileGraph: void saveContents(java.io.File)>($r1);

        specialinvoke r0.<com.hp.hpl.jena.mem.GraphMem: void close()>();

        $i0 = r0.<com.hp.hpl.jena.graph.impl.FileGraph: int count>;

        if $i0 != 0 goto label1;

        $r3 = r0.<com.hp.hpl.jena.graph.impl.FileGraph: com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose notify>;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.FileGraph: java.io.File name>;

        interfaceinvoke $r3.<com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose: void notifyClosed(java.io.File)>($r2);

     label1:
        return;
    }

    public void delete()
    {
        com.hp.hpl.jena.graph.impl.FileGraph r0;
        java.io.File $r1;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraph;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.FileGraph: java.io.File name>;

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        return;
    }

    protected void saveContents(java.io.File)
    {
        com.hp.hpl.jena.graph.impl.FileGraph r8;
        com.hp.hpl.jena.shared.JenaException $r12;
        java.io.FileOutputStream $r7;
        java.io.File $r0, r2;
        java.lang.Exception $r11;
        com.hp.hpl.jena.rdf.model.Model $r10;
        java.lang.StringBuilder $r1, $r4, $r5;
        java.lang.String $r3, $r6, $r9;

        r8 := @this: com.hp.hpl.jena.graph.impl.FileGraph;

        r2 := @parameter0: java.io.File;

     label1:
        $r0 = new java.io.File;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".new");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r6);

        $r7 = new java.io.FileOutputStream;

        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>($r0);

        $r10 = r8.<com.hp.hpl.jena.graph.impl.FileGraph: com.hp.hpl.jena.rdf.model.Model model>;

        $r9 = r8.<com.hp.hpl.jena.graph.impl.FileGraph: java.lang.String lang>;

        interfaceinvoke $r10.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String)>($r7, $r9);

        virtualinvoke $r7.<java.io.FileOutputStream: void close()>();

        virtualinvoke r8.<com.hp.hpl.jena.graph.impl.FileGraph: void updateFrom(java.io.File,java.io.File)>(r2, $r0);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = new com.hp.hpl.jena.shared.JenaException;

        specialinvoke $r12.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.Throwable)>($r11);

        throw $r12;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void updateFrom(java.io.File, java.io.File)
    {
        com.hp.hpl.jena.graph.impl.FileGraph r2;
        java.io.File r0, r1;
        boolean $z0, $z1;

        r2 := @this: com.hp.hpl.jena.graph.impl.FileGraph;

        r1 := @parameter0: java.io.File;

        r0 := @parameter1: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean renameTo(java.io.File)>(r1);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label1;

        virtualinvoke r2.<com.hp.hpl.jena.graph.impl.FileGraph: void mustDelete(java.io.File)>(r1);

     label1:
        virtualinvoke r2.<com.hp.hpl.jena.graph.impl.FileGraph: void mustRename(java.io.File,java.io.File)>(r0, r1);

     label2:
        return;
    }

    protected void mustDelete(java.io.File)
    {
        com.hp.hpl.jena.graph.impl.FileGraph r6;
        com.hp.hpl.jena.shared.JenaException $r1;
        java.io.File r0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        boolean $z0;

        r6 := @this: com.hp.hpl.jena.graph.impl.FileGraph;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label1;

        $r1 = new com.hp.hpl.jena.shared.JenaException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not delete ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        return;
    }

    protected void mustRename(java.io.File, java.io.File)
    {
        com.hp.hpl.jena.graph.impl.FileGraph r9;
        com.hp.hpl.jena.shared.JenaException $r2;
        java.io.File r0, r1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        boolean $z0;

        r9 := @this: com.hp.hpl.jena.graph.impl.FileGraph;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean renameTo(java.io.File)>(r1);

        if $z0 != 0 goto label1;

        $r2 = new com.hp.hpl.jena.shared.JenaException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not rename ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label1:
        return;
    }

    public com.hp.hpl.jena.graph.TransactionHandler getTransactionHandler()
    {
        com.hp.hpl.jena.graph.impl.FileGraph r0;
        com.hp.hpl.jena.graph.TransactionHandler $r1, $r2;
        com.hp.hpl.jena.graph.impl.FileGraphTransactionHandler $r3;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraph;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.FileGraph: com.hp.hpl.jena.graph.TransactionHandler th>;

        if $r1 != null goto label1;

        $r3 = new com.hp.hpl.jena.graph.impl.FileGraphTransactionHandler;

        specialinvoke $r3.<com.hp.hpl.jena.graph.impl.FileGraphTransactionHandler: void <init>(com.hp.hpl.jena.graph.impl.FileGraph)>(r0);

        r0.<com.hp.hpl.jena.graph.impl.FileGraph: com.hp.hpl.jena.graph.TransactionHandler th> = $r3;

     label1:
        $r2 = r0.<com.hp.hpl.jena.graph.impl.FileGraph: com.hp.hpl.jena.graph.TransactionHandler th>;

        return $r2;
    }
}
