public class com.googlecode.mp4parser.AbstractContainerBox extends com.googlecode.mp4parser.BasicContainer implements com.coremedia.iso.boxes.Box
{
    com.coremedia.iso.boxes.Container parent;
    protected java.lang.String type;
    java.nio.ByteBuffer header;
    protected boolean largeBox;
    private long offset;

    public void <init>(java.lang.String)
    {
        com.googlecode.mp4parser.AbstractContainerBox r0;
        java.lang.String r1;

        r0 := @this: com.googlecode.mp4parser.AbstractContainerBox;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.googlecode.mp4parser.BasicContainer: void <init>()>();

        r0.<com.googlecode.mp4parser.AbstractContainerBox: java.lang.String type> = r1;

        return;
    }

    public com.coremedia.iso.boxes.Container getParent()
    {
        com.googlecode.mp4parser.AbstractContainerBox r0;
        com.coremedia.iso.boxes.Container $r1;

        r0 := @this: com.googlecode.mp4parser.AbstractContainerBox;

        $r1 = r0.<com.googlecode.mp4parser.AbstractContainerBox: com.coremedia.iso.boxes.Container parent>;

        return $r1;
    }

    public long getOffset()
    {
        com.googlecode.mp4parser.AbstractContainerBox r0;
        long $l0;

        r0 := @this: com.googlecode.mp4parser.AbstractContainerBox;

        $l0 = r0.<com.googlecode.mp4parser.AbstractContainerBox: long offset>;

        return $l0;
    }

    public void setParent(com.coremedia.iso.boxes.Container)
    {
        com.googlecode.mp4parser.AbstractContainerBox r0;
        com.coremedia.iso.boxes.Container r1;

        r0 := @this: com.googlecode.mp4parser.AbstractContainerBox;

        r1 := @parameter0: com.coremedia.iso.boxes.Container;

        r0.<com.googlecode.mp4parser.AbstractContainerBox: com.coremedia.iso.boxes.Container parent> = r1;

        return;
    }

    public long getSize()
    {
        long $l0, $l1, $l2, $l3;
        com.googlecode.mp4parser.AbstractContainerBox r0;
        byte $b4, $b5;
        int $i6;
        boolean $z0;

        r0 := @this: com.googlecode.mp4parser.AbstractContainerBox;

        $l0 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractContainerBox: long getContainerSize()>();

        $z0 = r0.<com.googlecode.mp4parser.AbstractContainerBox: boolean largeBox>;

        if $z0 != 0 goto label1;

        $l3 = $l0 + 8L;

        $b4 = $l3 cmp 4294967296L;

        $i6 = (int) $b4;

        if $i6 < 0 goto label2;

     label1:
        $b5 = 16;

        goto label3;

     label2:
        $b5 = 8;

     label3:
        $l1 = (long) $b5;

        $l2 = $l0 + $l1;

        return $l2;
    }

    public java.lang.String getType()
    {
        com.googlecode.mp4parser.AbstractContainerBox r0;
        java.lang.String $r1;

        r0 := @this: com.googlecode.mp4parser.AbstractContainerBox;

        $r1 = r0.<com.googlecode.mp4parser.AbstractContainerBox: java.lang.String type>;

        return $r1;
    }

    protected java.nio.ByteBuffer getHeader()
    {
        byte[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        java.nio.ByteBuffer $r10, $r20, r21;
        byte $b0, $b1, $b2, $b3, $b6, $b7, $b8, $b9, $b10;
        boolean $z0;
        com.googlecode.mp4parser.AbstractContainerBox r0;
        long $l4, $l5, $l11;
        int $i12;
        java.lang.String $r2, $r4, $r6, $r8, $r12, $r14, $r16, $r18;

        r0 := @this: com.googlecode.mp4parser.AbstractContainerBox;

        $z0 = r0.<com.googlecode.mp4parser.AbstractContainerBox: boolean largeBox>;

        if $z0 != 0 goto label1;

        $l5 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractContainerBox: long getSize()>();

        $b6 = $l5 cmp 4294967296L;

        $i12 = (int) $b6;

        if $i12 < 0 goto label2;

     label1:
        $r1 = newarray (byte)[16];

        $r1[3] = 1;

        $r2 = r0.<com.googlecode.mp4parser.AbstractContainerBox: java.lang.String type>;

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $b0 = $r3[0];

        $r1[4] = $b0;

        $r4 = r0.<com.googlecode.mp4parser.AbstractContainerBox: java.lang.String type>;

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        $b1 = $r5[1];

        $r1[5] = $b1;

        $r6 = r0.<com.googlecode.mp4parser.AbstractContainerBox: java.lang.String type>;

        $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>();

        $b2 = $r7[2];

        $r1[6] = $b2;

        $r8 = r0.<com.googlecode.mp4parser.AbstractContainerBox: java.lang.String type>;

        $r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes()>();

        $b3 = $r9[3];

        $r1[7] = $b3;

        $r10 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r1);

        r21 = $r10;

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(8);

        $l4 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractContainerBox: long getSize()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt64(java.nio.ByteBuffer,long)>($r10, $l4);

        goto label3;

     label2:
        $r11 = newarray (byte)[8];

        $r12 = r0.<com.googlecode.mp4parser.AbstractContainerBox: java.lang.String type>;

        $r13 = virtualinvoke $r12.<java.lang.String: byte[] getBytes()>();

        $b7 = $r13[0];

        $r11[4] = $b7;

        $r14 = r0.<com.googlecode.mp4parser.AbstractContainerBox: java.lang.String type>;

        $r15 = virtualinvoke $r14.<java.lang.String: byte[] getBytes()>();

        $b8 = $r15[1];

        $r11[5] = $b8;

        $r16 = r0.<com.googlecode.mp4parser.AbstractContainerBox: java.lang.String type>;

        $r17 = virtualinvoke $r16.<java.lang.String: byte[] getBytes()>();

        $b9 = $r17[2];

        $r11[6] = $b9;

        $r18 = r0.<com.googlecode.mp4parser.AbstractContainerBox: java.lang.String type>;

        $r19 = virtualinvoke $r18.<java.lang.String: byte[] getBytes()>();

        $b10 = $r19[3];

        $r11[7] = $b10;

        $r20 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r11);

        r21 = $r20;

        $l11 = virtualinvoke r0.<com.googlecode.mp4parser.AbstractContainerBox: long getSize()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>($r20, $l11);

     label3:
        virtualinvoke r21.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        return r21;
    }

    public void parse(com.googlecode.mp4parser.DataSource, java.nio.ByteBuffer, long, com.coremedia.iso.BoxParser) throws java.io.IOException
    {
        com.googlecode.mp4parser.DataSource r1;
        long $l0, $l2, $l3, l5;
        java.nio.ByteBuffer r2;
        com.googlecode.mp4parser.AbstractContainerBox r0;
        com.coremedia.iso.BoxParser r3;
        int $i1, $i4;
        boolean $z0;

        r0 := @this: com.googlecode.mp4parser.AbstractContainerBox;

        r1 := @parameter0: com.googlecode.mp4parser.DataSource;

        r2 := @parameter1: java.nio.ByteBuffer;

        l5 := @parameter2: long;

        r3 := @parameter3: com.coremedia.iso.BoxParser;

        $l0 = interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: long position()>();

        $i1 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();

        $l2 = (long) $i1;

        $l3 = $l0 - $l2;

        r0.<com.googlecode.mp4parser.AbstractContainerBox: long offset> = $l3;

        $i4 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();

        if $i4 != 16 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<com.googlecode.mp4parser.AbstractContainerBox: boolean largeBox> = $z0;

        virtualinvoke r0.<com.googlecode.mp4parser.AbstractContainerBox: void parseContainer(com.googlecode.mp4parser.DataSource,long,com.coremedia.iso.BoxParser)>(r1, l5, r3);

        return;
    }

    public void getBox(java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        com.googlecode.mp4parser.AbstractContainerBox r1;
        java.nio.channels.WritableByteChannel r0;
        java.nio.ByteBuffer $r2;

        r1 := @this: com.googlecode.mp4parser.AbstractContainerBox;

        r0 := @parameter0: java.nio.channels.WritableByteChannel;

        $r2 = virtualinvoke r1.<com.googlecode.mp4parser.AbstractContainerBox: java.nio.ByteBuffer getHeader()>();

        interfaceinvoke r0.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r2);

        virtualinvoke r1.<com.googlecode.mp4parser.AbstractContainerBox: void writeContainer(java.nio.channels.WritableByteChannel)>(r0);

        return;
    }
}
