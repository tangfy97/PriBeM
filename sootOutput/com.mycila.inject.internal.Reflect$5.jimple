final class com.mycila.inject.internal.Reflect$5 extends java.lang.Object implements com.mycila.inject.internal.guava.base.Predicate
{
    final java.lang.Class val$annotationType;

    void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        com.mycila.inject.internal.Reflect$5 r0;

        r0 := @this: com.mycila.inject.internal.Reflect$5;

        r1 := @parameter0: java.lang.Class;

        r0.<com.mycila.inject.internal.Reflect$5: java.lang.Class val$annotationType> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean apply(java.lang.reflect.AnnotatedElement)
    {
        java.lang.Class $r2;
        com.mycila.inject.internal.Reflect$5 r1;
        java.lang.reflect.AnnotatedElement r0;
        boolean $z0;

        r1 := @this: com.mycila.inject.internal.Reflect$5;

        r0 := @parameter0: java.lang.reflect.AnnotatedElement;

        $r2 = r1.<com.mycila.inject.internal.Reflect$5: java.lang.Class val$annotationType>;

        $z0 = interfaceinvoke r0.<java.lang.reflect.AnnotatedElement: boolean isAnnotationPresent(java.lang.Class)>($r2);

        return $z0;
    }

    public volatile boolean apply(java.lang.Object)
    {
        java.lang.Object r1;
        com.mycila.inject.internal.Reflect$5 r0;
        java.lang.reflect.AnnotatedElement $r2;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.Reflect$5;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.reflect.AnnotatedElement) r1;

        $z0 = virtualinvoke r0.<com.mycila.inject.internal.Reflect$5: boolean apply(java.lang.reflect.AnnotatedElement)>($r2);

        return $z0;
    }
}
