public class org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter extends java.lang.Object implements org.codehaus.jackson.map.introspect.MethodFilter
{

    private void <init>()
    {
        org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter r0;

        r0 := @this: org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean includeMethod(java.lang.reflect.Method)
    {
        org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter r1;
        java.lang.reflect.Method r0;
        boolean $z0;

        r1 := @this: org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter;

        r0 := @parameter0: java.lang.reflect.Method;

        $z0 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: boolean hasGetterSignature(java.lang.reflect.Method)>(r0);

        return $z0;
    }

    void <init>(org.codehaus.jackson.map.introspect.BasicClassIntrospector$1)
    {
        org.codehaus.jackson.map.introspect.BasicClassIntrospector$1 r1;
        org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter r0;

        r0 := @this: org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.BasicClassIntrospector$1;

        specialinvoke r0.<org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter: void <init>()>();

        return;
    }
}
