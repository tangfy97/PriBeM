public class ucar.nc2.iosp.mcidas.McIDASGridReader extends java.lang.Object
{
    protected ucar.unidata.io.RandomAccessFile rf;
    private java.lang.String errorMessage;
    private ucar.grid.GridIndex gridIndex;
    protected boolean needToSwap;
    private java.util.HashMap gdsMap;
    private static final int MAX_GRIDS;

    public void <init>()
    {
        ucar.nc2.iosp.mcidas.McIDASGridReader r0;
        java.util.HashMap $r1;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: boolean needToSwap> = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: java.util.HashMap gdsMap> = $r1;

        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        ucar.nc2.iosp.mcidas.McIDASGridReader r0;
        ucar.unidata.io.RandomAccessFile $r1;
        java.lang.String r2;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridReader;

        r2 := @parameter0: java.lang.String;

        $r1 = new ucar.unidata.io.RandomAccessFile;

        specialinvoke $r1.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String,int)>(r2, "r", 2048);

        specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: void <init>(ucar.unidata.io.RandomAccessFile)>($r1);

        return;
    }

    public void <init>(ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        ucar.nc2.iosp.mcidas.McIDASGridReader r0;
        java.util.HashMap $r1;
        ucar.unidata.io.RandomAccessFile r2;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridReader;

        r2 := @parameter0: ucar.unidata.io.RandomAccessFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: boolean needToSwap> = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: java.util.HashMap gdsMap> = $r1;

        virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: void init(ucar.unidata.io.RandomAccessFile)>(r2);

        return;
    }

    public final void init(ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        ucar.nc2.iosp.mcidas.McIDASGridReader r0;
        ucar.unidata.io.RandomAccessFile r1;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridReader;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: void init(ucar.unidata.io.RandomAccessFile,boolean)>(r1, 1);

        return;
    }

    public final void init(ucar.unidata.io.RandomAccessFile, boolean) throws java.io.IOException
    {
        ucar.nc2.iosp.mcidas.McIDASGridReader r0;
        ucar.unidata.io.RandomAccessFile r1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        boolean z0, $z1;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridReader;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        z0 := @parameter1: boolean;

        r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf> = r1;

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: void order(int)>(0);

        $z1 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: boolean init(boolean)>(z0);

        if $z1 != 0 goto label1;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open McIDAS Grid file: ");

        $r5 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: java.lang.String errorMessage>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        return;
    }

    protected boolean init() throws java.io.IOException
    {
        ucar.nc2.iosp.mcidas.McIDASGridReader r0;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridReader;

        $z0 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: boolean init(boolean)>(1);

        return $z0;
    }

    protected boolean init(boolean) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1, $r3, $r5, $r6, $r7, $r10, $r14, $r15;
        int[] r9, r13;
        boolean z0, $z1, $z2;
        java.util.List $r12;
        java.lang.StringBuilder $r26, $r27, $r28, $r29, $r34;
        java.lang.Throwable $r32;
        long $l8;
        java.util.HashMap $r18, $r22;
        ucar.nc2.iosp.mcidas.McGridDefRecord $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, $i23, $i25;
        java.lang.String $r4, $r8, $r19, $r23, $r30, $r31;
        ucar.nc2.iosp.mcidas.McIDASGridReader r0;
        ucar.nc2.iosp.mcidas.McIDASGridRecord $r35;
        java.lang.Object $r20;
        ucar.grid.GridIndex $r11, $r17, $r24, $r33;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridReader;

        z0 := @parameter0: boolean;

        $r1 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        if $r1 != null goto label01;

        specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: void logError(java.lang.String)>("File is null");

        return 0;

     label01:
        $r33 = new ucar.grid.GridIndex;

        $r3 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        $r4 = virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        specialinvoke $r33.<ucar.grid.GridIndex: void <init>(java.lang.String)>($r4);

        r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.grid.GridIndex gridIndex> = $r33;

        $r5 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: void order(int)>(0);

        $i0 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: int readInt(int)>(10);

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        i18 = $i1;

        if $i1 <= 1000000 goto label02;

        r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: boolean needToSwap> = 1;

        $i17 = staticinvoke <edu.wisc.ssec.mcidas.McIDASUtil: int swbyt4(int)>($i1);

        i18 = staticinvoke <java.lang.Math: int abs(int)>($i17);

     label02:
        if i18 <= 999999 goto label03;

        return 0;

     label03:
        $r6 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        virtualinvoke $r6.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

        $r7 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        $r8 = virtualinvoke $r7.<ucar.unidata.io.RandomAccessFile: java.lang.String readString(int)>(32);

        $i2 = virtualinvoke $r8.<java.lang.String: int indexOf(java.lang.String)>("GEMPAK DATA MANAGEMENT FILE");

        if $i2 < 0 goto label04;

        specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: void logError(java.lang.String)>("label indicates this is a GEMPAK grid");

        return 0;

     label04:
        i19 = 0;

     label05:
        $i3 = virtualinvoke $r8.<java.lang.String: int length()>();

        if i19 >= $i3 goto label08;

        $i14 = i19 + 1;

        $r31 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(i19, $i14);

        $i15 = virtualinvoke $r31.<java.lang.String: int compareTo(java.lang.String)>(" ");

        if 0 > $i15 goto label06;

        $i16 = virtualinvoke $r31.<java.lang.String: int compareTo(java.lang.String)>("~");

        if $i16 <= 0 goto label07;

     label06:
        specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: void logError(java.lang.String)>("bad label, not a McIDAS grid");

        return 0;

     label07:
        i19 = i19 + 1;

        goto label05;

     label08:
        virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: int readInt(int)>(8);

        $i4 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: int readInt(int)>(9);

        if $i4 < 10000 goto label09;

        if $i4 <= 400000 goto label10;

     label09:
        specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: void logError(java.lang.String)>("date wrong, not a McIDAS grid");

        return 0;

     label10:
        r9 = newarray (int)[i18];

        i20 = 0;

     label11:
        if i20 >= i18 goto label13;

        $i10 = i20 + 11;

        $i11 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: int readInt(int)>($i10);

        r9[i20] = $i11;

        $i12 = r9[i20];

        $i23 = (int) -1;

        if $i12 >= $i23 goto label12;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad grid offset ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $i13 = r9[i20];

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: void logError(java.lang.String)>($r30);

        return 0;

     label12:
        i20 = i20 + 1;

        goto label11;

     label13:
        if z0 != 0 goto label14;

        return 1;

     label14:
        $r10 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        virtualinvoke $r10.<ucar.unidata.io.RandomAccessFile: void order(int)>(0);

        i21 = 0;

     label15:
        if i21 >= i18 goto label21;

        $i5 = r9[i21];

        $i25 = (int) -1;

        if $i5 != $i25 goto label16;

        goto label20;

     label16:
        r13 = newarray (int)[64];

        $r14 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        $i6 = r9[i21];

        $i7 = $i6 * 4;

        $l8 = (long) $i7;

        virtualinvoke $r14.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l8);

        $r15 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        virtualinvoke $r15.<ucar.unidata.io.RandomAccessFile: void readInt(int[],int,int)>(r13, 0, 64);

        $z2 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: boolean needToSwap>;

        if $z2 == 0 goto label17;

        specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: void swapGridHeader(int[])>(r13);

     label17:
        $r35 = new ucar.nc2.iosp.mcidas.McIDASGridRecord;

        $i9 = r9[i21];

        specialinvoke $r35.<ucar.nc2.iosp.mcidas.McIDASGridRecord: void <init>(int,int[])>($i9, r13);

        $r17 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.grid.GridIndex gridIndex>;

        virtualinvoke $r17.<ucar.grid.GridIndex: void addGridRecord(ucar.grid.GridRecord)>($r35);

        $r18 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: java.util.HashMap gdsMap>;

        $r19 = virtualinvoke $r35.<ucar.nc2.iosp.mcidas.McIDASGridRecord: java.lang.String getGridDefRecordId()>();

        $r20 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r19);

        if $r20 != null goto label18;

        $r21 = virtualinvoke $r35.<ucar.nc2.iosp.mcidas.McIDASGridRecord: ucar.nc2.iosp.mcidas.McGridDefRecord getGridDefRecord()>();

        $r22 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: java.util.HashMap gdsMap>;

        $r23 = virtualinvoke $r21.<ucar.nc2.iosp.mcidas.McGridDefRecord: java.lang.String toString()>();

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r21);

        $r24 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.grid.GridIndex gridIndex>;

        virtualinvoke $r24.<ucar.grid.GridIndex: void addHorizCoordSys(ucar.grid.GridDefRecord)>($r21);

     label18:
        goto label20;

     label19:
        $r32 := @caughtexception;

        specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: void logError(java.lang.String)>("problem creating grid dir");

        return 0;

     label20:
        i21 = i21 + 1;

        goto label15;

     label21:
        $r11 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.grid.GridIndex gridIndex>;

        $r12 = virtualinvoke $r11.<ucar.grid.GridIndex: java.util.List getGridRecords()>();

        $z1 = interfaceinvoke $r12.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label22;

        specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: void logError(java.lang.String)>("no grids found");

        return 0;

     label22:
        return 1;

        catch edu.wisc.ssec.mcidas.McIDASException from label17 to label18 with label19;
    }

    private void swapGridHeader(int[])
    {
        ucar.nc2.iosp.mcidas.McIDASGridReader r1;
        int[] r0;

        r1 := @this: ucar.nc2.iosp.mcidas.McIDASGridReader;

        r0 := @parameter0: int[];

        staticinvoke <edu.wisc.ssec.mcidas.McIDASUtil: void flip(int[],int,int)>(r0, 0, 5);

        staticinvoke <edu.wisc.ssec.mcidas.McIDASUtil: void flip(int[],int,int)>(r0, 7, 7);

        staticinvoke <edu.wisc.ssec.mcidas.McIDASUtil: void flip(int[],int,int)>(r0, 9, 10);

        staticinvoke <edu.wisc.ssec.mcidas.McIDASUtil: void flip(int[],int,int)>(r0, 12, 14);

        staticinvoke <edu.wisc.ssec.mcidas.McIDASUtil: void flip(int[],int,int)>(r0, 32, 51);

        return;
    }

    public float[] readGrid(ucar.nc2.iosp.mcidas.McIDASGridRecord)
    {
        ucar.unidata.io.RandomAccessFile $r2, $r3, $r4, $r5;
        long $l4;
        float[] $r6, r9;
        byte $b12;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, i11, i13, i14;
        double $d0;
        boolean $z0;
        ucar.nc2.iosp.mcidas.McIDASGridReader r1;
        java.io.PrintStream $r8;
        java.lang.Exception $r7;
        ucar.nc2.iosp.mcidas.McIDASGridRecord r0;
        float f0, $f1, $f2;

        r1 := @this: ucar.nc2.iosp.mcidas.McIDASGridReader;

        r0 := @parameter0: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        r9 = null;

     label01:
        $i0 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: int getOffsetToHeader()>();

        $i1 = $i0 + 64;

        i11 = $i1 * 4;

        $i2 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: int getRows()>();

        $i3 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: int getColumns()>();

        $r2 = r1.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        $l4 = (long) i11;

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l4);

        $d0 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASGridRecord: double getParamScale()>();

        f0 = (float) $d0;

        $i5 = $i2 * $i3;

        r9 = newarray (float)[$i5];

        $r3 = r1.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        $z0 = r1.<ucar.nc2.iosp.mcidas.McIDASGridReader: boolean needToSwap>;

        if $z0 == 0 goto label02;

        $b12 = 1;

        goto label03;

     label02:
        $b12 = 0;

     label03:
        virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: void order(int)>($b12);

        i13 = 0;

     label04:
        if i13 >= $i3 goto label09;

        i14 = 0;

     label05:
        if i14 >= $i2 goto label08;

        $r5 = r1.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        $i6 = virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        $r6 = r9;

        $i7 = $i2 - i14;

        $i8 = $i7 - 1;

        $i9 = $i8 * $i3;

        $i10 = $i9 + i13;

        if $i6 != -2139062144 goto label06;

        $f2 = #NaNF;

        goto label07;

     label06:
        $f1 = (float) $i6;

        $f2 = $f1 / f0;

     label07:
        $r6[$i10] = $f2;

        i14 = i14 + 1;

        goto label05;

     label08:
        i13 = i13 + 1;

        goto label04;

     label09:
        $r4 = r1.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: void order(int)>(0);

     label10:
        goto label12;

     label11:
        $r7 := @caughtexception;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.Object)>($r7);

     label12:
        return r9;

        catch java.lang.Exception from label01 to label10 with label11;
    }

    public ucar.grid.GridIndex getGridIndex()
    {
        ucar.nc2.iosp.mcidas.McIDASGridReader r0;
        ucar.grid.GridIndex $r1;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridReader;

        $r1 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.grid.GridIndex gridIndex>;

        return $r1;
    }

    public int readInt(int) throws java.io.IOException
    {
        ucar.nc2.iosp.mcidas.McIDASGridReader r0;
        ucar.unidata.io.RandomAccessFile $r1, $r2, $r3, $r4, $r5, $r6;
        long $l2;
        java.io.IOException $r7;
        int i0, $i1, $i3;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridReader;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        if $r1 != null goto label1;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("no file to read from");

        throw $r7;

     label1:
        $r2 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        $i1 = i0 * 4;

        $l2 = (long) $i1;

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l2);

        $z0 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: boolean needToSwap>;

        if $z0 == 0 goto label2;

        $r6 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        virtualinvoke $r6.<ucar.unidata.io.RandomAccessFile: void order(int)>(1);

        goto label3;

     label2:
        $r3 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: void order(int)>(0);

     label3:
        $r4 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        $i3 = virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        $r5 = r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.unidata.io.RandomAccessFile rf>;

        virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: void order(int)>(0);

        return $i3;
    }

    private void logError(java.lang.String)
    {
        ucar.nc2.iosp.mcidas.McIDASGridReader r0;
        java.lang.String r1;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASGridReader;

        r1 := @parameter0: java.lang.String;

        r0.<ucar.nc2.iosp.mcidas.McIDASGridReader: java.lang.String errorMessage> = r1;

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r0;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r9, r12;
        ucar.nc2.iosp.mcidas.McIDASGridReader $r1;
        java.io.PrintStream $r5, $r10;
        java.util.List $r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r8;
        java.lang.Object $r11;
        ucar.grid.GridIndex $r2;

        r0 := @parameter0: java.lang.String[];

        r12 = "GRID2001";

        $i0 = lengthof r0;

        if $i0 <= 0 goto label1;

        r12 = r0[0];

     label1:
        $r1 = new ucar.nc2.iosp.mcidas.McIDASGridReader;

        specialinvoke $r1.<ucar.nc2.iosp.mcidas.McIDASGridReader: void <init>(java.lang.String)>(r12);

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.mcidas.McIDASGridReader: ucar.grid.GridIndex getGridIndex()>();

        $r3 = virtualinvoke $r2.<ucar.grid.GridIndex: java.util.List getGridRecords()>();

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found ");

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" grids");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, 10);

        i4 = 0;

     label2:
        if i4 >= $i3 goto label3;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r11 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i4);

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.Object)>($r11);

        i4 = i4 + 1;

        goto label2;

     label3:
        return;
    }

    public static void <clinit>()
    {
        <ucar.nc2.iosp.mcidas.McIDASGridReader: int MAX_GRIDS> = 999999;

        return;
    }
}
