public final enum class org.waveprotocol.wave.model.document.util.LineContainers$Rounding extends java.lang.Enum
{
    public static final enum org.waveprotocol.wave.model.document.util.LineContainers$Rounding NONE;
    public static final enum org.waveprotocol.wave.model.document.util.LineContainers$Rounding WORD;
    public static final enum org.waveprotocol.wave.model.document.util.LineContainers$Rounding SENTENCE;
    public static final enum org.waveprotocol.wave.model.document.util.LineContainers$Rounding LINE;
    private static final org.waveprotocol.wave.model.document.util.LineContainers$Rounding[] $VALUES;

    public static org.waveprotocol.wave.model.document.util.LineContainers$Rounding[] values()
    {
        java.lang.Object $r1;
        org.waveprotocol.wave.model.document.util.LineContainers$Rounding[] $r0, $r2;

        $r0 = <org.waveprotocol.wave.model.document.util.LineContainers$Rounding: org.waveprotocol.wave.model.document.util.LineContainers$Rounding[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.waveprotocol.wave.model.document.util.LineContainers$Rounding[]) $r1;

        return $r2;
    }

    public static org.waveprotocol.wave.model.document.util.LineContainers$Rounding valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.waveprotocol.wave.model.document.util.LineContainers$Rounding $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/waveprotocol/wave/model/document/util/LineContainers$Rounding;", r0);

        $r2 = (org.waveprotocol.wave.model.document.util.LineContainers$Rounding) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.util.LineContainers$Rounding r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.LineContainers$Rounding;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.document.util.LineContainers$Rounding[] $r4;
        org.waveprotocol.wave.model.document.util.LineContainers$Rounding $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;

        $r0 = new org.waveprotocol.wave.model.document.util.LineContainers$Rounding;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.util.LineContainers$Rounding: void <init>(java.lang.String,int)>("NONE", 0);

        <org.waveprotocol.wave.model.document.util.LineContainers$Rounding: org.waveprotocol.wave.model.document.util.LineContainers$Rounding NONE> = $r0;

        $r1 = new org.waveprotocol.wave.model.document.util.LineContainers$Rounding;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.util.LineContainers$Rounding: void <init>(java.lang.String,int)>("WORD", 1);

        <org.waveprotocol.wave.model.document.util.LineContainers$Rounding: org.waveprotocol.wave.model.document.util.LineContainers$Rounding WORD> = $r1;

        $r2 = new org.waveprotocol.wave.model.document.util.LineContainers$Rounding;

        specialinvoke $r2.<org.waveprotocol.wave.model.document.util.LineContainers$Rounding: void <init>(java.lang.String,int)>("SENTENCE", 2);

        <org.waveprotocol.wave.model.document.util.LineContainers$Rounding: org.waveprotocol.wave.model.document.util.LineContainers$Rounding SENTENCE> = $r2;

        $r3 = new org.waveprotocol.wave.model.document.util.LineContainers$Rounding;

        specialinvoke $r3.<org.waveprotocol.wave.model.document.util.LineContainers$Rounding: void <init>(java.lang.String,int)>("LINE", 3);

        <org.waveprotocol.wave.model.document.util.LineContainers$Rounding: org.waveprotocol.wave.model.document.util.LineContainers$Rounding LINE> = $r3;

        $r4 = newarray (org.waveprotocol.wave.model.document.util.LineContainers$Rounding)[4];

        $r5 = <org.waveprotocol.wave.model.document.util.LineContainers$Rounding: org.waveprotocol.wave.model.document.util.LineContainers$Rounding NONE>;

        $r4[0] = $r5;

        $r6 = <org.waveprotocol.wave.model.document.util.LineContainers$Rounding: org.waveprotocol.wave.model.document.util.LineContainers$Rounding WORD>;

        $r4[1] = $r6;

        $r7 = <org.waveprotocol.wave.model.document.util.LineContainers$Rounding: org.waveprotocol.wave.model.document.util.LineContainers$Rounding SENTENCE>;

        $r4[2] = $r7;

        $r8 = <org.waveprotocol.wave.model.document.util.LineContainers$Rounding: org.waveprotocol.wave.model.document.util.LineContainers$Rounding LINE>;

        $r4[3] = $r8;

        <org.waveprotocol.wave.model.document.util.LineContainers$Rounding: org.waveprotocol.wave.model.document.util.LineContainers$Rounding[] $VALUES> = $r4;

        return;
    }
}
