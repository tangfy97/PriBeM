public class org.apache.batik.script.rhino.BatikSecurityController extends org.mozilla.javascript.SecurityController
{

    public void <init>()
    {
        org.apache.batik.script.rhino.BatikSecurityController r0;

        r0 := @this: org.apache.batik.script.rhino.BatikSecurityController;

        specialinvoke r0.<org.mozilla.javascript.SecurityController: void <init>()>();

        return;
    }

    public org.mozilla.javascript.GeneratedClassLoader createClassLoader(java.lang.ClassLoader, java.lang.Object)
    {
        org.apache.batik.script.rhino.RhinoClassLoader $r2;
        java.lang.Object r0;
        java.lang.SecurityException $r1;
        java.lang.ClassLoader r4;
        org.apache.batik.script.rhino.BatikSecurityController r3;
        boolean $z0;

        r3 := @this: org.apache.batik.script.rhino.BatikSecurityController;

        r4 := @parameter0: java.lang.ClassLoader;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof org.apache.batik.script.rhino.RhinoClassLoader;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.batik.script.rhino.RhinoClassLoader) r0;

        return $r2;

     label1:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Script() objects are not supported");

        throw $r1;
    }

    public java.lang.Object getDynamicSecurityDomain(java.lang.Object)
    {
        java.security.AccessControlContext $r2;
        org.apache.batik.script.rhino.RhinoClassLoader r1;
        java.lang.Object r0;
        org.apache.batik.script.rhino.BatikSecurityController r3;

        r3 := @this: org.apache.batik.script.rhino.BatikSecurityController;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.apache.batik.script.rhino.RhinoClassLoader) r0;

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = staticinvoke <java.security.AccessController: java.security.AccessControlContext getContext()>();

        return $r2;
    }

    public java.lang.Object callWithDomain(java.lang.Object, org.mozilla.javascript.Context, org.mozilla.javascript.Callable, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.security.AccessControlContext r11;
        java.lang.Object[] r7;
        org.mozilla.javascript.Context r4;
        org.mozilla.javascript.Callable r3;
        org.apache.batik.script.rhino.BatikSecurityController r2;
        java.lang.Exception $r9;
        org.apache.batik.script.rhino.BatikSecurityController$1 $r1;
        org.mozilla.javascript.Scriptable r5, r6;
        org.mozilla.javascript.WrappedException $r10;
        org.apache.batik.script.rhino.RhinoClassLoader r12;
        java.lang.Object r0, $r8;
        boolean $z0;

        r2 := @this: org.apache.batik.script.rhino.BatikSecurityController;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: org.mozilla.javascript.Context;

        r3 := @parameter2: org.mozilla.javascript.Callable;

        r5 := @parameter3: org.mozilla.javascript.Scriptable;

        r6 := @parameter4: org.mozilla.javascript.Scriptable;

        r7 := @parameter5: java.lang.Object[];

        $z0 = r0 instanceof java.security.AccessControlContext;

        if $z0 == 0 goto label1;

        r11 = (java.security.AccessControlContext) r0;

        goto label2;

     label1:
        r12 = (org.apache.batik.script.rhino.RhinoClassLoader) r0;

        r11 = r12.<org.apache.batik.script.rhino.RhinoClassLoader: java.security.AccessControlContext rhinoAccessControlContext>;

     label2:
        $r1 = new org.apache.batik.script.rhino.BatikSecurityController$1;

        specialinvoke $r1.<org.apache.batik.script.rhino.BatikSecurityController$1: void <init>(org.apache.batik.script.rhino.BatikSecurityController,org.mozilla.javascript.Callable,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r2, r3, r4, r5, r6, r7);

     label3:
        $r8 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>($r1, r11);

        return $r8;

     label4:
        $r9 := @caughtexception;

        $r10 = new org.mozilla.javascript.WrappedException;

        specialinvoke $r10.<org.mozilla.javascript.WrappedException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

        catch java.lang.Exception from label3 to label4 with label4;
    }
}
