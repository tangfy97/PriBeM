public class org.eclipse.jetty.server.AsyncNCSARequestLog extends org.eclipse.jetty.server.NCSARequestLog
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private final java.util.concurrent.BlockingQueue _queue;
    private transient org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread _thread;
    private boolean _warnedFull;

    public void <init>()
    {
        org.eclipse.jetty.server.AsyncNCSARequestLog r0;

        r0 := @this: org.eclipse.jetty.server.AsyncNCSARequestLog;

        specialinvoke r0.<org.eclipse.jetty.server.AsyncNCSARequestLog: void <init>(java.lang.String,java.util.concurrent.BlockingQueue)>(null, null);

        return;
    }

    public void <init>(java.util.concurrent.BlockingQueue)
    {
        java.util.concurrent.BlockingQueue r1;
        org.eclipse.jetty.server.AsyncNCSARequestLog r0;

        r0 := @this: org.eclipse.jetty.server.AsyncNCSARequestLog;

        r1 := @parameter0: java.util.concurrent.BlockingQueue;

        specialinvoke r0.<org.eclipse.jetty.server.AsyncNCSARequestLog: void <init>(java.lang.String,java.util.concurrent.BlockingQueue)>(null, r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jetty.server.AsyncNCSARequestLog r0;

        r0 := @this: org.eclipse.jetty.server.AsyncNCSARequestLog;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.eclipse.jetty.server.AsyncNCSARequestLog: void <init>(java.lang.String,java.util.concurrent.BlockingQueue)>(r1, null);

        return;
    }

    public void <init>(java.lang.String, java.util.concurrent.BlockingQueue)
    {
        java.util.concurrent.BlockingQueue r3;
        java.lang.String r1;
        org.eclipse.jetty.util.BlockingArrayQueue $r2;
        org.eclipse.jetty.server.AsyncNCSARequestLog r0;

        r0 := @this: org.eclipse.jetty.server.AsyncNCSARequestLog;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.concurrent.BlockingQueue;

        specialinvoke r0.<org.eclipse.jetty.server.NCSARequestLog: void <init>(java.lang.String)>(r1);

        if r3 != null goto label1;

        $r2 = new org.eclipse.jetty.util.BlockingArrayQueue;

        specialinvoke $r2.<org.eclipse.jetty.util.BlockingArrayQueue: void <init>(int)>(1024);

        r3 = $r2;

     label1:
        r0.<org.eclipse.jetty.server.AsyncNCSARequestLog: java.util.concurrent.BlockingQueue _queue> = r3;

        return;
    }

    protected synchronized void doStart() throws java.lang.Exception
    {
        org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread $r1, $r2;
        org.eclipse.jetty.server.AsyncNCSARequestLog r0;

        r0 := @this: org.eclipse.jetty.server.AsyncNCSARequestLog;

        specialinvoke r0.<org.eclipse.jetty.server.NCSARequestLog: void doStart()>();

        $r1 = new org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread;

        specialinvoke $r1.<org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread: void <init>(org.eclipse.jetty.server.AsyncNCSARequestLog)>(r0);

        r0.<org.eclipse.jetty.server.AsyncNCSARequestLog: org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread _thread> = $r1;

        $r2 = r0.<org.eclipse.jetty.server.AsyncNCSARequestLog: org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread _thread>;

        virtualinvoke $r2.<org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread: void start()>();

        return;
    }

    protected void doStop() throws java.lang.Exception
    {
        org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread $r1, $r2;
        org.eclipse.jetty.server.AsyncNCSARequestLog r0;

        r0 := @this: org.eclipse.jetty.server.AsyncNCSARequestLog;

        $r1 = r0.<org.eclipse.jetty.server.AsyncNCSARequestLog: org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread _thread>;

        virtualinvoke $r1.<org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread: void interrupt()>();

        $r2 = r0.<org.eclipse.jetty.server.AsyncNCSARequestLog: org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread _thread>;

        virtualinvoke $r2.<org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread: void join()>();

        specialinvoke r0.<org.eclipse.jetty.server.NCSARequestLog: void doStop()>();

        r0.<org.eclipse.jetty.server.AsyncNCSARequestLog: org.eclipse.jetty.server.AsyncNCSARequestLog$WriterThread _thread> = null;

        return;
    }

    protected void write(java.lang.String) throws java.io.IOException
    {
        java.lang.Object[] $r3;
        java.util.concurrent.BlockingQueue $r2;
        java.lang.String r1;
        org.eclipse.jetty.util.log.Logger $r4;
        org.eclipse.jetty.server.AsyncNCSARequestLog r0;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.AsyncNCSARequestLog;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.server.AsyncNCSARequestLog: java.util.concurrent.BlockingQueue _queue>;

        $z0 = interfaceinvoke $r2.<java.util.concurrent.BlockingQueue: boolean offer(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $z1 = r0.<org.eclipse.jetty.server.AsyncNCSARequestLog: boolean _warnedFull>;

        if $z1 == 0 goto label1;

        $r4 = <org.eclipse.jetty.server.AsyncNCSARequestLog: org.eclipse.jetty.util.log.Logger LOG>;

        $r3 = newarray (java.lang.Object)[0];

        interfaceinvoke $r4.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>("Log Queue overflow", $r3);

     label1:
        r0.<org.eclipse.jetty.server.AsyncNCSARequestLog: boolean _warnedFull> = 1;

     label2:
        return;
    }

    static java.util.concurrent.BlockingQueue access$000(org.eclipse.jetty.server.AsyncNCSARequestLog)
    {
        java.util.concurrent.BlockingQueue $r1;
        org.eclipse.jetty.server.AsyncNCSARequestLog r0;

        r0 := @parameter0: org.eclipse.jetty.server.AsyncNCSARequestLog;

        $r1 = r0.<org.eclipse.jetty.server.AsyncNCSARequestLog: java.util.concurrent.BlockingQueue _queue>;

        return $r1;
    }

    static void access$101(org.eclipse.jetty.server.AsyncNCSARequestLog, java.lang.String) throws java.io.IOException
    {
        java.lang.String r1;
        org.eclipse.jetty.server.AsyncNCSARequestLog r0;

        r0 := @parameter0: org.eclipse.jetty.server.AsyncNCSARequestLog;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.eclipse.jetty.server.NCSARequestLog: void write(java.lang.String)>(r1);

        return;
    }

    static void access$201(org.eclipse.jetty.server.AsyncNCSARequestLog, java.lang.String) throws java.io.IOException
    {
        java.lang.String r1;
        org.eclipse.jetty.server.AsyncNCSARequestLog r0;

        r0 := @parameter0: org.eclipse.jetty.server.AsyncNCSARequestLog;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.eclipse.jetty.server.NCSARequestLog: void write(java.lang.String)>(r1);

        return;
    }

    static org.eclipse.jetty.util.log.Logger access$300()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = <org.eclipse.jetty.server.AsyncNCSARequestLog: org.eclipse.jetty.util.log.Logger LOG>;

        return $r0;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/server/AsyncNCSARequestLog;");

        <org.eclipse.jetty.server.AsyncNCSARequestLog: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
