public class org.apache.zookeeper.server.quorum.QuorumPeerConfig extends java.lang.Object
{
    private static final org.slf4j.Logger LOG;
    protected java.net.InetSocketAddress clientPortAddress;
    protected java.lang.String dataDir;
    protected java.lang.String dataLogDir;
    protected int tickTime;
    protected int maxClientCnxns;
    protected int minSessionTimeout;
    protected int maxSessionTimeout;
    protected int initLimit;
    protected int syncLimit;
    protected int electionAlg;
    protected int electionPort;
    protected final java.util.HashMap servers;
    protected final java.util.HashMap observers;
    protected long serverId;
    protected java.util.HashMap serverWeight;
    protected java.util.HashMap serverGroup;
    protected int numGroups;
    protected org.apache.zookeeper.server.quorum.flexible.QuorumVerifier quorumVerifier;
    protected int snapRetainCount;
    protected int purgeInterval;
    protected org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType peerType;
    private final int MIN_SNAP_RETAIN_COUNT;

    public void <init>()
    {
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;
        java.util.HashMap $r6, $r7, $r8, $r9;
        org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType $r5;
        int $i1, $i3;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int MIN_SNAP_RETAIN_COUNT> = 3;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int tickTime> = 3000;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int maxClientCnxns> = 60;

        $i1 = (int) -1;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int minSessionTimeout> = $i1;

        $i3 = (int) -1;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int maxSessionTimeout> = $i3;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int electionAlg> = 3;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int electionPort> = 2182;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap observers> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap serverWeight> = $r8;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap serverGroup> = $r9;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int numGroups> = 0;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int snapRetainCount> = 3;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int purgeInterval> = 0;

        $r5 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType PARTICIPANT>;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType peerType> = $r5;

        r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int MIN_SNAP_RETAIN_COUNT> = 3;

        return;
    }

    public void parse(java.lang.String) throws org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException
    {
        java.lang.Throwable $r28;
        java.lang.String r1, $r6, $r12, $r15, $r21, $r27;
        boolean $z0;
        org.slf4j.Logger $r3;
        java.util.Properties $r7;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r9;
        java.io.IOException $r22;
        java.io.FileInputStream $r8;
        java.lang.IllegalArgumentException $r10, $r16;
        java.io.File $r0;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException $r17, $r23;
        java.lang.StringBuilder $r2, $r4, $r5, $r11, $r13, $r14, $r18, $r19, $r20, $r24, $r25, $r26;

        r9 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $r3 = <org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.slf4j.Logger LOG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading configuration from: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>($r6);

     label01:
        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label02;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r0.<java.io.File: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file is missing");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label02:
        $r7 = new java.util.Properties;

        specialinvoke $r7.<java.util.Properties: void <init>()>();

        $r8 = new java.io.FileInputStream;

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

     label03:
        virtualinvoke $r7.<java.util.Properties: void load(java.io.InputStream)>($r8);

        goto label12;

     label04:
        goto label07;

     label05:
        $r28 := @caughtexception;

        goto label13;

     label06:
        throw $r28;

     label07:
        virtualinvoke r9.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: void parseProperties(java.util.Properties)>($r7);

     label08:
        goto label11;

     label09:
        $r22 := @caughtexception;

        $r23 = new org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error processing ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException: void <init>(java.lang.String,java.lang.Exception)>($r27, $r22);

        throw $r23;

     label10:
        $r16 := @caughtexception;

        $r17 = new org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error processing ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException: void <init>(java.lang.String,java.lang.Exception)>($r21, $r16);

        throw $r17;

     label11:
        return;

     label12:
        virtualinvoke $r8.<java.io.FileInputStream: void close()>();

        goto label04;

     label13:
        virtualinvoke $r8.<java.io.FileInputStream: void close()>();

        goto label06;

     label14:
        nop;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.io.IOException from label01 to label08 with label09;
        catch java.lang.IllegalArgumentException from label01 to label08 with label10;
        catch java.io.IOException from label12 to label13 with label09;
        catch java.lang.IllegalArgumentException from label12 to label13 with label10;
        catch java.io.IOException from label13 to label14 with label09;
        catch java.lang.IllegalArgumentException from label13 to label14 with label10;
    }

    public void parseProperties(java.util.Properties) throws java.io.IOException, org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException
    {
        org.apache.zookeeper.server.quorum.flexible.QuorumHierarchical $r48;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i16, $i17, $i18, $i22, $i23, $i24, $i25, $i26, $i29, $i30, $i32, $i33, $i35, $i36, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, i54, $i55, $i56, i57, i58, $i59;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException $r57, $r122, $r137, $r165;
        org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer $r144, $r147, $r153, $r156, r188, r189;
        java.lang.String $r4, $r5, $r7, $r21, $r24, $r36, $r39, $r42, $r67, $r86, $r89, $r90, $r98, $r101, $r102, $r104, $r105, $r109, $r110, $r114, r116, $r127, $r128, $r131, $r132, $r133, $r134, $r135, $r136, $r141, $r149, $r150, $r162, $r163, $r164, $r169, $r178, r180, $r183, $r184;
        java.util.Properties r0;
        java.io.BufferedReader $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28;
        java.net.InetSocketAddress $r8, $r62, $r80, $r130, $r148, $r182;
        org.apache.zookeeper.server.quorum.flexible.QuorumMaj $r16;
        java.lang.Long $r26, $r53, $r55, $r56, $r112, $r113, $r118, $r120, $r121, $r143, $r146, $r152, $r155;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r3;
        java.lang.StringBuilder $r28, $r30, $r31, $r32, $r34, $r35, $r38, $r40, $r41, $r64, $r65, $r66, $r84, $r85, $r87, $r88, $r92, $r94, $r95, $r96, $r97, $r106, $r107, $r108, $r123, $r124, $r125, $r126, $r138, $r139, $r140, $r157, $r159, $r160, $r161, $r166, $r167, $r168, $r174, $r175, $r176, $r177;
        long $l14, $l15, $l19, $l20, $l21, $l27, $l28, $l31, $l34, $l37;
        java.util.Collection $r46, $r59;
        org.slf4j.Logger $r15, $r29, $r70, $r71, $r73, $r93, $r158;
        java.lang.Object $r51, $r61, $r99, $r100, $r103;
        java.io.FileReader $r23;
        java.net.InetAddress $r81;
        java.util.Set $r1;
        java.lang.Throwable $r179;
        java.util.Map$Entry r181;
        java.lang.NumberFormatException $r172;
        java.io.File $r6, $r20;
        org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType $r27, $r33, $r170, $r171, r185, r186, r187, $r190;
        java.util.HashMap $r9, $r10, $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r25, $r43, $r44, $r45, $r49, $r50, $r52, $r54, $r58, $r72, $r74, $r76, $r111, $r117, $r119, $r142, $r145, $r151, $r154;
        java.lang.String[] $r115, $r129;
        java.util.Iterator $r2, $r47, $r60;
        java.lang.IllegalArgumentException $r37, $r63, $r68, $r69, $r75, $r77, $r78, $r79, $r82, $r83, $r91, $r173;

        r3 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        r0 := @parameter0: java.util.Properties;

        i54 = 0;

        r180 = null;

        $r1 = virtualinvoke r0.<java.util.Properties: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label31;

        $r99 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r181 = (java.util.Map$Entry) $r99;

        $r100 = interfaceinvoke r181.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r101 = virtualinvoke $r100.<java.lang.Object: java.lang.String toString()>();

        $r102 = virtualinvoke $r101.<java.lang.String: java.lang.String trim()>();

        $r103 = interfaceinvoke r181.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r104 = virtualinvoke $r103.<java.lang.Object: java.lang.String toString()>();

        $r105 = virtualinvoke $r104.<java.lang.String: java.lang.String trim()>();

        $z7 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>("dataDir");

        if $z7 == 0 goto label02;

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.lang.String dataDir> = $r105;

        goto label30;

     label02:
        $z8 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>("dataLogDir");

        if $z8 == 0 goto label03;

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.lang.String dataLogDir> = $r105;

        goto label30;

     label03:
        $z9 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>("clientPort");

        if $z9 == 0 goto label04;

        i54 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r105);

        goto label30;

     label04:
        $z10 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>("clientPortAddress");

        if $z10 == 0 goto label05;

        r180 = virtualinvoke $r105.<java.lang.String: java.lang.String trim()>();

        goto label30;

     label05:
        $z11 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>("tickTime");

        if $z11 == 0 goto label06;

        $i53 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r105);

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int tickTime> = $i53;

        goto label30;

     label06:
        $z12 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>("maxClientCnxns");

        if $z12 == 0 goto label07;

        $i52 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r105);

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int maxClientCnxns> = $i52;

        goto label30;

     label07:
        $z13 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>("minSessionTimeout");

        if $z13 == 0 goto label08;

        $i51 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r105);

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int minSessionTimeout> = $i51;

        goto label30;

     label08:
        $z14 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>("maxSessionTimeout");

        if $z14 == 0 goto label09;

        $i50 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r105);

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int maxSessionTimeout> = $i50;

        goto label30;

     label09:
        $z15 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>("initLimit");

        if $z15 == 0 goto label10;

        $i49 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r105);

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int initLimit> = $i49;

        goto label30;

     label10:
        $z16 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>("syncLimit");

        if $z16 == 0 goto label11;

        $i48 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r105);

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int syncLimit> = $i48;

        goto label30;

     label11:
        $z17 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>("electionAlg");

        if $z17 == 0 goto label12;

        $i47 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r105);

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int electionAlg> = $i47;

        goto label30;

     label12:
        $z18 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>("peerType");

        if $z18 == 0 goto label15;

        $r163 = virtualinvoke $r105.<java.lang.String: java.lang.String toLowerCase()>();

        $z27 = virtualinvoke $r163.<java.lang.String: boolean equals(java.lang.Object)>("observer");

        if $z27 == 0 goto label13;

        $r171 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType OBSERVER>;

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType peerType> = $r171;

        goto label30;

     label13:
        $r164 = virtualinvoke $r105.<java.lang.String: java.lang.String toLowerCase()>();

        $z28 = virtualinvoke $r164.<java.lang.String: boolean equals(java.lang.Object)>("participant");

        if $z28 == 0 goto label14;

        $r170 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType PARTICIPANT>;

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType peerType> = $r170;

        goto label30;

     label14:
        $r165 = new org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException;

        $r166 = new java.lang.StringBuilder;

        specialinvoke $r166.<java.lang.StringBuilder: void <init>()>();

        $r167 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognised peertype: ");

        $r168 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105);

        $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r165.<org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException: void <init>(java.lang.String)>($r169);

        throw $r165;

     label15:
        $z19 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>("autopurge.snapRetainCount");

        if $z19 == 0 goto label16;

        $i46 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r105);

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int snapRetainCount> = $i46;

        goto label30;

     label16:
        $z20 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>("autopurge.purgeInterval");

        if $z20 == 0 goto label17;

        $i45 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r105);

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int purgeInterval> = $i45;

        goto label30;

     label17:
        $z21 = virtualinvoke $r102.<java.lang.String: boolean startsWith(java.lang.String)>("server.");

        if $z21 == 0 goto label24;

        $i35 = virtualinvoke $r102.<java.lang.String: int indexOf(int)>(46);

        $i36 = $i35 + 1;

        $r128 = virtualinvoke $r102.<java.lang.String: java.lang.String substring(int)>($i36);

        $l37 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r128);

        $r129 = virtualinvoke $r105.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $i38 = lengthof $r129;

        if $i38 == 2 goto label18;

        $i43 = lengthof $r129;

        if $i43 == 3 goto label18;

        $i44 = lengthof $r129;

        if $i44 == 4 goto label18;

        $r158 = <org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.slf4j.Logger LOG>;

        $r157 = new java.lang.StringBuilder;

        specialinvoke $r157.<java.lang.StringBuilder: void <init>()>();

        $r159 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105);

        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have the form host:port or host:port:port ");

        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or host:port:port:type");

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r158.<org.slf4j.Logger: void error(java.lang.String)>($r162);

     label18:
        $r182 = new java.net.InetSocketAddress;

        $r183 = $r129[0];

        $r184 = $r129[1];

        $i55 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r184);

        specialinvoke $r182.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r183, $i55);

        $i56 = lengthof $r129;

        if $i56 != 2 goto label19;

        $r154 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers>;

        $r155 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l37);

        $r156 = new org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer;

        specialinvoke $r156.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: void <init>(long,java.net.InetSocketAddress)>($l37, $r182);

        virtualinvoke $r154.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r155, $r156);

        goto label23;

     label19:
        $i39 = lengthof $r129;

        if $i39 != 3 goto label20;

        $r148 = new java.net.InetSocketAddress;

        $r150 = $r129[0];

        $r149 = $r129[2];

        $i42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r149);

        specialinvoke $r148.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r150, $i42);

        $r151 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers>;

        $r152 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l37);

        $r153 = new org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer;

        specialinvoke $r153.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: void <init>(long,java.net.InetSocketAddress,java.net.InetSocketAddress)>($l37, $r182, $r148);

        virtualinvoke $r151.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r152, $r153);

        goto label23;

     label20:
        $i40 = lengthof $r129;

        if $i40 != 4 goto label23;

        $r130 = new java.net.InetSocketAddress;

        $r132 = $r129[0];

        $r131 = $r129[2];

        $i41 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r131);

        specialinvoke $r130.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r132, $i41);

        r185 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType PARTICIPANT>;

        $r133 = $r129[3];

        $r134 = virtualinvoke $r133.<java.lang.String: java.lang.String toLowerCase()>();

        $z25 = virtualinvoke $r134.<java.lang.String: boolean equals(java.lang.Object)>("observer");

        if $z25 == 0 goto label21;

        r186 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType OBSERVER>;

        $r145 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap observers>;

        $r146 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l37);

        $r147 = new org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer;

        specialinvoke $r147.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: void <init>(long,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType)>($l37, $r182, $r130, r186);

        virtualinvoke $r145.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r146, $r147);

        goto label23;

     label21:
        $r135 = $r129[3];

        $r136 = virtualinvoke $r135.<java.lang.String: java.lang.String toLowerCase()>();

        $z26 = virtualinvoke $r136.<java.lang.String: boolean equals(java.lang.Object)>("participant");

        if $z26 == 0 goto label22;

        r187 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType PARTICIPANT>;

        $r142 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers>;

        $r143 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l37);

        $r144 = new org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer;

        specialinvoke $r144.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: void <init>(long,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType)>($l37, $r182, $r130, r187);

        virtualinvoke $r142.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r143, $r144);

        goto label23;

     label22:
        $r137 = new org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException;

        $r138 = new java.lang.StringBuilder;

        specialinvoke $r138.<java.lang.StringBuilder: void <init>()>();

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognised peertype: ");

        $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105);

        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r137.<org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException: void <init>(java.lang.String)>($r141);

        throw $r137;

     label23:
        goto label30;

     label24:
        $z22 = virtualinvoke $r102.<java.lang.String: boolean startsWith(java.lang.String)>("group");

        if $z22 == 0 goto label28;

        $i29 = virtualinvoke $r102.<java.lang.String: int indexOf(int)>(46);

        $i30 = $i29 + 1;

        $r114 = virtualinvoke $r102.<java.lang.String: java.lang.String substring(int)>($i30);

        $l31 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r114);

        $i32 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int numGroups>;

        $i33 = $i32 + 1;

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int numGroups> = $i33;

        $r115 = virtualinvoke $r105.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        i57 = lengthof $r115;

        i58 = 0;

     label25:
        if i58 >= i57 goto label27;

        r116 = $r115[i58];

        $l34 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r116);

        $r117 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap serverGroup>;

        $r118 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l34);

        $z24 = virtualinvoke $r117.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r118);

        if $z24 == 0 goto label26;

        $r122 = new org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException;

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Server ");

        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l34);

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("is in multiple groups");

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r122.<org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException: void <init>(java.lang.String)>($r127);

        throw $r122;

     label26:
        $r119 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap serverGroup>;

        $r120 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l34);

        $r121 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l31);

        virtualinvoke $r119.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r120, $r121);

        i58 = i58 + 1;

        goto label25;

     label27:
        goto label30;

     label28:
        $z23 = virtualinvoke $r102.<java.lang.String: boolean startsWith(java.lang.String)>("weight");

        if $z23 == 0 goto label29;

        $i25 = virtualinvoke $r102.<java.lang.String: int indexOf(int)>(46);

        $i26 = $i25 + 1;

        $r110 = virtualinvoke $r102.<java.lang.String: java.lang.String substring(int)>($i26);

        $l27 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r110);

        $r111 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap serverWeight>;

        $r112 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l27);

        $l28 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r105);

        $r113 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l28);

        virtualinvoke $r111.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r112, $r113);

        goto label30;

     label29:
        $r106 = new java.lang.StringBuilder;

        specialinvoke $r106.<java.lang.StringBuilder: void <init>()>();

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("zookeeper.");

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>($r109, $r105);

     label30:
        goto label01;

     label31:
        $i0 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int snapRetainCount>;

        if $i0 >= 3 goto label32;

        $r93 = <org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.slf4j.Logger LOG>;

        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();

        $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid autopurge.snapRetainCount: ");

        $i24 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int snapRetainCount>;

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Defaulting to ");

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(3);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r93.<org.slf4j.Logger: void warn(java.lang.String)>($r98);

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int snapRetainCount> = 3;

     label32:
        $r4 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.lang.String dataDir>;

        if $r4 != null goto label33;

        $r91 = new java.lang.IllegalArgumentException;

        specialinvoke $r91.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("dataDir is not set");

        throw $r91;

     label33:
        $r5 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.lang.String dataLogDir>;

        if $r5 != null goto label34;

        $r90 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.lang.String dataDir>;

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.lang.String dataLogDir> = $r90;

        goto label35;

     label34:
        $r6 = new java.io.File;

        $r7 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.lang.String dataLogDir>;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r7);

        $z1 = virtualinvoke $r6.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label35;

        $r83 = new java.lang.IllegalArgumentException;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dataLogDir ");

        $r86 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.lang.String dataLogDir>;

        $r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is missing.");

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r83.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r89);

        throw $r83;

     label35:
        if i54 != 0 goto label36;

        $r82 = new java.lang.IllegalArgumentException;

        specialinvoke $r82.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("clientPort is not set");

        throw $r82;

     label36:
        if r180 == null goto label37;

        $r80 = new java.net.InetSocketAddress;

        $r81 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r180);

        specialinvoke $r80.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r81, i54);

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.net.InetSocketAddress clientPortAddress> = $r80;

        goto label38;

     label37:
        $r8 = new java.net.InetSocketAddress;

        specialinvoke $r8.<java.net.InetSocketAddress: void <init>(int)>(i54);

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.net.InetSocketAddress clientPortAddress> = $r8;

     label38:
        $i1 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int tickTime>;

        if $i1 != 0 goto label39;

        $r79 = new java.lang.IllegalArgumentException;

        specialinvoke $r79.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("tickTime is not set");

        throw $r79;

     label39:
        $i3 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int minSessionTimeout>;

        $i2 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int maxSessionTimeout>;

        if $i3 <= $i2 goto label40;

        $r78 = new java.lang.IllegalArgumentException;

        specialinvoke $r78.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("minSessionTimeout must not be larger than maxSessionTimeout");

        throw $r78;

     label40:
        $r9 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers>;

        $i4 = virtualinvoke $r9.<java.util.HashMap: int size()>();

        if $i4 != 0 goto label42;

        $r76 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap observers>;

        $i23 = virtualinvoke $r76.<java.util.HashMap: int size()>();

        if $i23 <= 0 goto label41;

        $r77 = new java.lang.IllegalArgumentException;

        specialinvoke $r77.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Observers w/o participants is an invalid configuration");

        throw $r77;

     label41:
        return;

     label42:
        $r10 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers>;

        $i5 = virtualinvoke $r10.<java.util.HashMap: int size()>();

        if $i5 != 1 goto label44;

        $r72 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap observers>;

        $i22 = virtualinvoke $r72.<java.util.HashMap: int size()>();

        if $i22 <= 0 goto label43;

        $r75 = new java.lang.IllegalArgumentException;

        specialinvoke $r75.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Observers w/o quorum is an invalid configuration");

        throw $r75;

     label43:
        $r73 = <org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.slf4j.Logger LOG>;

        interfaceinvoke $r73.<org.slf4j.Logger: void error(java.lang.String)>("Invalid configuration, only one server specified (ignoring)");

        $r74 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers>;

        virtualinvoke $r74.<java.util.HashMap: void clear()>();

        goto label69;

     label44:
        $r11 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers>;

        $i6 = virtualinvoke $r11.<java.util.HashMap: int size()>();

        if $i6 <= 1 goto label69;

        $r12 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers>;

        $i7 = virtualinvoke $r12.<java.util.HashMap: int size()>();

        if $i7 != 2 goto label45;

        $r71 = <org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.slf4j.Logger LOG>;

        interfaceinvoke $r71.<org.slf4j.Logger: void warn(java.lang.String)>("No server failure will be tolerated. You need at least 3 servers.");

        goto label46;

     label45:
        $r13 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers>;

        $i8 = virtualinvoke $r13.<java.util.HashMap: int size()>();

        $i9 = $i8 % 2;

        if $i9 != 0 goto label46;

        $r70 = <org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.slf4j.Logger LOG>;

        interfaceinvoke $r70.<org.slf4j.Logger: void warn(java.lang.String)>("Non-optimial configuration, consider an odd number of servers.");

     label46:
        $i59 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int initLimit>;

        if $i59 != 0 goto label47;

        $r69 = new java.lang.IllegalArgumentException;

        specialinvoke $r69.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("initLimit is not set");

        throw $r69;

     label47:
        $i10 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int syncLimit>;

        if $i10 != 0 goto label48;

        $r68 = new java.lang.IllegalArgumentException;

        specialinvoke $r68.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("syncLimit is not set");

        throw $r68;

     label48:
        $i11 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int electionAlg>;

        if $i11 == 0 goto label51;

        $r58 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers>;

        $r59 = virtualinvoke $r58.<java.util.HashMap: java.util.Collection values()>();

        $r60 = interfaceinvoke $r59.<java.util.Collection: java.util.Iterator iterator()>();

     label49:
        $z6 = interfaceinvoke $r60.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label51;

        $r61 = interfaceinvoke $r60.<java.util.Iterator: java.lang.Object next()>();

        r188 = (org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer) $r61;

        $r62 = r188.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: java.net.InetSocketAddress electionAddr>;

        if $r62 != null goto label50;

        $r63 = new java.lang.IllegalArgumentException;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing election port for server: ");

        $l21 = r188.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: long id>;

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l21);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r63.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r67);

        throw $r63;

     label50:
        goto label49;

     label51:
        $r14 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap serverGroup>;

        $i12 = virtualinvoke $r14.<java.util.HashMap: int size()>();

        if $i12 <= 0 goto label56;

        $r43 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers>;

        $i16 = virtualinvoke $r43.<java.util.HashMap: int size()>();

        $r44 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap serverGroup>;

        $i17 = virtualinvoke $r44.<java.util.HashMap: int size()>();

        if $i16 == $i17 goto label52;

        $r57 = new org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException;

        specialinvoke $r57.<org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException: void <init>(java.lang.String)>("Every server must be in exactly one group");

        throw $r57;

     label52:
        $r45 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers>;

        $r46 = virtualinvoke $r45.<java.util.HashMap: java.util.Collection values()>();

        $r47 = interfaceinvoke $r46.<java.util.Collection: java.util.Iterator iterator()>();

     label53:
        $z4 = interfaceinvoke $r47.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label55;

        $r51 = interfaceinvoke $r47.<java.util.Iterator: java.lang.Object next()>();

        r189 = (org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer) $r51;

        $r52 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap serverWeight>;

        $l19 = r189.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: long id>;

        $r53 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l19);

        $z5 = virtualinvoke $r52.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r53);

        if $z5 != 0 goto label54;

        $r54 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap serverWeight>;

        $l20 = r189.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: long id>;

        $r55 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l20);

        $r56 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        virtualinvoke $r54.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r55, $r56);

     label54:
        goto label53;

     label55:
        $r48 = new org.apache.zookeeper.server.quorum.flexible.QuorumHierarchical;

        $i18 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int numGroups>;

        $r50 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap serverWeight>;

        $r49 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap serverGroup>;

        specialinvoke $r48.<org.apache.zookeeper.server.quorum.flexible.QuorumHierarchical: void <init>(int,java.util.HashMap,java.util.HashMap)>($i18, $r50, $r49);

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.apache.zookeeper.server.quorum.flexible.QuorumVerifier quorumVerifier> = $r48;

        goto label57;

     label56:
        $r15 = <org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.slf4j.Logger LOG>;

        interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String)>("Defaulting to majority quorums");

        $r16 = new org.apache.zookeeper.server.quorum.flexible.QuorumMaj;

        $r17 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers>;

        $i13 = virtualinvoke $r17.<java.util.HashMap: int size()>();

        specialinvoke $r16.<org.apache.zookeeper.server.quorum.flexible.QuorumMaj: void <init>(int)>($i13);

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.apache.zookeeper.server.quorum.flexible.QuorumVerifier quorumVerifier> = $r16;

     label57:
        $r19 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers>;

        $r18 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap observers>;

        virtualinvoke $r19.<java.util.HashMap: void putAll(java.util.Map)>($r18);

        $r20 = new java.io.File;

        $r21 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.lang.String dataDir>;

        specialinvoke $r20.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r21, "myid");

        $z2 = virtualinvoke $r20.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label58;

        $r37 = new java.lang.IllegalArgumentException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r20.<java.io.File: java.lang.String toString()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file is missing");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r42);

        throw $r37;

     label58:
        $r22 = new java.io.BufferedReader;

        $r23 = new java.io.FileReader;

        specialinvoke $r23.<java.io.FileReader: void <init>(java.io.File)>($r20);

        specialinvoke $r22.<java.io.BufferedReader: void <init>(java.io.Reader)>($r23);

     label59:
        $r24 = virtualinvoke $r22.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label70;

     label60:
        goto label63;

     label61:
        $r179 := @caughtexception;

        goto label71;

     label62:
        throw $r179;

     label63:
        $l14 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r24);

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: long serverId> = $l14;

        staticinvoke <org.slf4j.MDC: void put(java.lang.String,java.lang.String)>("myid", $r24);

     label64:
        goto label66;

     label65:
        $r172 := @caughtexception;

        $r173 = new java.lang.IllegalArgumentException;

        $r174 = new java.lang.StringBuilder;

        specialinvoke $r174.<java.lang.StringBuilder: void <init>()>();

        $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("serverid ");

        $r176 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r177 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a number");

        $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r173.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r178);

        throw $r173;

     label66:
        $r25 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap observers>;

        $l15 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: long serverId>;

        $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l15);

        $z3 = virtualinvoke $r25.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r26);

        if $z3 == 0 goto label67;

        $r190 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType OBSERVER>;

        goto label68;

     label67:
        $r190 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType PARTICIPANT>;

     label68:
        $r27 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType peerType>;

        if $r190 == $r27 goto label69;

        $r29 = <org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.slf4j.Logger LOG>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Peer type from servers list (");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r190);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") doesn\'t match peerType (");

        $r33 = r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType peerType>;

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("). Defaulting to servers list.");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r29.<org.slf4j.Logger: void warn(java.lang.String)>($r36);

        r3.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType peerType> = $r190;

     label69:
        return;

     label70:
        virtualinvoke $r22.<java.io.BufferedReader: void close()>();

        goto label60;

     label71:
        virtualinvoke $r22.<java.io.BufferedReader: void close()>();

        goto label62;

        catch java.lang.Throwable from label59 to label60 with label61;
        catch java.lang.Throwable from label61 to label62 with label61;
        catch java.lang.NumberFormatException from label63 to label64 with label65;
    }

    public java.net.InetSocketAddress getClientPortAddress()
    {
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;
        java.net.InetSocketAddress $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.net.InetSocketAddress clientPortAddress>;

        return $r1;
    }

    public java.lang.String getDataDir()
    {
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;
        java.lang.String $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.lang.String dataDir>;

        return $r1;
    }

    public java.lang.String getDataLogDir()
    {
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;
        java.lang.String $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.lang.String dataLogDir>;

        return $r1;
    }

    public int getTickTime()
    {
        int $i0;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int tickTime>;

        return $i0;
    }

    public int getMaxClientCnxns()
    {
        int $i0;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int maxClientCnxns>;

        return $i0;
    }

    public int getMinSessionTimeout()
    {
        int $i0;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int minSessionTimeout>;

        return $i0;
    }

    public int getMaxSessionTimeout()
    {
        int $i0;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int maxSessionTimeout>;

        return $i0;
    }

    public int getInitLimit()
    {
        int $i0;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int initLimit>;

        return $i0;
    }

    public int getSyncLimit()
    {
        int $i0;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int syncLimit>;

        return $i0;
    }

    public int getElectionAlg()
    {
        int $i0;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int electionAlg>;

        return $i0;
    }

    public int getElectionPort()
    {
        int $i0;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int electionPort>;

        return $i0;
    }

    public int getSnapRetainCount()
    {
        int $i0;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int snapRetainCount>;

        return $i0;
    }

    public int getPurgeInterval()
    {
        int $i0;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $i0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: int purgeInterval>;

        return $i0;
    }

    public org.apache.zookeeper.server.quorum.flexible.QuorumVerifier getQuorumVerifier()
    {
        org.apache.zookeeper.server.quorum.flexible.QuorumVerifier $r1;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.apache.zookeeper.server.quorum.flexible.QuorumVerifier quorumVerifier>;

        return $r1;
    }

    public java.util.Map getServers()
    {
        java.util.HashMap $r1;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;
        java.util.Map $r2;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public long getServerId()
    {
        long $l0;
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $l0 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: long serverId>;

        return $l0;
    }

    public boolean isDistributed()
    {
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;
        int $i0;
        java.util.HashMap $r1;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: java.util.HashMap servers>;

        $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>();

        if $i0 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType getPeerType()
    {
        org.apache.zookeeper.server.quorum.QuorumPeerConfig r0;
        org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType $r1;

        r0 := @this: org.apache.zookeeper.server.quorum.QuorumPeerConfig;

        $r1 = r0.<org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType peerType>;

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/quorum/QuorumPeerConfig;");

        <org.apache.zookeeper.server.quorum.QuorumPeerConfig: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
