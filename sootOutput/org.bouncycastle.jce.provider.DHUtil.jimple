public class org.bouncycastle.jce.provider.DHUtil extends java.lang.Object
{

    public void <init>()
    {
        org.bouncycastle.jce.provider.DHUtil r0;

        r0 := @this: org.bouncycastle.jce.provider.DHUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        java.security.PublicKey r0;
        javax.crypto.spec.DHParameterSpec $r6, $r8, $r10;
        javax.crypto.interfaces.DHPublicKey r2;
        int $i0;
        java.security.InvalidKeyException $r1;
        java.math.BigInteger $r4, $r7, $r9;
        org.bouncycastle.crypto.params.DHParameters $r5;
        boolean $z0;
        org.bouncycastle.crypto.params.DHPublicKeyParameters $r3;

        r0 := @parameter0: java.security.PublicKey;

        $z0 = r0 instanceof javax.crypto.interfaces.DHPublicKey;

        if $z0 == 0 goto label1;

        r2 = (javax.crypto.interfaces.DHPublicKey) r0;

        $r3 = new org.bouncycastle.crypto.params.DHPublicKeyParameters;

        $r4 = interfaceinvoke r2.<javax.crypto.interfaces.DHPublicKey: java.math.BigInteger getY()>();

        $r5 = new org.bouncycastle.crypto.params.DHParameters;

        $r6 = interfaceinvoke r2.<javax.crypto.interfaces.DHPublicKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r7 = virtualinvoke $r6.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $r8 = interfaceinvoke r2.<javax.crypto.interfaces.DHPublicKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r9 = virtualinvoke $r8.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        $r10 = interfaceinvoke r2.<javax.crypto.interfaces.DHPublicKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $i0 = virtualinvoke $r10.<javax.crypto.spec.DHParameterSpec: int getL()>();

        specialinvoke $r5.<org.bouncycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int)>($r7, $r9, null, $i0);

        specialinvoke $r3.<org.bouncycastle.crypto.params.DHPublicKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.DHParameters)>($r4, $r5);

        return $r3;

     label1:
        $r1 = new java.security.InvalidKeyException;

        specialinvoke $r1.<java.security.InvalidKeyException: void <init>(java.lang.String)>("can\'t identify DH public key.");

        throw $r1;
    }

    public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey) throws java.security.InvalidKeyException
    {
        javax.crypto.spec.DHParameterSpec $r6, $r8, $r10;
        org.bouncycastle.crypto.params.DHPrivateKeyParameters $r3;
        javax.crypto.interfaces.DHPrivateKey r2;
        java.security.PrivateKey r0;
        int $i0;
        java.security.InvalidKeyException $r1;
        java.math.BigInteger $r4, $r7, $r9;
        org.bouncycastle.crypto.params.DHParameters $r5;
        boolean $z0;

        r0 := @parameter0: java.security.PrivateKey;

        $z0 = r0 instanceof javax.crypto.interfaces.DHPrivateKey;

        if $z0 == 0 goto label1;

        r2 = (javax.crypto.interfaces.DHPrivateKey) r0;

        $r3 = new org.bouncycastle.crypto.params.DHPrivateKeyParameters;

        $r4 = interfaceinvoke r2.<javax.crypto.interfaces.DHPrivateKey: java.math.BigInteger getX()>();

        $r5 = new org.bouncycastle.crypto.params.DHParameters;

        $r6 = interfaceinvoke r2.<javax.crypto.interfaces.DHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r7 = virtualinvoke $r6.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $r8 = interfaceinvoke r2.<javax.crypto.interfaces.DHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r9 = virtualinvoke $r8.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        $r10 = interfaceinvoke r2.<javax.crypto.interfaces.DHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $i0 = virtualinvoke $r10.<javax.crypto.spec.DHParameterSpec: int getL()>();

        specialinvoke $r5.<org.bouncycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int)>($r7, $r9, null, $i0);

        specialinvoke $r3.<org.bouncycastle.crypto.params.DHPrivateKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.DHParameters)>($r4, $r5);

        return $r3;

     label1:
        $r1 = new java.security.InvalidKeyException;

        specialinvoke $r1.<java.security.InvalidKeyException: void <init>(java.lang.String)>("can\'t identify DH private key.");

        throw $r1;
    }
}
