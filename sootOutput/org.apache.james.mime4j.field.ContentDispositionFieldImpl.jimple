public class org.apache.james.mime4j.field.ContentDispositionFieldImpl extends org.apache.james.mime4j.field.AbstractField implements org.apache.james.mime4j.dom.field.ContentDispositionField
{
    private boolean parsed;
    private java.lang.String dispositionType;
    private java.util.Map parameters;
    private org.apache.james.mime4j.field.contentdisposition.parser.ParseException parseException;
    private boolean creationDateParsed;
    private java.util.Date creationDate;
    private boolean modificationDateParsed;
    private java.util.Date modificationDate;
    private boolean readDateParsed;
    private java.util.Date readDate;
    public static final org.apache.james.mime4j.dom.FieldParser PARSER;

    void <init>(org.apache.james.mime4j.stream.Field, org.apache.james.mime4j.codec.DecodeMonitor)
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        org.apache.james.mime4j.codec.DecodeMonitor r2;
        java.util.HashMap $r3;
        org.apache.james.mime4j.stream.Field r1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        r1 := @parameter0: org.apache.james.mime4j.stream.Field;

        r2 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        specialinvoke r0.<org.apache.james.mime4j.field.AbstractField: void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor)>(r1, r2);

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed> = 0;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String dispositionType> = "";

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Map parameters> = $r3;

        return;
    }

    public org.apache.james.mime4j.field.contentdisposition.parser.ParseException getParseException()
    {
        org.apache.james.mime4j.field.contentdisposition.parser.ParseException $r1;
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.field.contentdisposition.parser.ParseException parseException>;

        return $r1;
    }

    public java.lang.String getDispositionType()
    {
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String dispositionType>;

        return $r1;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.util.Map $r2;
        java.lang.Object $r4;
        java.lang.String r1, $r3, $r5;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: void parse()>();

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Map parameters>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public java.util.Map getParameters()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.util.Map $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Map parameters>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public boolean isDispositionType(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.lang.String r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: void parse()>();

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String dispositionType>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        return $z1;
    }

    public boolean isInline()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String dispositionType>;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("inline");

        return $z1;
    }

    public boolean isAttachment()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String dispositionType>;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("attachment");

        return $z1;
    }

    public java.lang.String getFilename()
    {
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String getParameter(java.lang.String)>("filename");

        return $r1;
    }

    public java.util.Date getCreationDate()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.util.Date $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean creationDateParsed>;

        if $z0 != 0 goto label1;

        $r2 = specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date parseDate(java.lang.String)>("creation-date");

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date creationDate> = $r2;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean creationDateParsed> = 1;

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date creationDate>;

        return $r1;
    }

    public java.util.Date getModificationDate()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.util.Date $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean modificationDateParsed>;

        if $z0 != 0 goto label1;

        $r2 = specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date parseDate(java.lang.String)>("modification-date");

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date modificationDate> = $r2;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean modificationDateParsed> = 1;

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date modificationDate>;

        return $r1;
    }

    public java.util.Date getReadDate()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.util.Date $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean readDateParsed>;

        if $z0 != 0 goto label1;

        $r2 = specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date parseDate(java.lang.String)>("read-date");

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date readDate> = $r2;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean readDateParsed> = 1;

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Date readDate>;

        return $r1;
    }

    public long getSize()
    {
        byte $b1;
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        int $i3;
        long $l0, $l2;
        java.lang.NumberFormatException $r2;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String getParameter(java.lang.String)>("size");

        if $r1 != null goto label1;

        return -1L;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label2;

        $l2 = -1L;

        goto label3;

     label2:
        $l2 = $l0;

     label3:
        return $l2;

     label4:
        $r2 := @caughtexception;

        return -1L;

        catch java.lang.NumberFormatException from label1 to label3 with label4;
    }

    private java.util.Date parseDate(java.lang.String)
    {
        org.apache.james.mime4j.field.datetime.parser.DateTimeParser $r3;
        java.util.Date $r6;
        org.apache.james.mime4j.field.datetime.parser.ParseException $r24;
        boolean $z0;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r14, $r16, $r17, $r18, $r20, $r21, $r22, $r26, $r28, $r29, $r30, $r32, $r33, $r34;
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        org.apache.james.mime4j.field.contentdisposition.parser.TokenMgrError $r13;
        java.lang.String r1, $r2, $r12, $r19, $r23, $r31, $r35;
        java.io.StringReader $r4;
        org.apache.james.mime4j.dom.datetime.DateTime $r5;
        org.apache.james.mime4j.codec.DecodeMonitor $r8, $r15, $r25, $r27;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String getParameter(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r8 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parsing ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" null");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>($r12, "returning null");

        return null;

     label1:
        $r3 = new org.apache.james.mime4j.field.datetime.parser.DateTimeParser;

        $r4 = new java.io.StringReader;

        specialinvoke $r4.<java.io.StringReader: void <init>(java.lang.String)>($r2);

        specialinvoke $r3.<org.apache.james.mime4j.field.datetime.parser.DateTimeParser: void <init>(java.io.Reader)>($r4);

        $r5 = virtualinvoke $r3.<org.apache.james.mime4j.field.datetime.parser.DateTimeParser: org.apache.james.mime4j.dom.datetime.DateTime parseAll()>();

        $r6 = virtualinvoke $r5.<org.apache.james.mime4j.dom.datetime.DateTime: java.util.Date getDate()>();

     label2:
        return $r6;

     label3:
        $r24 := @caughtexception;

        $r25 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $z0 = virtualinvoke $r25.<org.apache.james.mime4j.codec.DecodeMonitor: boolean isListening()>();

        if $z0 == 0 goto label4;

        $r27 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parameter is invalid: ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parameter is ignored");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>($r31, $r35);

     label4:
        return null;

     label5:
        $r13 := @caughtexception;

        $r15 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parameter is invalid: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parameter is ignored");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>($r19, $r23);

        return null;

        catch org.apache.james.mime4j.field.datetime.parser.ParseException from label1 to label2 with label3;
        catch org.apache.james.mime4j.field.contentdisposition.parser.TokenMgrError from label1 to label2 with label5;
    }

    private void parse()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;
        java.util.Locale $r4, $r9;
        java.util.Map $r14;
        org.apache.james.mime4j.field.contentdisposition.parser.TokenMgrError $r15;
        int $i0, $i1, $i2, i3;
        java.lang.String $r1, $r5, $r10, $r11, r13, $r17, $r19;
        org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParser $r2;
        java.util.List $r6, $r7;
        java.io.StringReader $r3;
        java.lang.Object $r8, $r12;
        org.apache.james.mime4j.field.contentdisposition.parser.ParseException $r16, $r18;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String getBody()>();

        $r2 = new org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParser;

        $r3 = new java.io.StringReader;

        specialinvoke $r3.<java.io.StringReader: void <init>(java.lang.String)>($r1);

        specialinvoke $r2.<org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParser: void <init>(java.io.Reader)>($r3);

     label1:
        virtualinvoke $r2.<org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParser: void parseAll()>();

     label2:
        goto label5;

     label3:
        $r18 := @caughtexception;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.field.contentdisposition.parser.ParseException parseException> = $r18;

        goto label5;

     label4:
        $r15 := @caughtexception;

        $r16 = new org.apache.james.mime4j.field.contentdisposition.parser.ParseException;

        $r17 = virtualinvoke $r15.<org.apache.james.mime4j.field.contentdisposition.parser.TokenMgrError: java.lang.String getMessage()>();

        specialinvoke $r16.<org.apache.james.mime4j.field.contentdisposition.parser.ParseException: void <init>(java.lang.String)>($r17);

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.field.contentdisposition.parser.ParseException parseException> = $r16;

     label5:
        $r19 = virtualinvoke $r2.<org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParser: java.lang.String getDispositionType()>();

        if $r19 == null goto label7;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = virtualinvoke $r19.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.lang.String dispositionType> = $r5;

        $r6 = virtualinvoke $r2.<org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParser: java.util.List getParamNames()>();

        $r7 = virtualinvoke $r2.<org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParser: java.util.List getParamValues()>();

        if $r6 == null goto label7;

        if $r7 == null goto label7;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        i3 = 0;

     label6:
        if i3 >= $i2 goto label7;

        $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i3);

        $r10 = (java.lang.String) $r8;

        $r9 = <java.util.Locale: java.util.Locale US>;

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r9);

        $r12 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i3);

        r13 = (java.lang.String) $r12;

        $r14 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: java.util.Map parameters>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r13);

        i3 = i3 + 1;

        goto label6;

     label7:
        r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: boolean parsed> = 1;

        return;

        catch org.apache.james.mime4j.field.contentdisposition.parser.ParseException from label1 to label2 with label3;
        catch org.apache.james.mime4j.field.contentdisposition.parser.TokenMgrError from label1 to label2 with label4;
    }

    public volatile org.apache.james.mime4j.dom.field.ParseException getParseException()
    {
        org.apache.james.mime4j.field.contentdisposition.parser.ParseException $r1;
        org.apache.james.mime4j.field.ContentDispositionFieldImpl r0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldImpl;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.field.contentdisposition.parser.ParseException getParseException()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldImpl$1 $r0;

        $r0 = new org.apache.james.mime4j.field.ContentDispositionFieldImpl$1;

        specialinvoke $r0.<org.apache.james.mime4j.field.ContentDispositionFieldImpl$1: void <init>()>();

        <org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER> = $r0;

        return;
    }
}
