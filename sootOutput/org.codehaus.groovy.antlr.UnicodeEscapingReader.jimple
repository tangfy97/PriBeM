public class org.codehaus.groovy.antlr.UnicodeEscapingReader extends java.io.Reader
{
    private final java.io.Reader reader;
    private groovyjarjarantlr.CharScanner lexer;
    private boolean hasNextChar;
    private int nextChar;
    private final org.codehaus.groovy.antlr.SourceBuffer sourceBuffer;

    public void <init>(java.io.Reader, org.codehaus.groovy.antlr.SourceBuffer)
    {
        org.codehaus.groovy.antlr.SourceBuffer r2;
        org.codehaus.groovy.antlr.UnicodeEscapingReader r0;
        java.io.Reader r1;

        r0 := @this: org.codehaus.groovy.antlr.UnicodeEscapingReader;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: org.codehaus.groovy.antlr.SourceBuffer;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: boolean hasNextChar> = 0;

        r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: java.io.Reader reader> = r1;

        r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: org.codehaus.groovy.antlr.SourceBuffer sourceBuffer> = r2;

        return;
    }

    public void setLexer(groovyjarjarantlr.CharScanner)
    {
        org.codehaus.groovy.antlr.UnicodeEscapingReader r0;
        groovyjarjarantlr.CharScanner r1;

        r0 := @this: org.codehaus.groovy.antlr.UnicodeEscapingReader;

        r1 := @parameter0: groovyjarjarantlr.CharScanner;

        r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: groovyjarjarantlr.CharScanner lexer> = r1;

        return;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        org.codehaus.groovy.antlr.UnicodeEscapingReader r0;
        char $c3;
        int i0, $i1, i2, $i4, i5, i6, $i7, $i9, $i11, $i13;
        char[] r1;

        r0 := @this: org.codehaus.groovy.antlr.UnicodeEscapingReader;

        r1 := @parameter0: char[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        i5 = 0;

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        $i1 = virtualinvoke r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: int read()>();

        i5 = $i1;

        $i9 = (int) -1;

        if $i1 == $i9 goto label2;

        $i4 = i2 + i6;

        $c3 = (char) $i1;

        r1[$i4] = $c3;

        i6 = i6 + 1;

        goto label1;

     label2:
        if i6 != 0 goto label3;

        $i11 = (int) -1;

        if i5 != $i11 goto label3;

        $i13 = (int) -1;

        $i7 = $i13;

        goto label4;

     label3:
        $i7 = i6;

     label4:
        return $i7;
    }

    public int read() throws java.io.IOException
    {
        java.lang.StringBuffer $r4;
        int $i0, $i1, $i2, $i4, $i5, $i7, $i8, i9;
        java.lang.String $r5;
        boolean $z0;
        org.codehaus.groovy.antlr.UnicodeEscapingReader r0;
        char $c3, $c6;
        java.io.Reader $r1, $r2, $r3, $r6;

        r0 := @this: org.codehaus.groovy.antlr.UnicodeEscapingReader;

        $z0 = r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: boolean hasNextChar>;

        if $z0 == 0 goto label1;

        r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: boolean hasNextChar> = 0;

        $i7 = r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: int nextChar>;

        specialinvoke r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: void write(int)>($i7);

        $i8 = r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: int nextChar>;

        return $i8;

     label1:
        $r1 = r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: java.io.Reader reader>;

        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

        if $i0 == 92 goto label2;

        specialinvoke r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: void write(int)>($i0);

        return $i0;

     label2:
        $r2 = r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: java.io.Reader reader>;

        $i1 = virtualinvoke $r2.<java.io.Reader: int read()>();

        if $i1 == 117 goto label3;

        r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: boolean hasNextChar> = 1;

        r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: int nextChar> = $i1;

        specialinvoke r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: void write(int)>(92);

        return 92;

     label3:
        $r3 = r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: java.io.Reader reader>;

        $i2 = virtualinvoke $r3.<java.io.Reader: int read()>();

        if $i2 == 117 goto label3;

        specialinvoke r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: void checkHexDigit(int)>($i2);

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $c3 = (char) $i2;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        i9 = 0;

     label4:
        if i9 >= 3 goto label5;

        $r6 = r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: java.io.Reader reader>;

        $i5 = virtualinvoke $r6.<java.io.Reader: int read()>();

        specialinvoke r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: void checkHexDigit(int)>($i5);

        $c6 = (char) $i5;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        i9 = i9 + 1;

        goto label4;

     label5:
        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r5, 16);

        specialinvoke r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: void write(int)>($i4);

        return $i4;
    }

    private void write(int)
    {
        org.codehaus.groovy.antlr.SourceBuffer $r1, $r2;
        org.codehaus.groovy.antlr.UnicodeEscapingReader r0;
        int i0;

        r0 := @this: org.codehaus.groovy.antlr.UnicodeEscapingReader;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: org.codehaus.groovy.antlr.SourceBuffer sourceBuffer>;

        if $r1 == null goto label1;

        $r2 = r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: org.codehaus.groovy.antlr.SourceBuffer sourceBuffer>;

        virtualinvoke $r2.<org.codehaus.groovy.antlr.SourceBuffer: void write(int)>(i0);

     label1:
        return;
    }

    private void checkHexDigit(int) throws java.io.IOException
    {
        org.codehaus.groovy.antlr.UnicodeEscapingReader r0;
        java.io.IOException $r1;
        java.lang.StringBuffer $r2, $r3, $r5, $r6, $r8;
        int i0, $i1, $i2;
        java.lang.String $r9;
        groovyjarjarantlr.CharScanner $r4, $r7;

        r0 := @this: org.codehaus.groovy.antlr.UnicodeEscapingReader;

        i0 := @parameter0: int;

        if i0 < 48 goto label1;

        if i0 > 57 goto label1;

        return;

     label1:
        if i0 < 97 goto label2;

        if i0 > 102 goto label2;

        return;

     label2:
        if i0 < 65 goto label3;

        if i0 > 70 goto label3;

        return;

     label3:
        r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: boolean hasNextChar> = 1;

        r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: int nextChar> = i0;

        $r1 = new java.io.IOException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Did not find four digit hex character code. line: ");

        $r4 = r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: groovyjarjarantlr.CharScanner lexer>;

        $i1 = virtualinvoke $r4.<groovyjarjarantlr.CharScanner: int getLine()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" col:");

        $r7 = r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: groovyjarjarantlr.CharScanner lexer>;

        $i2 = virtualinvoke $r7.<groovyjarjarantlr.CharScanner: int getColumn()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r1;
    }

    public void close() throws java.io.IOException
    {
        org.codehaus.groovy.antlr.UnicodeEscapingReader r0;
        java.io.Reader $r1;

        r0 := @this: org.codehaus.groovy.antlr.UnicodeEscapingReader;

        $r1 = r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: java.io.Reader reader>;

        virtualinvoke $r1.<java.io.Reader: void close()>();

        return;
    }
}
