class org.apache.lucene.queries.function.valuesource.LinearFloatFunction$1 extends org.apache.lucene.queries.function.docvalues.FloatDocValues
{
    final org.apache.lucene.queries.function.FunctionValues val$vals;
    final org.apache.lucene.queries.function.valuesource.LinearFloatFunction this$0;

    void <init>(org.apache.lucene.queries.function.valuesource.LinearFloatFunction, org.apache.lucene.queries.function.ValueSource, org.apache.lucene.queries.function.FunctionValues)
    {
        org.apache.lucene.queries.function.valuesource.LinearFloatFunction$1 r0;
        org.apache.lucene.queries.function.ValueSource r3;
        org.apache.lucene.queries.function.valuesource.LinearFloatFunction r1;
        org.apache.lucene.queries.function.FunctionValues r2;

        r0 := @this: org.apache.lucene.queries.function.valuesource.LinearFloatFunction$1;

        r1 := @parameter0: org.apache.lucene.queries.function.valuesource.LinearFloatFunction;

        r3 := @parameter1: org.apache.lucene.queries.function.ValueSource;

        r2 := @parameter2: org.apache.lucene.queries.function.FunctionValues;

        r0.<org.apache.lucene.queries.function.valuesource.LinearFloatFunction$1: org.apache.lucene.queries.function.valuesource.LinearFloatFunction this$0> = r1;

        r0.<org.apache.lucene.queries.function.valuesource.LinearFloatFunction$1: org.apache.lucene.queries.function.FunctionValues val$vals> = r2;

        specialinvoke r0.<org.apache.lucene.queries.function.docvalues.FloatDocValues: void <init>(org.apache.lucene.queries.function.ValueSource)>(r3);

        return;
    }

    public float floatVal(int)
    {
        org.apache.lucene.queries.function.valuesource.LinearFloatFunction$1 r0;
        org.apache.lucene.queries.function.valuesource.LinearFloatFunction $r2, $r3;
        int i0;
        float $f0, $f1, $f2, $f3, $f4;
        org.apache.lucene.queries.function.FunctionValues $r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.LinearFloatFunction$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.LinearFloatFunction$1: org.apache.lucene.queries.function.FunctionValues val$vals>;

        $f0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: float floatVal(int)>(i0);

        $r2 = r0.<org.apache.lucene.queries.function.valuesource.LinearFloatFunction$1: org.apache.lucene.queries.function.valuesource.LinearFloatFunction this$0>;

        $f1 = $r2.<org.apache.lucene.queries.function.valuesource.LinearFloatFunction: float slope>;

        $f3 = $f0 * $f1;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.LinearFloatFunction$1: org.apache.lucene.queries.function.valuesource.LinearFloatFunction this$0>;

        $f2 = $r3.<org.apache.lucene.queries.function.valuesource.LinearFloatFunction: float intercept>;

        $f4 = $f3 + $f2;

        return $f4;
    }

    public java.lang.String toString(int)
    {
        org.apache.lucene.queries.function.valuesource.LinearFloatFunction$1 r1;
        org.apache.lucene.queries.function.valuesource.LinearFloatFunction $r2, $r9;
        int i0;
        float $f0, $f1;
        java.lang.StringBuilder $r0, $r3, $r4, $r7, $r8, $r10;
        org.apache.lucene.queries.function.FunctionValues $r5;
        java.lang.String $r6, $r11;

        r1 := @this: org.apache.lucene.queries.function.valuesource.LinearFloatFunction$1;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.queries.function.valuesource.LinearFloatFunction$1: org.apache.lucene.queries.function.valuesource.LinearFloatFunction this$0>;

        $f0 = $r2.<org.apache.lucene.queries.function.valuesource.LinearFloatFunction: float slope>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*float(");

        $r5 = r1.<org.apache.lucene.queries.function.valuesource.LinearFloatFunction$1: org.apache.lucene.queries.function.FunctionValues val$vals>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.queries.function.FunctionValues: java.lang.String toString(int)>(i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")+");

        $r9 = r1.<org.apache.lucene.queries.function.valuesource.LinearFloatFunction$1: org.apache.lucene.queries.function.valuesource.LinearFloatFunction this$0>;

        $f1 = $r9.<org.apache.lucene.queries.function.valuesource.LinearFloatFunction: float intercept>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }
}
