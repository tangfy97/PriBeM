public class com.mycila.inject.internal.cglib.util.ParallelSorter$Generator extends com.mycila.inject.internal.cglib.core.AbstractClassGenerator
{
    private static final com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source SOURCE;
    private java.lang.Object[] arrays;

    public void <init>()
    {
        com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source $r1;
        com.mycila.inject.internal.cglib.util.ParallelSorter$Generator r0;

        r0 := @this: com.mycila.inject.internal.cglib.util.ParallelSorter$Generator;

        $r1 = <com.mycila.inject.internal.cglib.util.ParallelSorter$Generator: com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source SOURCE>;

        specialinvoke r0.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator: void <init>(com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source)>($r1);

        return;
    }

    protected java.lang.ClassLoader getDefaultClassLoader()
    {
        com.mycila.inject.internal.cglib.util.ParallelSorter$Generator r0;

        r0 := @this: com.mycila.inject.internal.cglib.util.ParallelSorter$Generator;

        return null;
    }

    public void setArrays(java.lang.Object[])
    {
        java.lang.Object[] r1;
        com.mycila.inject.internal.cglib.util.ParallelSorter$Generator r0;

        r0 := @this: com.mycila.inject.internal.cglib.util.ParallelSorter$Generator;

        r1 := @parameter0: java.lang.Object[];

        r0.<com.mycila.inject.internal.cglib.util.ParallelSorter$Generator: java.lang.Object[] arrays> = r1;

        return;
    }

    public com.mycila.inject.internal.cglib.util.ParallelSorter create()
    {
        java.lang.Object[] $r1;
        com.mycila.inject.internal.cglib.util.ParallelSorter$Generator r0;
        java.lang.Object $r2, $r3;
        com.mycila.inject.internal.cglib.util.ParallelSorter $r4;

        r0 := @this: com.mycila.inject.internal.cglib.util.ParallelSorter$Generator;

        $r1 = r0.<com.mycila.inject.internal.cglib.util.ParallelSorter$Generator: java.lang.Object[] arrays>;

        $r2 = staticinvoke <com.mycila.inject.internal.cglib.core.ClassesKey: java.lang.Object create(java.lang.Object[])>($r1);

        $r3 = specialinvoke r0.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator: java.lang.Object create(java.lang.Object)>($r2);

        $r4 = (com.mycila.inject.internal.cglib.util.ParallelSorter) $r3;

        return $r4;
    }

    public void generateClass(com.mycila.inject.internal.asm.ClassVisitor) throws java.lang.Exception
    {
        java.lang.Object[] $r1, $r2, $r6, $r7, $r12;
        com.mycila.inject.internal.cglib.util.ParallelSorter$Generator r0;
        java.lang.StringBuffer $r11, $r15, $r16;
        int $i0, $i1, i2;
        java.lang.String $r5, $r17;
        com.mycila.inject.internal.asm.ClassVisitor r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r10, $r18;
        com.mycila.inject.internal.cglib.util.ParallelSorterEmitter $r3;
        java.lang.Object $r8, $r13;
        java.lang.Class $r9, $r14;

        r0 := @this: com.mycila.inject.internal.cglib.util.ParallelSorter$Generator;

        r4 := @parameter0: com.mycila.inject.internal.asm.ClassVisitor;

        $r1 = r0.<com.mycila.inject.internal.cglib.util.ParallelSorter$Generator: java.lang.Object[] arrays>;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No arrays specified to sort");

        throw $r18;

     label1:
        i2 = 0;

     label2:
        $r2 = r0.<com.mycila.inject.internal.cglib.util.ParallelSorter$Generator: java.lang.Object[] arrays>;

        $i1 = lengthof $r2;

        if i2 >= $i1 goto label4;

        $r7 = r0.<com.mycila.inject.internal.cglib.util.ParallelSorter$Generator: java.lang.Object[] arrays>;

        $r8 = $r7[i2];

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r9.<java.lang.Class: boolean isArray()>();

        if $z0 != 0 goto label3;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = r0.<com.mycila.inject.internal.cglib.util.ParallelSorter$Generator: java.lang.Object[] arrays>;

        $r13 = $r12[i2];

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not an array");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r10;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        $r3 = new com.mycila.inject.internal.cglib.util.ParallelSorterEmitter;

        $r5 = virtualinvoke r0.<com.mycila.inject.internal.cglib.util.ParallelSorter$Generator: java.lang.String getClassName()>();

        $r6 = r0.<com.mycila.inject.internal.cglib.util.ParallelSorter$Generator: java.lang.Object[] arrays>;

        specialinvoke $r3.<com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: void <init>(com.mycila.inject.internal.asm.ClassVisitor,java.lang.String,java.lang.Object[])>(r4, $r5, $r6);

        return;
    }

    protected java.lang.Object firstInstance(java.lang.Class)
    {
        java.lang.Object[] $r3;
        com.mycila.inject.internal.cglib.util.ParallelSorter$Generator r2;
        java.lang.Class r0;
        java.lang.Object $r1;
        com.mycila.inject.internal.cglib.util.ParallelSorter $r4, $r5;

        r2 := @this: com.mycila.inject.internal.cglib.util.ParallelSorter$Generator;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <com.mycila.inject.internal.cglib.core.ReflectUtils: java.lang.Object newInstance(java.lang.Class)>(r0);

        $r4 = (com.mycila.inject.internal.cglib.util.ParallelSorter) $r1;

        $r3 = r2.<com.mycila.inject.internal.cglib.util.ParallelSorter$Generator: java.lang.Object[] arrays>;

        $r5 = virtualinvoke $r4.<com.mycila.inject.internal.cglib.util.ParallelSorter: com.mycila.inject.internal.cglib.util.ParallelSorter newInstance(java.lang.Object[])>($r3);

        return $r5;
    }

    protected java.lang.Object nextInstance(java.lang.Object)
    {
        java.lang.Object[] $r2;
        com.mycila.inject.internal.cglib.util.ParallelSorter$Generator r1;
        java.lang.Object r0;
        com.mycila.inject.internal.cglib.util.ParallelSorter $r3, $r4;

        r1 := @this: com.mycila.inject.internal.cglib.util.ParallelSorter$Generator;

        r0 := @parameter0: java.lang.Object;

        $r3 = (com.mycila.inject.internal.cglib.util.ParallelSorter) r0;

        $r2 = r1.<com.mycila.inject.internal.cglib.util.ParallelSorter$Generator: java.lang.Object[] arrays>;

        $r4 = virtualinvoke $r3.<com.mycila.inject.internal.cglib.util.ParallelSorter: com.mycila.inject.internal.cglib.util.ParallelSorter newInstance(java.lang.Object[])>($r2);

        return $r4;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source $r0;
        java.lang.Class $r1, $r3;
        java.lang.String $r2;

        $r0 = new com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source;

        $r1 = <com.mycila.inject.internal.cglib.util.ParallelSorter: java.lang.Class class$net$sf$cglib$util$ParallelSorter>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <com.mycila.inject.internal.cglib.util.ParallelSorter: java.lang.Class class$(java.lang.String)>("com.mycila.inject.internal.cglib.util.ParallelSorter");

        <com.mycila.inject.internal.cglib.util.ParallelSorter: java.lang.Class class$net$sf$cglib$util$ParallelSorter> = $r3;

        goto label2;

     label1:
        $r3 = <com.mycila.inject.internal.cglib.util.ParallelSorter: java.lang.Class class$net$sf$cglib$util$ParallelSorter>;

     label2:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source: void <init>(java.lang.String)>($r2);

        <com.mycila.inject.internal.cglib.util.ParallelSorter$Generator: com.mycila.inject.internal.cglib.core.AbstractClassGenerator$Source SOURCE> = $r0;

        return;
    }
}
