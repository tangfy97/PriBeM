public class org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter extends org.codehaus.jettison.AbstractXMLStreamWriter
{
    org.codehaus.jettison.json.JSONObject root;
    org.codehaus.jettison.json.JSONObject currentNode;
    java.io.Writer writer;
    org.codehaus.jettison.util.FastStack nodes;
    java.lang.String currentKey;
    int depth;
    javax.xml.namespace.NamespaceContext ctx;

    public void <init>(java.io.Writer)
    {
        org.codehaus.jettison.XsonNamespaceContext $r2;
        org.codehaus.jettison.util.FastStack $r1, $r3;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;
        java.io.Writer r6;
        org.codehaus.jettison.json.JSONObject $r4, $r5;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r6 := @parameter0: java.io.Writer;

        specialinvoke r0.<org.codehaus.jettison.AbstractXMLStreamWriter: void <init>()>();

        $r1 = new org.codehaus.jettison.util.FastStack;

        specialinvoke $r1.<org.codehaus.jettison.util.FastStack: void <init>()>();

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.util.FastStack nodes> = $r1;

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: int depth> = 0;

        $r2 = new org.codehaus.jettison.XsonNamespaceContext;

        $r3 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.util.FastStack nodes>;

        specialinvoke $r2.<org.codehaus.jettison.XsonNamespaceContext: void <init>(org.codehaus.jettison.util.FastStack)>($r3);

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: javax.xml.namespace.NamespaceContext ctx> = $r2;

        $r4 = new org.codehaus.jettison.json.JSONObject;

        specialinvoke $r4.<org.codehaus.jettison.json.JSONObject: void <init>()>();

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject currentNode> = $r4;

        $r5 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject currentNode>;

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject root> = $r5;

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: java.io.Writer writer> = r6;

        return;
    }

    public void close() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        return;
    }

    public void flush() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        return;
    }

    public javax.xml.namespace.NamespaceContext getNamespaceContext()
    {
        javax.xml.namespace.NamespaceContext $r1;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        $r1 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: javax.xml.namespace.NamespaceContext ctx>;

        return $r1;
    }

    public java.lang.String getPrefix(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;
        javax.xml.namespace.NamespaceContext $r1;
        java.lang.String r2, $r3;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: javax.xml.namespace.NamespaceContext getNamespaceContext()>();

        $r3 = interfaceinvoke $r1.<javax.xml.namespace.NamespaceContext: java.lang.String getPrefix(java.lang.String)>(r2);

        return $r3;
    }

    public java.lang.Object getProperty(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r1;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public void setDefaultNamespace(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void setNamespaceContext(javax.xml.namespace.NamespaceContext) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.namespace.NamespaceContext r1;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r1 := @parameter0: javax.xml.namespace.NamespaceContext;

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: javax.xml.namespace.NamespaceContext ctx> = r1;

        return;
    }

    public void setPrefix(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1, r2;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.json.JSONObject $r6;
        org.codehaus.jettison.json.JSONException $r7;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;
        javax.xml.stream.XMLStreamException $r8;
        java.lang.String r1, r2, r3, $r4, r5;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        $r4 = specialinvoke r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: java.lang.String createAttributeKey(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

     label1:
        $r6 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject currentNode>;

        virtualinvoke $r6.<org.codehaus.jettison.json.JSONObject: org.codehaus.jettison.json.JSONObject put(java.lang.String,java.lang.Object)>($r4, r5);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r8.<javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label4:
        return;

        catch org.codehaus.jettison.json.JSONException from label1 to label2 with label3;
    }

    private java.lang.String createAttributeKey(java.lang.String, java.lang.String, java.lang.String)
    {
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r2;
        java.lang.StringBuilder $r0, $r1, $r7;
        java.lang.String r3, r4, r5, $r6, $r8;

        r2 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r6 = specialinvoke r2.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: java.lang.String createKey(java.lang.String,java.lang.String,java.lang.String)>(r3, r4, r5);

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private java.lang.String createKey(java.lang.String, java.lang.String, java.lang.String)
    {
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r7;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String r0, r1, $r6, r8;
        boolean $z0;

        r7 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r0 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        return r1;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void writeAttribute(java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, r1, r2, r3);

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1, r2;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, r2);

        return;
    }

    public void writeCharacters(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.json.JSONObject $r1, $r4, $r6;
        org.codehaus.jettison.json.JSONArray $r5, $r7;
        org.codehaus.jettison.json.JSONException $r8;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;
        javax.xml.stream.XMLStreamException $r9;
        java.lang.Object $r2;
        java.lang.String r3;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r3 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject currentNode>;

        $r2 = virtualinvoke $r1.<org.codehaus.jettison.json.JSONObject: java.lang.Object opt(java.lang.String)>("$");

        $z0 = $r2 instanceof org.codehaus.jettison.json.JSONArray;

        if $z0 == 0 goto label2;

        $r7 = (org.codehaus.jettison.json.JSONArray) $r2;

        virtualinvoke $r7.<org.codehaus.jettison.json.JSONArray: org.codehaus.jettison.json.JSONArray put(java.lang.Object)>(r3);

        goto label4;

     label2:
        $z1 = $r2 instanceof java.lang.String;

        if $z1 == 0 goto label3;

        $r5 = new org.codehaus.jettison.json.JSONArray;

        specialinvoke $r5.<org.codehaus.jettison.json.JSONArray: void <init>()>();

        virtualinvoke $r5.<org.codehaus.jettison.json.JSONArray: org.codehaus.jettison.json.JSONArray put(java.lang.Object)>($r2);

        virtualinvoke $r5.<org.codehaus.jettison.json.JSONArray: org.codehaus.jettison.json.JSONArray put(java.lang.Object)>(r3);

        $r6 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject currentNode>;

        virtualinvoke $r6.<org.codehaus.jettison.json.JSONObject: org.codehaus.jettison.json.JSONObject put(java.lang.String,java.lang.Object)>("$", $r5);

        goto label4;

     label3:
        $r4 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject currentNode>;

        virtualinvoke $r4.<org.codehaus.jettison.json.JSONObject: org.codehaus.jettison.json.JSONObject put(java.lang.String,java.lang.Object)>("$", r3);

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        $r9 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r9.<javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label6:
        return;

        catch org.codehaus.jettison.json.JSONException from label1 to label4 with label5;
    }

    public void writeDefaultNamespace(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>("", r1);

        return;
    }

    public void writeEndElement() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.util.FastStack $r1, $r2, $r3;
        org.codehaus.jettison.Node $r5;
        org.codehaus.jettison.json.JSONObject $r6;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;
        int $i0, $i1, $i2;
        java.lang.Object $r4;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        $r1 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.util.FastStack nodes>;

        $i0 = virtualinvoke $r1.<org.codehaus.jettison.util.FastStack: int size()>();

        if $i0 <= 1 goto label1;

        $r2 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.util.FastStack nodes>;

        virtualinvoke $r2.<org.codehaus.jettison.util.FastStack: java.lang.Object pop()>();

        $r3 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.util.FastStack nodes>;

        $r4 = virtualinvoke $r3.<org.codehaus.jettison.util.FastStack: java.lang.Object peek()>();

        $r5 = (org.codehaus.jettison.Node) $r4;

        $r6 = virtualinvoke $r5.<org.codehaus.jettison.Node: org.codehaus.jettison.json.JSONObject getObject()>();

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject currentNode> = $r6;

     label1:
        $i1 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: int depth>;

        $i2 = $i1 - 1;

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: int depth> = $i2;

        return;
    }

    public void writeEntityRef(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void writeNamespace(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.util.FastStack $r1;
        org.codehaus.jettison.Node $r4;
        org.codehaus.jettison.json.JSONObject $r5, $r6, $r7, $r8, r12;
        org.codehaus.jettison.json.JSONException $r9;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;
        javax.xml.stream.XMLStreamException $r10;
        java.lang.Object $r2;
        java.lang.String r3, r11;
        boolean $z0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r11 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.util.FastStack nodes>;

        $r2 = virtualinvoke $r1.<org.codehaus.jettison.util.FastStack: java.lang.Object peek()>();

        $r4 = (org.codehaus.jettison.Node) $r2;

        virtualinvoke $r4.<org.codehaus.jettison.Node: void setNamespace(java.lang.String,java.lang.String)>(r11, r3);

     label1:
        $r5 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject currentNode>;

        $r6 = virtualinvoke $r5.<org.codehaus.jettison.json.JSONObject: org.codehaus.jettison.json.JSONObject optJSONObject(java.lang.String)>("@xmlns");

        r12 = $r6;

        if $r6 != null goto label2;

        $r7 = new org.codehaus.jettison.json.JSONObject;

        specialinvoke $r7.<org.codehaus.jettison.json.JSONObject: void <init>()>();

        r12 = $r7;

        $r8 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject currentNode>;

        virtualinvoke $r8.<org.codehaus.jettison.json.JSONObject: org.codehaus.jettison.json.JSONObject put(java.lang.String,java.lang.Object)>("@xmlns", $r7);

     label2:
        $z0 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label3;

        r11 = "$";

     label3:
        virtualinvoke r12.<org.codehaus.jettison.json.JSONObject: org.codehaus.jettison.json.JSONObject put(java.lang.String,java.lang.Object)>(r11, r3);

     label4:
        goto label6;

     label5:
        $r9 := @caughtexception;

        $r10 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r10.<javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label6:
        return;

        catch org.codehaus.jettison.json.JSONException from label1 to label4 with label5;
    }

    public void writeProcessingInstruction(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1, r2;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void writeProcessingInstruction(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void writeStartDocument() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        return;
    }

    public void writeEndDocument() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.json.JSONObject $r2;
        java.io.IOException $r4;
        org.codehaus.jettison.json.JSONException $r6;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;
        javax.xml.stream.XMLStreamException $r5, $r7;
        java.io.Writer $r1, $r3;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

     label1:
        $r2 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject root>;

        $r1 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: java.io.Writer writer>;

        virtualinvoke $r2.<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>($r1);

        $r3 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: java.io.Writer writer>;

        virtualinvoke $r3.<java.io.Writer: void flush()>();

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        $r7 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r7.<javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label4:
        $r4 := @caughtexception;

        $r5 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r5.<javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label5:
        return;

        catch org.codehaus.jettison.json.JSONException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public void writeStartElement(java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.util.FastStack $r13, $r21;
        org.codehaus.jettison.Node $r11, $r19;
        org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter r0;
        javax.xml.stream.XMLStreamException $r23;
        int $i0, $i1;
        java.lang.String r1, r2, r3, $r4, $r5, $r9, $r17;
        boolean $z0, $z1;
        org.codehaus.jettison.json.JSONObject $r6, $r8, $r10, $r12, $r16, $r18, $r20;
        org.codehaus.jettison.json.JSONArray $r14, $r15;
        org.codehaus.jettison.json.JSONException $r22;
        java.lang.Object $r7;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $i0 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: int depth>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: int depth> = $i1;

     label1:
        $r4 = specialinvoke r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: java.lang.String createKey(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: java.lang.String currentKey> = $r4;

        $r6 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject currentNode>;

        $r5 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: java.lang.String currentKey>;

        $r7 = virtualinvoke $r6.<org.codehaus.jettison.json.JSONObject: java.lang.Object opt(java.lang.String)>($r5);

        $z0 = $r7 instanceof org.codehaus.jettison.json.JSONObject;

        if $z0 == 0 goto label2;

        $r15 = new org.codehaus.jettison.json.JSONArray;

        specialinvoke $r15.<org.codehaus.jettison.json.JSONArray: void <init>()>();

        virtualinvoke $r15.<org.codehaus.jettison.json.JSONArray: org.codehaus.jettison.json.JSONArray put(java.lang.Object)>($r7);

        $r16 = new org.codehaus.jettison.json.JSONObject;

        specialinvoke $r16.<org.codehaus.jettison.json.JSONObject: void <init>()>();

        virtualinvoke $r15.<org.codehaus.jettison.json.JSONArray: org.codehaus.jettison.json.JSONArray put(java.lang.Object)>($r16);

        $r18 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject currentNode>;

        $r17 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: java.lang.String currentKey>;

        virtualinvoke $r18.<org.codehaus.jettison.json.JSONObject: org.codehaus.jettison.json.JSONObject put(java.lang.String,java.lang.Object)>($r17, $r15);

        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject currentNode> = $r16;

        $r19 = new org.codehaus.jettison.Node;

        $r20 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject currentNode>;

        specialinvoke $r19.<org.codehaus.jettison.Node: void <init>(org.codehaus.jettison.json.JSONObject)>($r20);

        $r21 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.util.FastStack nodes>;

        virtualinvoke $r21.<org.codehaus.jettison.util.FastStack: void push(java.lang.Object)>($r19);

        goto label5;

     label2:
        $r8 = new org.codehaus.jettison.json.JSONObject;

        specialinvoke $r8.<org.codehaus.jettison.json.JSONObject: void <init>()>();

        $z1 = $r7 instanceof org.codehaus.jettison.json.JSONArray;

        if $z1 == 0 goto label3;

        $r14 = (org.codehaus.jettison.json.JSONArray) $r7;

        virtualinvoke $r14.<org.codehaus.jettison.json.JSONArray: org.codehaus.jettison.json.JSONArray put(java.lang.Object)>($r8);

        goto label4;

     label3:
        $r10 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject currentNode>;

        $r9 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: java.lang.String currentKey>;

        virtualinvoke $r10.<org.codehaus.jettison.json.JSONObject: org.codehaus.jettison.json.JSONObject put(java.lang.String,java.lang.Object)>($r9, $r8);

     label4:
        r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject currentNode> = $r8;

        $r11 = new org.codehaus.jettison.Node;

        $r12 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.json.JSONObject currentNode>;

        specialinvoke $r11.<org.codehaus.jettison.Node: void <init>(org.codehaus.jettison.json.JSONObject)>($r12);

        $r13 = r0.<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamWriter: org.codehaus.jettison.util.FastStack nodes>;

        virtualinvoke $r13.<org.codehaus.jettison.util.FastStack: void push(java.lang.Object)>($r11);

     label5:
        goto label7;

     label6:
        $r22 := @caughtexception;

        $r23 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r23.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String,java.lang.Throwable)>("Could not write start element!", $r22);

        throw $r23;

     label7:
        return;

        catch org.codehaus.jettison.json.JSONException from label1 to label5 with label6;
    }
}
