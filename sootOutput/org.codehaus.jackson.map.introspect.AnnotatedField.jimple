public final class org.codehaus.jackson.map.introspect.AnnotatedField extends org.codehaus.jackson.map.introspect.AnnotatedMember
{
    protected final java.lang.reflect.Field _field;

    public void <init>(java.lang.reflect.Field, org.codehaus.jackson.map.introspect.AnnotationMap)
    {
        org.codehaus.jackson.map.introspect.AnnotatedField r0;
        java.lang.reflect.Field r2;
        org.codehaus.jackson.map.introspect.AnnotationMap r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        r2 := @parameter0: java.lang.reflect.Field;

        r1 := @parameter1: org.codehaus.jackson.map.introspect.AnnotationMap;

        specialinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedMember: void <init>(org.codehaus.jackson.map.introspect.AnnotationMap)>(r1);

        r0.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Field _field> = r2;

        return;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedField withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)
    {
        org.codehaus.jackson.map.introspect.AnnotatedField $r0, r1;
        java.lang.reflect.Field $r3;
        org.codehaus.jackson.map.introspect.AnnotationMap r2;

        r1 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        r2 := @parameter0: org.codehaus.jackson.map.introspect.AnnotationMap;

        $r0 = new org.codehaus.jackson.map.introspect.AnnotatedField;

        $r3 = r1.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Field _field>;

        specialinvoke $r0.<org.codehaus.jackson.map.introspect.AnnotatedField: void <init>(java.lang.reflect.Field,org.codehaus.jackson.map.introspect.AnnotationMap)>($r3, r2);

        return $r0;
    }

    public void addOrOverride(java.lang.'annotation'.Annotation)
    {
        java.lang.'annotation'.Annotation r1;
        org.codehaus.jackson.map.introspect.AnnotatedField r0;
        org.codehaus.jackson.map.introspect.AnnotationMap $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        r1 := @parameter0: java.lang.'annotation'.Annotation;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedField: org.codehaus.jackson.map.introspect.AnnotationMap _annotations>;

        virtualinvoke $r2.<org.codehaus.jackson.map.introspect.AnnotationMap: void add(java.lang.'annotation'.Annotation)>(r1);

        return;
    }

    public java.lang.reflect.Field getAnnotated()
    {
        org.codehaus.jackson.map.introspect.AnnotatedField r0;
        java.lang.reflect.Field $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Field _field>;

        return $r1;
    }

    public int getModifiers()
    {
        int $i0;
        org.codehaus.jackson.map.introspect.AnnotatedField r0;
        java.lang.reflect.Field $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Field _field>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Field: int getModifiers()>();

        return $i0;
    }

    public java.lang.String getName()
    {
        org.codehaus.jackson.map.introspect.AnnotatedField r0;
        java.lang.String $r2;
        java.lang.reflect.Field $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Field _field>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)
    {
        java.lang.'annotation'.Annotation $r3;
        org.codehaus.jackson.map.introspect.AnnotatedField r0;
        java.lang.Class r1;
        org.codehaus.jackson.map.introspect.AnnotationMap $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedField: org.codehaus.jackson.map.introspect.AnnotationMap _annotations>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.AnnotationMap: java.lang.'annotation'.Annotation get(java.lang.Class)>(r1);

        return $r3;
    }

    public java.lang.reflect.Type getGenericType()
    {
        org.codehaus.jackson.map.introspect.AnnotatedField r0;
        java.lang.reflect.Field $r1;
        java.lang.reflect.Type $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Field _field>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();

        return $r2;
    }

    public java.lang.Class getRawType()
    {
        org.codehaus.jackson.map.introspect.AnnotatedField r0;
        java.lang.Class $r2;
        java.lang.reflect.Field $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Field _field>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.Class getType()>();

        return $r2;
    }

    public java.lang.Class getDeclaringClass()
    {
        org.codehaus.jackson.map.introspect.AnnotatedField r0;
        java.lang.Class $r2;
        java.lang.reflect.Field $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Field _field>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        return $r2;
    }

    public java.lang.reflect.Member getMember()
    {
        org.codehaus.jackson.map.introspect.AnnotatedField r0;
        java.lang.reflect.Field $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Field _field>;

        return $r1;
    }

    public void setValue(java.lang.Object, java.lang.Object) throws java.lang.IllegalArgumentException
    {
        java.lang.IllegalAccessException $r4;
        java.lang.reflect.Field $r3;
        java.lang.IllegalArgumentException $r5;
        org.codehaus.jackson.map.introspect.AnnotatedField r0;
        java.lang.Object r1, r2;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r12;
        java.lang.String $r8, $r11, $r13;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Field _field>;

        virtualinvoke $r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to setValue() for field ");

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.String getFullName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = virtualinvoke $r4.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r4);

        throw $r5;

     label4:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }

    public java.lang.String getFullName()
    {
        java.lang.StringBuilder $r0, $r4, $r5, $r7;
        org.codehaus.jackson.map.introspect.AnnotatedField r1;
        java.lang.Class $r2;
        java.lang.String $r3, $r6, $r8;

        r1 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.Class getDeclaringClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r6 = virtualinvoke r1.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public int getAnnotationCount()
    {
        int $i0;
        org.codehaus.jackson.map.introspect.AnnotatedField r0;
        org.codehaus.jackson.map.introspect.AnnotationMap $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedField: org.codehaus.jackson.map.introspect.AnnotationMap _annotations>;

        $i0 = virtualinvoke $r1.<org.codehaus.jackson.map.introspect.AnnotationMap: int size()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.introspect.AnnotationMap $r6;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        org.codehaus.jackson.map.introspect.AnnotatedField r2;
        java.lang.String $r3, $r9;

        r2 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[field ");

        $r3 = virtualinvoke r2.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", annotations: ");

        $r6 = r2.<org.codehaus.jackson.map.introspect.AnnotatedField: org.codehaus.jackson.map.introspect.AnnotationMap _annotations>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public volatile java.lang.reflect.AnnotatedElement getAnnotated()
    {
        org.codehaus.jackson.map.introspect.AnnotatedField r0;
        java.lang.reflect.Field $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Field getAnnotated()>();

        return $r1;
    }

    public volatile org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)
    {
        org.codehaus.jackson.map.introspect.AnnotatedField r0, $r2;
        org.codehaus.jackson.map.introspect.AnnotationMap r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedField;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotationMap;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedField: org.codehaus.jackson.map.introspect.AnnotatedField withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)>(r1);

        return $r2;
    }
}
