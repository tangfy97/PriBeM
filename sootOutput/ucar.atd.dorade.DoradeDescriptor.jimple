abstract class ucar.atd.dorade.DoradeDescriptor extends java.lang.Object
{
    protected java.lang.String descName;
    protected java.lang.String expectedName;
    protected java.io.RandomAccessFile file;
    protected boolean littleEndianData;
    protected boolean verbose;
    protected static final java.util.TimeZone TZ_UTC;
    private static boolean defaultVerboseState;
    private static java.util.HashMap classVerboseStates;

    void <init>()
    {
        ucar.atd.dorade.DoradeDescriptor r0;

        r0 := @this: ucar.atd.dorade.DoradeDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected byte[] readDescriptor(java.io.RandomAccessFile, boolean, java.lang.String) throws ucar.atd.dorade.DoradeDescriptor$DescriptorException
    {
        java.io.RandomAccessFile r1;
        byte[] r3, r17;
        long $l0;
        int $i1;
        java.lang.String r2, $r4, $r5, $r9, $r14;
        boolean z0, $z1, $z2;
        java.io.IOException $r15;
        ucar.atd.dorade.DoradeDescriptor r0;
        ucar.atd.dorade.DoradeDescriptor$DescriptorException $r6, $r16;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r12, $r13;

        r0 := @this: ucar.atd.dorade.DoradeDescriptor;

        r1 := @parameter0: java.io.RandomAccessFile;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        r0.<ucar.atd.dorade.DoradeDescriptor: java.io.RandomAccessFile file> = r1;

        r0.<ucar.atd.dorade.DoradeDescriptor: boolean littleEndianData> = z0;

        r0.<ucar.atd.dorade.DoradeDescriptor: java.lang.String expectedName> = r2;

        $z1 = staticinvoke <ucar.atd.dorade.DoradeDescriptor: boolean getDefaultVerboseState(java.lang.String)>(r2);

        r0.<ucar.atd.dorade.DoradeDescriptor: boolean verbose> = $z1;

     label1:
        virtualinvoke r0.<ucar.atd.dorade.DoradeDescriptor: long findNext(java.io.RandomAccessFile)>(r1);

        $l0 = virtualinvoke r1.<java.io.RandomAccessFile: long getFilePointer()>();

        r3 = newarray (byte)[8];

        virtualinvoke r1.<java.io.RandomAccessFile: int read(byte[])>(r3);

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>(r3, 0, 4);

        r0.<ucar.atd.dorade.DoradeDescriptor: java.lang.String descName> = $r4;

        $i1 = virtualinvoke r0.<ucar.atd.dorade.DoradeDescriptor: int grabInt(byte[],int)>(r3, 4);

        virtualinvoke r1.<java.io.RandomAccessFile: void seek(long)>($l0);

        r17 = newarray (byte)[$i1];

        virtualinvoke r1.<java.io.RandomAccessFile: int read(byte[])>(r17);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        $r16 = new ucar.atd.dorade.DoradeDescriptor$DescriptorException;

        specialinvoke $r16.<ucar.atd.dorade.DoradeDescriptor$DescriptorException: void <init>(java.lang.Throwable)>($r15);

        throw $r16;

     label4:
        $r5 = r0.<ucar.atd.dorade.DoradeDescriptor: java.lang.String descName>;

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 != 0 goto label5;

        $r6 = new ucar.atd.dorade.DoradeDescriptor$DescriptorException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got descriptor name \'");

        $r9 = r0.<ucar.atd.dorade.DoradeDescriptor: java.lang.String descName>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' when expecting name \'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<ucar.atd.dorade.DoradeDescriptor$DescriptorException: void <init>(java.lang.String)>($r14);

        throw $r6;

     label5:
        return r17;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected static void skipDescriptor(java.io.RandomAccessFile, boolean) throws ucar.atd.dorade.DoradeDescriptor$DescriptorException, java.io.IOException
    {
        java.io.RandomAccessFile r0;
        byte[] $r1, $r2, r6;
        java.io.EOFException $r5;
        java.lang.Exception $r3;
        int $i0, $i1;
        ucar.atd.dorade.DoradeDescriptor$DescriptorException $r4;
        boolean z0;

        r0 := @parameter0: java.io.RandomAccessFile;

        z0 := @parameter1: boolean;

     label1:
        $r1 = newarray (byte)[4];

        virtualinvoke r0.<java.io.RandomAccessFile: int read(byte[])>($r1);

        r6 = newarray (byte)[4];

        virtualinvoke r0.<java.io.RandomAccessFile: int read(byte[])>(r6);

        $i0 = staticinvoke <ucar.atd.dorade.DoradeDescriptor: int grabInt(byte[],int,boolean)>(r6, 0, z0);

        $i1 = $i0 - 8;

        $r2 = newarray (byte)[$i1];

        virtualinvoke r0.<java.io.RandomAccessFile: int read(byte[])>($r2);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        return;

     label4:
        $r3 := @caughtexception;

        $r4 = new ucar.atd.dorade.DoradeDescriptor$DescriptorException;

        specialinvoke $r4.<ucar.atd.dorade.DoradeDescriptor$DescriptorException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label5:
        return;

        catch java.io.EOFException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    protected static java.lang.String peekName(java.io.RandomAccessFile) throws ucar.atd.dorade.DoradeDescriptor$DescriptorException
    {
        java.io.RandomAccessFile r0;
        byte[] r1;
        long $l0;
        java.lang.Exception $r3;
        int $i1, $i3;
        ucar.atd.dorade.DoradeDescriptor$DescriptorException $r6;
        java.lang.String $r5;

        r0 := @parameter0: java.io.RandomAccessFile;

     label1:
        $l0 = virtualinvoke r0.<java.io.RandomAccessFile: long getFilePointer()>();

        r1 = newarray (byte)[4];

        $i1 = virtualinvoke r0.<java.io.RandomAccessFile: int read(byte[])>(r1);

        $i3 = (int) -1;

        if $i1 != $i3 goto label3;

     label2:
        return null;

     label3:
        virtualinvoke r0.<java.io.RandomAccessFile: void seek(long)>($l0);

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(byte[])>(r1);

     label4:
        return $r5;

     label5:
        $r3 := @caughtexception;

        $r6 = new ucar.atd.dorade.DoradeDescriptor$DescriptorException;

        specialinvoke $r6.<ucar.atd.dorade.DoradeDescriptor$DescriptorException: void <init>(java.lang.Throwable)>($r3);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static boolean sweepfileIsLittleEndian(java.io.RandomAccessFile) throws ucar.atd.dorade.DoradeDescriptor$DescriptorException
    {
        java.io.RandomAccessFile r0;
        byte[] r3;
        int $i0;
        ucar.atd.dorade.DoradeDescriptor$DescriptorException $r2;
        java.lang.Exception $r1;
        boolean $z0;

        r0 := @parameter0: java.io.RandomAccessFile;

     label1:
        virtualinvoke r0.<java.io.RandomAccessFile: void seek(long)>(0L);

        r3 = newarray (byte)[4];

        virtualinvoke r0.<java.io.RandomAccessFile: int read(byte[])>(r3);

        $i0 = virtualinvoke r0.<java.io.RandomAccessFile: int readInt()>();

        virtualinvoke r0.<java.io.RandomAccessFile: void seek(long)>(0L);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new ucar.atd.dorade.DoradeDescriptor$DescriptorException;

        specialinvoke $r2.<ucar.atd.dorade.DoradeDescriptor$DescriptorException: void <init>(java.lang.Throwable)>($r1);

        throw $r2;

     label4:
        if $i0 < 0 goto label5;

        if $i0 <= 16777215 goto label6;

     label5:
        $z0 = 1;

        goto label7;

     label6:
        $z0 = 0;

     label7:
        return $z0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected short grabShort(byte[], int)
    {
        byte[] r1;
        short $s3, $s6, $s10;
        byte $b1, $b2;
        int i0, $i4, $i5, $i7, $i8, $i9, $i11;
        boolean $z0, $z1, $z2, $z3;
        ucar.atd.dorade.DoradeDescriptor r0;

        r0 := @this: ucar.atd.dorade.DoradeDescriptor;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $z0 = r0.<ucar.atd.dorade.DoradeDescriptor: boolean littleEndianData>;

        if $z0 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $i8 = i0 + $z2;

        $z1 = r0.<ucar.atd.dorade.DoradeDescriptor: boolean littleEndianData>;

        if $z1 == 0 goto label3;

        $z3 = 0;

        goto label4;

     label3:
        $z3 = 1;

     label4:
        $i7 = i0 + $z3;

        $b1 = r1[$i8];

        $i9 = (int) $b1;

        $i4 = $i9 << 8;

        $b2 = r1[$i7];

        $s10 = (short) $b2;

        $s3 = $s10 & 255;

        $i11 = (int) $s3;

        $i5 = $i4 | $i11;

        $s6 = (short) $i5;

        return $s6;
    }

    protected static int grabInt(byte[], int, boolean)
    {
        byte[] r0;
        short $s3, $s7, $s11, $s23, $s25, $s27;
        byte $b1, $b2, $b6, $b10, $b18, $b19, $b20, $b21;
        int i0, $i4, $i5, $i8, $i9, $i12, $i13, $i14, $i15, $i16, $i17, $i22, $i24, $i26, $i28;
        boolean z0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $b18 = 3;

        goto label2;

     label1:
        $b18 = 0;

     label2:
        $i17 = i0 + $b18;

        if z0 == 0 goto label3;

        $b19 = 2;

        goto label4;

     label3:
        $b19 = 1;

     label4:
        $i16 = i0 + $b19;

        if z0 == 0 goto label5;

        $b20 = 1;

        goto label6;

     label5:
        $b20 = 2;

     label6:
        $i15 = i0 + $b20;

        if z0 == 0 goto label7;

        $b21 = 0;

        goto label8;

     label7:
        $b21 = 3;

     label8:
        $i14 = i0 + $b21;

        $b1 = r0[$i17];

        $i22 = (int) $b1;

        $i5 = $i22 << 24;

        $b2 = r0[$i16];

        $s23 = (short) $b2;

        $s3 = $s23 & 255;

        $i24 = (int) $s3;

        $i4 = $i24 << 16;

        $i9 = $i5 | $i4;

        $b6 = r0[$i15];

        $s25 = (short) $b6;

        $s7 = $s25 & 255;

        $i26 = (int) $s7;

        $i8 = $i26 << 8;

        $i12 = $i9 | $i8;

        $b10 = r0[$i14];

        $s27 = (short) $b10;

        $s11 = $s27 & 255;

        $i28 = (int) $s11;

        $i13 = $i12 | $i28;

        return $i13;
    }

    protected int grabInt(byte[], int)
    {
        byte[] r0;
        int i0, $i1;
        ucar.atd.dorade.DoradeDescriptor r1;
        boolean $z0;

        r1 := @this: ucar.atd.dorade.DoradeDescriptor;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $z0 = r1.<ucar.atd.dorade.DoradeDescriptor: boolean littleEndianData>;

        $i1 = staticinvoke <ucar.atd.dorade.DoradeDescriptor: int grabInt(byte[],int,boolean)>(r0, i0, $z0);

        return $i1;
    }

    protected float grabFloat(byte[], int) throws ucar.atd.dorade.DoradeDescriptor$DescriptorException
    {
        byte[] r1, r6;
        java.io.DataInputStream $r2;
        java.io.ByteArrayInputStream $r3;
        byte $b1, $b3, $b5, $b7;
        int $i0, $i2, $i4, $i6, i8;
        boolean $z0;
        java.lang.Exception $r4;
        ucar.atd.dorade.DoradeDescriptor r0;
        float $f0;
        ucar.atd.dorade.DoradeDescriptor$DescriptorException $r5;

        r0 := @this: ucar.atd.dorade.DoradeDescriptor;

        r1 := @parameter0: byte[];

        i8 := @parameter1: int;

     label1:
        $z0 = r0.<ucar.atd.dorade.DoradeDescriptor: boolean littleEndianData>;

        if $z0 == 0 goto label2;

        r6 = newarray (byte)[4];

        $i0 = i8 + 3;

        $b1 = r1[$i0];

        r6[0] = $b1;

        $i2 = i8 + 2;

        $b3 = r1[$i2];

        r6[1] = $b3;

        $i4 = i8 + 1;

        $b5 = r1[$i4];

        r6[2] = $b5;

        $i6 = i8 + 0;

        $b7 = r1[$i6];

        r6[3] = $b7;

        i8 = 0;

        goto label3;

     label2:
        r6 = r1;

     label3:
        $r2 = new java.io.DataInputStream;

        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>(r6, i8, 4);

        specialinvoke $r2.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r3);

        $f0 = virtualinvoke $r2.<java.io.DataInputStream: float readFloat()>();

     label4:
        return $f0;

     label5:
        $r4 := @caughtexception;

        $r5 = new ucar.atd.dorade.DoradeDescriptor$DescriptorException;

        specialinvoke $r5.<ucar.atd.dorade.DoradeDescriptor$DescriptorException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    protected double grabDouble(byte[], int) throws ucar.atd.dorade.DoradeDescriptor$DescriptorException
    {
        byte[] r1, r6;
        java.io.DataInputStream $r2;
        java.io.ByteArrayInputStream $r3;
        byte $b1, $b3, $b5, $b7, $b9, $b11, $b13, $b15;
        int $i0, $i2, $i4, $i6, $i8, $i10, $i12, $i14, i16;
        boolean $z0;
        double $d0;
        java.lang.Exception $r4;
        ucar.atd.dorade.DoradeDescriptor r0;
        ucar.atd.dorade.DoradeDescriptor$DescriptorException $r5;

        r0 := @this: ucar.atd.dorade.DoradeDescriptor;

        r1 := @parameter0: byte[];

        i16 := @parameter1: int;

     label1:
        $z0 = r0.<ucar.atd.dorade.DoradeDescriptor: boolean littleEndianData>;

        if $z0 == 0 goto label2;

        r6 = newarray (byte)[8];

        $i0 = i16 + 7;

        $b1 = r1[$i0];

        r6[0] = $b1;

        $i2 = i16 + 6;

        $b3 = r1[$i2];

        r6[1] = $b3;

        $i4 = i16 + 5;

        $b5 = r1[$i4];

        r6[2] = $b5;

        $i6 = i16 + 4;

        $b7 = r1[$i6];

        r6[3] = $b7;

        $i8 = i16 + 3;

        $b9 = r1[$i8];

        r6[4] = $b9;

        $i10 = i16 + 2;

        $b11 = r1[$i10];

        r6[5] = $b11;

        $i12 = i16 + 1;

        $b13 = r1[$i12];

        r6[6] = $b13;

        $i14 = i16 + 0;

        $b15 = r1[$i14];

        r6[7] = $b15;

        i16 = 0;

        goto label3;

     label2:
        r6 = r1;

     label3:
        $r2 = new java.io.DataInputStream;

        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>(r6, i16, 8);

        specialinvoke $r2.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r3);

        $d0 = virtualinvoke $r2.<java.io.DataInputStream: double readDouble()>();

     label4:
        return $d0;

     label5:
        $r4 := @caughtexception;

        $r5 = new ucar.atd.dorade.DoradeDescriptor$DescriptorException;

        specialinvoke $r5.<ucar.atd.dorade.DoradeDescriptor$DescriptorException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    protected static long findNextWithName(java.lang.String, java.io.RandomAccessFile, boolean) throws ucar.atd.dorade.DoradeDescriptor$DescriptorException, java.io.IOException
    {
        java.io.RandomAccessFile r0;
        long $l0;
        java.io.IOException $r9;
        ucar.atd.dorade.DoradeDescriptor$DescriptorException $r2, $r10;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.String $r1, r5, $r8;
        boolean $z0, z1;

        r5 := @parameter0: java.lang.String;

        r0 := @parameter1: java.io.RandomAccessFile;

        z1 := @parameter2: boolean;

     label1:
        $r1 = staticinvoke <ucar.atd.dorade.DoradeDescriptor: java.lang.String peekName(java.io.RandomAccessFile)>(r0);

        if $r1 == null goto label6;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label5;

     label2:
        $l0 = virtualinvoke r0.<java.io.RandomAccessFile: long getFilePointer()>();

     label3:
        return $l0;

     label4:
        $r9 := @caughtexception;

        $r10 = new ucar.atd.dorade.DoradeDescriptor$DescriptorException;

        specialinvoke $r10.<ucar.atd.dorade.DoradeDescriptor$DescriptorException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label5:
        staticinvoke <ucar.atd.dorade.DoradeDescriptor: void skipDescriptor(java.io.RandomAccessFile,boolean)>(r0, z1);

        goto label1;

     label6:
        $r2 = new ucar.atd.dorade.DoradeDescriptor$DescriptorException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" descriptor not found!");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<ucar.atd.dorade.DoradeDescriptor$DescriptorException: void <init>(java.lang.String)>($r8);

        throw $r2;

        catch java.io.IOException from label2 to label3 with label4;
    }

    protected long findNext(java.io.RandomAccessFile) throws ucar.atd.dorade.DoradeDescriptor$DescriptorException, java.io.IOException
    {
        java.io.RandomAccessFile r1;
        ucar.atd.dorade.DoradeDescriptor r0;
        long $l0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: ucar.atd.dorade.DoradeDescriptor;

        r1 := @parameter0: java.io.RandomAccessFile;

        $r2 = r0.<ucar.atd.dorade.DoradeDescriptor: java.lang.String expectedName>;

        $z0 = r0.<ucar.atd.dorade.DoradeDescriptor: boolean littleEndianData>;

        $l0 = staticinvoke <ucar.atd.dorade.DoradeDescriptor: long findNextWithName(java.lang.String,java.io.RandomAccessFile,boolean)>($r2, r1, $z0);

        return $l0;
    }

    public static java.lang.String formatDate(java.util.Date)
    {
        java.util.TimeZone $r1;
        java.util.Date r2;
        java.text.SimpleDateFormat $r0;
        java.lang.String $r3;

        r2 := @parameter0: java.util.Date;

        $r0 = new java.text.SimpleDateFormat;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy/MM/dd HH:mm:ss.SSS z");

        $r1 = <ucar.atd.dorade.DoradeDescriptor: java.util.TimeZone TZ_UTC>;

        virtualinvoke $r0.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r1);

        $r3 = virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r2);

        return $r3;
    }

    public static boolean getDefaultVerboseState()
    {
        boolean $z0;

        $z0 = <ucar.atd.dorade.DoradeDescriptor: boolean defaultVerboseState>;

        return $z0;
    }

    public static void setDefaultVerboseState(boolean)
    {
        java.util.HashMap $r0;
        boolean z0;

        z0 := @parameter0: boolean;

        <ucar.atd.dorade.DoradeDescriptor: boolean defaultVerboseState> = z0;

        $r0 = <ucar.atd.dorade.DoradeDescriptor: java.util.HashMap classVerboseStates>;

        virtualinvoke $r0.<java.util.HashMap: void clear()>();

        return;
    }

    public static boolean getDefaultVerboseState(java.lang.String)
    {
        java.lang.Boolean r4;
        java.util.HashMap $r1;
        java.lang.Object $r3;
        java.lang.String r0, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $r1 = <ucar.atd.dorade.DoradeDescriptor: java.util.HashMap classVerboseStates>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>();

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (java.lang.Boolean) $r3;

        if r4 == null goto label1;

        $z1 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label1:
        $z0 = <ucar.atd.dorade.DoradeDescriptor: boolean defaultVerboseState>;

        return $z0;
    }

    public static void setDefaultVerboseState(java.lang.String, boolean)
    {
        java.lang.Boolean $r3;
        java.util.HashMap $r1;
        java.lang.String r0, $r2;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = <ucar.atd.dorade.DoradeDescriptor: java.util.HashMap classVerboseStates>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>();

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        return;
    }

    static void <clinit>()
    {
        java.util.HashMap $r1;
        java.util.TimeZone $r0;

        $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        <ucar.atd.dorade.DoradeDescriptor: java.util.TimeZone TZ_UTC> = $r0;

        <ucar.atd.dorade.DoradeDescriptor: boolean defaultVerboseState> = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <ucar.atd.dorade.DoradeDescriptor: java.util.HashMap classVerboseStates> = $r1;

        return;
    }
}
