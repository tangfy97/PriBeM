public class org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedRootIterator extends org.apache.xml.dtm.ref.DTMDefaultBaseIterators$RootIterator
{
    private final int _nodeType;
    private final org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0;

    public void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseIterators, int)
    {
        int i0;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedRootIterator r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedRootIterator;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseIterators;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$RootIterator: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseIterators)>(r1);

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedRootIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0> = r1;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedRootIterator: int _nodeType> = i0;

        return;
    }

    public int next()
    {
        short $s5;
        int $i0, $i1, i2, i3, $i4, $i6, $i7, $i8, $i10, $i11, $i13;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedRootIterator r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators $r1, $r2;
        org.apache.xml.dtm.ref.ExpandedNameTable $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedRootIterator;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _startNode>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode>;

        if $i1 != $i0 goto label1;

        $i10 = (int) -1;

        return $i10;

     label1:
        i2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedRootIterator: int _nodeType>;

        i3 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _startNode>;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedRootIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        $i4 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int getExpandedTypeID(int)>(i3);

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = i3;

        if i2 < 14 goto label2;

        if i2 != $i4 goto label4;

        $i8 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int returnNode(int)>(i3);

        return $i8;

     label2:
        if $i4 >= 14 goto label3;

        if $i4 != i2 goto label4;

        $i7 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int returnNode(int)>(i3);

        return $i7;

     label3:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedRootIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        $r3 = $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.dtm.ref.ExpandedNameTable m_expandedNameTable>;

        $s5 = virtualinvoke $r3.<org.apache.xml.dtm.ref.ExpandedNameTable: short getType(int)>($i4);

        $i11 = (int) $s5;

        if $i11 != i2 goto label4;

        $i6 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int returnNode(int)>(i3);

        return $i6;

     label4:
        $i13 = (int) -1;

        return $i13;
    }
}
