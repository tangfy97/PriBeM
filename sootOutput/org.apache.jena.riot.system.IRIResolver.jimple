public abstract class org.apache.jena.riot.system.IRIResolver extends java.lang.Object
{
    public static final org.apache.jena.iri.IRIFactory iriFactory;
    private static boolean showExceptions;
    private static java.lang.String globalBase;
    private static java.lang.Object globalResolverLock;
    private static org.apache.jena.riot.system.IRIResolver globalResolver;
    private static final int CacheSize;

    public static boolean checkIRI(java.lang.String)
    {
        java.lang.String r0;
        org.apache.jena.iri.IRI $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI parseIRI(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<org.apache.jena.iri.IRI: boolean hasViolation(boolean)>(0);

        return $z0;
    }

    public static void validateIRI(java.lang.String) throws org.apache.jena.iri.IRIException
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI parseIRIex(java.lang.String)>(r0);

        return;
    }

    public static org.apache.jena.iri.IRI parseIRI(java.lang.String)
    {
        java.lang.String r0;
        org.apache.jena.iri.IRI $r2;
        org.apache.jena.iri.IRIFactory $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRIFactory iriFactory>;

        $r2 = virtualinvoke $r1.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>(r0);

        return $r2;
    }

    public static org.apache.jena.iri.IRI parseIRIex(java.lang.String) throws org.apache.jena.iri.IRIException
    {
        java.lang.String r0;
        org.apache.jena.iri.IRI $r2;
        org.apache.jena.iri.IRIFactory $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRIFactory iriFactory>;

        $r2 = virtualinvoke $r1.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI construct(java.lang.String)>(r0);

        return $r2;
    }

    public static java.lang.String resolveFileURL(java.lang.String) throws org.apache.jena.iri.IRIException
    {
        java.lang.Throwable $r11;
        org.apache.jena.riot.system.IRIResolver $r2;
        java.lang.Object $r0;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r1, $r4, $r5, $r9, $r10;
        org.apache.jena.iri.IRI $r3;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = <org.apache.jena.riot.system.IRIResolver: java.lang.Object globalResolverLock>;

        entermonitor $r0;

     label1:
        $r2 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.riot.system.IRIResolver globalResolver>;

        $r3 = virtualinvoke $r2.<org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI resolve(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<org.apache.jena.iri.IRI: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("file");

        if $z0 != 0 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("./");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <org.apache.jena.riot.system.IRIResolver: java.lang.String resolveFileURL(java.lang.String)>($r9);

        exitmonitor $r0;

     label2:
        return $r10;

     label3:
        $r5 = virtualinvoke $r3.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        exitmonitor $r0;

     label4:
        return $r5;

     label5:
        $r11 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static org.apache.jena.iri.IRI resolve(java.lang.String, java.lang.String) throws org.apache.jena.riot.RiotException
    {
        java.lang.String r0, r1;
        org.apache.jena.iri.IRI $r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI resolveIRI(java.lang.String,java.lang.String)>(r0, r1);

        $r3 = staticinvoke <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI)>($r2);

        return $r3;
    }

    public static java.lang.String resolveString(java.lang.String, java.lang.String) throws org.apache.jena.riot.RiotException
    {
        java.lang.String r0, r1, $r4;
        org.apache.jena.iri.IRI $r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI resolveIRI(java.lang.String,java.lang.String)>(r0, r1);

        $r3 = staticinvoke <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI)>($r2);

        $r4 = virtualinvoke $r3.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String resolveString(java.lang.String) throws org.apache.jena.riot.RiotException
    {
        java.lang.String r0, $r3;
        org.apache.jena.iri.IRI $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI resolveIRI(java.lang.String)>(r0);

        $r2 = staticinvoke <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI)>($r1);

        $r3 = virtualinvoke $r2.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        return $r3;
    }

    public static org.apache.jena.iri.IRI resolveIRI(java.lang.String)
    {
        java.lang.String r0;
        org.apache.jena.riot.system.IRIResolver $r1;
        org.apache.jena.iri.IRI $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.riot.system.IRIResolver globalResolver>;

        $r2 = virtualinvoke $r1.<org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI resolve(java.lang.String)>(r0);

        $r3 = staticinvoke <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI)>($r2);

        return $r3;
    }

    private static org.apache.jena.iri.IRI resolveIRI(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r16;
        org.apache.jena.iri.IRIFactory $r2, $r5;
        org.apache.jena.riot.system.IRIResolver $r10, $r13;
        java.lang.String r1, r4, $r7, $r8;
        org.apache.jena.iri.IRI $r3, $r6, $r9, $r11, $r12, $r14, $r15;
        boolean $z0, $z1;
        java.lang.Object $r0;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r0 = <org.apache.jena.riot.system.IRIResolver: java.lang.Object globalResolverLock>;

        entermonitor $r0;

     label1:
        $r2 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRIFactory iriFactory>;

        $r3 = virtualinvoke $r2.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>(r1);

        $z0 = virtualinvoke $r3.<org.apache.jena.iri.IRI: boolean isAbsolute()>();

        if $z0 == 0 goto label3;

        $r13 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.riot.system.IRIResolver globalResolver>;

        $r14 = virtualinvoke $r13.<org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI getBaseIRI()>();

        $r15 = virtualinvoke $r14.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI create(org.apache.jena.iri.IRI)>($r3);

        exitmonitor $r0;

     label2:
        return $r15;

     label3:
        $r5 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRIFactory iriFactory>;

        $r6 = virtualinvoke $r5.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>(r4);

        $r7 = "file";

        $r8 = virtualinvoke $r6.<org.apache.jena.iri.IRI: java.lang.String getScheme()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z1 == 0 goto label5;

        $r10 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.riot.system.IRIResolver globalResolver>;

        $r11 = virtualinvoke $r10.<org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI getBaseIRI()>();

        $r12 = virtualinvoke $r11.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI create(org.apache.jena.iri.IRI)>($r3);

        exitmonitor $r0;

     label4:
        return $r12;

     label5:
        $r9 = virtualinvoke $r6.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI create(org.apache.jena.iri.IRI)>($r3);

        exitmonitor $r0;

     label6:
        return $r9;

     label7:
        $r16 := @caughtexception;

        exitmonitor $r0;

     label8:
        throw $r16;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static org.apache.jena.riot.system.IRIResolver create()
    {
        org.apache.jena.riot.system.IRIResolver$IRIResolverNormal $r0;

        $r0 = new org.apache.jena.riot.system.IRIResolver$IRIResolverNormal;

        specialinvoke $r0.<org.apache.jena.riot.system.IRIResolver$IRIResolverNormal: void <init>()>();

        return $r0;
    }

    public static org.apache.jena.riot.system.IRIResolver create(java.lang.String)
    {
        java.lang.String r1;
        org.apache.jena.riot.system.IRIResolver$IRIResolverNormal $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.jena.riot.system.IRIResolver$IRIResolverNormal;

        specialinvoke $r0.<org.apache.jena.riot.system.IRIResolver$IRIResolverNormal: void <init>(java.lang.String)>(r1);

        return $r0;
    }

    public static org.apache.jena.riot.system.IRIResolver create(org.apache.jena.iri.IRI)
    {
        org.apache.jena.riot.system.IRIResolver$IRIResolverNormal $r0;
        org.apache.jena.iri.IRI r1;

        r1 := @parameter0: org.apache.jena.iri.IRI;

        $r0 = new org.apache.jena.riot.system.IRIResolver$IRIResolverNormal;

        specialinvoke $r0.<org.apache.jena.riot.system.IRIResolver$IRIResolverNormal: void <init>(org.apache.jena.iri.IRI)>(r1);

        return $r0;
    }

    public static org.apache.jena.riot.system.IRIResolver createNoResolve()
    {
        org.apache.jena.riot.system.IRIResolver$IRIResolverNoOp $r0;

        $r0 = new org.apache.jena.riot.system.IRIResolver$IRIResolverNoOp;

        specialinvoke $r0.<org.apache.jena.riot.system.IRIResolver$IRIResolverNoOp: void <init>()>();

        return $r0;
    }

    public static void suppressExceptions()
    {
        <org.apache.jena.riot.system.IRIResolver: boolean showExceptions> = 0;

        return;
    }

    public static org.apache.jena.iri.IRI chooseBaseURI()
    {
        java.lang.Throwable $r3;
        java.lang.Object $r0;
        org.apache.jena.riot.system.IRIResolver $r1;
        org.apache.jena.iri.IRI $r2;

        $r0 = <org.apache.jena.riot.system.IRIResolver: java.lang.Object globalResolverLock>;

        entermonitor $r0;

     label1:
        $r1 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.riot.system.IRIResolver globalResolver>;

        $r2 = virtualinvoke $r1.<org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI getBaseIRI()>();

        exitmonitor $r0;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String getBaseIRIasString()
    {
        java.lang.String $r2;
        org.apache.jena.riot.system.IRIResolver r0;
        org.apache.jena.iri.IRI $r1;

        r0 := @this: org.apache.jena.riot.system.IRIResolver;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI getBaseIRI()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r1.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        return $r2;
    }

    protected abstract org.apache.jena.iri.IRI getBaseIRI();

    public abstract org.apache.jena.iri.IRI resolve(java.lang.String);

    public abstract org.apache.jena.iri.IRI resolveSilent(java.lang.String);

    public java.lang.String resolveToString(java.lang.String)
    {
        java.lang.String r1, $r3;
        org.apache.jena.riot.system.IRIResolver r0;
        org.apache.jena.iri.IRI $r2;

        r0 := @this: org.apache.jena.riot.system.IRIResolver;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI resolve(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String resolveToStringSilent(java.lang.String)
    {
        java.lang.String r1, $r3;
        org.apache.jena.riot.system.IRIResolver r0;
        org.apache.jena.iri.IRI $r2;

        r0 := @this: org.apache.jena.riot.system.IRIResolver;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI resolveSilent(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        return $r3;
    }

    protected void <init>()
    {
        org.apache.jena.riot.system.IRIResolver r0;

        r0 := @this: org.apache.jena.riot.system.IRIResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI)
    {
        org.apache.jena.riot.RiotException $r5;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        java.lang.String $r4;
        org.apache.jena.iri.IRI r0;
        org.apache.jena.iri.Violation $r3;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.jena.iri.IRI;

        $z0 = <org.apache.jena.riot.system.IRIResolver: boolean showExceptions>;

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $z1 = virtualinvoke r0.<org.apache.jena.iri.IRI: boolean hasViolation(boolean)>(0);

        if $z1 != 0 goto label2;

        return r0;

     label2:
        $r1 = virtualinvoke r0.<org.apache.jena.iri.IRI: java.util.Iterator violations(boolean)>(0);

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (org.apache.jena.iri.Violation) $r2;

        $r4 = virtualinvoke $r3.<org.apache.jena.iri.Violation: java.lang.String getShortMessage()>();

        $r5 = new org.apache.jena.riot.RiotException;

        specialinvoke $r5.<org.apache.jena.riot.RiotException: void <init>(java.lang.String)>($r4);

        throw $r5;
    }

    static org.apache.jena.iri.IRI access$000(org.apache.jena.iri.IRI)
    {
        org.apache.jena.iri.IRI r0, $r1;

        r0 := @parameter0: org.apache.jena.iri.IRI;

        $r1 = staticinvoke <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI)>(r0);

        return $r1;
    }

    static java.lang.Object access$100()
    {
        java.lang.Object $r0;

        $r0 = <org.apache.jena.riot.system.IRIResolver: java.lang.Object globalResolverLock>;

        return $r0;
    }

    static org.apache.jena.riot.system.IRIResolver access$200()
    {
        org.apache.jena.riot.system.IRIResolver $r0;

        $r0 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.riot.system.IRIResolver globalResolver>;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.jena.iri.IRIFactory $r0, $r1, $r2, $r3, $r4, $r5, $r9, $r18;
        org.apache.jena.riot.system.IRIResolver $r10;
        org.apache.jena.iri.IRIException $r11;
        java.lang.String $r6, $r8, $r15, $r17;
        org.apache.jena.iri.IRI r20;
        java.io.PrintStream $r13, $r19;
        java.lang.Object $r7;
        java.lang.StringBuilder $r12, $r14, $r16;

        <org.apache.jena.riot.system.IRIResolver: int CacheSize> = 1000;

        $r0 = new org.apache.jena.iri.IRIFactory;

        specialinvoke $r0.<org.apache.jena.iri.IRIFactory: void <init>()>();

        <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRIFactory iriFactory> = $r0;

        <org.apache.jena.riot.system.IRIResolver: boolean showExceptions> = 1;

        $r1 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRIFactory iriFactory>;

        virtualinvoke $r1.<org.apache.jena.iri.IRIFactory: void useSpecificationIRI(boolean)>(1);

        $r2 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRIFactory iriFactory>;

        virtualinvoke $r2.<org.apache.jena.iri.IRIFactory: void useSchemeSpecificRules(java.lang.String,boolean)>("*", 1);

        $r3 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRIFactory iriFactory>;

        virtualinvoke $r3.<org.apache.jena.iri.IRIFactory: void setSameSchemeRelativeReferences(java.lang.String)>("file");

        $r4 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRIFactory iriFactory>;

        virtualinvoke $r4.<org.apache.jena.iri.IRIFactory: void setIsError(int,boolean)>(44, 0);

        $r5 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRIFactory iriFactory>;

        virtualinvoke $r5.<org.apache.jena.iri.IRIFactory: void setIsWarning(int,boolean)>(44, 0);

        $r6 = staticinvoke <org.apache.jena.riot.system.IRILib: java.lang.String filenameToIRI(java.lang.String)>("./");

        <org.apache.jena.riot.system.IRIResolver: java.lang.String globalBase> = $r6;

        $r7 = new java.lang.Object;

        specialinvoke $r7.<java.lang.Object: void <init>()>();

        <org.apache.jena.riot.system.IRIResolver: java.lang.Object globalResolverLock> = $r7;

     label1:
        $r9 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRIFactory iriFactory>;

        $r8 = <org.apache.jena.riot.system.IRIResolver: java.lang.String globalBase>;

        r20 = virtualinvoke $r9.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI construct(java.lang.String)>($r8);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected IRIException in initializer: ");

        $r15 = virtualinvoke $r11.<org.apache.jena.iri.IRIException: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r18 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRIFactory iriFactory>;

        r20 = virtualinvoke $r18.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>("file:///");

        $r19 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<org.apache.jena.iri.IRIException: void printStackTrace(java.io.PrintStream)>($r19);

     label4:
        $r10 = staticinvoke <org.apache.jena.riot.system.IRIResolver: org.apache.jena.riot.system.IRIResolver create(org.apache.jena.iri.IRI)>(r20);

        <org.apache.jena.riot.system.IRIResolver: org.apache.jena.riot.system.IRIResolver globalResolver> = $r10;

        return;

        catch org.apache.jena.iri.IRIException from label1 to label2 with label3;
    }
}
