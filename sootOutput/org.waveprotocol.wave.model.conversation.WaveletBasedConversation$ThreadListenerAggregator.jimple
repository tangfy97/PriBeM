final class org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ThreadListenerAggregator extends java.lang.Object implements org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread$Listener
{
    private final org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread thread;
    final org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0;

    void <init>(org.waveprotocol.wave.model.conversation.WaveletBasedConversation, org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread)
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread r2;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ThreadListenerAggregator r0;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation r1;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ThreadListenerAggregator;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.WaveletBasedConversation;

        r2 := @parameter1: org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread;

        r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ThreadListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ThreadListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread thread> = r2;

        return;
    }

    public void onBlipAdded(org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip)
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip r1;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ThreadListenerAggregator r0;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r2, $r3;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ThreadListenerAggregator;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip;

        $r2 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ThreadListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: void access$200(org.waveprotocol.wave.model.conversation.WaveletBasedConversation,org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip)>($r2, r1);

        $r3 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ThreadListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: void access$300(org.waveprotocol.wave.model.conversation.WaveletBasedConversation,org.waveprotocol.wave.model.conversation.ObservableConversationBlip)>($r3, r1);

        return;
    }

    public void onDeleted()
    {
        org.waveprotocol.wave.model.util.StringMap $r5;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread $r1, $r2, $r6;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ThreadListenerAggregator r0;
        java.lang.String $r7;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r3, $r4;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ThreadListenerAggregator;

        $r1 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ThreadListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread thread>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread: void removeListener(org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread$Listener)>(r0);

        $r3 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ThreadListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        $r2 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ThreadListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread thread>;

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: void access$400(org.waveprotocol.wave.model.conversation.WaveletBasedConversation,org.waveprotocol.wave.model.conversation.ObservableConversationThread)>($r3, $r2);

        $r4 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ThreadListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        $r5 = staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: org.waveprotocol.wave.model.util.StringMap access$500(org.waveprotocol.wave.model.conversation.WaveletBasedConversation)>($r4);

        $r6 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ThreadListenerAggregator: org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread thread>;

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.model.conversation.WaveletBasedConversationThread: java.lang.String getId()>();

        interfaceinvoke $r5.<org.waveprotocol.wave.model.util.StringMap: void remove(java.lang.String)>($r7);

        return;
    }
}
