public abstract class org.apache.batik.bridge.SVGFeComponentTransferElementBridge$SVGFeFuncElementBridge extends org.apache.batik.bridge.AnimatableGenericSVGBridge
{

    protected void <init>()
    {
        org.apache.batik.bridge.SVGFeComponentTransferElementBridge$SVGFeFuncElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGFeComponentTransferElementBridge$SVGFeFuncElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AnimatableGenericSVGBridge: void <init>()>();

        return;
    }

    public org.apache.batik.ext.awt.image.ComponentTransferFunction createComponentTransferFunction(org.w3c.dom.Element, org.w3c.dom.Element)
    {
        java.lang.Error $r19;
        float[] $r11, $r15;
        java.lang.StringBuffer $r20, $r21, $r22;
        int $i0;
        org.apache.batik.ext.awt.image.ComponentTransferFunction $r6, $r9, $r12, $r13, $r16, $r17, $r18;
        java.lang.String $r23;
        org.apache.batik.bridge.BridgeContext $r2, $r3, $r4, $r5, $r7, $r8, $r10, $r14;
        org.w3c.dom.Element r0, r24;
        org.apache.batik.bridge.SVGFeComponentTransferElementBridge$SVGFeFuncElementBridge r1;
        float $f0, $f1, $f2, $f3, $f4;

        r1 := @this: org.apache.batik.bridge.SVGFeComponentTransferElementBridge$SVGFeFuncElementBridge;

        r24 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.w3c.dom.Element;

        $r2 = r1.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $i0 = staticinvoke <org.apache.batik.bridge.SVGFeComponentTransferElementBridge$SVGFeFuncElementBridge: int convertType(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>(r0, $r2);

        tableswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label6;
            case 2: goto label1;
            case 3: goto label5;
            case 4: goto label4;
            default: goto label8;
        };

     label1:
        $r10 = r1.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r11 = staticinvoke <org.apache.batik.bridge.SVGFeComponentTransferElementBridge$SVGFeFuncElementBridge: float[] convertTableValues(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>(r0, $r10);

        if $r11 != null goto label2;

        $r13 = staticinvoke <org.apache.batik.ext.awt.image.ConcreteComponentTransferFunction: org.apache.batik.ext.awt.image.ComponentTransferFunction getIdentityTransfer()>();

        return $r13;

     label2:
        $r12 = staticinvoke <org.apache.batik.ext.awt.image.ConcreteComponentTransferFunction: org.apache.batik.ext.awt.image.ComponentTransferFunction getDiscreteTransfer(float[])>($r11);

        return $r12;

     label3:
        $r18 = staticinvoke <org.apache.batik.ext.awt.image.ConcreteComponentTransferFunction: org.apache.batik.ext.awt.image.ComponentTransferFunction getIdentityTransfer()>();

        return $r18;

     label4:
        $r3 = r1.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $f0 = staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: float convertNumber(org.w3c.dom.Element,java.lang.String,float,org.apache.batik.bridge.BridgeContext)>(r0, "amplitude", 1.0F, $r3);

        $r4 = r1.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $f1 = staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: float convertNumber(org.w3c.dom.Element,java.lang.String,float,org.apache.batik.bridge.BridgeContext)>(r0, "exponent", 1.0F, $r4);

        $r5 = r1.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $f2 = staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: float convertNumber(org.w3c.dom.Element,java.lang.String,float,org.apache.batik.bridge.BridgeContext)>(r0, "offset", 0.0F, $r5);

        $r6 = staticinvoke <org.apache.batik.ext.awt.image.ConcreteComponentTransferFunction: org.apache.batik.ext.awt.image.ComponentTransferFunction getGammaTransfer(float,float,float)>($f0, $f1, $f2);

        return $r6;

     label5:
        $r7 = r1.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $f3 = staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: float convertNumber(org.w3c.dom.Element,java.lang.String,float,org.apache.batik.bridge.BridgeContext)>(r0, "slope", 1.0F, $r7);

        $r8 = r1.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $f4 = staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: float convertNumber(org.w3c.dom.Element,java.lang.String,float,org.apache.batik.bridge.BridgeContext)>(r0, "intercept", 0.0F, $r8);

        $r9 = staticinvoke <org.apache.batik.ext.awt.image.ConcreteComponentTransferFunction: org.apache.batik.ext.awt.image.ComponentTransferFunction getLinearTransfer(float,float)>($f3, $f4);

        return $r9;

     label6:
        $r14 = r1.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r15 = staticinvoke <org.apache.batik.bridge.SVGFeComponentTransferElementBridge$SVGFeFuncElementBridge: float[] convertTableValues(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>(r0, $r14);

        if $r15 != null goto label7;

        $r17 = staticinvoke <org.apache.batik.ext.awt.image.ConcreteComponentTransferFunction: org.apache.batik.ext.awt.image.ComponentTransferFunction getIdentityTransfer()>();

        return $r17;

     label7:
        $r16 = staticinvoke <org.apache.batik.ext.awt.image.ConcreteComponentTransferFunction: org.apache.batik.ext.awt.image.ComponentTransferFunction getTableTransfer(float[])>($r15);

        return $r16;

     label8:
        $r19 = new java.lang.Error;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("invalid convertType:");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.Error: void <init>(java.lang.String)>($r23);

        throw $r19;
    }

    protected static float[] convertTableValues(org.w3c.dom.Element, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r8;
        org.apache.batik.bridge.BridgeException $r6;
        float[] r3;
        java.lang.NumberFormatException $r5;
        org.apache.batik.bridge.BridgeContext r7;
        org.w3c.dom.Element r0;
        java.util.StringTokenizer $r2;
        int $i0, $i1, i2;
        float $f0;
        java.lang.String $r1, $r4;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        r7 := @parameter1: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "tableValues");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, " ,");

        $i1 = virtualinvoke $r2.<java.util.StringTokenizer: int countTokens()>();

        r3 = newarray (float)[$i1];

     label2:
        i2 = 0;

        goto label4;

     label3:
        $r4 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $f0 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>($r4);

        r3[i2] = $f0;

        i2 = i2 + 1;

     label4:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label3;

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;

        $r6 = new org.apache.batik.bridge.BridgeException;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = "tableValues";

        $r8[1] = $r1;

        specialinvoke $r6.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r7, r0, $r5, "attribute.malformed", $r8);

        throw $r6;

     label7:
        return r3;

        catch java.lang.NumberFormatException from label2 to label5 with label6;
    }

    protected static int convertType(org.w3c.dom.Element, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r9, $r11;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.batik.bridge.BridgeException $r7, $r10;
        org.apache.batik.bridge.BridgeContext r8;
        org.w3c.dom.Element r0;

        r0 := @parameter0: org.w3c.dom.Element;

        r8 := @parameter1: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "type");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r10 = new org.apache.batik.bridge.BridgeException;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = "type";

        specialinvoke $r10.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r8, r0, "attribute.missing", $r11);

        throw $r10;

     label1:
        $r2 = "discrete";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 2;

     label2:
        $r3 = "identity";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label3;

        return 0;

     label3:
        $r4 = "gamma";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z2 == 0 goto label4;

        return 4;

     label4:
        $r5 = "linear";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z3 == 0 goto label5;

        return 3;

     label5:
        $r6 = "table";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z4 == 0 goto label6;

        return 1;

     label6:
        $r7 = new org.apache.batik.bridge.BridgeException;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = "type";

        $r9[1] = $r1;

        specialinvoke $r7.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r8, r0, "attribute.malformed", $r9);

        throw $r7;
    }
}
