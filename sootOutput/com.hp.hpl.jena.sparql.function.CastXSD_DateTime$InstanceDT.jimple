public class com.hp.hpl.jena.sparql.function.CastXSD_DateTime$InstanceDT extends com.hp.hpl.jena.sparql.function.CastXSD$Instance
{

    void <init>(com.hp.hpl.jena.datatypes.xsd.XSDDatatype)
    {
        com.hp.hpl.jena.sparql.function.CastXSD_DateTime$InstanceDT r0;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r1;

        r0 := @this: com.hp.hpl.jena.sparql.function.CastXSD_DateTime$InstanceDT;

        r1 := @parameter0: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        specialinvoke r0.<com.hp.hpl.jena.sparql.function.CastXSD$Instance: void <init>(com.hp.hpl.jena.datatypes.xsd.XSDDatatype)>(r1);

        return;
    }

    protected com.hp.hpl.jena.sparql.expr.NodeValue cast(java.lang.String, com.hp.hpl.jena.sparql.expr.NodeValue, com.hp.hpl.jena.datatypes.xsd.XSDDatatype)
    {
        com.hp.hpl.jena.sparql.expr.NodeValue r0, $r4, $r6;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype r3;
        com.hp.hpl.jena.graph.Node $r5;
        com.hp.hpl.jena.sparql.function.CastXSD_DateTime$InstanceDT r1;
        java.lang.String r2;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.sparql.function.CastXSD_DateTime$InstanceDT;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: com.hp.hpl.jena.sparql.expr.NodeValue;

        r3 := @parameter2: com.hp.hpl.jena.datatypes.xsd.XSDDatatype;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: boolean isString()>();

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: com.hp.hpl.jena.graph.Node asNode()>();

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.util.NodeUtils: boolean hasLang(com.hp.hpl.jena.graph.Node)>($r5);

        if $z1 == 0 goto label2;

     label1:
        $r4 = specialinvoke r1.<com.hp.hpl.jena.sparql.function.CastXSD$Instance: com.hp.hpl.jena.sparql.expr.NodeValue cast(java.lang.String,com.hp.hpl.jena.sparql.expr.NodeValue,com.hp.hpl.jena.datatypes.xsd.XSDDatatype)>(r2, r0, r3);

        return $r4;

     label2:
        $r6 = staticinvoke <com.hp.hpl.jena.sparql.expr.nodevalue.XSDFuncOp: com.hp.hpl.jena.sparql.expr.NodeValue dateTimeCast(com.hp.hpl.jena.sparql.expr.NodeValue,com.hp.hpl.jena.datatypes.xsd.XSDDatatype)>(r0, r3);

        return $r6;
    }
}
