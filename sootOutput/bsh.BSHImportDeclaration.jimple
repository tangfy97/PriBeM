class bsh.BSHImportDeclaration extends bsh.SimpleNode
{
    public boolean importPackage;
    public boolean staticImport;
    public boolean superImport;

    void <init>(int)
    {
        int i0;
        bsh.BSHImportDeclaration r0;

        r0 := @this: bsh.BSHImportDeclaration;

        i0 := @parameter0: int;

        specialinvoke r0.<bsh.SimpleNode: void <init>(int)>(i0);

        return;
    }

    public java.lang.Object eval(bsh.CallStack, bsh.Interpreter) throws bsh.EvalError
    {
        bsh.NameSpace $r1;
        bsh.UtilEvalError $r10;
        bsh.CallStack r0;
        bsh.BSHAmbiguousName $r4, $r8;
        java.lang.String r12;
        boolean $z0, $z1, $z2, $z3;
        bsh.EvalError $r5, $r11;
        bsh.Interpreter r7;
        bsh.BSHImportDeclaration r2;
        bsh.Primitive $r13;
        java.lang.Class $r9;
        bsh.Node $r3, $r6;

        r2 := @this: bsh.BSHImportDeclaration;

        r0 := @parameter0: bsh.CallStack;

        r7 := @parameter1: bsh.Interpreter;

        $r1 = virtualinvoke r0.<bsh.CallStack: bsh.NameSpace top()>();

        $z0 = r2.<bsh.BSHImportDeclaration: boolean superImport>;

        if $z0 == 0 goto label4;

     label1:
        virtualinvoke $r1.<bsh.NameSpace: void doSuperImport()>();

     label2:
        goto label8;

     label3:
        $r10 := @caughtexception;

        $r11 = virtualinvoke $r10.<bsh.UtilEvalError: bsh.EvalError toEvalError(bsh.SimpleNode,bsh.CallStack)>(r2, r0);

        throw $r11;

     label4:
        $z1 = r2.<bsh.BSHImportDeclaration: boolean staticImport>;

        if $z1 == 0 goto label6;

        $z3 = r2.<bsh.BSHImportDeclaration: boolean importPackage>;

        if $z3 == 0 goto label5;

        $r6 = virtualinvoke r2.<bsh.BSHImportDeclaration: bsh.Node jjtGetChild(int)>(0);

        $r8 = (bsh.BSHAmbiguousName) $r6;

        $r9 = virtualinvoke $r8.<bsh.BSHAmbiguousName: java.lang.Class toClass(bsh.CallStack,bsh.Interpreter)>(r0, r7);

        virtualinvoke $r1.<bsh.NameSpace: void importStatic(java.lang.Class)>($r9);

        goto label8;

     label5:
        $r5 = new bsh.EvalError;

        specialinvoke $r5.<bsh.EvalError: void <init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)>("static field imports not supported yet", r2, r0);

        throw $r5;

     label6:
        $r3 = virtualinvoke r2.<bsh.BSHImportDeclaration: bsh.Node jjtGetChild(int)>(0);

        $r4 = (bsh.BSHAmbiguousName) $r3;

        r12 = $r4.<bsh.BSHAmbiguousName: java.lang.String text>;

        $z2 = r2.<bsh.BSHImportDeclaration: boolean importPackage>;

        if $z2 == 0 goto label7;

        virtualinvoke $r1.<bsh.NameSpace: void importPackage(java.lang.String)>(r12);

        goto label8;

     label7:
        virtualinvoke $r1.<bsh.NameSpace: void importClass(java.lang.String)>(r12);

     label8:
        $r13 = <bsh.Primitive: bsh.Primitive VOID>;

        return $r13;

        catch bsh.UtilEvalError from label1 to label2 with label3;
    }
}
