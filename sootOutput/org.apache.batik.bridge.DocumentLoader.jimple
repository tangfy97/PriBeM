public class org.apache.batik.bridge.DocumentLoader extends java.lang.Object
{
    protected org.apache.batik.dom.svg.SVGDocumentFactory documentFactory;
    protected java.util.HashMap cacheMap;
    protected org.apache.batik.bridge.UserAgent userAgent;

    protected void <init>()
    {
        java.util.HashMap $r1;
        org.apache.batik.bridge.DocumentLoader r0;

        r0 := @this: org.apache.batik.bridge.DocumentLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.bridge.DocumentLoader: java.util.HashMap cacheMap> = $r1;

        return;
    }

    public void <init>(org.apache.batik.bridge.UserAgent)
    {
        org.apache.batik.bridge.UserAgent r2;
        org.apache.batik.dom.svg.SAXSVGDocumentFactory $r3;
        org.apache.batik.dom.svg.SVGDocumentFactory $r5;
        org.apache.batik.bridge.DocumentLoader r0;
        java.util.HashMap $r1;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: org.apache.batik.bridge.DocumentLoader;

        r2 := @parameter0: org.apache.batik.bridge.UserAgent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.bridge.DocumentLoader: java.util.HashMap cacheMap> = $r1;

        r0.<org.apache.batik.bridge.DocumentLoader: org.apache.batik.bridge.UserAgent userAgent> = r2;

        $r3 = new org.apache.batik.dom.svg.SAXSVGDocumentFactory;

        $r4 = interfaceinvoke r2.<org.apache.batik.bridge.UserAgent: java.lang.String getXMLParserClassName()>();

        specialinvoke $r3.<org.apache.batik.dom.svg.SAXSVGDocumentFactory: void <init>(java.lang.String,boolean)>($r4, 1);

        r0.<org.apache.batik.bridge.DocumentLoader: org.apache.batik.dom.svg.SVGDocumentFactory documentFactory> = $r3;

        $r5 = r0.<org.apache.batik.bridge.DocumentLoader: org.apache.batik.dom.svg.SVGDocumentFactory documentFactory>;

        $z0 = interfaceinvoke r2.<org.apache.batik.bridge.UserAgent: boolean isXMLParserValidating()>();

        interfaceinvoke $r5.<org.apache.batik.dom.util.DocumentFactory: void setValidating(boolean)>($z0);

        return;
    }

    public org.w3c.dom.Document checkCache(java.lang.String)
    {
        java.lang.Throwable $r6;
        org.apache.batik.bridge.DocumentLoader r0;
        java.util.HashMap $r1, $r4;
        org.apache.batik.bridge.DocumentLoader$DocumentState $r5;
        org.w3c.dom.Document $r3;
        int $i0, $i1, i2, $i4, $i6;
        java.lang.Object $r2;
        java.lang.String r7;

        r0 := @this: org.apache.batik.bridge.DocumentLoader;

        r7 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r7.<java.lang.String: int lastIndexOf(int)>(47);

        i2 = $i0;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        i2 = 0;

     label1:
        $i1 = virtualinvoke r7.<java.lang.String: int indexOf(int,int)>(35, i2);

        $i6 = (int) -1;

        if $i1 == $i6 goto label2;

        r7 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label2:
        $r4 = r0.<org.apache.batik.bridge.DocumentLoader: java.util.HashMap cacheMap>;

        entermonitor $r4;

     label3:
        $r1 = r0.<org.apache.batik.bridge.DocumentLoader: java.util.HashMap cacheMap>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7);

        $r5 = (org.apache.batik.bridge.DocumentLoader$DocumentState) $r2;

        exitmonitor $r4;

        goto label5;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r4;

        throw $r6;

     label5:
        if $r5 == null goto label6;

        $r3 = virtualinvoke $r5.<org.apache.batik.bridge.DocumentLoader$DocumentState: org.w3c.dom.Document getDocument()>();

        return $r3;

     label6:
        return null;

        catch java.lang.Throwable from label3 to label4 with label4;
    }

    public org.w3c.dom.Document loadDocument(java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r11;
        org.apache.batik.dom.svg.SVGDocumentFactory $r3, $r5;
        org.apache.batik.bridge.DocumentLoader r0;
        org.w3c.dom.svg.SVGDocument $r4;
        java.util.HashMap r8, $r9;
        org.apache.batik.bridge.DocumentLoader$DocumentState $r7;
        org.w3c.dom.Document $r2, $r10;
        org.apache.batik.dom.util.DocumentDescriptor $r6;
        java.lang.String r1;

        r0 := @this: org.apache.batik.bridge.DocumentLoader;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.batik.bridge.DocumentLoader: org.w3c.dom.Document checkCache(java.lang.String)>(r1);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = r0.<org.apache.batik.bridge.DocumentLoader: org.apache.batik.dom.svg.SVGDocumentFactory documentFactory>;

        $r4 = interfaceinvoke $r3.<org.apache.batik.dom.svg.SVGDocumentFactory: org.w3c.dom.svg.SVGDocument createSVGDocument(java.lang.String)>(r1);

        $r5 = r0.<org.apache.batik.bridge.DocumentLoader: org.apache.batik.dom.svg.SVGDocumentFactory documentFactory>;

        $r6 = interfaceinvoke $r5.<org.apache.batik.dom.util.DocumentFactory: org.apache.batik.dom.util.DocumentDescriptor getDocumentDescriptor()>();

        $r7 = new org.apache.batik.bridge.DocumentLoader$DocumentState;

        specialinvoke $r7.<org.apache.batik.bridge.DocumentLoader$DocumentState: void <init>(org.apache.batik.bridge.DocumentLoader,java.lang.String,org.w3c.dom.Document,org.apache.batik.dom.util.DocumentDescriptor)>(r0, r1, $r4, $r6);

        r8 = r0.<org.apache.batik.bridge.DocumentLoader: java.util.HashMap cacheMap>;

        entermonitor r8;

     label2:
        $r9 = r0.<org.apache.batik.bridge.DocumentLoader: java.util.HashMap cacheMap>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        exitmonitor r8;

        goto label4;

     label3:
        $r11 := @caughtexception;

        exitmonitor r8;

        throw $r11;

     label4:
        $r10 = virtualinvoke $r7.<org.apache.batik.bridge.DocumentLoader$DocumentState: org.w3c.dom.Document getDocument()>();

        return $r10;

        catch java.lang.Throwable from label2 to label3 with label3;
    }

    public org.w3c.dom.Document loadDocument(java.lang.String, java.io.InputStream) throws java.io.IOException
    {
        java.lang.Throwable $r12;
        org.apache.batik.dom.svg.SVGDocumentFactory $r4, $r6;
        org.apache.batik.bridge.DocumentLoader r0;
        org.w3c.dom.svg.SVGDocument $r5;
        java.util.HashMap r9, $r10;
        org.apache.batik.bridge.DocumentLoader$DocumentState $r8;
        org.w3c.dom.Document $r2, $r11;
        org.apache.batik.dom.util.DocumentDescriptor $r7;
        java.lang.String r1;
        java.io.InputStream r3;

        r0 := @this: org.apache.batik.bridge.DocumentLoader;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.io.InputStream;

        $r2 = virtualinvoke r0.<org.apache.batik.bridge.DocumentLoader: org.w3c.dom.Document checkCache(java.lang.String)>(r1);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r4 = r0.<org.apache.batik.bridge.DocumentLoader: org.apache.batik.dom.svg.SVGDocumentFactory documentFactory>;

        $r5 = interfaceinvoke $r4.<org.apache.batik.dom.svg.SVGDocumentFactory: org.w3c.dom.svg.SVGDocument createSVGDocument(java.lang.String,java.io.InputStream)>(r1, r3);

        $r6 = r0.<org.apache.batik.bridge.DocumentLoader: org.apache.batik.dom.svg.SVGDocumentFactory documentFactory>;

        $r7 = interfaceinvoke $r6.<org.apache.batik.dom.util.DocumentFactory: org.apache.batik.dom.util.DocumentDescriptor getDocumentDescriptor()>();

        $r8 = new org.apache.batik.bridge.DocumentLoader$DocumentState;

        specialinvoke $r8.<org.apache.batik.bridge.DocumentLoader$DocumentState: void <init>(org.apache.batik.bridge.DocumentLoader,java.lang.String,org.w3c.dom.Document,org.apache.batik.dom.util.DocumentDescriptor)>(r0, r1, $r5, $r7);

        r9 = r0.<org.apache.batik.bridge.DocumentLoader: java.util.HashMap cacheMap>;

        entermonitor r9;

     label2:
        $r10 = r0.<org.apache.batik.bridge.DocumentLoader: java.util.HashMap cacheMap>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r8);

        exitmonitor r9;

        goto label4;

     label3:
        $r12 := @caughtexception;

        exitmonitor r9;

        throw $r12;

     label4:
        $r11 = virtualinvoke $r8.<org.apache.batik.bridge.DocumentLoader$DocumentState: org.w3c.dom.Document getDocument()>();

        return $r11;

        catch java.lang.Throwable from label2 to label3 with label3;
    }

    public org.apache.batik.bridge.UserAgent getUserAgent()
    {
        org.apache.batik.bridge.UserAgent $r1;
        org.apache.batik.bridge.DocumentLoader r0;

        r0 := @this: org.apache.batik.bridge.DocumentLoader;

        $r1 = r0.<org.apache.batik.bridge.DocumentLoader: org.apache.batik.bridge.UserAgent userAgent>;

        return $r1;
    }

    public void dispose()
    {
        java.lang.Throwable $r3;
        org.apache.batik.bridge.DocumentLoader r0;
        java.util.HashMap r1, $r2;

        r0 := @this: org.apache.batik.bridge.DocumentLoader;

        r1 = r0.<org.apache.batik.bridge.DocumentLoader: java.util.HashMap cacheMap>;

        entermonitor r1;

     label1:
        $r2 = r0.<org.apache.batik.bridge.DocumentLoader: java.util.HashMap cacheMap>;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

        exitmonitor r1;

        goto label3;

     label2:
        $r3 := @caughtexception;

        exitmonitor r1;

        throw $r3;

     label3:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    public int getLineNumber(org.w3c.dom.Element)
    {
        java.lang.Throwable $r10;
        org.apache.batik.bridge.DocumentLoader r4;
        org.w3c.dom.svg.SVGDocument $r2;
        java.util.HashMap r5, $r6;
        org.apache.batik.bridge.DocumentLoader$DocumentState r8;
        org.w3c.dom.Element r0;
        org.w3c.dom.Document $r1;
        org.apache.batik.dom.util.DocumentDescriptor $r9;
        int $i0, $i2;
        java.lang.Object $r7;
        java.lang.String $r3;

        r4 := @this: org.apache.batik.bridge.DocumentLoader;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        $r2 = (org.w3c.dom.svg.SVGDocument) $r1;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.svg.SVGDocument: java.lang.String getURL()>();

        r5 = r4.<org.apache.batik.bridge.DocumentLoader: java.util.HashMap cacheMap>;

        entermonitor r5;

     label1:
        $r6 = r4.<org.apache.batik.bridge.DocumentLoader: java.util.HashMap cacheMap>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r8 = (org.apache.batik.bridge.DocumentLoader$DocumentState) $r7;

        exitmonitor r5;

        goto label3;

     label2:
        $r10 := @caughtexception;

        exitmonitor r5;

        throw $r10;

     label3:
        if r8 != null goto label4;

        $i2 = (int) -1;

        return $i2;

     label4:
        $r9 = staticinvoke <org.apache.batik.bridge.DocumentLoader$DocumentState: org.apache.batik.dom.util.DocumentDescriptor access$000(org.apache.batik.bridge.DocumentLoader$DocumentState)>(r8);

        $i0 = virtualinvoke $r9.<org.apache.batik.dom.util.DocumentDescriptor: int getLocationLine(org.w3c.dom.Element)>(r0);

        return $i0;

        catch java.lang.Throwable from label1 to label2 with label2;
    }
}
