public abstract class org.apache.poi.hwpf.model.types.TLPAbstractType extends java.lang.Object implements org.apache.poi.hdf.model.hdftypes.HDFType
{
    protected short field_1_itl;
    protected byte field_2_tlp_flags;
    private static org.apache.poi.util.BitField fBorders;
    private static org.apache.poi.util.BitField fShading;
    private static org.apache.poi.util.BitField fFont;
    private static org.apache.poi.util.BitField fColor;
    private static org.apache.poi.util.BitField fBestFit;
    private static org.apache.poi.util.BitField fHdrRows;
    private static org.apache.poi.util.BitField fLastRow;

    public void <init>()
    {
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void fillFields(byte[], int)
    {
        byte[] r1;
        short $s2;
        byte $b4;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;
        int i0, $i1, $i3;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = 0 + i0;

        $s2 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r1, $i1);

        r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: short field_1_itl> = $s2;

        $i3 = 2 + i0;

        $b4 = r1[$i3];

        r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags> = $b4;

        return;
    }

    public void serialize(byte[], int)
    {
        byte[] r0;
        short $s1;
        byte $b3;
        org.apache.poi.hwpf.model.types.TLPAbstractType r1;
        int i0, $i2, $i4;

        r1 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i2 = 0 + i0;

        $s1 = r1.<org.apache.poi.hwpf.model.types.TLPAbstractType: short field_1_itl>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r0, $i2, $s1);

        $i4 = 2 + i0;

        $b3 = r1.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags>;

        r0[$i4] = $b3;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hwpf.model.types.TLPAbstractType r2;
        byte $b1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        short $s0;
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21;
        int $i2, $i3;
        java.lang.String $r20;

        r2 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[TLP]\n");

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .itl                  = ");

        $r1 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $s0 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.TLPAbstractType: short getItl()>();

        $i2 = (int) $s0;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )\n");

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .tlp_flags            = ");

        $r4 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $b1 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte getTlp_flags()>();

        $i3 = (int) $b1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )\n");

        $r6 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .fBorders                 = ");

        $z0 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.TLPAbstractType: boolean isFBorders()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r8 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .fShading                 = ");

        $z1 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.TLPAbstractType: boolean isFShading()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z1);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r10 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .fFont                    = ");

        $z2 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.TLPAbstractType: boolean isFFont()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z2);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r12 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .fColor                   = ");

        $z3 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.TLPAbstractType: boolean isFColor()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z3);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r14 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .fBestFit                 = ");

        $z4 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.TLPAbstractType: boolean isFBestFit()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z4);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r16 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .fHdrRows                 = ");

        $z5 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.TLPAbstractType: boolean isFHdrRows()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z5);

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r18 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .fLastRow                 = ");

        $z6 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.TLPAbstractType: boolean isFLastRow()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z6);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[/TLP]\n");

        $r20 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r20;
    }

    public int getSize()
    {
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        return 7;
    }

    public short getItl()
    {
        short $s0;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        $s0 = r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: short field_1_itl>;

        return $s0;
    }

    public void setItl(short)
    {
        short s0;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: short field_1_itl> = s0;

        return;
    }

    public byte getTlp_flags()
    {
        byte $b0;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags>;

        return $b0;
    }

    public void setTlp_flags(byte)
    {
        byte b0;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags> = b0;

        return;
    }

    public void setFBorders(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fBorders>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags> = $b2;

        return;
    }

    public boolean isFBorders()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fBorders>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFShading(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fShading>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags> = $b2;

        return;
    }

    public boolean isFShading()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fShading>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFFont(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fFont>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags> = $b2;

        return;
    }

    public boolean isFFont()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fFont>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFColor(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fColor>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags> = $b2;

        return;
    }

    public boolean isFColor()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fColor>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFBestFit(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fBestFit>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags> = $b2;

        return;
    }

    public boolean isFBestFit()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fBestFit>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFHdrRows(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fHdrRows>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags> = $b2;

        return;
    }

    public boolean isFHdrRows()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fHdrRows>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setFLastRow(boolean)
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;
        int $i1, $i3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fLastRow>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i3, z0);

        $b2 = (byte) $i1;

        r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags> = $b2;

        return;
    }

    public boolean isFLastRow()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0;
        org.apache.poi.hwpf.model.types.TLPAbstractType r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.types.TLPAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fLastRow>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TLPAbstractType: byte field_2_tlp_flags>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    static void <clinit>()
    {
        org.apache.poi.util.BitField $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = new org.apache.poi.util.BitField;

        specialinvoke $r0.<org.apache.poi.util.BitField: void <init>(int)>(1);

        <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fBorders> = $r0;

        $r1 = new org.apache.poi.util.BitField;

        specialinvoke $r1.<org.apache.poi.util.BitField: void <init>(int)>(2);

        <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fShading> = $r1;

        $r2 = new org.apache.poi.util.BitField;

        specialinvoke $r2.<org.apache.poi.util.BitField: void <init>(int)>(4);

        <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fFont> = $r2;

        $r3 = new org.apache.poi.util.BitField;

        specialinvoke $r3.<org.apache.poi.util.BitField: void <init>(int)>(8);

        <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fColor> = $r3;

        $r4 = new org.apache.poi.util.BitField;

        specialinvoke $r4.<org.apache.poi.util.BitField: void <init>(int)>(16);

        <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fBestFit> = $r4;

        $r5 = new org.apache.poi.util.BitField;

        specialinvoke $r5.<org.apache.poi.util.BitField: void <init>(int)>(32);

        <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fHdrRows> = $r5;

        $r6 = new org.apache.poi.util.BitField;

        specialinvoke $r6.<org.apache.poi.util.BitField: void <init>(int)>(64);

        <org.apache.poi.hwpf.model.types.TLPAbstractType: org.apache.poi.util.BitField fLastRow> = $r6;

        return;
    }
}
