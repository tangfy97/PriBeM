public final class org.tukaani.xz.simple.PowerPC extends java.lang.Object implements org.tukaani.xz.simple.SimpleFilter
{
    private final boolean isEncoder;
    private int pos;

    public void <init>(boolean, int)
    {
        int i0;
        org.tukaani.xz.simple.PowerPC r0;
        boolean z0;

        r0 := @this: org.tukaani.xz.simple.PowerPC;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.tukaani.xz.simple.PowerPC: boolean isEncoder> = z0;

        r0.<org.tukaani.xz.simple.PowerPC: int pos> = i0;

        return;
    }

    public int code(byte[], int, int)
    {
        byte[] r1;
        byte $b6, $b9, $b10, $b11, $b12, $b14, $b19, $b24, $b34, $b36, $b39, $b42, $b43, $b45;
        short $s7, $s15, $s20, $s25, $s53, $s56, $s58, $s60;
        org.tukaani.xz.simple.PowerPC r0;
        boolean $z0;
        int i0, i1, $i2, i3, $i4, $i5, $i8, $i13, $i16, $i17, $i18, $i21, $i22, $i23, $i26, i27, $i28, $i29, $i30, $i31, $i32, $i33, $i35, $i37, $i38, $i40, $i41, $i44, $i46, $i47, $i48, $i49, i50, i51, i52, $i54, $i55, $i57, $i59, $i61, $i62;

        r0 := @this: org.tukaani.xz.simple.PowerPC;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = i0 + i1;

        i3 = $i2 - 4;

        i50 = i0;

     label1:
        if i50 > i3 goto label5;

        $b6 = r1[i50];

        $s53 = (short) $b6;

        $s7 = $s53 & 252;

        $i54 = (int) $s7;

        if $i54 != 72 goto label4;

        $i8 = i50 + 3;

        $b9 = r1[$i8];

        $b10 = $b9 & 3;

        if $b10 != 1 goto label4;

        $b11 = r1[i50];

        $b12 = $b11 & 3;

        $i55 = (int) $b12;

        $i17 = $i55 << 24;

        $i13 = i50 + 1;

        $b14 = r1[$i13];

        $s56 = (short) $b14;

        $s15 = $s56 & 255;

        $i57 = (int) $s15;

        $i16 = $i57 << 16;

        $i22 = $i17 | $i16;

        $i18 = i50 + 2;

        $b19 = r1[$i18];

        $s58 = (short) $b19;

        $s20 = $s58 & 255;

        $i59 = (int) $s20;

        $i21 = $i59 << 8;

        $i26 = $i22 | $i21;

        $i23 = i50 + 3;

        $b24 = r1[$i23];

        $s60 = (short) $b24;

        $s25 = $s60 & 252;

        $i61 = (int) $s25;

        i27 = $i26 | $i61;

        $z0 = r0.<org.tukaani.xz.simple.PowerPC: boolean isEncoder>;

        if $z0 == 0 goto label2;

        $i47 = r0.<org.tukaani.xz.simple.PowerPC: int pos>;

        $i48 = $i47 + i50;

        $i49 = $i48 - i0;

        i51 = i27 + $i49;

        goto label3;

     label2:
        $i28 = r0.<org.tukaani.xz.simple.PowerPC: int pos>;

        $i29 = $i28 + i50;

        $i30 = $i29 - i0;

        i51 = i27 - $i30;

     label3:
        $i31 = i51 >>> 24;

        $i32 = $i31 & 3;

        $i33 = 72 | $i32;

        $b34 = (byte) $i33;

        r1[i50] = $b34;

        $i37 = i50 + 1;

        $i35 = i51 >>> 16;

        $b36 = (byte) $i35;

        r1[$i37] = $b36;

        $i40 = i50 + 2;

        $i38 = i51 >>> 8;

        $b39 = (byte) $i38;

        r1[$i40] = $b39;

        $i46 = i50 + 3;

        $i41 = i50 + 3;

        $b42 = r1[$i41];

        $b43 = $b42 & 3;

        $i62 = (int) $b43;

        $i44 = $i62 | i51;

        $b45 = (byte) $i44;

        r1[$i46] = $b45;

     label4:
        i50 = i50 + 4;

        goto label1;

     label5:
        i52 = i50 - i0;

        $i4 = r0.<org.tukaani.xz.simple.PowerPC: int pos>;

        $i5 = $i4 + i52;

        r0.<org.tukaani.xz.simple.PowerPC: int pos> = $i5;

        return i52;
    }
}
