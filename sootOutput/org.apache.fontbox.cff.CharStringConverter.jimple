public class org.apache.fontbox.cff.CharStringConverter extends org.apache.fontbox.cff.CharStringHandler
{
    private int defaultWidthX;
    private int nominalWidthX;
    private java.util.List sequence;
    private int pathCount;

    public void <init>(int, int, org.apache.fontbox.cff.IndexData, org.apache.fontbox.cff.IndexData)
    {
        org.apache.fontbox.cff.IndexData r1, r2;
        org.apache.fontbox.cff.CharStringConverter r0;
        int i0, i1;

        r0 := @this: org.apache.fontbox.cff.CharStringConverter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.fontbox.cff.IndexData;

        r2 := @parameter3: org.apache.fontbox.cff.IndexData;

        specialinvoke r0.<org.apache.fontbox.cff.CharStringHandler: void <init>()>();

        r0.<org.apache.fontbox.cff.CharStringConverter: int defaultWidthX> = 0;

        r0.<org.apache.fontbox.cff.CharStringConverter: int nominalWidthX> = 0;

        r0.<org.apache.fontbox.cff.CharStringConverter: java.util.List sequence> = null;

        r0.<org.apache.fontbox.cff.CharStringConverter: int pathCount> = 0;

        r0.<org.apache.fontbox.cff.CharStringConverter: int defaultWidthX> = i0;

        r0.<org.apache.fontbox.cff.CharStringConverter: int nominalWidthX> = i1;

        return;
    }

    public void <init>(int, int)
    {
        int i0, i1;
        org.apache.fontbox.cff.CharStringConverter r0;

        r0 := @this: org.apache.fontbox.cff.CharStringConverter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.apache.fontbox.cff.CharStringHandler: void <init>()>();

        r0.<org.apache.fontbox.cff.CharStringConverter: int defaultWidthX> = 0;

        r0.<org.apache.fontbox.cff.CharStringConverter: int nominalWidthX> = 0;

        r0.<org.apache.fontbox.cff.CharStringConverter: java.util.List sequence> = null;

        r0.<org.apache.fontbox.cff.CharStringConverter: int pathCount> = 0;

        r0.<org.apache.fontbox.cff.CharStringConverter: int defaultWidthX> = i0;

        r0.<org.apache.fontbox.cff.CharStringConverter: int nominalWidthX> = i1;

        return;
    }

    public java.util.List convert(java.util.List)
    {
        java.util.List r2, $r3;
        org.apache.fontbox.cff.CharStringConverter r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.fontbox.cff.CharStringConverter;

        r2 := @parameter0: java.util.List;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.fontbox.cff.CharStringConverter: java.util.List sequence> = $r1;

        r0.<org.apache.fontbox.cff.CharStringConverter: int pathCount> = 0;

        virtualinvoke r0.<org.apache.fontbox.cff.CharStringConverter: java.util.List handleSequence(java.util.List)>(r2);

        $r3 = r0.<org.apache.fontbox.cff.CharStringConverter: java.util.List sequence>;

        return $r3;
    }

    public java.util.List handleCommand(java.util.List, org.apache.fontbox.cff.CharStringCommand)
    {
        org.apache.fontbox.cff.CharStringCommand$Key $r2;
        org.apache.fontbox.cff.CharStringConverter r3;
        java.util.List r4, $r5, $r6;
        java.util.Map $r1;
        org.apache.fontbox.cff.CharStringCommand r0;
        boolean $z0;

        r3 := @this: org.apache.fontbox.cff.CharStringConverter;

        r4 := @parameter0: java.util.List;

        r0 := @parameter1: org.apache.fontbox.cff.CharStringCommand;

        $r1 = <org.apache.fontbox.cff.CharStringCommand: java.util.Map TYPE1_VOCABULARY>;

        $r2 = virtualinvoke r0.<org.apache.fontbox.cff.CharStringCommand: org.apache.fontbox.cff.CharStringCommand$Key getKey()>();

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r6 = specialinvoke r3.<org.apache.fontbox.cff.CharStringConverter: java.util.List handleType1Command(java.util.List,org.apache.fontbox.cff.CharStringCommand)>(r4, r0);

        return $r6;

     label1:
        $r5 = specialinvoke r3.<org.apache.fontbox.cff.CharStringConverter: java.util.List handleType2Command(java.util.List,org.apache.fontbox.cff.CharStringCommand)>(r4, r0);

        return $r5;
    }

    private java.util.List handleType1Command(java.util.List, org.apache.fontbox.cff.CharStringCommand)
    {
        java.util.Map $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        java.util.List $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, r27;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.fontbox.cff.CharStringCommand r0;
        java.lang.String r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        org.apache.fontbox.cff.CharStringCommand$Key $r2;
        org.apache.fontbox.cff.CharStringConverter r18;
        java.lang.Object $r3;

        r18 := @this: org.apache.fontbox.cff.CharStringConverter;

        r27 := @parameter0: java.util.List;

        r0 := @parameter1: org.apache.fontbox.cff.CharStringCommand;

        $r1 = <org.apache.fontbox.cff.CharStringCommand: java.util.Map TYPE1_VOCABULARY>;

        $r2 = virtualinvoke r0.<org.apache.fontbox.cff.CharStringCommand: org.apache.fontbox.cff.CharStringCommand$Key getKey()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (java.lang.String) $r3;

        $r5 = "hstem";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label03;

        $i6 = interfaceinvoke r27.<java.util.List: int size()>();

        $i7 = $i6 % 2;

        if $i7 == 0 goto label01;

        $z13 = 1;

        goto label02;

     label01:
        $z13 = 0;

     label02:
        $r26 = specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: java.util.List clearStack(java.util.List,boolean)>(r27, $z13);

        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void expandStemHints(java.util.List,boolean)>($r26, 1);

        goto label26;

     label03:
        $r6 = "vstem";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label06;

        $i4 = interfaceinvoke r27.<java.util.List: int size()>();

        $i5 = $i4 % 2;

        if $i5 == 0 goto label04;

        $z14 = 1;

        goto label05;

     label04:
        $z14 = 0;

     label05:
        $r25 = specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: java.util.List clearStack(java.util.List,boolean)>(r27, $z14);

        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void expandStemHints(java.util.List,boolean)>($r25, 0);

        goto label26;

     label06:
        $r7 = "vmoveto";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label09;

        $i3 = interfaceinvoke r27.<java.util.List: int size()>();

        if $i3 <= 1 goto label07;

        $z15 = 1;

        goto label08;

     label07:
        $z15 = 0;

     label08:
        $r24 = specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: java.util.List clearStack(java.util.List,boolean)>(r27, $z15);

        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void markPath()>();

        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r24, r0);

        goto label26;

     label09:
        $r8 = "rlineto";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label10;

        $r23 = staticinvoke <org.apache.fontbox.cff.CharStringConverter: java.util.List split(java.util.List,int)>(r27, 2);

        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void addCommandList(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r23, r0);

        goto label26;

     label10:
        $r9 = "hlineto";

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z4 == 0 goto label11;

        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void drawAlternatingLine(java.util.List,boolean)>(r27, 1);

        goto label26;

     label11:
        $r10 = "vlineto";

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z5 == 0 goto label12;

        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void drawAlternatingLine(java.util.List,boolean)>(r27, 0);

        goto label26;

     label12:
        $r11 = "rrcurveto";

        $z6 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z6 == 0 goto label13;

        $r22 = staticinvoke <org.apache.fontbox.cff.CharStringConverter: java.util.List split(java.util.List,int)>(r27, 6);

        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void addCommandList(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r22, r0);

        goto label26;

     label13:
        $r12 = "endchar";

        $z7 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z7 == 0 goto label16;

        $i2 = interfaceinvoke r27.<java.util.List: int size()>();

        if $i2 <= 0 goto label14;

        $z16 = 1;

        goto label15;

     label14:
        $z16 = 0;

     label15:
        $r21 = specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: java.util.List clearStack(java.util.List,boolean)>(r27, $z16);

        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void closePath()>();

        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r21, r0);

        goto label26;

     label16:
        $r13 = "rmoveto";

        $z8 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z8 == 0 goto label19;

        $i1 = interfaceinvoke r27.<java.util.List: int size()>();

        if $i1 <= 2 goto label17;

        $z17 = 1;

        goto label18;

     label17:
        $z17 = 0;

     label18:
        $r20 = specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: java.util.List clearStack(java.util.List,boolean)>(r27, $z17);

        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void markPath()>();

        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r20, r0);

        goto label26;

     label19:
        $r14 = "hmoveto";

        $z9 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z9 == 0 goto label22;

        $i0 = interfaceinvoke r27.<java.util.List: int size()>();

        if $i0 <= 1 goto label20;

        $z18 = 1;

        goto label21;

     label20:
        $z18 = 0;

     label21:
        $r19 = specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: java.util.List clearStack(java.util.List,boolean)>(r27, $z18);

        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void markPath()>();

        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r19, r0);

        goto label26;

     label22:
        $r15 = "vhcurveto";

        $z10 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z10 == 0 goto label23;

        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void drawAlternatingCurve(java.util.List,boolean)>(r27, 0);

        goto label26;

     label23:
        $r16 = "hvcurveto";

        $z11 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z11 == 0 goto label24;

        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void drawAlternatingCurve(java.util.List,boolean)>(r27, 1);

        goto label26;

     label24:
        $r17 = "return";

        $z12 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z12 == 0 goto label25;

        return r27;

     label25:
        specialinvoke r18.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>(r27, r0);

     label26:
        return null;
    }

    private java.util.List handleType2Command(java.util.List, org.apache.fontbox.cff.CharStringCommand)
    {
        java.lang.Integer $r34, $r36, $r38, $r40, $r48, $r50, $r53, $r55, $r57, $r59, $r61, $r62, $r66, $r67, $r69, $r71, $r73, $r74, $r86, $r87, $r89, $r91, $r93, $r94, $r98, $r99, $r101, $r103, $r104, $r106, $r107, $r113, $r114;
        java.util.Map $r1;
        java.lang.Integer[] $r32, $r51, $r64, $r84, $r96;
        java.util.List[] $r43, $r76, $r81, $r109;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31, i32;
        java.lang.Object $r3, $r33, $r35, $r37, $r39, $r41, $r46, $r47, $r49, $r52, $r54, $r56, $r58, $r60, $r65, $r68, $r70, $r72, $r85, $r88, $r90, $r92, $r97, $r100, $r102, $r105;
        java.lang.String r4, $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r17, $r18;
        org.apache.fontbox.cff.CharStringConverter r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.util.List $r12, $r19, $r20, $r22, $r24, $r25, $r27, $r29, $r30, $r31, $r42, $r44, $r63, $r75, $r77, $r79, $r80, $r82, $r95, $r108, $r110, r112;
        org.apache.fontbox.cff.CharStringCommand r0, $r21, $r23, $r26, $r28, $r45, $r78, $r83, $r111;
        org.apache.fontbox.cff.CharStringCommand$Key $r2;

        r11 := @this: org.apache.fontbox.cff.CharStringConverter;

        r112 := @parameter0: java.util.List;

        r0 := @parameter1: org.apache.fontbox.cff.CharStringCommand;

        $r1 = <org.apache.fontbox.cff.CharStringCommand: java.util.Map TYPE2_VOCABULARY>;

        $r2 = virtualinvoke r0.<org.apache.fontbox.cff.CharStringCommand: org.apache.fontbox.cff.CharStringCommand$Key getKey()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (java.lang.String) $r3;

        $r5 = "hflex";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label01;

        $r84 = newarray (java.lang.Integer)[6];

        $r85 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(0);

        $r86 = (java.lang.Integer) $r85;

        $r84[0] = $r86;

        $r87 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r84[1] = $r87;

        $r88 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(1);

        $r89 = (java.lang.Integer) $r88;

        $r84[2] = $r89;

        $r90 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(2);

        $r91 = (java.lang.Integer) $r90;

        $r84[3] = $r91;

        $r92 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(3);

        $r93 = (java.lang.Integer) $r92;

        $r84[4] = $r93;

        $r94 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r84[5] = $r94;

        $r95 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r84);

        $r96 = newarray (java.lang.Integer)[6];

        $r97 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(4);

        $r98 = (java.lang.Integer) $r97;

        $r96[0] = $r98;

        $r99 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r96[1] = $r99;

        $r100 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(5);

        $r101 = (java.lang.Integer) $r100;

        $r96[2] = $r101;

        $r102 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(2);

        $r103 = (java.lang.Integer) $r102;

        $i28 = virtualinvoke $r103.<java.lang.Integer: int intValue()>();

        $i29 = neg $i28;

        $r104 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i29);

        $r96[3] = $r104;

        $r105 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(6);

        $r106 = (java.lang.Integer) $r105;

        $r96[4] = $r106;

        $r107 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r96[5] = $r107;

        $r108 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r96);

        $r109 = newarray (java.util.List)[2];

        $r109[0] = $r95;

        $r109[1] = $r108;

        $r110 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r109);

        $r111 = new org.apache.fontbox.cff.CharStringCommand;

        specialinvoke $r111.<org.apache.fontbox.cff.CharStringCommand: void <init>(int)>(8);

        specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: void addCommandList(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r110, $r111);

        goto label25;

     label01:
        $r6 = "flex";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label02;

        $r79 = interfaceinvoke r112.<java.util.List: java.util.List subList(int,int)>(0, 6);

        $r80 = interfaceinvoke r112.<java.util.List: java.util.List subList(int,int)>(6, 12);

        $r81 = newarray (java.util.List)[2];

        $r81[0] = $r79;

        $r81[1] = $r80;

        $r82 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r81);

        $r83 = new org.apache.fontbox.cff.CharStringCommand;

        specialinvoke $r83.<org.apache.fontbox.cff.CharStringCommand: void <init>(int)>(8);

        specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: void addCommandList(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r82, $r83);

        goto label25;

     label02:
        $r7 = "hflex1";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label03;

        $r51 = newarray (java.lang.Integer)[6];

        $r52 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(0);

        $r53 = (java.lang.Integer) $r52;

        $r51[0] = $r53;

        $r54 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(1);

        $r55 = (java.lang.Integer) $r54;

        $r51[1] = $r55;

        $r56 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(2);

        $r57 = (java.lang.Integer) $r56;

        $r51[2] = $r57;

        $r58 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(3);

        $r59 = (java.lang.Integer) $r58;

        $r51[3] = $r59;

        $r60 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(4);

        $r61 = (java.lang.Integer) $r60;

        $r51[4] = $r61;

        $r62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r51[5] = $r62;

        $r63 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r51);

        $r64 = newarray (java.lang.Integer)[6];

        $r65 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(5);

        $r66 = (java.lang.Integer) $r65;

        $r64[0] = $r66;

        $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r64[1] = $r67;

        $r68 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(6);

        $r69 = (java.lang.Integer) $r68;

        $r64[2] = $r69;

        $r70 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(7);

        $r71 = (java.lang.Integer) $r70;

        $r64[3] = $r71;

        $r72 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(8);

        $r73 = (java.lang.Integer) $r72;

        $r64[4] = $r73;

        $r74 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r64[5] = $r74;

        $r75 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r64);

        $r76 = newarray (java.util.List)[2];

        $r76[0] = $r63;

        $r76[1] = $r75;

        $r77 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r76);

        $r78 = new org.apache.fontbox.cff.CharStringCommand;

        specialinvoke $r78.<org.apache.fontbox.cff.CharStringCommand: void <init>(int)>(8);

        specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: void addCommandList(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r77, $r78);

        goto label25;

     label03:
        $r8 = "flex1";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label10;

        i30 = 0;

        i31 = 0;

        i32 = 0;

     label04:
        if i32 >= 5 goto label05;

        $i23 = i32 * 2;

        $r47 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>($i23);

        $r48 = (java.lang.Integer) $r47;

        $i24 = virtualinvoke $r48.<java.lang.Integer: int intValue()>();

        i30 = i30 + $i24;

        $i25 = i32 * 2;

        $i26 = $i25 + 1;

        $r49 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>($i26);

        $r50 = (java.lang.Integer) $r49;

        $i27 = virtualinvoke $r50.<java.lang.Integer: int intValue()>();

        i31 = i31 + $i27;

        i32 = i32 + 1;

        goto label04;

     label05:
        $r31 = interfaceinvoke r112.<java.util.List: java.util.List subList(int,int)>(0, 6);

        $r32 = newarray (java.lang.Integer)[6];

        $r33 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(6);

        $r34 = (java.lang.Integer) $r33;

        $r32[0] = $r34;

        $r35 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(7);

        $r36 = (java.lang.Integer) $r35;

        $r32[1] = $r36;

        $r37 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(8);

        $r38 = (java.lang.Integer) $r37;

        $r32[2] = $r38;

        $r39 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(9);

        $r40 = (java.lang.Integer) $r39;

        $r32[3] = $r40;

        $i17 = staticinvoke <java.lang.Math: int abs(int)>(i30);

        $i18 = staticinvoke <java.lang.Math: int abs(int)>(i31);

        if $i17 <= $i18 goto label06;

        $r46 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(10);

        $r113 = (java.lang.Integer) $r46;

        goto label07;

     label06:
        $i19 = neg i30;

        $r113 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

     label07:
        $r32[4] = $r113;

        $i20 = staticinvoke <java.lang.Math: int abs(int)>(i30);

        $i21 = staticinvoke <java.lang.Math: int abs(int)>(i31);

        if $i20 <= $i21 goto label08;

        $i22 = neg i31;

        $r114 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i22);

        goto label09;

     label08:
        $r41 = interfaceinvoke r112.<java.util.List: java.lang.Object get(int)>(10);

        $r114 = (java.lang.Integer) $r41;

     label09:
        $r32[5] = $r114;

        $r42 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r32);

        $r43 = newarray (java.util.List)[2];

        $r43[0] = $r31;

        $r43[1] = $r42;

        $r44 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r43);

        $r45 = new org.apache.fontbox.cff.CharStringCommand;

        specialinvoke $r45.<org.apache.fontbox.cff.CharStringCommand: void <init>(int)>(8);

        specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: void addCommandList(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r44, $r45);

        goto label25;

     label10:
        $r9 = "hstemhm";

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z4 == 0 goto label13;

        $i15 = interfaceinvoke r112.<java.util.List: int size()>();

        $i16 = $i15 % 2;

        if $i16 == 0 goto label11;

        $z12 = 1;

        goto label12;

     label11:
        $z12 = 0;

     label12:
        $r30 = specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: java.util.List clearStack(java.util.List,boolean)>(r112, $z12);

        specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: void expandStemHints(java.util.List,boolean)>($r30, 1);

        goto label25;

     label13:
        $r10 = "hintmask";

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z5 != 0 goto label14;

        $r13 = "cntrmask";

        $z6 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z6 == 0 goto label17;

     label14:
        $i0 = interfaceinvoke r112.<java.util.List: int size()>();

        $i1 = $i0 % 2;

        if $i1 == 0 goto label15;

        $z13 = 1;

        goto label16;

     label15:
        $z13 = 0;

     label16:
        $r12 = specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: java.util.List clearStack(java.util.List,boolean)>(r112, $z13);

        $i2 = interfaceinvoke $r12.<java.util.List: int size()>();

        if $i2 <= 0 goto label25;

        specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: void expandStemHints(java.util.List,boolean)>($r12, 0);

        goto label25;

     label17:
        $r14 = "vstemhm";

        $z7 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z7 == 0 goto label20;

        $i13 = interfaceinvoke r112.<java.util.List: int size()>();

        $i14 = $i13 % 2;

        if $i14 == 0 goto label18;

        $z14 = 1;

        goto label19;

     label18:
        $z14 = 0;

     label19:
        $r29 = specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: java.util.List clearStack(java.util.List,boolean)>(r112, $z14);

        specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: void expandStemHints(java.util.List,boolean)>($r29, 0);

        goto label25;

     label20:
        $r15 = "rcurveline";

        $z8 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z8 == 0 goto label21;

        $i8 = interfaceinvoke r112.<java.util.List: int size()>();

        $i9 = $i8 - 2;

        $r24 = interfaceinvoke r112.<java.util.List: java.util.List subList(int,int)>(0, $i9);

        $r25 = staticinvoke <org.apache.fontbox.cff.CharStringConverter: java.util.List split(java.util.List,int)>($r24, 6);

        $r26 = new org.apache.fontbox.cff.CharStringCommand;

        specialinvoke $r26.<org.apache.fontbox.cff.CharStringCommand: void <init>(int)>(8);

        specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: void addCommandList(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r25, $r26);

        $i10 = interfaceinvoke r112.<java.util.List: int size()>();

        $i11 = $i10 - 2;

        $i12 = interfaceinvoke r112.<java.util.List: int size()>();

        $r27 = interfaceinvoke r112.<java.util.List: java.util.List subList(int,int)>($i11, $i12);

        $r28 = new org.apache.fontbox.cff.CharStringCommand;

        specialinvoke $r28.<org.apache.fontbox.cff.CharStringCommand: void <init>(int)>(5);

        specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r27, $r28);

        goto label25;

     label21:
        $r16 = "rlinecurve";

        $z9 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z9 == 0 goto label22;

        $i3 = interfaceinvoke r112.<java.util.List: int size()>();

        $i4 = $i3 - 6;

        $r19 = interfaceinvoke r112.<java.util.List: java.util.List subList(int,int)>(0, $i4);

        $r20 = staticinvoke <org.apache.fontbox.cff.CharStringConverter: java.util.List split(java.util.List,int)>($r19, 2);

        $r21 = new org.apache.fontbox.cff.CharStringCommand;

        specialinvoke $r21.<org.apache.fontbox.cff.CharStringCommand: void <init>(int)>(5);

        specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: void addCommandList(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r20, $r21);

        $i5 = interfaceinvoke r112.<java.util.List: int size()>();

        $i6 = $i5 - 6;

        $i7 = interfaceinvoke r112.<java.util.List: int size()>();

        $r22 = interfaceinvoke r112.<java.util.List: java.util.List subList(int,int)>($i6, $i7);

        $r23 = new org.apache.fontbox.cff.CharStringCommand;

        specialinvoke $r23.<org.apache.fontbox.cff.CharStringCommand: void <init>(int)>(8);

        specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r22, $r23);

        goto label25;

     label22:
        $r17 = "vvcurveto";

        $z10 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z10 == 0 goto label23;

        specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: void drawCurve(java.util.List,boolean)>(r112, 0);

        goto label25;

     label23:
        $r18 = "hhcurveto";

        $z11 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z11 == 0 goto label24;

        specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: void drawCurve(java.util.List,boolean)>(r112, 1);

        goto label25;

     label24:
        specialinvoke r11.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>(r112, r0);

     label25:
        return null;
    }

    private java.util.List clearStack(java.util.List, boolean)
    {
        java.lang.Integer $r3, $r4, $r8, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.fontbox.cff.CharStringCommand $r6, $r13;
        boolean z0;
        org.apache.fontbox.cff.CharStringConverter r0;
        java.util.List $r1, $r5, $r12, r14;
        java.lang.Object $r9;
        java.lang.Integer[] $r2, $r7;

        r0 := @this: org.apache.fontbox.cff.CharStringConverter;

        r14 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.apache.fontbox.cff.CharStringConverter: java.util.List sequence>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

        if z0 == 0 goto label1;

        $r7 = newarray (java.lang.Integer)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r7[0] = $r8;

        $r9 = interfaceinvoke r14.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (java.lang.Integer) $r9;

        $i2 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        $i3 = r0.<org.apache.fontbox.cff.CharStringConverter: int nominalWidthX>;

        $i4 = $i2 + $i3;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r7[1] = $r11;

        $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        $r13 = new org.apache.fontbox.cff.CharStringCommand;

        specialinvoke $r13.<org.apache.fontbox.cff.CharStringCommand: void <init>(int)>(13);

        specialinvoke r0.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r12, $r13);

        $i5 = interfaceinvoke r14.<java.util.List: int size()>();

        r14 = interfaceinvoke r14.<java.util.List: java.util.List subList(int,int)>(1, $i5);

        goto label2;

     label1:
        $r2 = newarray (java.lang.Integer)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r2[0] = $r3;

        $i1 = r0.<org.apache.fontbox.cff.CharStringConverter: int defaultWidthX>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2[1] = $r4;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r6 = new org.apache.fontbox.cff.CharStringCommand;

        specialinvoke $r6.<org.apache.fontbox.cff.CharStringCommand: void <init>(int)>(13);

        specialinvoke r0.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r5, $r6);

     label2:
        return r14;
    }

    private void expandStemHints(java.util.List, boolean)
    {
        java.util.List r1;
        org.apache.fontbox.cff.CharStringConverter r0;
        boolean z0;

        r0 := @this: org.apache.fontbox.cff.CharStringConverter;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        return;
    }

    private void markPath()
    {
        org.apache.fontbox.cff.CharStringConverter r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.fontbox.cff.CharStringConverter;

        $i0 = r0.<org.apache.fontbox.cff.CharStringConverter: int pathCount>;

        if $i0 <= 0 goto label1;

        specialinvoke r0.<org.apache.fontbox.cff.CharStringConverter: void closePath()>();

     label1:
        $i1 = r0.<org.apache.fontbox.cff.CharStringConverter: int pathCount>;

        $i2 = $i1 + 1;

        r0.<org.apache.fontbox.cff.CharStringConverter: int pathCount> = $i2;

        return;
    }

    private void closePath()
    {
        org.apache.fontbox.cff.CharStringConverter r0;
        java.util.List $r2, $r3, $r4;
        int $i0, $i1, $i2;
        org.apache.fontbox.cff.CharStringCommand $r1, $r6;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.apache.fontbox.cff.CharStringConverter;

        $i0 = r0.<org.apache.fontbox.cff.CharStringConverter: int pathCount>;

        if $i0 <= 0 goto label1;

        $r4 = r0.<org.apache.fontbox.cff.CharStringConverter: java.util.List sequence>;

        $r3 = r0.<org.apache.fontbox.cff.CharStringConverter: java.util.List sequence>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i2);

        $r6 = (org.apache.fontbox.cff.CharStringCommand) $r5;

        goto label2;

     label1:
        $r6 = null;

     label2:
        $r1 = new org.apache.fontbox.cff.CharStringCommand;

        specialinvoke $r1.<org.apache.fontbox.cff.CharStringCommand: void <init>(int)>(9);

        if $r6 == null goto label3;

        $z0 = virtualinvoke $r1.<org.apache.fontbox.cff.CharStringCommand: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label3;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        specialinvoke r0.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r2, $r1);

     label3:
        return;
    }

    private void drawAlternatingLine(java.util.List, boolean)
    {
        org.apache.fontbox.cff.CharStringConverter r0;
        java.util.List $r1, r3;
        byte $b2;
        int $i0, $i1;
        org.apache.fontbox.cff.CharStringCommand $r2;
        boolean z0, $z1;

        r0 := @this: org.apache.fontbox.cff.CharStringConverter;

        r3 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

     label1:
        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label6;

        $r1 = interfaceinvoke r3.<java.util.List: java.util.List subList(int,int)>(0, 1);

        $r2 = new org.apache.fontbox.cff.CharStringCommand;

        if z0 == 0 goto label2;

        $b2 = 6;

        goto label3;

     label2:
        $b2 = 7;

     label3:
        specialinvoke $r2.<org.apache.fontbox.cff.CharStringCommand: void <init>(int)>($b2);

        specialinvoke r0.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r1, $r2);

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        r3 = interfaceinvoke r3.<java.util.List: java.util.List subList(int,int)>(1, $i1);

        if z0 != 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        z0 = $z1;

        goto label1;

     label6:
        return;
    }

    private void drawAlternatingCurve(java.util.List, boolean)
    {
        java.lang.Integer $r2, $r4, $r6, $r8, $r10, $r17, $r18, $r20, $r22, $r24, $r29, $r30;
        byte $b3;
        boolean z0, z1, $z3, $z4, $z5, $z6;
        java.util.List $r11, $r13, $r25, r28;
        java.lang.Integer[] $r1, $r15;
        int $i0, $i1, $i2;
        org.apache.fontbox.cff.CharStringCommand $r12, $r26;
        org.apache.fontbox.cff.CharStringConverter r0;
        java.lang.Object $r3, $r5, $r7, $r9, $r14, $r16, $r19, $r21, $r23, $r27;

        r0 := @this: org.apache.fontbox.cff.CharStringConverter;

        r28 := @parameter0: java.util.List;

        z1 := @parameter1: boolean;

     label01:
        $i0 = interfaceinvoke r28.<java.util.List: int size()>();

        if $i0 <= 0 goto label14;

        $i1 = interfaceinvoke r28.<java.util.List: int size()>();

        if $i1 != 5 goto label02;

        $z6 = 1;

        $z5 = 1;

        $z4 = 1;

        goto label03;

     label02:
        $z6 = 0;

        $z5 = 0;

        $z4 = 0;

     label03:
        z0 = $z4;

        if z1 == 0 goto label06;

        $r15 = newarray (java.lang.Integer)[6];

        $r16 = interfaceinvoke r28.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (java.lang.Integer) $r16;

        $r15[0] = $r17;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r15[1] = $r18;

        $r19 = interfaceinvoke r28.<java.util.List: java.lang.Object get(int)>(1);

        $r20 = (java.lang.Integer) $r19;

        $r15[2] = $r20;

        $r21 = interfaceinvoke r28.<java.util.List: java.lang.Object get(int)>(2);

        $r22 = (java.lang.Integer) $r21;

        $r15[3] = $r22;

        if $z5 == 0 goto label04;

        $r27 = interfaceinvoke r28.<java.util.List: java.lang.Object get(int)>(4);

        $r29 = (java.lang.Integer) $r27;

        goto label05;

     label04:
        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label05:
        $r15[4] = $r29;

        $r23 = interfaceinvoke r28.<java.util.List: java.lang.Object get(int)>(3);

        $r24 = (java.lang.Integer) $r23;

        $r15[5] = $r24;

        $r25 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r15);

        $r26 = new org.apache.fontbox.cff.CharStringCommand;

        specialinvoke $r26.<org.apache.fontbox.cff.CharStringCommand: void <init>(int)>(8);

        specialinvoke r0.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r25, $r26);

        goto label09;

     label06:
        $r1 = newarray (java.lang.Integer)[6];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r1[0] = $r2;

        $r3 = interfaceinvoke r28.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (java.lang.Integer) $r3;

        $r1[1] = $r4;

        $r5 = interfaceinvoke r28.<java.util.List: java.lang.Object get(int)>(1);

        $r6 = (java.lang.Integer) $r5;

        $r1[2] = $r6;

        $r7 = interfaceinvoke r28.<java.util.List: java.lang.Object get(int)>(2);

        $r8 = (java.lang.Integer) $r7;

        $r1[3] = $r8;

        $r9 = interfaceinvoke r28.<java.util.List: java.lang.Object get(int)>(3);

        $r10 = (java.lang.Integer) $r9;

        $r1[4] = $r10;

        if $z6 == 0 goto label07;

        $r14 = interfaceinvoke r28.<java.util.List: java.lang.Object get(int)>(4);

        $r30 = (java.lang.Integer) $r14;

        goto label08;

     label07:
        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label08:
        $r1[5] = $r30;

        $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $r12 = new org.apache.fontbox.cff.CharStringCommand;

        specialinvoke $r12.<org.apache.fontbox.cff.CharStringCommand: void <init>(int)>(8);

        specialinvoke r0.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r11, $r12);

     label09:
        $r13 = r28;

        if z0 == 0 goto label10;

        $b3 = 5;

        goto label11;

     label10:
        $b3 = 4;

     label11:
        $i2 = interfaceinvoke r28.<java.util.List: int size()>();

        r28 = interfaceinvoke $r13.<java.util.List: java.util.List subList(int,int)>($b3, $i2);

        if z1 != 0 goto label12;

        $z3 = 1;

        goto label13;

     label12:
        $z3 = 0;

     label13:
        z1 = $z3;

        goto label01;

     label14:
        return;
    }

    private void drawCurve(java.util.List, boolean)
    {
        java.lang.Integer $r3, $r5, $r7, $r8, $r10, $r21, $r23, $r25, $r27, $r28, $r37, $r38;
        byte $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12;
        boolean z0, z1, $z3, $z4, $z5;
        java.util.List $r11, $r13, $r14, $r15, $r16, $r17, $r29, $r31, $r32, $r33, $r35, r36;
        java.lang.Integer[] $r1, $r19;
        int $i0, $i1, $i2, $i3;
        org.apache.fontbox.cff.CharStringCommand $r12, $r30;
        org.apache.fontbox.cff.CharStringConverter r0;
        java.lang.Object $r2, $r4, $r6, $r9, $r18, $r20, $r22, $r24, $r26, $r34;

        r0 := @this: org.apache.fontbox.cff.CharStringConverter;

        r36 := @parameter0: java.util.List;

        z1 := @parameter1: boolean;

     label01:
        $i0 = interfaceinvoke r36.<java.util.List: int size()>();

        if $i0 <= 0 goto label28;

        $i1 = interfaceinvoke r36.<java.util.List: int size()>();

        $i2 = $i1 % 4;

        if $i2 != 1 goto label02;

        $z5 = 1;

        $z4 = 1;

        $z3 = 1;

        goto label03;

     label02:
        $z5 = 0;

        $z4 = 0;

        $z3 = 0;

     label03:
        z0 = $z3;

        if z1 == 0 goto label14;

        $r19 = newarray (java.lang.Integer)[6];

        $r35 = r36;

        if $z4 == 0 goto label04;

        $b4 = 1;

        goto label05;

     label04:
        $b4 = 0;

     label05:
        $r20 = interfaceinvoke $r35.<java.util.List: java.lang.Object get(int)>($b4);

        $r21 = (java.lang.Integer) $r20;

        $r19[0] = $r21;

        if z0 == 0 goto label06;

        $r34 = interfaceinvoke r36.<java.util.List: java.lang.Object get(int)>(0);

        $r37 = (java.lang.Integer) $r34;

        goto label07;

     label06:
        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label07:
        $r19[1] = $r37;

        $r33 = r36;

        if z0 == 0 goto label08;

        $b5 = 2;

        goto label09;

     label08:
        $b5 = 1;

     label09:
        $r22 = interfaceinvoke $r33.<java.util.List: java.lang.Object get(int)>($b5);

        $r23 = (java.lang.Integer) $r22;

        $r19[2] = $r23;

        $r32 = r36;

        if z0 == 0 goto label10;

        $b6 = 3;

        goto label11;

     label10:
        $b6 = 2;

     label11:
        $r24 = interfaceinvoke $r32.<java.util.List: java.lang.Object get(int)>($b6);

        $r25 = (java.lang.Integer) $r24;

        $r19[3] = $r25;

        $r31 = r36;

        if z0 == 0 goto label12;

        $b7 = 4;

        goto label13;

     label12:
        $b7 = 3;

     label13:
        $r26 = interfaceinvoke $r31.<java.util.List: java.lang.Object get(int)>($b7);

        $r27 = (java.lang.Integer) $r26;

        $r19[4] = $r27;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r19[5] = $r28;

        $r29 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r19);

        $r30 = new org.apache.fontbox.cff.CharStringCommand;

        specialinvoke $r30.<org.apache.fontbox.cff.CharStringCommand: void <init>(int)>(8);

        specialinvoke r0.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r29, $r30);

        goto label25;

     label14:
        $r1 = newarray (java.lang.Integer)[6];

        if $z5 == 0 goto label15;

        $r18 = interfaceinvoke r36.<java.util.List: java.lang.Object get(int)>(0);

        $r38 = (java.lang.Integer) $r18;

        goto label16;

     label15:
        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label16:
        $r1[0] = $r38;

        $r17 = r36;

        if z0 == 0 goto label17;

        $b8 = 1;

        goto label18;

     label17:
        $b8 = 0;

     label18:
        $r2 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>($b8);

        $r3 = (java.lang.Integer) $r2;

        $r1[1] = $r3;

        $r16 = r36;

        if z0 == 0 goto label19;

        $b9 = 2;

        goto label20;

     label19:
        $b9 = 1;

     label20:
        $r4 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>($b9);

        $r5 = (java.lang.Integer) $r4;

        $r1[2] = $r5;

        $r15 = r36;

        if z0 == 0 goto label21;

        $b10 = 3;

        goto label22;

     label21:
        $b10 = 2;

     label22:
        $r6 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>($b10);

        $r7 = (java.lang.Integer) $r6;

        $r1[3] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r1[4] = $r8;

        $r14 = r36;

        if z0 == 0 goto label23;

        $b11 = 4;

        goto label24;

     label23:
        $b11 = 3;

     label24:
        $r9 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>($b11);

        $r10 = (java.lang.Integer) $r9;

        $r1[5] = $r10;

        $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $r12 = new org.apache.fontbox.cff.CharStringCommand;

        specialinvoke $r12.<org.apache.fontbox.cff.CharStringCommand: void <init>(int)>(8);

        specialinvoke r0.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r11, $r12);

     label25:
        $r13 = r36;

        if z0 == 0 goto label26;

        $b12 = 5;

        goto label27;

     label26:
        $b12 = 4;

     label27:
        $i3 = interfaceinvoke r36.<java.util.List: int size()>();

        r36 = interfaceinvoke $r13.<java.util.List: java.util.List subList(int,int)>($b12, $i3);

        goto label01;

     label28:
        return;
    }

    private void addCommandList(java.util.List, org.apache.fontbox.cff.CharStringCommand)
    {
        java.util.List r0, $r4;
        org.apache.fontbox.cff.CharStringConverter r1;
        int $i0, i1;
        org.apache.fontbox.cff.CharStringCommand r3;
        java.lang.Object $r2;

        r1 := @this: org.apache.fontbox.cff.CharStringConverter;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: org.apache.fontbox.cff.CharStringCommand;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (java.util.List) $r2;

        specialinvoke r1.<org.apache.fontbox.cff.CharStringConverter: void addCommand(java.util.List,org.apache.fontbox.cff.CharStringCommand)>($r4, r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void addCommand(java.util.List, org.apache.fontbox.cff.CharStringCommand)
    {
        java.util.List r1, $r2, $r4;
        org.apache.fontbox.cff.CharStringConverter r0;
        org.apache.fontbox.cff.CharStringCommand r3;

        r0 := @this: org.apache.fontbox.cff.CharStringConverter;

        r1 := @parameter0: java.util.List;

        r3 := @parameter1: org.apache.fontbox.cff.CharStringCommand;

        $r2 = r0.<org.apache.fontbox.cff.CharStringConverter: java.util.List sequence>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        $r4 = r0.<org.apache.fontbox.cff.CharStringConverter: java.util.List sequence>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

        return;
    }

    private static java.util.List split(java.util.List, int)
    {
        java.util.ArrayList $r0;
        java.util.List r1, $r2;
        int $i0, i1, $i2, $i3, $i4, $i5, i6;

        r1 := @parameter0: java.util.List;

        i1 := @parameter1: int;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i6 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i2 = $i0 / i1;

        if i6 >= $i2 goto label2;

        $i5 = i6 * i1;

        $i3 = i6 + 1;

        $i4 = $i3 * i1;

        $r2 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>($i5, $i4);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        i6 = i6 + 1;

        goto label1;

     label2:
        return $r0;
    }
}
