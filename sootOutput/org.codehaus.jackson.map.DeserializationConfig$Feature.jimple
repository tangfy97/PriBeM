public final enum class org.codehaus.jackson.map.DeserializationConfig$Feature extends java.lang.Enum implements org.codehaus.jackson.map.MapperConfig$ConfigFeature
{
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature USE_ANNOTATIONS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_SETTERS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_CREATORS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_FIELDS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature USE_GETTERS_AS_SETTERS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_DECIMAL_FOR_FLOATS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_INTEGER_FOR_INTS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature USE_JAVA_ARRAY_FOR_JSON_ARRAY;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature READ_ENUMS_USING_TO_STRING;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_UNKNOWN_PROPERTIES;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NULL_FOR_PRIMITIVES;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NUMBERS_FOR_ENUMS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature WRAP_EXCEPTIONS;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature UNWRAP_ROOT_VALUE;
    public static final enum org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT;
    final boolean _defaultState;
    private static final org.codehaus.jackson.map.DeserializationConfig$Feature[] $VALUES;

    public static org.codehaus.jackson.map.DeserializationConfig$Feature[] values()
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.codehaus.jackson.map.DeserializationConfig$Feature[]) $r1;

        return $r2;
    }

    public static org.codehaus.jackson.map.DeserializationConfig$Feature valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/codehaus/jackson/map/DeserializationConfig$Feature;", r0);

        $r2 = (org.codehaus.jackson.map.DeserializationConfig$Feature) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, boolean)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature r0;
        int i0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig$Feature;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: boolean _defaultState> = z0;

        return;
    }

    public boolean enabledByDefault()
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig$Feature;

        $z0 = r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: boolean _defaultState>;

        return $z0;
    }

    public int getMask()
    {
        int $i0, $i1;
        org.codehaus.jackson.map.DeserializationConfig$Feature r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig$Feature;

        $i0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: int ordinal()>();

        $i1 = 1 << $i0;

        return $i1;
    }

    static void <clinit>()
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature[] $r17;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("USE_ANNOTATIONS", 0, 1);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_ANNOTATIONS> = $r0;

        $r1 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("AUTO_DETECT_SETTERS", 1, 1);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_SETTERS> = $r1;

        $r2 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("AUTO_DETECT_CREATORS", 2, 1);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_CREATORS> = $r2;

        $r3 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r3.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("AUTO_DETECT_FIELDS", 3, 1);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_FIELDS> = $r3;

        $r4 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r4.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("USE_GETTERS_AS_SETTERS", 4, 1);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_GETTERS_AS_SETTERS> = $r4;

        $r5 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r5.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("CAN_OVERRIDE_ACCESS_MODIFIERS", 5, 1);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS> = $r5;

        $r6 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r6.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("USE_BIG_DECIMAL_FOR_FLOATS", 6, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_DECIMAL_FOR_FLOATS> = $r6;

        $r7 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r7.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("USE_BIG_INTEGER_FOR_INTS", 7, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_INTEGER_FOR_INTS> = $r7;

        $r8 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r8.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("USE_JAVA_ARRAY_FOR_JSON_ARRAY", 8, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_JAVA_ARRAY_FOR_JSON_ARRAY> = $r8;

        $r9 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r9.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("READ_ENUMS_USING_TO_STRING", 9, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature READ_ENUMS_USING_TO_STRING> = $r9;

        $r10 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r10.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("FAIL_ON_UNKNOWN_PROPERTIES", 10, 1);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_UNKNOWN_PROPERTIES> = $r10;

        $r11 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r11.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("FAIL_ON_NULL_FOR_PRIMITIVES", 11, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NULL_FOR_PRIMITIVES> = $r11;

        $r12 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r12.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("FAIL_ON_NUMBERS_FOR_ENUMS", 12, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NUMBERS_FOR_ENUMS> = $r12;

        $r13 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r13.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("WRAP_EXCEPTIONS", 13, 1);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature WRAP_EXCEPTIONS> = $r13;

        $r14 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r14.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("ACCEPT_SINGLE_VALUE_AS_ARRAY", 14, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY> = $r14;

        $r15 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r15.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("UNWRAP_ROOT_VALUE", 15, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature UNWRAP_ROOT_VALUE> = $r15;

        $r16 = new org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke $r16.<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>("ACCEPT_EMPTY_STRING_AS_NULL_OBJECT", 16, 0);

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT> = $r16;

        $r17 = newarray (org.codehaus.jackson.map.DeserializationConfig$Feature)[17];

        $r18 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_ANNOTATIONS>;

        $r17[0] = $r18;

        $r19 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_SETTERS>;

        $r17[1] = $r19;

        $r20 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_CREATORS>;

        $r17[2] = $r20;

        $r21 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_FIELDS>;

        $r17[3] = $r21;

        $r22 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_GETTERS_AS_SETTERS>;

        $r17[4] = $r22;

        $r23 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $r17[5] = $r23;

        $r24 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_DECIMAL_FOR_FLOATS>;

        $r17[6] = $r24;

        $r25 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_INTEGER_FOR_INTS>;

        $r17[7] = $r25;

        $r26 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_JAVA_ARRAY_FOR_JSON_ARRAY>;

        $r17[8] = $r26;

        $r27 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature READ_ENUMS_USING_TO_STRING>;

        $r17[9] = $r27;

        $r28 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_UNKNOWN_PROPERTIES>;

        $r17[10] = $r28;

        $r29 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NULL_FOR_PRIMITIVES>;

        $r17[11] = $r29;

        $r30 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NUMBERS_FOR_ENUMS>;

        $r17[12] = $r30;

        $r31 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature WRAP_EXCEPTIONS>;

        $r17[13] = $r31;

        $r32 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY>;

        $r17[14] = $r32;

        $r33 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature UNWRAP_ROOT_VALUE>;

        $r17[15] = $r33;

        $r34 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT>;

        $r17[16] = $r34;

        <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature[] $VALUES> = $r17;

        return;
    }
}
