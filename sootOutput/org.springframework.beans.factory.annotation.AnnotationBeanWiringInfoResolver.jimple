public class org.springframework.beans.factory.'annotation'.AnnotationBeanWiringInfoResolver extends java.lang.Object implements org.springframework.beans.factory.wiring.BeanWiringInfoResolver
{

    public void <init>()
    {
        org.springframework.beans.factory.'annotation'.AnnotationBeanWiringInfoResolver r0;

        r0 := @this: org.springframework.beans.factory.'annotation'.AnnotationBeanWiringInfoResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.springframework.beans.factory.wiring.BeanWiringInfo resolveWiringInfo(java.lang.Object)
    {
        org.springframework.beans.factory.'annotation'.AnnotationBeanWiringInfoResolver r4;
        java.lang.'annotation'.Annotation $r2;
        org.springframework.beans.factory.'annotation'.Configurable r3;
        java.lang.Object r0;
        java.lang.Class $r1;
        org.springframework.beans.factory.wiring.BeanWiringInfo $r5;

        r4 := @this: org.springframework.beans.factory.'annotation'.AnnotationBeanWiringInfoResolver;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Bean instance must not be null");

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/springframework/beans/factory/annotation/Configurable;");

        r3 = (org.springframework.beans.factory.'annotation'.Configurable) $r2;

        if r3 == null goto label1;

        $r5 = virtualinvoke r4.<org.springframework.beans.factory.'annotation'.AnnotationBeanWiringInfoResolver: org.springframework.beans.factory.wiring.BeanWiringInfo buildWiringInfo(java.lang.Object,org.springframework.beans.factory.'annotation'.Configurable)>(r0, r3);

        goto label2;

     label1:
        $r5 = null;

     label2:
        return $r5;
    }

    protected org.springframework.beans.factory.wiring.BeanWiringInfo buildWiringInfo(java.lang.Object, org.springframework.beans.factory.'annotation'.Configurable)
    {
        org.springframework.beans.factory.'annotation'.AnnotationBeanWiringInfoResolver r6;
        org.springframework.beans.factory.'annotation'.Configurable r0;
        int $i0;
        java.lang.String $r3, $r4, $r8, $r10;
        boolean $z0, $z1, $z2;
        org.springframework.beans.factory.wiring.BeanWiringInfo $r5, $r9, $r11;
        org.springframework.beans.factory.'annotation'.Autowire $r1, $r2, $r12;
        java.lang.Object r7;

        r6 := @this: org.springframework.beans.factory.'annotation'.AnnotationBeanWiringInfoResolver;

        r7 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.springframework.beans.factory.'annotation'.Configurable;

        $r1 = <org.springframework.beans.factory.'annotation'.Autowire: org.springframework.beans.factory.'annotation'.Autowire NO>;

        $r2 = interfaceinvoke r0.<org.springframework.beans.factory.'annotation'.Configurable: org.springframework.beans.factory.'annotation'.Autowire autowire()>();

        $z0 = virtualinvoke $r1.<org.springframework.beans.factory.'annotation'.Autowire: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r11 = new org.springframework.beans.factory.wiring.BeanWiringInfo;

        $r12 = interfaceinvoke r0.<org.springframework.beans.factory.'annotation'.Configurable: org.springframework.beans.factory.'annotation'.Autowire autowire()>();

        $i0 = virtualinvoke $r12.<org.springframework.beans.factory.'annotation'.Autowire: int value()>();

        $z2 = interfaceinvoke r0.<org.springframework.beans.factory.'annotation'.Configurable: boolean dependencyCheck()>();

        specialinvoke $r11.<org.springframework.beans.factory.wiring.BeanWiringInfo: void <init>(int,boolean)>($i0, $z2);

        return $r11;

     label1:
        $r3 = "";

        $r4 = interfaceinvoke r0.<org.springframework.beans.factory.'annotation'.Configurable: java.lang.String value()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label2;

        $r9 = new org.springframework.beans.factory.wiring.BeanWiringInfo;

        $r10 = interfaceinvoke r0.<org.springframework.beans.factory.'annotation'.Configurable: java.lang.String value()>();

        specialinvoke $r9.<org.springframework.beans.factory.wiring.BeanWiringInfo: void <init>(java.lang.String,boolean)>($r10, 0);

        return $r9;

     label2:
        $r5 = new org.springframework.beans.factory.wiring.BeanWiringInfo;

        $r8 = virtualinvoke r6.<org.springframework.beans.factory.'annotation'.AnnotationBeanWiringInfoResolver: java.lang.String getDefaultBeanName(java.lang.Object)>(r7);

        specialinvoke $r5.<org.springframework.beans.factory.wiring.BeanWiringInfo: void <init>(java.lang.String,boolean)>($r8, 1);

        return $r5;
    }

    protected java.lang.String getDefaultBeanName(java.lang.Object)
    {
        org.springframework.beans.factory.'annotation'.AnnotationBeanWiringInfoResolver r3;
        java.lang.Object r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r3 := @this: org.springframework.beans.factory.'annotation'.AnnotationBeanWiringInfoResolver;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class getUserClass(java.lang.Object)>(r0);

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }
}
