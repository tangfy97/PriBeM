public class org.apache.lucene.store.FSDirectory$FSIndexOutput extends org.apache.lucene.store.BufferedIndexOutput
{
    private final org.apache.lucene.store.FSDirectory parent;
    private final java.lang.String name;
    private final java.io.RandomAccessFile file;
    private volatile boolean isOpen;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.store.FSDirectory, java.lang.String) throws java.io.IOException
    {
        java.io.RandomAccessFile $r3;
        org.apache.lucene.store.FSDirectory$FSIndexOutput r0;
        java.lang.String r2;
        org.apache.lucene.store.FSDirectory r1;
        java.io.File $r4, $r5;

        r0 := @this: org.apache.lucene.store.FSDirectory$FSIndexOutput;

        r1 := @parameter0: org.apache.lucene.store.FSDirectory;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.lucene.store.BufferedIndexOutput: void <init>()>();

        r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: org.apache.lucene.store.FSDirectory parent> = r1;

        r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: java.lang.String name> = r2;

        $r3 = new java.io.RandomAccessFile;

        $r4 = new java.io.File;

        $r5 = r1.<org.apache.lucene.store.FSDirectory: java.io.File directory>;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, r2);

        specialinvoke $r3.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r4, "rw");

        r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: java.io.RandomAccessFile file> = $r3;

        r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: boolean isOpen> = 1;

        return;
    }

    public void flushBuffer(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        java.io.RandomAccessFile $r2;
        org.apache.lucene.store.FSDirectory$FSIndexOutput r0;
        java.lang.AssertionError $r3;
        int i0, i1;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.store.FSDirectory$FSIndexOutput;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = <org.apache.lucene.store.FSDirectory$FSIndexOutput: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: boolean isOpen>;

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: java.io.RandomAccessFile file>;

        virtualinvoke $r2.<java.io.RandomAccessFile: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void close() throws java.io.IOException
    {
        java.lang.Throwable $r4, $r5, $r8;
        java.io.RandomAccessFile $r2, $r3, $r6, $r7;
        org.apache.lucene.store.FSDirectory$FSIndexOutput r0;
        org.apache.lucene.store.FSDirectory $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.store.FSDirectory$FSIndexOutput;

        $r1 = r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: org.apache.lucene.store.FSDirectory parent>;

        virtualinvoke $r1.<org.apache.lucene.store.FSDirectory: void onIndexOutputClosed(org.apache.lucene.store.FSDirectory$FSIndexOutput)>(r0);

        $z0 = r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: boolean isOpen>;

        if $z0 == 0 goto label14;

     label01:
        specialinvoke r0.<org.apache.lucene.store.BufferedIndexOutput: void close()>();

     label02:
        r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: boolean isOpen> = 0;

        if 1 != 0 goto label06;

     label03:
        $r3 = r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: java.io.RandomAccessFile file>;

        virtualinvoke $r3.<java.io.RandomAccessFile: void close()>();

     label04:
        goto label14;

     label05:
        $r8 := @caughtexception;

        goto label14;

     label06:
        $r2 = r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: java.io.RandomAccessFile file>;

        virtualinvoke $r2.<java.io.RandomAccessFile: void close()>();

        goto label14;

     label07:
        $r5 := @caughtexception;

     label08:
        r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: boolean isOpen> = 0;

        if 0 != 0 goto label12;

     label09:
        $r7 = r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: java.io.RandomAccessFile file>;

        virtualinvoke $r7.<java.io.RandomAccessFile: void close()>();

     label10:
        goto label13;

     label11:
        $r4 := @caughtexception;

        goto label13;

     label12:
        $r6 = r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: java.io.RandomAccessFile file>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void close()>();

     label13:
        throw $r5;

     label14:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public void seek(long) throws java.io.IOException
    {
        java.io.RandomAccessFile $r1;
        long l0;
        org.apache.lucene.store.FSDirectory$FSIndexOutput r0;

        r0 := @this: org.apache.lucene.store.FSDirectory$FSIndexOutput;

        l0 := @parameter0: long;

        specialinvoke r0.<org.apache.lucene.store.BufferedIndexOutput: void seek(long)>(l0);

        $r1 = r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: java.io.RandomAccessFile file>;

        virtualinvoke $r1.<java.io.RandomAccessFile: void seek(long)>(l0);

        return;
    }

    public long length() throws java.io.IOException
    {
        java.io.RandomAccessFile $r1;
        long $l0;
        org.apache.lucene.store.FSDirectory$FSIndexOutput r0;

        r0 := @this: org.apache.lucene.store.FSDirectory$FSIndexOutput;

        $r1 = r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: java.io.RandomAccessFile file>;

        $l0 = virtualinvoke $r1.<java.io.RandomAccessFile: long length()>();

        return $l0;
    }

    public void setLength(long) throws java.io.IOException
    {
        java.io.RandomAccessFile $r1;
        long l0;
        org.apache.lucene.store.FSDirectory$FSIndexOutput r0;

        r0 := @this: org.apache.lucene.store.FSDirectory$FSIndexOutput;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: java.io.RandomAccessFile file>;

        virtualinvoke $r1.<java.io.RandomAccessFile: void setLength(long)>(l0);

        return;
    }

    static java.lang.String access$000(org.apache.lucene.store.FSDirectory$FSIndexOutput)
    {
        java.lang.String $r1;
        org.apache.lucene.store.FSDirectory$FSIndexOutput r0;

        r0 := @parameter0: org.apache.lucene.store.FSDirectory$FSIndexOutput;

        $r1 = r0.<org.apache.lucene.store.FSDirectory$FSIndexOutput: java.lang.String name>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/store/FSDirectory;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.store.FSDirectory$FSIndexOutput: boolean $assertionsDisabled> = $z1;

        return;
    }
}
