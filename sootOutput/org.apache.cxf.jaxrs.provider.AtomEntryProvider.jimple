public class org.apache.cxf.jaxrs.provider.AtomEntryProvider extends org.apache.cxf.jaxrs.provider.AbstractAtomProvider
{

    public void <init>()
    {
        org.apache.cxf.jaxrs.provider.AtomEntryProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomEntryProvider;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AbstractAtomProvider: void <init>()>();

        return;
    }

    public boolean isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r5;
        org.apache.cxf.jaxrs.provider.AtomEntryProvider r2;
        java.lang.reflect.Type r3;
        java.lang.Class r0, $r1;
        java.lang.'annotation'.Annotation[] r4;
        boolean $z0;

        r2 := @this: org.apache.cxf.jaxrs.provider.AtomEntryProvider;

        r0 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.reflect.Type;

        r4 := @parameter2: java.lang.'annotation'.Annotation[];

        r5 := @parameter3: javax.ws.rs.core.MediaType;

        $r1 = class "Lorg/apache/abdera/model/Entry;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        return $z0;
    }

    public boolean isReadable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r5;
        org.apache.cxf.jaxrs.provider.AtomEntryProvider r2;
        java.lang.reflect.Type r3;
        java.lang.Class r0, $r1;
        java.lang.'annotation'.Annotation[] r4;
        boolean $z0;

        r2 := @this: org.apache.cxf.jaxrs.provider.AtomEntryProvider;

        r0 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.reflect.Type;

        r4 := @parameter2: java.lang.'annotation'.Annotation[];

        r5 := @parameter3: javax.ws.rs.core.MediaType;

        $r1 = class "Lorg/apache/abdera/model/Entry;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        return $z0;
    }
}
