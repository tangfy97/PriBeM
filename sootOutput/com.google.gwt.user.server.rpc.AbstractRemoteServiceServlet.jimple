public abstract class com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet extends javax.servlet.http.HttpServlet
{
    protected transient java.lang.ThreadLocal perThreadRequest;
    protected transient java.lang.ThreadLocal perThreadResponse;

    public void <init>()
    {
        com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet r0;

        r0 := @this: com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet;

        specialinvoke r0.<javax.servlet.http.HttpServlet: void <init>()>();

        return;
    }

    public final void doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        java.lang.Throwable $r7, $r10, $r13;
        java.lang.ThreadLocal $r2, $r4, $r5, $r6, $r8, $r9, $r11, $r12;
        javax.servlet.http.HttpServletResponse r3;
        com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet r0;
        javax.servlet.http.HttpServletRequest r1;

        r0 := @this: com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r3 := @parameter1: javax.servlet.http.HttpServletResponse;

     label01:
        entermonitor r0;

     label02:
        specialinvoke r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: void validateThreadLocalData()>();

        $r2 = r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: java.lang.ThreadLocal perThreadRequest>;

        virtualinvoke $r2.<java.lang.ThreadLocal: void set(java.lang.Object)>(r1);

        $r4 = r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: java.lang.ThreadLocal perThreadResponse>;

        virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>(r3);

        exitmonitor r0;

     label03:
        goto label06;

     label04:
        $r13 := @caughtexception;

        exitmonitor r0;

     label05:
        throw $r13;

     label06:
        virtualinvoke r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: void processPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r3);

     label07:
        $r5 = r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: java.lang.ThreadLocal perThreadRequest>;

        virtualinvoke $r5.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);

        $r6 = r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: java.lang.ThreadLocal perThreadResponse>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);

        goto label12;

     label08:
        $r10 := @caughtexception;

        virtualinvoke r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: void doUnexpectedFailure(java.lang.Throwable)>($r10);

     label09:
        $r11 = r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: java.lang.ThreadLocal perThreadRequest>;

        virtualinvoke $r11.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);

        $r12 = r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: java.lang.ThreadLocal perThreadResponse>;

        virtualinvoke $r12.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);

        goto label12;

     label10:
        $r7 := @caughtexception;

     label11:
        $r8 = r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: java.lang.ThreadLocal perThreadRequest>;

        virtualinvoke $r8.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);

        $r9 = r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: java.lang.ThreadLocal perThreadResponse>;

        virtualinvoke $r9.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);

        throw $r7;

     label12:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    protected void doUnexpectedFailure(java.lang.Throwable)
    {
        java.lang.Throwable r4;
        java.lang.IllegalStateException $r5;
        javax.servlet.http.HttpServletResponse $r1, $r3;
        javax.servlet.ServletContext $r2;
        java.lang.RuntimeException $r6;
        com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet r0;

        r0 := @this: com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet;

        r4 := @parameter0: java.lang.Throwable;

     label1:
        $r1 = virtualinvoke r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: javax.servlet.http.HttpServletResponse getThreadLocalResponse()>();

        interfaceinvoke $r1.<javax.servlet.http.HttpServletResponse: void reset()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to report failure", r4);

        throw $r6;

     label4:
        $r2 = virtualinvoke r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: javax.servlet.ServletContext getServletContext()>();

        $r3 = virtualinvoke r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: javax.servlet.http.HttpServletResponse getThreadLocalResponse()>();

        staticinvoke <com.google.gwt.user.server.rpc.RPCServletUtils: void writeResponseForUnexpectedFailure(javax.servlet.ServletContext,javax.servlet.http.HttpServletResponse,java.lang.Throwable)>($r2, $r3, r4);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    protected final java.lang.String getPermutationStrongName()
    {
        javax.servlet.http.HttpServletRequest $r1;
        java.lang.String $r2;
        com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet r0;

        r0 := @this: com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet;

        $r1 = virtualinvoke r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: javax.servlet.http.HttpServletRequest getThreadLocalRequest()>();

        $r2 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("X-GWT-Permutation");

        return $r2;
    }

    protected final javax.servlet.http.HttpServletRequest getThreadLocalRequest()
    {
        java.lang.Throwable $r4;
        java.lang.ThreadLocal $r1;
        javax.servlet.http.HttpServletRequest $r3;
        java.lang.Object $r2;
        com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet r0;

        r0 := @this: com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: void validateThreadLocalData()>();

        $r1 = r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: java.lang.ThreadLocal perThreadRequest>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (javax.servlet.http.HttpServletRequest) $r2;

        exitmonitor r0;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected final javax.servlet.http.HttpServletResponse getThreadLocalResponse()
    {
        java.lang.Throwable $r4;
        java.lang.ThreadLocal $r1;
        javax.servlet.http.HttpServletResponse $r3;
        java.lang.Object $r2;
        com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet r0;

        r0 := @this: com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: void validateThreadLocalData()>();

        $r1 = r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: java.lang.ThreadLocal perThreadResponse>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (javax.servlet.http.HttpServletResponse) $r2;

        exitmonitor r0;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void onAfterRequestDeserialized(com.google.gwt.user.server.rpc.RPCRequest)
    {
        com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet r0;
        com.google.gwt.user.server.rpc.RPCRequest r1;

        r0 := @this: com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet;

        r1 := @parameter0: com.google.gwt.user.server.rpc.RPCRequest;

        return;
    }

    protected abstract void processPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;

    protected java.lang.String readContent(javax.servlet.http.HttpServletRequest) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r0;
        java.lang.String $r1;
        com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet r2;

        r2 := @this: com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r1 = staticinvoke <com.google.gwt.user.server.rpc.RPCServletUtils: java.lang.String readContentAsGwtRpc(javax.servlet.http.HttpServletRequest)>(r0);

        return $r1;
    }

    private void validateThreadLocalData()
    {
        java.lang.ThreadLocal $r1, $r2, $r3, $r4;
        com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet r0;

        r0 := @this: com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet;

        $r1 = r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: java.lang.ThreadLocal perThreadRequest>;

        if $r1 != null goto label1;

        $r4 = new java.lang.ThreadLocal;

        specialinvoke $r4.<java.lang.ThreadLocal: void <init>()>();

        r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: java.lang.ThreadLocal perThreadRequest> = $r4;

     label1:
        $r2 = r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: java.lang.ThreadLocal perThreadResponse>;

        if $r2 != null goto label2;

        $r3 = new java.lang.ThreadLocal;

        specialinvoke $r3.<java.lang.ThreadLocal: void <init>()>();

        r0.<com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet: java.lang.ThreadLocal perThreadResponse> = $r3;

     label2:
        return;
    }
}
