public class javax.microedition.pki.CertificateException extends java.io.IOException
{
    public static final byte BAD_EXTENSIONS;
    public static final byte BROKEN_CHAIN;
    public static final byte CERTIFICATE_CHAIN_TOO_LONG;
    public static final byte EXPIRED;
    public static final byte INAPPROPRIATE_KEY_USAGE;
    public static final byte MISSING_SIGNATURE;
    public static final byte NOT_YET_VALID;
    public static final byte ROOT_CA_EXPIRED;
    public static final byte SITENAME_MISMATCH;
    public static final byte UNAUTHORIZED_INTERMEDIATE_CA;
    public static final byte UNRECOGNIZED_ISSUER;
    public static final byte UNSUPPORTED_PUBLIC_KEY_TYPE;
    public static final byte UNSUPPORTED_SIGALG;
    public static final byte VERIFICATION_FAILED;

    public void <init>(javax.microedition.pki.Certificate, byte)
    {
        javax.microedition.pki.CertificateException r0;
        javax.microedition.pki.Certificate r1;
        byte b0;

        r0 := @this: javax.microedition.pki.CertificateException;

        r1 := @parameter0: javax.microedition.pki.Certificate;

        b0 := @parameter1: byte;

        specialinvoke r0.<java.io.IOException: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, javax.microedition.pki.Certificate, byte)
    {
        byte b0;
        javax.microedition.pki.CertificateException r0;
        java.lang.String r1;
        javax.microedition.pki.Certificate r2;

        r0 := @this: javax.microedition.pki.CertificateException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.microedition.pki.Certificate;

        b0 := @parameter2: byte;

        specialinvoke r0.<java.io.IOException: void <init>()>();

        return;
    }

    public javax.microedition.pki.Certificate getCertificate()
    {
        javax.microedition.pki.CertificateException r0;

        r0 := @this: javax.microedition.pki.CertificateException;

        return null;
    }

    public byte getReason()
    {
        javax.microedition.pki.CertificateException r0;

        r0 := @this: javax.microedition.pki.CertificateException;

        return 0;
    }

    public static void <clinit>()
    {
        <javax.microedition.pki.CertificateException: byte VERIFICATION_FAILED> = 14;

        <javax.microedition.pki.CertificateException: byte UNSUPPORTED_SIGALG> = 9;

        <javax.microedition.pki.CertificateException: byte UNSUPPORTED_PUBLIC_KEY_TYPE> = 13;

        <javax.microedition.pki.CertificateException: byte UNRECOGNIZED_ISSUER> = 8;

        <javax.microedition.pki.CertificateException: byte UNAUTHORIZED_INTERMEDIATE_CA> = 4;

        <javax.microedition.pki.CertificateException: byte SITENAME_MISMATCH> = 7;

        <javax.microedition.pki.CertificateException: byte ROOT_CA_EXPIRED> = 12;

        <javax.microedition.pki.CertificateException: byte NOT_YET_VALID> = 6;

        <javax.microedition.pki.CertificateException: byte MISSING_SIGNATURE> = 5;

        <javax.microedition.pki.CertificateException: byte INAPPROPRIATE_KEY_USAGE> = 10;

        <javax.microedition.pki.CertificateException: byte EXPIRED> = 3;

        <javax.microedition.pki.CertificateException: byte CERTIFICATE_CHAIN_TOO_LONG> = 2;

        <javax.microedition.pki.CertificateException: byte BROKEN_CHAIN> = 11;

        <javax.microedition.pki.CertificateException: byte BAD_EXTENSIONS> = 1;

        return;
    }
}
