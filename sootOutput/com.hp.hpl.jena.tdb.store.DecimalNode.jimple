public class com.hp.hpl.jena.tdb.store.DecimalNode extends java.lang.Object
{
    java.math.BigDecimal decimal;
    static final int SCALE_LEN;
    static final int VALUE_LEN;
    static final int ENC_LEN;
    static final long MAX_VALUE;
    static final long MIN_VALUE;
    static final int MAX_SCALE;
    static final int MIN_SCALE;
    static final java.math.BigInteger MAX_I;
    static final java.math.BigInteger MIN_I;
    private static int SCALE_LO;
    private static int SCALE_HI;
    private static int VALUE_LO;
    private static int VALUE_HI;
    private int scale;
    private long value;

    public static com.hp.hpl.jena.tdb.store.DecimalNode valueOf(java.math.BigDecimal)
    {
        long $l3;
        java.math.BigDecimal r0;
        com.hp.hpl.jena.tdb.store.DecimalNode $r4;
        int $i0, $i1, $i2;
        java.math.BigInteger $r1, $r2, $r3;

        r0 := @parameter0: java.math.BigDecimal;

        $i0 = virtualinvoke r0.<java.math.BigDecimal: int scale()>();

        $r1 = virtualinvoke r0.<java.math.BigDecimal: java.math.BigInteger unscaledValue()>();

        $r2 = <com.hp.hpl.jena.tdb.store.DecimalNode: java.math.BigInteger MAX_I>;

        $i1 = virtualinvoke $r1.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r2);

        if $i1 > 0 goto label1;

        $r3 = <com.hp.hpl.jena.tdb.store.DecimalNode: java.math.BigInteger MIN_I>;

        $i2 = virtualinvoke $r1.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r3);

        if $i2 >= 0 goto label2;

     label1:
        return null;

     label2:
        $l3 = virtualinvoke $r1.<java.math.BigInteger: long longValue()>();

        $r4 = staticinvoke <com.hp.hpl.jena.tdb.store.DecimalNode: com.hp.hpl.jena.tdb.store.DecimalNode valueOf(long,int)>($l3, $i0);

        return $r4;
    }

    public static com.hp.hpl.jena.tdb.store.DecimalNode valueOf(long, int)
    {
        long l1;
        byte $b2, $b3;
        com.hp.hpl.jena.tdb.store.DecimalNode $r1;
        int i0, $i5, $i6, $i7;

        l1 := @parameter0: long;

        i0 := @parameter1: int;

        $i5 = (int) -128;

        if i0 < $i5 goto label1;

        if i0 <= 127 goto label2;

     label1:
        return null;

     label2:
        $b2 = l1 cmp -140737488355328L;

        $i6 = (int) $b2;

        if $i6 < 0 goto label3;

        $b3 = l1 cmp 140737488355327L;

        $i7 = (int) $b3;

        if $i7 <= 0 goto label4;

     label3:
        return null;

     label4:
        $r1 = new com.hp.hpl.jena.tdb.store.DecimalNode;

        specialinvoke $r1.<com.hp.hpl.jena.tdb.store.DecimalNode: void <init>(long,int)>(l1, i0);

        return $r1;
    }

    private void <init>(long, int)
    {
        int i0;
        long l1;
        com.hp.hpl.jena.tdb.store.DecimalNode r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.DecimalNode;

        l1 := @parameter0: long;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.store.DecimalNode: java.math.BigDecimal decimal> = null;

        r0.<com.hp.hpl.jena.tdb.store.DecimalNode: int scale> = i0;

        r0.<com.hp.hpl.jena.tdb.store.DecimalNode: long value> = l1;

        return;
    }

    public long pack()
    {
        com.hp.hpl.jena.tdb.store.DecimalNode r0;
        int $i0;
        long $l1, $l2;

        r0 := @this: com.hp.hpl.jena.tdb.store.DecimalNode;

        $l1 = r0.<com.hp.hpl.jena.tdb.store.DecimalNode: long value>;

        $i0 = r0.<com.hp.hpl.jena.tdb.store.DecimalNode: int scale>;

        $l2 = staticinvoke <com.hp.hpl.jena.tdb.store.DecimalNode: long pack(long,int)>($l1, $i0);

        return $l2;
    }

    public static long pack(long, int)
    {
        long $l0, $l4, $l5, l6, $l9;
        int i1, $i2, $i3, $i7, $i8;

        l6 := @parameter0: long;

        i1 := @parameter1: int;

        $l0 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long pack(long,long,int,int)>(0L, 2L, 56, 64);

        $l4 = (long) i1;

        $i3 = <com.hp.hpl.jena.tdb.store.DecimalNode: int SCALE_LO>;

        $i2 = <com.hp.hpl.jena.tdb.store.DecimalNode: int SCALE_HI>;

        $l5 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long pack(long,long,int,int)>($l0, $l4, $i3, $i2);

        $i8 = <com.hp.hpl.jena.tdb.store.DecimalNode: int VALUE_LO>;

        $i7 = <com.hp.hpl.jena.tdb.store.DecimalNode: int VALUE_HI>;

        $l9 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long pack(long,long,int,int)>($l5, l6, $i8, $i7);

        return $l9;
    }

    public static com.hp.hpl.jena.tdb.store.DecimalNode unpack(long)
    {
        long l0, $l3, $l7;
        com.hp.hpl.jena.tdb.store.DecimalNode $r0;
        int $i1, $i2, i4, $i5, $i6;

        l0 := @parameter0: long;

        $i2 = <com.hp.hpl.jena.tdb.store.DecimalNode: int SCALE_LO>;

        $i1 = <com.hp.hpl.jena.tdb.store.DecimalNode: int SCALE_HI>;

        $l3 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long unpack(long,int,int)>(l0, $i2, $i1);

        i4 = (int) $l3;

        $i6 = <com.hp.hpl.jena.tdb.store.DecimalNode: int VALUE_LO>;

        $i5 = <com.hp.hpl.jena.tdb.store.DecimalNode: int VALUE_HI>;

        $l7 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long unpack(long,int,int)>(l0, $i6, $i5);

        $r0 = new com.hp.hpl.jena.tdb.store.DecimalNode;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.store.DecimalNode: void <init>(long,int)>($l7, i4);

        return $r0;
    }

    public static java.math.BigDecimal unpackAsBigDecimal(long)
    {
        long l0, $l3, $l7, $l11, l12;
        java.math.BigDecimal $r0;
        int $i1, $i2, i4, $i5, $i6, $i8, $i9, $i10;
        boolean $z0;

        l0 := @parameter0: long;

        $i2 = <com.hp.hpl.jena.tdb.store.DecimalNode: int SCALE_LO>;

        $i1 = <com.hp.hpl.jena.tdb.store.DecimalNode: int SCALE_HI>;

        $l3 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long unpack(long,int,int)>(l0, $i2, $i1);

        i4 = (int) $l3;

        $i6 = <com.hp.hpl.jena.tdb.store.DecimalNode: int VALUE_LO>;

        $i5 = <com.hp.hpl.jena.tdb.store.DecimalNode: int VALUE_HI>;

        $l7 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long unpack(long,int,int)>(l0, $i6, $i5);

        l12 = $l7;

        $i8 = <com.hp.hpl.jena.tdb.store.DecimalNode: int VALUE_HI>;

        $i9 = $i8 - 1;

        $z0 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: boolean isSet(long,int)>($l7, $i9);

        if $z0 == 0 goto label1;

        $i10 = <com.hp.hpl.jena.tdb.store.DecimalNode: int VALUE_HI>;

        $l11 = -1L << $i10;

        l12 = $l7 | $l11;

     label1:
        $r0 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>(l12, i4);

        return $r0;
    }

    public java.math.BigDecimal get()
    {
        java.math.BigDecimal $r1, $r2, $r3;
        com.hp.hpl.jena.tdb.store.DecimalNode r0;
        int $i0;
        long $l1;

        r0 := @this: com.hp.hpl.jena.tdb.store.DecimalNode;

        $r1 = r0.<com.hp.hpl.jena.tdb.store.DecimalNode: java.math.BigDecimal decimal>;

        if $r1 != null goto label1;

        $l1 = r0.<com.hp.hpl.jena.tdb.store.DecimalNode: long value>;

        $i0 = r0.<com.hp.hpl.jena.tdb.store.DecimalNode: int scale>;

        $r3 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>($l1, $i0);

        r0.<com.hp.hpl.jena.tdb.store.DecimalNode: java.math.BigDecimal decimal> = $r3;

     label1:
        $r2 = r0.<com.hp.hpl.jena.tdb.store.DecimalNode: java.math.BigDecimal decimal>;

        return $r2;
    }

    public java.lang.String toString()
    {
        java.math.BigDecimal $r1;
        java.lang.String $r2;
        com.hp.hpl.jena.tdb.store.DecimalNode r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.DecimalNode;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.DecimalNode: java.math.BigDecimal get()>();

        $r2 = virtualinvoke $r1.<java.math.BigDecimal: java.lang.String toPlainString()>();

        return $r2;
    }

    public int getScale()
    {
        int $i0;
        com.hp.hpl.jena.tdb.store.DecimalNode r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.DecimalNode;

        $i0 = r0.<com.hp.hpl.jena.tdb.store.DecimalNode: int scale>;

        return $i0;
    }

    public long getValue()
    {
        long $l0;
        com.hp.hpl.jena.tdb.store.DecimalNode r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.DecimalNode;

        $l0 = r0.<com.hp.hpl.jena.tdb.store.DecimalNode: long value>;

        return $l0;
    }

    static void <clinit>()
    {
        int $i0, $i1;
        java.math.BigInteger $r0, $r1;

        <com.hp.hpl.jena.tdb.store.DecimalNode: int MIN_SCALE> = -128;

        <com.hp.hpl.jena.tdb.store.DecimalNode: int MAX_SCALE> = 127;

        <com.hp.hpl.jena.tdb.store.DecimalNode: long MIN_VALUE> = -140737488355328L;

        <com.hp.hpl.jena.tdb.store.DecimalNode: long MAX_VALUE> = 140737488355327L;

        <com.hp.hpl.jena.tdb.store.DecimalNode: int ENC_LEN> = 56;

        <com.hp.hpl.jena.tdb.store.DecimalNode: int VALUE_LEN> = 48;

        <com.hp.hpl.jena.tdb.store.DecimalNode: int SCALE_LEN> = 8;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(140737488355327L);

        <com.hp.hpl.jena.tdb.store.DecimalNode: java.math.BigInteger MAX_I> = $r0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-140737488355328L);

        <com.hp.hpl.jena.tdb.store.DecimalNode: java.math.BigInteger MIN_I> = $r1;

        <com.hp.hpl.jena.tdb.store.DecimalNode: int SCALE_LO> = 48;

        <com.hp.hpl.jena.tdb.store.DecimalNode: int SCALE_HI> = 56;

        <com.hp.hpl.jena.tdb.store.DecimalNode: int VALUE_LO> = 0;

        $i0 = <com.hp.hpl.jena.tdb.store.DecimalNode: int VALUE_LO>;

        $i1 = $i0 + 48;

        <com.hp.hpl.jena.tdb.store.DecimalNode: int VALUE_HI> = $i1;

        return;
    }
}
