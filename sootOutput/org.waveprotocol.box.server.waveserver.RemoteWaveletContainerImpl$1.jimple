class org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1 extends java.lang.Object implements java.lang.Runnable
{
    final java.util.concurrent.atomic.AtomicInteger val$numSignerInfoPrefetched;
    final java.util.List val$appliedDeltas;
    final java.lang.String val$domain;
    final org.waveprotocol.wave.federation.WaveletFederationProvider val$federationProvider;
    final org.waveprotocol.box.server.waveserver.CertificateManager val$certificateManager;
    final com.google.common.util.concurrent.SettableFuture val$futureResult;
    final org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl this$0;

    void <init>(org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl, java.util.concurrent.atomic.AtomicInteger, java.util.List, java.lang.String, org.waveprotocol.wave.federation.WaveletFederationProvider, org.waveprotocol.box.server.waveserver.CertificateManager, com.google.common.util.concurrent.SettableFuture)
    {
        org.waveprotocol.box.server.waveserver.CertificateManager r6;
        org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1 r0;
        org.waveprotocol.wave.federation.WaveletFederationProvider r5;
        com.google.common.util.concurrent.SettableFuture r7;
        java.util.List r3;
        java.util.concurrent.atomic.AtomicInteger r2;
        org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl r1;
        java.lang.String r4;

        r0 := @this: org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl;

        r2 := @parameter1: java.util.concurrent.atomic.AtomicInteger;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.waveprotocol.wave.federation.WaveletFederationProvider;

        r6 := @parameter5: org.waveprotocol.box.server.waveserver.CertificateManager;

        r7 := @parameter6: com.google.common.util.concurrent.SettableFuture;

        r0.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl this$0> = r1;

        r0.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1: java.util.concurrent.atomic.AtomicInteger val$numSignerInfoPrefetched> = r2;

        r0.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1: java.util.List val$appliedDeltas> = r3;

        r0.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1: java.lang.String val$domain> = r4;

        r0.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1: org.waveprotocol.wave.federation.WaveletFederationProvider val$federationProvider> = r5;

        r0.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.CertificateManager val$certificateManager> = r6;

        r0.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1: com.google.common.util.concurrent.SettableFuture val$futureResult> = r7;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        org.waveprotocol.box.server.waveserver.CertificateManager $r3;
        org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1 r0;
        org.waveprotocol.wave.federation.WaveletFederationProvider $r4;
        com.google.common.util.concurrent.SettableFuture $r2;
        java.util.List $r6;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;
        java.lang.String $r5;
        org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl $r7;

        r0 := @this: org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1: java.util.concurrent.atomic.AtomicInteger val$numSignerInfoPrefetched>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        if $i0 != 0 goto label1;

        $r7 = r0.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl this$0>;

        $r6 = r0.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1: java.util.List val$appliedDeltas>;

        $r5 = r0.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1: java.lang.String val$domain>;

        $r4 = r0.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1: org.waveprotocol.wave.federation.WaveletFederationProvider val$federationProvider>;

        $r3 = r0.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1: org.waveprotocol.box.server.waveserver.CertificateManager val$certificateManager>;

        $r2 = r0.<org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl$1: com.google.common.util.concurrent.SettableFuture val$futureResult>;

        staticinvoke <org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl: void access$000(org.waveprotocol.box.server.waveserver.RemoteWaveletContainerImpl,java.util.List,java.lang.String,org.waveprotocol.wave.federation.WaveletFederationProvider,org.waveprotocol.box.server.waveserver.CertificateManager,com.google.common.util.concurrent.SettableFuture)>($r7, $r6, $r5, $r4, $r3, $r2);

     label1:
        return;
    }
}
