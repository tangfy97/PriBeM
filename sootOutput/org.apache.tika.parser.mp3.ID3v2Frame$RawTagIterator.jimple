public class org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator extends java.lang.Object implements java.util.Iterator
{
    private int nameLength;
    private int sizeLength;
    private int sizeMultiplier;
    private int flagLength;
    private int offset;
    final org.apache.tika.parser.mp3.ID3v2Frame this$0;

    protected void <init>(org.apache.tika.parser.mp3.ID3v2Frame, int, int, int, int)
    {
        int i0, i1, i2, i3;
        org.apache.tika.parser.mp3.ID3v2Frame r1;
        org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator r0;

        r0 := @this: org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator;

        r1 := @parameter0: org.apache.tika.parser.mp3.ID3v2Frame;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r0.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: org.apache.tika.parser.mp3.ID3v2Frame this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: int offset> = 0;

        r0.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: int nameLength> = i0;

        r0.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: int sizeLength> = i1;

        r0.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: int sizeMultiplier> = i2;

        r0.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: int flagLength> = i3;

        return;
    }

    public boolean hasNext()
    {
        byte[] $r2, $r4;
        org.apache.tika.parser.mp3.ID3v2Frame $r1, $r3;
        org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator r0;
        byte $b3;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator;

        $i0 = r0.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: int offset>;

        $r1 = r0.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: org.apache.tika.parser.mp3.ID3v2Frame this$0>;

        $r2 = staticinvoke <org.apache.tika.parser.mp3.ID3v2Frame: byte[] access$100(org.apache.tika.parser.mp3.ID3v2Frame)>($r1);

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label1;

        $r3 = r0.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: org.apache.tika.parser.mp3.ID3v2Frame this$0>;

        $r4 = staticinvoke <org.apache.tika.parser.mp3.ID3v2Frame: byte[] access$100(org.apache.tika.parser.mp3.ID3v2Frame)>($r3);

        $i2 = r0.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: int offset>;

        $b3 = $r4[$i2];

        if $b3 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.tika.parser.mp3.ID3v2Frame$RawTag next()
    {
        byte[] $r3;
        org.apache.tika.parser.mp3.ID3v2Frame $r2;
        org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.tika.parser.mp3.ID3v2Frame$RawTag $r0;

        r1 := @this: org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator;

        $r0 = new org.apache.tika.parser.mp3.ID3v2Frame$RawTag;

        $i0 = r1.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: int nameLength>;

        $i1 = r1.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: int sizeLength>;

        $i2 = r1.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: int sizeMultiplier>;

        $i3 = r1.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: int flagLength>;

        $r2 = r1.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: org.apache.tika.parser.mp3.ID3v2Frame this$0>;

        $r3 = staticinvoke <org.apache.tika.parser.mp3.ID3v2Frame: byte[] access$100(org.apache.tika.parser.mp3.ID3v2Frame)>($r2);

        $i4 = r1.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: int offset>;

        specialinvoke $r0.<org.apache.tika.parser.mp3.ID3v2Frame$RawTag: void <init>(int,int,int,int,byte[],int,org.apache.tika.parser.mp3.ID3v2Frame$1)>($i0, $i1, $i2, $i3, $r3, $i4, null);

        $i5 = r1.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: int offset>;

        $i6 = virtualinvoke $r0.<org.apache.tika.parser.mp3.ID3v2Frame$RawTag: int getSize()>();

        $i7 = $i5 + $i6;

        r1.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: int offset> = $i7;

        return $r0;
    }

    public void remove()
    {
        org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator r0;

        r0 := @this: org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator;

        return;
    }

    public volatile java.lang.Object next()
    {
        org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator r0;
        org.apache.tika.parser.mp3.ID3v2Frame$RawTag $r1;

        r0 := @this: org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator;

        $r1 = virtualinvoke r0.<org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator: org.apache.tika.parser.mp3.ID3v2Frame$RawTag next()>();

        return $r1;
    }
}
