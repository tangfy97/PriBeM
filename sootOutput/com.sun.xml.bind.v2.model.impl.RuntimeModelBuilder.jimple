public class com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder extends com.sun.xml.bind.v2.model.impl.ModelBuilder
{
    public final com.sun.xml.bind.v2.runtime.JAXBContextImpl context;

    public void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader, java.util.Map, java.lang.String)
    {
        com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader r1;
        java.util.Map r2;
        java.lang.String r3;
        com.sun.xml.bind.v2.model.nav.ReflectionNavigator $r4;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r5;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        r5 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r1 := @parameter1: com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: java.lang.String;

        $r4 = <com.sun.xml.bind.v2.model.nav.Navigator: com.sun.xml.bind.v2.model.nav.ReflectionNavigator REFLECTION>;

        specialinvoke r0.<com.sun.xml.bind.v2.model.impl.ModelBuilder: void <init>(com.sun.xml.bind.v2.model.'annotation'.AnnotationReader,com.sun.xml.bind.v2.model.nav.Navigator,java.util.Map,java.lang.String)>(r1, $r4, r2, r3);

        r0.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl context> = r5;

        return;
    }

    public com.sun.xml.bind.v2.model.runtime.RuntimeNonElement getClassInfo(java.lang.Class, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.runtime.RuntimeNonElement $r4;
        com.sun.xml.bind.v2.model.'annotation'.Locatable r2;
        com.sun.xml.bind.v2.model.core.NonElement $r3;
        java.lang.Class r1;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r3 = specialinvoke r0.<com.sun.xml.bind.v2.model.impl.ModelBuilder: com.sun.xml.bind.v2.model.core.NonElement getClassInfo(java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(r1, r2);

        $r4 = (com.sun.xml.bind.v2.model.runtime.RuntimeNonElement) $r3;

        return $r4;
    }

    public com.sun.xml.bind.v2.model.runtime.RuntimeNonElement getClassInfo(java.lang.Class, boolean, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.runtime.RuntimeNonElement $r4;
        com.sun.xml.bind.v2.model.'annotation'.Locatable r2;
        com.sun.xml.bind.v2.model.core.NonElement $r3;
        java.lang.Class r1;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r0;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        r1 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        r2 := @parameter2: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r3 = specialinvoke r0.<com.sun.xml.bind.v2.model.impl.ModelBuilder: com.sun.xml.bind.v2.model.core.NonElement getClassInfo(java.lang.Object,boolean,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(r1, z0, r2);

        $r4 = (com.sun.xml.bind.v2.model.runtime.RuntimeNonElement) $r3;

        return $r4;
    }

    protected com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl createEnumLeafInfo(java.lang.Class, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r2;
        java.lang.Class r3;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl $r0;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r1;

        r1 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        r3 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r0 = new com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        specialinvoke $r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: void <init>(com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder,com.sun.xml.bind.v2.model.'annotation'.Locatable,java.lang.Class)>(r1, r2, r3);

        return $r0;
    }

    protected com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl createClassInfo(java.lang.Class, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl $r0;
        com.sun.xml.bind.v2.model.'annotation'.Locatable r2;
        java.lang.Class r3;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r1;

        r1 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        r3 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r0 = new com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl;

        specialinvoke $r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl: void <init>(com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder,com.sun.xml.bind.v2.model.'annotation'.Locatable,java.lang.Class)>(r1, r2, r3);

        return $r0;
    }

    public com.sun.xml.bind.v2.model.impl.RuntimeElementInfoImpl createElementInfo(com.sun.xml.bind.v2.model.impl.RegistryInfoImpl, java.lang.reflect.Method) throws com.sun.xml.bind.v2.runtime.IllegalAnnotationException
    {
        com.sun.xml.bind.v2.model.impl.RuntimeElementInfoImpl $r0;
        com.sun.xml.bind.v2.model.impl.RegistryInfoImpl r2;
        java.lang.reflect.Method r3;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r1;

        r1 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        r2 := @parameter0: com.sun.xml.bind.v2.model.impl.RegistryInfoImpl;

        r3 := @parameter1: java.lang.reflect.Method;

        $r0 = new com.sun.xml.bind.v2.model.impl.RuntimeElementInfoImpl;

        specialinvoke $r0.<com.sun.xml.bind.v2.model.impl.RuntimeElementInfoImpl: void <init>(com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder,com.sun.xml.bind.v2.model.impl.RegistryInfoImpl,java.lang.reflect.Method)>(r1, r2, r3);

        return $r0;
    }

    public com.sun.xml.bind.v2.model.impl.RuntimeArrayInfoImpl createArrayInfo(com.sun.xml.bind.v2.model.'annotation'.Locatable, java.lang.reflect.Type)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r2;
        java.lang.reflect.Type r3;
        com.sun.xml.bind.v2.model.impl.RuntimeArrayInfoImpl $r0;
        java.lang.Class $r4;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r1;

        r1 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        r2 := @parameter0: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        r3 := @parameter1: java.lang.reflect.Type;

        $r0 = new com.sun.xml.bind.v2.model.impl.RuntimeArrayInfoImpl;

        $r4 = (java.lang.Class) r3;

        specialinvoke $r0.<com.sun.xml.bind.v2.model.impl.RuntimeArrayInfoImpl: void <init>(com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder,com.sun.xml.bind.v2.model.'annotation'.Locatable,java.lang.Class)>(r1, r2, $r4);

        return $r0;
    }

    public com.sun.xml.bind.v2.model.nav.ReflectionNavigator getNavigator()
    {
        com.sun.xml.bind.v2.model.nav.ReflectionNavigator $r2;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r0;
        com.sun.xml.bind.v2.model.nav.Navigator $r1;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: com.sun.xml.bind.v2.model.nav.Navigator nav>;

        $r2 = (com.sun.xml.bind.v2.model.nav.ReflectionNavigator) $r1;

        return $r2;
    }

    protected com.sun.xml.bind.v2.model.impl.RuntimeTypeInfoSetImpl createTypeInfoSet()
    {
        com.sun.xml.bind.v2.model.'annotation'.AnnotationReader $r2;
        com.sun.xml.bind.v2.model.impl.RuntimeTypeInfoSetImpl $r0;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r1;

        r1 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        $r0 = new com.sun.xml.bind.v2.model.impl.RuntimeTypeInfoSetImpl;

        $r2 = r1.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader>;

        specialinvoke $r0.<com.sun.xml.bind.v2.model.impl.RuntimeTypeInfoSetImpl: void <init>(com.sun.xml.bind.v2.model.'annotation'.AnnotationReader)>($r2);

        return $r0;
    }

    public com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet link()
    {
        com.sun.xml.bind.v2.model.core.TypeInfoSet $r1;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r0;
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet $r2;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        $r1 = specialinvoke r0.<com.sun.xml.bind.v2.model.impl.ModelBuilder: com.sun.xml.bind.v2.model.core.TypeInfoSet link()>();

        $r2 = (com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet) $r1;

        return $r2;
    }

    public static com.sun.xml.bind.v2.runtime.Transducer createTransducer(com.sun.xml.bind.v2.model.runtime.RuntimeNonElementRef)
    {
        com.sun.xml.bind.v2.model.runtime.RuntimeNonElementRef r0;
        com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo $r3;
        com.sun.xml.bind.v2.runtime.SchemaTypeTransducer $r11;
        javax.activation.MimeType $r7;
        com.sun.xml.bind.v2.runtime.MimeTypedTransducer $r15;
        boolean $z0, $z1;
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl $r13, $r17;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder$IDTransducerImpl $r16;
        com.sun.xml.bind.v2.model.runtime.RuntimeNonElement $r1;
        com.sun.xml.bind.v2.runtime.InlineBinaryTransducer $r14;
        com.sun.xml.bind.v2.runtime.Transducer $r2, r18;
        javax.xml.namespace.QName $r8, $r9, $r10, $r12;
        com.sun.xml.bind.v2.model.core.ID $r4, $r5, $r6;

        r0 := @parameter0: com.sun.xml.bind.v2.model.runtime.RuntimeNonElementRef;

        $r1 = interfaceinvoke r0.<com.sun.xml.bind.v2.model.runtime.RuntimeNonElementRef: com.sun.xml.bind.v2.model.runtime.RuntimeNonElement getTarget()>();

        $r2 = interfaceinvoke $r1.<com.sun.xml.bind.v2.model.runtime.RuntimeNonElement: com.sun.xml.bind.v2.runtime.Transducer getTransducer()>();

        r18 = $r2;

        $r3 = interfaceinvoke r0.<com.sun.xml.bind.v2.model.runtime.RuntimeNonElementRef: com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo getSource()>();

        $r4 = interfaceinvoke $r3.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: com.sun.xml.bind.v2.model.core.ID id()>();

        $r5 = <com.sun.xml.bind.v2.model.core.ID: com.sun.xml.bind.v2.model.core.ID IDREF>;

        if $r4 != $r5 goto label1;

        $r17 = <com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl STRING>;

        return $r17;

     label1:
        $r6 = <com.sun.xml.bind.v2.model.core.ID: com.sun.xml.bind.v2.model.core.ID ID>;

        if $r4 != $r6 goto label2;

        $r16 = new com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder$IDTransducerImpl;

        specialinvoke $r16.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder$IDTransducerImpl: void <init>(com.sun.xml.bind.v2.runtime.Transducer)>($r2);

        r18 = $r16;

     label2:
        $r7 = interfaceinvoke $r3.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: javax.activation.MimeType getExpectedMimeType()>();

        if $r7 == null goto label3;

        $r15 = new com.sun.xml.bind.v2.runtime.MimeTypedTransducer;

        specialinvoke $r15.<com.sun.xml.bind.v2.runtime.MimeTypedTransducer: void <init>(com.sun.xml.bind.v2.runtime.Transducer,javax.activation.MimeType)>(r18, $r7);

        r18 = $r15;

     label3:
        $z0 = interfaceinvoke $r3.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: boolean inlineBinaryData()>();

        if $z0 == 0 goto label4;

        $r14 = new com.sun.xml.bind.v2.runtime.InlineBinaryTransducer;

        specialinvoke $r14.<com.sun.xml.bind.v2.runtime.InlineBinaryTransducer: void <init>(com.sun.xml.bind.v2.runtime.Transducer)>(r18);

        r18 = $r14;

     label4:
        $r8 = interfaceinvoke $r3.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: javax.xml.namespace.QName getSchemaType()>();

        if $r8 == null goto label6;

        $r9 = interfaceinvoke $r3.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: javax.xml.namespace.QName getSchemaType()>();

        $r10 = staticinvoke <com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: javax.xml.namespace.QName createXSSimpleType()>();

        $z1 = virtualinvoke $r9.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label5;

        $r13 = <com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl: com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl STRING>;

        return $r13;

     label5:
        $r11 = new com.sun.xml.bind.v2.runtime.SchemaTypeTransducer;

        $r12 = interfaceinvoke $r3.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: javax.xml.namespace.QName getSchemaType()>();

        specialinvoke $r11.<com.sun.xml.bind.v2.runtime.SchemaTypeTransducer: void <init>(com.sun.xml.bind.v2.runtime.Transducer,javax.xml.namespace.QName)>(r18, $r12);

        r18 = $r11;

     label6:
        return r18;
    }

    private static javax.xml.namespace.QName createXSSimpleType()
    {
        javax.xml.namespace.QName $r0;

        $r0 = new javax.xml.namespace.QName;

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "anySimpleType");

        return $r0;
    }

    public volatile com.sun.xml.bind.v2.model.core.TypeInfoSet link()
    {
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r0;
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet $r1;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet link()>();

        return $r1;
    }

    public volatile com.sun.xml.bind.v2.model.impl.ArrayInfoImpl createArrayInfo(com.sun.xml.bind.v2.model.'annotation'.Locatable, java.lang.Object)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r1;
        java.lang.reflect.Type $r3;
        com.sun.xml.bind.v2.model.impl.RuntimeArrayInfoImpl $r4;
        java.lang.Object r2;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        r1 := @parameter0: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.reflect.Type) r2;

        $r4 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: com.sun.xml.bind.v2.model.impl.RuntimeArrayInfoImpl createArrayInfo(com.sun.xml.bind.v2.model.'annotation'.Locatable,java.lang.reflect.Type)>(r1, $r3);

        return $r4;
    }

    public volatile com.sun.xml.bind.v2.model.impl.ElementInfoImpl createElementInfo(com.sun.xml.bind.v2.model.impl.RegistryInfoImpl, java.lang.Object) throws com.sun.xml.bind.v2.runtime.IllegalAnnotationException
    {
        com.sun.xml.bind.v2.model.impl.RuntimeElementInfoImpl $r4;
        com.sun.xml.bind.v2.model.impl.RegistryInfoImpl r1;
        java.lang.Object r2;
        java.lang.reflect.Method $r3;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        r1 := @parameter0: com.sun.xml.bind.v2.model.impl.RegistryInfoImpl;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.reflect.Method) r2;

        $r4 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: com.sun.xml.bind.v2.model.impl.RuntimeElementInfoImpl createElementInfo(com.sun.xml.bind.v2.model.impl.RegistryInfoImpl,java.lang.reflect.Method)>(r1, $r3);

        return $r4;
    }

    protected volatile com.sun.xml.bind.v2.model.impl.ClassInfoImpl createClassInfo(java.lang.Object, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl $r4;
        com.sun.xml.bind.v2.model.'annotation'.Locatable r2;
        java.lang.Object r1;
        java.lang.Class $r3;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r3 = (java.lang.Class) r1;

        $r4 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl createClassInfo(java.lang.Class,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r3, r2);

        return $r4;
    }

    protected volatile com.sun.xml.bind.v2.model.impl.EnumLeafInfoImpl createEnumLeafInfo(java.lang.Object, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r2;
        java.lang.Object r1;
        java.lang.Class $r3;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl $r4;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r3 = (java.lang.Class) r1;

        $r4 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl createEnumLeafInfo(java.lang.Class,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r3, r2);

        return $r4;
    }

    public volatile com.sun.xml.bind.v2.model.core.NonElement getClassInfo(java.lang.Object, boolean, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.runtime.RuntimeNonElement $r4;
        com.sun.xml.bind.v2.model.'annotation'.Locatable r2;
        java.lang.Object r1;
        java.lang.Class $r3;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r0;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        r2 := @parameter2: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r3 = (java.lang.Class) r1;

        $r4 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: com.sun.xml.bind.v2.model.runtime.RuntimeNonElement getClassInfo(java.lang.Class,boolean,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r3, z0, r2);

        return $r4;
    }

    public volatile com.sun.xml.bind.v2.model.core.NonElement getClassInfo(java.lang.Object, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.runtime.RuntimeNonElement $r4;
        com.sun.xml.bind.v2.model.'annotation'.Locatable r2;
        java.lang.Object r1;
        java.lang.Class $r3;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r3 = (java.lang.Class) r1;

        $r4 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: com.sun.xml.bind.v2.model.runtime.RuntimeNonElement getClassInfo(java.lang.Class,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r3, r2);

        return $r4;
    }

    protected volatile com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl createTypeInfoSet()
    {
        com.sun.xml.bind.v2.model.impl.RuntimeTypeInfoSetImpl $r1;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: com.sun.xml.bind.v2.model.impl.RuntimeTypeInfoSetImpl createTypeInfoSet()>();

        return $r1;
    }
}
