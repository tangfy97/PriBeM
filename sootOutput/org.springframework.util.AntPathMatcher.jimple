public class org.springframework.util.AntPathMatcher extends java.lang.Object implements org.springframework.util.PathMatcher
{
    private static final java.util.regex.Pattern VARIABLE_PATTERN;
    public static final java.lang.String DEFAULT_PATH_SEPARATOR;
    private java.lang.String pathSeparator;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <org.springframework.util.AntPathMatcher: java.lang.String DEFAULT_PATH_SEPARATOR> = "/";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\{[^/]+?\\}");

        <org.springframework.util.AntPathMatcher: java.util.regex.Pattern VARIABLE_PATTERN> = $r0;

        return;
    }

    public void <init>()
    {
        org.springframework.util.AntPathMatcher r0;

        r0 := @this: org.springframework.util.AntPathMatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.util.AntPathMatcher: java.lang.String pathSeparator> = "/";

        return;
    }

    public void setPathSeparator(java.lang.String)
    {
        org.springframework.util.AntPathMatcher r0;
        java.lang.String r1, $r2;

        r0 := @this: org.springframework.util.AntPathMatcher;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r2 = "/";

     label2:
        r0.<org.springframework.util.AntPathMatcher: java.lang.String pathSeparator> = $r2;

        return;
    }

    public boolean isPattern(java.lang.String)
    {
        int $i0, $i1, $i3, $i5;
        java.lang.String r0;
        org.springframework.util.AntPathMatcher r1;

        r1 := @this: org.springframework.util.AntPathMatcher;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(42);

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(63);

        $i5 = (int) -1;

        if $i1 != $i5 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean match(java.lang.String, java.lang.String)
    {
        org.springframework.util.AntPathMatcher r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: org.springframework.util.AntPathMatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>(r1, r2, 1, null);

        return $z0;
    }

    public boolean matchStart(java.lang.String, java.lang.String)
    {
        org.springframework.util.AntPathMatcher r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: org.springframework.util.AntPathMatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>(r1, r2, 0, null);

        return $z0;
    }

    protected boolean doMatch(java.lang.String, java.lang.String, boolean, java.util.Map)
    {
        java.util.Map r13;
        org.springframework.util.AntPathMatcher r1;
        java.lang.String r0, $r2, r3, $r4, $r5, $r7, $r9, $r10, r11, r12, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, r26, r27;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        java.lang.String[] $r6, $r8;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, $i25, $i27, $i29, $i31, $i33;

        r1 := @this: org.springframework.util.AntPathMatcher;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        z2 := @parameter2: boolean;

        r13 := @parameter3: java.util.Map;

        $r2 = r1.<org.springframework.util.AntPathMatcher: java.lang.String pathSeparator>;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>($r2);

        $r4 = r1.<org.springframework.util.AntPathMatcher: java.lang.String pathSeparator>;

        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == $z1 goto label01;

        return 0;

     label01:
        $r5 = r1.<org.springframework.util.AntPathMatcher: java.lang.String pathSeparator>;

        $r6 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r3, $r5);

        $r7 = r1.<org.springframework.util.AntPathMatcher: java.lang.String pathSeparator>;

        $r8 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r0, $r7);

        i11 = 0;

        $i0 = lengthof $r6;

        i12 = $i0 - 1;

        i13 = 0;

        $i1 = lengthof $r8;

        i14 = $i1 - 1;

        goto label05;

     label02:
        r26 = $r6[i11];

        $r24 = "**";

        $z15 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r26);

        if $z15 == 0 goto label03;

        goto label06;

     label03:
        $r25 = $r8[i13];

        $z16 = specialinvoke r1.<org.springframework.util.AntPathMatcher: boolean matchStrings(java.lang.String,java.lang.String,java.util.Map)>(r26, $r25, r13);

        if $z16 != 0 goto label04;

        return 0;

     label04:
        i11 = i11 + 1;

        i13 = i13 + 1;

     label05:
        if i11 > i12 goto label06;

        if i13 <= i14 goto label02;

     label06:
        if i13 <= i14 goto label16;

        if i11 <= i12 goto label10;

        $r21 = r1.<org.springframework.util.AntPathMatcher: java.lang.String pathSeparator>;

        $z13 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>($r21);

        if $z13 == 0 goto label07;

        $r23 = r1.<org.springframework.util.AntPathMatcher: java.lang.String pathSeparator>;

        $z17 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>($r23);

        goto label09;

     label07:
        $r22 = r1.<org.springframework.util.AntPathMatcher: java.lang.String pathSeparator>;

        $z14 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>($r22);

        if $z14 == 0 goto label08;

        $z17 = 0;

        goto label09;

     label08:
        $z17 = 1;

     label09:
        return $z17;

     label10:
        if z2 != 0 goto label11;

        return 1;

     label11:
        if i11 != i12 goto label12;

        $r19 = $r6[i11];

        $z11 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z11 == 0 goto label12;

        $r20 = r1.<org.springframework.util.AntPathMatcher: java.lang.String pathSeparator>;

        $z12 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>($r20);

        if $z12 == 0 goto label12;

        return 1;

     label12:
        i15 = i11;

        goto label15;

     label13:
        $r18 = $r6[i15];

        $z10 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("**");

        if $z10 != 0 goto label14;

        return 0;

     label14:
        i15 = i15 + 1;

     label15:
        if i15 <= i12 goto label13;

        return 1;

     label16:
        if i11 <= i12 goto label17;

        return 0;

     label17:
        if z2 != 0 goto label21;

        $r17 = "**";

        $r16 = $r6[i11];

        $z9 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z9 == 0 goto label21;

        return 1;

     label18:
        r27 = $r6[i12];

        $z7 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("**");

        if $z7 == 0 goto label19;

        goto label22;

     label19:
        $r15 = $r8[i14];

        $z8 = specialinvoke r1.<org.springframework.util.AntPathMatcher: boolean matchStrings(java.lang.String,java.lang.String,java.util.Map)>(r27, $r15, r13);

        if $z8 != 0 goto label20;

        return 0;

     label20:
        $i25 = (int) -1;

        i12 = i12 + $i25;

        $i27 = (int) -1;

        i14 = i14 + $i27;

     label21:
        if i11 > i12 goto label22;

        if i13 <= i14 goto label18;

     label22:
        if i13 <= i14 goto label40;

        i16 = i11;

        goto label25;

     label23:
        $r14 = $r6[i16];

        $z6 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("**");

        if $z6 != 0 goto label24;

        return 0;

     label24:
        i16 = i16 + 1;

     label25:
        if i16 <= i12 goto label23;

        return 1;

     label26:
        $i29 = (int) -1;

        i17 = $i29;

        i18 = i11 + 1;

        goto label29;

     label27:
        $r10 = $r6[i18];

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("**");

        if $z4 == 0 goto label28;

        i17 = i18;

        goto label30;

     label28:
        i18 = i18 + 1;

     label29:
        if i18 <= i12 goto label27;

     label30:
        $i2 = i11 + 1;

        if i17 != $i2 goto label31;

        i11 = i11 + 1;

        goto label40;

     label31:
        $i3 = i17 - i11;

        i19 = $i3 - 1;

        $i4 = i14 - i13;

        i5 = $i4 + 1;

        $i31 = (int) -1;

        i20 = $i31;

        i21 = 0;

        goto label37;

     label32:
        i22 = 0;

        goto label35;

     label33:
        $i7 = i11 + i22;

        $i8 = $i7 + 1;

        r11 = $r6[$i8];

        $i9 = i13 + i21;

        $i10 = $i9 + i22;

        r12 = $r8[$i10];

        $z5 = specialinvoke r1.<org.springframework.util.AntPathMatcher: boolean matchStrings(java.lang.String,java.lang.String,java.util.Map)>(r11, r12, r13);

        if $z5 != 0 goto label34;

        goto label36;

     label34:
        i22 = i22 + 1;

     label35:
        if i22 < i19 goto label33;

        i20 = i13 + i21;

        goto label38;

     label36:
        i21 = i21 + 1;

     label37:
        $i6 = i5 - i19;

        if i21 <= $i6 goto label32;

     label38:
        $i33 = (int) -1;

        if i20 != $i33 goto label39;

        return 0;

     label39:
        i11 = i17;

        i13 = i20 + i19;

     label40:
        if i11 == i12 goto label41;

        if i13 <= i14 goto label26;

     label41:
        i23 = i11;

        goto label44;

     label42:
        $r9 = $r6[i23];

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("**");

        if $z3 != 0 goto label43;

        return 0;

     label43:
        i23 = i23 + 1;

     label44:
        if i23 <= i12 goto label42;

        return 1;
    }

    private boolean matchStrings(java.lang.String, java.lang.String, java.util.Map)
    {
        org.springframework.util.AntPathStringMatcher $r0;
        java.util.Map r3;
        java.lang.String r1, r2;
        org.springframework.util.AntPathMatcher r4;
        boolean $z0;

        r4 := @this: org.springframework.util.AntPathMatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Map;

        $r0 = new org.springframework.util.AntPathStringMatcher;

        specialinvoke $r0.<org.springframework.util.AntPathStringMatcher: void <init>(java.lang.String,java.lang.String,java.util.Map)>(r1, r2, r3);

        $z0 = virtualinvoke $r0.<org.springframework.util.AntPathStringMatcher: boolean matchStrings()>();

        return $z0;
    }

    public java.lang.String extractPathWithinPattern(java.lang.String, java.lang.String)
    {
        java.lang.String[] $r3, $r6;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, i7, $i8, $i10, $i12;
        java.lang.String r0, $r2, r4, $r5, r8, $r9, $r10, $r11, $r12, $r13, $r14;
        org.springframework.util.AntPathMatcher r1;
        boolean $z0;
        java.lang.StringBuilder $r15;

        r1 := @this: org.springframework.util.AntPathMatcher;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r2 = r1.<org.springframework.util.AntPathMatcher: java.lang.String pathSeparator>;

        $r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r0, $r2);

        $r5 = r1.<org.springframework.util.AntPathMatcher: java.lang.String pathSeparator>;

        $r6 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String)>(r4, $r5);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        i4 = 0;

        i5 = 0;

        goto label06;

     label01:
        r8 = $r3[i5];

        $i0 = virtualinvoke r8.<java.lang.String: int indexOf(int)>(42);

        $i10 = (int) -1;

        if $i0 > $i10 goto label02;

        $i3 = virtualinvoke r8.<java.lang.String: int indexOf(int)>(63);

        $i12 = (int) -1;

        if $i3 <= $i12 goto label05;

     label02:
        $i2 = lengthof $r6;

        $i1 = i5 + 1;

        if $i2 < $i1 goto label05;

        if i4 > 0 goto label03;

        if i5 != 0 goto label04;

        $r10 = r1.<org.springframework.util.AntPathMatcher: java.lang.String pathSeparator>;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>($r10);

        if $z0 != 0 goto label04;

     label03:
        $r9 = r1.<org.springframework.util.AntPathMatcher: java.lang.String pathSeparator>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label04:
        $r13 = $r6[i5];

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        i4 = i4 + 1;

     label05:
        i5 = i5 + 1;

     label06:
        $i6 = lengthof $r3;

        if i5 < $i6 goto label01;

        i7 = lengthof $r3;

        goto label10;

     label07:
        if i4 > 0 goto label08;

        if i7 <= 0 goto label09;

     label08:
        $r11 = r1.<org.springframework.util.AntPathMatcher: java.lang.String pathSeparator>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label09:
        $r14 = $r6[i7];

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        i7 = i7 + 1;

     label10:
        $i8 = lengthof $r6;

        if i7 < $i8 goto label07;

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public java.util.Map extractUriTemplateVariables(java.lang.String, java.lang.String)
    {
        java.util.LinkedHashMap $r0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        org.springframework.util.AntPathMatcher r1;
        java.lang.String r2, r3, $r9;
        boolean $z0;

        r1 := @this: org.springframework.util.AntPathMatcher;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        $z0 = virtualinvoke r1.<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>(r2, r3, 1, $r0);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Pattern \"");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is not a match for \"");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z0, $r9);

        return $r0;
    }

    public java.lang.String combine(java.lang.String, java.lang.String)
    {
        org.springframework.util.AntPathMatcher r2;
        java.lang.StringBuilder $r8, $r12, $r16, $r17, $r21, $r22, $r26, $r31, $r37, $r43, $r44, $r45, $r46, $r47, $r48, $r49;
        java.lang.String r0, r1, $r3, $r4, r5, $r7, $r9, $r11, $r13, $r15, $r18, $r20, $r23, $r25, $r27, $r29, $r30, $r32, $r34, $r35, $r36, $r38, r39, r40, $r41, $r42;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9;

        r2 := @this: org.springframework.util.AntPathMatcher;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r0);

        if $z0 != 0 goto label01;

        $z12 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r1);

        if $z12 != 0 goto label01;

        return "";

     label01:
        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r0);

        if $z1 != 0 goto label02;

        return r1;

     label02:
        $z2 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r1);

        if $z2 != 0 goto label03;

        return r0;

     label03:
        $z3 = virtualinvoke r2.<org.springframework.util.AntPathMatcher: boolean match(java.lang.String,java.lang.String)>(r0, r1);

        if $z3 == 0 goto label04;

        return r1;

     label04:
        $z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("/*");

        if $z4 == 0 goto label06;

        $z11 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z11 == 0 goto label05;

        $r43 = new java.lang.StringBuilder;

        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        $i5 = $i4 - 1;

        $r34 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        $r35 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r34);

        specialinvoke $r43.<java.lang.StringBuilder: void <init>(java.lang.String)>($r35);

        $r36 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r37 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r38;

     label05:
        $r44 = new java.lang.StringBuilder;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        $r29 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $r30 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r29);

        specialinvoke $r44.<java.lang.StringBuilder: void <init>(java.lang.String)>($r30);

        $r31 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r32;

     label06:
        $z5 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("/**");

        if $z5 == 0 goto label08;

        $z10 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z10 == 0 goto label07;

        $r45 = new java.lang.StringBuilder;

        $r25 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>($r25);

        $r26 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r27;

     label07:
        $r46 = new java.lang.StringBuilder;

        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        specialinvoke $r46.<java.lang.StringBuilder: void <init>(java.lang.String)>($r20);

        $r21 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r23;

     label08:
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46);

        $i7 = (int) -1;

        if $i0 != $i7 goto label11;

        $z8 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z8 != 0 goto label09;

        $z9 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z9 == 0 goto label10;

     label09:
        $r47 = new java.lang.StringBuilder;

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        specialinvoke $r47.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11);

        $r12 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;

     label10:
        $r48 = new java.lang.StringBuilder;

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        specialinvoke $r48.<java.lang.StringBuilder: void <init>(java.lang.String)>($r15);

        $r16 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;

     label11:
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46);

        $i9 = (int) -1;

        if $i1 == $i9 goto label12;

        r39 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        r40 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        goto label13;

     label12:
        r39 = r1;

        r40 = "";

     label13:
        $z6 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>("*");

        if $z6 == 0 goto label14;

        $r41 = r39;

        goto label15;

     label14:
        $r41 = $r3;

     label15:
        r5 = $r41;

        $z7 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("*");

        if $z7 == 0 goto label16;

        $r42 = r40;

        goto label17;

     label16:
        $r42 = $r4;

     label17:
        $r49 = new java.lang.StringBuilder;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5);

        specialinvoke $r49.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public java.util.Comparator getPatternComparator(java.lang.String)
    {
        org.springframework.util.AntPathMatcher$AntPatternComparator $r0;
        java.lang.String r1;
        org.springframework.util.AntPathMatcher r2;

        r2 := @this: org.springframework.util.AntPathMatcher;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.springframework.util.AntPathMatcher$AntPatternComparator;

        specialinvoke $r0.<org.springframework.util.AntPathMatcher$AntPatternComparator: void <init>(java.lang.String,org.springframework.util.AntPathMatcher$AntPatternComparator)>(r1, null);

        return $r0;
    }

    static java.util.regex.Pattern access$0()
    {
        java.util.regex.Pattern $r0;

        $r0 = <org.springframework.util.AntPathMatcher: java.util.regex.Pattern VARIABLE_PATTERN>;

        return $r0;
    }
}
