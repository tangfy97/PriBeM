public abstract class groovy.lang.MetaMethod extends org.codehaus.groovy.reflection.ParameterTypes implements java.lang.Cloneable
{
    private java.lang.String signature;
    private java.lang.String mopName;
    static java.lang.Class class$java$lang$IllegalArgumentException;

    public void <init>()
    {
        groovy.lang.MetaMethod r0;

        r0 := @this: groovy.lang.MetaMethod;

        specialinvoke r0.<org.codehaus.groovy.reflection.ParameterTypes: void <init>()>();

        return;
    }

    public void <init>(java.lang.Class[])
    {
        java.lang.Class[] r1;
        groovy.lang.MetaMethod r0;

        r0 := @this: groovy.lang.MetaMethod;

        r1 := @parameter0: java.lang.Class[];

        specialinvoke r0.<org.codehaus.groovy.reflection.ParameterTypes: void <init>(java.lang.Class[])>(r1);

        return;
    }

    public abstract int getModifiers();

    public abstract java.lang.String getName();

    public abstract java.lang.Class getReturnType();

    public abstract org.codehaus.groovy.reflection.CachedClass getDeclaringClass();

    public abstract java.lang.Object invoke(java.lang.Object, java.lang.Object[]);

    public void checkParameters(java.lang.Class[])
    {
        org.codehaus.groovy.reflection.CachedClass[] $r1, $r9;
        java.lang.StringBuffer $r4, $r5, $r7, $r8, $r11, $r12, $r14;
        java.lang.String $r6, $r10, $r13, $r15;
        boolean $z0;
        java.lang.Class[] r2;
        java.lang.IllegalArgumentException $r3;
        groovy.lang.MetaMethod r0;

        r0 := @this: groovy.lang.MetaMethod;

        r2 := @parameter0: java.lang.Class[];

        $r1 = virtualinvoke r0.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $z0 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: boolean isValidMethod(java.lang.Object,java.lang.Class[])>($r1, r2);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Parameters to method: ");

        $r6 = virtualinvoke r0.<groovy.lang.MetaMethod: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" do not match types: ");

        $r9 = virtualinvoke r0.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r10 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toString(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" for arguments: ");

        $r13 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toString(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r3;

     label1:
        return;
    }

    public boolean isMethod(groovy.lang.MetaMethod)
    {
        org.codehaus.groovy.reflection.CachedClass[] $r6, $r7;
        groovy.lang.MetaMethod r0, r2;
        int $i0, $i1;
        java.lang.Class $r4, $r5;
        java.lang.String $r1, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: groovy.lang.MetaMethod;

        r2 := @parameter0: groovy.lang.MetaMethod;

        $r1 = virtualinvoke r0.<groovy.lang.MetaMethod: java.lang.String getName()>();

        $r3 = virtualinvoke r2.<groovy.lang.MetaMethod: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<groovy.lang.MetaMethod: int getModifiers()>();

        $i1 = virtualinvoke r2.<groovy.lang.MetaMethod: int getModifiers()>();

        if $i0 != $i1 goto label1;

        $r4 = virtualinvoke r0.<groovy.lang.MetaMethod: java.lang.Class getReturnType()>();

        $r5 = virtualinvoke r2.<groovy.lang.MetaMethod: java.lang.Class getReturnType()>();

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label1;

        $r6 = virtualinvoke r0.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r7 = virtualinvoke r2.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $z2 = staticinvoke <groovy.lang.MetaMethod: boolean equal(org.codehaus.groovy.reflection.CachedClass[],org.codehaus.groovy.reflection.CachedClass[])>($r6, $r7);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    protected static boolean equal(org.codehaus.groovy.reflection.CachedClass[], java.lang.Class[])
    {
        org.codehaus.groovy.reflection.CachedClass[] r0;
        java.lang.Class[] r1;
        org.codehaus.groovy.reflection.CachedClass $r2;
        int $i0, $i1, i2, i3;
        java.lang.Class $r3, $r4;
        boolean $z0;

        r0 := @parameter0: org.codehaus.groovy.reflection.CachedClass[];

        r1 := @parameter1: java.lang.Class[];

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 != $i0 goto label4;

        i3 = 0;

        i2 = lengthof r0;

     label1:
        if i3 >= i2 goto label3;

        $r2 = r0[i3];

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r4 = r1[i3];

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    protected static boolean equal(org.codehaus.groovy.reflection.CachedClass[], org.codehaus.groovy.reflection.CachedClass[])
    {
        org.codehaus.groovy.reflection.CachedClass[] r0, r1;
        org.codehaus.groovy.reflection.CachedClass $r2, $r3;
        int $i0, $i1, i2, i3;

        r0 := @parameter0: org.codehaus.groovy.reflection.CachedClass[];

        r1 := @parameter1: org.codehaus.groovy.reflection.CachedClass[];

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 != $i0 goto label4;

        i3 = 0;

        i2 = lengthof r0;

     label1:
        if i3 >= i2 goto label3;

        $r3 = r0[i3];

        $r2 = r1[i3];

        if $r3 == $r2 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    public java.lang.String toString()
    {
        org.codehaus.groovy.reflection.CachedClass[] $r8;
        java.lang.StringBuffer $r0, $r3, $r4, $r6, $r7, $r10, $r11, $r13, $r14, $r16, $r17;
        java.lang.String $r2, $r5, $r9, $r18;
        org.codehaus.groovy.reflection.CachedClass $r15;
        groovy.lang.MetaMethod r1;
        java.lang.Class $r12;

        r1 := @this: groovy.lang.MetaMethod;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[name: ");

        $r5 = virtualinvoke r1.<groovy.lang.MetaMethod: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" params: ");

        $r8 = virtualinvoke r1.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r9 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toString(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" returns: ");

        $r12 = virtualinvoke r1.<groovy.lang.MetaMethod: java.lang.Class getReturnType()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" owner: ");

        $r15 = virtualinvoke r1.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r18;
    }

    public java.lang.Object clone()
    {
        groovy.lang.MetaMethod r0;
        groovy.lang.GroovyRuntimeException $r3;
        java.lang.Object $r1;
        java.lang.CloneNotSupportedException $r2;

        r0 := @this: groovy.lang.MetaMethod;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new groovy.lang.GroovyRuntimeException;

        specialinvoke $r3.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("This should never happen", $r2);

        throw $r3;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public boolean isStatic()
    {
        groovy.lang.MetaMethod r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: groovy.lang.MetaMethod;

        $i0 = virtualinvoke r0.<groovy.lang.MetaMethod: int getModifiers()>();

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isAbstract()
    {
        groovy.lang.MetaMethod r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: groovy.lang.MetaMethod;

        $i0 = virtualinvoke r0.<groovy.lang.MetaMethod: int getModifiers()>();

        $i1 = $i0 & 1024;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isPrivate()
    {
        groovy.lang.MetaMethod r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: groovy.lang.MetaMethod;

        $i0 = virtualinvoke r0.<groovy.lang.MetaMethod: int getModifiers()>();

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isProtected()
    {
        groovy.lang.MetaMethod r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: groovy.lang.MetaMethod;

        $i0 = virtualinvoke r0.<groovy.lang.MetaMethod: int getModifiers()>();

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isPublic()
    {
        groovy.lang.MetaMethod r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: groovy.lang.MetaMethod;

        $i0 = virtualinvoke r0.<groovy.lang.MetaMethod: int getModifiers()>();

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isSame(groovy.lang.MetaMethod)
    {
        org.codehaus.groovy.reflection.CachedClass[] $r6, $r7;
        groovy.lang.MetaMethod r0, r2;
        int $i0, $i1;
        java.lang.Class $r4, $r5;
        java.lang.String $r1, $r3;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: groovy.lang.MetaMethod;

        r2 := @parameter0: groovy.lang.MetaMethod;

        $r1 = virtualinvoke r0.<groovy.lang.MetaMethod: java.lang.String getName()>();

        $r3 = virtualinvoke r2.<groovy.lang.MetaMethod: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<groovy.lang.MetaMethod: int getModifiers()>();

        $i1 = virtualinvoke r2.<groovy.lang.MetaMethod: int getModifiers()>();

        $z1 = staticinvoke <groovy.lang.MetaMethod: boolean compatibleModifiers(int,int)>($i0, $i1);

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r0.<groovy.lang.MetaMethod: java.lang.Class getReturnType()>();

        $r5 = virtualinvoke r2.<groovy.lang.MetaMethod: java.lang.Class getReturnType()>();

        $z2 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label1;

        $r6 = virtualinvoke r0.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r7 = virtualinvoke r2.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $z3 = staticinvoke <groovy.lang.MetaMethod: boolean equal(org.codehaus.groovy.reflection.CachedClass[],org.codehaus.groovy.reflection.CachedClass[])>($r6, $r7);

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;
    }

    private static boolean compatibleModifiers(int, int)
    {
        int i0, i1, $i2, $i3;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = i0 & 15;

        $i2 = i1 & 15;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isCacheable()
    {
        groovy.lang.MetaMethod r0;

        r0 := @this: groovy.lang.MetaMethod;

        return 1;
    }

    public java.lang.String getDescriptor()
    {
        groovy.lang.MetaMethod r0;
        java.lang.Class[] $r2;
        java.lang.Class $r1;
        java.lang.String $r3;

        r0 := @this: groovy.lang.MetaMethod;

        $r1 = virtualinvoke r0.<groovy.lang.MetaMethod: java.lang.Class getReturnType()>();

        $r2 = virtualinvoke r0.<groovy.lang.MetaMethod: java.lang.Class[] getNativeParameterTypes()>();

        $r3 = staticinvoke <org.codehaus.groovy.classgen.BytecodeHelper: java.lang.String getMethodDescriptor(java.lang.Class,java.lang.Class[])>($r1, $r2);

        return $r3;
    }

    public synchronized java.lang.String getSignature()
    {
        org.codehaus.groovy.reflection.CachedClass[] $r3;
        java.lang.StringBuffer $r5;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r1, $r2, $r4, $r7, $r8, $r10;
        org.codehaus.groovy.reflection.CachedClass $r9;
        groovy.lang.MetaMethod r0;
        java.lang.Class $r6;

        r0 := @this: groovy.lang.MetaMethod;

        $r1 = r0.<groovy.lang.MetaMethod: java.lang.String signature>;

        if $r1 != null goto label4;

        $r3 = virtualinvoke r0.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r4 = virtualinvoke r0.<groovy.lang.MetaMethod: java.lang.String getName()>();

        $r5 = new java.lang.StringBuffer;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i1 = lengthof $r3;

        $i2 = $i1 * 10;

        $i3 = $i0 + $i2;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(int)>($i3);

        $r6 = virtualinvoke r0.<groovy.lang.MetaMethod: java.lang.Class getReturnType()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        i5 = 0;

     label1:
        $i4 = lengthof $r3;

        if i5 >= $i4 goto label3;

        if i5 <= 0 goto label2;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $r9 = $r3[i5];

        $r10 = virtualinvoke $r9.<org.codehaus.groovy.reflection.CachedClass: java.lang.String getName()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        i5 = i5 + 1;

        goto label1;

     label3:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<groovy.lang.MetaMethod: java.lang.String signature> = $r8;

     label4:
        $r2 = r0.<groovy.lang.MetaMethod: java.lang.String signature>;

        return $r2;
    }

    public java.lang.String getMopName()
    {
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r2, $r9, $r15, $r16;
        org.codehaus.groovy.reflection.CachedClass $r3;
        groovy.lang.MetaMethod r0;

        r0 := @this: groovy.lang.MetaMethod;

        $r1 = r0.<groovy.lang.MetaMethod: java.lang.String mopName>;

        if $r1 != null goto label2;

        $r2 = virtualinvoke r0.<groovy.lang.MetaMethod: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        $i0 = virtualinvoke r0.<groovy.lang.MetaMethod: int getModifiers()>();

        $i1 = $i0 & 5;

        if $i1 != 0 goto label1;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("this$");

        $i3 = virtualinvoke $r3.<org.codehaus.groovy.reflection.CachedClass: int getSuperClassDistance()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("$");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<groovy.lang.MetaMethod: java.lang.String mopName> = $r15;

        goto label2;

     label1:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("super$");

        $i2 = virtualinvoke $r3.<org.codehaus.groovy.reflection.CachedClass: int getSuperClassDistance()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("$");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<groovy.lang.MetaMethod: java.lang.String mopName> = $r9;

     label2:
        $r16 = r0.<groovy.lang.MetaMethod: java.lang.String mopName>;

        return $r16;
    }

    protected final java.lang.RuntimeException processDoMethodInvokeException(java.lang.Exception, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] r3;
        groovy.lang.GroovyRuntimeException $r4, $r8;
        java.lang.RuntimeException $r5;
        java.lang.Exception r0;
        groovy.lang.MetaMethod r1;
        java.lang.Object r2;
        java.lang.Class $r6, $r7, $r9;
        boolean $z0, $z1, $z2;

        r1 := @this: groovy.lang.MetaMethod;

        r0 := @parameter0: java.lang.Exception;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object[];

        $z0 = r0 instanceof java.lang.IllegalArgumentException;

        if $z0 == 0 goto label5;

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = <groovy.lang.MetaMethod: java.lang.Class class$java$lang$IllegalArgumentException>;

        if $r7 != null goto label1;

        $r9 = staticinvoke <groovy.lang.MetaMethod: java.lang.Class class$(java.lang.String)>("java.lang.IllegalArgumentException");

        <groovy.lang.MetaMethod: java.lang.Class class$java$lang$IllegalArgumentException> = $r9;

        goto label2;

     label1:
        $r9 = <groovy.lang.MetaMethod: java.lang.Class class$java$lang$IllegalArgumentException>;

     label2:
        if $r6 == $r9 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: groovy.lang.GroovyRuntimeException createExceptionText(java.lang.String,groovy.lang.MetaMethod,java.lang.Object,java.lang.Object[],java.lang.Throwable,boolean)>("failed to invoke method: ", r1, r2, r3, r0, $z2);

        return $r8;

     label5:
        $z1 = r0 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label6;

        $r5 = (java.lang.RuntimeException) r0;

        return $r5;

     label6:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: groovy.lang.GroovyRuntimeException createExceptionText(java.lang.String,groovy.lang.MetaMethod,java.lang.Object,java.lang.Object[],java.lang.Throwable,boolean)>("failed to invoke method: ", r1, r2, r3, r0, 1);

        return $r4;
    }

    public java.lang.Object doMethodInvoke(java.lang.Object, java.lang.Object[])
    {
        groovy.lang.MetaMethod r0;
        java.lang.Object[] $r1, r6;
        java.lang.Object r2, $r3;
        java.lang.RuntimeException $r5;
        java.lang.Exception $r4;

        r0 := @this: groovy.lang.MetaMethod;

        r2 := @parameter0: java.lang.Object;

        r6 := @parameter1: java.lang.Object[];

        $r1 = virtualinvoke r0.<groovy.lang.MetaMethod: java.lang.Object[] coerceArgumentsToClasses(java.lang.Object[])>(r6);

     label1:
        $r3 = virtualinvoke r0.<groovy.lang.MetaMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke r0.<groovy.lang.MetaMethod: java.lang.RuntimeException processDoMethodInvokeException(java.lang.Exception,java.lang.Object,java.lang.Object[])>($r4, r2, $r1);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
