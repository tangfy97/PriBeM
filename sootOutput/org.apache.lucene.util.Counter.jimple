public abstract class org.apache.lucene.util.Counter extends java.lang.Object
{

    public void <init>()
    {
        org.apache.lucene.util.Counter r0;

        r0 := @this: org.apache.lucene.util.Counter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract long addAndGet(long);

    public abstract long get();

    public static org.apache.lucene.util.Counter newCounter()
    {
        org.apache.lucene.util.Counter $r0;

        $r0 = staticinvoke <org.apache.lucene.util.Counter: org.apache.lucene.util.Counter newCounter(boolean)>(0);

        return $r0;
    }

    public static org.apache.lucene.util.Counter newCounter(boolean)
    {
        org.apache.lucene.util.Counter$SerialCounter $r2;
        org.apache.lucene.util.Counter $r0;
        org.apache.lucene.util.Counter$AtomicCounter $r1;
        boolean z0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = new org.apache.lucene.util.Counter$AtomicCounter;

        $r0 = $r1;

        specialinvoke $r1.<org.apache.lucene.util.Counter$AtomicCounter: void <init>(org.apache.lucene.util.Counter$1)>(null);

        goto label2;

     label1:
        $r2 = new org.apache.lucene.util.Counter$SerialCounter;

        $r0 = $r2;

        specialinvoke $r2.<org.apache.lucene.util.Counter$SerialCounter: void <init>(org.apache.lucene.util.Counter$1)>(null);

     label2:
        return $r0;
    }
}
