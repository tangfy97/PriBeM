public final class org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory extends java.lang.Object
{

    private void <init>()
    {
        org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory r0;

        r0 := @this: org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.net.Socket createSocket(org.apache.commons.httpclient.protocol.ProtocolSocketFactory, java.lang.String, int, java.net.InetAddress, int, int) throws java.io.IOException, java.net.UnknownHostException, org.apache.commons.httpclient.ConnectTimeoutException
    {
        java.net.Socket $r4;
        long $l3;
        java.net.InetAddress r3;
        org.apache.commons.httpclient.ConnectTimeoutException $r8;
        java.lang.StringBuffer $r9, $r10, $r11, $r12;
        int i0, i1, i2;
        java.lang.String r2, $r13;
        org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$1 $r0;
        java.io.IOException $r5, $r6;
        org.apache.commons.httpclient.protocol.ProtocolSocketFactory r1;
        org.apache.commons.httpclient.util.TimeoutController$TimeoutException $r7;

        r1 := @parameter0: org.apache.commons.httpclient.protocol.ProtocolSocketFactory;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.net.InetAddress;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        $r0 = new org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$1;

        specialinvoke $r0.<org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$1: void <init>(org.apache.commons.httpclient.protocol.ProtocolSocketFactory,java.lang.String,int,java.net.InetAddress,int)>(r1, r2, i0, r3, i1);

     label1:
        $l3 = (long) i2;

        staticinvoke <org.apache.commons.httpclient.util.TimeoutController: void execute(java.lang.Runnable,long)>($r0, $l3);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new org.apache.commons.httpclient.ConnectTimeoutException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The host did not accept the connection within timeout of ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ms");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.commons.httpclient.ConnectTimeoutException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label4:
        $r4 = virtualinvoke $r0.<org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: java.net.Socket getSocket()>();

        $r5 = staticinvoke <org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: java.io.IOException access$000(org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask)>($r0);

        if $r5 == null goto label5;

        $r6 = staticinvoke <org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: java.io.IOException access$000(org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask)>($r0);

        throw $r6;

     label5:
        return $r4;

        catch org.apache.commons.httpclient.util.TimeoutController$TimeoutException from label1 to label2 with label3;
    }

    public static java.net.Socket createSocket(org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask, int) throws java.io.IOException, java.net.UnknownHostException, org.apache.commons.httpclient.ConnectTimeoutException
    {
        java.net.Socket $r1;
        long $l1;
        java.io.IOException $r2, $r3;
        org.apache.commons.httpclient.ConnectTimeoutException $r5;
        java.lang.StringBuffer $r6, $r7, $r8, $r9;
        int i0;
        java.lang.String $r10;
        org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask r0;
        org.apache.commons.httpclient.util.TimeoutController$TimeoutException $r4;

        r0 := @parameter0: org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask;

        i0 := @parameter1: int;

     label1:
        $l1 = (long) i0;

        staticinvoke <org.apache.commons.httpclient.util.TimeoutController: void execute(java.lang.Runnable,long)>(r0, $l1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.commons.httpclient.ConnectTimeoutException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The host did not accept the connection within timeout of ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ms");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.commons.httpclient.ConnectTimeoutException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label4:
        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: java.net.Socket getSocket()>();

        $r2 = staticinvoke <org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: java.io.IOException access$000(org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask)>(r0);

        if $r2 == null goto label5;

        $r3 = staticinvoke <org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask: java.io.IOException access$000(org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask)>(r0);

        throw $r3;

     label5:
        return $r1;

        catch org.apache.commons.httpclient.util.TimeoutController$TimeoutException from label1 to label2 with label3;
    }
}
