final class org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil$1 extends java.lang.Object implements org.waveprotocol.wave.model.util.ReadableStringSet$Proc
{
    final org.waveprotocol.wave.client.editor.content.misc.CaretAnnotations val$caret;
    final org.waveprotocol.wave.model.document.MutableAnnotationSet val$doc;
    final int val$location;
    final boolean val$leftAlign;

    void <init>(org.waveprotocol.wave.client.editor.content.misc.CaretAnnotations, org.waveprotocol.wave.model.document.MutableAnnotationSet, int, boolean)
    {
        org.waveprotocol.wave.model.document.MutableAnnotationSet r2;
        org.waveprotocol.wave.client.editor.content.misc.CaretAnnotations r1;
        int i0;
        org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil$1 r0;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil$1;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.misc.CaretAnnotations;

        r2 := @parameter1: org.waveprotocol.wave.model.document.MutableAnnotationSet;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r0.<org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil$1: org.waveprotocol.wave.client.editor.content.misc.CaretAnnotations val$caret> = r1;

        r0.<org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil$1: org.waveprotocol.wave.model.document.MutableAnnotationSet val$doc> = r2;

        r0.<org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil$1: int val$location> = i0;

        r0.<org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil$1: boolean val$leftAlign> = z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(java.lang.String)
    {
        org.waveprotocol.wave.client.editor.content.misc.CaretAnnotations $r2, $r9;
        int $i0, $i1, $i2;
        java.lang.String r1, r5, r8;
        org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil$1 r0;
        boolean $z0, $z1, $z2;
        org.waveprotocol.wave.model.document.MutableAnnotationSet $r3, $r6;
        java.lang.Object $r4, $r7;

        r0 := @this: org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil$1;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil$1: org.waveprotocol.wave.client.editor.content.misc.CaretAnnotations val$caret>;

        $z0 = virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.misc.CaretAnnotations: boolean hasAnnotation(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil$1: org.waveprotocol.wave.model.document.MutableAnnotationSet val$doc>;

        $i0 = r0.<org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil$1: int val$location>;

        $z1 = r0.<org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil$1: boolean val$leftAlign>;

        $r4 = staticinvoke <org.waveprotocol.wave.model.document.util.Annotations: java.lang.Object getAlignedAnnotation(org.waveprotocol.wave.model.document.MutableAnnotationSet,int,java.lang.String,boolean)>($r3, $i0, r1, $z1);

        r5 = (java.lang.String) $r4;

        $r6 = r0.<org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil$1: org.waveprotocol.wave.model.document.MutableAnnotationSet val$doc>;

        $i1 = r0.<org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil$1: int val$location>;

        $i2 = $i1 - 1;

        $r7 = interfaceinvoke $r6.<org.waveprotocol.wave.model.document.MutableAnnotationSet: java.lang.Object getAnnotation(int,java.lang.String)>($i2, r1);

        r8 = (java.lang.String) $r7;

        $z2 = staticinvoke <org.waveprotocol.wave.model.util.ValueUtils: boolean equal(java.lang.Object,java.lang.Object)>(r5, r8);

        if $z2 != 0 goto label1;

        $r9 = r0.<org.waveprotocol.wave.client.editor.util.EditorAnnotationUtil$1: org.waveprotocol.wave.client.editor.content.misc.CaretAnnotations val$caret>;

        virtualinvoke $r9.<org.waveprotocol.wave.client.editor.content.misc.CaretAnnotations: void setAnnotation(java.lang.String,java.lang.String)>(r1, r5);

     label1:
        return;
    }
}
