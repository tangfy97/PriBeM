final class org.apache.lucene.codecs.lucene3x.SegmentTermEnum extends java.lang.Object implements java.lang.Cloneable, java.io.Closeable
{
    private org.apache.lucene.store.IndexInput input;
    org.apache.lucene.index.FieldInfos fieldInfos;
    long size;
    long position;
    public static final int FORMAT_VERSION_UTF8_LENGTH_IN_BYTES;
    public static final int FORMAT_CURRENT;
    public static final int FORMAT_MINIMUM;
    private org.apache.lucene.codecs.lucene3x.TermBuffer termBuffer;
    private org.apache.lucene.codecs.lucene3x.TermBuffer prevBuffer;
    private org.apache.lucene.codecs.lucene3x.TermBuffer scanBuffer;
    org.apache.lucene.codecs.lucene3x.TermInfo termInfo;
    private int format;
    private boolean isIndex;
    long indexPointer;
    int indexInterval;
    int skipInterval;
    int newSuffixStart;
    int maxSkipLevels;
    private boolean first;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.lucene.store.IndexInput, org.apache.lucene.index.FieldInfos, boolean) throws org.apache.lucene.index.CorruptIndexException, java.io.IOException
    {
        org.apache.lucene.index.IndexFormatTooNewException $r33;
        org.apache.lucene.index.FieldInfos r6;
        boolean z0, $z1, $z2;
        org.apache.lucene.codecs.lucene3x.TermInfo $r31;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r0;
        java.lang.StringBuilder $r14, $r15, $r16, $r20, $r21, $r22, $r34, $r36;
        long $l3, $l13;
        java.lang.AssertionError $r35, $r37;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i17, $i19, $i21, $i23, $i25;
        java.lang.String $r17, $r23;
        org.apache.lucene.store.IndexInput r5, $r7, $r8, $r9, $r10, $r11, $r25, $r27;
        org.apache.lucene.index.IndexFormatTooOldException $r32;
        org.apache.lucene.codecs.lucene3x.TermBuffer $r28, $r29, $r30;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        r5 := @parameter0: org.apache.lucene.store.IndexInput;

        r6 := @parameter1: org.apache.lucene.index.FieldInfos;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long position> = -1L;

        $r28 = new org.apache.lucene.codecs.lucene3x.TermBuffer;

        specialinvoke $r28.<org.apache.lucene.codecs.lucene3x.TermBuffer: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer termBuffer> = $r28;

        $r29 = new org.apache.lucene.codecs.lucene3x.TermBuffer;

        specialinvoke $r29.<org.apache.lucene.codecs.lucene3x.TermBuffer: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer prevBuffer> = $r29;

        $r30 = new org.apache.lucene.codecs.lucene3x.TermBuffer;

        specialinvoke $r30.<org.apache.lucene.codecs.lucene3x.TermBuffer: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer scanBuffer> = $r30;

        $r31 = new org.apache.lucene.codecs.lucene3x.TermInfo;

        specialinvoke $r31.<org.apache.lucene.codecs.lucene3x.TermInfo: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo> = $r31;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: boolean isIndex> = 0;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long indexPointer> = 0L;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: boolean first> = 1;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input> = r5;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.FieldInfos fieldInfos> = r6;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: boolean isIndex> = z0;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int maxSkipLevels> = 1;

        $r7 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input>;

        $i0 = virtualinvoke $r7.<org.apache.lucene.store.IndexInput: int readInt()>();

        if $i0 < 0 goto label1;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int format> = 0;

        $l13 = (long) $i0;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long size> = $l13;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int indexInterval> = 128;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int skipInterval> = 2147483647;

        goto label5;

     label1:
        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int format> = $i0;

        $i1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int format>;

        $i15 = (int) -4;

        if $i1 <= $i15 goto label2;

        $r32 = new org.apache.lucene.index.IndexFormatTooOldException;

        $r27 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input>;

        $i12 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int format>;

        $i17 = (int) -4;

        $i19 = (int) -4;

        specialinvoke $r32.<org.apache.lucene.index.IndexFormatTooOldException: void <init>(org.apache.lucene.store.DataInput,int,int,int)>($r27, $i12, $i17, $i19);

        throw $r32;

     label2:
        $i2 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int format>;

        $i21 = (int) -4;

        if $i2 >= $i21 goto label3;

        $r33 = new org.apache.lucene.index.IndexFormatTooNewException;

        $r25 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input>;

        $i11 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int format>;

        $i23 = (int) -4;

        $i25 = (int) -4;

        specialinvoke $r33.<org.apache.lucene.index.IndexFormatTooNewException: void <init>(org.apache.lucene.store.DataInput,int,int,int)>($r25, $i11, $i23, $i25);

        throw $r33;

     label3:
        $r8 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input>;

        $l3 = virtualinvoke $r8.<org.apache.lucene.store.IndexInput: long readLong()>();

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long size> = $l3;

        $r9 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input>;

        $i4 = virtualinvoke $r9.<org.apache.lucene.store.IndexInput: int readInt()>();

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int indexInterval> = $i4;

        $r10 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input>;

        $i5 = virtualinvoke $r10.<org.apache.lucene.store.IndexInput: int readInt()>();

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int skipInterval> = $i5;

        $r11 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input>;

        $i6 = virtualinvoke $r11.<org.apache.lucene.store.IndexInput: int readInt()>();

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int maxSkipLevels> = $i6;

        $z1 = <org.apache.lucene.codecs.lucene3x.SegmentTermEnum: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $i9 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int indexInterval>;

        if $i9 > 0 goto label4;

        $r35 = new java.lang.AssertionError;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("indexInterval=");

        $i10 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int indexInterval>;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is negative; must be > 0");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.AssertionError: void <init>(java.lang.Object)>($r23);

        throw $r35;

     label4:
        $z2 = <org.apache.lucene.codecs.lucene3x.SegmentTermEnum: boolean $assertionsDisabled>;

        if $z2 != 0 goto label5;

        $i7 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int skipInterval>;

        if $i7 > 0 goto label5;

        $r37 = new java.lang.AssertionError;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("skipInterval=");

        $i8 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int skipInterval>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is negative; must be > 0");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.AssertionError: void <init>(java.lang.Object)>($r17);

        throw $r37;

     label5:
        return;
    }

    protected org.apache.lucene.codecs.lucene3x.SegmentTermEnum clone()
    {
        org.apache.lucene.store.IndexInput $r2, $r3;
        org.apache.lucene.codecs.lucene3x.TermInfo $r4, $r5;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r0, r12;
        org.apache.lucene.codecs.lucene3x.TermBuffer $r6, $r7, $r8, $r9, $r10;
        java.lang.CloneNotSupportedException $r11;
        java.lang.Object $r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        r12 = null;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r12 = (org.apache.lucene.codecs.lucene3x.SegmentTermEnum) $r1;

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

     label4:
        $r2 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        r12.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input> = $r3;

        $r4 = new org.apache.lucene.codecs.lucene3x.TermInfo;

        $r5 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo>;

        specialinvoke $r4.<org.apache.lucene.codecs.lucene3x.TermInfo: void <init>(org.apache.lucene.codecs.lucene3x.TermInfo)>($r5);

        r12.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo> = $r4;

        $r6 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer termBuffer>;

        $r7 = virtualinvoke $r6.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.codecs.lucene3x.TermBuffer clone()>();

        r12.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer termBuffer> = $r7;

        $r8 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer prevBuffer>;

        $r9 = virtualinvoke $r8.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.codecs.lucene3x.TermBuffer clone()>();

        r12.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer prevBuffer> = $r9;

        $r10 = new org.apache.lucene.codecs.lucene3x.TermBuffer;

        specialinvoke $r10.<org.apache.lucene.codecs.lucene3x.TermBuffer: void <init>()>();

        r12.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer scanBuffer> = $r10;

        return r12;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    final void seek(long, long, org.apache.lucene.index.Term, org.apache.lucene.codecs.lucene3x.TermInfo) throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.codecs.lucene3x.TermInfo r5, $r6;
        org.apache.lucene.index.Term r2;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r0;
        long l0, l1;
        org.apache.lucene.codecs.lucene3x.TermBuffer $r3, $r4;
        byte $b2;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r2 := @parameter2: org.apache.lucene.index.Term;

        r5 := @parameter3: org.apache.lucene.codecs.lucene3x.TermInfo;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input>;

        virtualinvoke $r1.<org.apache.lucene.store.IndexInput: void seek(long)>(l0);

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long position> = l1;

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer termBuffer>;

        virtualinvoke $r3.<org.apache.lucene.codecs.lucene3x.TermBuffer: void set(org.apache.lucene.index.Term)>(r2);

        $r4 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer prevBuffer>;

        virtualinvoke $r4.<org.apache.lucene.codecs.lucene3x.TermBuffer: void reset()>();

        $r6 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo>;

        virtualinvoke $r6.<org.apache.lucene.codecs.lucene3x.TermInfo: void set(org.apache.lucene.codecs.lucene3x.TermInfo)>(r5);

        $b2 = l1 cmp -1L;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: boolean first> = $z0;

        return;
    }

    public final boolean next() throws java.io.IOException
    {
        byte $b4;
        org.apache.lucene.index.FieldInfos $r3;
        boolean $z0;
        org.apache.lucene.codecs.lucene3x.TermInfo $r8, $r9, $r11, $r13, $r16;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r0;
        long $l0, $l1, $l2, $l3, $l7, $l8, $l9, $l10, $l11, $l12, $l15, $l16, $l17;
        int $i5, $i6, $i13, $i14, $i18, $i19;
        org.apache.lucene.store.IndexInput $r4, $r7, $r10, $r12, $r14, $r15;
        org.apache.lucene.codecs.lucene3x.TermBuffer $r1, $r2, $r5, $r6, $r17;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        $r2 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer prevBuffer>;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer termBuffer>;

        virtualinvoke $r2.<org.apache.lucene.codecs.lucene3x.TermBuffer: void set(org.apache.lucene.codecs.lucene3x.TermBuffer)>($r1);

        $l0 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long position>;

        $l1 = $l0 + 1L;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long position> = $l1;

        $l2 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long size>;

        $l3 = $l2 - 1L;

        $b4 = $l0 cmp $l3;

        $i19 = (int) $b4;

        if $i19 < 0 goto label1;

        $r17 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer termBuffer>;

        virtualinvoke $r17.<org.apache.lucene.codecs.lucene3x.TermBuffer: void reset()>();

        return 0;

     label1:
        $r5 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer termBuffer>;

        $r4 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input>;

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.FieldInfos fieldInfos>;

        virtualinvoke $r5.<org.apache.lucene.codecs.lucene3x.TermBuffer: void read(org.apache.lucene.store.IndexInput,org.apache.lucene.index.FieldInfos)>($r4, $r3);

        $r6 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer termBuffer>;

        $i5 = $r6.<org.apache.lucene.codecs.lucene3x.TermBuffer: int newSuffixStart>;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int newSuffixStart> = $i5;

        $r8 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo>;

        $r7 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input>;

        $i6 = virtualinvoke $r7.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r8.<org.apache.lucene.codecs.lucene3x.TermInfo: int docFreq> = $i6;

        $r9 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo>;

        $l7 = $r9.<org.apache.lucene.codecs.lucene3x.TermInfo: long freqPointer>;

        $r10 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input>;

        $l8 = virtualinvoke $r10.<org.apache.lucene.store.IndexInput: long readVLong()>();

        $l9 = $l7 + $l8;

        $r9.<org.apache.lucene.codecs.lucene3x.TermInfo: long freqPointer> = $l9;

        $r11 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo>;

        $l10 = $r11.<org.apache.lucene.codecs.lucene3x.TermInfo: long proxPointer>;

        $r12 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input>;

        $l11 = virtualinvoke $r12.<org.apache.lucene.store.IndexInput: long readVLong()>();

        $l12 = $l10 + $l11;

        $r11.<org.apache.lucene.codecs.lucene3x.TermInfo: long proxPointer> = $l12;

        $r13 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo>;

        $i14 = $r13.<org.apache.lucene.codecs.lucene3x.TermInfo: int docFreq>;

        $i13 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int skipInterval>;

        if $i14 < $i13 goto label2;

        $r16 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo>;

        $r15 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input>;

        $i18 = virtualinvoke $r15.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r16.<org.apache.lucene.codecs.lucene3x.TermInfo: int skipOffset> = $i18;

     label2:
        $z0 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: boolean isIndex>;

        if $z0 == 0 goto label3;

        $l15 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long indexPointer>;

        $r14 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input>;

        $l16 = virtualinvoke $r14.<org.apache.lucene.store.IndexInput: long readVLong()>();

        $l17 = $l15 + $l16;

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long indexPointer> = $l17;

     label3:
        return 1;
    }

    final int scanTo(org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.index.Term r1;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r0;
        org.apache.lucene.codecs.lucene3x.TermBuffer $r2, $r3, $r4;
        int i0, $i1;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        r1 := @parameter0: org.apache.lucene.index.Term;

        $r2 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer scanBuffer>;

        virtualinvoke $r2.<org.apache.lucene.codecs.lucene3x.TermBuffer: void set(org.apache.lucene.index.Term)>(r1);

        i0 = 0;

        $z0 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: boolean first>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: boolean next()>();

        r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: boolean first> = 0;

        i0 = 1;

     label1:
        $r3 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer scanBuffer>;

        $r4 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer termBuffer>;

        $i1 = virtualinvoke $r3.<org.apache.lucene.codecs.lucene3x.TermBuffer: int compareTo(org.apache.lucene.codecs.lucene3x.TermBuffer)>($r4);

        if $i1 <= 0 goto label2;

        $z1 = virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: boolean next()>();

        if $z1 == 0 goto label2;

        i0 = i0 + 1;

        goto label1;

     label2:
        return i0;
    }

    public final org.apache.lucene.index.Term term()
    {
        org.apache.lucene.index.Term $r2;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r0;
        org.apache.lucene.codecs.lucene3x.TermBuffer $r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer termBuffer>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.index.Term toTerm()>();

        return $r2;
    }

    final org.apache.lucene.index.Term prev()
    {
        org.apache.lucene.index.Term $r2;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r0;
        org.apache.lucene.codecs.lucene3x.TermBuffer $r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermBuffer prevBuffer>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.codecs.lucene3x.TermBuffer: org.apache.lucene.index.Term toTerm()>();

        return $r2;
    }

    final org.apache.lucene.codecs.lucene3x.TermInfo termInfo()
    {
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r1;
        org.apache.lucene.codecs.lucene3x.TermInfo $r0, $r2;

        r1 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        $r0 = new org.apache.lucene.codecs.lucene3x.TermInfo;

        $r2 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo>;

        specialinvoke $r0.<org.apache.lucene.codecs.lucene3x.TermInfo: void <init>(org.apache.lucene.codecs.lucene3x.TermInfo)>($r2);

        return $r0;
    }

    final void termInfo(org.apache.lucene.codecs.lucene3x.TermInfo)
    {
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r1;
        org.apache.lucene.codecs.lucene3x.TermInfo r0, $r2;

        r1 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        r0 := @parameter0: org.apache.lucene.codecs.lucene3x.TermInfo;

        $r2 = r1.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo>;

        virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfo: void set(org.apache.lucene.codecs.lucene3x.TermInfo)>($r2);

        return;
    }

    public final int docFreq()
    {
        int $i0;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r0;
        org.apache.lucene.codecs.lucene3x.TermInfo $r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo>;

        $i0 = $r1.<org.apache.lucene.codecs.lucene3x.TermInfo: int docFreq>;

        return $i0;
    }

    final long freqPointer()
    {
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r0;
        long $l0;
        org.apache.lucene.codecs.lucene3x.TermInfo $r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo>;

        $l0 = $r1.<org.apache.lucene.codecs.lucene3x.TermInfo: long freqPointer>;

        return $l0;
    }

    final long proxPointer()
    {
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r0;
        long $l0;
        org.apache.lucene.codecs.lucene3x.TermInfo $r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo>;

        $l0 = $r1.<org.apache.lucene.codecs.lucene3x.TermInfo: long proxPointer>;

        return $l0;
    }

    public final void close() throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r0;
        org.apache.lucene.store.IndexInput $r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.store.IndexInput input>;

        virtualinvoke $r1.<org.apache.lucene.store.IndexInput: void close()>();

        return;
    }

    protected volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r0, $r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        $r1 = virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.SegmentTermEnum clone()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int FORMAT_MINIMUM> = -4;

        <org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int FORMAT_CURRENT> = -4;

        <org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int FORMAT_VERSION_UTF8_LENGTH_IN_BYTES> = -4;

        $r0 = class "Lorg/apache/lucene/codecs/lucene3x/SegmentTermEnum;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene3x.SegmentTermEnum: boolean $assertionsDisabled> = $z1;

        return;
    }
}
