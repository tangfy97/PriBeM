public final class org.codehaus.jackson.map.jsontype.NamedType extends java.lang.Object
{
    protected final java.lang.Class _class;
    protected final int _hashCode;
    protected java.lang.String _name;

    public void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        org.codehaus.jackson.map.jsontype.NamedType r0;

        r0 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.codehaus.jackson.map.jsontype.NamedType: void <init>(java.lang.Class,java.lang.String)>(r1, null);

        return;
    }

    public void <init>(java.lang.Class, java.lang.String)
    {
        int $i0;
        java.lang.Class r1;
        org.codehaus.jackson.map.jsontype.NamedType r0;
        java.lang.String $r2, r3;

        r0 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        r1 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.Class _class> = r1;

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        r0.<org.codehaus.jackson.map.jsontype.NamedType: int _hashCode> = $i0;

        virtualinvoke r0.<org.codehaus.jackson.map.jsontype.NamedType: void setName(java.lang.String)>(r3);

        return;
    }

    public java.lang.Class getType()
    {
        java.lang.Class $r1;
        org.codehaus.jackson.map.jsontype.NamedType r0;

        r0 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        $r1 = r0.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.Class _class>;

        return $r1;
    }

    public java.lang.String getName()
    {
        org.codehaus.jackson.map.jsontype.NamedType r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        $r1 = r0.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.String _name>;

        return $r1;
    }

    public void setName(java.lang.String)
    {
        int $i0;
        org.codehaus.jackson.map.jsontype.NamedType r0;
        java.lang.String r1, $r2;

        r0 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = null;

        goto label3;

     label2:
        $r2 = r1;

     label3:
        r0.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.String _name> = $r2;

        return;
    }

    public boolean hasName()
    {
        org.codehaus.jackson.map.jsontype.NamedType r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        $r1 = r0.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.String _name>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        org.codehaus.jackson.map.jsontype.NamedType r1, $r4;
        java.lang.Object r0;
        java.lang.Class $r2, $r3, $r5, $r6;
        boolean $z0;

        r1 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        $r6 = r1.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.Class _class>;

        $r4 = (org.codehaus.jackson.map.jsontype.NamedType) r0;

        $r5 = $r4.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.Class _class>;

        if $r6 != $r5 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public int hashCode()
    {
        int $i0;
        org.codehaus.jackson.map.jsontype.NamedType r0;

        r0 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        $i0 = r0.<org.codehaus.jackson.map.jsontype.NamedType: int _hashCode>;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.jsontype.NamedType r2;
        java.lang.String $r4, $r7, $r10, $r15, $r16;
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r14;
        java.lang.Class $r3;

        r2 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[NamedType, class ");

        $r3 = r2.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.Class _class>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", name: ");

        $r7 = r2.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.String _name>;

        if $r7 != null goto label1;

        $r16 = "null";

        goto label2;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r10 = r2.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.String _name>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }
}
