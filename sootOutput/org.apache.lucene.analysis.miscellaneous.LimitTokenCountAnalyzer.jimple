public final class org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer extends org.apache.lucene.analysis.AnalyzerWrapper
{
    private final org.apache.lucene.analysis.Analyzer delegate;
    private final int maxTokenCount;
    private final boolean consumeAllTokens;

    public void <init>(org.apache.lucene.analysis.Analyzer, int)
    {
        int i0;
        org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer r0;
        org.apache.lucene.analysis.Analyzer r1;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer;

        r1 := @parameter0: org.apache.lucene.analysis.Analyzer;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer: void <init>(org.apache.lucene.analysis.Analyzer,int,boolean)>(r1, i0, 0);

        return;
    }

    public void <init>(org.apache.lucene.analysis.Analyzer, int, boolean)
    {
        org.apache.lucene.analysis.Analyzer r1;
        int i0;
        org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer r0;
        boolean z0;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer;

        r1 := @parameter0: org.apache.lucene.analysis.Analyzer;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.lucene.analysis.AnalyzerWrapper: void <init>()>();

        r0.<org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer: org.apache.lucene.analysis.Analyzer delegate> = r1;

        r0.<org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer: int maxTokenCount> = i0;

        r0.<org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer: boolean consumeAllTokens> = z0;

        return;
    }

    protected org.apache.lucene.analysis.Analyzer getWrappedAnalyzer(java.lang.String)
    {
        java.lang.String r2;
        org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer r0;
        org.apache.lucene.analysis.Analyzer $r1;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer: org.apache.lucene.analysis.Analyzer delegate>;

        return $r1;
    }

    protected org.apache.lucene.analysis.Analyzer$TokenStreamComponents wrapComponents(java.lang.String, org.apache.lucene.analysis.Analyzer$TokenStreamComponents)
    {
        org.apache.lucene.analysis.miscellaneous.LimitTokenCountFilter $r3;
        org.apache.lucene.analysis.Tokenizer $r2;
        org.apache.lucene.analysis.TokenStream $r4;
        org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer r5;
        org.apache.lucene.analysis.Analyzer$TokenStreamComponents $r0, r1;
        int $i0;
        java.lang.String r6;
        boolean $z0;

        r5 := @this: org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.lucene.analysis.Analyzer$TokenStreamComponents;

        $r0 = new org.apache.lucene.analysis.Analyzer$TokenStreamComponents;

        $r2 = virtualinvoke r1.<org.apache.lucene.analysis.Analyzer$TokenStreamComponents: org.apache.lucene.analysis.Tokenizer getTokenizer()>();

        $r3 = new org.apache.lucene.analysis.miscellaneous.LimitTokenCountFilter;

        $r4 = virtualinvoke r1.<org.apache.lucene.analysis.Analyzer$TokenStreamComponents: org.apache.lucene.analysis.TokenStream getTokenStream()>();

        $i0 = r5.<org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer: int maxTokenCount>;

        $z0 = r5.<org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer: boolean consumeAllTokens>;

        specialinvoke $r3.<org.apache.lucene.analysis.miscellaneous.LimitTokenCountFilter: void <init>(org.apache.lucene.analysis.TokenStream,int,boolean)>($r4, $i0, $z0);

        specialinvoke $r0.<org.apache.lucene.analysis.Analyzer$TokenStreamComponents: void <init>(org.apache.lucene.analysis.Tokenizer,org.apache.lucene.analysis.TokenStream)>($r2, $r3);

        return $r0;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.analysis.Analyzer $r3;
        org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer r2;
        int $i0;
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r4, $r11;
        boolean $z0;

        r2 := @this: org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LimitTokenCountAnalyzer(");

        $r3 = r2.<org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer: org.apache.lucene.analysis.Analyzer delegate>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxTokenCount=");

        $i0 = r2.<org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer: int maxTokenCount>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", consumeAllTokens=");

        $z0 = r2.<org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer: boolean consumeAllTokens>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }
}
