public class org.apache.commons.collections.list.CursorableLinkedList$SubCursor extends org.apache.commons.collections.list.CursorableLinkedList$Cursor
{
    protected final org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList sub;

    protected void <init>(org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList, int)
    {
        org.apache.commons.collections.list.CursorableLinkedList $r3;
        org.apache.commons.collections.list.CursorableLinkedList$SubCursor r0;
        int i0, $i1, $i2;
        org.apache.commons.collections.list.AbstractLinkedList $r2;
        org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList r1;

        r0 := @this: org.apache.commons.collections.list.CursorableLinkedList$SubCursor;

        r1 := @parameter0: org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList;

        i0 := @parameter1: int;

        $r2 = r1.<org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList: org.apache.commons.collections.list.AbstractLinkedList parent>;

        $r3 = (org.apache.commons.collections.list.CursorableLinkedList) $r2;

        $i1 = r1.<org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList: int offset>;

        $i2 = i0 + $i1;

        specialinvoke r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: void <init>(org.apache.commons.collections.list.CursorableLinkedList,int)>($r3, $i2);

        r0.<org.apache.commons.collections.list.CursorableLinkedList$SubCursor: org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList sub> = r1;

        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.collections.list.CursorableLinkedList$SubCursor r0;
        int $i0, $i1;
        org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.list.CursorableLinkedList$SubCursor;

        $i0 = virtualinvoke r0.<org.apache.commons.collections.list.CursorableLinkedList$SubCursor: int nextIndex()>();

        $r1 = r0.<org.apache.commons.collections.list.CursorableLinkedList$SubCursor: org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList sub>;

        $i1 = $r1.<org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList: int size>;

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasPrevious()
    {
        int $i0;
        org.apache.commons.collections.list.CursorableLinkedList$SubCursor r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.list.CursorableLinkedList$SubCursor;

        $i0 = virtualinvoke r0.<org.apache.commons.collections.list.CursorableLinkedList$SubCursor: int previousIndex()>();

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int nextIndex()
    {
        org.apache.commons.collections.list.CursorableLinkedList$SubCursor r0;
        int $i0, $i1, $i2;
        org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList $r1;

        r0 := @this: org.apache.commons.collections.list.CursorableLinkedList$SubCursor;

        $i0 = specialinvoke r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: int nextIndex()>();

        $r1 = r0.<org.apache.commons.collections.list.CursorableLinkedList$SubCursor: org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList sub>;

        $i1 = $r1.<org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList: int offset>;

        $i2 = $i0 - $i1;

        return $i2;
    }

    public void add(java.lang.Object)
    {
        org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList $r3, $r4;
        org.apache.commons.collections.list.CursorableLinkedList$SubCursor r0;
        int $i0, $i1, $i2;
        java.lang.Object r1;
        org.apache.commons.collections.list.AbstractLinkedList $r2;

        r0 := @this: org.apache.commons.collections.list.CursorableLinkedList$SubCursor;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: void add(java.lang.Object)>(r1);

        $r3 = r0.<org.apache.commons.collections.list.CursorableLinkedList$SubCursor: org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList sub>;

        $r2 = r0.<org.apache.commons.collections.list.CursorableLinkedList$SubCursor: org.apache.commons.collections.list.AbstractLinkedList parent>;

        $i0 = $r2.<org.apache.commons.collections.list.AbstractLinkedList: int modCount>;

        $r3.<org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList: int expectedModCount> = $i0;

        $r4 = r0.<org.apache.commons.collections.list.CursorableLinkedList$SubCursor: org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList sub>;

        $i1 = $r4.<org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList: int size>;

        $i2 = $i1 + 1;

        $r4.<org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList: int size> = $i2;

        return;
    }

    public void remove()
    {
        org.apache.commons.collections.list.CursorableLinkedList$SubCursor r0;
        int $i0, $i1, $i2;
        org.apache.commons.collections.list.AbstractLinkedList $r1;
        org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList $r2, $r3;

        r0 := @this: org.apache.commons.collections.list.CursorableLinkedList$SubCursor;

        specialinvoke r0.<org.apache.commons.collections.list.CursorableLinkedList$Cursor: void remove()>();

        $r2 = r0.<org.apache.commons.collections.list.CursorableLinkedList$SubCursor: org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList sub>;

        $r1 = r0.<org.apache.commons.collections.list.CursorableLinkedList$SubCursor: org.apache.commons.collections.list.AbstractLinkedList parent>;

        $i0 = $r1.<org.apache.commons.collections.list.AbstractLinkedList: int modCount>;

        $r2.<org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList: int expectedModCount> = $i0;

        $r3 = r0.<org.apache.commons.collections.list.CursorableLinkedList$SubCursor: org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList sub>;

        $i1 = $r3.<org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList: int size>;

        $i2 = $i1 - 1;

        $r3.<org.apache.commons.collections.list.AbstractLinkedList$LinkedSubList: int size> = $i2;

        return;
    }
}
