public abstract class org.apache.xerces.dom.ChildNode extends org.apache.xerces.dom.NodeImpl
{
    static final long serialVersionUID;
    protected org.apache.xerces.dom.ChildNode previousSibling;
    protected org.apache.xerces.dom.ChildNode nextSibling;

    protected void <init>(org.apache.xerces.dom.CoreDocumentImpl)
    {
        org.apache.xerces.dom.ChildNode r0;
        org.apache.xerces.dom.CoreDocumentImpl r1;

        r0 := @this: org.apache.xerces.dom.ChildNode;

        r1 := @parameter0: org.apache.xerces.dom.CoreDocumentImpl;

        specialinvoke r0.<org.apache.xerces.dom.NodeImpl: void <init>(org.apache.xerces.dom.CoreDocumentImpl)>(r1);

        return;
    }

    public void <init>()
    {
        org.apache.xerces.dom.ChildNode r0;

        r0 := @this: org.apache.xerces.dom.ChildNode;

        specialinvoke r0.<org.apache.xerces.dom.NodeImpl: void <init>()>();

        return;
    }

    public org.w3c.dom.Node cloneNode(boolean)
    {
        org.w3c.dom.Node $r1;
        org.apache.xerces.dom.ChildNode r0, r2;
        boolean z0;

        r0 := @this: org.apache.xerces.dom.ChildNode;

        z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<org.apache.xerces.dom.NodeImpl: org.w3c.dom.Node cloneNode(boolean)>(z0);

        r2 = (org.apache.xerces.dom.ChildNode) $r1;

        r2.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling> = null;

        r2.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling> = null;

        virtualinvoke r2.<org.apache.xerces.dom.ChildNode: void isFirstChild(boolean)>(0);

        return r2;
    }

    public org.w3c.dom.Node getParentNode()
    {
        org.apache.xerces.dom.ChildNode r0;
        org.apache.xerces.dom.NodeImpl $r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.ChildNode;

        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ChildNode: boolean isOwned()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.NodeImpl ownerNode>;

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    final org.apache.xerces.dom.NodeImpl parentNode()
    {
        org.apache.xerces.dom.ChildNode r0;
        org.apache.xerces.dom.NodeImpl $r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.ChildNode;

        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ChildNode: boolean isOwned()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.NodeImpl ownerNode>;

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public org.w3c.dom.Node getNextSibling()
    {
        org.apache.xerces.dom.ChildNode r0, $r1;

        r0 := @this: org.apache.xerces.dom.ChildNode;

        $r1 = r0.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode nextSibling>;

        return $r1;
    }

    public org.w3c.dom.Node getPreviousSibling()
    {
        org.apache.xerces.dom.ChildNode r0, $r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.ChildNode;

        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ChildNode: boolean isFirstChild()>();

        if $z0 == 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = r0.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling>;

     label2:
        return $r1;
    }

    final org.apache.xerces.dom.ChildNode previousSibling()
    {
        org.apache.xerces.dom.ChildNode r0, $r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom.ChildNode;

        $z0 = virtualinvoke r0.<org.apache.xerces.dom.ChildNode: boolean isFirstChild()>();

        if $z0 == 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = r0.<org.apache.xerces.dom.ChildNode: org.apache.xerces.dom.ChildNode previousSibling>;

     label2:
        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.xerces.dom.ChildNode: long serialVersionUID> = -6112455738802414002L;

        return;
    }
}
