public class org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl extends org.apache.xmlbeans.impl.schema.SchemaTypeLoaderBase
{
    private org.apache.xmlbeans.ResourceLoader _resourceLoader;
    private java.lang.ClassLoader _classLoader;
    private org.apache.xmlbeans.SchemaTypeLoader[] _searchPath;
    private java.util.Map _classpathTypeSystems;
    private java.util.Map _classLoaderTypeSystems;
    private java.util.Map _elementCache;
    private java.util.Map _attributeCache;
    private java.util.Map _modelGroupCache;
    private java.util.Map _attributeGroupCache;
    private java.util.Map _idConstraintCache;
    private java.util.Map _typeCache;
    private java.util.Map _documentCache;
    private java.util.Map _attributeTypeCache;
    private java.util.Map _classnameCache;
    public static java.lang.String METADATA_PACKAGE_LOAD;
    private static final java.lang.Object CACHED_NOT_FOUND;
    private static final org.apache.xmlbeans.SchemaTypeLoader[] EMPTY_SCHEMATYPELOADER_ARRAY;
    static java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeLoaderImpl;
    static final boolean $assertionsDisabled;

    public static org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl getContextTypeLoader()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl $r4, r8;
        org.apache.xmlbeans.SchemaTypeLoader $r3;
        org.apache.xmlbeans.SchemaTypeLoader[] $r5;
        org.apache.xmlbeans.impl.common.SystemCache $r2, $r7;
        org.apache.xmlbeans.SchemaTypeSystem $r6;
        java.lang.Thread $r0;
        java.lang.ClassLoader $r1;

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r1 = virtualinvoke $r0.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r2 = staticinvoke <org.apache.xmlbeans.impl.common.SystemCache: org.apache.xmlbeans.impl.common.SystemCache get()>();

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.common.SystemCache: org.apache.xmlbeans.SchemaTypeLoader getFromTypeLoaderCache(java.lang.ClassLoader)>($r1);

        r8 = (org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl) $r3;

        if r8 != null goto label1;

        $r4 = new org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        $r5 = newarray (org.apache.xmlbeans.SchemaTypeLoader)[1];

        $r6 = staticinvoke <org.apache.xmlbeans.impl.schema.BuiltinSchemaTypeSystem: org.apache.xmlbeans.SchemaTypeSystem get()>();

        $r5[0] = $r6;

        specialinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: void <init>(org.apache.xmlbeans.SchemaTypeLoader[],org.apache.xmlbeans.ResourceLoader,java.lang.ClassLoader)>($r5, null, $r1);

        r8 = $r4;

        $r7 = staticinvoke <org.apache.xmlbeans.impl.common.SystemCache: org.apache.xmlbeans.impl.common.SystemCache get()>();

        virtualinvoke $r7.<org.apache.xmlbeans.impl.common.SystemCache: void addToTypeLoaderCache(org.apache.xmlbeans.SchemaTypeLoader,java.lang.ClassLoader)>($r4, $r1);

     label1:
        return r8;
    }

    public static org.apache.xmlbeans.SchemaTypeLoader build(org.apache.xmlbeans.SchemaTypeLoader[], org.apache.xmlbeans.ResourceLoader, java.lang.ClassLoader)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r7, $r22;
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList $r0;
        org.apache.xmlbeans.ResourceLoader r1, $r9;
        java.lang.StringBuffer $r15, $r16, $r17, $r18;
        int $i0, $i1, $i2, i3, i4;
        java.lang.String $r19;
        boolean $z0;
        org.apache.xmlbeans.SchemaTypeLoader $r3, $r4, $r5, $r6, $r12, $r13;
        java.lang.IllegalArgumentException $r14;
        org.apache.xmlbeans.SchemaTypeLoader[] $r10, $r11, r20, r21;
        java.lang.ClassLoader r2, $r8;

        r20 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader[];

        r1 := @parameter1: org.apache.xmlbeans.ResourceLoader;

        r2 := @parameter2: java.lang.ClassLoader;

        if r20 != null goto label01;

        r21 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] EMPTY_SCHEMATYPELOADER_ARRAY>;

        goto label10;

     label01:
        $r0 = new org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList;

        specialinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$1)>(null);

        i3 = 0;

     label02:
        $i0 = lengthof r20;

        if i3 >= $i0 goto label09;

        $r4 = r20[i3];

        if $r4 != null goto label03;

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("searchPath[");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] is null");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r14;

     label03:
        $r5 = r20[i3];

        $z0 = $r5 instanceof org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        if $z0 != 0 goto label04;

        $r13 = r20[i3];

        staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList: boolean access$200(org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList,org.apache.xmlbeans.SchemaTypeLoader)>($r0, $r13);

        goto label08;

     label04:
        $r6 = r20[i3];

        r7 = (org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl) $r6;

        $r8 = r7.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.ClassLoader _classLoader>;

        if $r8 != null goto label05;

        $r9 = r7.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.ResourceLoader _resourceLoader>;

        if $r9 == null goto label06;

     label05:
        staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList: boolean access$200(org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList,org.apache.xmlbeans.SchemaTypeLoader)>($r0, r7);

        goto label08;

     label06:
        i4 = 0;

     label07:
        $r10 = r7.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $i2 = lengthof $r10;

        if i4 >= $i2 goto label08;

        $r11 = r7.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $r12 = $r11[i4];

        staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList: boolean access$200(org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList,org.apache.xmlbeans.SchemaTypeLoader)>($r0, $r12);

        i4 = i4 + 1;

        goto label07;

     label08:
        i3 = i3 + 1;

        goto label02;

     label09:
        r21 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList: org.apache.xmlbeans.SchemaTypeLoader[] access$300(org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SubLoaderList)>($r0);

     label10:
        $i1 = lengthof r21;

        if $i1 != 1 goto label11;

        if r1 != null goto label11;

        if r2 != null goto label11;

        $r3 = r21[0];

        return $r3;

     label11:
        $r22 = new org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        specialinvoke $r22.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: void <init>(org.apache.xmlbeans.SchemaTypeLoader[],org.apache.xmlbeans.ResourceLoader,java.lang.ClassLoader)>(r21, r1, r2);

        return $r22;
    }

    private void <init>(org.apache.xmlbeans.SchemaTypeLoader[], org.apache.xmlbeans.ResourceLoader, java.lang.ClassLoader)
    {
        org.apache.xmlbeans.SchemaTypeLoader[] r1, $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r0;
        java.lang.ClassLoader r3;
        org.apache.xmlbeans.ResourceLoader r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader[];

        r2 := @parameter1: org.apache.xmlbeans.ResourceLoader;

        r3 := @parameter2: java.lang.ClassLoader;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderBase: void <init>()>();

        if r1 != null goto label1;

        $r4 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] EMPTY_SCHEMATYPELOADER_ARRAY>;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath> = $r4;

        goto label2;

     label1:
        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath> = r1;

     label2:
        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.ResourceLoader _resourceLoader> = r2;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.ClassLoader _classLoader> = r3;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: void initCaches()>();

        return;
    }

    private final void initCaches()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r0;
        java.util.HashMap $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21;
        java.util.Map $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r1);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _classpathTypeSystems> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r4 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r3);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _classLoaderTypeSystems> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r6 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r5);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _elementCache> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r8 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r7);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _attributeCache> = $r8;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        $r10 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r9);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _modelGroupCache> = $r10;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        $r12 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r11);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _attributeGroupCache> = $r12;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        $r14 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r13);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _idConstraintCache> = $r14;

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        $r16 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r15);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _typeCache> = $r16;

        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        $r18 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r17);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _documentCache> = $r18;

        $r19 = new java.util.HashMap;

        specialinvoke $r19.<java.util.HashMap: void <init>()>();

        $r20 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r19);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _attributeTypeCache> = $r20;

        $r21 = new java.util.HashMap;

        specialinvoke $r21.<java.util.HashMap: void <init>()>();

        $r22 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r21);

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _classnameCache> = $r22;

        return;
    }

    org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl typeSystemForComponent(java.lang.String, javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r8;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r12;
        org.apache.xmlbeans.ResourceLoader $r9, $r14;
        java.lang.StringBuffer $r0, $r2, $r5, $r6;
        java.lang.String r1, $r4, $r7, r15;
        org.apache.xmlbeans.SchemaTypeSystem $r11;
        javax.xml.namespace.QName r3;
        java.lang.ClassLoader $r10, $r13;

        r8 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: javax.xml.namespace.QName;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r4 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String hexsafedir(javax.xml.namespace.QName)>(r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".xsb");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r15 = null;

        $r9 = r8.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.ResourceLoader _resourceLoader>;

        if $r9 == null goto label1;

        $r14 = r8.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.ResourceLoader _resourceLoader>;

        r15 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String crackEntry(org.apache.xmlbeans.ResourceLoader,java.lang.String)>($r14, $r7);

     label1:
        $r10 = r8.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.ClassLoader _classLoader>;

        if $r10 == null goto label2;

        $r13 = r8.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.ClassLoader _classLoader>;

        r15 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String crackEntry(java.lang.ClassLoader,java.lang.String)>($r13, $r7);

     label2:
        if r15 == null goto label3;

        $r11 = virtualinvoke r8.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeSystem typeSystemForName(java.lang.String)>(r15);

        $r12 = (org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl) $r11;

        return $r12;

     label3:
        return null;
    }

    public org.apache.xmlbeans.SchemaTypeSystem typeSystemForName(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r0;
        java.lang.ClassLoader $r2;
        java.lang.String r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r4, $r5;
        org.apache.xmlbeans.ResourceLoader $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.ResourceLoader _resourceLoader>;

        if $r1 == null goto label1;

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystemOnClasspath(java.lang.String)>(r3);

        if $r5 == null goto label1;

        return $r5;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.ClassLoader _classLoader>;

        if $r2 == null goto label2;

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystemOnClassloader(java.lang.String)>(r3);

        if $r4 == null goto label2;

        return $r4;

     label2:
        return null;
    }

    org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl typeSystemForClassname(java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r8;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r13, $r16;
        org.apache.xmlbeans.ResourceLoader $r9, $r14;
        java.lang.StringBuffer $r0, $r2, $r5, $r6;
        java.lang.String r1, r3, $r4, $r7, $r12, $r15;
        java.lang.ClassLoader $r10, $r11;

        r8 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".xsb");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = r8.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.ResourceLoader _resourceLoader>;

        if $r9 == null goto label1;

        $r14 = r8.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.ResourceLoader _resourceLoader>;

        $r15 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String crackEntry(org.apache.xmlbeans.ResourceLoader,java.lang.String)>($r14, $r7);

        if $r15 == null goto label1;

        $r16 = virtualinvoke r8.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystemOnClasspath(java.lang.String)>($r15);

        return $r16;

     label1:
        $r10 = r8.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.ClassLoader _classLoader>;

        if $r10 == null goto label2;

        $r11 = r8.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.ClassLoader _classLoader>;

        $r12 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String crackEntry(java.lang.ClassLoader,java.lang.String)>($r11, $r7);

        if $r12 == null goto label2;

        $r13 = virtualinvoke r8.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystemOnClassloader(java.lang.String)>($r12);

        return $r13;

     label2:
        return null;
    }

    org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystemOnClasspath(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r4, r7;
        org.apache.xmlbeans.ResourceLoader $r5;
        java.util.Map $r2, $r6;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _classpathTypeSystems>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl) $r3;

        if r7 != null goto label1;

        $r4 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.ResourceLoader _resourceLoader>;

        specialinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void <init>(org.apache.xmlbeans.ResourceLoader,java.lang.String,org.apache.xmlbeans.SchemaTypeLoader)>($r5, r1, r0);

        r7 = $r4;

        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _classpathTypeSystems>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

     label1:
        return r7;
    }

    org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystemOnClassloader(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r6;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r15, r17;
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r9, $r10, $r11, $r12;
        java.util.Map $r7, $r16;
        java.lang.String r2, $r5, $r13;
        java.lang.Object $r8;
        java.lang.ClassLoader $r14;

        r6 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Finding type system ");

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" on classloader");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: void trace(int,java.lang.String,int)>(1, $r5, 0);

        $r7 = r6.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _classLoaderTypeSystems>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r17 = (org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl) $r8;

        if r17 != null goto label1;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type system ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not cached - consulting field");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.common.XBeanDebug: void trace(int,java.lang.String,int)>(1, $r13, 0);

        $r14 = r6.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.ClassLoader _classLoader>;

        $r15 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl forName(java.lang.String,java.lang.ClassLoader)>(r2, $r14);

        r17 = $r15;

        $r16 = r6.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _classLoaderTypeSystems>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r15);

     label1:
        return r17;
    }

    static java.lang.String crackEntry(org.apache.xmlbeans.ResourceLoader, java.lang.String)
    {
        java.lang.String r1, $r3;
        org.apache.xmlbeans.ResourceLoader r0;
        java.io.InputStream $r2;

        r0 := @parameter0: org.apache.xmlbeans.ResourceLoader;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.ResourceLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String crackPointer(java.io.InputStream)>($r2);

        return $r3;
    }

    static java.lang.String crackEntry(java.lang.ClassLoader, java.lang.String)
    {
        java.lang.ClassLoader r0;
        java.lang.String r1, $r3;
        java.io.InputStream $r2;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String crackPointer(java.io.InputStream)>($r2);

        return $r3;
    }

    static java.lang.String crackPointer(java.io.InputStream)
    {
        java.lang.String $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String crackPointer(java.io.InputStream)>(r0);

        return $r1;
    }

    public boolean isNamespaceDefined(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r10;
        java.lang.StringBuffer $r2, $r3, $r5, $r6;
        int $i0, i1;
        java.lang.String $r4, $r7, r9;
        boolean $z0, $z1;
        org.apache.xmlbeans.SchemaTypeLoader $r12;
        org.apache.xmlbeans.SchemaTypeLoader[] $r1, $r11;
        javax.xml.namespace.QName $r8;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r9 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        $r11 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $r12 = $r11[i1];

        $z0 = interfaceinvoke $r12.<org.apache.xmlbeans.SchemaTypeLoader: boolean isNamespaceDefined(java.lang.String)>(r9);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r4 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String METADATA_PACKAGE_LOAD>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/namespace/");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = new javax.xml.namespace.QName;

        specialinvoke $r8.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>(r9, "xmlns");

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl typeSystemForComponent(java.lang.String,javax.xml.namespace.QName)>($r7, $r8);

        if $r10 == null goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public org.apache.xmlbeans.SchemaType$Ref findTypeRef(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r13;
        java.lang.AssertionError $r15;
        java.lang.StringBuffer $r7, $r8, $r10, $r11, $r16, $r17, $r19, $r20;
        java.util.Map $r2, $r6;
        org.apache.xmlbeans.SchemaType$Ref $r14, $r24, r25;
        int $i0, i1;
        java.lang.String $r9, $r12, $r18, $r21;
        boolean $z0;
        org.apache.xmlbeans.SchemaTypeLoader $r23;
        org.apache.xmlbeans.SchemaTypeLoader[] $r5, $r22;
        java.lang.Object $r3, $r4, $r26;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _typeCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        if $r3 != $r4 goto label1;

        return null;

     label1:
        r25 = (org.apache.xmlbeans.SchemaType$Ref) $r3;

        if r25 != null goto label8;

        i1 = 0;

     label2:
        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $i0 = lengthof $r5;

        if i1 >= $i0 goto label4;

        $r22 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $r23 = $r22[i1];

        $r24 = interfaceinvoke $r23.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType$Ref findTypeRef(javax.xml.namespace.QName)>(r1);

        r25 = $r24;

        if null == $r24 goto label3;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        if r25 != null goto label5;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r9 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String METADATA_PACKAGE_LOAD>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/type/");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl typeSystemForComponent(java.lang.String,javax.xml.namespace.QName)>($r12, r1);

        if $r13 == null goto label5;

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaType$Ref findTypeRef(javax.xml.namespace.QName)>(r1);

        r25 = $r14;

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        if $r14 != null goto label5;

        $r15 = new java.lang.AssertionError;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type system registered type ");

        $r18 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" but does not return it");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>($r21);

        throw $r15;

     label5:
        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _typeCache>;

        if r25 != null goto label6;

        $r26 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        goto label7;

     label6:
        $r26 = r25;

     label7:
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r26);

     label8:
        return r25;
    }

    public org.apache.xmlbeans.SchemaType typeForClassname(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r13;
        java.lang.AssertionError $r15;
        java.lang.StringBuffer $r7, $r8, $r10, $r11, $r16, $r17, $r18, $r19;
        java.util.Map $r2, $r6;
        int $i0, i1;
        java.lang.String $r0, $r9, $r12, $r20, r24;
        org.apache.xmlbeans.SchemaType $r14, $r23, r25;
        boolean $z0;
        org.apache.xmlbeans.SchemaTypeLoader $r22;
        org.apache.xmlbeans.SchemaTypeLoader[] $r5, $r21;
        java.lang.Object $r3, $r4, $r26;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r24 := @parameter0: java.lang.String;

        $r0 = virtualinvoke r24.<java.lang.String: java.lang.String replace(char,char)>(36, 46);

        $r2 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _classnameCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r4 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        if $r3 != $r4 goto label1;

        return null;

     label1:
        r25 = (org.apache.xmlbeans.SchemaType) $r3;

        if r25 != null goto label8;

        i1 = 0;

     label2:
        $r5 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $i0 = lengthof $r5;

        if i1 >= $i0 goto label4;

        $r21 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $r22 = $r21[i1];

        $r23 = interfaceinvoke $r22.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType typeForClassname(java.lang.String)>($r0);

        r25 = $r23;

        if null == $r23 goto label3;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        if r25 != null goto label5;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r9 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String METADATA_PACKAGE_LOAD>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/javaname/");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl typeSystemForClassname(java.lang.String,java.lang.String)>($r12, $r0);

        if $r13 == null goto label5;

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaType typeForClassname(java.lang.String)>($r0);

        r25 = $r14;

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        if $r14 != null goto label5;

        $r15 = new java.lang.AssertionError;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type system registered type ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" but does not return it");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>($r20);

        throw $r15;

     label5:
        $r6 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _classnameCache>;

        if r25 != null goto label6;

        $r26 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        goto label7;

     label6:
        $r26 = r25;

     label7:
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r26);

     label8:
        return r25;
    }

    public org.apache.xmlbeans.SchemaType$Ref findDocumentTypeRef(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r13;
        java.lang.AssertionError $r15;
        java.lang.StringBuffer $r7, $r8, $r10, $r11, $r16, $r17, $r19, $r20;
        java.util.Map $r2, $r6;
        org.apache.xmlbeans.SchemaType$Ref $r14, $r24, r25;
        int $i0, i1;
        java.lang.String $r9, $r12, $r18, $r21;
        boolean $z0;
        org.apache.xmlbeans.SchemaTypeLoader $r23;
        org.apache.xmlbeans.SchemaTypeLoader[] $r5, $r22;
        java.lang.Object $r3, $r4, $r26;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _documentCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        if $r3 != $r4 goto label1;

        return null;

     label1:
        r25 = (org.apache.xmlbeans.SchemaType$Ref) $r3;

        if r25 != null goto label8;

        i1 = 0;

     label2:
        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $i0 = lengthof $r5;

        if i1 >= $i0 goto label4;

        $r22 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $r23 = $r22[i1];

        $r24 = interfaceinvoke $r23.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType$Ref findDocumentTypeRef(javax.xml.namespace.QName)>(r1);

        r25 = $r24;

        if null == $r24 goto label3;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        if r25 != null goto label5;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r9 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String METADATA_PACKAGE_LOAD>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/element/");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl typeSystemForComponent(java.lang.String,javax.xml.namespace.QName)>($r12, r1);

        if $r13 == null goto label5;

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaType$Ref findDocumentTypeRef(javax.xml.namespace.QName)>(r1);

        r25 = $r14;

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        if $r14 != null goto label5;

        $r15 = new java.lang.AssertionError;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type system registered element ");

        $r18 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" but does not contain document type");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>($r21);

        throw $r15;

     label5:
        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _documentCache>;

        if r25 != null goto label6;

        $r26 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        goto label7;

     label6:
        $r26 = r25;

     label7:
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r26);

     label8:
        return r25;
    }

    public org.apache.xmlbeans.SchemaType$Ref findAttributeTypeRef(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r13;
        java.lang.AssertionError $r15;
        java.lang.StringBuffer $r7, $r8, $r10, $r11, $r16, $r17, $r19, $r20;
        java.util.Map $r2, $r6;
        org.apache.xmlbeans.SchemaType$Ref $r14, $r24, r25;
        int $i0, i1;
        java.lang.String $r9, $r12, $r18, $r21;
        boolean $z0;
        org.apache.xmlbeans.SchemaTypeLoader $r23;
        org.apache.xmlbeans.SchemaTypeLoader[] $r5, $r22;
        java.lang.Object $r3, $r4, $r26;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _attributeTypeCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        if $r3 != $r4 goto label1;

        return null;

     label1:
        r25 = (org.apache.xmlbeans.SchemaType$Ref) $r3;

        if r25 != null goto label8;

        i1 = 0;

     label2:
        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $i0 = lengthof $r5;

        if i1 >= $i0 goto label4;

        $r22 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $r23 = $r22[i1];

        $r24 = interfaceinvoke $r23.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType$Ref findAttributeTypeRef(javax.xml.namespace.QName)>(r1);

        r25 = $r24;

        if null == $r24 goto label3;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        if r25 != null goto label5;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r9 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String METADATA_PACKAGE_LOAD>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/attribute/");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl typeSystemForComponent(java.lang.String,javax.xml.namespace.QName)>($r12, r1);

        if $r13 == null goto label5;

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaType$Ref findAttributeTypeRef(javax.xml.namespace.QName)>(r1);

        r25 = $r14;

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        if $r14 != null goto label5;

        $r15 = new java.lang.AssertionError;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type system registered attribute ");

        $r18 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" but does not contain attribute type");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>($r21);

        throw $r15;

     label5:
        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _attributeTypeCache>;

        if r25 != null goto label6;

        $r26 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        goto label7;

     label6:
        $r26 = r25;

     label7:
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r26);

     label8:
        return r25;
    }

    public org.apache.xmlbeans.SchemaGlobalElement$Ref findElementRef(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r13;
        java.lang.AssertionError $r15;
        java.lang.StringBuffer $r7, $r8, $r10, $r11, $r16, $r17, $r19, $r20;
        java.util.Map $r2, $r6;
        int $i0, i1;
        java.lang.String $r9, $r12, $r18, $r21;
        boolean $z0;
        org.apache.xmlbeans.SchemaGlobalElement$Ref $r14, $r24, r25;
        org.apache.xmlbeans.SchemaTypeLoader $r23;
        org.apache.xmlbeans.SchemaTypeLoader[] $r5, $r22;
        java.lang.Object $r3, $r4, $r26;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _elementCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        if $r3 != $r4 goto label1;

        return null;

     label1:
        r25 = (org.apache.xmlbeans.SchemaGlobalElement$Ref) $r3;

        if r25 != null goto label8;

        i1 = 0;

     label2:
        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $i0 = lengthof $r5;

        if i1 >= $i0 goto label4;

        $r22 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $r23 = $r22[i1];

        $r24 = interfaceinvoke $r23.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaGlobalElement$Ref findElementRef(javax.xml.namespace.QName)>(r1);

        r25 = $r24;

        if null == $r24 goto label3;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        if r25 != null goto label5;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r9 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String METADATA_PACKAGE_LOAD>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/element/");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl typeSystemForComponent(java.lang.String,javax.xml.namespace.QName)>($r12, r1);

        if $r13 == null goto label5;

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaGlobalElement$Ref findElementRef(javax.xml.namespace.QName)>(r1);

        r25 = $r14;

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        if $r14 != null goto label5;

        $r15 = new java.lang.AssertionError;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type system registered element ");

        $r18 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" but does not return it");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>($r21);

        throw $r15;

     label5:
        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _elementCache>;

        if r25 != null goto label6;

        $r26 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        goto label7;

     label6:
        $r26 = r25;

     label7:
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r26);

     label8:
        return r25;
    }

    public org.apache.xmlbeans.SchemaGlobalAttribute$Ref findAttributeRef(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r13;
        java.lang.AssertionError $r15;
        java.lang.StringBuffer $r7, $r8, $r10, $r11, $r16, $r17, $r19, $r20;
        java.util.Map $r2, $r6;
        int $i0, i1;
        java.lang.String $r9, $r12, $r18, $r21;
        boolean $z0;
        org.apache.xmlbeans.SchemaTypeLoader $r23;
        org.apache.xmlbeans.SchemaGlobalAttribute$Ref $r14, $r24, r25;
        org.apache.xmlbeans.SchemaTypeLoader[] $r5, $r22;
        java.lang.Object $r3, $r4, $r26;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _attributeCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        if $r3 != $r4 goto label1;

        return null;

     label1:
        r25 = (org.apache.xmlbeans.SchemaGlobalAttribute$Ref) $r3;

        if r25 != null goto label8;

        i1 = 0;

     label2:
        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $i0 = lengthof $r5;

        if i1 >= $i0 goto label4;

        $r22 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $r23 = $r22[i1];

        $r24 = interfaceinvoke $r23.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaGlobalAttribute$Ref findAttributeRef(javax.xml.namespace.QName)>(r1);

        r25 = $r24;

        if null == $r24 goto label3;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        if r25 != null goto label5;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r9 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String METADATA_PACKAGE_LOAD>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/attribute/");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl typeSystemForComponent(java.lang.String,javax.xml.namespace.QName)>($r12, r1);

        if $r13 == null goto label5;

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaGlobalAttribute$Ref findAttributeRef(javax.xml.namespace.QName)>(r1);

        r25 = $r14;

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        if $r14 != null goto label5;

        $r15 = new java.lang.AssertionError;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type system registered attribute ");

        $r18 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" but does not return it");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>($r21);

        throw $r15;

     label5:
        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _attributeCache>;

        if r25 != null goto label6;

        $r26 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        goto label7;

     label6:
        $r26 = r25;

     label7:
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r26);

     label8:
        return r25;
    }

    public org.apache.xmlbeans.SchemaModelGroup$Ref findModelGroupRef(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r13;
        java.lang.AssertionError $r15;
        org.apache.xmlbeans.SchemaModelGroup$Ref $r14, $r24, r25;
        java.lang.StringBuffer $r7, $r8, $r10, $r11, $r16, $r17, $r19, $r20;
        java.util.Map $r2, $r6;
        int $i0, i1;
        java.lang.String $r9, $r12, $r18, $r21;
        boolean $z0;
        org.apache.xmlbeans.SchemaTypeLoader $r23;
        org.apache.xmlbeans.SchemaTypeLoader[] $r5, $r22;
        java.lang.Object $r3, $r4, $r26;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _modelGroupCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        if $r3 != $r4 goto label1;

        return null;

     label1:
        r25 = (org.apache.xmlbeans.SchemaModelGroup$Ref) $r3;

        if r25 != null goto label8;

        i1 = 0;

     label2:
        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $i0 = lengthof $r5;

        if i1 >= $i0 goto label4;

        $r22 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $r23 = $r22[i1];

        $r24 = interfaceinvoke $r23.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaModelGroup$Ref findModelGroupRef(javax.xml.namespace.QName)>(r1);

        r25 = $r24;

        if null == $r24 goto label3;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        if r25 != null goto label5;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r9 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String METADATA_PACKAGE_LOAD>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/modelgroup/");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl typeSystemForComponent(java.lang.String,javax.xml.namespace.QName)>($r12, r1);

        if $r13 == null goto label5;

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaModelGroup$Ref findModelGroupRef(javax.xml.namespace.QName)>(r1);

        r25 = $r14;

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        if $r14 != null goto label5;

        $r15 = new java.lang.AssertionError;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type system registered model group ");

        $r18 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" but does not return it");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>($r21);

        throw $r15;

     label5:
        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _modelGroupCache>;

        if r25 != null goto label6;

        $r26 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        goto label7;

     label6:
        $r26 = r25;

     label7:
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r26);

     label8:
        return r25;
    }

    public org.apache.xmlbeans.SchemaAttributeGroup$Ref findAttributeGroupRef(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r13;
        java.lang.AssertionError $r15;
        java.lang.StringBuffer $r7, $r8, $r10, $r11, $r16, $r17, $r19, $r20;
        java.util.Map $r2, $r6;
        int $i0, i1;
        java.lang.String $r9, $r12, $r18, $r21;
        org.apache.xmlbeans.SchemaAttributeGroup$Ref $r14, $r24, r25;
        boolean $z0;
        org.apache.xmlbeans.SchemaTypeLoader $r23;
        org.apache.xmlbeans.SchemaTypeLoader[] $r5, $r22;
        java.lang.Object $r3, $r4, $r26;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _attributeGroupCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        if $r3 != $r4 goto label1;

        return null;

     label1:
        r25 = (org.apache.xmlbeans.SchemaAttributeGroup$Ref) $r3;

        if r25 != null goto label8;

        i1 = 0;

     label2:
        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $i0 = lengthof $r5;

        if i1 >= $i0 goto label4;

        $r22 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $r23 = $r22[i1];

        $r24 = interfaceinvoke $r23.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaAttributeGroup$Ref findAttributeGroupRef(javax.xml.namespace.QName)>(r1);

        r25 = $r24;

        if null == $r24 goto label3;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        if r25 != null goto label5;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r9 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String METADATA_PACKAGE_LOAD>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/attributegroup/");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl typeSystemForComponent(java.lang.String,javax.xml.namespace.QName)>($r12, r1);

        if $r13 == null goto label5;

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaAttributeGroup$Ref findAttributeGroupRef(javax.xml.namespace.QName)>(r1);

        r25 = $r14;

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        if $r14 != null goto label5;

        $r15 = new java.lang.AssertionError;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type system registered attribute group ");

        $r18 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" but does not return it");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>($r21);

        throw $r15;

     label5:
        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _attributeGroupCache>;

        if r25 != null goto label6;

        $r26 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        goto label7;

     label6:
        $r26 = r25;

     label7:
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r26);

     label8:
        return r25;
    }

    public org.apache.xmlbeans.SchemaIdentityConstraint$Ref findIdentityConstraintRef(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r0;
        org.apache.xmlbeans.SchemaIdentityConstraint$Ref $r14, $r24, r25;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r13;
        java.lang.AssertionError $r15;
        java.lang.StringBuffer $r7, $r8, $r10, $r11, $r16, $r17, $r19, $r20;
        java.util.Map $r2, $r6;
        int $i0, i1;
        java.lang.String $r9, $r12, $r18, $r21;
        boolean $z0;
        org.apache.xmlbeans.SchemaTypeLoader $r23;
        org.apache.xmlbeans.SchemaTypeLoader[] $r5, $r22;
        java.lang.Object $r3, $r4, $r26;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _idConstraintCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        if $r3 != $r4 goto label1;

        return null;

     label1:
        r25 = (org.apache.xmlbeans.SchemaIdentityConstraint$Ref) $r3;

        if r25 != null goto label8;

        i1 = 0;

     label2:
        $r5 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $i0 = lengthof $r5;

        if i1 >= $i0 goto label4;

        $r22 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] _searchPath>;

        $r23 = $r22[i1];

        $r24 = interfaceinvoke $r23.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaIdentityConstraint$Ref findIdentityConstraintRef(javax.xml.namespace.QName)>(r1);

        r25 = $r24;

        if null == $r24 goto label3;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        if r25 != null goto label5;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r9 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String METADATA_PACKAGE_LOAD>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/identityconstraint/");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl typeSystemForComponent(java.lang.String,javax.xml.namespace.QName)>($r12, r1);

        if $r13 == null goto label5;

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaIdentityConstraint$Ref findIdentityConstraintRef(javax.xml.namespace.QName)>(r1);

        r25 = $r14;

        $z0 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        if $r14 != null goto label5;

        $r15 = new java.lang.AssertionError;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type system registered identity constraint ");

        $r18 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" but does not return it");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>($r21);

        throw $r15;

     label5:
        $r6 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.util.Map _idConstraintCache>;

        if r25 != null goto label6;

        $r26 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND>;

        goto label7;

     label6:
        $r26 = r25;

     label7:
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r26);

     label8:
        return r25;
    }

    public java.io.InputStream getSourceAsStream(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r0;
        org.apache.xmlbeans.ResourceLoader $r1, $r13;
        java.lang.StringBuffer $r3, $r5, $r7, $r8, $r9, $r12, $r14, $r16, $r17, $r18, $r20, $r21, $r22;
        java.lang.String $r6, $r10, $r15, $r19, r23;
        boolean $z0;
        java.lang.ClassLoader $r2, $r4;
        java.io.InputStream $r11, r24;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        r23 := @parameter0: java.lang.String;

        r24 = null;

        $z0 = virtualinvoke r23.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label1;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r23);

        r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.ResourceLoader _resourceLoader>;

        if $r1 == null goto label2;

        $r13 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.ResourceLoader _resourceLoader>;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r15 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String METADATA_PACKAGE_LOAD>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/src");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r23);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        r24 = interfaceinvoke $r13.<org.apache.xmlbeans.ResourceLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r19);

     label2:
        if r24 != null goto label3;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.ClassLoader _classLoader>;

        if $r2 == null goto label3;

        $r4 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.ClassLoader _classLoader>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r6 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String METADATA_PACKAGE_LOAD>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/src");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r23);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = virtualinvoke $r4.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r10);

        return $r11;

     label3:
        return r24;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static java.lang.ClassLoader access$000(org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl)
    {
        java.lang.ClassLoader $r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.ClassLoader _classLoader>;

        return $r1;
    }

    static org.apache.xmlbeans.SchemaTypeLoader[] access$400()
    {
        org.apache.xmlbeans.SchemaTypeLoader[] $r0;

        $r0 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] EMPTY_SCHEMATYPELOADER_ARRAY>;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.xmlbeans.SchemaTypeLoader[] $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache $r5;
        org.apache.xmlbeans.impl.common.SystemCache $r4;
        java.lang.Class $r0, $r6;
        java.lang.Object $r2;
        java.lang.String $r1;
        boolean $z0, $z1, $z2;

        $r0 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeLoaderImpl>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl");

        <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeLoaderImpl> = $r6;

        goto label2;

     label1:
        $r6 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Class class$org$apache$xmlbeans$impl$schema$SchemaTypeLoaderImpl>;

     label2:
        $z0 = virtualinvoke $r6.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: boolean $assertionsDisabled> = $z2;

        $r1 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String METADATA_PACKAGE_LOAD> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.Object CACHED_NOT_FOUND> = $r2;

        $r3 = newarray (org.apache.xmlbeans.SchemaTypeLoader)[0];

        <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader[] EMPTY_SCHEMATYPELOADER_ARRAY> = $r3;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.common.SystemCache: org.apache.xmlbeans.impl.common.SystemCache get()>();

        $z1 = $r4 instanceof org.apache.xmlbeans.impl.common.SystemCache;

        if $z1 == 0 goto label5;

        $r5 = new org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache;

        specialinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$SchemaTypeLoaderCache: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl$1)>(null);

        staticinvoke <org.apache.xmlbeans.impl.common.SystemCache: void set(org.apache.xmlbeans.impl.common.SystemCache)>($r5);

     label5:
        return;
    }
}
