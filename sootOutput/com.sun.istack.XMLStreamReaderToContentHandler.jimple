public class com.sun.istack.XMLStreamReaderToContentHandler extends java.lang.Object
{
    private final javax.xml.stream.XMLStreamReader staxStreamReader;
    private final org.xml.sax.ContentHandler saxHandler;
    private final boolean eagerQuit;
    private final boolean fragment;
    private final java.lang.String[] inscopeNamespaces;
    static final boolean $assertionsDisabled;

    public void <init>(javax.xml.stream.XMLStreamReader, org.xml.sax.ContentHandler, boolean, boolean)
    {
        com.sun.istack.XMLStreamReaderToContentHandler r0;
        javax.xml.stream.XMLStreamReader r1;
        java.lang.String[] $r3;
        org.xml.sax.ContentHandler r2;
        boolean z0, z1;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

        r1 := @parameter0: javax.xml.stream.XMLStreamReader;

        r2 := @parameter1: org.xml.sax.ContentHandler;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r3 = newarray (java.lang.String)[0];

        specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: void <init>(javax.xml.stream.XMLStreamReader,org.xml.sax.ContentHandler,boolean,boolean,java.lang.String[])>(r1, r2, z0, z1, $r3);

        return;
    }

    public void <init>(javax.xml.stream.XMLStreamReader, org.xml.sax.ContentHandler, boolean, boolean, java.lang.String[])
    {
        java.lang.String[] r3;
        java.lang.AssertionError $r4;
        com.sun.istack.XMLStreamReaderToContentHandler r0;
        javax.xml.stream.XMLStreamReader r1;
        int $i0, $i1;
        org.xml.sax.ContentHandler r2;
        boolean z0, z1, $z2;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

        r1 := @parameter0: javax.xml.stream.XMLStreamReader;

        r2 := @parameter1: org.xml.sax.ContentHandler;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 := @parameter4: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader> = r1;

        r0.<com.sun.istack.XMLStreamReaderToContentHandler: org.xml.sax.ContentHandler saxHandler> = r2;

        r0.<com.sun.istack.XMLStreamReaderToContentHandler: boolean eagerQuit> = z0;

        r0.<com.sun.istack.XMLStreamReaderToContentHandler: boolean fragment> = z1;

        r0.<com.sun.istack.XMLStreamReaderToContentHandler: java.lang.String[] inscopeNamespaces> = r3;

        $z2 = <com.sun.istack.XMLStreamReaderToContentHandler: boolean $assertionsDisabled>;

        if $z2 != 0 goto label1;

        $i0 = lengthof r3;

        $i1 = $i0 % 2;

        if $i1 == 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        return;
    }

    public void bridge() throws javax.xml.stream.XMLStreamException
    {
        java.lang.IllegalStateException $r28;
        javax.xml.stream.XMLStreamReader $r1, $r21, $r22, $r25;
        java.lang.InternalError $r30;
        boolean $z0, $z1;
        com.sun.istack.XMLStreamReaderToContentHandler r0;
        org.xml.sax.SAXException $r23;
        java.lang.StringBuilder $r8, $r9, $r18, $r19, $r27, $r29;
        java.lang.String[] $r2, $r3, $r11, $r12, $r26;
        com.sun.istack.XMLStreamException2 $r31;
        int $i0, $i1, $i2, i3, i4, i5, i6, $i7, $i9;
        java.lang.String $r4, $r10, $r13, $r14, $r20;
        org.xml.sax.ContentHandler $r5, $r15;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

     label01:
        i3 = 0;

        $r1 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $i0 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: int getEventType()>();

        i4 = $i0;

        if $i0 != 7 goto label03;

     label02:
        $r21 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $z1 = interfaceinvoke $r21.<javax.xml.stream.XMLStreamReader: boolean isStartElement()>();

        if $z1 != 0 goto label03;

        $r22 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        i4 = interfaceinvoke $r22.<javax.xml.stream.XMLStreamReader: int next()>();

        goto label02;

     label03:
        if i4 == 1 goto label04;

        $r28 = new java.lang.IllegalStateException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The current event is not START_ELEMENT\n but ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r28;

     label04:
        specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: void handleStartDocument()>();

        i5 = 0;

     label05:
        $r2 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: java.lang.String[] inscopeNamespaces>;

        $i1 = lengthof $r2;

        if i5 >= $i1 goto label06;

        $r15 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: org.xml.sax.ContentHandler saxHandler>;

        $r11 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: java.lang.String[] inscopeNamespaces>;

        $r14 = $r11[i5];

        $r12 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: java.lang.String[] inscopeNamespaces>;

        $i2 = i5 + 1;

        $r13 = $r12[$i2];

        interfaceinvoke $r15.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r14, $r13);

        i5 = i5 + 2;

        goto label05;

     label06:
        tableswitch(i4)
        {
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label11;
            case 4: goto label09;
            case 5: goto label12;
            case 6: goto label19;
            case 7: goto label20;
            case 8: goto label20;
            case 9: goto label10;
            case 10: goto label14;
            case 11: goto label13;
            case 12: goto label16;
            case 13: goto label15;
            case 14: goto label18;
            case 15: goto label17;
            default: goto label20;
        };

     label07:
        i3 = i3 + 1;

        specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: void handleStartElement()>();

        goto label21;

     label08:
        specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: void handleEndElement()>();

        $i9 = (int) -1;

        i3 = i3 + $i9;

        if i3 != 0 goto label21;

        $z0 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: boolean eagerQuit>;

        if $z0 == 0 goto label21;

        goto label22;

     label09:
        specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: void handleCharacters()>();

        goto label21;

     label10:
        specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: void handleEntityReference()>();

        goto label21;

     label11:
        specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: void handlePI()>();

        goto label21;

     label12:
        specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: void handleComment()>();

        goto label21;

     label13:
        specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: void handleDTD()>();

        goto label21;

     label14:
        specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: void handleAttribute()>();

        goto label21;

     label15:
        specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: void handleNamespace()>();

        goto label21;

     label16:
        specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: void handleCDATA()>();

        goto label21;

     label17:
        specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: void handleEntityDecl()>();

        goto label21;

     label18:
        specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: void handleNotationDecl()>();

        goto label21;

     label19:
        specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: void handleSpace()>();

        goto label21;

     label20:
        $r30 = new java.lang.InternalError;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processing event: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.InternalError: void <init>(java.lang.String)>($r10);

        throw $r30;

     label21:
        $r25 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        i4 = interfaceinvoke $r25.<javax.xml.stream.XMLStreamReader: int next()>();

        if i3 != 0 goto label06;

     label22:
        i6 = 0;

     label23:
        $r26 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: java.lang.String[] inscopeNamespaces>;

        $i7 = lengthof $r26;

        if i6 >= $i7 goto label24;

        $r5 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: org.xml.sax.ContentHandler saxHandler>;

        $r3 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: java.lang.String[] inscopeNamespaces>;

        $r4 = $r3[i6];

        interfaceinvoke $r5.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r4);

        i6 = i6 + 2;

        goto label23;

     label24:
        specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: void handleEndDocument()>();

     label25:
        goto label27;

     label26:
        $r23 := @caughtexception;

        $r31 = new com.sun.istack.XMLStreamException2;

        specialinvoke $r31.<com.sun.istack.XMLStreamException2: void <init>(java.lang.Throwable)>($r23);

        throw $r31;

     label27:
        return;

        catch org.xml.sax.SAXException from label01 to label25 with label26;
    }

    private void handleEndDocument() throws org.xml.sax.SAXException
    {
        com.sun.istack.XMLStreamReaderToContentHandler r0;
        org.xml.sax.ContentHandler $r1;
        boolean $z0;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

        $z0 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: boolean fragment>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: org.xml.sax.ContentHandler saxHandler>;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void endDocument()>();

        return;
    }

    private void handleStartDocument() throws org.xml.sax.SAXException
    {
        com.sun.istack.XMLStreamReaderToContentHandler r0;
        com.sun.istack.XMLStreamReaderToContentHandler$1 $r1;
        org.xml.sax.ContentHandler $r2, $r3;
        boolean $z0;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

        $z0 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: boolean fragment>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: org.xml.sax.ContentHandler saxHandler>;

        $r1 = new com.sun.istack.XMLStreamReaderToContentHandler$1;

        specialinvoke $r1.<com.sun.istack.XMLStreamReaderToContentHandler$1: void <init>(com.sun.istack.XMLStreamReaderToContentHandler)>(r0);

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void setDocumentLocator(org.xml.sax.Locator)>($r1);

        $r3 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: org.xml.sax.ContentHandler saxHandler>;

        interfaceinvoke $r3.<org.xml.sax.ContentHandler: void startDocument()>();

        return;
    }

    private void handlePI() throws javax.xml.stream.XMLStreamException
    {
        com.sun.istack.XMLStreamException2 $r7;
        com.sun.istack.XMLStreamReaderToContentHandler r0;
        javax.xml.stream.XMLStreamReader $r1, $r4;
        org.xml.sax.SAXException $r6;
        org.xml.sax.ContentHandler $r2;
        java.lang.String $r3, $r5;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

     label1:
        $r2 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: org.xml.sax.ContentHandler saxHandler>;

        $r1 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r3 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: java.lang.String getPITarget()>();

        $r4 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r5 = interfaceinvoke $r4.<javax.xml.stream.XMLStreamReader: java.lang.String getPIData()>();

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>($r3, $r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new com.sun.istack.XMLStreamException2;

        specialinvoke $r7.<com.sun.istack.XMLStreamException2: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    private void handleCharacters() throws javax.xml.stream.XMLStreamException
    {
        com.sun.istack.XMLStreamException2 $r7;
        com.sun.istack.XMLStreamReaderToContentHandler r0;
        javax.xml.stream.XMLStreamReader $r1, $r4, $r5;
        org.xml.sax.SAXException $r6;
        int $i0, $i1;
        char[] $r3;
        org.xml.sax.ContentHandler $r2;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

     label1:
        $r2 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: org.xml.sax.ContentHandler saxHandler>;

        $r1 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r3 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: char[] getTextCharacters()>();

        $r4 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $i0 = interfaceinvoke $r4.<javax.xml.stream.XMLStreamReader: int getTextStart()>();

        $r5 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $i1 = interfaceinvoke $r5.<javax.xml.stream.XMLStreamReader: int getTextLength()>();

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r3, $i0, $i1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new com.sun.istack.XMLStreamException2;

        specialinvoke $r7.<com.sun.istack.XMLStreamException2: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    private void handleEndElement() throws javax.xml.stream.XMLStreamException
    {
        com.sun.istack.XMLStreamException2 $r21;
        javax.xml.stream.XMLStreamReader $r1, $r7, $r8;
        int $i0, $i1, i2, $i4;
        java.lang.String $r3, $r5, $r6, $r9, $r14, $r18, r19;
        org.xml.sax.ContentHandler $r4, $r10;
        com.sun.istack.XMLStreamReaderToContentHandler r0;
        org.xml.sax.SAXException $r16;
        java.lang.StringBuilder $r12, $r13, $r15, $r20;
        javax.xml.namespace.QName $r2;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

        $r1 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getName()>();

     label1:
        $r3 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        if $r3 == null goto label2;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 != 0 goto label3;

     label2:
        $r18 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        goto label4;

     label3:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r14 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r4 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: org.xml.sax.ContentHandler saxHandler>;

        $r5 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r6 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r5, $r6, $r18);

        $r7 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $i0 = interfaceinvoke $r7.<javax.xml.stream.XMLStreamReader: int getNamespaceCount()>();

        i2 = $i0 - 1;

     label5:
        if i2 < 0 goto label7;

        $r8 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r9 = interfaceinvoke $r8.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespacePrefix(int)>(i2);

        r19 = $r9;

        if $r9 != null goto label6;

        r19 = "";

     label6:
        $r10 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: org.xml.sax.ContentHandler saxHandler>;

        interfaceinvoke $r10.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>(r19);

        $i4 = (int) -1;

        i2 = i2 + $i4;

        goto label5;

     label7:
        goto label9;

     label8:
        $r16 := @caughtexception;

        $r21 = new com.sun.istack.XMLStreamException2;

        specialinvoke $r21.<com.sun.istack.XMLStreamException2: void <init>(java.lang.Throwable)>($r16);

        throw $r21;

     label9:
        return;

        catch org.xml.sax.SAXException from label1 to label7 with label8;
    }

    private void handleStartElement() throws javax.xml.stream.XMLStreamException
    {
        com.sun.istack.XMLStreamException2 $r22;
        javax.xml.stream.XMLStreamReader $r1, $r2, $r14, $r18;
        int $i0, $i1, i2;
        org.xml.sax.Attributes $r5;
        java.lang.String $r4, $r7, $r8, $r12, $r16, $r17, $r19, $r20, r23;
        org.xml.sax.ContentHandler $r6, $r15;
        com.sun.istack.XMLStreamReaderToContentHandler r0;
        org.xml.sax.SAXException $r21;
        java.lang.StringBuilder $r9, $r10, $r11, $r13;
        javax.xml.namespace.QName $r3;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

     label1:
        $r1 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $i0 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: int getNamespaceCount()>();

        i2 = 0;

     label2:
        if i2 >= $i0 goto label3;

        $r15 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: org.xml.sax.ContentHandler saxHandler>;

        $r14 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r16 = interfaceinvoke $r14.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespacePrefix(int)>(i2);

        $r17 = staticinvoke <com.sun.istack.XMLStreamReaderToContentHandler: java.lang.String fixNull(java.lang.String)>($r16);

        $r18 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r19 = interfaceinvoke $r18.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI(int)>(i2);

        $r20 = staticinvoke <com.sun.istack.XMLStreamReaderToContentHandler: java.lang.String fixNull(java.lang.String)>($r19);

        interfaceinvoke $r15.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r17, $r20);

        i2 = i2 + 1;

        goto label2;

     label3:
        $r2 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r3 = interfaceinvoke $r2.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getName()>();

        $r4 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        if $r4 == null goto label4;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 != 0 goto label5;

     label4:
        r23 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        goto label6;

     label5:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r12 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r23 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $r5 = specialinvoke r0.<com.sun.istack.XMLStreamReaderToContentHandler: org.xml.sax.Attributes getAttributes()>();

        $r6 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: org.xml.sax.ContentHandler saxHandler>;

        $r7 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r8 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        interfaceinvoke $r6.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>($r7, $r8, r23, $r5);

     label7:
        goto label9;

     label8:
        $r21 := @caughtexception;

        $r22 = new com.sun.istack.XMLStreamException2;

        specialinvoke $r22.<com.sun.istack.XMLStreamException2: void <init>(java.lang.Throwable)>($r21);

        throw $r22;

     label9:
        return;

        catch org.xml.sax.SAXException from label1 to label7 with label8;
    }

    private static java.lang.String fixNull(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return "";

     label1:
        return r0;
    }

    private org.xml.sax.Attributes getAttributes()
    {
        javax.xml.stream.XMLStreamReader $r2, $r3, $r5, $r7, $r9, $r11, $r22;
        int $i0, $i1, i2, $i3;
        java.lang.InternalError $r17;
        java.lang.String $r4, $r6, $r8, $r10, $r12, $r21, r23, r24;
        org.xml.sax.helpers.AttributesImpl $r0;
        com.sun.istack.XMLStreamReaderToContentHandler r1;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r18, $r19, $r20;

        r1 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

        $r0 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r0.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        $r2 = r1.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $i0 = interfaceinvoke $r2.<javax.xml.stream.XMLStreamReader: int getEventType()>();

        if $i0 == 10 goto label1;

        if $i0 == 1 goto label1;

        $r17 = new java.lang.InternalError;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAttributes() attempting to process: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.InternalError: void <init>(java.lang.String)>($r21);

        throw $r17;

     label1:
        i2 = 0;

     label2:
        $r22 = r1.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $i3 = interfaceinvoke $r22.<javax.xml.stream.XMLStreamReader: int getAttributeCount()>();

        if i2 >= $i3 goto label7;

        $r3 = r1.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r4 = interfaceinvoke $r3.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeNamespace(int)>(i2);

        r23 = $r4;

        if $r4 != null goto label3;

        r23 = "";

     label3:
        $r5 = r1.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r6 = interfaceinvoke $r5.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeLocalName(int)>(i2);

        $r7 = r1.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r8 = interfaceinvoke $r7.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributePrefix(int)>(i2);

        if $r8 == null goto label4;

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i1 != 0 goto label5;

     label4:
        r24 = $r6;

        goto label6;

     label5:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r24 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $r9 = r1.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r10 = interfaceinvoke $r9.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeType(int)>(i2);

        $r11 = r1.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        $r12 = interfaceinvoke $r11.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(int)>(i2);

        virtualinvoke $r0.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r23, $r6, r24, $r10, $r12);

        i2 = i2 + 1;

        goto label2;

     label7:
        return $r0;
    }

    private void handleNamespace()
    {
        com.sun.istack.XMLStreamReaderToContentHandler r0;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

        return;
    }

    private void handleAttribute()
    {
        com.sun.istack.XMLStreamReaderToContentHandler r0;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

        return;
    }

    private void handleDTD()
    {
        com.sun.istack.XMLStreamReaderToContentHandler r0;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

        return;
    }

    private void handleComment()
    {
        com.sun.istack.XMLStreamReaderToContentHandler r0;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

        return;
    }

    private void handleEntityReference()
    {
        com.sun.istack.XMLStreamReaderToContentHandler r0;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

        return;
    }

    private void handleSpace()
    {
        com.sun.istack.XMLStreamReaderToContentHandler r0;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

        return;
    }

    private void handleNotationDecl()
    {
        com.sun.istack.XMLStreamReaderToContentHandler r0;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

        return;
    }

    private void handleEntityDecl()
    {
        com.sun.istack.XMLStreamReaderToContentHandler r0;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

        return;
    }

    private void handleCDATA()
    {
        com.sun.istack.XMLStreamReaderToContentHandler r0;

        r0 := @this: com.sun.istack.XMLStreamReaderToContentHandler;

        return;
    }

    static javax.xml.stream.XMLStreamReader access$000(com.sun.istack.XMLStreamReaderToContentHandler)
    {
        com.sun.istack.XMLStreamReaderToContentHandler r0;
        javax.xml.stream.XMLStreamReader $r1;

        r0 := @parameter0: com.sun.istack.XMLStreamReaderToContentHandler;

        $r1 = r0.<com.sun.istack.XMLStreamReaderToContentHandler: javax.xml.stream.XMLStreamReader staxStreamReader>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/istack/XMLStreamReaderToContentHandler;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.istack.XMLStreamReaderToContentHandler: boolean $assertionsDisabled> = $z1;

        return;
    }
}
