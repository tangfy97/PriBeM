public abstract class com.hp.hpl.jena.graph.compose.Polyadic extends com.hp.hpl.jena.graph.compose.CompositionBase
{
    protected java.util.List m_subGraphs;
    protected com.hp.hpl.jena.graph.Graph m_baseGraph;

    public void <init>()
    {
        com.hp.hpl.jena.graph.compose.Polyadic r0;
        java.util.ArrayList $r1;

        r0 := @this: com.hp.hpl.jena.graph.compose.Polyadic;

        specialinvoke r0.<com.hp.hpl.jena.graph.compose.CompositionBase: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.graph.compose.Polyadic: java.util.List m_subGraphs> = $r1;

        r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.Graph m_baseGraph> = null;

        return;
    }

    public void <init>(com.hp.hpl.jena.graph.Graph[])
    {
        java.util.List $r4;
        com.hp.hpl.jena.graph.compose.Polyadic r0;
        int $i0, i1;
        com.hp.hpl.jena.graph.Graph $r3;
        java.util.ArrayList $r1;
        com.hp.hpl.jena.graph.Graph[] r2;

        r0 := @this: com.hp.hpl.jena.graph.compose.Polyadic;

        r2 := @parameter0: com.hp.hpl.jena.graph.Graph[];

        specialinvoke r0.<com.hp.hpl.jena.graph.compose.CompositionBase: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.graph.compose.Polyadic: java.util.List m_subGraphs> = $r1;

        r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.Graph m_baseGraph> = null;

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r4 = r0.<com.hp.hpl.jena.graph.compose.Polyadic: java.util.List m_subGraphs>;

        $r3 = r2[i1];

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected com.hp.hpl.jena.shared.PrefixMapping createPrefixMapping()
    {
        com.hp.hpl.jena.graph.compose.Polyadic r1;
        com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl $r0;

        r1 := @this: com.hp.hpl.jena.graph.compose.Polyadic;

        $r0 = new com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl;

        specialinvoke $r0.<com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl: void <init>(com.hp.hpl.jena.graph.compose.Polyadic)>(r1);

        return $r0;
    }

    public void <init>(java.util.Iterator)
    {
        java.util.Iterator r2;
        com.hp.hpl.jena.util.iterator.ClosableIterator $r3;
        java.util.ArrayList $r1;
        java.util.List $r4;
        com.hp.hpl.jena.graph.compose.Polyadic r0;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.graph.compose.Polyadic;

        r2 := @parameter0: java.util.Iterator;

        specialinvoke r0.<com.hp.hpl.jena.graph.compose.CompositionBase: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.graph.compose.Polyadic: java.util.List m_subGraphs> = $r1;

        r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.Graph m_baseGraph> = null;

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<com.hp.hpl.jena.graph.compose.Polyadic: java.util.List m_subGraphs>;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        $z1 = r2 instanceof com.hp.hpl.jena.util.iterator.ClosableIterator;

        if $z1 == 0 goto label3;

        $r3 = (com.hp.hpl.jena.util.iterator.ClosableIterator) r2;

        interfaceinvoke $r3.<com.hp.hpl.jena.util.iterator.ClosableIterator: void close()>();

     label3:
        return;
    }

    public void close()
    {
        java.util.List $r1;
        com.hp.hpl.jena.graph.compose.Polyadic r0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        com.hp.hpl.jena.graph.Graph $r4;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.compose.Polyadic;

        $r1 = r0.<com.hp.hpl.jena.graph.compose.Polyadic: java.util.List m_subGraphs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.hp.hpl.jena.graph.Graph) $r3;

        interfaceinvoke $r4.<com.hp.hpl.jena.graph.Graph: void close()>();

        goto label1;

     label2:
        specialinvoke r0.<com.hp.hpl.jena.graph.compose.CompositionBase: void close()>();

        return;
    }

    public boolean dependsOn(com.hp.hpl.jena.graph.Graph)
    {
        java.util.List $r2;
        com.hp.hpl.jena.graph.compose.Polyadic r1;
        com.hp.hpl.jena.graph.Graph r0;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.graph.compose.Polyadic;

        r0 := @parameter0: com.hp.hpl.jena.graph.Graph;

        if r0 == r1 goto label1;

        $r2 = r1.<com.hp.hpl.jena.graph.compose.Polyadic: java.util.List m_subGraphs>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void addGraph(com.hp.hpl.jena.graph.Graph)
    {
        java.util.List $r2;
        com.hp.hpl.jena.graph.compose.Polyadic r0;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @this: com.hp.hpl.jena.graph.compose.Polyadic;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r2 = r0.<com.hp.hpl.jena.graph.compose.Polyadic: java.util.List m_subGraphs>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeGraph(com.hp.hpl.jena.graph.Graph)
    {
        java.util.List $r2;
        com.hp.hpl.jena.graph.compose.Polyadic r0;
        com.hp.hpl.jena.graph.Graph r1, $r3;

        r0 := @this: com.hp.hpl.jena.graph.compose.Polyadic;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r2 = r0.<com.hp.hpl.jena.graph.compose.Polyadic: java.util.List m_subGraphs>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.Graph m_baseGraph>;

        if $r3 != r1 goto label1;

        r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.Graph m_baseGraph> = null;

     label1:
        return;
    }

    public com.hp.hpl.jena.graph.Graph getBaseGraph()
    {
        java.util.List $r3, $r4;
        com.hp.hpl.jena.graph.compose.Polyadic r0;
        int $i0;
        java.lang.Object $r5;
        com.hp.hpl.jena.graph.Graph $r1, $r2, $r6;

        r0 := @this: com.hp.hpl.jena.graph.compose.Polyadic;

        $r1 = r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.Graph m_baseGraph>;

        if $r1 != null goto label3;

        $r3 = r0.<com.hp.hpl.jena.graph.compose.Polyadic: java.util.List m_subGraphs>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r4 = r0.<com.hp.hpl.jena.graph.compose.Polyadic: java.util.List m_subGraphs>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (com.hp.hpl.jena.graph.Graph) $r5;

     label2:
        return $r6;

     label3:
        $r2 = r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.Graph m_baseGraph>;

        return $r2;
    }

    public com.hp.hpl.jena.graph.Graph getRequiredBaseGraph()
    {
        com.hp.hpl.jena.graph.compose.Polyadic r0;
        com.hp.hpl.jena.shared.JenaException $r2;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.graph.compose.Polyadic;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.Graph getBaseGraph()>();

        if $r1 != null goto label1;

        $r2 = new com.hp.hpl.jena.shared.JenaException;

        specialinvoke $r2.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.String)>("This polyadic graph should have a base graph, but none is defined");

        throw $r2;

     label1:
        return $r1;
    }

    public void setBaseGraph(com.hp.hpl.jena.graph.Graph)
    {
        java.util.List $r2;
        com.hp.hpl.jena.graph.compose.Polyadic r0;
        java.lang.IllegalArgumentException $r3;
        com.hp.hpl.jena.graph.Graph r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.compose.Polyadic;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r2 = r0.<com.hp.hpl.jena.graph.compose.Polyadic: java.util.List m_subGraphs>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.Graph m_baseGraph> = r1;

        r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.BulkUpdateHandler bulkHandler> = null;

        goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The updateable graph must be one of the graphs from the composition");

        throw $r3;

     label2:
        return;
    }

    public java.util.List getSubGraphs()
    {
        java.util.List $r2;
        com.hp.hpl.jena.graph.compose.Polyadic r1;
        com.hp.hpl.jena.graph.Graph $r3, $r4;
        java.util.ArrayList $r0;

        r1 := @this: com.hp.hpl.jena.graph.compose.Polyadic;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<com.hp.hpl.jena.graph.compose.Polyadic: java.util.List m_subGraphs>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.Graph getBaseGraph()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.Graph getBaseGraph()>();

        interfaceinvoke $r0.<java.util.List: boolean remove(java.lang.Object)>($r4);

     label1:
        return $r0;
    }

    public com.hp.hpl.jena.graph.BulkUpdateHandler getBulkUpdateHandler()
    {
        com.hp.hpl.jena.graph.compose.Polyadic r0;
        com.hp.hpl.jena.graph.BulkUpdateHandler $r1, $r2, $r5;
        com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler $r3;
        com.hp.hpl.jena.graph.Graph $r4;

        r0 := @this: com.hp.hpl.jena.graph.compose.Polyadic;

        $r1 = r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.BulkUpdateHandler bulkHandler>;

        if $r1 != null goto label1;

        $r3 = new com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.Graph getRequiredBaseGraph()>();

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.graph.BulkUpdateHandler getBulkUpdateHandler()>();

        specialinvoke $r3.<com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler: void <init>(com.hp.hpl.jena.graph.impl.GraphWithPerform,com.hp.hpl.jena.graph.BulkUpdateHandler)>(r0, $r5);

        r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.BulkUpdateHandler bulkHandler> = $r3;

     label1:
        $r2 = r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.BulkUpdateHandler bulkHandler>;

        return $r2;
    }

    public com.hp.hpl.jena.graph.TransactionHandler getTransactionHandler()
    {
        com.hp.hpl.jena.graph.compose.Polyadic r0;
        com.hp.hpl.jena.graph.TransactionHandler $r3;
        com.hp.hpl.jena.graph.Graph $r1, $r2;

        r0 := @this: com.hp.hpl.jena.graph.compose.Polyadic;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.Graph getBaseGraph()>();

        if $r1 != null goto label1;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.graph.compose.CompositionBase: com.hp.hpl.jena.graph.TransactionHandler getTransactionHandler()>();

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.Graph getBaseGraph()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.graph.TransactionHandler getTransactionHandler()>();

     label2:
        return $r3;
    }

    public com.hp.hpl.jena.graph.Capabilities getCapabilities()
    {
        com.hp.hpl.jena.graph.compose.Polyadic r0;
        com.hp.hpl.jena.graph.Graph $r1, $r2;
        com.hp.hpl.jena.graph.Capabilities $r3;

        r0 := @this: com.hp.hpl.jena.graph.compose.Polyadic;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.Graph getBaseGraph()>();

        if $r1 != null goto label1;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.graph.compose.CompositionBase: com.hp.hpl.jena.graph.Capabilities getCapabilities()>();

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.graph.compose.Polyadic: com.hp.hpl.jena.graph.Graph getBaseGraph()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.graph.Capabilities getCapabilities()>();

     label2:
        return $r3;
    }
}
