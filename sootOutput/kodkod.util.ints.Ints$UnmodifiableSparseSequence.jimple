final class kodkod.util.ints.Ints$UnmodifiableSparseSequence extends kodkod.util.ints.AbstractSparseSequence
{
    private final kodkod.util.ints.SparseSequence s;

    void <init>(kodkod.util.ints.SparseSequence)
    {
        kodkod.util.ints.Ints$UnmodifiableSparseSequence r0;
        kodkod.util.ints.SparseSequence r1;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableSparseSequence;

        r1 := @parameter0: kodkod.util.ints.SparseSequence;

        specialinvoke r0.<kodkod.util.ints.AbstractSparseSequence: void <init>()>();

        r0.<kodkod.util.ints.Ints$UnmodifiableSparseSequence: kodkod.util.ints.SparseSequence s> = r1;

        return;
    }

    public java.util.Iterator iterator(int, int)
    {
        kodkod.util.ints.Ints$UnmodifiableSparseSequence r1;
        kodkod.util.ints.Ints$UnmodifiableSparseSequence$1 $r0;
        int i0, i1;

        r1 := @this: kodkod.util.ints.Ints$UnmodifiableSparseSequence;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new kodkod.util.ints.Ints$UnmodifiableSparseSequence$1;

        specialinvoke $r0.<kodkod.util.ints.Ints$UnmodifiableSparseSequence$1: void <init>(kodkod.util.ints.Ints$UnmodifiableSparseSequence,int,int)>(r1, i0, i1);

        return $r0;
    }

    public int size()
    {
        int $i0;
        kodkod.util.ints.Ints$UnmodifiableSparseSequence r0;
        kodkod.util.ints.SparseSequence $r1;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableSparseSequence;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableSparseSequence: kodkod.util.ints.SparseSequence s>;

        $i0 = interfaceinvoke $r1.<kodkod.util.ints.SparseSequence: int size()>();

        return $i0;
    }

    public void clear()
    {
        java.lang.UnsupportedOperationException $r0;
        kodkod.util.ints.Ints$UnmodifiableSparseSequence r1;

        r1 := @this: kodkod.util.ints.Ints$UnmodifiableSparseSequence;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object put(int, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        kodkod.util.ints.Ints$UnmodifiableSparseSequence r1;
        int i0;
        java.lang.Object r2;

        r1 := @this: kodkod.util.ints.Ints$UnmodifiableSparseSequence;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object get(int)
    {
        kodkod.util.ints.Ints$UnmodifiableSparseSequence r0;
        int i0;
        java.lang.Object $r2;
        kodkod.util.ints.SparseSequence $r1;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableSparseSequence;

        i0 := @parameter0: int;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableSparseSequence: kodkod.util.ints.SparseSequence s>;

        $r2 = interfaceinvoke $r1.<kodkod.util.ints.SparseSequence: java.lang.Object get(int)>(i0);

        return $r2;
    }

    public java.lang.Object remove(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        kodkod.util.ints.Ints$UnmodifiableSparseSequence r1;

        r1 := @this: kodkod.util.ints.Ints$UnmodifiableSparseSequence;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public kodkod.util.ints.IndexedEntry first()
    {
        kodkod.util.ints.Ints$UnmodifiableSparseSequence r0;
        kodkod.util.ints.SparseSequence $r1;
        kodkod.util.ints.IndexedEntry $r2;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableSparseSequence;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableSparseSequence: kodkod.util.ints.SparseSequence s>;

        $r2 = interfaceinvoke $r1.<kodkod.util.ints.SparseSequence: kodkod.util.ints.IndexedEntry first()>();

        return $r2;
    }

    public kodkod.util.ints.IndexedEntry last()
    {
        kodkod.util.ints.Ints$UnmodifiableSparseSequence r0;
        kodkod.util.ints.SparseSequence $r1;
        kodkod.util.ints.IndexedEntry $r2;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableSparseSequence;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableSparseSequence: kodkod.util.ints.SparseSequence s>;

        $r2 = interfaceinvoke $r1.<kodkod.util.ints.SparseSequence: kodkod.util.ints.IndexedEntry last()>();

        return $r2;
    }

    public kodkod.util.ints.IndexedEntry ceil(int)
    {
        kodkod.util.ints.Ints$UnmodifiableSparseSequence r0;
        kodkod.util.ints.IndexedEntry $r2;
        int i0;
        kodkod.util.ints.SparseSequence $r1;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableSparseSequence;

        i0 := @parameter0: int;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableSparseSequence: kodkod.util.ints.SparseSequence s>;

        $r2 = interfaceinvoke $r1.<kodkod.util.ints.SparseSequence: kodkod.util.ints.IndexedEntry ceil(int)>(i0);

        return $r2;
    }

    public kodkod.util.ints.IndexedEntry floor(int)
    {
        kodkod.util.ints.Ints$UnmodifiableSparseSequence r0;
        kodkod.util.ints.IndexedEntry $r2;
        int i0;
        kodkod.util.ints.SparseSequence $r1;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableSparseSequence;

        i0 := @parameter0: int;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableSparseSequence: kodkod.util.ints.SparseSequence s>;

        $r2 = interfaceinvoke $r1.<kodkod.util.ints.SparseSequence: kodkod.util.ints.IndexedEntry floor(int)>(i0);

        return $r2;
    }

    public boolean containsIndex(int)
    {
        kodkod.util.ints.Ints$UnmodifiableSparseSequence r0;
        int i0;
        kodkod.util.ints.SparseSequence $r1;
        boolean $z0;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableSparseSequence;

        i0 := @parameter0: int;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableSparseSequence: kodkod.util.ints.SparseSequence s>;

        $z0 = interfaceinvoke $r1.<kodkod.util.ints.SparseSequence: boolean containsIndex(int)>(i0);

        return $z0;
    }

    public boolean contains(java.lang.Object)
    {
        kodkod.util.ints.Ints$UnmodifiableSparseSequence r0;
        java.lang.Object r1;
        kodkod.util.ints.SparseSequence $r2;
        boolean $z0;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableSparseSequence;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<kodkod.util.ints.Ints$UnmodifiableSparseSequence: kodkod.util.ints.SparseSequence s>;

        $z0 = interfaceinvoke $r2.<kodkod.util.ints.SparseSequence: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public kodkod.util.ints.SparseSequence clone() throws java.lang.CloneNotSupportedException
    {
        kodkod.util.ints.Ints$UnmodifiableSparseSequence r0;
        kodkod.util.ints.SparseSequence $r1, $r2;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableSparseSequence;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableSparseSequence: kodkod.util.ints.SparseSequence s>;

        $r2 = interfaceinvoke $r1.<kodkod.util.ints.SparseSequence: kodkod.util.ints.SparseSequence clone()>();

        return $r2;
    }

    static kodkod.util.ints.SparseSequence access$0(kodkod.util.ints.Ints$UnmodifiableSparseSequence)
    {
        kodkod.util.ints.Ints$UnmodifiableSparseSequence r0;
        kodkod.util.ints.SparseSequence $r1;

        r0 := @parameter0: kodkod.util.ints.Ints$UnmodifiableSparseSequence;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableSparseSequence: kodkod.util.ints.SparseSequence s>;

        return $r1;
    }
}
