public class org.apache.commons.lang.SystemUtils extends java.lang.Object
{
    private static final java.lang.String OS_NAME_WINDOWS_PREFIX;
    private static final java.lang.String USER_HOME_KEY;
    private static final java.lang.String USER_DIR_KEY;
    private static final java.lang.String JAVA_IO_TMPDIR_KEY;
    private static final java.lang.String JAVA_HOME_KEY;
    public static final java.lang.String AWT_TOOLKIT;
    public static final java.lang.String FILE_ENCODING;
    public static final java.lang.String FILE_SEPARATOR;
    public static final java.lang.String JAVA_AWT_FONTS;
    public static final java.lang.String JAVA_AWT_GRAPHICSENV;
    public static final java.lang.String JAVA_AWT_HEADLESS;
    public static final java.lang.String JAVA_AWT_PRINTERJOB;
    public static final java.lang.String JAVA_CLASS_PATH;
    public static final java.lang.String JAVA_CLASS_VERSION;
    public static final java.lang.String JAVA_COMPILER;
    public static final java.lang.String JAVA_ENDORSED_DIRS;
    public static final java.lang.String JAVA_EXT_DIRS;
    public static final java.lang.String JAVA_HOME;
    public static final java.lang.String JAVA_IO_TMPDIR;
    public static final java.lang.String JAVA_LIBRARY_PATH;
    public static final java.lang.String JAVA_RUNTIME_NAME;
    public static final java.lang.String JAVA_RUNTIME_VERSION;
    public static final java.lang.String JAVA_SPECIFICATION_NAME;
    public static final java.lang.String JAVA_SPECIFICATION_VENDOR;
    public static final java.lang.String JAVA_SPECIFICATION_VERSION;
    public static final java.lang.String JAVA_UTIL_PREFS_PREFERENCES_FACTORY;
    public static final java.lang.String JAVA_VENDOR;
    public static final java.lang.String JAVA_VENDOR_URL;
    public static final java.lang.String JAVA_VERSION;
    public static final java.lang.String JAVA_VM_INFO;
    public static final java.lang.String JAVA_VM_NAME;
    public static final java.lang.String JAVA_VM_SPECIFICATION_NAME;
    public static final java.lang.String JAVA_VM_SPECIFICATION_VENDOR;
    public static final java.lang.String JAVA_VM_SPECIFICATION_VERSION;
    public static final java.lang.String JAVA_VM_VENDOR;
    public static final java.lang.String JAVA_VM_VERSION;
    public static final java.lang.String LINE_SEPARATOR;
    public static final java.lang.String OS_ARCH;
    public static final java.lang.String OS_NAME;
    public static final java.lang.String OS_VERSION;
    public static final java.lang.String PATH_SEPARATOR;
    public static final java.lang.String USER_COUNTRY;
    public static final java.lang.String USER_DIR;
    public static final java.lang.String USER_HOME;
    public static final java.lang.String USER_LANGUAGE;
    public static final java.lang.String USER_NAME;
    public static final java.lang.String USER_TIMEZONE;
    public static final java.lang.String JAVA_VERSION_TRIMMED;
    public static final float JAVA_VERSION_FLOAT;
    public static final int JAVA_VERSION_INT;
    public static final boolean IS_JAVA_1_1;
    public static final boolean IS_JAVA_1_2;
    public static final boolean IS_JAVA_1_3;
    public static final boolean IS_JAVA_1_4;
    public static final boolean IS_JAVA_1_5;
    public static final boolean IS_JAVA_1_6;
    public static final boolean IS_OS_AIX;
    public static final boolean IS_OS_HP_UX;
    public static final boolean IS_OS_IRIX;
    public static final boolean IS_OS_LINUX;
    public static final boolean IS_OS_MAC;
    public static final boolean IS_OS_MAC_OSX;
    public static final boolean IS_OS_OS2;
    public static final boolean IS_OS_SOLARIS;
    public static final boolean IS_OS_SUN_OS;
    public static final boolean IS_OS_UNIX;
    public static final boolean IS_OS_WINDOWS;
    public static final boolean IS_OS_WINDOWS_2000;
    public static final boolean IS_OS_WINDOWS_95;
    public static final boolean IS_OS_WINDOWS_98;
    public static final boolean IS_OS_WINDOWS_ME;
    public static final boolean IS_OS_WINDOWS_NT;
    public static final boolean IS_OS_WINDOWS_XP;
    public static final boolean IS_OS_WINDOWS_VISTA;

    public void <init>()
    {
        org.apache.commons.lang.SystemUtils r0;

        r0 := @this: org.apache.commons.lang.SystemUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static float getJavaVersion()
    {
        float $f0;

        $f0 = <org.apache.commons.lang.SystemUtils: float JAVA_VERSION_FLOAT>;

        return $f0;
    }

    private static float getJavaVersionAsFloat()
    {
        java.lang.Exception $r9;
        java.lang.StringBuffer $r4, $r5, $r8;
        int $i0;
        float $f0;
        java.lang.String $r0, $r1, $r2, $r3, $r6, $r7, r10;

        $r0 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION_TRIMMED>;

        if $r0 != null goto label1;

        return 0.0F;

     label1:
        $r1 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION_TRIMMED>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        r10 = $r2;

        $r3 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION_TRIMMED>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 < 5 goto label2;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r6 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION_TRIMMED>;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(4, 5);

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r10);

     label3:
        return $f0;

     label4:
        $r9 := @caughtexception;

        return 0.0F;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private static int getJavaVersionAsInt()
    {
        java.lang.StringBuffer $r3, $r4, $r7, $r10, $r11, $r12, $r13, $r14, $r17;
        int $i0, $i1;
        java.lang.String $r0, $r1, $r2, $r5, $r6, $r8, $r9, $r15, $r16, r19;
        java.lang.Exception $r18;

        $r0 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION_TRIMMED>;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r1 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION_TRIMMED>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION_TRIMMED>;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(2, 3);

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION_TRIMMED>;

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i0 < 5 goto label2;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r15 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION_TRIMMED>;

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int,int)>(4, 5);

        $r17 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label3;

     label2:
        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        r19 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r19);

     label4:
        return $i1;

     label5:
        $r18 := @caughtexception;

        return 0;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    private static java.lang.String getJavaVersionTrimmed()
    {
        char $c1;
        int $i0, i2, $i3, $i4;
        java.lang.String $r0, $r1, $r2, $r3, $r4;

        $r0 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION>;

        if $r0 == null goto label3;

        i2 = 0;

     label1:
        $r1 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label3;

        $r2 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION>;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 < 48 goto label2;

        $i4 = (int) $c1;

        if $i4 > 57 goto label2;

        $r3 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION>;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>(i2);

        return $r4;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return null;
    }

    private static boolean getJavaVersionMatches(java.lang.String)
    {
        java.lang.String $r0, r1, $r2;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION_TRIMMED>;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r2 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION_TRIMMED>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        return $z0;
    }

    private static boolean getOSMatches(java.lang.String)
    {
        java.lang.String $r0, r1, $r2;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = <org.apache.commons.lang.SystemUtils: java.lang.String OS_NAME>;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r2 = <org.apache.commons.lang.SystemUtils: java.lang.String OS_NAME>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        return $z0;
    }

    private static boolean getOSMatches(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, r2, $r3, r4, $r5;
        boolean $z0, $z1, $z2;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r0 = <org.apache.commons.lang.SystemUtils: java.lang.String OS_NAME>;

        if $r0 == null goto label1;

        $r1 = <org.apache.commons.lang.SystemUtils: java.lang.String OS_VERSION>;

        if $r1 != null goto label2;

     label1:
        return 0;

     label2:
        $r3 = <org.apache.commons.lang.SystemUtils: java.lang.String OS_NAME>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>(r2);

        if $z0 == 0 goto label3;

        $r5 = <org.apache.commons.lang.SystemUtils: java.lang.String OS_VERSION>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>(r4);

        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    private static java.lang.String getSystemProperty(java.lang.String)
    {
        java.io.PrintStream $r4;
        java.lang.StringBuffer $r3, $r5, $r6, $r7;
        java.lang.SecurityException $r2;
        java.lang.String r0, $r1, $r8;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Caught a SecurityException reading the system property \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; the SystemUtils property value will default to null.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

        return null;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public static boolean isJavaVersionAtLeast(float)
    {
        byte $b0;
        int $i1;
        float f0, $f1;
        boolean $z0;

        f0 := @parameter0: float;

        $f1 = <org.apache.commons.lang.SystemUtils: float JAVA_VERSION_FLOAT>;

        $b0 = $f1 cmpl f0;

        $i1 = (int) $b0;

        if $i1 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isJavaVersionAtLeast(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = <org.apache.commons.lang.SystemUtils: int JAVA_VERSION_INT>;

        if $i1 < i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isJavaAwtHeadless()
    {
        java.lang.Boolean $r1;
        java.lang.String $r0, $r2, $r3;
        boolean $z0;

        $r0 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_AWT_HEADLESS>;

        if $r0 == null goto label1;

        $r2 = <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_AWT_HEADLESS>;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r3 = virtualinvoke $r1.<java.lang.Boolean: java.lang.String toString()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.io.File getJavaHome()
    {
        java.lang.String $r1;
        java.io.File $r0;

        $r0 = new java.io.File;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r1);

        return $r0;
    }

    public static java.io.File getJavaIoTmpDir()
    {
        java.lang.String $r1;
        java.io.File $r0;

        $r0 = new java.io.File;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir");

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r1);

        return $r0;
    }

    public static java.io.File getUserDir()
    {
        java.lang.String $r1;
        java.io.File $r0;

        $r0 = new java.io.File;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r1);

        return $r0;
    }

    public static java.io.File getUserHome()
    {
        java.lang.String $r1;
        java.io.File $r0;

        $r0 = new java.io.File;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r1);

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32;
        float $f0;
        int $i0;

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_HOME_KEY> = "java.home";

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_IO_TMPDIR_KEY> = "java.io.tmpdir";

        <org.apache.commons.lang.SystemUtils: java.lang.String USER_DIR_KEY> = "user.dir";

        <org.apache.commons.lang.SystemUtils: java.lang.String USER_HOME_KEY> = "user.home";

        <org.apache.commons.lang.SystemUtils: java.lang.String OS_NAME_WINDOWS_PREFIX> = "Windows";

        $r0 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("awt.toolkit");

        <org.apache.commons.lang.SystemUtils: java.lang.String AWT_TOOLKIT> = $r0;

        $r1 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("file.encoding");

        <org.apache.commons.lang.SystemUtils: java.lang.String FILE_ENCODING> = $r1;

        $r2 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("file.separator");

        <org.apache.commons.lang.SystemUtils: java.lang.String FILE_SEPARATOR> = $r2;

        $r3 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.awt.fonts");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_AWT_FONTS> = $r3;

        $r4 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.awt.graphicsenv");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_AWT_GRAPHICSENV> = $r4;

        $r5 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.awt.headless");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_AWT_HEADLESS> = $r5;

        $r6 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.awt.printerjob");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_AWT_PRINTERJOB> = $r6;

        $r7 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.class.path");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_CLASS_PATH> = $r7;

        $r8 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.class.version");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_CLASS_VERSION> = $r8;

        $r9 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.compiler");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_COMPILER> = $r9;

        $r10 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.endorsed.dirs");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_ENDORSED_DIRS> = $r10;

        $r11 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.ext.dirs");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_EXT_DIRS> = $r11;

        $r12 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.home");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_HOME> = $r12;

        $r13 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.io.tmpdir");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_IO_TMPDIR> = $r13;

        $r14 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.library.path");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_LIBRARY_PATH> = $r14;

        $r15 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.runtime.name");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_RUNTIME_NAME> = $r15;

        $r16 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.runtime.version");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_RUNTIME_VERSION> = $r16;

        $r17 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.specification.name");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_SPECIFICATION_NAME> = $r17;

        $r18 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.specification.vendor");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_SPECIFICATION_VENDOR> = $r18;

        $r19 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.specification.version");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_SPECIFICATION_VERSION> = $r19;

        $r20 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.util.prefs.PreferencesFactory");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_UTIL_PREFS_PREFERENCES_FACTORY> = $r20;

        $r21 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vendor");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VENDOR> = $r21;

        $r22 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vendor.url");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VENDOR_URL> = $r22;

        $r23 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.version");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION> = $r23;

        $r24 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vm.info");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VM_INFO> = $r24;

        $r25 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vm.name");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VM_NAME> = $r25;

        $r26 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vm.specification.name");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VM_SPECIFICATION_NAME> = $r26;

        $r27 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vm.specification.vendor");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VM_SPECIFICATION_VENDOR> = $r27;

        $r28 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vm.specification.version");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VM_SPECIFICATION_VERSION> = $r28;

        $r29 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vm.vendor");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VM_VENDOR> = $r29;

        $r30 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vm.version");

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VM_VERSION> = $r30;

        $r31 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("line.separator");

        <org.apache.commons.lang.SystemUtils: java.lang.String LINE_SEPARATOR> = $r31;

        $r32 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("os.arch");

        <org.apache.commons.lang.SystemUtils: java.lang.String OS_ARCH> = $r32;

        $r33 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("os.name");

        <org.apache.commons.lang.SystemUtils: java.lang.String OS_NAME> = $r33;

        $r34 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("os.version");

        <org.apache.commons.lang.SystemUtils: java.lang.String OS_VERSION> = $r34;

        $r35 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("path.separator");

        <org.apache.commons.lang.SystemUtils: java.lang.String PATH_SEPARATOR> = $r35;

        $r36 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("user.country");

        if $r36 != null goto label1;

        $r43 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("user.region");

        goto label2;

     label1:
        $r43 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("user.country");

     label2:
        <org.apache.commons.lang.SystemUtils: java.lang.String USER_COUNTRY> = $r43;

        $r37 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("user.dir");

        <org.apache.commons.lang.SystemUtils: java.lang.String USER_DIR> = $r37;

        $r38 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("user.home");

        <org.apache.commons.lang.SystemUtils: java.lang.String USER_HOME> = $r38;

        $r39 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("user.language");

        <org.apache.commons.lang.SystemUtils: java.lang.String USER_LANGUAGE> = $r39;

        $r40 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("user.name");

        <org.apache.commons.lang.SystemUtils: java.lang.String USER_NAME> = $r40;

        $r41 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("user.timezone");

        <org.apache.commons.lang.SystemUtils: java.lang.String USER_TIMEZONE> = $r41;

        $r42 = staticinvoke <org.apache.commons.lang.SystemUtils: java.lang.String getJavaVersionTrimmed()>();

        <org.apache.commons.lang.SystemUtils: java.lang.String JAVA_VERSION_TRIMMED> = $r42;

        $f0 = staticinvoke <org.apache.commons.lang.SystemUtils: float getJavaVersionAsFloat()>();

        <org.apache.commons.lang.SystemUtils: float JAVA_VERSION_FLOAT> = $f0;

        $i0 = staticinvoke <org.apache.commons.lang.SystemUtils: int getJavaVersionAsInt()>();

        <org.apache.commons.lang.SystemUtils: int JAVA_VERSION_INT> = $i0;

        $z0 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("1.1");

        <org.apache.commons.lang.SystemUtils: boolean IS_JAVA_1_1> = $z0;

        $z1 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("1.2");

        <org.apache.commons.lang.SystemUtils: boolean IS_JAVA_1_2> = $z1;

        $z2 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("1.3");

        <org.apache.commons.lang.SystemUtils: boolean IS_JAVA_1_3> = $z2;

        $z3 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("1.4");

        <org.apache.commons.lang.SystemUtils: boolean IS_JAVA_1_4> = $z3;

        $z4 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("1.5");

        <org.apache.commons.lang.SystemUtils: boolean IS_JAVA_1_5> = $z4;

        $z5 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("1.6");

        <org.apache.commons.lang.SystemUtils: boolean IS_JAVA_1_6> = $z5;

        $z6 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String)>("AIX");

        <org.apache.commons.lang.SystemUtils: boolean IS_OS_AIX> = $z6;

        $z7 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String)>("HP-UX");

        <org.apache.commons.lang.SystemUtils: boolean IS_OS_HP_UX> = $z7;

        $z8 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String)>("Irix");

        <org.apache.commons.lang.SystemUtils: boolean IS_OS_IRIX> = $z8;

        $z9 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String)>("Linux");

        if $z9 != 0 goto label3;

        $z30 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String)>("LINUX");

        if $z30 == 0 goto label4;

     label3:
        $z31 = 1;

        goto label5;

     label4:
        $z31 = 0;

     label5:
        <org.apache.commons.lang.SystemUtils: boolean IS_OS_LINUX> = $z31;

        $z10 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String)>("Mac");

        <org.apache.commons.lang.SystemUtils: boolean IS_OS_MAC> = $z10;

        $z11 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String)>("Mac OS X");

        <org.apache.commons.lang.SystemUtils: boolean IS_OS_MAC_OSX> = $z11;

        $z12 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String)>("OS/2");

        <org.apache.commons.lang.SystemUtils: boolean IS_OS_OS2> = $z12;

        $z13 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String)>("Solaris");

        <org.apache.commons.lang.SystemUtils: boolean IS_OS_SOLARIS> = $z13;

        $z14 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String)>("SunOS");

        <org.apache.commons.lang.SystemUtils: boolean IS_OS_SUN_OS> = $z14;

        $z15 = <org.apache.commons.lang.SystemUtils: boolean IS_OS_AIX>;

        if $z15 != 0 goto label6;

        $z24 = <org.apache.commons.lang.SystemUtils: boolean IS_OS_HP_UX>;

        if $z24 != 0 goto label6;

        $z25 = <org.apache.commons.lang.SystemUtils: boolean IS_OS_IRIX>;

        if $z25 != 0 goto label6;

        $z26 = <org.apache.commons.lang.SystemUtils: boolean IS_OS_LINUX>;

        if $z26 != 0 goto label6;

        $z27 = <org.apache.commons.lang.SystemUtils: boolean IS_OS_MAC_OSX>;

        if $z27 != 0 goto label6;

        $z28 = <org.apache.commons.lang.SystemUtils: boolean IS_OS_SOLARIS>;

        if $z28 != 0 goto label6;

        $z29 = <org.apache.commons.lang.SystemUtils: boolean IS_OS_SUN_OS>;

        if $z29 == 0 goto label7;

     label6:
        $z32 = 1;

        goto label8;

     label7:
        $z32 = 0;

     label8:
        <org.apache.commons.lang.SystemUtils: boolean IS_OS_UNIX> = $z32;

        $z16 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String)>("Windows");

        <org.apache.commons.lang.SystemUtils: boolean IS_OS_WINDOWS> = $z16;

        $z17 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String,java.lang.String)>("Windows", "5.0");

        <org.apache.commons.lang.SystemUtils: boolean IS_OS_WINDOWS_2000> = $z17;

        $z18 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String,java.lang.String)>("Windows 9", "4.0");

        <org.apache.commons.lang.SystemUtils: boolean IS_OS_WINDOWS_95> = $z18;

        $z19 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String,java.lang.String)>("Windows 9", "4.1");

        <org.apache.commons.lang.SystemUtils: boolean IS_OS_WINDOWS_98> = $z19;

        $z20 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String,java.lang.String)>("Windows", "4.9");

        <org.apache.commons.lang.SystemUtils: boolean IS_OS_WINDOWS_ME> = $z20;

        $z21 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String)>("Windows NT");

        <org.apache.commons.lang.SystemUtils: boolean IS_OS_WINDOWS_NT> = $z21;

        $z22 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String,java.lang.String)>("Windows", "5.1");

        <org.apache.commons.lang.SystemUtils: boolean IS_OS_WINDOWS_XP> = $z22;

        $z23 = staticinvoke <org.apache.commons.lang.SystemUtils: boolean getOSMatches(java.lang.String,java.lang.String)>("Windows", "6.0");

        <org.apache.commons.lang.SystemUtils: boolean IS_OS_WINDOWS_VISTA> = $z23;

        return;
    }
}
