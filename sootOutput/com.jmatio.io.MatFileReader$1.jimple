class com.jmatio.io.MatFileReader$1 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.lang.Object val$buffer;
    final com.jmatio.io.MatFileReader this$0;

    void <init>(com.jmatio.io.MatFileReader, java.lang.Object)
    {
        java.lang.Object r2;
        com.jmatio.io.MatFileReader$1 r0;
        com.jmatio.io.MatFileReader r1;

        r0 := @this: com.jmatio.io.MatFileReader$1;

        r1 := @parameter0: com.jmatio.io.MatFileReader;

        r2 := @parameter1: java.lang.Object;

        r0.<com.jmatio.io.MatFileReader$1: com.jmatio.io.MatFileReader this$0> = r1;

        r0.<com.jmatio.io.MatFileReader$1: java.lang.Object val$buffer> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object run()
    {
        java.lang.Object[] $r5;
        com.jmatio.io.MatFileReader$1 r0;
        java.lang.Class[] $r3;
        java.lang.Exception $r9;
        java.lang.Object $r1, $r6, $r7;
        java.lang.Class $r2;
        java.lang.reflect.Method $r4;
        sun.misc.Cleaner r8;

        r0 := @this: com.jmatio.io.MatFileReader$1;

     label1:
        $r1 = r0.<com.jmatio.io.MatFileReader$1: java.lang.Object val$buffer>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("cleaner", $r3);

        virtualinvoke $r4.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r6 = r0.<com.jmatio.io.MatFileReader$1: java.lang.Object val$buffer>;

        $r5 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r5);

        r8 = (sun.misc.Cleaner) $r7;

        virtualinvoke r8.<sun.misc.Cleaner: void clean()>();

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

     label4:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
