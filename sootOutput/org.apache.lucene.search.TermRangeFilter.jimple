public class org.apache.lucene.search.TermRangeFilter extends org.apache.lucene.search.MultiTermQueryWrapperFilter
{

    public void <init>(java.lang.String, org.apache.lucene.util.BytesRef, org.apache.lucene.util.BytesRef, boolean, boolean)
    {
        org.apache.lucene.util.BytesRef r3, r4;
        org.apache.lucene.search.TermRangeQuery $r1;
        java.lang.String r2;
        org.apache.lucene.search.TermRangeFilter r0;
        boolean z0, z1;

        r0 := @this: org.apache.lucene.search.TermRangeFilter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.lucene.util.BytesRef;

        r4 := @parameter2: org.apache.lucene.util.BytesRef;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $r1 = new org.apache.lucene.search.TermRangeQuery;

        specialinvoke $r1.<org.apache.lucene.search.TermRangeQuery: void <init>(java.lang.String,org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef,boolean,boolean)>(r2, r3, r4, z0, z1);

        specialinvoke r0.<org.apache.lucene.search.MultiTermQueryWrapperFilter: void <init>(org.apache.lucene.search.MultiTermQuery)>($r1);

        return;
    }

    public static org.apache.lucene.search.TermRangeFilter newStringRange(java.lang.String, java.lang.String, java.lang.String, boolean, boolean)
    {
        org.apache.lucene.util.BytesRef r1, $r5, $r6;
        org.apache.lucene.search.TermRangeFilter $r3;
        java.lang.String r0, r2, r4;
        boolean z0, z1;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        if r0 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r5.<org.apache.lucene.util.BytesRef: void <init>(java.lang.CharSequence)>(r0);

     label2:
        r1 = $r5;

        if r2 != null goto label3;

        $r6 = null;

        goto label4;

     label3:
        $r6 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r6.<org.apache.lucene.util.BytesRef: void <init>(java.lang.CharSequence)>(r2);

     label4:
        $r3 = new org.apache.lucene.search.TermRangeFilter;

        specialinvoke $r3.<org.apache.lucene.search.TermRangeFilter: void <init>(java.lang.String,org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef,boolean,boolean)>(r4, r1, $r6, z0, z1);

        return $r3;
    }

    public static org.apache.lucene.search.TermRangeFilter Less(java.lang.String, org.apache.lucene.util.BytesRef)
    {
        java.lang.String r1;
        org.apache.lucene.util.BytesRef r2;
        org.apache.lucene.search.TermRangeFilter $r0;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.util.BytesRef;

        $r0 = new org.apache.lucene.search.TermRangeFilter;

        specialinvoke $r0.<org.apache.lucene.search.TermRangeFilter: void <init>(java.lang.String,org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef,boolean,boolean)>(r1, null, r2, 0, 1);

        return $r0;
    }

    public static org.apache.lucene.search.TermRangeFilter More(java.lang.String, org.apache.lucene.util.BytesRef)
    {
        java.lang.String r1;
        org.apache.lucene.util.BytesRef r2;
        org.apache.lucene.search.TermRangeFilter $r0;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.util.BytesRef;

        $r0 = new org.apache.lucene.search.TermRangeFilter;

        specialinvoke $r0.<org.apache.lucene.search.TermRangeFilter: void <init>(java.lang.String,org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef,boolean,boolean)>(r1, r2, null, 1, 0);

        return $r0;
    }

    public org.apache.lucene.util.BytesRef getLowerTerm()
    {
        org.apache.lucene.search.MultiTermQuery $r1;
        org.apache.lucene.util.BytesRef $r3;
        org.apache.lucene.search.TermRangeQuery $r2;
        org.apache.lucene.search.TermRangeFilter r0;

        r0 := @this: org.apache.lucene.search.TermRangeFilter;

        $r1 = r0.<org.apache.lucene.search.TermRangeFilter: org.apache.lucene.search.MultiTermQuery query>;

        $r2 = (org.apache.lucene.search.TermRangeQuery) $r1;

        $r3 = virtualinvoke $r2.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef getLowerTerm()>();

        return $r3;
    }

    public org.apache.lucene.util.BytesRef getUpperTerm()
    {
        org.apache.lucene.search.MultiTermQuery $r1;
        org.apache.lucene.util.BytesRef $r3;
        org.apache.lucene.search.TermRangeQuery $r2;
        org.apache.lucene.search.TermRangeFilter r0;

        r0 := @this: org.apache.lucene.search.TermRangeFilter;

        $r1 = r0.<org.apache.lucene.search.TermRangeFilter: org.apache.lucene.search.MultiTermQuery query>;

        $r2 = (org.apache.lucene.search.TermRangeQuery) $r1;

        $r3 = virtualinvoke $r2.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef getUpperTerm()>();

        return $r3;
    }

    public boolean includesLower()
    {
        org.apache.lucene.search.MultiTermQuery $r1;
        org.apache.lucene.search.TermRangeQuery $r2;
        org.apache.lucene.search.TermRangeFilter r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.TermRangeFilter;

        $r1 = r0.<org.apache.lucene.search.TermRangeFilter: org.apache.lucene.search.MultiTermQuery query>;

        $r2 = (org.apache.lucene.search.TermRangeQuery) $r1;

        $z0 = virtualinvoke $r2.<org.apache.lucene.search.TermRangeQuery: boolean includesLower()>();

        return $z0;
    }

    public boolean includesUpper()
    {
        org.apache.lucene.search.MultiTermQuery $r1;
        org.apache.lucene.search.TermRangeQuery $r2;
        org.apache.lucene.search.TermRangeFilter r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.TermRangeFilter;

        $r1 = r0.<org.apache.lucene.search.TermRangeFilter: org.apache.lucene.search.MultiTermQuery query>;

        $r2 = (org.apache.lucene.search.TermRangeQuery) $r1;

        $z0 = virtualinvoke $r2.<org.apache.lucene.search.TermRangeQuery: boolean includesUpper()>();

        return $z0;
    }
}
