public class org.apache.tika.parser.pdf.PDFParser extends org.apache.tika.parser.AbstractParser
{
    private static final org.apache.tika.mime.MediaType MEDIA_TYPE;
    private static final long serialVersionUID;
    private org.apache.tika.parser.pdf.PDFParserConfig defaultConfig;
    public static final java.lang.String PASSWORD;
    private static final java.util.Set SUPPORTED_TYPES;

    public void <init>()
    {
        org.apache.tika.parser.pdf.PDFParserConfig $r1;
        org.apache.tika.parser.pdf.PDFParser r0;

        r0 := @this: org.apache.tika.parser.pdf.PDFParser;

        specialinvoke r0.<org.apache.tika.parser.AbstractParser: void <init>()>();

        $r1 = new org.apache.tika.parser.pdf.PDFParserConfig;

        specialinvoke $r1.<org.apache.tika.parser.pdf.PDFParserConfig: void <init>()>();

        r0.<org.apache.tika.parser.pdf.PDFParser: org.apache.tika.parser.pdf.PDFParserConfig defaultConfig> = $r1;

        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        java.util.Set $r0;
        org.apache.tika.parser.pdf.PDFParser r1;
        org.apache.tika.parser.ParseContext r2;

        r1 := @this: org.apache.tika.parser.pdf.PDFParser;

        r2 := @parameter0: org.apache.tika.parser.ParseContext;

        $r0 = <org.apache.tika.parser.pdf.PDFParser: java.util.Set SUPPORTED_TYPES>;

        return $r0;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.lang.Throwable $r20;
        org.apache.tika.metadata.Metadata r9;
        org.apache.tika.parser.PasswordProvider r12;
        org.apache.pdfbox.io.RandomAccessFile $r16;
        org.apache.tika.io.TikaInputStream $r7;
        org.xml.sax.ContentHandler r10;
        java.lang.String $r13, r23;
        boolean $z0, $z1, $z2, $z3;
        org.apache.tika.io.TemporaryResources $r0;
        org.apache.pdfbox.io.RandomAccessBuffer $r15;
        org.apache.pdfbox.pdmodel.PDDocument r22;
        org.apache.tika.parser.pdf.PDFParserConfig $r3, r5;
        java.io.File $r17;
        java.lang.Exception $r21;
        org.apache.tika.parser.pdf.PDFParser r2;
        org.apache.tika.io.CloseShieldInputStream $r8, $r14, $r18, $r19;
        org.apache.tika.parser.ParseContext r1;
        java.lang.Object $r4, $r11;
        java.io.InputStream r6;

        r2 := @this: org.apache.tika.parser.pdf.PDFParser;

        r6 := @parameter0: java.io.InputStream;

        r10 := @parameter1: org.xml.sax.ContentHandler;

        r9 := @parameter2: org.apache.tika.metadata.Metadata;

        r1 := @parameter3: org.apache.tika.parser.ParseContext;

        r22 = null;

        $r0 = new org.apache.tika.io.TemporaryResources;

        specialinvoke $r0.<org.apache.tika.io.TemporaryResources: void <init>()>();

        $r3 = r2.<org.apache.tika.parser.pdf.PDFParser: org.apache.tika.parser.pdf.PDFParserConfig defaultConfig>;

        $r4 = virtualinvoke r1.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class,java.lang.Object)>(class "Lorg/apache/tika/parser/pdf/PDFParserConfig;", $r3);

        r5 = (org.apache.tika.parser.pdf.PDFParserConfig) $r4;

     label01:
        $r7 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream cast(java.io.InputStream)>(r6);

        if $r7 == null goto label04;

        $z1 = virtualinvoke $r7.<org.apache.tika.io.TikaInputStream: boolean hasFile()>();

        if $z1 == 0 goto label04;

        $r16 = new org.apache.pdfbox.io.RandomAccessFile;

        $r17 = virtualinvoke $r0.<org.apache.tika.io.TemporaryResources: java.io.File createTemporaryFile()>();

        specialinvoke $r16.<org.apache.pdfbox.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r17, "rw");

        $z2 = virtualinvoke r5.<org.apache.tika.parser.pdf.PDFParserConfig: boolean getUseNonSequentialParser()>();

        if $z2 != 1 goto label02;

        $r19 = new org.apache.tika.io.CloseShieldInputStream;

        specialinvoke $r19.<org.apache.tika.io.CloseShieldInputStream: void <init>(java.io.InputStream)>(r6);

        r22 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument loadNonSeq(java.io.InputStream,org.apache.pdfbox.io.RandomAccess)>($r19, $r16);

        goto label03;

     label02:
        $r18 = new org.apache.tika.io.CloseShieldInputStream;

        specialinvoke $r18.<org.apache.tika.io.CloseShieldInputStream: void <init>(java.io.InputStream)>(r6);

        r22 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,org.apache.pdfbox.io.RandomAccess,boolean)>($r18, $r16, 1);

     label03:
        goto label06;

     label04:
        $z0 = virtualinvoke r5.<org.apache.tika.parser.pdf.PDFParserConfig: boolean getUseNonSequentialParser()>();

        if $z0 != 1 goto label05;

        $r14 = new org.apache.tika.io.CloseShieldInputStream;

        specialinvoke $r14.<org.apache.tika.io.CloseShieldInputStream: void <init>(java.io.InputStream)>(r6);

        $r15 = new org.apache.pdfbox.io.RandomAccessBuffer;

        specialinvoke $r15.<org.apache.pdfbox.io.RandomAccessBuffer: void <init>()>();

        r22 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument loadNonSeq(java.io.InputStream,org.apache.pdfbox.io.RandomAccess)>($r14, $r15);

        goto label06;

     label05:
        $r8 = new org.apache.tika.io.CloseShieldInputStream;

        specialinvoke $r8.<org.apache.tika.io.CloseShieldInputStream: void <init>(java.io.InputStream)>(r6);

        r22 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,boolean)>($r8, 1);

     label06:
        $z3 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.PDDocument: boolean isEncrypted()>();

        if $z3 == 0 goto label12;

        r23 = null;

        $r11 = virtualinvoke r1.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/tika/parser/PasswordProvider;");

        r12 = (org.apache.tika.parser.PasswordProvider) $r11;

        if r12 == null goto label07;

        r23 = interfaceinvoke r12.<org.apache.tika.parser.PasswordProvider: java.lang.String getPassword(org.apache.tika.metadata.Metadata)>(r9);

     label07:
        if r23 != null goto label08;

        $r13 = virtualinvoke r9.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("org.apache.tika.parser.pdf.password");

        if $r13 == null goto label08;

        r23 = virtualinvoke r9.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("org.apache.tika.parser.pdf.password");

     label08:
        if r23 != null goto label09;

        r23 = "";

     label09:
        virtualinvoke r22.<org.apache.pdfbox.pdmodel.PDDocument: void decrypt(java.lang.String)>(r23);

     label10:
        goto label12;

     label11:
        $r21 := @caughtexception;

     label12:
        virtualinvoke r9.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", "application/pdf");

        specialinvoke r2.<org.apache.tika.parser.pdf.PDFParser: void extractMetadata(org.apache.pdfbox.pdmodel.PDDocument,org.apache.tika.metadata.Metadata)>(r22, r9);

        if r10 == null goto label13;

        staticinvoke <org.apache.tika.parser.pdf.PDF2XHTML: void process(org.apache.pdfbox.pdmodel.PDDocument,org.xml.sax.ContentHandler,org.apache.tika.parser.ParseContext,org.apache.tika.metadata.Metadata,org.apache.tika.parser.pdf.PDFParserConfig)>(r22, r10, r1, r9, r5);

     label13:
        if r22 == null goto label14;

        virtualinvoke r22.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label14:
        virtualinvoke $r0.<org.apache.tika.io.TemporaryResources: void dispose()>();

        goto label18;

     label15:
        $r20 := @caughtexception;

     label16:
        if r22 == null goto label17;

        virtualinvoke r22.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label17:
        virtualinvoke $r0.<org.apache.tika.io.TemporaryResources: void dispose()>();

        throw $r20;

     label18:
        return;

        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label13 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    private void extractMetadata(org.apache.pdfbox.pdmodel.PDDocument, org.apache.tika.metadata.Metadata) throws org.apache.tika.exception.TikaException
    {
        java.lang.Integer $r79, $r85;
        org.apache.tika.metadata.Property $r5, $r7, $r9, $r11, $r12, $r14, $r17, $r18, $r22, $r25, $r26, $r35, $r66, $r92;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        org.apache.pdfbox.cos.COSBase $r49, $r56, $r105;
        java.lang.StringBuilder $r40, $r41, $r44, $r62, $r63, $r64, $r71, $r72, $r73, $r74, $r75, $r76, $r84, $r86, $r90, $r97, $r98, $r99, $r100, $r110, $r111, $r121, $r122, $r123, $r124, $r125, $r126;
        java.util.Calendar $r21, $r23, $r24;
        org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId r120;
        org.apache.pdfbox.cos.COSDocument $r33, $r42;
        java.io.IOException $r108, $r114, $r115, $r116;
        org.apache.jempbox.xmp.XMPMetadata r117;
        java.util.Locale $r88;
        org.apache.pdfbox.cos.COSDictionary $r29, $r47, r57, $r104, $r113;
        int $i0, $i1, $i2, $i4;
        org.apache.pdfbox.cos.COSName $r48, r53, $r54, $r58, $r60, r119;
        java.lang.Object $r52, $r102;
        org.apache.tika.metadata.Metadata r4;
        java.util.Set $r30, $r50;
        org.apache.tika.mime.MediaType $r38, $r69, $r95;
        org.apache.pdfbox.pdmodel.common.PDMetadata $r2, $r107;
        java.lang.String $r8, $r10, $r13, $r15, $r16, $r19, $r20, $r32, $r34, $r36, $r39, $r43, $r45, $r55, $r59, $r65, $r67, $r70, $r77, $r80, $r81, $r82, $r87, $r89, $r91, $r93, $r96, $r101, $r103, $r112;
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r1, $r46, $r106;
        org.apache.pdfbox.pdmodel.PDDocumentInformation $r3;
        org.apache.jempbox.xmp.XMPSchemaDublinCore r118;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r28;
        float $f0, $f1;
        java.lang.String[] $r27;
        java.util.Iterator $r31, $r51;
        org.apache.tika.parser.pdf.PDFParser r6;
        org.apache.jempbox.xmp.XMPSchema $r78;

        r6 := @this: org.apache.tika.parser.pdf.PDFParser;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r4 := @parameter1: org.apache.tika.metadata.Metadata;

        r117 = null;

        r118 = null;

     label01:
        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.common.PDMetadata getMetadata()>();

        if $r2 == null goto label02;

        $r106 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r107 = virtualinvoke $r106.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.common.PDMetadata getMetadata()>();

        r117 = virtualinvoke $r107.<org.apache.pdfbox.pdmodel.common.PDMetadata: org.apache.jempbox.xmp.XMPMetadata exportXMPMetadata()>();

     label02:
        if r117 == null goto label03;

        r118 = virtualinvoke r117.<org.apache.jempbox.xmp.XMPMetadata: org.apache.jempbox.xmp.XMPSchemaDublinCore getDublinCoreSchema()>();

     label03:
        goto label05;

     label04:
        $r116 := @caughtexception;

     label05:
        $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentInformation getDocumentInformation()>();

        $r5 = <org.apache.tika.metadata.PagedText: org.apache.tika.metadata.Property N_PAGES>;

        $i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: int getNumberOfPages()>();

        virtualinvoke r4.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,int)>($r5, $i0);

        $r7 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property TITLE>;

        $r8 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentInformation: java.lang.String getTitle()>();

        specialinvoke r6.<org.apache.tika.parser.pdf.PDFParser: void extractMultilingualItems(org.apache.tika.metadata.Metadata,org.apache.tika.metadata.Property,java.lang.String,org.apache.jempbox.xmp.XMPSchema)>(r4, $r7, $r8, r118);

        $r9 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property CREATOR>;

        $r10 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentInformation: java.lang.String getAuthor()>();

        specialinvoke r6.<org.apache.tika.parser.pdf.PDFParser: void extractDublinCoreListItems(org.apache.tika.metadata.Metadata,org.apache.tika.metadata.Property,java.lang.String,org.apache.jempbox.xmp.XMPSchemaDublinCore)>(r4, $r9, $r10, r118);

        $r11 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property CONTRIBUTOR>;

        specialinvoke r6.<org.apache.tika.parser.pdf.PDFParser: void extractDublinCoreListItems(org.apache.tika.metadata.Metadata,org.apache.tika.metadata.Property,java.lang.String,org.apache.jempbox.xmp.XMPSchemaDublinCore)>(r4, $r11, null, r118);

        $r12 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property CREATOR_TOOL>;

        $r13 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentInformation: java.lang.String getCreator()>();

        specialinvoke r6.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,org.apache.tika.metadata.Property,java.lang.String)>(r4, $r12, $r13);

        $r14 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property KEYWORDS>;

        $r15 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentInformation: java.lang.String getKeywords()>();

        specialinvoke r6.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,org.apache.tika.metadata.Property,java.lang.String)>(r4, $r14, $r15);

        $r16 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentInformation: java.lang.String getProducer()>();

        specialinvoke r6.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,java.lang.String,java.lang.String)>(r4, "producer", $r16);

        $r17 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property DESCRIPTION>;

        specialinvoke r6.<org.apache.tika.parser.pdf.PDFParser: void extractMultilingualItems(org.apache.tika.metadata.Metadata,org.apache.tika.metadata.Property,java.lang.String,org.apache.jempbox.xmp.XMPSchema)>(r4, $r17, null, r118);

        $r18 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property TRANSITION_SUBJECT_TO_OO_SUBJECT>;

        $r19 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentInformation: java.lang.String getSubject()>();

        specialinvoke r6.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,org.apache.tika.metadata.Property,java.lang.String)>(r4, $r18, $r19);

        $r20 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentInformation: java.lang.String getTrapped()>();

        specialinvoke r6.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,java.lang.String,java.lang.String)>(r4, "trapped", $r20);

     label06:
        $r21 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentInformation: java.util.Calendar getCreationDate()>();

        specialinvoke r6.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,java.lang.String,java.util.Calendar)>(r4, "created", $r21);

        $r22 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property CREATED>;

        $r23 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentInformation: java.util.Calendar getCreationDate()>();

        specialinvoke r6.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,org.apache.tika.metadata.Property,java.util.Calendar)>(r4, $r22, $r23);

     label07:
        goto label09;

     label08:
        $r115 := @caughtexception;

     label09:
        $r24 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentInformation: java.util.Calendar getModificationDate()>();

        $r25 = <org.apache.tika.metadata.Metadata: org.apache.tika.metadata.Property LAST_MODIFIED>;

        specialinvoke r6.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,org.apache.tika.metadata.Property,java.util.Calendar)>(r4, $r25, $r24);

        $r26 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property MODIFIED>;

        specialinvoke r6.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,org.apache.tika.metadata.Property,java.util.Calendar)>(r4, $r26, $r24);

     label10:
        goto label12;

     label11:
        $r114 := @caughtexception;

     label12:
        $r27 = newarray (java.lang.String)[9];

        $r27[0] = "Author";

        $r27[1] = "Creator";

        $r27[2] = "CreationDate";

        $r27[3] = "ModDate";

        $r27[4] = "Keywords";

        $r27[5] = "Producer";

        $r27[6] = "Subject";

        $r27[7] = "Title";

        $r27[8] = "Trapped";

        $r28 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r27);

        $r29 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentInformation: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r30 = virtualinvoke $r29.<org.apache.pdfbox.cos.COSDictionary: java.util.Set keySet()>();

        $r31 = interfaceinvoke $r30.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z4 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label15;

        $r102 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r119 = (org.apache.pdfbox.cos.COSName) $r102;

        $r103 = virtualinvoke r119.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>();

        $z3 = interfaceinvoke $r28.<java.util.List: boolean contains(java.lang.Object)>($r103);

        if $z3 != 0 goto label14;

        $r104 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentInformation: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r105 = virtualinvoke $r104.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r119);

        specialinvoke r6.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,java.lang.String,org.apache.pdfbox.cos.COSBase)>(r4, $r103, $r105);

     label14:
        goto label13;

     label15:
        $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: boolean isEncrypted()>();

        $r32 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        virtualinvoke r4.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("pdf:encrypted", $r32);

        $r33 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        $f0 = virtualinvoke $r33.<org.apache.pdfbox.cos.COSDocument: float getVersion()>();

        $r34 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        virtualinvoke r4.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("pdf:PDFVersion", $r34);

        $r35 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property FORMAT>;

        $r36 = virtualinvoke $r35.<org.apache.tika.metadata.Property: java.lang.String getName()>();

        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        $r38 = <org.apache.tika.parser.pdf.PDFParser: org.apache.tika.mime.MediaType MEDIA_TYPE>;

        $r39 = virtualinvoke $r38.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        $r40 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; version=");

        $r42 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        $f1 = virtualinvoke $r42.<org.apache.pdfbox.cos.COSDocument: float getVersion()>();

        $r43 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f1);

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<org.apache.tika.metadata.Metadata: void add(java.lang.String,java.lang.String)>($r36, $r45);

     label16:
        if r117 == null goto label17;

        virtualinvoke r117.<org.apache.jempbox.xmp.XMPMetadata: void addXMLNSMapping(java.lang.String,java.lang.Class)>("http://www.aiim.org/pdfa/ns/id/", class "Lorg/apache/jempbox/xmp/pdfa/XMPSchemaPDFAId;");

        $r78 = virtualinvoke r117.<org.apache.jempbox.xmp.XMPMetadata: org.apache.jempbox.xmp.XMPSchema getSchemaByClass(java.lang.Class)>(class "Lorg/apache/jempbox/xmp/pdfa/XMPSchemaPDFAId;");

        r120 = (org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId) $r78;

        if r120 == null goto label17;

        $r79 = virtualinvoke r120.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: java.lang.Integer getPart()>();

        $i2 = virtualinvoke $r79.<java.lang.Integer: int intValue()>();

        $r80 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        virtualinvoke r4.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("pdfaid:part", $r80);

        $r81 = virtualinvoke r120.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: java.lang.String getConformance()>();

        if $r81 == null goto label17;

        $r82 = virtualinvoke r120.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: java.lang.String getConformance()>();

        virtualinvoke r4.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("pdfaid:conformance", $r82);

        $r122 = new java.lang.StringBuilder;

        specialinvoke $r122.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A-");

        $r85 = virtualinvoke r120.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: java.lang.Integer getPart()>();

        $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r85);

        $r87 = virtualinvoke r120.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: java.lang.String getConformance()>();

        $r88 = <java.util.Locale: java.util.Locale ROOT>;

        $r89 = virtualinvoke $r87.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r88);

        $r90 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("pdfa:PDFVersion", $r91);

        $r92 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property FORMAT>;

        $r93 = virtualinvoke $r92.<org.apache.tika.metadata.Property: java.lang.String getName()>();

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        $r95 = <org.apache.tika.parser.pdf.PDFParser: org.apache.tika.mime.MediaType MEDIA_TYPE>;

        $r96 = virtualinvoke $r95.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        $r97 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; version=\"");

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<org.apache.tika.metadata.Metadata: void add(java.lang.String,java.lang.String)>($r93, $r101);

     label17:
        goto label19;

     label18:
        $r108 := @caughtexception;

        $r124 = new java.lang.StringBuilder;

        specialinvoke $r124.<java.lang.StringBuilder: void <init>()>();

        $r110 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r108);

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("pdf:metadata-xmp-parse-failed", $r112);

     label19:
        $r46 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r47 = virtualinvoke $r46.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r48 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("Extensions");

        $r49 = virtualinvoke $r47.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r48);

        $r113 = (org.apache.pdfbox.cos.COSDictionary) $r49;

        if $r113 == null goto label24;

        $r50 = virtualinvoke $r113.<org.apache.pdfbox.cos.COSDictionary: java.util.Set keySet()>();

        $r51 = interfaceinvoke $r50.<java.util.Set: java.util.Iterator iterator()>();

     label20:
        $z1 = interfaceinvoke $r51.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label24;

        $r52 = interfaceinvoke $r51.<java.util.Iterator: java.lang.Object next()>();

        r53 = (org.apache.pdfbox.cos.COSName) $r52;

        $r54 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("ADBE");

        $z2 = virtualinvoke r53.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r54);

        if $z2 == 0 goto label22;

        $r56 = virtualinvoke $r113.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r53);

        r57 = (org.apache.pdfbox.cos.COSDictionary) $r56;

        if r57 == null goto label21;

        $r58 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("BaseVersion");

        $r59 = virtualinvoke r57.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>($r58);

        $r60 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("ExtensionLevel");

        $i1 = virtualinvoke r57.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName)>($r60);

        $i4 = (int) -1;

        if $i1 == $i4 goto label21;

        $r125 = new java.lang.StringBuilder;

        specialinvoke $r125.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Adobe Extension Level ");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("pdf:PDFExtensionVersion", $r65);

        $r66 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property FORMAT>;

        $r67 = virtualinvoke $r66.<org.apache.tika.metadata.Property: java.lang.String getName()>();

        $r126 = new java.lang.StringBuilder;

        specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();

        $r69 = <org.apache.tika.parser.pdf.PDFParser: org.apache.tika.mime.MediaType MEDIA_TYPE>;

        $r70 = virtualinvoke $r69.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        $r71 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; version=\"");

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Adobe Extension Level ");

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<org.apache.tika.metadata.Metadata: void add(java.lang.String,java.lang.String)>($r67, $r77);

     label21:
        goto label23;

     label22:
        $r55 = virtualinvoke r53.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>();

        virtualinvoke r4.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("pdf:foundNonAdobeExtensionName", $r55);

     label23:
        goto label20;

     label24:
        return;

        catch java.io.IOException from label01 to label03 with label04;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label16 to label17 with label18;
    }

    private void extractMultilingualItems(org.apache.tika.metadata.Metadata, org.apache.tika.metadata.Property, java.lang.String, org.apache.jempbox.xmp.XMPSchema)
    {
        org.apache.tika.metadata.Metadata r6;
        org.apache.tika.metadata.Property r1;
        int $i0, $i1, $i2;
        java.lang.String $r2, r5, $r7, r9, $r10, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r4;
        java.util.List $r3;
        org.apache.tika.parser.pdf.PDFParser r12;
        org.apache.jempbox.xmp.XMPSchema r0;
        java.lang.Object $r8;

        r12 := @this: org.apache.tika.parser.pdf.PDFParser;

        r6 := @parameter0: org.apache.tika.metadata.Metadata;

        r1 := @parameter1: org.apache.tika.metadata.Property;

        r5 := @parameter2: java.lang.String;

        r0 := @parameter3: org.apache.jempbox.xmp.XMPSchema;

        if r0 != null goto label2;

        if r5 == null goto label1;

        $i2 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i2 <= 0 goto label1;

        virtualinvoke r6.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>(r1, r5);

     label1:
        return;

     label2:
        $r2 = virtualinvoke r1.<org.apache.tika.metadata.Property: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchema: java.util.List getLanguagePropertyLanguages(java.lang.String)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r8 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        $r10 = virtualinvoke r1.<org.apache.tika.metadata.Property: java.lang.String getName()>();

        $r11 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchema: java.lang.String getLanguageProperty(java.lang.String,java.lang.String)>($r10, r9);

        if $r11 == null goto label5;

        $i1 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i1 <= 0 goto label5;

        if r5 == null goto label4;

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z2 == 0 goto label4;

        goto label3;

     label4:
        virtualinvoke r6.<org.apache.tika.metadata.Metadata: void add(org.apache.tika.metadata.Property,java.lang.String)>(r1, $r11);

        $z1 = virtualinvoke r1.<org.apache.tika.metadata.Property: boolean isMultiValuePermitted()>();

        if $z1 != 0 goto label5;

        return;

     label5:
        goto label3;

     label6:
        if r5 == null goto label8;

        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label8;

        $z0 = virtualinvoke r1.<org.apache.tika.metadata.Property: boolean isMultiValuePermitted()>();

        if $z0 != 0 goto label7;

        $r7 = virtualinvoke r6.<org.apache.tika.metadata.Metadata: java.lang.String get(org.apache.tika.metadata.Property)>(r1);

        if $r7 == null goto label7;

        return;

     label7:
        virtualinvoke r6.<org.apache.tika.metadata.Metadata: void add(org.apache.tika.metadata.Property,java.lang.String)>(r1, r5);

     label8:
        return;
    }

    private void extractDublinCoreListItems(org.apache.tika.metadata.Metadata, org.apache.tika.metadata.Property, java.lang.String, org.apache.jempbox.xmp.XMPSchemaDublinCore)
    {
        org.apache.jempbox.xmp.XMPSchemaDublinCore r0;
        java.util.Iterator $r5;
        java.util.List $r4;
        org.apache.tika.metadata.Metadata r7;
        org.apache.tika.metadata.Property r2;
        org.apache.tika.parser.pdf.PDFParser r1;
        int $i0, $i1, $i2;
        java.lang.Object $r8;
        java.lang.String $r3, r6, r9;
        boolean $z0, $z1;

        r1 := @this: org.apache.tika.parser.pdf.PDFParser;

        r7 := @parameter0: org.apache.tika.metadata.Metadata;

        r2 := @parameter1: org.apache.tika.metadata.Property;

        r6 := @parameter2: java.lang.String;

        r0 := @parameter3: org.apache.jempbox.xmp.XMPSchemaDublinCore;

        if r0 != null goto label2;

        if r6 == null goto label1;

        $i2 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i2 <= 0 goto label1;

        specialinvoke r1.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,org.apache.tika.metadata.Property,java.lang.String)>(r7, r2, r6);

     label1:
        return;

     label2:
        $r3 = virtualinvoke r2.<org.apache.tika.metadata.Property: java.lang.String getName()>();

        $r4 = specialinvoke r1.<org.apache.tika.parser.pdf.PDFParser: java.util.List getXMPBagOrSeqList(org.apache.jempbox.xmp.XMPSchema,java.lang.String)>(r0, $r3);

        if $r4 != null goto label4;

        if r6 == null goto label3;

        $i1 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i1 <= 0 goto label3;

        specialinvoke r1.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,org.apache.tika.metadata.Property,java.lang.String)>(r7, r2, r6);

     label3:
        return;

     label4:
        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        if r6 == null goto label6;

        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 != 0 goto label6;

        specialinvoke r1.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,org.apache.tika.metadata.Property,java.lang.String)>(r7, r2, r9);

     label6:
        goto label5;

     label7:
        if r6 == null goto label8;

        $i0 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i0 <= 0 goto label8;

        specialinvoke r1.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,org.apache.tika.metadata.Property,java.lang.String)>(r7, r2, r6);

     label8:
        return;
    }

    private java.util.List getXMPBagOrSeqList(org.apache.jempbox.xmp.XMPSchema, java.lang.String)
    {
        java.util.List $r2, r4;
        org.apache.tika.parser.pdf.PDFParser r3;
        org.apache.jempbox.xmp.XMPSchema r0;
        java.lang.String r1;

        r3 := @this: org.apache.tika.parser.pdf.PDFParser;

        r0 := @parameter0: org.apache.jempbox.xmp.XMPSchema;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchema: java.util.List getBagList(java.lang.String)>(r1);

        r4 = $r2;

        if $r2 != null goto label1;

        r4 = virtualinvoke r0.<org.apache.jempbox.xmp.XMPSchema: java.util.List getSequenceList(java.lang.String)>(r1);

     label1:
        return r4;
    }

    private void addMetadata(org.apache.tika.metadata.Metadata, org.apache.tika.metadata.Property, java.lang.String)
    {
        org.apache.tika.metadata.Metadata r1;
        org.apache.tika.metadata.Property r2;
        org.apache.tika.parser.pdf.PDFParser r3;
        java.lang.String r0;

        r3 := @this: org.apache.tika.parser.pdf.PDFParser;

        r1 := @parameter0: org.apache.tika.metadata.Metadata;

        r2 := @parameter1: org.apache.tika.metadata.Property;

        r0 := @parameter2: java.lang.String;

        if r0 == null goto label1;

        virtualinvoke r1.<org.apache.tika.metadata.Metadata: void add(org.apache.tika.metadata.Property,java.lang.String)>(r2, r0);

     label1:
        return;
    }

    private void addMetadata(org.apache.tika.metadata.Metadata, java.lang.String, java.lang.String)
    {
        org.apache.tika.metadata.Metadata r1;
        org.apache.tika.parser.pdf.PDFParser r3;
        java.lang.String r0, r2;

        r3 := @this: org.apache.tika.parser.pdf.PDFParser;

        r1 := @parameter0: org.apache.tika.metadata.Metadata;

        r2 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        if r0 == null goto label1;

        virtualinvoke r1.<org.apache.tika.metadata.Metadata: void add(java.lang.String,java.lang.String)>(r2, r0);

     label1:
        return;
    }

    private void addMetadata(org.apache.tika.metadata.Metadata, java.lang.String, java.util.Calendar)
    {
        org.apache.tika.metadata.Metadata r1;
        java.util.Calendar r0;
        org.apache.tika.parser.pdf.PDFParser r5;
        java.util.Date $r3;
        java.lang.String r2, $r4;

        r5 := @this: org.apache.tika.parser.pdf.PDFParser;

        r1 := @parameter0: org.apache.tika.metadata.Metadata;

        r2 := @parameter1: java.lang.String;

        r0 := @parameter2: java.util.Calendar;

        if r0 == null goto label1;

        $r3 = virtualinvoke r0.<java.util.Calendar: java.util.Date getTime()>();

        $r4 = virtualinvoke $r3.<java.util.Date: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>(r2, $r4);

     label1:
        return;
    }

    private void addMetadata(org.apache.tika.metadata.Metadata, org.apache.tika.metadata.Property, java.util.Calendar)
    {
        org.apache.tika.metadata.Metadata r1;
        java.util.Calendar r0;
        org.apache.tika.metadata.Property r2;
        org.apache.tika.parser.pdf.PDFParser r4;
        java.util.Date $r3;

        r4 := @this: org.apache.tika.parser.pdf.PDFParser;

        r1 := @parameter0: org.apache.tika.metadata.Metadata;

        r2 := @parameter1: org.apache.tika.metadata.Property;

        r0 := @parameter2: java.util.Calendar;

        if r0 == null goto label1;

        $r3 = virtualinvoke r0.<java.util.Calendar: java.util.Date getTime()>();

        virtualinvoke r1.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.util.Date)>(r2, $r3);

     label1:
        return;
    }

    private void addMetadata(org.apache.tika.metadata.Metadata, java.lang.String, org.apache.pdfbox.cos.COSBase)
    {
        org.apache.pdfbox.cos.COSArray $r7;
        java.util.Iterator $r9;
        org.apache.pdfbox.cos.COSString $r5;
        org.apache.tika.metadata.Metadata r2;
        java.util.List $r8;
        org.apache.tika.parser.pdf.PDFParser r1;
        org.apache.pdfbox.cos.COSBase r0, $r11;
        java.lang.Object $r10;
        java.lang.String r3, $r4, $r6;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.tika.parser.pdf.PDFParser;

        r2 := @parameter0: org.apache.tika.metadata.Metadata;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: org.apache.pdfbox.cos.COSBase;

        $z0 = r0 instanceof org.apache.pdfbox.cos.COSArray;

        if $z0 == 0 goto label3;

        $r7 = (org.apache.pdfbox.cos.COSArray) r0;

        $r8 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSArray: java.util.List toList()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (org.apache.pdfbox.cos.COSBase) $r10;

        specialinvoke r1.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,java.lang.String,org.apache.pdfbox.cos.COSBase)>(r2, r3, $r11);

        goto label1;

     label2:
        goto label5;

     label3:
        $z1 = r0 instanceof org.apache.pdfbox.cos.COSString;

        if $z1 == 0 goto label4;

        $r5 = (org.apache.pdfbox.cos.COSString) r0;

        $r6 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>();

        specialinvoke r1.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,java.lang.String,java.lang.String)>(r2, r3, $r6);

        goto label5;

     label4:
        if r0 == null goto label5;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r1.<org.apache.tika.parser.pdf.PDFParser: void addMetadata(org.apache.tika.metadata.Metadata,java.lang.String,java.lang.String)>(r2, r3, $r4);

     label5:
        return;
    }

    public void setPDFParserConfig(org.apache.tika.parser.pdf.PDFParserConfig)
    {
        org.apache.tika.parser.pdf.PDFParserConfig r1;
        org.apache.tika.parser.pdf.PDFParser r0;

        r0 := @this: org.apache.tika.parser.pdf.PDFParser;

        r1 := @parameter0: org.apache.tika.parser.pdf.PDFParserConfig;

        r0.<org.apache.tika.parser.pdf.PDFParser: org.apache.tika.parser.pdf.PDFParserConfig defaultConfig> = r1;

        return;
    }

    public org.apache.tika.parser.pdf.PDFParserConfig getPDFParserConfig()
    {
        org.apache.tika.parser.pdf.PDFParserConfig $r1;
        org.apache.tika.parser.pdf.PDFParser r0;

        r0 := @this: org.apache.tika.parser.pdf.PDFParser;

        $r1 = r0.<org.apache.tika.parser.pdf.PDFParser: org.apache.tika.parser.pdf.PDFParserConfig defaultConfig>;

        return $r1;
    }

    public void setUseNonSequentialParser(boolean)
    {
        org.apache.tika.parser.pdf.PDFParserConfig $r1;
        org.apache.tika.parser.pdf.PDFParser r0;
        boolean z0;

        r0 := @this: org.apache.tika.parser.pdf.PDFParser;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.tika.parser.pdf.PDFParser: org.apache.tika.parser.pdf.PDFParserConfig defaultConfig>;

        virtualinvoke $r1.<org.apache.tika.parser.pdf.PDFParserConfig: void setUseNonSequentialParser(boolean)>(z0);

        return;
    }

    public boolean getUseNonSequentialParser()
    {
        org.apache.tika.parser.pdf.PDFParserConfig $r1;
        org.apache.tika.parser.pdf.PDFParser r0;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.pdf.PDFParser;

        $r1 = r0.<org.apache.tika.parser.pdf.PDFParser: org.apache.tika.parser.pdf.PDFParserConfig defaultConfig>;

        $z0 = virtualinvoke $r1.<org.apache.tika.parser.pdf.PDFParserConfig: boolean getUseNonSequentialParser()>();

        return $z0;
    }

    public void setEnableAutoSpace(boolean)
    {
        org.apache.tika.parser.pdf.PDFParserConfig $r1;
        org.apache.tika.parser.pdf.PDFParser r0;
        boolean z0;

        r0 := @this: org.apache.tika.parser.pdf.PDFParser;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.tika.parser.pdf.PDFParser: org.apache.tika.parser.pdf.PDFParserConfig defaultConfig>;

        virtualinvoke $r1.<org.apache.tika.parser.pdf.PDFParserConfig: void setEnableAutoSpace(boolean)>(z0);

        return;
    }

    public boolean getEnableAutoSpace()
    {
        org.apache.tika.parser.pdf.PDFParserConfig $r1;
        org.apache.tika.parser.pdf.PDFParser r0;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.pdf.PDFParser;

        $r1 = r0.<org.apache.tika.parser.pdf.PDFParser: org.apache.tika.parser.pdf.PDFParserConfig defaultConfig>;

        $z0 = virtualinvoke $r1.<org.apache.tika.parser.pdf.PDFParserConfig: boolean getEnableAutoSpace()>();

        return $z0;
    }

    public void setExtractAnnotationText(boolean)
    {
        org.apache.tika.parser.pdf.PDFParserConfig $r1;
        org.apache.tika.parser.pdf.PDFParser r0;
        boolean z0;

        r0 := @this: org.apache.tika.parser.pdf.PDFParser;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.tika.parser.pdf.PDFParser: org.apache.tika.parser.pdf.PDFParserConfig defaultConfig>;

        virtualinvoke $r1.<org.apache.tika.parser.pdf.PDFParserConfig: void setExtractAnnotationText(boolean)>(z0);

        return;
    }

    public boolean getExtractAnnotationText()
    {
        org.apache.tika.parser.pdf.PDFParserConfig $r1;
        org.apache.tika.parser.pdf.PDFParser r0;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.pdf.PDFParser;

        $r1 = r0.<org.apache.tika.parser.pdf.PDFParser: org.apache.tika.parser.pdf.PDFParserConfig defaultConfig>;

        $z0 = virtualinvoke $r1.<org.apache.tika.parser.pdf.PDFParserConfig: boolean getExtractAnnotationText()>();

        return $z0;
    }

    public void setSuppressDuplicateOverlappingText(boolean)
    {
        org.apache.tika.parser.pdf.PDFParserConfig $r1;
        org.apache.tika.parser.pdf.PDFParser r0;
        boolean z0;

        r0 := @this: org.apache.tika.parser.pdf.PDFParser;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.tika.parser.pdf.PDFParser: org.apache.tika.parser.pdf.PDFParserConfig defaultConfig>;

        virtualinvoke $r1.<org.apache.tika.parser.pdf.PDFParserConfig: void setSuppressDuplicateOverlappingText(boolean)>(z0);

        return;
    }

    public boolean getSuppressDuplicateOverlappingText()
    {
        org.apache.tika.parser.pdf.PDFParserConfig $r1;
        org.apache.tika.parser.pdf.PDFParser r0;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.pdf.PDFParser;

        $r1 = r0.<org.apache.tika.parser.pdf.PDFParser: org.apache.tika.parser.pdf.PDFParserConfig defaultConfig>;

        $z0 = virtualinvoke $r1.<org.apache.tika.parser.pdf.PDFParserConfig: boolean getSuppressDuplicateOverlappingText()>();

        return $z0;
    }

    public void setSortByPosition(boolean)
    {
        org.apache.tika.parser.pdf.PDFParserConfig $r1;
        org.apache.tika.parser.pdf.PDFParser r0;
        boolean z0;

        r0 := @this: org.apache.tika.parser.pdf.PDFParser;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.tika.parser.pdf.PDFParser: org.apache.tika.parser.pdf.PDFParserConfig defaultConfig>;

        virtualinvoke $r1.<org.apache.tika.parser.pdf.PDFParserConfig: void setSortByPosition(boolean)>(z0);

        return;
    }

    public boolean getSortByPosition()
    {
        org.apache.tika.parser.pdf.PDFParserConfig $r1;
        org.apache.tika.parser.pdf.PDFParser r0;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.pdf.PDFParser;

        $r1 = r0.<org.apache.tika.parser.pdf.PDFParser: org.apache.tika.parser.pdf.PDFParserConfig defaultConfig>;

        $z0 = virtualinvoke $r1.<org.apache.tika.parser.pdf.PDFParserConfig: boolean getSortByPosition()>();

        return $z0;
    }

    static void <clinit>()
    {
        java.util.Set $r2;
        org.apache.tika.mime.MediaType $r0, $r1;

        <org.apache.tika.parser.pdf.PDFParser: java.lang.String PASSWORD> = "org.apache.tika.parser.pdf.password";

        <org.apache.tika.parser.pdf.PDFParser: long serialVersionUID> = -752276948656079347L;

        $r0 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType application(java.lang.String)>("pdf");

        <org.apache.tika.parser.pdf.PDFParser: org.apache.tika.mime.MediaType MEDIA_TYPE> = $r0;

        $r1 = <org.apache.tika.parser.pdf.PDFParser: org.apache.tika.mime.MediaType MEDIA_TYPE>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1);

        <org.apache.tika.parser.pdf.PDFParser: java.util.Set SUPPORTED_TYPES> = $r2;

        return;
    }
}
