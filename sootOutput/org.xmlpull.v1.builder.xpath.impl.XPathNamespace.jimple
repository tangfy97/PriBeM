public class org.xmlpull.v1.builder.xpath.impl.XPathNamespace extends java.lang.Object
{
    private org.xmlpull.v1.builder.XmlElement element;
    private org.xmlpull.v1.builder.XmlNamespace namespace;

    public void <init>(org.xmlpull.v1.builder.XmlNamespace)
    {
        org.xmlpull.v1.builder.XmlNamespace r1;
        org.xmlpull.v1.builder.xpath.impl.XPathNamespace r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.impl.XPathNamespace;

        r1 := @parameter0: org.xmlpull.v1.builder.XmlNamespace;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.xmlpull.v1.builder.xpath.impl.XPathNamespace: org.xmlpull.v1.builder.XmlNamespace namespace> = r1;

        return;
    }

    public void <init>(org.xmlpull.v1.builder.XmlElement, org.xmlpull.v1.builder.XmlNamespace)
    {
        org.xmlpull.v1.builder.XmlElement r1;
        org.xmlpull.v1.builder.XmlNamespace r2;
        org.xmlpull.v1.builder.xpath.impl.XPathNamespace r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.impl.XPathNamespace;

        r1 := @parameter0: org.xmlpull.v1.builder.XmlElement;

        r2 := @parameter1: org.xmlpull.v1.builder.XmlNamespace;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.xmlpull.v1.builder.xpath.impl.XPathNamespace: org.xmlpull.v1.builder.XmlElement element> = r1;

        r0.<org.xmlpull.v1.builder.xpath.impl.XPathNamespace: org.xmlpull.v1.builder.XmlNamespace namespace> = r2;

        return;
    }

    public org.xmlpull.v1.builder.XmlElement getElement()
    {
        org.xmlpull.v1.builder.XmlElement $r1;
        org.xmlpull.v1.builder.xpath.impl.XPathNamespace r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.impl.XPathNamespace;

        $r1 = r0.<org.xmlpull.v1.builder.xpath.impl.XPathNamespace: org.xmlpull.v1.builder.XmlElement element>;

        return $r1;
    }

    public org.xmlpull.v1.builder.XmlNamespace getNamespace()
    {
        org.xmlpull.v1.builder.XmlNamespace $r1;
        org.xmlpull.v1.builder.xpath.impl.XPathNamespace r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.impl.XPathNamespace;

        $r1 = r0.<org.xmlpull.v1.builder.xpath.impl.XPathNamespace: org.xmlpull.v1.builder.XmlNamespace namespace>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r5, $r6, $r9, $r10, $r13, $r14;
        java.lang.String $r4, $r8, $r12, $r15;
        org.xmlpull.v1.builder.XmlNamespace $r3, $r7;
        org.xmlpull.v1.builder.XmlElement $r11;
        org.xmlpull.v1.builder.xpath.impl.XPathNamespace r2;

        r2 := @this: org.xmlpull.v1.builder.xpath.impl.XPathNamespace;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[xmlns:");

        $r3 = r2.<org.xmlpull.v1.builder.xpath.impl.XPathNamespace: org.xmlpull.v1.builder.XmlNamespace namespace>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getPrefix()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $r7 = r2.<org.xmlpull.v1.builder.xpath.impl.XPathNamespace: org.xmlpull.v1.builder.XmlNamespace namespace>;

        $r8 = interfaceinvoke $r7.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getNamespaceName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\", element=");

        $r11 = r2.<org.xmlpull.v1.builder.xpath.impl.XPathNamespace: org.xmlpull.v1.builder.XmlElement element>;

        $r12 = interfaceinvoke $r11.<org.xmlpull.v1.builder.XmlElement: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r15;
    }
}
