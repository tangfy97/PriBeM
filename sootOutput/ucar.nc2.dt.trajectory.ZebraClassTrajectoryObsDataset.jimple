public class ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset extends ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset implements ucar.nc2.dt.TypedDatasetFactoryIF
{
    private static java.lang.String timeDimName;
    private static java.lang.String timeVarName;
    private static java.lang.String latVarName;
    private static java.lang.String lonVarName;
    private static java.lang.String elevVarName;
    private static java.lang.String trajId;

    public static boolean isValidFile(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config $r1;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = staticinvoke <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config buildConfig(ucar.nc2.dataset.NetcdfDataset)>(r0);

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config buildConfig(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.Group $r7, $r13, $r27, $r36, $r45;
        ucar.nc2.Attribute $r1, $r3, $r5, $r6, $r20, $r34, $r43, $r52;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config $r12;
        java.lang.StringBuilder $r22, $r23, $r24;
        java.lang.String $r2, $r4, $r10, $r11, $r14, $r18, $r19, $r21, $r25, $r28, $r32, $r33, $r35, $r37, $r41, $r42, $r44, $r46, $r50, $r51, $r53, $r54;
        ucar.nc2.Dimension r55, r56, r57, r58, r59;
        ucar.nc2.dataset.NetcdfDataset r0;
        java.util.Date $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        java.util.List $r8, $r16, $r30, $r39, $r48;
        int $i0, $i1, $i2, $i3, $i4;
        ucar.nc2.Variable $r15, $r29, $r38, $r47;
        java.lang.Object $r9, $r17, $r31, $r40, $r49;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("zebra_platform");

        if $r1 != null goto label01;

        return null;

     label01:
        $z0 = virtualinvoke $r1.<ucar.nc2.Attribute: boolean isString()>();

        if $z0 != 0 goto label02;

        return null;

     label02:
        $r2 = virtualinvoke $r1.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("class");

        if $z1 != 0 goto label03;

        return null;

     label03:
        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("history");

        if $r3 != null goto label04;

        return null;

     label04:
        $z2 = virtualinvoke $r3.<ucar.nc2.Attribute: boolean isString()>();

        if $z2 != 0 goto label05;

        return null;

     label05:
        $r4 = virtualinvoke $r3.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("ClassNcFile");

        if $z3 != 0 goto label06;

        return null;

     label06:
        $r5 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("AvapsEditorVersion");

        if $r5 != null goto label07;

        return null;

     label07:
        $z4 = virtualinvoke $r5.<ucar.nc2.Attribute: boolean isString()>();

        if $z4 != 0 goto label08;

        return null;

     label08:
        $r6 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("SoundingDescription");

        if $r6 != null goto label09;

        return null;

     label09:
        $z5 = virtualinvoke $r6.<ucar.nc2.Attribute: boolean isString()>();

        if $z5 != 0 goto label10;

        return null;

     label10:
        $r7 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r8 = virtualinvoke $r7.<ucar.nc2.Group: java.util.List getDimensions()>();

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i0 == 1 goto label11;

        return null;

     label11:
        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        r55 = (ucar.nc2.Dimension) $r9;

        $r10 = virtualinvoke r55.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r11 = <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: java.lang.String timeDimName>;

        $z6 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z6 != 0 goto label12;

        return null;

     label12:
        $r12 = new ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config;

        specialinvoke $r12.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void <init>()>();

        virtualinvoke $r12.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setTimeDim(ucar.nc2.Dimension)>(r55);

        $r13 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r14 = <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: java.lang.String timeVarName>;

        $r15 = virtualinvoke $r13.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r14);

        if $r15 != null goto label13;

        return null;

     label13:
        $r16 = virtualinvoke $r15.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i1 = interfaceinvoke $r16.<java.util.List: int size()>();

        if $i1 == 1 goto label14;

        return null;

     label14:
        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(0);

        r56 = (ucar.nc2.Dimension) $r17;

        $r18 = virtualinvoke r56.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r19 = <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: java.lang.String timeDimName>;

        $z7 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z7 != 0 goto label15;

        return null;

     label15:
        $r20 = virtualinvoke $r15.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        $r21 = virtualinvoke $r20.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0 ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardDate(java.lang.String)>($r25);

        if $r26 != null goto label16;

        return null;

     label16:
        virtualinvoke $r12.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setTimeVar(ucar.nc2.Variable)>($r15);

        $r27 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r28 = <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: java.lang.String latVarName>;

        $r29 = virtualinvoke $r27.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r28);

        if $r29 != null goto label17;

        return null;

     label17:
        $r30 = virtualinvoke $r29.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i2 = interfaceinvoke $r30.<java.util.List: int size()>();

        if $i2 == 1 goto label18;

        return null;

     label18:
        $r31 = interfaceinvoke $r30.<java.util.List: java.lang.Object get(int)>(0);

        r57 = (ucar.nc2.Dimension) $r31;

        $r32 = virtualinvoke r57.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r33 = <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: java.lang.String timeDimName>;

        $z8 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r33);

        if $z8 != 0 goto label19;

        return null;

     label19:
        $r34 = virtualinvoke $r29.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        $r35 = virtualinvoke $r34.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z9 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>($r35, "degrees_north");

        if $z9 != 0 goto label20;

        return null;

     label20:
        virtualinvoke $r12.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setLatVar(ucar.nc2.Variable)>($r29);

        $r36 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r37 = <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: java.lang.String lonVarName>;

        $r38 = virtualinvoke $r36.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r37);

        if $r38 != null goto label21;

        return null;

     label21:
        $r39 = virtualinvoke $r38.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i3 = interfaceinvoke $r39.<java.util.List: int size()>();

        if $i3 == 1 goto label22;

        return null;

     label22:
        $r40 = interfaceinvoke $r39.<java.util.List: java.lang.Object get(int)>(0);

        r58 = (ucar.nc2.Dimension) $r40;

        $r41 = virtualinvoke r58.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r42 = <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: java.lang.String timeDimName>;

        $z10 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>($r42);

        if $z10 != 0 goto label23;

        return null;

     label23:
        $r43 = virtualinvoke $r38.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        $r44 = virtualinvoke $r43.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z11 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>($r44, "degrees_east");

        if $z11 != 0 goto label24;

        return null;

     label24:
        virtualinvoke $r12.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setLonVar(ucar.nc2.Variable)>($r38);

        $r45 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r46 = <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: java.lang.String elevVarName>;

        $r47 = virtualinvoke $r45.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r46);

        if $r47 != null goto label25;

        return null;

     label25:
        $r48 = virtualinvoke $r47.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i4 = interfaceinvoke $r48.<java.util.List: int size()>();

        if $i4 == 1 goto label26;

        return null;

     label26:
        $r49 = interfaceinvoke $r48.<java.util.List: java.lang.Object get(int)>(0);

        r59 = (ucar.nc2.Dimension) $r49;

        $r50 = virtualinvoke r59.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r51 = <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: java.lang.String timeDimName>;

        $z12 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>($r51);

        if $z12 != 0 goto label27;

        return null;

     label27:
        $r52 = virtualinvoke $r47.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        $r53 = virtualinvoke $r52.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z13 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>($r53, "meters");

        if $z13 != 0 goto label28;

        return null;

     label28:
        virtualinvoke $r12.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setElevVar(ucar.nc2.Variable)>($r47);

        $r54 = <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: java.lang.String trajId>;

        virtualinvoke $r12.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setTrajectoryId(java.lang.String)>($r54);

        return $r12;
    }

    public boolean isMine(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0;
        ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset r1;

        r1 := @this: ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $z0 = staticinvoke <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: boolean isValidFile(ucar.nc2.dataset.NetcdfDataset)>(r0);

        return $z0;
    }

    public ucar.nc2.dt.TypedDataset open(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask, java.lang.StringBuilder) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r3;
        java.lang.StringBuilder r4;
        ucar.nc2.dataset.NetcdfDataset r1;
        ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset $r0, r2;

        r2 := @this: ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.util.CancelTask;

        r4 := @parameter2: java.lang.StringBuilder;

        $r0 = new ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset;

        specialinvoke $r0.<ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        return $r0;
    }

    public ucar.nc2.constants.FeatureType getScientificDataType()
    {
        ucar.nc2.constants.FeatureType $r0;
        ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset r1;

        r1 := @this: ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset;

        $r0 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType TRAJECTORY>;

        return $r0;
    }

    public void <init>()
    {
        ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset r0;

        r0 := @this: ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset;

        specialinvoke r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset: void <init>()>();

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        ucar.nc2.dataset.NetcdfDataset r1;
        ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset r0;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config $r2;

        r0 := @this: ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        $r2 = staticinvoke <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config buildConfig(ucar.nc2.dataset.NetcdfDataset)>(r1);

        virtualinvoke r0.<ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: void setTrajectoryInfo(ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config)>($r2);

        return;
    }

    static void <clinit>()
    {
        <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: java.lang.String timeDimName> = "time";

        <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: java.lang.String timeVarName> = "time";

        <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: java.lang.String latVarName> = "lat";

        <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: java.lang.String lonVarName> = "lon";

        <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: java.lang.String elevVarName> = "alt";

        <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: java.lang.String trajId> = "trajectory data";

        return;
    }
}
