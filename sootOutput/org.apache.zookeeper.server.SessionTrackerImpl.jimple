public class org.apache.zookeeper.server.SessionTrackerImpl extends java.lang.Thread implements org.apache.zookeeper.server.SessionTracker
{
    private static final org.slf4j.Logger LOG;
    java.util.HashMap sessionsById;
    java.util.HashMap sessionSets;
    java.util.concurrent.ConcurrentHashMap sessionsWithTimeout;
    long nextSessionId;
    long nextExpirationTime;
    int expirationInterval;
    org.apache.zookeeper.server.SessionTracker$SessionExpirer expirer;
    volatile boolean running;
    volatile long currentTime;

    public static long initializeNextSession(long)
    {
        long $l0, $l1, l2, $l3, l4, l5;

        l2 := @parameter0: long;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = $l0 << 24;

        l4 = $l1 >> 8;

        $l3 = l2 << 56;

        l5 = l4 | $l3;

        return l5;
    }

    private long roundToInterval(long)
    {
        long l0, $l2, $l3, $l5, $l6, $l7;
        org.apache.zookeeper.server.SessionTrackerImpl r0;
        int $i1, $i4;

        r0 := @this: org.apache.zookeeper.server.SessionTrackerImpl;

        l0 := @parameter0: long;

        $i1 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: int expirationInterval>;

        $l2 = (long) $i1;

        $l3 = l0 / $l2;

        $l6 = $l3 + 1L;

        $i4 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: int expirationInterval>;

        $l5 = (long) $i4;

        $l7 = $l6 * $l5;

        return $l7;
    }

    public void <init>(org.apache.zookeeper.server.SessionTracker$SessionExpirer, java.util.concurrent.ConcurrentHashMap, int, long)
    {
        java.util.HashMap $r1, $r2;
        long $l1, $l2, l3, $l4, $l5;
        org.apache.zookeeper.server.SessionTrackerImpl r0;
        java.lang.Integer $r12;
        java.lang.Long $r10;
        int i0, $i6;
        boolean $z0;
        java.util.Map$Entry r8;
        java.util.Iterator $r6;
        java.util.concurrent.ConcurrentHashMap r4;
        java.util.Set $r5;
        org.apache.zookeeper.server.SessionTracker$SessionExpirer r3;
        java.lang.Object $r7, $r9, $r11;

        r0 := @this: org.apache.zookeeper.server.SessionTrackerImpl;

        r3 := @parameter0: org.apache.zookeeper.server.SessionTracker$SessionExpirer;

        r4 := @parameter1: java.util.concurrent.ConcurrentHashMap;

        i0 := @parameter2: int;

        l3 := @parameter3: long;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>("SessionTracker");

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionsById> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionSets> = $r2;

        r0.<org.apache.zookeeper.server.SessionTrackerImpl: long nextSessionId> = 0L;

        r0.<org.apache.zookeeper.server.SessionTrackerImpl: boolean running> = 1;

        r0.<org.apache.zookeeper.server.SessionTrackerImpl: org.apache.zookeeper.server.SessionTracker$SessionExpirer expirer> = r3;

        r0.<org.apache.zookeeper.server.SessionTrackerImpl: int expirationInterval> = i0;

        r0.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.concurrent.ConcurrentHashMap sessionsWithTimeout> = r4;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = specialinvoke r0.<org.apache.zookeeper.server.SessionTrackerImpl: long roundToInterval(long)>($l1);

        r0.<org.apache.zookeeper.server.SessionTrackerImpl: long nextExpirationTime> = $l2;

        $l4 = staticinvoke <org.apache.zookeeper.server.SessionTrackerImpl: long initializeNextSession(long)>(l3);

        r0.<org.apache.zookeeper.server.SessionTrackerImpl: long nextSessionId> = $l4;

        $r5 = virtualinvoke r4.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r9 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.Long) $r9;

        $l5 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

        $r11 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.lang.Integer) $r11;

        $i6 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<org.apache.zookeeper.server.SessionTrackerImpl: void addSession(long,int)>($l5, $i6);

        goto label1;

     label2:
        return;
    }

    public synchronized void dumpSessions(java.io.PrintWriter)
    {
        java.util.Date $r14;
        java.util.HashMap $r2, $r4, $r9, $r15;
        long $l1, $l3;
        org.apache.zookeeper.server.SessionTrackerImpl r1;
        org.apache.zookeeper.server.SessionTrackerImpl$SessionSet $r12, $r18;
        java.util.ArrayList $r3;
        java.util.HashSet $r13, $r19;
        java.lang.Long $r8, $r10, $r16;
        int $i0, $i2;
        java.lang.String $r23;
        boolean $z0, $z1;
        java.io.PrintWriter r0;
        java.util.Iterator $r6, $r20;
        java.util.Set $r5;
        org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl r22;
        java.lang.Object $r7, $r11, $r17, $r21;

        r1 := @this: org.apache.zookeeper.server.SessionTrackerImpl;

        r0 := @parameter0: java.io.PrintWriter;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Session Sets (");

        $r2 = r1.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionSets>;

        $i0 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("):");

        $r3 = new java.util.ArrayList;

        $r4 = r1.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionSets>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Set keySet()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r3);

        $r6 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.Long) $r7;

        $l1 = virtualinvoke $r8.<java.lang.Long: long longValue()>();

        $r9 = r1.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionSets>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r11 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r10);

        $r12 = (org.apache.zookeeper.server.SessionTrackerImpl$SessionSet) $r11;

        $r13 = $r12.<org.apache.zookeeper.server.SessionTrackerImpl$SessionSet: java.util.HashSet sessions>;

        $i2 = virtualinvoke $r13.<java.util.HashSet: int size()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" expire at ");

        $r14 = new java.util.Date;

        specialinvoke $r14.<java.util.Date: void <init>(long)>($l1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.Object)>($r14);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r15 = r1.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionSets>;

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r17 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r16);

        $r18 = (org.apache.zookeeper.server.SessionTrackerImpl$SessionSet) $r17;

        $r19 = $r18.<org.apache.zookeeper.server.SessionTrackerImpl$SessionSet: java.util.HashSet sessions>;

        $r20 = virtualinvoke $r19.<java.util.HashSet: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl) $r21;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("\t0x");

        $l3 = r22.<org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl: long sessionId>;

        $r23 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l3);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }

    public synchronized java.lang.String toString()
    {
        java.io.PrintWriter $r1;
        java.io.StringWriter $r0;
        java.lang.String $r3;
        org.apache.zookeeper.server.SessionTrackerImpl r2;

        r2 := @this: org.apache.zookeeper.server.SessionTrackerImpl;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.Writer)>($r0);

        virtualinvoke r2.<org.apache.zookeeper.server.SessionTrackerImpl: void dumpSessions(java.io.PrintWriter)>($r1);

        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        virtualinvoke $r1.<java.io.PrintWriter: void close()>();

        $r3 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r3;
    }

    public synchronized void run()
    {
        long $l0, $l1, $l2, $l4, $l6, $l7, $l8, $l9, $l10, $l11, $l12;
        java.util.HashMap $r2;
        org.apache.zookeeper.server.SessionTrackerImpl r0;
        org.apache.zookeeper.server.SessionTrackerImpl$SessionSet r12;
        java.util.HashSet $r5;
        byte $b3;
        java.lang.Long $r3;
        int $i5, $i13;
        boolean $z0, $z1;
        org.slf4j.Logger $r1, $r11;
        java.util.Iterator $r6;
        org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl r8;
        org.apache.zookeeper.server.SessionTracker$SessionExpirer $r9;
        java.lang.InterruptedException $r10;
        java.lang.Object $r4, $r7;

        r0 := @this: org.apache.zookeeper.server.SessionTrackerImpl;

     label1:
        $z1 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: boolean running>;

        if $z1 == 0 goto label5;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.apache.zookeeper.server.SessionTrackerImpl: long currentTime> = $l0;

        $l2 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: long nextExpirationTime>;

        $l1 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: long currentTime>;

        $b3 = $l2 cmp $l1;

        $i13 = (int) $b3;

        if $i13 <= 0 goto label2;

        $l11 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: long nextExpirationTime>;

        $l10 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: long currentTime>;

        $l12 = $l11 - $l10;

        virtualinvoke r0.<java.lang.Object: void wait(long)>($l12);

        goto label1;

     label2:
        $r2 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionSets>;

        $l4 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: long nextExpirationTime>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r3);

        r12 = (org.apache.zookeeper.server.SessionTrackerImpl$SessionSet) $r4;

        if r12 == null goto label4;

        $r5 = r12.<org.apache.zookeeper.server.SessionTrackerImpl$SessionSet: java.util.HashSet sessions>;

        $r6 = virtualinvoke $r5.<java.util.HashSet: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl) $r7;

        $l9 = r8.<org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl: long sessionId>;

        virtualinvoke r0.<org.apache.zookeeper.server.SessionTrackerImpl: void setSessionClosing(long)>($l9);

        $r9 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: org.apache.zookeeper.server.SessionTracker$SessionExpirer expirer>;

        interfaceinvoke $r9.<org.apache.zookeeper.server.SessionTracker$SessionExpirer: void expire(org.apache.zookeeper.server.SessionTracker$Session)>(r8);

        goto label3;

     label4:
        $l7 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: long nextExpirationTime>;

        $i5 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: int expirationInterval>;

        $l6 = (long) $i5;

        $l8 = $l7 + $l6;

        r0.<org.apache.zookeeper.server.SessionTrackerImpl: long nextExpirationTime> = $l8;

        goto label1;

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        $r11 = <org.apache.zookeeper.server.SessionTrackerImpl: org.slf4j.Logger LOG>;

        interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected interruption", $r10);

     label7:
        $r1 = <org.apache.zookeeper.server.SessionTrackerImpl: org.slf4j.Logger LOG>;

        interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("SessionTrackerImpl exited loop!");

        return;

        catch java.lang.InterruptedException from label1 to label5 with label6;
    }

    public synchronized boolean touchSession(long, int)
    {
        org.apache.zookeeper.server.SessionTrackerImpl r1;
        org.apache.zookeeper.server.SessionTrackerImpl$SessionSet $r16, r26, r27, $r29;
        byte $b7;
        java.lang.Long $r3, $r6, $r9, $r14;
        boolean $z0, $z1;
        org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl $r25;
        java.lang.StringBuilder $r19, $r21, $r22, $r23, $r28;
        long l0, $l1, $l3, $l4, $l5, $l6, $l8, $l9;
        java.util.HashMap $r2, $r5, $r8, $r13;
        java.util.HashSet $r11, $r15;
        int i2, $i10;
        java.lang.String $r20, $r24;
        org.slf4j.Logger $r0, $r18;
        java.lang.Object $r4, $r7, $r10;

        r1 := @this: org.apache.zookeeper.server.SessionTrackerImpl;

        l0 := @parameter0: long;

        i2 := @parameter1: int;

        $r0 = <org.apache.zookeeper.server.SessionTrackerImpl: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r0.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r18 = <org.apache.zookeeper.server.SessionTrackerImpl: org.slf4j.Logger LOG>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionTrackerImpl --- Touch session: 0x");

        $r20 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with timeout ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logTraceMessage(org.slf4j.Logger,long,java.lang.String)>($r18, 8L, $r24);

     label1:
        $r2 = r1.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionsById>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r25 = (org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl) $r4;

        if $r25 == null goto label2;

        $z1 = virtualinvoke $r25.<org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl: boolean isClosing()>();

        if $z1 == 0 goto label3;

     label2:
        return 0;

     label3:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = (long) i2;

        $l4 = $l1 + $l3;

        $l5 = specialinvoke r1.<org.apache.zookeeper.server.SessionTrackerImpl: long roundToInterval(long)>($l4);

        $l6 = $r25.<org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl: long tickTime>;

        $b7 = $l6 cmp $l5;

        $i10 = (int) $b7;

        if $i10 < 0 goto label4;

        return 1;

     label4:
        $r5 = r1.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionSets>;

        $l8 = $r25.<org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl: long tickTime>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r26 = (org.apache.zookeeper.server.SessionTrackerImpl$SessionSet) $r7;

        if r26 == null goto label5;

        $r15 = r26.<org.apache.zookeeper.server.SessionTrackerImpl$SessionSet: java.util.HashSet sessions>;

        virtualinvoke $r15.<java.util.HashSet: boolean remove(java.lang.Object)>($r25);

     label5:
        $r25.<org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl: long tickTime> = $l5;

        $r8 = r1.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionSets>;

        $l9 = $r25.<org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl: long tickTime>;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l9);

        $r10 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r9);

        $r16 = (org.apache.zookeeper.server.SessionTrackerImpl$SessionSet) $r10;

        r27 = $r16;

        if $r16 != null goto label6;

        $r29 = new org.apache.zookeeper.server.SessionTrackerImpl$SessionSet;

        specialinvoke $r29.<org.apache.zookeeper.server.SessionTrackerImpl$SessionSet: void <init>()>();

        r27 = $r29;

        $r13 = r1.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionSets>;

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r29);

     label6:
        $r11 = r27.<org.apache.zookeeper.server.SessionTrackerImpl$SessionSet: java.util.HashSet sessions>;

        virtualinvoke $r11.<java.util.HashSet: boolean add(java.lang.Object)>($r25);

        return 1;
    }

    public synchronized void setSessionClosing(long)
    {
        org.slf4j.Logger $r0, $r6;
        long l0;
        java.util.HashMap $r2;
        org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl $r11;
        org.apache.zookeeper.server.SessionTrackerImpl r1;
        java.lang.Long $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r7, $r9;
        java.lang.String $r8, $r10;
        boolean $z0;

        r1 := @this: org.apache.zookeeper.server.SessionTrackerImpl;

        l0 := @parameter0: long;

        $r0 = <org.apache.zookeeper.server.SessionTrackerImpl: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r0.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = <org.apache.zookeeper.server.SessionTrackerImpl: org.slf4j.Logger LOG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session closing: 0x");

        $r8 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r10);

     label1:
        $r2 = r1.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionsById>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r11 = (org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl) $r4;

        if $r11 != null goto label2;

        return;

     label2:
        $r11.<org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl: boolean isClosing> = 1;

        return;
    }

    public synchronized void removeSession(long)
    {
        long l0, $l1;
        java.util.HashMap $r1, $r8;
        org.apache.zookeeper.server.SessionTrackerImpl r0;
        org.apache.zookeeper.server.SessionTrackerImpl$SessionSet r11;
        java.util.HashSet $r12;
        java.lang.Long $r2, $r6, $r9;
        java.lang.String $r16, $r18;
        boolean $z0;
        org.slf4j.Logger $r7, $r14;
        java.util.concurrent.ConcurrentHashMap $r5;
        org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl r4;
        java.lang.Object $r3, $r10;
        java.lang.StringBuilder $r13, $r15, $r17;

        r0 := @this: org.apache.zookeeper.server.SessionTrackerImpl;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionsById>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r2);

        r4 = (org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl) $r3;

        $r5 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.concurrent.ConcurrentHashMap sessionsWithTimeout>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r6);

        $r7 = <org.apache.zookeeper.server.SessionTrackerImpl: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r7.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r14 = <org.apache.zookeeper.server.SessionTrackerImpl: org.slf4j.Logger LOG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionTrackerImpl --- Removing session 0x");

        $r16 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logTraceMessage(org.slf4j.Logger,long,java.lang.String)>($r14, 32L, $r18);

     label1:
        if r4 == null goto label2;

        $r8 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionSets>;

        $l1 = r4.<org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl: long tickTime>;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r10 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r9);

        r11 = (org.apache.zookeeper.server.SessionTrackerImpl$SessionSet) $r10;

        if r11 == null goto label2;

        $r12 = r11.<org.apache.zookeeper.server.SessionTrackerImpl$SessionSet: java.util.HashSet sessions>;

        virtualinvoke $r12.<java.util.HashSet: boolean remove(java.lang.Object)>(r4);

     label2:
        return;
    }

    public void shutdown()
    {
        org.slf4j.Logger $r0, $r2, $r3;
        long $l0;
        org.apache.zookeeper.server.SessionTrackerImpl r1;
        boolean $z0;

        r1 := @this: org.apache.zookeeper.server.SessionTrackerImpl;

        $r0 = <org.apache.zookeeper.server.SessionTrackerImpl: org.slf4j.Logger LOG>;

        interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Shutting down");

        r1.<org.apache.zookeeper.server.SessionTrackerImpl: boolean running> = 0;

        $r2 = <org.apache.zookeeper.server.SessionTrackerImpl: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = <org.apache.zookeeper.server.SessionTrackerImpl: org.slf4j.Logger LOG>;

        $l0 = staticinvoke <org.apache.zookeeper.server.ZooTrace: long getTextTraceLevel()>();

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logTraceMessage(org.slf4j.Logger,long,java.lang.String)>($r3, $l0, "Shutdown SessionTrackerImpl!");

     label1:
        return;
    }

    public synchronized long createSession(int)
    {
        int i0;
        long $l1, $l2, $l3;
        org.apache.zookeeper.server.SessionTrackerImpl r0;

        r0 := @this: org.apache.zookeeper.server.SessionTrackerImpl;

        i0 := @parameter0: int;

        $l1 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: long nextSessionId>;

        virtualinvoke r0.<org.apache.zookeeper.server.SessionTrackerImpl: void addSession(long,int)>($l1, i0);

        $l2 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: long nextSessionId>;

        $l3 = $l2 + 1L;

        r0.<org.apache.zookeeper.server.SessionTrackerImpl: long nextSessionId> = $l3;

        return $l2;
    }

    public synchronized void addSession(long, int)
    {
        org.apache.zookeeper.server.SessionTrackerImpl r0;
        java.lang.Integer $r3;
        java.lang.Long $r2, $r5, $r18;
        boolean $z0, $z1;
        java.util.concurrent.ConcurrentHashMap $r1;
        org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl $r16;
        java.lang.StringBuilder $r8, $r10, $r12, $r13, $r14, $r20, $r22, $r24, $r25, $r26;
        long l0;
        java.util.HashMap $r4, $r17;
        int i1;
        java.lang.String $r11, $r15, $r23, $r27;
        org.slf4j.Logger $r7, $r9, $r19, $r21;
        java.lang.Object $r6;

        r0 := @this: org.apache.zookeeper.server.SessionTrackerImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.concurrent.ConcurrentHashMap sessionsWithTimeout>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r4 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionsById>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        if $r6 != null goto label2;

        $r16 = new org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl;

        specialinvoke $r16.<org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl: void <init>(long,int,long)>(l0, i1, 0L);

        $r17 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionsById>;

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r16);

        $r19 = <org.apache.zookeeper.server.SessionTrackerImpl: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r19.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label1;

        $r21 = <org.apache.zookeeper.server.SessionTrackerImpl: org.slf4j.Logger LOG>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionTrackerImpl --- Adding session 0x");

        $r23 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logTraceMessage(org.slf4j.Logger,long,java.lang.String)>($r21, 32L, $r27);

     label1:
        goto label3;

     label2:
        $r7 = <org.apache.zookeeper.server.SessionTrackerImpl: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r7.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label3;

        $r9 = <org.apache.zookeeper.server.SessionTrackerImpl: org.slf4j.Logger LOG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionTrackerImpl --- Existing session 0x");

        $r11 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logTraceMessage(org.slf4j.Logger,long,java.lang.String)>($r9, 32L, $r15);

     label3:
        virtualinvoke r0.<org.apache.zookeeper.server.SessionTrackerImpl: boolean touchSession(long,int)>(l0, i1);

        return;
    }

    public synchronized void checkSession(long, java.lang.Object) throws org.apache.zookeeper.KeeperException$SessionExpiredException, org.apache.zookeeper.KeeperException$SessionMovedException
    {
        long l0;
        java.util.HashMap $r1;
        org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl r4;
        org.apache.zookeeper.server.SessionTrackerImpl r0;
        org.apache.zookeeper.KeeperException$SessionExpiredException $r5;
        java.lang.Long $r2;
        org.apache.zookeeper.KeeperException$SessionMovedException $r9;
        java.lang.Object $r3, $r6, r7, $r8;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.SessionTrackerImpl;

        l0 := @parameter0: long;

        r7 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionsById>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl) $r3;

        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl: boolean isClosing()>();

        if $z0 == 0 goto label2;

     label1:
        $r5 = new org.apache.zookeeper.KeeperException$SessionExpiredException;

        specialinvoke $r5.<org.apache.zookeeper.KeeperException$SessionExpiredException: void <init>()>();

        throw $r5;

     label2:
        $r6 = r4.<org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl: java.lang.Object owner>;

        if $r6 != null goto label3;

        r4.<org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl: java.lang.Object owner> = r7;

        goto label4;

     label3:
        $r8 = r4.<org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl: java.lang.Object owner>;

        if $r8 == r7 goto label4;

        $r9 = new org.apache.zookeeper.KeeperException$SessionMovedException;

        specialinvoke $r9.<org.apache.zookeeper.KeeperException$SessionMovedException: void <init>()>();

        throw $r9;

     label4:
        return;
    }

    public synchronized void setOwner(long, java.lang.Object) throws org.apache.zookeeper.KeeperException$SessionExpiredException
    {
        long l0;
        java.util.HashMap $r1;
        org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl r4;
        org.apache.zookeeper.server.SessionTrackerImpl r0;
        org.apache.zookeeper.KeeperException$SessionExpiredException $r5;
        java.lang.Long $r2;
        java.lang.Object $r3, r6;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.SessionTrackerImpl;

        l0 := @parameter0: long;

        r6 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.zookeeper.server.SessionTrackerImpl: java.util.HashMap sessionsById>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl) $r3;

        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl: boolean isClosing()>();

        if $z0 == 0 goto label2;

     label1:
        $r5 = new org.apache.zookeeper.KeeperException$SessionExpiredException;

        specialinvoke $r5.<org.apache.zookeeper.KeeperException$SessionExpiredException: void <init>()>();

        throw $r5;

     label2:
        r4.<org.apache.zookeeper.server.SessionTrackerImpl$SessionImpl: java.lang.Object owner> = r6;

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/SessionTrackerImpl;");

        <org.apache.zookeeper.server.SessionTrackerImpl: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
