class com.mycila.inject.internal.guava.collect.ForwardingMap$1 extends com.mycila.inject.internal.guava.collect.ForwardingMap$StandardEntrySet
{
    final com.mycila.inject.internal.guava.base.Supplier val$entryIteratorSupplier;
    final com.mycila.inject.internal.guava.collect.ForwardingMap this$0;

    void <init>(com.mycila.inject.internal.guava.collect.ForwardingMap, com.mycila.inject.internal.guava.base.Supplier)
    {
        com.mycila.inject.internal.guava.collect.ForwardingMap$1 r0;
        com.mycila.inject.internal.guava.collect.ForwardingMap r1;
        com.mycila.inject.internal.guava.base.Supplier r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMap$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.ForwardingMap;

        r2 := @parameter1: com.mycila.inject.internal.guava.base.Supplier;

        r0.<com.mycila.inject.internal.guava.collect.ForwardingMap$1: com.mycila.inject.internal.guava.collect.ForwardingMap this$0> = r1;

        r0.<com.mycila.inject.internal.guava.collect.ForwardingMap$1: com.mycila.inject.internal.guava.base.Supplier val$entryIteratorSupplier> = r2;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingMap$StandardEntrySet: void <init>(com.mycila.inject.internal.guava.collect.ForwardingMap)>(r1);

        return;
    }

    public java.util.Iterator iterator()
    {
        com.mycila.inject.internal.guava.collect.ForwardingMap$1 r0;
        com.mycila.inject.internal.guava.base.Supplier $r1;
        java.util.Iterator $r3;
        java.lang.Object $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingMap$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ForwardingMap$1: com.mycila.inject.internal.guava.base.Supplier val$entryIteratorSupplier>;

        $r2 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.base.Supplier: java.lang.Object get()>();

        $r3 = (java.util.Iterator) $r2;

        return $r3;
    }
}
