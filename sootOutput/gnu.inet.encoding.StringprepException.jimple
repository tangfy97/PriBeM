public class gnu.inet.encoding.StringprepException extends java.lang.Exception
{
    public static java.lang.String CONTAINS_UNASSIGNED;
    public static java.lang.String CONTAINS_PROHIBITED;
    public static java.lang.String BIDI_BOTHRAL;
    public static java.lang.String BIDI_LTRAL;

    static void <clinit>()
    {
        <gnu.inet.encoding.StringprepException: java.lang.String CONTAINS_UNASSIGNED> = "Contains unassigned code points.";

        <gnu.inet.encoding.StringprepException: java.lang.String CONTAINS_PROHIBITED> = "Contains prohibited code points.";

        <gnu.inet.encoding.StringprepException: java.lang.String BIDI_BOTHRAL> = "Contains both R and AL code points.";

        <gnu.inet.encoding.StringprepException: java.lang.String BIDI_LTRAL> = "Leading and trailing code points not both R or AL.";

        return;
    }

    public void <init>(java.lang.String)
    {
        gnu.inet.encoding.StringprepException r0;
        java.lang.String r1;

        r0 := @this: gnu.inet.encoding.StringprepException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        return;
    }
}
