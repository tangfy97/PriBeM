public class org.springframework.beans.factory.config.MapFactoryBean extends org.springframework.beans.factory.config.AbstractFactoryBean
{
    private java.util.Map sourceMap;
    private java.lang.Class targetMapClass;

    public void <init>()
    {
        org.springframework.beans.factory.config.MapFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.MapFactoryBean;

        specialinvoke r0.<org.springframework.beans.factory.config.AbstractFactoryBean: void <init>()>();

        return;
    }

    public void setSourceMap(java.util.Map)
    {
        org.springframework.beans.factory.config.MapFactoryBean r0;
        java.util.Map r1;

        r0 := @this: org.springframework.beans.factory.config.MapFactoryBean;

        r1 := @parameter0: java.util.Map;

        r0.<org.springframework.beans.factory.config.MapFactoryBean: java.util.Map sourceMap> = r1;

        return;
    }

    public void setTargetMapClass(java.lang.Class)
    {
        org.springframework.beans.factory.config.MapFactoryBean r2;
        java.lang.Class r0, $r1;
        java.lang.IllegalArgumentException $r3, $r4;
        boolean $z0;

        r2 := @this: org.springframework.beans.factory.config.MapFactoryBean;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'targetMapClass\' must not be null");

        throw $r4;

     label1:
        $r1 = class "Ljava/util/Map;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'targetMapClass\' must implement [java.util.Map]");

        throw $r3;

     label2:
        r2.<org.springframework.beans.factory.config.MapFactoryBean: java.lang.Class targetMapClass> = r0;

        return;
    }

    public java.lang.Class getObjectType()
    {
        org.springframework.beans.factory.config.MapFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.MapFactoryBean;

        return class "Ljava/util/Map;";
    }

    protected java.util.Map createInstance()
    {
        java.util.LinkedHashMap $r3;
        org.springframework.beans.factory.config.MapFactoryBean r0;
        java.util.Map $r1, $r4, $r7, $r16, r22;
        int $i0;
        org.springframework.beans.TypeConverter $r6;
        boolean $z0;
        java.util.Map$Entry r11;
        java.util.Iterator $r9;
        java.util.Set $r8;
        java.lang.IllegalArgumentException $r21;
        java.lang.Class $r2, $r5, $r17, $r18, $r19, r23, r24;
        java.lang.Object $r10, $r12, $r13, $r14, $r15, $r20;

        r0 := @this: org.springframework.beans.factory.config.MapFactoryBean;

        $r1 = r0.<org.springframework.beans.factory.config.MapFactoryBean: java.util.Map sourceMap>;

        if $r1 != null goto label1;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'sourceMap\' is required");

        throw $r21;

     label1:
        $r2 = r0.<org.springframework.beans.factory.config.MapFactoryBean: java.lang.Class targetMapClass>;

        if $r2 == null goto label2;

        $r19 = r0.<org.springframework.beans.factory.config.MapFactoryBean: java.lang.Class targetMapClass>;

        $r20 = staticinvoke <org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>($r19);

        r22 = (java.util.Map) $r20;

        goto label3;

     label2:
        $r3 = new java.util.LinkedHashMap;

        $r4 = r0.<org.springframework.beans.factory.config.MapFactoryBean: java.util.Map sourceMap>;

        $i0 = interfaceinvoke $r4.<java.util.Map: int size()>();

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>(int)>($i0);

        r22 = $r3;

     label3:
        r23 = null;

        r24 = null;

        $r5 = r0.<org.springframework.beans.factory.config.MapFactoryBean: java.lang.Class targetMapClass>;

        if $r5 == null goto label4;

        $r17 = r0.<org.springframework.beans.factory.config.MapFactoryBean: java.lang.Class targetMapClass>;

        r23 = staticinvoke <org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyType(java.lang.Class)>($r17);

        $r18 = r0.<org.springframework.beans.factory.config.MapFactoryBean: java.lang.Class targetMapClass>;

        r24 = staticinvoke <org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueType(java.lang.Class)>($r18);

     label4:
        if r23 != null goto label5;

        if r24 == null goto label8;

     label5:
        $r6 = virtualinvoke r0.<org.springframework.beans.factory.config.MapFactoryBean: org.springframework.beans.TypeConverter getBeanTypeConverter()>();

        $r7 = r0.<org.springframework.beans.factory.config.MapFactoryBean: java.util.Map sourceMap>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

        goto label7;

     label6:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r10;

        $r12 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = interfaceinvoke $r6.<org.springframework.beans.TypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>($r12, r23);

        $r14 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = interfaceinvoke $r6.<org.springframework.beans.TypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>($r14, r24);

        interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r15);

     label7:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label6;

        goto label9;

     label8:
        $r16 = r0.<org.springframework.beans.factory.config.MapFactoryBean: java.util.Map sourceMap>;

        interfaceinvoke r22.<java.util.Map: void putAll(java.util.Map)>($r16);

     label9:
        return r22;
    }

    protected volatile java.lang.Object createInstance() throws java.lang.Exception
    {
        org.springframework.beans.factory.config.MapFactoryBean r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.beans.factory.config.MapFactoryBean;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.config.MapFactoryBean: java.util.Map createInstance()>();

        return $r1;
    }
}
