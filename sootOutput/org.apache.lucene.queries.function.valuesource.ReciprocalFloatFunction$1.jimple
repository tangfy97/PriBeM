class org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1 extends org.apache.lucene.queries.function.docvalues.FloatDocValues
{
    final org.apache.lucene.queries.function.FunctionValues val$vals;
    final org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction this$0;

    void <init>(org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction, org.apache.lucene.queries.function.ValueSource, org.apache.lucene.queries.function.FunctionValues)
    {
        org.apache.lucene.queries.function.ValueSource r3;
        org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1 r0;
        org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction r1;
        org.apache.lucene.queries.function.FunctionValues r2;

        r0 := @this: org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1;

        r1 := @parameter0: org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction;

        r3 := @parameter1: org.apache.lucene.queries.function.ValueSource;

        r2 := @parameter2: org.apache.lucene.queries.function.FunctionValues;

        r0.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1: org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction this$0> = r1;

        r0.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1: org.apache.lucene.queries.function.FunctionValues val$vals> = r2;

        specialinvoke r0.<org.apache.lucene.queries.function.docvalues.FloatDocValues: void <init>(org.apache.lucene.queries.function.ValueSource)>(r3);

        return;
    }

    public float floatVal(int)
    {
        org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction $r1, $r2, $r4;
        org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1 r0;
        int i0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        org.apache.lucene.queries.function.FunctionValues $r3;

        r0 := @this: org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1: org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction this$0>;

        $f0 = $r1.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction: float a>;

        $r2 = r0.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1: org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction this$0>;

        $f1 = $r2.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction: float m>;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1: org.apache.lucene.queries.function.FunctionValues val$vals>;

        $f2 = virtualinvoke $r3.<org.apache.lucene.queries.function.FunctionValues: float floatVal(int)>(i0);

        $f4 = $f1 * $f2;

        $r4 = r0.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1: org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction this$0>;

        $f3 = $r4.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction: float b>;

        $f5 = $f4 + $f3;

        $f6 = $f0 / $f5;

        return $f6;
    }

    public java.lang.String toString(int)
    {
        org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction $r2, $r6, $r14;
        org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1 r1;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r9;
        java.lang.String $r3, $r10, $r17;
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r0, $r4, $r5, $r7, $r8, $r11, $r12, $r13, $r15, $r16;

        r1 := @this: org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1: org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction this$0>;

        $f0 = $r2.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction: float a>;

        $r3 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/(");

        $r6 = r1.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1: org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction this$0>;

        $f1 = $r6.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction: float m>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*float(");

        $r9 = r1.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1: org.apache.lucene.queries.function.FunctionValues val$vals>;

        $r10 = virtualinvoke $r9.<org.apache.lucene.queries.function.FunctionValues: java.lang.String toString(int)>(i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

        $r14 = r1.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction$1: org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction this$0>;

        $f2 = $r14.<org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction: float b>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }
}
