public class com.mongodb.io.ByteBufferOutputStream extends java.io.OutputStream
{
    final java.util.List _lst;
    final com.mongodb.io.ByteBufferFactory _factory;
    static final com.mongodb.io.ByteBufferFactory _defaultFactory;

    public void <init>()
    {
        com.mongodb.io.ByteBufferOutputStream r0;
        com.mongodb.io.ByteBufferFactory $r1;

        r0 := @this: com.mongodb.io.ByteBufferOutputStream;

        $r1 = <com.mongodb.io.ByteBufferOutputStream: com.mongodb.io.ByteBufferFactory _defaultFactory>;

        specialinvoke r0.<com.mongodb.io.ByteBufferOutputStream: void <init>(com.mongodb.io.ByteBufferFactory)>($r1);

        return;
    }

    public void <init>(int)
    {
        com.mongodb.io.ByteBufferOutputStream r0;
        int i0;
        com.mongodb.io.ByteBufferFactory$SimpleHeapByteBufferFactory $r1;

        r0 := @this: com.mongodb.io.ByteBufferOutputStream;

        i0 := @parameter0: int;

        $r1 = new com.mongodb.io.ByteBufferFactory$SimpleHeapByteBufferFactory;

        specialinvoke $r1.<com.mongodb.io.ByteBufferFactory$SimpleHeapByteBufferFactory: void <init>(int)>(i0);

        specialinvoke r0.<com.mongodb.io.ByteBufferOutputStream: void <init>(com.mongodb.io.ByteBufferFactory)>($r1);

        return;
    }

    public void <init>(com.mongodb.io.ByteBufferFactory)
    {
        com.mongodb.io.ByteBufferOutputStream r0;
        com.mongodb.io.ByteBufferFactory r2;
        java.util.ArrayList $r1;

        r0 := @this: com.mongodb.io.ByteBufferOutputStream;

        r2 := @parameter0: com.mongodb.io.ByteBufferFactory;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.mongodb.io.ByteBufferOutputStream: java.util.List _lst> = $r1;

        r0.<com.mongodb.io.ByteBufferOutputStream: com.mongodb.io.ByteBufferFactory _factory> = r2;

        return;
    }

    public void close()
    {
        com.mongodb.io.ByteBufferOutputStream r0;

        r0 := @this: com.mongodb.io.ByteBufferOutputStream;

        return;
    }

    public void flush()
    {
        com.mongodb.io.ByteBufferOutputStream r0;

        r0 := @this: com.mongodb.io.ByteBufferOutputStream;

        return;
    }

    public void write(byte[])
    {
        com.mongodb.io.ByteBufferOutputStream r0;
        int $i0;
        byte[] r1;

        r0 := @this: com.mongodb.io.ByteBufferOutputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<com.mongodb.io.ByteBufferOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void write(byte[], int, int)
    {
        byte[] r2;
        java.nio.ByteBuffer $r1;
        com.mongodb.io.ByteBufferOutputStream r0;
        int i0, $i1, $i2, i3, $i4, $i5;

        r0 := @this: com.mongodb.io.ByteBufferOutputStream;

        r2 := @parameter0: byte[];

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = specialinvoke r0.<com.mongodb.io.ByteBufferOutputStream: java.nio.ByteBuffer _need(int)>(1);

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i1);

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(r2, i3, $i2);

        if $i2 != i0 goto label1;

        return;

     label1:
        $i5 = i3 + $i2;

        $i4 = i0 - $i2;

        virtualinvoke r0.<com.mongodb.io.ByteBufferOutputStream: void write(byte[],int,int)>(r2, $i5, $i4);

        return;
    }

    public void write(int)
    {
        com.mongodb.io.ByteBufferOutputStream r0;
        byte $b1;
        int i0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.mongodb.io.ByteBufferOutputStream;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.mongodb.io.ByteBufferOutputStream: java.nio.ByteBuffer _need(int)>(1);

        $b1 = (byte) i0;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b1);

        return;
    }

    public java.util.List getBuffers()
    {
        com.mongodb.io.ByteBufferOutputStream r0;
        java.util.List $r1;

        r0 := @this: com.mongodb.io.ByteBufferOutputStream;

        $r1 = r0.<com.mongodb.io.ByteBufferOutputStream: java.util.List _lst>;

        return $r1;
    }

    public java.util.List getBuffers(boolean)
    {
        java.util.Iterator $r3;
        java.nio.ByteBuffer r5;
        com.mongodb.io.ByteBufferOutputStream r0;
        java.util.List $r1, $r2;
        java.lang.Object $r4;
        boolean z0, $z1;

        r0 := @this: com.mongodb.io.ByteBufferOutputStream;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        $r2 = r0.<com.mongodb.io.ByteBufferOutputStream: java.util.List _lst>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.nio.ByteBuffer) $r4;

        virtualinvoke r5.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        goto label1;

     label2:
        $r1 = r0.<com.mongodb.io.ByteBufferOutputStream: java.util.List _lst>;

        return $r1;
    }

    private java.nio.ByteBuffer _need(int)
    {
        java.nio.ByteBuffer r5, $r8, $r12, $r15, $r18;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6;
        com.mongodb.io.ByteBufferFactory $r6, $r13;
        com.mongodb.io.ByteBufferOutputStream r0;
        java.util.List $r1, $r2, $r3, $r7, $r9, $r10, $r14, $r16;
        java.lang.Object $r4, $r11, $r17;

        r0 := @this: com.mongodb.io.ByteBufferOutputStream;

        i3 := @parameter0: int;

        $r1 = r0.<com.mongodb.io.ByteBufferOutputStream: java.util.List _lst>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r14 = r0.<com.mongodb.io.ByteBufferOutputStream: java.util.List _lst>;

        $r13 = r0.<com.mongodb.io.ByteBufferOutputStream: com.mongodb.io.ByteBufferFactory _factory>;

        $r15 = interfaceinvoke $r13.<com.mongodb.io.ByteBufferFactory: java.nio.ByteBuffer get()>();

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r16 = r0.<com.mongodb.io.ByteBufferOutputStream: java.util.List _lst>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = (java.nio.ByteBuffer) $r17;

        return $r18;

     label1:
        $r3 = r0.<com.mongodb.io.ByteBufferOutputStream: java.util.List _lst>;

        $r2 = r0.<com.mongodb.io.ByteBufferOutputStream: java.util.List _lst>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i2);

        r5 = (java.nio.ByteBuffer) $r4;

        $i4 = virtualinvoke r5.<java.nio.ByteBuffer: int remaining()>();

        if i3 > $i4 goto label2;

        return r5;

     label2:
        $r7 = r0.<com.mongodb.io.ByteBufferOutputStream: java.util.List _lst>;

        $r6 = r0.<com.mongodb.io.ByteBufferOutputStream: com.mongodb.io.ByteBufferFactory _factory>;

        $r8 = interfaceinvoke $r6.<com.mongodb.io.ByteBufferFactory: java.nio.ByteBuffer get()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r10 = r0.<com.mongodb.io.ByteBufferOutputStream: java.util.List _lst>;

        $r9 = r0.<com.mongodb.io.ByteBufferOutputStream: java.util.List _lst>;

        $i5 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i6 = $i5 - 1;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i6);

        $r12 = (java.nio.ByteBuffer) $r11;

        return $r12;
    }

    static void <clinit>()
    {
        com.mongodb.io.ByteBufferFactory$SimpleHeapByteBufferFactory $r0;

        $r0 = new com.mongodb.io.ByteBufferFactory$SimpleHeapByteBufferFactory;

        specialinvoke $r0.<com.mongodb.io.ByteBufferFactory$SimpleHeapByteBufferFactory: void <init>(int)>(4096);

        <com.mongodb.io.ByteBufferOutputStream: com.mongodb.io.ByteBufferFactory _defaultFactory> = $r0;

        return;
    }
}
