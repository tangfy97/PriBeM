class com.sun.xml.bind.v2.model.impl.ElementInfoImpl extends com.sun.xml.bind.v2.model.impl.TypeInfoImpl implements com.sun.xml.bind.v2.model.core.ElementInfo
{
    private final javax.xml.namespace.QName tagName;
    private final com.sun.xml.bind.v2.model.core.NonElement contentType;
    private final java.lang.Object tOfJAXBElementT;
    private final java.lang.Object elementType;
    private final com.sun.xml.bind.v2.model.core.ClassInfo scope;
    private final javax.xml.bind.'annotation'.XmlElementDecl anno;
    private com.sun.xml.bind.v2.model.impl.ElementInfoImpl substitutionHead;
    private com.sun.istack.FinalArrayList substitutionMembers;
    private final java.lang.Object method;
    private final com.sun.xml.bind.v2.model.core.Adapter adapter;
    private final boolean isCollection;
    private final com.sun.xml.bind.v2.model.core.ID id;
    private final com.sun.xml.bind.v2.model.impl.ElementInfoImpl$PropertyImpl property;
    private final javax.activation.MimeType expectedMimeType;
    private final boolean inlineBinary;
    private final javax.xml.namespace.QName schemaType;
    static final boolean $assertionsDisabled;

    public void <init>(com.sun.xml.bind.v2.model.impl.ModelBuilder, com.sun.xml.bind.v2.model.impl.RegistryInfoImpl, java.lang.Object) throws com.sun.xml.bind.v2.runtime.IllegalAnnotationException
    {
        javax.xml.bind.'annotation'.XmlElementDecl $r6, $r14, $r24, $r50, $r80, $r81, $r83;
        javax.xml.namespace.QName $r15, $r43;
        com.sun.xml.bind.v2.model.core.ID $r33;
        java.lang.Object[] $r17, $r45, $r75;
        java.lang.AssertionError $r82, $r84;
        java.lang.String $r48, $r49, $r78, $r79;
        com.sun.xml.bind.v2.model.impl.ModelBuilder r1;
        com.sun.xml.bind.v2.model.core.Adapter $r19, $r20, $r65, $r71, r85;
        com.sun.xml.bind.v2.model.nav.Navigator $r7, $r9, $r11, $r16, $r18, $r26, $r27, $r29, $r47, $r51, $r53, $r56, $r67, $r70, $r73, $r77;
        com.sun.xml.bind.v2.model.impl.RegistryInfoImpl r2;
        com.sun.xml.bind.v2.model.'annotation'.AnnotationReader $r4, $r23, $r37, $r39, $r61, $r63, $r72;
        javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter r86;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl $r66, $r69;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl$PropertyImpl $r34, $r35, $r40;
        com.sun.xml.bind.v2.model.core.NonElement $r22, $r31, $r58, $r60;
        javax.xml.bind.'annotation'.XmlAttachmentRef r87;
        com.sun.xml.bind.v2.model.impl.Messages $r46, $r76;
        java.lang.'annotation'.Annotation $r5, $r62, $r64;
        com.sun.xml.bind.v2.runtime.IllegalAnnotationException $r44, $r74;
        com.sun.xml.bind.v2.model.core.ClassInfo $r32;
        javax.activation.MimeType $r36;
        int $i0, $i1;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;
        java.lang.Object r3, $r8, $r10, $r12, $r13, $r21, $r25, $r28, $r30, $r38, $r41, $r42, $r52, $r54, $r55, $r57, $r59, $r68, $r88;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.model.impl.ModelBuilder;

        r2 := @parameter1: com.sun.xml.bind.v2.model.impl.RegistryInfoImpl;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<com.sun.xml.bind.v2.model.impl.TypeInfoImpl: void <init>(com.sun.xml.bind.v2.model.impl.ModelBuilder,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(r1, r2);

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: java.lang.Object method> = r3;

        $r4 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader()>();

        $r5 = interfaceinvoke $r4.<com.sun.xml.bind.v2.model.'annotation'.AnnotationReader: java.lang.'annotation'.Annotation getMethodAnnotation(java.lang.Class,java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(class "Ljavax/xml/bind/annotation/XmlElementDecl;", r3, r0);

        $r6 = (javax.xml.bind.'annotation'.XmlElementDecl) $r5;

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.bind.'annotation'.XmlElementDecl anno> = $r6;

        $z0 = <com.sun.xml.bind.v2.model.impl.ElementInfoImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r83 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.bind.'annotation'.XmlElementDecl anno>;

        if $r83 != null goto label01;

        $r84 = new java.lang.AssertionError;

        specialinvoke $r84.<java.lang.AssertionError: void <init>()>();

        throw $r84;

     label01:
        $z1 = <com.sun.xml.bind.v2.model.impl.ElementInfoImpl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $r81 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.bind.'annotation'.XmlElementDecl anno>;

        $z5 = $r81 instanceof com.sun.xml.bind.v2.model.'annotation'.Locatable;

        if $z5 != 0 goto label02;

        $r82 = new java.lang.AssertionError;

        specialinvoke $r82.<java.lang.AssertionError: void <init>()>();

        throw $r82;

     label02:
        $r7 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r8 = interfaceinvoke $r7.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object getReturnType(java.lang.Object)>(r3);

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: java.lang.Object elementType> = $r8;

        $r9 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r10 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: java.lang.Object elementType>;

        $r11 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r12 = interfaceinvoke $r11.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object asDecl(java.lang.Class)>(class "Ljavax/xml/bind/JAXBElement;");

        $r13 = interfaceinvoke $r9.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object getBaseClass(java.lang.Object,java.lang.Object)>($r10, $r12);

        if $r13 != null goto label03;

        $r74 = new com.sun.xml.bind.v2.runtime.IllegalAnnotationException;

        $r76 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages XML_ELEMENT_MAPPING_ON_NON_IXMLELEMENT_METHOD>;

        $r75 = newarray (java.lang.Object)[1];

        $r77 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r78 = interfaceinvoke $r77.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.String getMethodName(java.lang.Object)>(r3);

        $r75[0] = $r78;

        $r79 = virtualinvoke $r76.<com.sun.xml.bind.v2.model.impl.Messages: java.lang.String format(java.lang.Object[])>($r75);

        $r80 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.bind.'annotation'.XmlElementDecl anno>;

        specialinvoke $r74.<com.sun.xml.bind.v2.runtime.IllegalAnnotationException: void <init>(java.lang.String,java.lang.'annotation'.Annotation)>($r79, $r80);

        throw $r74;

     label03:
        $r14 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.bind.'annotation'.XmlElementDecl anno>;

        $r15 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.namespace.QName parseElementName(javax.xml.bind.'annotation'.XmlElementDecl)>($r14);

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.namespace.QName tagName> = $r15;

        $r16 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r17 = interfaceinvoke $r16.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object[] getMethodParameters(java.lang.Object)>(r3);

        r85 = null;

        $i0 = lengthof $r17;

        if $i0 <= 0 goto label05;

        $r61 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader()>();

        $r62 = interfaceinvoke $r61.<com.sun.xml.bind.v2.model.'annotation'.AnnotationReader: java.lang.'annotation'.Annotation getMethodAnnotation(java.lang.Class,java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(class "Ljavax/xml/bind/annotation/adapters/XmlJavaTypeAdapter;", r3, r0);

        r86 = (javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter) $r62;

        if r86 == null goto label04;

        $r71 = new com.sun.xml.bind.v2.model.core.Adapter;

        $r72 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader()>();

        $r73 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        specialinvoke $r71.<com.sun.xml.bind.v2.model.core.Adapter: void <init>(javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter,com.sun.xml.bind.v2.model.'annotation'.AnnotationReader,com.sun.xml.bind.v2.model.nav.Navigator)>(r86, $r72, $r73);

        r85 = $r71;

        goto label05;

     label04:
        $r63 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader()>();

        $r64 = interfaceinvoke $r63.<com.sun.xml.bind.v2.model.'annotation'.AnnotationReader: java.lang.'annotation'.Annotation getMethodAnnotation(java.lang.Class,java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(class "Ljavax/xml/bind/annotation/XmlAttachmentRef;", r3, r0);

        r87 = (javax.xml.bind.'annotation'.XmlAttachmentRef) $r64;

        if r87 == null goto label05;

        staticinvoke <com.sun.xml.bind.v2.TODO: void prototype(java.lang.String)>("in Annotation Processing swaRefAdapter isn\'t avaialble, so this returns null");

        $r65 = new com.sun.xml.bind.v2.model.core.Adapter;

        $r66 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl owner>;

        $r67 = $r66.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.nav.Navigator nav>;

        $r68 = interfaceinvoke $r67.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object asDecl(java.lang.Class)>(class "Lcom/sun/xml/bind/v2/runtime/SwaRefAdapter;");

        $r69 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl owner>;

        $r70 = $r69.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.nav.Navigator nav>;

        specialinvoke $r65.<com.sun.xml.bind.v2.model.core.Adapter: void <init>(java.lang.Object,com.sun.xml.bind.v2.model.nav.Navigator)>($r68, $r70);

        r85 = $r65;

     label05:
        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.Adapter adapter> = r85;

        $i1 = lengthof $r17;

        if $i1 <= 0 goto label06;

        $r88 = $r17[0];

        goto label07;

     label06:
        $r18 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r88 = interfaceinvoke $r18.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object getTypeArgument(java.lang.Object,int)>($r13, 0);

     label07:
        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: java.lang.Object tOfJAXBElementT> = $r88;

        $r19 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.Adapter adapter>;

        if $r19 != null goto label10;

        $r51 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r52 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: java.lang.Object tOfJAXBElementT>;

        $r53 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r54 = interfaceinvoke $r53.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object asDecl(java.lang.Class)>(class "Ljava/util/List;");

        $r55 = interfaceinvoke $r51.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object getBaseClass(java.lang.Object,java.lang.Object)>($r52, $r54);

        if $r55 != null goto label08;

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: boolean isCollection> = 0;

        $r59 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: java.lang.Object tOfJAXBElementT>;

        $r60 = virtualinvoke r1.<com.sun.xml.bind.v2.model.impl.ModelBuilder: com.sun.xml.bind.v2.model.core.NonElement getTypeInfo(java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r59, r0);

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.NonElement contentType> = $r60;

        goto label09;

     label08:
        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: boolean isCollection> = 1;

        $r56 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r57 = interfaceinvoke $r56.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object getTypeArgument(java.lang.Object,int)>($r55, 0);

        $r58 = virtualinvoke r1.<com.sun.xml.bind.v2.model.impl.ModelBuilder: com.sun.xml.bind.v2.model.core.NonElement getTypeInfo(java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r57, r0);

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.NonElement contentType> = $r58;

     label09:
        goto label11;

     label10:
        $r20 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.Adapter adapter>;

        $r21 = $r20.<com.sun.xml.bind.v2.model.core.Adapter: java.lang.Object defaultType>;

        $r22 = virtualinvoke r1.<com.sun.xml.bind.v2.model.impl.ModelBuilder: com.sun.xml.bind.v2.model.core.NonElement getTypeInfo(java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r21, r0);

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.NonElement contentType> = $r22;

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: boolean isCollection> = 0;

     label11:
        $r23 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader()>();

        $r24 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.bind.'annotation'.XmlElementDecl anno>;

        $r25 = interfaceinvoke $r23.<com.sun.xml.bind.v2.model.'annotation'.AnnotationReader: java.lang.Object getClassValue(java.lang.'annotation'.Annotation,java.lang.String)>($r24, "scope");

        $r26 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r27 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r28 = interfaceinvoke $r27.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object ref(java.lang.Class)>(class "Ljavax/xml/bind/annotation/XmlElementDecl$GLOBAL;");

        $z2 = interfaceinvoke $r26.<com.sun.xml.bind.v2.model.nav.Navigator: boolean isSameType(java.lang.Object,java.lang.Object)>($r25, $r28);

        if $z2 == 0 goto label12;

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.ClassInfo scope> = null;

        goto label14;

     label12:
        $r29 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r30 = interfaceinvoke $r29.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object asDecl(java.lang.Object)>($r25);

        $r31 = virtualinvoke r1.<com.sun.xml.bind.v2.model.impl.ModelBuilder: com.sun.xml.bind.v2.model.core.NonElement getClassInfo(java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r30, r0);

        $z3 = $r31 instanceof com.sun.xml.bind.v2.model.core.ClassInfo;

        if $z3 != 0 goto label13;

        $r44 = new com.sun.xml.bind.v2.runtime.IllegalAnnotationException;

        $r46 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages SCOPE_IS_NOT_COMPLEXTYPE>;

        $r45 = newarray (java.lang.Object)[1];

        $r47 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r48 = interfaceinvoke $r47.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.String getTypeName(java.lang.Object)>($r25);

        $r45[0] = $r48;

        $r49 = virtualinvoke $r46.<com.sun.xml.bind.v2.model.impl.Messages: java.lang.String format(java.lang.Object[])>($r45);

        $r50 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.bind.'annotation'.XmlElementDecl anno>;

        specialinvoke $r44.<com.sun.xml.bind.v2.runtime.IllegalAnnotationException: void <init>(java.lang.String,java.lang.'annotation'.Annotation)>($r49, $r50);

        throw $r44;

     label13:
        $r32 = (com.sun.xml.bind.v2.model.core.ClassInfo) $r31;

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.ClassInfo scope> = $r32;

     label14:
        $r33 = specialinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.ID calcId()>();

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.ID id> = $r33;

        $r34 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.impl.ElementInfoImpl$PropertyImpl createPropertyImpl()>();

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.impl.ElementInfoImpl$PropertyImpl property> = $r34;

        $r35 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.impl.ElementInfoImpl$PropertyImpl property>;

        $r36 = staticinvoke <com.sun.xml.bind.v2.model.impl.Util: javax.activation.MimeType calcExpectedMediaType(com.sun.xml.bind.v2.model.'annotation'.AnnotationSource,com.sun.xml.bind.v2.model.impl.ModelBuilder)>($r35, r1);

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.activation.MimeType expectedMimeType> = $r36;

        $r37 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader()>();

        $r38 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: java.lang.Object method>;

        $z4 = interfaceinvoke $r37.<com.sun.xml.bind.v2.model.'annotation'.AnnotationReader: boolean hasMethodAnnotation(java.lang.Class,java.lang.Object)>(class "Ljavax/xml/bind/annotation/XmlInlineBinaryData;", $r38);

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: boolean inlineBinary> = $z4;

        $r39 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader()>();

        $r40 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.impl.ElementInfoImpl$PropertyImpl property>;

        $r41 = r2.<com.sun.xml.bind.v2.model.impl.RegistryInfoImpl: java.lang.Object registryClass>;

        $r42 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: java.lang.Object getContentInMemoryType()>();

        $r43 = staticinvoke <com.sun.xml.bind.v2.model.impl.Util: javax.xml.namespace.QName calcSchemaType(com.sun.xml.bind.v2.model.'annotation'.AnnotationReader,com.sun.xml.bind.v2.model.'annotation'.AnnotationSource,java.lang.Object,java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r39, $r40, $r41, $r42, r0);

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.namespace.QName schemaType> = $r43;

        return;
    }

    final javax.xml.namespace.QName parseElementName(javax.xml.bind.'annotation'.XmlElementDecl)
    {
        com.sun.xml.bind.v2.model.'annotation'.AnnotationReader $r4;
        java.lang.String $r1, $r2, r11, $r13, $r14;
        javax.xml.bind.'annotation'.XmlElementDecl r0;
        boolean $z0;
        com.sun.xml.bind.v2.model.impl.ModelBuilder $r10;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r3;
        java.lang.'annotation'.Annotation $r8;
        java.lang.Object $r6, $r7;
        javax.xml.namespace.QName $r12;
        javax.xml.bind.'annotation'.XmlSchema r9;
        com.sun.xml.bind.v2.model.nav.Navigator $r5;

        r3 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        r0 := @parameter0: javax.xml.bind.'annotation'.XmlElementDecl;

        $r1 = interfaceinvoke r0.<javax.xml.bind.'annotation'.XmlElementDecl: java.lang.String name()>();

        $r2 = interfaceinvoke r0.<javax.xml.bind.'annotation'.XmlElementDecl: java.lang.String namespace()>();

        r11 = $r2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("##default");

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r3.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader()>();

        $r5 = virtualinvoke r3.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r6 = r3.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: java.lang.Object method>;

        $r7 = interfaceinvoke $r5.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object getDeclaringClassForMethod(java.lang.Object)>($r6);

        $r8 = interfaceinvoke $r4.<com.sun.xml.bind.v2.model.'annotation'.AnnotationReader: java.lang.'annotation'.Annotation getPackageAnnotation(java.lang.Class,java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(class "Ljavax/xml/bind/annotation/XmlSchema;", $r7, r3);

        r9 = (javax.xml.bind.'annotation'.XmlSchema) $r8;

        if r9 == null goto label1;

        r11 = interfaceinvoke r9.<javax.xml.bind.'annotation'.XmlSchema: java.lang.String namespace()>();

        goto label2;

     label1:
        $r10 = r3.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.impl.ModelBuilder builder>;

        r11 = $r10.<com.sun.xml.bind.v2.model.impl.ModelBuilder: java.lang.String defaultNsUri>;

     label2:
        $r12 = new javax.xml.namespace.QName;

        $r13 = virtualinvoke r11.<java.lang.String: java.lang.String intern()>();

        $r14 = virtualinvoke $r1.<java.lang.String: java.lang.String intern()>();

        specialinvoke $r12.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r13, $r14);

        return $r12;
    }

    protected com.sun.xml.bind.v2.model.impl.ElementInfoImpl$PropertyImpl createPropertyImpl()
    {
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r1;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl$PropertyImpl $r0;

        r1 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r0 = new com.sun.xml.bind.v2.model.impl.ElementInfoImpl$PropertyImpl;

        specialinvoke $r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl$PropertyImpl: void <init>(com.sun.xml.bind.v2.model.impl.ElementInfoImpl)>(r1);

        return $r0;
    }

    public com.sun.xml.bind.v2.model.core.ElementPropertyInfo getProperty()
    {
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl$PropertyImpl $r1;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.impl.ElementInfoImpl$PropertyImpl property>;

        return $r1;
    }

    public com.sun.xml.bind.v2.model.core.NonElement getContentType()
    {
        com.sun.xml.bind.v2.model.core.NonElement $r1;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.NonElement contentType>;

        return $r1;
    }

    public java.lang.Object getContentInMemoryType()
    {
        com.sun.xml.bind.v2.model.core.Adapter $r1, $r2;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;
        java.lang.Object $r3, $r4;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.Adapter adapter>;

        if $r1 != null goto label1;

        $r4 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: java.lang.Object tOfJAXBElementT>;

        return $r4;

     label1:
        $r2 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.Adapter adapter>;

        $r3 = $r2.<com.sun.xml.bind.v2.model.core.Adapter: java.lang.Object customType>;

        return $r3;
    }

    public javax.xml.namespace.QName getElementName()
    {
        javax.xml.namespace.QName $r1;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.namespace.QName tagName>;

        return $r1;
    }

    public java.lang.Object getType()
    {
        java.lang.Object $r1;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: java.lang.Object elementType>;

        return $r1;
    }

    public final boolean canBeReferencedByIDREF()
    {
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        return 0;
    }

    private com.sun.xml.bind.v2.model.core.ID calcId()
    {
        com.sun.xml.bind.v2.model.'annotation'.AnnotationReader $r1, $r3;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;
        java.lang.Object $r2, $r4;
        com.sun.xml.bind.v2.model.core.ID $r5, $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader()>();

        $r2 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: java.lang.Object method>;

        $z0 = interfaceinvoke $r1.<com.sun.xml.bind.v2.model.'annotation'.AnnotationReader: boolean hasMethodAnnotation(java.lang.Class,java.lang.Object)>(class "Ljavax/xml/bind/annotation/XmlID;", $r2);

        if $z0 == 0 goto label1;

        $r7 = <com.sun.xml.bind.v2.model.core.ID: com.sun.xml.bind.v2.model.core.ID ID>;

        return $r7;

     label1:
        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.'annotation'.AnnotationReader reader()>();

        $r4 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: java.lang.Object method>;

        $z1 = interfaceinvoke $r3.<com.sun.xml.bind.v2.model.'annotation'.AnnotationReader: boolean hasMethodAnnotation(java.lang.Class,java.lang.Object)>(class "Ljavax/xml/bind/annotation/XmlIDREF;", $r4);

        if $z1 == 0 goto label2;

        $r6 = <com.sun.xml.bind.v2.model.core.ID: com.sun.xml.bind.v2.model.core.ID IDREF>;

        return $r6;

     label2:
        $r5 = <com.sun.xml.bind.v2.model.core.ID: com.sun.xml.bind.v2.model.core.ID NONE>;

        return $r5;
    }

    public com.sun.xml.bind.v2.model.core.ClassInfo getScope()
    {
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;
        com.sun.xml.bind.v2.model.core.ClassInfo $r1;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.ClassInfo scope>;

        return $r1;
    }

    public com.sun.xml.bind.v2.model.core.ElementInfo getSubstitutionHead()
    {
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0, $r1;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.impl.ElementInfoImpl substitutionHead>;

        return $r1;
    }

    public java.util.Collection getSubstitutionMembers()
    {
        java.util.List $r3;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;
        com.sun.istack.FinalArrayList $r1, $r2;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.istack.FinalArrayList substitutionMembers>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r3;

     label1:
        $r2 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.istack.FinalArrayList substitutionMembers>;

        return $r2;
    }

    void link()
    {
        java.lang.Object[] $r13;
        int $i0;
        java.lang.String $r2, $r5, $r7, $r16, $r17, $r18;
        com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl $r8;
        javax.xml.bind.'annotation'.XmlElementDecl $r1, $r4, $r6, $r19;
        com.sun.xml.bind.v2.model.impl.ModelBuilder $r14;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0, $r9, $r10, $r11;
        com.sun.xml.bind.v2.model.impl.Messages $r15;
        com.sun.xml.bind.v2.runtime.IllegalAnnotationException $r12;
        javax.xml.namespace.QName $r3;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.bind.'annotation'.XmlElementDecl anno>;

        $r2 = interfaceinvoke $r1.<javax.xml.bind.'annotation'.XmlElementDecl: java.lang.String substitutionHeadName()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label3;

        $r3 = new javax.xml.namespace.QName;

        $r4 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.bind.'annotation'.XmlElementDecl anno>;

        $r5 = interfaceinvoke $r4.<javax.xml.bind.'annotation'.XmlElementDecl: java.lang.String substitutionHeadNamespace()>();

        $r6 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.bind.'annotation'.XmlElementDecl anno>;

        $r7 = interfaceinvoke $r6.<javax.xml.bind.'annotation'.XmlElementDecl: java.lang.String substitutionHeadName()>();

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r5, $r7);

        $r8 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl owner>;

        $r9 = virtualinvoke $r8.<com.sun.xml.bind.v2.model.impl.TypeInfoSetImpl: com.sun.xml.bind.v2.model.impl.ElementInfoImpl getElementInfo(java.lang.Object,javax.xml.namespace.QName)>(null, $r3);

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.impl.ElementInfoImpl substitutionHead> = $r9;

        $r10 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.impl.ElementInfoImpl substitutionHead>;

        if $r10 != null goto label1;

        $r14 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.impl.ModelBuilder builder>;

        $r12 = new com.sun.xml.bind.v2.runtime.IllegalAnnotationException;

        $r15 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages NON_EXISTENT_ELEMENT_MAPPING>;

        $r13 = newarray (java.lang.Object)[2];

        $r16 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r13[0] = $r16;

        $r17 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r13[1] = $r17;

        $r18 = virtualinvoke $r15.<com.sun.xml.bind.v2.model.impl.Messages: java.lang.String format(java.lang.Object[])>($r13);

        $r19 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.bind.'annotation'.XmlElementDecl anno>;

        specialinvoke $r12.<com.sun.xml.bind.v2.runtime.IllegalAnnotationException: void <init>(java.lang.String,java.lang.'annotation'.Annotation)>($r18, $r19);

        virtualinvoke $r14.<com.sun.xml.bind.v2.model.impl.ModelBuilder: void reportError(com.sun.xml.bind.v2.runtime.IllegalAnnotationException)>($r12);

        goto label2;

     label1:
        $r11 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.impl.ElementInfoImpl substitutionHead>;

        specialinvoke $r11.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: void addSubstitutionMember(com.sun.xml.bind.v2.model.impl.ElementInfoImpl)>(r0);

     label2:
        goto label4;

     label3:
        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.impl.ElementInfoImpl substitutionHead> = null;

     label4:
        specialinvoke r0.<com.sun.xml.bind.v2.model.impl.TypeInfoImpl: void link()>();

        return;
    }

    private void addSubstitutionMember(com.sun.xml.bind.v2.model.impl.ElementInfoImpl)
    {
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0, r2;
        com.sun.istack.FinalArrayList $r1, $r3, $r4;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        r2 := @parameter0: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.istack.FinalArrayList substitutionMembers>;

        if $r1 != null goto label1;

        $r4 = new com.sun.istack.FinalArrayList;

        specialinvoke $r4.<com.sun.istack.FinalArrayList: void <init>()>();

        r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.istack.FinalArrayList substitutionMembers> = $r4;

     label1:
        $r3 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.istack.FinalArrayList substitutionMembers>;

        virtualinvoke $r3.<com.sun.istack.FinalArrayList: boolean add(java.lang.Object)>(r2);

        return;
    }

    public com.sun.xml.bind.v2.runtime.Location getLocation()
    {
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;
        java.lang.Object $r2;
        com.sun.xml.bind.v2.runtime.Location $r3;
        com.sun.xml.bind.v2.model.nav.Navigator $r1;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r2 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: java.lang.Object method>;

        $r3 = interfaceinvoke $r1.<com.sun.xml.bind.v2.model.nav.Navigator: com.sun.xml.bind.v2.runtime.Location getMethodLocation(java.lang.Object)>($r2);

        return $r3;
    }

    public volatile com.sun.xml.bind.v2.model.core.Element getSubstitutionHead()
    {
        com.sun.xml.bind.v2.model.core.ElementInfo $r1;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.ElementInfo getSubstitutionHead()>();

        return $r1;
    }

    static com.sun.xml.bind.v2.model.core.NonElement access$000(com.sun.xml.bind.v2.model.impl.ElementInfoImpl)
    {
        com.sun.xml.bind.v2.model.core.NonElement $r1;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;

        r0 := @parameter0: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.NonElement contentType>;

        return $r1;
    }

    static javax.xml.namespace.QName access$100(com.sun.xml.bind.v2.model.impl.ElementInfoImpl)
    {
        javax.xml.namespace.QName $r1;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;

        r0 := @parameter0: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.namespace.QName tagName>;

        return $r1;
    }

    static javax.xml.bind.'annotation'.XmlElementDecl access$200(com.sun.xml.bind.v2.model.impl.ElementInfoImpl)
    {
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;
        javax.xml.bind.'annotation'.XmlElementDecl $r1;

        r0 := @parameter0: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.bind.'annotation'.XmlElementDecl anno>;

        return $r1;
    }

    static boolean access$300(com.sun.xml.bind.v2.model.impl.ElementInfoImpl)
    {
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;
        boolean $z0;

        r0 := @parameter0: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $z0 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: boolean isCollection>;

        return $z0;
    }

    static com.sun.xml.bind.v2.model.core.Adapter access$400(com.sun.xml.bind.v2.model.impl.ElementInfoImpl)
    {
        com.sun.xml.bind.v2.model.core.Adapter $r1;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;

        r0 := @parameter0: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.Adapter adapter>;

        return $r1;
    }

    static com.sun.xml.bind.v2.model.core.ID access$500(com.sun.xml.bind.v2.model.impl.ElementInfoImpl)
    {
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;
        com.sun.xml.bind.v2.model.core.ID $r1;

        r0 := @parameter0: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: com.sun.xml.bind.v2.model.core.ID id>;

        return $r1;
    }

    static javax.activation.MimeType access$600(com.sun.xml.bind.v2.model.impl.ElementInfoImpl)
    {
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;
        javax.activation.MimeType $r1;

        r0 := @parameter0: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.activation.MimeType expectedMimeType>;

        return $r1;
    }

    static javax.xml.namespace.QName access$700(com.sun.xml.bind.v2.model.impl.ElementInfoImpl)
    {
        javax.xml.namespace.QName $r1;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;

        r0 := @parameter0: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: javax.xml.namespace.QName schemaType>;

        return $r1;
    }

    static boolean access$800(com.sun.xml.bind.v2.model.impl.ElementInfoImpl)
    {
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;
        boolean $z0;

        r0 := @parameter0: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $z0 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: boolean inlineBinary>;

        return $z0;
    }

    static java.lang.Object access$900(com.sun.xml.bind.v2.model.impl.ElementInfoImpl)
    {
        java.lang.Object $r1;
        com.sun.xml.bind.v2.model.impl.ElementInfoImpl r0;

        r0 := @parameter0: com.sun.xml.bind.v2.model.impl.ElementInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ElementInfoImpl: java.lang.Object method>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/bind/v2/model/impl/ElementInfoImpl;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.bind.v2.model.impl.ElementInfoImpl: boolean $assertionsDisabled> = $z1;

        return;
    }
}
