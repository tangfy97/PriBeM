public class org.apache.commons.lang.time.DateFormatUtils extends java.lang.Object
{
    public static final org.apache.commons.lang.time.FastDateFormat ISO_DATETIME_FORMAT;
    public static final org.apache.commons.lang.time.FastDateFormat ISO_DATETIME_TIME_ZONE_FORMAT;
    public static final org.apache.commons.lang.time.FastDateFormat ISO_DATE_FORMAT;
    public static final org.apache.commons.lang.time.FastDateFormat ISO_DATE_TIME_ZONE_FORMAT;
    public static final org.apache.commons.lang.time.FastDateFormat ISO_TIME_FORMAT;
    public static final org.apache.commons.lang.time.FastDateFormat ISO_TIME_TIME_ZONE_FORMAT;
    public static final org.apache.commons.lang.time.FastDateFormat ISO_TIME_NO_T_FORMAT;
    public static final org.apache.commons.lang.time.FastDateFormat ISO_TIME_NO_T_TIME_ZONE_FORMAT;
    public static final org.apache.commons.lang.time.FastDateFormat SMTP_DATETIME_FORMAT;

    public void <init>()
    {
        org.apache.commons.lang.time.DateFormatUtils r0;

        r0 := @this: org.apache.commons.lang.time.DateFormatUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String formatUTC(long, java.lang.String)
    {
        java.util.Date $r0;
        java.util.TimeZone $r2;
        long l0;
        java.lang.String r1, $r3;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>(long)>(l0);

        $r2 = <org.apache.commons.lang.time.DateUtils: java.util.TimeZone UTC_TIME_ZONE>;

        $r3 = staticinvoke <org.apache.commons.lang.time.DateFormatUtils: java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale)>($r0, r1, $r2, null);

        return $r3;
    }

    public static java.lang.String formatUTC(java.util.Date, java.lang.String)
    {
        java.util.Date r0;
        java.util.TimeZone $r2;
        java.lang.String r1, $r3;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.lang.time.DateUtils: java.util.TimeZone UTC_TIME_ZONE>;

        $r3 = staticinvoke <org.apache.commons.lang.time.DateFormatUtils: java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale)>(r0, r1, $r2, null);

        return $r3;
    }

    public static java.lang.String formatUTC(long, java.lang.String, java.util.Locale)
    {
        java.util.Date $r0;
        java.util.Locale r2;
        java.util.TimeZone $r3;
        long l0;
        java.lang.String r1, $r4;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Locale;

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>(long)>(l0);

        $r3 = <org.apache.commons.lang.time.DateUtils: java.util.TimeZone UTC_TIME_ZONE>;

        $r4 = staticinvoke <org.apache.commons.lang.time.DateFormatUtils: java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale)>($r0, r1, $r3, r2);

        return $r4;
    }

    public static java.lang.String formatUTC(java.util.Date, java.lang.String, java.util.Locale)
    {
        java.util.Date r0;
        java.util.Locale r2;
        java.util.TimeZone $r3;
        java.lang.String r1, $r4;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Locale;

        $r3 = <org.apache.commons.lang.time.DateUtils: java.util.TimeZone UTC_TIME_ZONE>;

        $r4 = staticinvoke <org.apache.commons.lang.time.DateFormatUtils: java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale)>(r0, r1, $r3, r2);

        return $r4;
    }

    public static java.lang.String format(long, java.lang.String)
    {
        java.util.Date $r0;
        long l0;
        java.lang.String r1, $r2;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>(long)>(l0);

        $r2 = staticinvoke <org.apache.commons.lang.time.DateFormatUtils: java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale)>($r0, r1, null, null);

        return $r2;
    }

    public static java.lang.String format(java.util.Date, java.lang.String)
    {
        java.lang.String r1, $r2;
        java.util.Date r0;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.commons.lang.time.DateFormatUtils: java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale)>(r0, r1, null, null);

        return $r2;
    }

    public static java.lang.String format(java.util.Calendar, java.lang.String)
    {
        java.util.Calendar r0;
        java.lang.String r1, $r2;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.commons.lang.time.DateFormatUtils: java.lang.String format(java.util.Calendar,java.lang.String,java.util.TimeZone,java.util.Locale)>(r0, r1, null, null);

        return $r2;
    }

    public static java.lang.String format(long, java.lang.String, java.util.TimeZone)
    {
        java.util.Date $r0;
        java.util.TimeZone r2;
        long l0;
        java.lang.String r1, $r3;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.TimeZone;

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>(long)>(l0);

        $r3 = staticinvoke <org.apache.commons.lang.time.DateFormatUtils: java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale)>($r0, r1, r2, null);

        return $r3;
    }

    public static java.lang.String format(java.util.Date, java.lang.String, java.util.TimeZone)
    {
        java.util.Date r0;
        java.util.TimeZone r2;
        java.lang.String r1, $r3;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.TimeZone;

        $r3 = staticinvoke <org.apache.commons.lang.time.DateFormatUtils: java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale)>(r0, r1, r2, null);

        return $r3;
    }

    public static java.lang.String format(java.util.Calendar, java.lang.String, java.util.TimeZone)
    {
        java.util.Calendar r0;
        java.util.TimeZone r2;
        java.lang.String r1, $r3;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.TimeZone;

        $r3 = staticinvoke <org.apache.commons.lang.time.DateFormatUtils: java.lang.String format(java.util.Calendar,java.lang.String,java.util.TimeZone,java.util.Locale)>(r0, r1, r2, null);

        return $r3;
    }

    public static java.lang.String format(long, java.lang.String, java.util.Locale)
    {
        java.util.Date $r0;
        java.util.Locale r2;
        long l0;
        java.lang.String r1, $r3;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Locale;

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>(long)>(l0);

        $r3 = staticinvoke <org.apache.commons.lang.time.DateFormatUtils: java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale)>($r0, r1, null, r2);

        return $r3;
    }

    public static java.lang.String format(java.util.Date, java.lang.String, java.util.Locale)
    {
        java.util.Date r0;
        java.util.Locale r2;
        java.lang.String r1, $r3;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Locale;

        $r3 = staticinvoke <org.apache.commons.lang.time.DateFormatUtils: java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale)>(r0, r1, null, r2);

        return $r3;
    }

    public static java.lang.String format(java.util.Calendar, java.lang.String, java.util.Locale)
    {
        java.util.Calendar r0;
        java.util.Locale r2;
        java.lang.String r1, $r3;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Locale;

        $r3 = staticinvoke <org.apache.commons.lang.time.DateFormatUtils: java.lang.String format(java.util.Calendar,java.lang.String,java.util.TimeZone,java.util.Locale)>(r0, r1, null, r2);

        return $r3;
    }

    public static java.lang.String format(long, java.lang.String, java.util.TimeZone, java.util.Locale)
    {
        java.util.Date $r0;
        java.util.TimeZone r2;
        java.util.Locale r3;
        long l0;
        java.lang.String r1, $r4;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.TimeZone;

        r3 := @parameter3: java.util.Locale;

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>(long)>(l0);

        $r4 = staticinvoke <org.apache.commons.lang.time.DateFormatUtils: java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale)>($r0, r1, r2, r3);

        return $r4;
    }

    public static java.lang.String format(java.util.Date, java.lang.String, java.util.TimeZone, java.util.Locale)
    {
        org.apache.commons.lang.time.FastDateFormat $r3;
        java.util.TimeZone r1;
        java.util.Locale r2;
        java.util.Date r4;
        java.lang.String r0, $r5;

        r4 := @parameter0: java.util.Date;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.util.TimeZone;

        r2 := @parameter3: java.util.Locale;

        $r3 = staticinvoke <org.apache.commons.lang.time.FastDateFormat: org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)>(r0, r1, r2);

        $r5 = virtualinvoke $r3.<org.apache.commons.lang.time.FastDateFormat: java.lang.String format(java.util.Date)>(r4);

        return $r5;
    }

    public static java.lang.String format(java.util.Calendar, java.lang.String, java.util.TimeZone, java.util.Locale)
    {
        java.util.Calendar r4;
        org.apache.commons.lang.time.FastDateFormat $r3;
        java.util.TimeZone r1;
        java.util.Locale r2;
        java.lang.String r0, $r5;

        r4 := @parameter0: java.util.Calendar;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.util.TimeZone;

        r2 := @parameter3: java.util.Locale;

        $r3 = staticinvoke <org.apache.commons.lang.time.FastDateFormat: org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)>(r0, r1, r2);

        $r5 = virtualinvoke $r3.<org.apache.commons.lang.time.FastDateFormat: java.lang.String format(java.util.Calendar)>(r4);

        return $r5;
    }

    static void <clinit>()
    {
        org.apache.commons.lang.time.FastDateFormat $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9;
        java.util.Locale $r8;

        $r0 = staticinvoke <org.apache.commons.lang.time.FastDateFormat: org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss");

        <org.apache.commons.lang.time.DateFormatUtils: org.apache.commons.lang.time.FastDateFormat ISO_DATETIME_FORMAT> = $r0;

        $r1 = staticinvoke <org.apache.commons.lang.time.FastDateFormat: org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ssZZ");

        <org.apache.commons.lang.time.DateFormatUtils: org.apache.commons.lang.time.FastDateFormat ISO_DATETIME_TIME_ZONE_FORMAT> = $r1;

        $r2 = staticinvoke <org.apache.commons.lang.time.FastDateFormat: org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String)>("yyyy-MM-dd");

        <org.apache.commons.lang.time.DateFormatUtils: org.apache.commons.lang.time.FastDateFormat ISO_DATE_FORMAT> = $r2;

        $r3 = staticinvoke <org.apache.commons.lang.time.FastDateFormat: org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String)>("yyyy-MM-ddZZ");

        <org.apache.commons.lang.time.DateFormatUtils: org.apache.commons.lang.time.FastDateFormat ISO_DATE_TIME_ZONE_FORMAT> = $r3;

        $r4 = staticinvoke <org.apache.commons.lang.time.FastDateFormat: org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String)>("\'T\'HH:mm:ss");

        <org.apache.commons.lang.time.DateFormatUtils: org.apache.commons.lang.time.FastDateFormat ISO_TIME_FORMAT> = $r4;

        $r5 = staticinvoke <org.apache.commons.lang.time.FastDateFormat: org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String)>("\'T\'HH:mm:ssZZ");

        <org.apache.commons.lang.time.DateFormatUtils: org.apache.commons.lang.time.FastDateFormat ISO_TIME_TIME_ZONE_FORMAT> = $r5;

        $r6 = staticinvoke <org.apache.commons.lang.time.FastDateFormat: org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String)>("HH:mm:ss");

        <org.apache.commons.lang.time.DateFormatUtils: org.apache.commons.lang.time.FastDateFormat ISO_TIME_NO_T_FORMAT> = $r6;

        $r7 = staticinvoke <org.apache.commons.lang.time.FastDateFormat: org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String)>("HH:mm:ssZZ");

        <org.apache.commons.lang.time.DateFormatUtils: org.apache.commons.lang.time.FastDateFormat ISO_TIME_NO_T_TIME_ZONE_FORMAT> = $r7;

        $r8 = <java.util.Locale: java.util.Locale US>;

        $r9 = staticinvoke <org.apache.commons.lang.time.FastDateFormat: org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String,java.util.Locale)>("EEE, dd MMM yyyy HH:mm:ss Z", $r8);

        <org.apache.commons.lang.time.DateFormatUtils: org.apache.commons.lang.time.FastDateFormat SMTP_DATETIME_FORMAT> = $r9;

        return;
    }
}
