public final enum class org.apache.solr.common.params.TermsParams$TermsRegexpFlag extends java.lang.Enum
{
    public static final enum org.apache.solr.common.params.TermsParams$TermsRegexpFlag UNIX_LINES;
    public static final enum org.apache.solr.common.params.TermsParams$TermsRegexpFlag CASE_INSENSITIVE;
    public static final enum org.apache.solr.common.params.TermsParams$TermsRegexpFlag COMMENTS;
    public static final enum org.apache.solr.common.params.TermsParams$TermsRegexpFlag MULTILINE;
    public static final enum org.apache.solr.common.params.TermsParams$TermsRegexpFlag LITERAL;
    public static final enum org.apache.solr.common.params.TermsParams$TermsRegexpFlag DOTALL;
    public static final enum org.apache.solr.common.params.TermsParams$TermsRegexpFlag UNICODE_CASE;
    public static final enum org.apache.solr.common.params.TermsParams$TermsRegexpFlag CANON_EQ;
    int value;
    private static final org.apache.solr.common.params.TermsParams$TermsRegexpFlag[] $VALUES;

    public static org.apache.solr.common.params.TermsParams$TermsRegexpFlag[] values()
    {
        org.apache.solr.common.params.TermsParams$TermsRegexpFlag[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.solr.common.params.TermsParams$TermsRegexpFlag[]) $r1;

        return $r2;
    }

    public static org.apache.solr.common.params.TermsParams$TermsRegexpFlag valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.solr.common.params.TermsParams$TermsRegexpFlag $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/solr/common/params/TermsParams$TermsRegexpFlag;", r0);

        $r2 = (org.apache.solr.common.params.TermsParams$TermsRegexpFlag) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, int)
    {
        org.apache.solr.common.params.TermsParams$TermsRegexpFlag r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: org.apache.solr.common.params.TermsParams$TermsRegexpFlag;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.apache.solr.common.params.TermsParams$TermsRegexpFlag: int value> = i1;

        return;
    }

    public int getValue()
    {
        int $i0;
        org.apache.solr.common.params.TermsParams$TermsRegexpFlag r0;

        r0 := @this: org.apache.solr.common.params.TermsParams$TermsRegexpFlag;

        $i0 = r0.<org.apache.solr.common.params.TermsParams$TermsRegexpFlag: int value>;

        return $i0;
    }

    static void <clinit>()
    {
        org.apache.solr.common.params.TermsParams$TermsRegexpFlag[] $r8;
        org.apache.solr.common.params.TermsParams$TermsRegexpFlag $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;

        $r0 = new org.apache.solr.common.params.TermsParams$TermsRegexpFlag;

        specialinvoke $r0.<org.apache.solr.common.params.TermsParams$TermsRegexpFlag: void <init>(java.lang.String,int,int)>("UNIX_LINES", 0, 1);

        <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag UNIX_LINES> = $r0;

        $r1 = new org.apache.solr.common.params.TermsParams$TermsRegexpFlag;

        specialinvoke $r1.<org.apache.solr.common.params.TermsParams$TermsRegexpFlag: void <init>(java.lang.String,int,int)>("CASE_INSENSITIVE", 1, 2);

        <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag CASE_INSENSITIVE> = $r1;

        $r2 = new org.apache.solr.common.params.TermsParams$TermsRegexpFlag;

        specialinvoke $r2.<org.apache.solr.common.params.TermsParams$TermsRegexpFlag: void <init>(java.lang.String,int,int)>("COMMENTS", 2, 4);

        <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag COMMENTS> = $r2;

        $r3 = new org.apache.solr.common.params.TermsParams$TermsRegexpFlag;

        specialinvoke $r3.<org.apache.solr.common.params.TermsParams$TermsRegexpFlag: void <init>(java.lang.String,int,int)>("MULTILINE", 3, 8);

        <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag MULTILINE> = $r3;

        $r4 = new org.apache.solr.common.params.TermsParams$TermsRegexpFlag;

        specialinvoke $r4.<org.apache.solr.common.params.TermsParams$TermsRegexpFlag: void <init>(java.lang.String,int,int)>("LITERAL", 4, 16);

        <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag LITERAL> = $r4;

        $r5 = new org.apache.solr.common.params.TermsParams$TermsRegexpFlag;

        specialinvoke $r5.<org.apache.solr.common.params.TermsParams$TermsRegexpFlag: void <init>(java.lang.String,int,int)>("DOTALL", 5, 32);

        <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag DOTALL> = $r5;

        $r6 = new org.apache.solr.common.params.TermsParams$TermsRegexpFlag;

        specialinvoke $r6.<org.apache.solr.common.params.TermsParams$TermsRegexpFlag: void <init>(java.lang.String,int,int)>("UNICODE_CASE", 6, 64);

        <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag UNICODE_CASE> = $r6;

        $r7 = new org.apache.solr.common.params.TermsParams$TermsRegexpFlag;

        specialinvoke $r7.<org.apache.solr.common.params.TermsParams$TermsRegexpFlag: void <init>(java.lang.String,int,int)>("CANON_EQ", 7, 128);

        <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag CANON_EQ> = $r7;

        $r8 = newarray (org.apache.solr.common.params.TermsParams$TermsRegexpFlag)[8];

        $r9 = <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag UNIX_LINES>;

        $r8[0] = $r9;

        $r10 = <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag CASE_INSENSITIVE>;

        $r8[1] = $r10;

        $r11 = <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag COMMENTS>;

        $r8[2] = $r11;

        $r12 = <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag MULTILINE>;

        $r8[3] = $r12;

        $r13 = <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag LITERAL>;

        $r8[4] = $r13;

        $r14 = <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag DOTALL>;

        $r8[5] = $r14;

        $r15 = <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag UNICODE_CASE>;

        $r8[6] = $r15;

        $r16 = <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag CANON_EQ>;

        $r8[7] = $r16;

        <org.apache.solr.common.params.TermsParams$TermsRegexpFlag: org.apache.solr.common.params.TermsParams$TermsRegexpFlag[] $VALUES> = $r8;

        return;
    }
}
