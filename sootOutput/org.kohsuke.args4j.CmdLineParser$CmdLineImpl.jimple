class org.kohsuke.args4j.CmdLineParser$CmdLineImpl extends java.lang.Object implements org.kohsuke.args4j.CmdLineOption$Parameters
{
    private final java.lang.String[] args;
    private int pos;
    private final org.kohsuke.args4j.CmdLineParser this$0;

    void <init>(org.kohsuke.args4j.CmdLineParser, java.lang.String[])
    {
        org.kohsuke.args4j.CmdLineParser r1;
        java.lang.String[] r2;
        org.kohsuke.args4j.CmdLineParser$CmdLineImpl r0;

        r0 := @this: org.kohsuke.args4j.CmdLineParser$CmdLineImpl;

        r1 := @parameter0: org.kohsuke.args4j.CmdLineParser;

        r2 := @parameter1: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: org.kohsuke.args4j.CmdLineParser this$0> = r1;

        r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: java.lang.String[] args> = r2;

        r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: int pos> = 0;

        return;
    }

    private boolean hasMore()
    {
        int $i0, $i1;
        java.lang.String[] $r1;
        org.kohsuke.args4j.CmdLineParser$CmdLineImpl r0;
        boolean $z0;

        r0 := @this: org.kohsuke.args4j.CmdLineParser$CmdLineImpl;

        $i1 = r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: int pos>;

        $r1 = r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: java.lang.String[] args>;

        $i0 = lengthof $r1;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private java.lang.String getCurrentToken()
    {
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;
        org.kohsuke.args4j.CmdLineParser$CmdLineImpl r0;

        r0 := @this: org.kohsuke.args4j.CmdLineParser$CmdLineImpl;

        $r1 = r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: java.lang.String[] args>;

        $i0 = r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: int pos>;

        $r2 = $r1[$i0];

        return $r2;
    }

    private void proceed(int)
    {
        int i0, $i1, $i2;
        org.kohsuke.args4j.CmdLineParser$CmdLineImpl r0;

        r0 := @this: org.kohsuke.args4j.CmdLineParser$CmdLineImpl;

        i0 := @parameter0: int;

        $i1 = r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: int pos>;

        $i2 = $i1 + i0;

        r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: int pos> = $i2;

        return;
    }

    public java.lang.String getOptionName()
    {
        java.lang.String $r1;
        org.kohsuke.args4j.CmdLineParser$CmdLineImpl r0;

        r0 := @this: org.kohsuke.args4j.CmdLineParser$CmdLineImpl;

        $r1 = specialinvoke r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: java.lang.String getCurrentToken()>();

        return $r1;
    }

    public java.lang.String getParameter(int) throws org.kohsuke.args4j.CmdLineException
    {
        org.kohsuke.args4j.MissingOptionParameterException $r4;
        java.lang.String[] $r1, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r3, $r5;
        org.kohsuke.args4j.CmdLineParser$CmdLineImpl r0;

        r0 := @this: org.kohsuke.args4j.CmdLineParser$CmdLineImpl;

        i0 := @parameter0: int;

        $i1 = r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: int pos>;

        $i2 = $i1 + i0;

        $i4 = $i2 + 1;

        $r1 = r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: java.lang.String[] args>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label1;

        $r4 = new org.kohsuke.args4j.MissingOptionParameterException;

        $r5 = virtualinvoke r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: java.lang.String getOptionName()>();

        specialinvoke $r4.<org.kohsuke.args4j.MissingOptionParameterException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        $r2 = r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: java.lang.String[] args>;

        $i5 = r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: int pos>;

        $i6 = $i5 + i0;

        $i7 = $i6 + 1;

        $r3 = $r2[$i7];

        return $r3;
    }

    public int getIntParameter(int) throws org.kohsuke.args4j.CmdLineException
    {
        int i0, $i1;
        java.lang.NumberFormatException $r2;
        java.lang.String $r1, $r4;
        org.kohsuke.args4j.IllegalOptionParameterException $r3;
        org.kohsuke.args4j.CmdLineParser$CmdLineImpl r0;

        r0 := @this: org.kohsuke.args4j.CmdLineParser$CmdLineImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: java.lang.String getParameter(int)>(i0);

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        return $i1;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.kohsuke.args4j.IllegalOptionParameterException;

        $r4 = virtualinvoke r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: java.lang.String getOptionName()>();

        specialinvoke $r3.<org.kohsuke.args4j.IllegalOptionParameterException: void <init>(java.lang.String,java.lang.String)>($r4, $r1);

        throw $r3;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    static boolean access$000(org.kohsuke.args4j.CmdLineParser$CmdLineImpl)
    {
        org.kohsuke.args4j.CmdLineParser$CmdLineImpl r0;
        boolean $z0;

        r0 := @parameter0: org.kohsuke.args4j.CmdLineParser$CmdLineImpl;

        $z0 = specialinvoke r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: boolean hasMore()>();

        return $z0;
    }

    static void access$100(org.kohsuke.args4j.CmdLineParser$CmdLineImpl, int)
    {
        int i0;
        org.kohsuke.args4j.CmdLineParser$CmdLineImpl r0;

        r0 := @parameter0: org.kohsuke.args4j.CmdLineParser$CmdLineImpl;

        i0 := @parameter1: int;

        specialinvoke r0.<org.kohsuke.args4j.CmdLineParser$CmdLineImpl: void proceed(int)>(i0);

        return;
    }
}
