public abstract class org.springframework.scripting.jruby.JRubyScriptUtils extends java.lang.Object
{

    public void <init>()
    {
        org.springframework.scripting.jruby.JRubyScriptUtils r0;

        r0 := @this: org.springframework.scripting.jruby.JRubyScriptUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object createJRubyObject(java.lang.String, java.lang.Class[]) throws org.jruby.exceptions.JumpException
    {
        java.lang.Class[] r1;
        java.lang.Object $r3;
        java.lang.String r0;
        java.lang.ClassLoader $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class[];

        $r2 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

        $r3 = staticinvoke <org.springframework.scripting.jruby.JRubyScriptUtils: java.lang.Object createJRubyObject(java.lang.String,java.lang.Class[],java.lang.ClassLoader)>(r0, r1, $r2);

        return $r3;
    }

    public static java.lang.Object createJRubyObject(java.lang.String, java.lang.Class[], java.lang.ClassLoader)
    {
        java.lang.IllegalStateException $r8;
        org.jruby.Ruby $r0;
        org.jruby.ast.Node $r2;
        java.lang.String r1, $r11, $r12, $r16;
        boolean $z0, $z1;
        java.lang.Class[] r5;
        org.jruby.runtime.builtin.IRubyObject $r3, r17;
        org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler $r6;
        java.lang.Object $r7;
        java.lang.StringBuilder $r9, $r10, $r13, $r14, $r15;
        java.lang.ClassLoader r4;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Class[];

        r4 := @parameter2: java.lang.ClassLoader;

        $r0 = staticinvoke <org.springframework.scripting.jruby.JRubyScriptUtils: org.jruby.Ruby initializeRuntime()>();

        $r2 = virtualinvoke $r0.<org.jruby.Ruby: org.jruby.ast.Node parseEval(java.lang.String,java.lang.String,org.jruby.runtime.DynamicScope,int)>(r1, "", null, 0);

        $r3 = virtualinvoke $r0.<org.jruby.Ruby: org.jruby.runtime.builtin.IRubyObject runNormally(org.jruby.ast.Node,boolean)>($r2, 0);

        r17 = $r3;

        $z0 = $r3 instanceof org.jruby.RubyNil;

        if $z0 == 0 goto label1;

        $r12 = staticinvoke <org.springframework.scripting.jruby.JRubyScriptUtils: java.lang.String findClassName(org.jruby.ast.Node)>($r2);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("\n");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".new");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r17 = virtualinvoke $r0.<org.jruby.Ruby: org.jruby.runtime.builtin.IRubyObject evalScriptlet(java.lang.String)>($r16);

     label1:
        $z1 = r17 instanceof org.jruby.RubyNil;

        if $z1 == 0 goto label2;

        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Compilation of JRuby script returned RubyNil: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label2:
        $r6 = new org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler;

        specialinvoke $r6.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: void <init>(org.jruby.runtime.builtin.IRubyObject,org.jruby.Ruby)>(r17, $r0);

        $r7 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>(r4, r5, $r6);

        return $r7;
    }

    private static org.jruby.Ruby initializeRuntime()
    {
        java.util.List $r0;
        org.jruby.Ruby $r1;

        $r0 = <java.util.Collections: java.util.List EMPTY_LIST>;

        $r1 = staticinvoke <org.jruby.javasupport.JavaEmbedUtils: org.jruby.Ruby initialize(java.util.List)>($r0);

        return $r1;
    }

    private static java.lang.String findClassName(org.jruby.ast.Node)
    {
        org.jruby.ast.ClassNode $r1;
        org.jruby.ast.Colon2Node r3;
        org.jruby.ast.Colon3Node $r2;
        java.lang.IllegalArgumentException $r5;
        org.jruby.ast.Node r0;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r4, $r9;

        r0 := @parameter0: org.jruby.ast.Node;

        $r1 = staticinvoke <org.springframework.scripting.jruby.JRubyScriptUtils: org.jruby.ast.ClassNode findClassNode(org.jruby.ast.Node)>(r0);

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to determine class name for root node \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r2 = virtualinvoke $r1.<org.jruby.ast.ClassNode: org.jruby.ast.Colon3Node getCPath()>();

        r3 = (org.jruby.ast.Colon2Node) $r2;

        $r4 = virtualinvoke r3.<org.jruby.ast.Colon2Node: java.lang.String getName()>();

        return $r4;
    }

    private static org.jruby.ast.ClassNode findClassNode(org.jruby.ast.Node)
    {
        org.jruby.ast.ClassNode $r5, $r6, $r7, $r10, $r11, $r12;
        org.jruby.ast.Node r0, $r4, r13, r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Iterator $r2, $r8;
        org.jruby.ast.NewlineNode r14;
        java.util.List $r1;
        java.lang.Object $r3, $r9;

        r0 := @parameter0: org.jruby.ast.Node;

        $z0 = r0 instanceof org.jruby.ast.ClassNode;

        if $z0 == 0 goto label1;

        $r12 = (org.jruby.ast.ClassNode) r0;

        return $r12;

     label1:
        $r1 = virtualinvoke r0.<org.jruby.ast.Node: java.util.List childNodes()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label4;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.jruby.ast.Node) $r3;

        $z1 = r13 instanceof org.jruby.ast.ClassNode;

        if $z1 == 0 goto label3;

        $r7 = (org.jruby.ast.ClassNode) r13;

        return $r7;

     label3:
        $z2 = r13 instanceof org.jruby.ast.NewlineNode;

        if $z2 == 0 goto label4;

        r14 = (org.jruby.ast.NewlineNode) r13;

        $r4 = virtualinvoke r14.<org.jruby.ast.NewlineNode: org.jruby.ast.Node getNextNode()>();

        $r5 = staticinvoke <org.springframework.scripting.jruby.JRubyScriptUtils: org.jruby.ast.ClassNode findClassNode(org.jruby.ast.Node)>($r4);

        $z3 = $r5 instanceof org.jruby.ast.ClassNode;

        if $z3 == 0 goto label4;

        $r6 = (org.jruby.ast.ClassNode) $r5;

        return $r6;

     label4:
        $z6 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z6 != 0 goto label2;

        $r8 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label6;

     label5:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r15 = (org.jruby.ast.Node) $r9;

        $r10 = staticinvoke <org.springframework.scripting.jruby.JRubyScriptUtils: org.jruby.ast.ClassNode findClassNode(org.jruby.ast.Node)>(r15);

        $z5 = $r10 instanceof org.jruby.ast.ClassNode;

        if $z5 == 0 goto label6;

        $r11 = (org.jruby.ast.ClassNode) $r10;

        return $r11;

     label6:
        $z4 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label5;

        return null;
    }
}
