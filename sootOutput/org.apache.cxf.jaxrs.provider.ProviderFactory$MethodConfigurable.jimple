class org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable extends java.lang.Object implements javax.ws.rs.core.Configurable
{
    private org.apache.cxf.jaxrs.model.OperationResourceInfo ori;
    private java.lang.String nameBinding;
    private boolean bindingSet;
    final org.apache.cxf.jaxrs.provider.ProviderFactory this$0;

    public void <init>(org.apache.cxf.jaxrs.provider.ProviderFactory, org.apache.cxf.jaxrs.model.OperationResourceInfo)
    {
        org.apache.cxf.jaxrs.provider.ProviderFactory r1;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r2;
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r0;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r5;
        java.lang.StringBuilder $r3, $r4, $r8, $r9, $r12, $r13;
        java.lang.Class $r6;
        java.lang.String $r7, $r11, $r14;
        java.lang.reflect.Method $r10;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r1 := @parameter0: org.apache.cxf.jaxrs.provider.ProviderFactory;

        r2 := @parameter1: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.provider.ProviderFactory this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.model.OperationResourceInfo ori> = r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.apache.cxf.filter.binding");

        $r5 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getClassResourceInfo()>();

        $r6 = virtualinvoke $r5.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

        $r11 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.String getName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":dynamic");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: java.lang.String nameBinding> = $r14;

        return;
    }

    public javax.ws.rs.core.Configurable register(java.lang.Object)
    {
        int $i0;
        javax.ws.rs.core.Configurable $r3;
        java.lang.Object r1;
        java.lang.Class $r2;
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $i0 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: int getBindingPriority(java.lang.Class)>($r2);

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: javax.ws.rs.core.Configurable register(java.lang.Object,int)>(r1, $i0);

        return $r3;
    }

    public javax.ws.rs.core.Configurable register(java.lang.Object, int)
    {
        int i0;
        javax.ws.rs.core.Configurable $r3;
        java.lang.Class[] $r2;
        java.lang.Object r1;
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: java.lang.Class[] access$400()>();

        $r3 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: javax.ws.rs.core.Configurable doRegister(java.lang.Object,int,java.lang.Class[])>(r1, i0, $r2);

        return $r3;
    }

    public transient javax.ws.rs.core.Configurable register(java.lang.Object, java.lang.Class[])
    {
        javax.ws.rs.core.Configurable $r3;
        java.lang.Class[] r2;
        java.lang.Object r1;
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class[];

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: javax.ws.rs.core.Configurable register(java.lang.Object,int,java.lang.Class[])>(r1, 7000, r2);

        return $r3;
    }

    public transient javax.ws.rs.core.Configurable register(java.lang.Object, int, java.lang.Class[])
    {
        int i0;
        javax.ws.rs.core.Configurable $r3;
        java.lang.Class[] r2;
        java.lang.Object r1;
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Class[];

        $r3 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: javax.ws.rs.core.Configurable doRegister(java.lang.Object,int,java.lang.Class[])>(r1, i0, r2);

        return $r3;
    }

    public javax.ws.rs.core.Configurable register(java.lang.Class)
    {
        int $i0;
        javax.ws.rs.core.Configurable $r2;
        java.lang.Class r1;
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r1 := @parameter0: java.lang.Class;

        $i0 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: int getBindingPriority(java.lang.Class)>(r1);

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: javax.ws.rs.core.Configurable register(java.lang.Class,int)>(r1, $i0);

        return $r2;
    }

    public javax.ws.rs.core.Configurable register(java.lang.Class, int)
    {
        int i0;
        javax.ws.rs.core.Configurable $r4;
        java.lang.Class[] $r3;
        java.lang.Class r1;
        java.lang.Object $r2;
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r1 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: java.lang.Object createProvider(java.lang.Class)>(r1);

        $r3 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: java.lang.Class[] access$400()>();

        $r4 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: javax.ws.rs.core.Configurable doRegister(java.lang.Object,int,java.lang.Class[])>($r2, i0, $r3);

        return $r4;
    }

    public transient javax.ws.rs.core.Configurable register(java.lang.Class, java.lang.Class[])
    {
        javax.ws.rs.core.Configurable $r3;
        java.lang.Class[] r2;
        java.lang.Class r1;
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class[];

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: javax.ws.rs.core.Configurable register(java.lang.Class,int,java.lang.Class[])>(r1, 7000, r2);

        return $r3;
    }

    public transient javax.ws.rs.core.Configurable register(java.lang.Class, int, java.lang.Class[])
    {
        int i0;
        javax.ws.rs.core.Configurable $r4;
        java.lang.Class[] r3;
        java.lang.Class r1;
        java.lang.Object $r2;
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r1 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.Class[];

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: java.lang.Object createProvider(java.lang.Class)>(r1);

        $r4 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: javax.ws.rs.core.Configurable doRegister(java.lang.Object,int,java.lang.Class[])>($r2, i0, r3);

        return $r4;
    }

    private transient javax.ws.rs.core.Configurable doRegister(java.lang.Object, int, java.lang.Class[])
    {
        org.apache.cxf.jaxrs.model.OperationResourceInfo $r4;
        java.util.Map $r13, $r14, $r18, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        java.util.List $r5, $r8, $r10, $r21;
        javax.ws.rs.core.Feature $r22;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r7, $r9, $r11, $r12, $r16, $r17, $r20;
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r2;
        int i0, i1, i2;
        java.lang.String $r3;
        java.lang.Class[] r1;
        java.lang.Object r0;
        java.lang.Class r6, $r15;

        r2 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r0 := @parameter0: java.lang.Object;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Class[];

        $z0 = r0 instanceof javax.ws.rs.core.Feature;

        if $z0 == 0 goto label1;

        $r22 = (javax.ws.rs.core.Feature) r0;

        interfaceinvoke $r22.<javax.ws.rs.core.Feature: boolean configure(javax.ws.rs.core.Configurable)>(r2);

        return r2;

     label1:
        z7 = 0;

        i0 = lengthof r1;

        i2 = 0;

     label2:
        if i2 >= i0 goto label8;

        r6 = r1[i2];

        if r6 != class "Ljavax/ws/rs/container/ContainerRequestFilter;" goto label4;

        $z5 = r0 instanceof javax.ws.rs.container.ContainerRequestFilter;

        if $z5 == 0 goto label4;

        $r15 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z6 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: boolean access$500(java.lang.Class)>($r15);

        if $z6 == 0 goto label3;

        $r20 = r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.provider.ProviderFactory this$0>;

        $r21 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.List access$600(org.apache.cxf.jaxrs.provider.ProviderFactory)>($r20);

        specialinvoke r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: void addToInterceptors(java.util.List,java.lang.Object,int,boolean)>($r21, r0, i1, 1);

        goto label4;

     label3:
        $r17 = r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.provider.ProviderFactory this$0>;

        $r16 = r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.provider.ProviderFactory this$0>;

        $r18 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.Map access$700(org.apache.cxf.jaxrs.provider.ProviderFactory)>($r16);

        $r19 = specialinvoke r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: java.util.Map addToPostMatching(java.util.Map,java.lang.Object,int,boolean)>($r18, r0, i1, 1);

        staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.Map access$702(org.apache.cxf.jaxrs.provider.ProviderFactory,java.util.Map)>($r17, $r19);

        z7 = 1;

     label4:
        if r6 != class "Ljavax/ws/rs/container/ContainerResponseFilter;" goto label5;

        $z4 = r0 instanceof javax.ws.rs.container.ContainerResponseFilter;

        if $z4 == 0 goto label5;

        $r12 = r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.provider.ProviderFactory this$0>;

        $r11 = r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.provider.ProviderFactory this$0>;

        $r13 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.Map access$800(org.apache.cxf.jaxrs.provider.ProviderFactory)>($r11);

        $r14 = specialinvoke r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: java.util.Map addToPostMatching(java.util.Map,java.lang.Object,int,boolean)>($r13, r0, i1, 0);

        staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.Map access$802(org.apache.cxf.jaxrs.provider.ProviderFactory,java.util.Map)>($r12, $r14);

        z7 = 1;

     label5:
        if r6 != class "Ljavax/ws/rs/ext/ReaderInterceptor;" goto label6;

        $z3 = r0 instanceof javax.ws.rs.ext.ReaderInterceptor;

        if $z3 == 0 goto label6;

        $r9 = r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.provider.ProviderFactory this$0>;

        $r10 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.List access$900(org.apache.cxf.jaxrs.provider.ProviderFactory)>($r9);

        specialinvoke r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: void addToInterceptors(java.util.List,java.lang.Object,int,boolean)>($r10, r0, i1, 1);

     label6:
        if r6 != class "Ljavax/ws/rs/ext/WriterInterceptor;" goto label7;

        $z2 = r0 instanceof javax.ws.rs.ext.WriterInterceptor;

        if $z2 == 0 goto label7;

        $r7 = r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.provider.ProviderFactory this$0>;

        $r8 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.List access$1000(org.apache.cxf.jaxrs.provider.ProviderFactory)>($r7);

        specialinvoke r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: void addToInterceptors(java.util.List,java.lang.Object,int,boolean)>($r8, r0, i1, 0);

     label7:
        i2 = i2 + 1;

        goto label2;

     label8:
        if z7 == 0 goto label9;

        $z1 = r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: boolean bindingSet>;

        if $z1 != 0 goto label9;

        $r4 = r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.model.OperationResourceInfo ori>;

        $r3 = r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: java.lang.String nameBinding>;

        $r5 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r3);

        virtualinvoke $r4.<org.apache.cxf.jaxrs.model.OperationResourceInfo: void addNameBindings(java.util.List)>($r5);

        r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: boolean bindingSet> = 1;

     label9:
        return r2;
    }

    private void addToInterceptors(java.util.List, java.lang.Object, int, boolean)
    {
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r1;
        org.apache.cxf.jaxrs.model.ProviderInfo $r3, $r5, $r8, $r9;
        int $i0, $i1, i2, $i3, $i4, i5, $i6, $i7;
        boolean z0;
        java.util.List r0;
        java.lang.Object r2, $r4, $r6;
        java.lang.Class $r7;

        r1 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r0 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.Object;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 <= 0 goto label11;

        i5 = 0;

     label01:
        if i5 >= $i0 goto label10;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i5);

        $r5 = (org.apache.cxf.jaxrs.model.ProviderInfo) $r4;

        $r6 = virtualinvoke $r5.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $i1 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: int getBindingPriority(java.lang.Class)>($r7);

        if z0 == 0 goto label05;

        if i2 < $i1 goto label02;

        $i4 = i5 + 1;

        if $i4 != $i0 goto label09;

     label02:
        if i2 >= $i1 goto label03;

        $i6 = i5;

        goto label04;

     label03:
        $i6 = i5 + 1;

     label04:
        $r9 = specialinvoke r1.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.model.ProviderInfo newProvider(java.lang.Object)>(r2);

        interfaceinvoke r0.<java.util.List: void add(int,java.lang.Object)>($i6, $r9);

        goto label10;

     label05:
        if i2 > $i1 goto label06;

        $i3 = i5 + 1;

        if $i3 != $i0 goto label09;

     label06:
        if i2 <= $i1 goto label07;

        $i7 = i5;

        goto label08;

     label07:
        $i7 = i5 + 1;

     label08:
        $r8 = specialinvoke r1.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.model.ProviderInfo newProvider(java.lang.Object)>(r2);

        interfaceinvoke r0.<java.util.List: void add(int,java.lang.Object)>($i7, $r8);

        goto label10;

     label09:
        i5 = i5 + 1;

        goto label01;

     label10:
        goto label12;

     label11:
        $r3 = specialinvoke r1.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.model.ProviderInfo newProvider(java.lang.Object)>(r2);

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r3);

     label12:
        return;
    }

    private org.apache.cxf.jaxrs.model.ProviderInfo newProvider(java.lang.Object)
    {
        org.apache.cxf.Bus $r4;
        org.apache.cxf.jaxrs.model.ProviderInfo $r0;
        java.lang.Object r1;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r3, $r5;
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r2;

        r2 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r1 := @parameter0: java.lang.Object;

        $r0 = new org.apache.cxf.jaxrs.model.ProviderInfo;

        $r3 = r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.provider.ProviderFactory this$0>;

        $r4 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.Bus access$1100(org.apache.cxf.jaxrs.provider.ProviderFactory)>($r3);

        specialinvoke $r0.<org.apache.cxf.jaxrs.model.ProviderInfo: void <init>(java.lang.Object,org.apache.cxf.Bus)>(r1, $r4);

        $r5 = r2.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.provider.ProviderFactory this$0>;

        virtualinvoke $r5.<org.apache.cxf.jaxrs.provider.ProviderFactory: void injectContextProxiesIntoProvider(org.apache.cxf.jaxrs.model.ProviderInfo)>($r0);

        return $r0;
    }

    private java.util.Map addToPostMatching(java.util.Map, java.lang.Object, int, boolean)
    {
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r5;
        java.util.LinkedHashMap $r0;
        org.apache.cxf.jaxrs.model.ProviderInfo $r8;
        java.util.Map r1;
        int i0, $i1;
        java.lang.String $r6;
        boolean $z0, $z1, z2, $z3, $z4, z5, $z6, $z7, z8, z9;
        org.apache.cxf.jaxrs.provider.ProviderFactory$NameKey $r4, $r12;
        java.util.Map$Entry r10;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.lang.Object r7, $r9, $r11, $r13, $r14;

        r5 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r1 := @parameter0: java.util.Map;

        r7 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        z2 := @parameter3: boolean;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        z5 = 0;

        z9 = 0;

        z8 = 0;

     label01:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r9 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        $r11 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (org.apache.cxf.jaxrs.provider.ProviderFactory$NameKey) $r11;

        $i1 = virtualinvoke $r12.<org.apache.cxf.jaxrs.provider.ProviderFactory$NameKey: int getPriority()>();

        if z8 != 0 goto label05;

        if z2 == 0 goto label05;

        if i0 < $i1 goto label02;

        $z4 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label05;

     label02:
        if $i1 < i0 goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        specialinvoke r5.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: void addNewProvider(java.util.Map,java.util.Map$Entry,java.lang.Object,int,boolean)>($r0, r10, r7, i0, $z6);

        z5 = 1;

        z9 = 1;

        z8 = 1;

        goto label10;

     label05:
        if z9 != 0 goto label09;

        if z2 != 0 goto label09;

        if i0 > $i1 goto label06;

        $z3 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label09;

     label06:
        if i0 <= $i1 goto label07;

        $z7 = 1;

        goto label08;

     label07:
        $z7 = 0;

     label08:
        specialinvoke r5.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: void addNewProvider(java.util.Map,java.util.Map$Entry,java.lang.Object,int,boolean)>($r0, r10, r7, i0, $z7);

        z5 = 1;

        z9 = 1;

        z8 = 1;

        goto label10;

     label09:
        $r13 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14);

     label10:
        goto label01;

     label11:
        goto label13;

     label12:
        $r4 = new org.apache.cxf.jaxrs.provider.ProviderFactory$NameKey;

        $r6 = r5.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: java.lang.String nameBinding>;

        specialinvoke $r4.<org.apache.cxf.jaxrs.provider.ProviderFactory$NameKey: void <init>(java.lang.String,int)>($r6, i0);

        $r8 = specialinvoke r5.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.model.ProviderInfo newProvider(java.lang.Object)>(r7);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r8);

     label13:
        return $r0;
    }

    private void addNewProvider(java.util.Map, java.util.Map$Entry, java.lang.Object, int, boolean)
    {
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r5;
        org.apache.cxf.jaxrs.model.ProviderInfo $r8, $r11;
        java.util.Map r0;
        int i0;
        java.lang.String $r6, $r10;
        boolean z0;
        org.apache.cxf.jaxrs.provider.ProviderFactory$NameKey $r4, $r9;
        java.util.Map$Entry r1;
        java.lang.Object $r2, $r3, r7, $r12, $r13;

        r5 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.util.Map$Entry;

        r7 := @parameter2: java.lang.Object;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        if z0 == 0 goto label1;

        $r9 = new org.apache.cxf.jaxrs.provider.ProviderFactory$NameKey;

        $r10 = r5.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: java.lang.String nameBinding>;

        specialinvoke $r9.<org.apache.cxf.jaxrs.provider.ProviderFactory$NameKey: void <init>(java.lang.String,int)>($r10, i0);

        $r11 = specialinvoke r5.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.model.ProviderInfo newProvider(java.lang.Object)>(r7);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11);

        $r12 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r13);

        goto label2;

     label1:
        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r4 = new org.apache.cxf.jaxrs.provider.ProviderFactory$NameKey;

        $r6 = r5.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: java.lang.String nameBinding>;

        specialinvoke $r4.<org.apache.cxf.jaxrs.provider.ProviderFactory$NameKey: void <init>(java.lang.String,int)>($r6, i0);

        $r8 = specialinvoke r5.<org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable: org.apache.cxf.jaxrs.model.ProviderInfo newProvider(java.lang.Object)>(r7);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r8);

     label2:
        return;
    }

    public java.util.Collection getFeatures()
    {
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        return null;
    }

    public java.util.Set getProviderClasses()
    {
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        return null;
    }

    public java.util.Set getProviderInstances()
    {
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        return null;
    }

    public java.util.Map getProperties()
    {
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        return null;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public javax.ws.rs.core.Configurable setProperties(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r1 := @parameter0: java.util.Map;

        return null;
    }

    public javax.ws.rs.core.Configurable setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        return null;
    }

    private java.lang.Object createProvider(java.lang.Class)
    {
        java.lang.Throwable $r2;
        java.lang.Class r0;
        java.lang.Object $r1;
        java.lang.RuntimeException $r3;
        org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable r4;

        r4 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$MethodConfigurable;

        r0 := @parameter0: java.lang.Class;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
