public class ucar.nc2.ft.fmrc.FmrcInv extends java.lang.Object
{
    private static org.slf4j.Logger log;
    private final java.lang.String name;
    private final java.util.List runSeqs;
    private final java.util.List ensCoords;
    private final java.util.List vertCoords;
    private final java.util.List fmrList;
    private final java.util.List uberGridList;
    private final java.util.List runTimeList;
    private final java.util.Date baseDate;
    private final java.util.List forecastTimeList;
    private java.util.Calendar cal;
    private final boolean regularize;
    private final ucar.nc2.ft.fmrc.TimeCoord tcOffAll;
    private final ucar.nc2.ft.fmrc.TimeCoord tcIntAll;

    public static java.util.Date addHour(java.util.Date, double)
    {
        java.util.Date r0, $r1;
        long $l0, l1;
        double d0, $d1, $d2, $d3, $d4;

        r0 := @parameter0: java.util.Date;

        d0 := @parameter1: double;

        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $d3 = (double) $l0;

        $d1 = d0 * 3600.0;

        $d2 = $d1 * 1000.0;

        $d4 = $d3 + $d2;

        l1 = (long) $d4;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>(long)>(l1);

        return $r1;
    }

    void <init>(java.lang.String, java.util.List, boolean)
    {
        ucar.nc2.ft.fmrc.FmrInv r74;
        ucar.nc2.ft.fmrc.TimeCoord$Tinv $r66;
        ucar.nc2.ft.fmrc.TimeCoord$Tinv[] $r35, $r37, $r38;
        ucar.nc2.ft.fmrc.TimeCoord $r32, $r34, $r40, $r42, r77;
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq r79;
        java.lang.Object[] $r21, $r27, $r36;
        java.lang.Double $r44, $r59;
        double[] $r56, $r60, $r61, r80;
        java.util.ArrayList $r1, $r2, $r3, $r5, $r7, $r13;
        java.lang.String r4, $r68, $r71, $r72;
        ucar.nc2.ft.fmrc.FmrInv$GridVariable r75;
        java.util.Date $r33, $r41, $r49, $r50, $r57, $r58, $r62, $r63, $r64, $r65, r73;
        ucar.nc2.ft.fmrc.FmrcInv r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Collection $r14;
        java.util.List r6, $r15, $r16, $r18, $r24, $r25, $r30, $r39, $r48, $r51, $r53;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid $r70, r76, r78;
        java.util.Date[] $r20, $r22, $r23;
        java.util.HashMap $r8;
        java.util.HashSet $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6;
        java.util.Iterator $r12, $r17, $r19, $r31, $r52, $r54;
        java.lang.Double[] $r26, $r28, $r29;
        java.lang.Object $r43, $r45, $r46, $r47, $r55, $r67, $r69;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv;

        r4 := @parameter0: java.lang.String;

        r6 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List runSeqs> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List ensCoords> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List vertCoords> = $r3;

        r0.<ucar.nc2.ft.fmrc.FmrcInv: java.lang.String name> = r4;

        r0.<ucar.nc2.ft.fmrc.FmrcInv: boolean regularize> = z0;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>(r6);

        r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List fmrList> = $r5;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List runTimeList> = $r7;

        r73 = null;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        $r12 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r47 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r74 = (ucar.nc2.ft.fmrc.FmrInv) $r47;

        $r48 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List runTimeList>;

        $r49 = virtualinvoke r74.<ucar.nc2.ft.fmrc.FmrInv: java.util.Date getRunDate()>();

        interfaceinvoke $r48.<java.util.List: boolean add(java.lang.Object)>($r49);

        if r73 != null goto label02;

        r73 = virtualinvoke r74.<ucar.nc2.ft.fmrc.FmrInv: java.util.Date getRunDate()>();

     label02:
        $r50 = virtualinvoke r74.<ucar.nc2.ft.fmrc.FmrInv: java.util.Date getRunDate()>();

        $i6 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcInv: int getHour(java.util.Date)>($r50);

        $r51 = virtualinvoke r74.<ucar.nc2.ft.fmrc.FmrInv: java.util.List getGrids()>();

        $r52 = interfaceinvoke $r51.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z7 = interfaceinvoke $r52.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label05;

        $r67 = interfaceinvoke $r52.<java.util.Iterator: java.lang.Object next()>();

        r75 = (ucar.nc2.ft.fmrc.FmrInv$GridVariable) $r67;

        $r68 = virtualinvoke r75.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: java.lang.String getName()>();

        $r69 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r68);

        r76 = (ucar.nc2.ft.fmrc.FmrcInv$UberGrid) $r69;

        if r76 != null goto label04;

        $r70 = new ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        $r71 = virtualinvoke r75.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: java.lang.String getName()>();

        specialinvoke $r70.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: void <init>(ucar.nc2.ft.fmrc.FmrcInv,java.lang.String)>(r0, $r71);

        r76 = $r70;

        $r72 = virtualinvoke r75.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: java.lang.String getName()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r72, $r70);

     label04:
        virtualinvoke r76.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: void addGridVariable(ucar.nc2.ft.fmrc.FmrInv$GridVariable,int)>(r75, $i6);

        goto label03;

     label05:
        $r53 = virtualinvoke r74.<ucar.nc2.ft.fmrc.FmrInv: java.util.List getTimeCoords()>();

        $r54 = interfaceinvoke $r53.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z5 = interfaceinvoke $r54.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label12;

        $r55 = interfaceinvoke $r54.<java.util.Iterator: java.lang.Object next()>();

        r77 = (ucar.nc2.ft.fmrc.TimeCoord) $r55;

        $z6 = virtualinvoke r77.<ucar.nc2.ft.fmrc.TimeCoord: boolean isInterval()>();

        if $z6 == 0 goto label09;

        $r60 = virtualinvoke r77.<ucar.nc2.ft.fmrc.TimeCoord: double[] getBound1()>();

        $r61 = virtualinvoke r77.<ucar.nc2.ft.fmrc.TimeCoord: double[] getBound2()>();

        i8 = 0;

     label07:
        $i7 = lengthof $r60;

        if i8 >= $i7 goto label08;

        $r62 = virtualinvoke r74.<ucar.nc2.ft.fmrc.FmrInv: java.util.Date getRunDate()>();

        $d2 = $r60[i8];

        $r63 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: java.util.Date addHour(java.util.Date,double)>($r62, $d2);

        $r64 = virtualinvoke r74.<ucar.nc2.ft.fmrc.FmrInv: java.util.Date getRunDate()>();

        $d3 = $r61[i8];

        $r65 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: java.util.Date addHour(java.util.Date,double)>($r64, $d3);

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r65);

        $d4 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: double getOffsetInHours(java.util.Date,java.util.Date)>(r73, $r63);

        $d5 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: double getOffsetInHours(java.util.Date,java.util.Date)>(r73, $r65);

        $r66 = new ucar.nc2.ft.fmrc.TimeCoord$Tinv;

        specialinvoke $r66.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: void <init>(double,double)>($d4, $d5);

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>($r66);

        i8 = i8 + 1;

        goto label07;

     label08:
        goto label11;

     label09:
        $r56 = virtualinvoke r77.<ucar.nc2.ft.fmrc.TimeCoord: double[] getOffsetTimes()>();

        i9 = lengthof $r56;

        i10 = 0;

     label10:
        if i10 >= i9 goto label11;

        d6 = $r56[i10];

        $r57 = virtualinvoke r74.<ucar.nc2.ft.fmrc.FmrInv: java.util.Date getRunDate()>();

        $r58 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: java.util.Date addHour(java.util.Date,double)>($r57, d6);

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r58);

        $d1 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: double getOffsetInHours(java.util.Date,java.util.Date)>(r73, $r58);

        $r59 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r59);

        i10 = i10 + 1;

        goto label10;

     label11:
        goto label06;

     label12:
        goto label01;

     label13:
        r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.Date baseDate> = r73;

        $r13 = new java.util.ArrayList;

        $r14 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r13.<java.util.ArrayList: void <init>(java.util.Collection)>($r14);

        r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List uberGridList> = $r13;

        $r15 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List uberGridList>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r15);

        $r16 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List uberGridList>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z2 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label15;

        $r46 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r78 = (ucar.nc2.ft.fmrc.FmrcInv$UberGrid) $r46;

        virtualinvoke r78.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: void finish()>();

        goto label14;

     label15:
        i11 = 0;

        $r18 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List runSeqs>;

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z3 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label17;

        $r45 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r79 = (ucar.nc2.ft.fmrc.FmrcInv$RunSeq) $r45;

        $i5 = i11;

        i11 = i11 + 1;

        staticinvoke <ucar.nc2.ft.fmrc.FmrcInv$RunSeq: int access$002(ucar.nc2.ft.fmrc.FmrcInv$RunSeq,int)>(r79, $i5);

        goto label16;

     label17:
        $i0 = interfaceinvoke $r11.<java.util.Set: int size()>();

        $r20 = newarray (java.util.Date)[$i0];

        $r21 = interfaceinvoke $r11.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r20);

        $r22 = (java.util.Date[]) $r21;

        $r23 = (java.util.Date[]) $r22;

        $r24 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r23);

        r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List forecastTimeList> = $r24;

        $r25 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List forecastTimeList>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r25);

        $i1 = interfaceinvoke $r9.<java.util.Set: int size()>();

        $r26 = newarray (java.lang.Double)[$i1];

        $r27 = interfaceinvoke $r9.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r26);

        $r28 = (java.lang.Double[]) $r27;

        $r29 = (java.lang.Double[]) $r28;

        $r30 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r29);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r30);

        i12 = 0;

        $i2 = interfaceinvoke $r30.<java.util.List: int size()>();

        r80 = newarray (double)[$i2];

        $r31 = interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $z4 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label19;

        $r43 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        $r44 = (java.lang.Double) $r43;

        $d0 = virtualinvoke $r44.<java.lang.Double: double doubleValue()>();

        $i4 = i12;

        i12 = i12 + 1;

        r80[$i4] = $d0;

        goto label18;

     label19:
        $r32 = new ucar.nc2.ft.fmrc.TimeCoord;

        $r33 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.Date baseDate>;

        specialinvoke $r32.<ucar.nc2.ft.fmrc.TimeCoord: void <init>(java.util.Date)>($r33);

        r0.<ucar.nc2.ft.fmrc.FmrcInv: ucar.nc2.ft.fmrc.TimeCoord tcOffAll> = $r32;

        $r34 = r0.<ucar.nc2.ft.fmrc.FmrcInv: ucar.nc2.ft.fmrc.TimeCoord tcOffAll>;

        virtualinvoke $r34.<ucar.nc2.ft.fmrc.TimeCoord: void setOffsetTimes(double[])>(r80);

        $i3 = interfaceinvoke $r10.<java.util.Set: int size()>();

        $r35 = newarray (ucar.nc2.ft.fmrc.TimeCoord$Tinv)[$i3];

        $r36 = interfaceinvoke $r10.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r35);

        $r37 = (ucar.nc2.ft.fmrc.TimeCoord$Tinv[]) $r36;

        $r38 = (ucar.nc2.ft.fmrc.TimeCoord$Tinv[]) $r37;

        $r39 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r38);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r39);

        $r40 = new ucar.nc2.ft.fmrc.TimeCoord;

        $r41 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.Date baseDate>;

        specialinvoke $r40.<ucar.nc2.ft.fmrc.TimeCoord: void <init>(java.util.Date)>($r41);

        r0.<ucar.nc2.ft.fmrc.FmrcInv: ucar.nc2.ft.fmrc.TimeCoord tcIntAll> = $r40;

        $r42 = r0.<ucar.nc2.ft.fmrc.FmrcInv: ucar.nc2.ft.fmrc.TimeCoord tcIntAll>;

        virtualinvoke $r42.<ucar.nc2.ft.fmrc.TimeCoord: void setBounds(java.util.List)>($r39);

        return;
    }

    public java.util.List getFmrList()
    {
        java.util.List $r1;
        ucar.nc2.ft.fmrc.FmrcInv r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List fmrList>;

        return $r1;
    }

    private int getHour(java.util.Date)
    {
        java.util.Date r2;
        java.util.TimeZone $r7;
        ucar.nc2.ft.fmrc.FmrcInv r0;
        java.util.Calendar $r1, $r3, $r4, $r5, $r6;
        int $i0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv;

        r2 := @parameter0: java.util.Date;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.Calendar cal>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.Calendar cal> = $r5;

        $r6 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.Calendar cal>;

        $r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r6.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r7);

     label1:
        $r3 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.Calendar cal>;

        virtualinvoke $r3.<java.util.Calendar: void setTime(java.util.Date)>(r2);

        $r4 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.Calendar cal>;

        $i0 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(11);

        return $i0;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        ucar.nc2.ft.fmrc.FmrcInv r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.lang.String name>;

        return $r1;
    }

    public java.util.List getRunSeqs()
    {
        java.util.List $r1;
        ucar.nc2.ft.fmrc.FmrcInv r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List runSeqs>;

        return $r1;
    }

    public java.util.List getEnsCoords()
    {
        java.util.List $r1;
        ucar.nc2.ft.fmrc.FmrcInv r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List ensCoords>;

        return $r1;
    }

    public java.util.List getVertCoords()
    {
        java.util.List $r1;
        ucar.nc2.ft.fmrc.FmrcInv r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List vertCoords>;

        return $r1;
    }

    public java.util.List getUberGrids()
    {
        java.util.List $r1;
        ucar.nc2.ft.fmrc.FmrcInv r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List uberGridList>;

        return $r1;
    }

    public ucar.nc2.ft.fmrc.FmrcInv$UberGrid findUberGrid(java.lang.String)
    {
        java.util.Iterator $r2;
        ucar.nc2.ft.fmrc.FmrcInv r0;
        java.util.List $r1;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r4;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List uberGridList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.ft.fmrc.FmrcInv$UberGrid) $r3;

        $r5 = virtualinvoke r4.<ucar.nc2.ft.fmrc.FmrcInv$UberGrid: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public java.util.List getForecastTimes()
    {
        java.util.List $r1;
        ucar.nc2.ft.fmrc.FmrcInv r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List forecastTimeList>;

        return $r1;
    }

    public java.util.List getFmrInv()
    {
        java.util.List $r1;
        ucar.nc2.ft.fmrc.FmrcInv r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List fmrList>;

        return $r1;
    }

    public java.util.Date getBaseDate()
    {
        ucar.nc2.ft.fmrc.FmrcInv r0;
        java.util.Date $r1;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.Date baseDate>;

        return $r1;
    }

    public static double getOffsetInHours(java.util.Date, java.util.Date)
    {
        java.util.Date r0, r1;
        long $l0, $l1, $l2;
        double d0, $d1, $d2, $d3;

        r1 := @parameter0: java.util.Date;

        r0 := @parameter1: java.util.Date;

        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $l1 = virtualinvoke r1.<java.util.Date: long getTime()>();

        $l2 = $l0 - $l1;

        d0 = (double) $l2;

        $d1 = d0 / 1000.0;

        $d2 = $d1 / 60.0;

        $d3 = $d2 / 60.0;

        return $d3;
    }

    public static java.util.Date makeOffsetDate(java.util.Date, double)
    {
        java.util.Date r0, $r1;
        long $l0, $l1, l2;
        double d0, $d1, $d2, $d3;

        r0 := @parameter0: java.util.Date;

        d0 := @parameter1: double;

        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $d1 = d0 * 60.0;

        $d2 = $d1 * 60.0;

        $d3 = $d2 * 1000.0;

        $l1 = (long) $d3;

        l2 = $l0 + $l1;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>(long)>(l2);

        return $r1;
    }

    private ucar.nc2.ft.fmrc.FmrcInv$RunSeq findRunSeq(java.util.List)
    {
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq $r3, r7;
        java.util.Iterator $r2;
        ucar.nc2.ft.fmrc.FmrcInv r0;
        java.util.List $r1, r4, $r5;
        java.lang.Object $r6;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv;

        r4 := @parameter0: java.util.List;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List runSeqs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r7 = (ucar.nc2.ft.fmrc.FmrcInv$RunSeq) $r6;

        $z1 = virtualinvoke r7.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: boolean equalsData(java.util.List)>(r4);

        if $z1 == 0 goto label2;

        return r7;

     label2:
        goto label1;

     label3:
        $r3 = new ucar.nc2.ft.fmrc.FmrcInv$RunSeq;

        specialinvoke $r3.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: void <init>(ucar.nc2.ft.fmrc.FmrcInv,java.util.List)>(r0, r4);

        $r5 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List runSeqs>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r3);

        return $r3;
    }

    static ucar.nc2.ft.fmrc.FmrcInv$RunSeq access$100(ucar.nc2.ft.fmrc.FmrcInv, java.util.List)
    {
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq $r2;
        java.util.List r1;
        ucar.nc2.ft.fmrc.FmrcInv r0;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcInv;

        r1 := @parameter1: java.util.List;

        $r2 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcInv: ucar.nc2.ft.fmrc.FmrcInv$RunSeq findRunSeq(java.util.List)>(r1);

        return $r2;
    }

    static boolean access$200(ucar.nc2.ft.fmrc.FmrcInv)
    {
        ucar.nc2.ft.fmrc.FmrcInv r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcInv;

        $z0 = r0.<ucar.nc2.ft.fmrc.FmrcInv: boolean regularize>;

        return $z0;
    }

    static int access$300(ucar.nc2.ft.fmrc.FmrcInv, java.util.Date)
    {
        int $i0;
        ucar.nc2.ft.fmrc.FmrcInv r0;
        java.util.Date r1;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcInv;

        r1 := @parameter1: java.util.Date;

        $i0 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcInv: int getHour(java.util.Date)>(r1);

        return $i0;
    }

    static java.util.Date access$500(ucar.nc2.ft.fmrc.FmrcInv)
    {
        ucar.nc2.ft.fmrc.FmrcInv r0;
        java.util.Date $r1;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcInv;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.Date baseDate>;

        return $r1;
    }

    static java.util.List access$600(ucar.nc2.ft.fmrc.FmrcInv)
    {
        java.util.List $r1;
        ucar.nc2.ft.fmrc.FmrcInv r0;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcInv;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List runTimeList>;

        return $r1;
    }

    static org.slf4j.Logger access$700()
    {
        org.slf4j.Logger $r0;

        $r0 = <ucar.nc2.ft.fmrc.FmrcInv: org.slf4j.Logger log>;

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/ft/fmrc/FmrcInv;");

        <ucar.nc2.ft.fmrc.FmrcInv: org.slf4j.Logger log> = $r0;

        return;
    }
}
