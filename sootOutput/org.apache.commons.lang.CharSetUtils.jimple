public class org.apache.commons.lang.CharSetUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.lang.CharSetUtils r0;

        r0 := @this: org.apache.commons.lang.CharSetUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.commons.lang.CharSet evaluateSet(java.lang.String[])
    {
        java.lang.String[] r0;
        org.apache.commons.lang.CharSet $r1;

        r0 := @parameter0: java.lang.String[];

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.apache.commons.lang.CharSet;

        specialinvoke $r1.<org.apache.commons.lang.CharSet: void <init>(java.lang.String[])>(r0);

        return $r1;
    }

    public static java.lang.String squeeze(java.lang.String, java.lang.String)
    {
        java.lang.String[] r2;
        java.lang.String r0, r1, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1);

        if $z1 == 0 goto label2;

     label1:
        return r0;

     label2:
        r2 = newarray (java.lang.String)[1];

        r2[0] = r1;

        $r3 = staticinvoke <org.apache.commons.lang.CharSetUtils: java.lang.String squeeze(java.lang.String,java.lang.String[])>(r0, r2);

        return $r3;
    }

    public static java.lang.String squeeze(java.lang.String, java.lang.String[])
    {
        java.lang.String[] r1;
        char c4;
        org.apache.commons.lang.CharSet $r2;
        java.lang.StringBuffer $r6;
        int $i0, i1, i2, i3, $i5;
        char[] $r4;
        java.lang.String r0, $r5;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z1 == 0 goto label2;

     label1:
        return r0;

     label2:
        $r2 = staticinvoke <org.apache.commons.lang.CharSet: org.apache.commons.lang.CharSet getInstance(java.lang.String[])>(r1);

        $r6 = new java.lang.StringBuffer;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(int)>($i0);

        $r4 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i1 = lengthof $r4;

        i2 = 32;

        i3 = 0;

     label3:
        if i3 >= i1 goto label6;

        c4 = $r4[i3];

        $z2 = virtualinvoke $r2.<org.apache.commons.lang.CharSet: boolean contains(char)>(c4);

        if $z2 == 0 goto label4;

        $i5 = (int) c4;

        if $i5 != i2 goto label4;

        if i3 == 0 goto label4;

        goto label5;

     label4:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c4);

        i2 = c4;

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        $r5 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static int count(java.lang.String, java.lang.String)
    {
        int $i0;
        java.lang.String[] r2;
        java.lang.String r0, r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1);

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = newarray (java.lang.String)[1];

        r2[0] = r1;

        $i0 = staticinvoke <org.apache.commons.lang.CharSetUtils: int count(java.lang.String,java.lang.String[])>(r0, r2);

        return $i0;
    }

    public static int count(java.lang.String, java.lang.String[])
    {
        java.lang.String[] r1;
        char $c1;
        org.apache.commons.lang.CharSet $r2;
        int i0, i2, i3;
        char[] $r3;
        java.lang.String r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = staticinvoke <org.apache.commons.lang.CharSet: org.apache.commons.lang.CharSet getInstance(java.lang.String[])>(r1);

        i2 = 0;

        $r3 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i0 = lengthof $r3;

        i3 = 0;

     label3:
        if i3 >= i0 goto label5;

        $c1 = $r3[i3];

        $z2 = virtualinvoke $r2.<org.apache.commons.lang.CharSet: boolean contains(char)>($c1);

        if $z2 == 0 goto label4;

        i2 = i2 + 1;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        return i2;
    }

    public static java.lang.String keep(java.lang.String, java.lang.String)
    {
        int $i0;
        java.lang.String[] r2;
        java.lang.String r0, r1, $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1);

        if $z0 == 0 goto label3;

     label2:
        return "";

     label3:
        r2 = newarray (java.lang.String)[1];

        r2[0] = r1;

        $r3 = staticinvoke <org.apache.commons.lang.CharSetUtils: java.lang.String keep(java.lang.String,java.lang.String[])>(r0, r2);

        return $r3;
    }

    public static java.lang.String keep(java.lang.String, java.lang.String[])
    {
        int $i0;
        java.lang.String[] r1;
        java.lang.String r0, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        $z0 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z0 == 0 goto label3;

     label2:
        return "";

     label3:
        $r2 = staticinvoke <org.apache.commons.lang.CharSetUtils: java.lang.String modify(java.lang.String,java.lang.String[],boolean)>(r0, r1, 1);

        return $r2;
    }

    public static java.lang.String delete(java.lang.String, java.lang.String)
    {
        java.lang.String[] r2;
        java.lang.String r0, r1, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1);

        if $z1 == 0 goto label2;

     label1:
        return r0;

     label2:
        r2 = newarray (java.lang.String)[1];

        r2[0] = r1;

        $r3 = staticinvoke <org.apache.commons.lang.CharSetUtils: java.lang.String delete(java.lang.String,java.lang.String[])>(r0, r2);

        return $r3;
    }

    public static java.lang.String delete(java.lang.String, java.lang.String[])
    {
        java.lang.String[] r1;
        java.lang.String r0, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z1 == 0 goto label2;

     label1:
        return r0;

     label2:
        $r2 = staticinvoke <org.apache.commons.lang.CharSetUtils: java.lang.String modify(java.lang.String,java.lang.String[],boolean)>(r0, r1, 0);

        return $r2;
    }

    private static java.lang.String modify(java.lang.String, java.lang.String[], boolean)
    {
        java.lang.String[] r0;
        char $c2, $c3;
        org.apache.commons.lang.CharSet $r1;
        java.lang.StringBuffer $r2;
        int $i0, i1, i4;
        char[] $r4;
        java.lang.String r3, $r5;
        boolean $z0, z1;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String[];

        z1 := @parameter2: boolean;

        $r1 = staticinvoke <org.apache.commons.lang.CharSet: org.apache.commons.lang.CharSet getInstance(java.lang.String[])>(r0);

        $r2 = new java.lang.StringBuffer;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>($i0);

        $r4 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>();

        i1 = lengthof $r4;

        i4 = 0;

     label1:
        if i4 >= i1 goto label3;

        $c2 = $r4[i4];

        $z0 = virtualinvoke $r1.<org.apache.commons.lang.CharSet: boolean contains(char)>($c2);

        if $z0 != z1 goto label2;

        $c3 = $r4[i4];

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String translate(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r7;
        int $i0, i1, $i2, i3, $i5, i8, i9, $i10, $i12;
        java.lang.String r0, r3, $r5, r6;
        boolean $z0;
        char $c4, $c6, $c7;
        char[] $r2, $r4;

        r0 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r7 = new java.lang.StringBuffer;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r7.<java.lang.StringBuffer: void <init>(int)>($i0);

        $r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $r4 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>();

        i1 = lengthof $r2;

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        i3 = $i2 - 1;

        i8 = 0;

     label2:
        if i8 >= i1 goto label6;

        $c4 = $r2[i8];

        $i10 = (int) $c4;

        $i5 = virtualinvoke r6.<java.lang.String: int indexOf(int)>($i10);

        i9 = $i5;

        $i12 = (int) -1;

        if $i5 == $i12 goto label4;

        if $i5 <= i3 goto label3;

        i9 = i3;

     label3:
        $c7 = $r4[i9];

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c7);

        goto label5;

     label4:
        $c6 = $r2[i8];

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

     label5:
        i8 = i8 + 1;

        goto label2;

     label6:
        $r5 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }
}
