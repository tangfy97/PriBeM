public class org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput extends org.apache.lucene.store.FSDirectory$FSIndexInput
{
    private java.nio.ByteBuffer byteBuf;
    final java.nio.channels.FileChannel channel;
    static final boolean $assertionsDisabled;

    public void <init>(java.io.File, org.apache.lucene.store.IOContext, int) throws java.io.IOException
    {
        java.io.RandomAccessFile $r8;
        org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput r0;
        java.io.File r3;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String $r6;
        org.apache.lucene.store.IOContext r7;
        java.nio.channels.FileChannel $r9;

        r0 := @this: org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput;

        r3 := @parameter0: java.io.File;

        r7 := @parameter1: org.apache.lucene.store.IOContext;

        i0 := @parameter2: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NIOFSIndexInput(path=\"");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.lucene.store.FSDirectory$FSIndexInput: void <init>(java.lang.String,java.io.File,org.apache.lucene.store.IOContext,int)>($r6, r3, r7, i0);

        $r8 = r0.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: java.io.RandomAccessFile file>;

        $r9 = virtualinvoke $r8.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        r0.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: java.nio.channels.FileChannel channel> = $r9;

        return;
    }

    public void <init>(java.lang.String, java.io.File, java.io.RandomAccessFile, java.nio.channels.FileChannel, long, long, int, int)
    {
        java.io.RandomAccessFile r14;
        org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput r0;
        long l0, l1, $l2;
        int i3, i4;
        java.lang.String r3, $r13;
        java.io.File r6;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12;
        java.nio.channels.FileChannel r15;

        r0 := @this: org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.io.File;

        r14 := @parameter2: java.io.RandomAccessFile;

        r15 := @parameter3: java.nio.channels.FileChannel;

        l0 := @parameter4: long;

        l1 := @parameter5: long;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NIOFSIndexInput(");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in path=\"");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" slice=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $l2 = l0 + l1;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.lucene.store.FSDirectory$FSIndexInput: void <init>(java.lang.String,java.io.RandomAccessFile,long,long,int,int)>($r13, r14, l0, l1, i3, i4);

        r0.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: java.nio.channels.FileChannel channel> = r15;

        r0.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: boolean isClone> = 1;

        return;
    }

    protected void newBuffer(byte[])
    {
        byte[] r1;
        org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput r0;
        java.nio.ByteBuffer $r2;

        r0 := @this: org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.apache.lucene.store.FSDirectory$FSIndexInput: void newBuffer(byte[])>(r1);

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1);

        r0.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: java.nio.ByteBuffer byteBuf> = $r2;

        return;
    }

    protected void readInternal(byte[], int, int) throws java.io.IOException
    {
        byte[] r0, $r2;
        java.nio.ByteBuffer $r10, $r11, $r12, r29;
        byte $b7;
        boolean $z0, $z1;
        java.io.EOFException $r33;
        java.lang.StringBuilder $r6, $r7, $r18, $r19, $r20, $r25, $r26, $r27, $r32, $r34, $r36;
        org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput r1;
        long $l2, $l3, $l4, $l5, $l6, $l10, $l12, l19;
        java.lang.AssertionError $r30, $r31;
        int i0, i1, $i8, $i9, $i11, $i13, $i14, i15, $i16, $i17, i18, i20, $i21;
        java.lang.String $r8, $r17, $r21, $r28;
        java.io.IOException $r14, $r37;
        java.nio.channels.FileChannel $r3;
        java.lang.OutOfMemoryError $r22, $r35;

        r1 := @this: org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r1.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: byte[] buffer>;

        if r0 != $r2 goto label02;

        if 0 != i0 goto label02;

        $z0 = <org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r12 = r1.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: java.nio.ByteBuffer byteBuf>;

        if $r12 != null goto label01;

        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>()>();

        throw $r30;

     label01:
        $r10 = r1.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: java.nio.ByteBuffer byteBuf>;

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r11 = r1.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: java.nio.ByteBuffer byteBuf>;

        virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(i1);

        r29 = r1.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: java.nio.ByteBuffer byteBuf>;

        goto label03;

     label02:
        r29 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>(r0, i0, i1);

     label03:
        $i14 = virtualinvoke r29.<java.nio.ByteBuffer: int position()>();

        i15 = $i14;

        $i16 = virtualinvoke r29.<java.nio.ByteBuffer: int limit()>();

        $i17 = $i16 - $i14;

        i18 = $i17;

        $z1 = <org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: boolean $assertionsDisabled>;

        if $z1 != 0 goto label04;

        if $i17 == i1 goto label04;

        $r31 = new java.lang.AssertionError;

        specialinvoke $r31.<java.lang.AssertionError: void <init>()>();

        throw $r31;

     label04:
        $l2 = virtualinvoke r1.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: long getFilePointer()>();

        $l3 = r1.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: long off>;

        $l12 = $l2 + $l3;

        l19 = $l12;

        $l4 = (long) i1;

        $l6 = $l12 + $l4;

        $l5 = r1.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: long end>;

        $b7 = $l6 cmp $l5;

        $i21 = (int) $b7;

        if $i21 <= 0 goto label05;

        $r33 = new java.io.EOFException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read past EOF: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.io.EOFException: void <init>(java.lang.String)>($r8);

        throw $r33;

     label05:
        if i18 <= 0 goto label08;

        $i8 = r1.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: int chunkSize>;

        if i18 <= $i8 goto label06;

        $i11 = r1.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: int chunkSize>;

        i20 = i15 + $i11;

        goto label07;

     label06:
        i20 = i15 + i18;

     label07:
        virtualinvoke r29.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(i20);

        $r3 = r1.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: java.nio.channels.FileChannel channel>;

        $i9 = virtualinvoke $r3.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer,long)>(r29, l19);

        $l10 = (long) $i9;

        l19 = l19 + $l10;

        i15 = i15 + $i9;

        i18 = i18 - $i9;

        goto label05;

     label08:
        goto label11;

     label09:
        $r22 := @caughtexception;

        $r35 = new java.lang.OutOfMemoryError;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OutOfMemoryError likely caused by the Sun VM Bug described in https://issues.apache.org/jira/browse/LUCENE-1566; try calling FSDirectory.setReadChunkSize with a value smaller than the current chunk size (");

        $i13 = r1.<org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: int chunkSize>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.OutOfMemoryError: void <init>(java.lang.String)>($r28);

        virtualinvoke $r35.<java.lang.OutOfMemoryError: java.lang.Throwable initCause(java.lang.Throwable)>($r22);

        throw $r35;

     label10:
        $r14 := @caughtexception;

        $r37 = new java.io.IOException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.io.IOException: java.lang.String getMessage()>();

        $r18 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r21, $r14);

        throw $r37;

     label11:
        return;

        catch java.lang.OutOfMemoryError from label05 to label08 with label09;
        catch java.io.IOException from label05 to label08 with label10;
    }

    protected void seekInternal(long) throws java.io.IOException
    {
        long l0;
        org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput r0;

        r0 := @this: org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput;

        l0 := @parameter0: long;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/store/NIOFSDirectory;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput: boolean $assertionsDisabled> = $z1;

        return;
    }
}
