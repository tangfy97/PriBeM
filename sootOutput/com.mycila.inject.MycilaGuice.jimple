public final class com.mycila.inject.MycilaGuice extends java.lang.Object
{
    private final com.google.inject.Binder binder;

    private void <init>(com.google.inject.Binder)
    {
        com.mycila.inject.MycilaGuice r0;
        com.google.inject.Binder r1;

        r0 := @this: com.mycila.inject.MycilaGuice;

        r1 := @parameter0: com.google.inject.Binder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.MycilaGuice: com.google.inject.Binder binder> = r1;

        return;
    }

    public transient com.mycila.inject.MycilaGuice bindInterceptor(java.lang.Class, java.lang.String, java.lang.Class[], org.aopalliance.intercept.MethodInterceptor[])
    {
        com.mycila.inject.MycilaGuice r0, $r8;
        java.lang.NoSuchMethodException $r9;
        java.lang.Class[] r5;
        org.aopalliance.intercept.MethodInterceptor[] r7;
        java.lang.IllegalArgumentException $r10;
        com.mycila.inject.MycilaGuice$SignatureMatcher $r3;
        java.lang.Class r1;
        com.google.inject.matcher.Matcher $r2;
        java.lang.String r4, $r11;
        java.lang.reflect.Method $r6;

        r0 := @this: com.mycila.inject.MycilaGuice;

        r1 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.Class[];

        r7 := @parameter3: org.aopalliance.intercept.MethodInterceptor[];

     label1:
        $r2 = staticinvoke <com.google.inject.matcher.Matchers: com.google.inject.matcher.Matcher subclassesOf(java.lang.Class)>(r1);

        $r3 = new com.mycila.inject.MycilaGuice$SignatureMatcher;

        $r6 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r4, r5);

        specialinvoke $r3.<com.mycila.inject.MycilaGuice$SignatureMatcher: void <init>(java.lang.reflect.Method,com.mycila.inject.MycilaGuice$1)>($r6, null);

        $r8 = virtualinvoke r0.<com.mycila.inject.MycilaGuice: com.mycila.inject.MycilaGuice bindInterceptor(com.google.inject.matcher.Matcher,com.google.inject.matcher.Matcher,org.aopalliance.intercept.MethodInterceptor[])>($r2, $r3, r7);

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r9.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r9);

        throw $r10;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public transient com.mycila.inject.MycilaGuice bindInterceptor(com.google.inject.matcher.Matcher, com.google.inject.matcher.Matcher, org.aopalliance.intercept.MethodInterceptor[])
    {
        com.mycila.inject.MycilaGuice r1;
        org.aopalliance.intercept.MethodInterceptor[] r0;
        org.aopalliance.intercept.MethodInterceptor r5;
        com.google.inject.Binder $r4;
        int i0, i1;
        com.google.inject.matcher.Matcher r2, r3;

        r1 := @this: com.mycila.inject.MycilaGuice;

        r2 := @parameter0: com.google.inject.matcher.Matcher;

        r3 := @parameter1: com.google.inject.matcher.Matcher;

        r0 := @parameter2: org.aopalliance.intercept.MethodInterceptor[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r5 = r0[i1];

        virtualinvoke r1.<com.mycila.inject.MycilaGuice: java.lang.Object requestInjection(java.lang.Object)>(r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = r1.<com.mycila.inject.MycilaGuice: com.google.inject.Binder binder>;

        interfaceinvoke $r4.<com.google.inject.Binder: void bindInterceptor(com.google.inject.matcher.Matcher,com.google.inject.matcher.Matcher,org.aopalliance.intercept.MethodInterceptor[])>(r2, r3, r0);

        return r1;
    }

    public com.google.inject.Scope expiringSingleton(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit r2;
        com.mycila.inject.MycilaGuice r0;
        com.mycila.inject.scope.ExpiringSingleton $r1;
        long l0;
        java.lang.Object $r3;
        com.google.inject.Scope $r4;

        r0 := @this: com.mycila.inject.MycilaGuice;

        l0 := @parameter0: long;

        r2 := @parameter1: java.util.concurrent.TimeUnit;

        $r1 = new com.mycila.inject.scope.ExpiringSingleton;

        specialinvoke $r1.<com.mycila.inject.scope.ExpiringSingleton: void <init>(long,java.util.concurrent.TimeUnit)>(l0, r2);

        $r3 = virtualinvoke r0.<com.mycila.inject.MycilaGuice: java.lang.Object requestInjection(java.lang.Object)>($r1);

        $r4 = (com.google.inject.Scope) $r3;

        return $r4;
    }

    public com.google.inject.Scope renewableSingleton(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit r2;
        com.mycila.inject.MycilaGuice r0;
        com.mycila.inject.scope.RenewableSingleton $r1;
        long l0;
        java.lang.Object $r3;
        com.google.inject.Scope $r4;

        r0 := @this: com.mycila.inject.MycilaGuice;

        l0 := @parameter0: long;

        r2 := @parameter1: java.util.concurrent.TimeUnit;

        $r1 = new com.mycila.inject.scope.RenewableSingleton;

        specialinvoke $r1.<com.mycila.inject.scope.RenewableSingleton: void <init>(long,java.util.concurrent.TimeUnit)>(l0, r2);

        $r3 = virtualinvoke r0.<com.mycila.inject.MycilaGuice: java.lang.Object requestInjection(java.lang.Object)>($r1);

        $r4 = (com.google.inject.Scope) $r3;

        return $r4;
    }

    public com.google.inject.Scope weakSingleton()
    {
        com.mycila.inject.MycilaGuice r0;
        com.mycila.inject.scope.WeakSingleton $r1;
        java.lang.Object $r2;
        com.google.inject.Scope $r3;

        r0 := @this: com.mycila.inject.MycilaGuice;

        $r1 = new com.mycila.inject.scope.WeakSingleton;

        specialinvoke $r1.<com.mycila.inject.scope.WeakSingleton: void <init>()>();

        $r2 = virtualinvoke r0.<com.mycila.inject.MycilaGuice: java.lang.Object requestInjection(java.lang.Object)>($r1);

        $r3 = (com.google.inject.Scope) $r2;

        return $r3;
    }

    public com.google.inject.Scope softSingleton()
    {
        com.mycila.inject.MycilaGuice r0;
        com.mycila.inject.scope.SoftSingleton $r1;
        java.lang.Object $r2;
        com.google.inject.Scope $r3;

        r0 := @this: com.mycila.inject.MycilaGuice;

        $r1 = new com.mycila.inject.scope.SoftSingleton;

        specialinvoke $r1.<com.mycila.inject.scope.SoftSingleton: void <init>()>();

        $r2 = virtualinvoke r0.<com.mycila.inject.MycilaGuice: java.lang.Object requestInjection(java.lang.Object)>($r1);

        $r3 = (com.google.inject.Scope) $r2;

        return $r3;
    }

    public com.google.inject.Scope concurrentSingleton()
    {
        java.util.concurrent.TimeUnit $r2;
        com.mycila.inject.MycilaGuice r0;
        com.mycila.inject.scope.ConcurrentSingleton $r1;
        java.lang.Object $r3;
        com.google.inject.Scope $r4;

        r0 := @this: com.mycila.inject.MycilaGuice;

        $r1 = new com.mycila.inject.scope.ConcurrentSingleton;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        specialinvoke $r1.<com.mycila.inject.scope.ConcurrentSingleton: void <init>(long,java.util.concurrent.TimeUnit)>(10L, $r2);

        $r3 = virtualinvoke r0.<com.mycila.inject.MycilaGuice: java.lang.Object requestInjection(java.lang.Object)>($r1);

        $r4 = (com.google.inject.Scope) $r3;

        return $r4;
    }

    public com.google.inject.Scope concurrentSingleton(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit r2;
        com.mycila.inject.MycilaGuice r0;
        com.mycila.inject.scope.ConcurrentSingleton $r1;
        long l0;
        java.lang.Object $r3;
        com.google.inject.Scope $r4;

        r0 := @this: com.mycila.inject.MycilaGuice;

        l0 := @parameter0: long;

        r2 := @parameter1: java.util.concurrent.TimeUnit;

        $r1 = new com.mycila.inject.scope.ConcurrentSingleton;

        specialinvoke $r1.<com.mycila.inject.scope.ConcurrentSingleton: void <init>(long,java.util.concurrent.TimeUnit)>(l0, r2);

        $r3 = virtualinvoke r0.<com.mycila.inject.MycilaGuice: java.lang.Object requestInjection(java.lang.Object)>($r1);

        $r4 = (com.google.inject.Scope) $r3;

        return $r4;
    }

    public com.mycila.inject.scope.ResetScope resetSingleton()
    {
        com.mycila.inject.MycilaGuice r0;
        com.mycila.inject.scope.ResetScope $r3;
        com.mycila.inject.scope.ResetSingleton $r1;
        java.lang.Object $r2;

        r0 := @this: com.mycila.inject.MycilaGuice;

        $r1 = new com.mycila.inject.scope.ResetSingleton;

        specialinvoke $r1.<com.mycila.inject.scope.ResetSingleton: void <init>()>();

        $r2 = virtualinvoke r0.<com.mycila.inject.MycilaGuice: java.lang.Object requestInjection(java.lang.Object)>($r1);

        $r3 = (com.mycila.inject.scope.ResetScope) $r2;

        return $r3;
    }

    public com.mycila.inject.MycilaGuice bindAnnotationInjector(java.lang.Class, java.lang.Class)
    {
        com.mycila.inject.MycilaGuice r0;
        com.mycila.inject.injector.MemberInjectorTypeListener $r3;
        com.google.inject.Binder $r1;
        java.lang.Class r4, r5;
        java.lang.Object $r6;
        com.google.inject.matcher.Matcher $r2;
        com.google.inject.spi.TypeListener $r7;

        r0 := @this: com.mycila.inject.MycilaGuice;

        r4 := @parameter0: java.lang.Class;

        r5 := @parameter1: java.lang.Class;

        $r1 = r0.<com.mycila.inject.MycilaGuice: com.google.inject.Binder binder>;

        $r2 = staticinvoke <com.google.inject.matcher.Matchers: com.google.inject.matcher.Matcher any()>();

        $r3 = new com.mycila.inject.injector.MemberInjectorTypeListener;

        specialinvoke $r3.<com.mycila.inject.injector.MemberInjectorTypeListener: void <init>(java.lang.Class,java.lang.Class)>(r4, r5);

        $r6 = virtualinvoke r0.<com.mycila.inject.MycilaGuice: java.lang.Object requestInjection(java.lang.Object)>($r3);

        $r7 = (com.google.inject.spi.TypeListener) $r6;

        interfaceinvoke $r1.<com.google.inject.Binder: void bindListener(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeListener)>($r2, $r7);

        return r0;
    }

    public com.mycila.inject.MycilaGuice handleMethodAfterInjection(java.lang.Class, java.lang.Class)
    {
        com.mycila.inject.MycilaGuice r0;
        com.google.inject.Binder $r1;
        com.mycila.inject.injector.MethodHandlerTypeListener $r3;
        java.lang.Class r4, r5;
        java.lang.Object $r6;
        com.google.inject.matcher.Matcher $r2;
        com.google.inject.spi.TypeListener $r7;

        r0 := @this: com.mycila.inject.MycilaGuice;

        r4 := @parameter0: java.lang.Class;

        r5 := @parameter1: java.lang.Class;

        $r1 = r0.<com.mycila.inject.MycilaGuice: com.google.inject.Binder binder>;

        $r2 = staticinvoke <com.google.inject.matcher.Matchers: com.google.inject.matcher.Matcher any()>();

        $r3 = new com.mycila.inject.injector.MethodHandlerTypeListener;

        specialinvoke $r3.<com.mycila.inject.injector.MethodHandlerTypeListener: void <init>(java.lang.Class,java.lang.Class)>(r4, r5);

        $r6 = virtualinvoke r0.<com.mycila.inject.MycilaGuice: java.lang.Object requestInjection(java.lang.Object)>($r3);

        $r7 = (com.google.inject.spi.TypeListener) $r6;

        interfaceinvoke $r1.<com.google.inject.Binder: void bindListener(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeListener)>($r2, $r7);

        return r0;
    }

    public com.mycila.inject.MycilaGuice handleFieldAfterInjection(java.lang.Class, java.lang.Class)
    {
        com.mycila.inject.MycilaGuice r0;
        com.google.inject.Binder $r1;
        com.mycila.inject.injector.FieldHandlerTypeListener $r3;
        java.lang.Class r4, r5;
        java.lang.Object $r6;
        com.google.inject.matcher.Matcher $r2;
        com.google.inject.spi.TypeListener $r7;

        r0 := @this: com.mycila.inject.MycilaGuice;

        r4 := @parameter0: java.lang.Class;

        r5 := @parameter1: java.lang.Class;

        $r1 = r0.<com.mycila.inject.MycilaGuice: com.google.inject.Binder binder>;

        $r2 = staticinvoke <com.google.inject.matcher.Matchers: com.google.inject.matcher.Matcher any()>();

        $r3 = new com.mycila.inject.injector.FieldHandlerTypeListener;

        specialinvoke $r3.<com.mycila.inject.injector.FieldHandlerTypeListener: void <init>(java.lang.Class,java.lang.Class)>(r4, r5);

        $r6 = virtualinvoke r0.<com.mycila.inject.MycilaGuice: java.lang.Object requestInjection(java.lang.Object)>($r3);

        $r7 = (com.google.inject.spi.TypeListener) $r6;

        interfaceinvoke $r1.<com.google.inject.Binder: void bindListener(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeListener)>($r2, $r7);

        return r0;
    }

    public com.mycila.inject.MycilaGuice handleAfterInjection(java.lang.Class, java.lang.Class)
    {
        com.mycila.inject.MycilaGuice r0;
        com.google.inject.Binder $r1;
        com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener $r3;
        java.lang.Class r4, r5;
        java.lang.Object $r6;
        com.google.inject.matcher.Matcher $r2;
        com.google.inject.spi.TypeListener $r7;

        r0 := @this: com.mycila.inject.MycilaGuice;

        r4 := @parameter0: java.lang.Class;

        r5 := @parameter1: java.lang.Class;

        $r1 = r0.<com.mycila.inject.MycilaGuice: com.google.inject.Binder binder>;

        $r2 = staticinvoke <com.google.inject.matcher.Matchers: com.google.inject.matcher.Matcher any()>();

        $r3 = new com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener;

        specialinvoke $r3.<com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener: void <init>(java.lang.Class,java.lang.Class)>(r4, r5);

        $r6 = virtualinvoke r0.<com.mycila.inject.MycilaGuice: java.lang.Object requestInjection(java.lang.Object)>($r3);

        $r7 = (com.google.inject.spi.TypeListener) $r6;

        interfaceinvoke $r1.<com.google.inject.Binder: void bindListener(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeListener)>($r2, $r7);

        return r0;
    }

    public com.mycila.inject.MycilaGuice bind(java.lang.Class, java.lang.Object)
    {
        com.google.inject.binder.AnnotatedBindingBuilder $r3;
        com.mycila.inject.MycilaGuice r0;
        com.google.inject.Binder $r2;
        java.lang.Class r1;
        java.lang.Object r4, $r5;

        r0 := @this: com.mycila.inject.MycilaGuice;

        r1 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.lang.Object;

        $r2 = r0.<com.mycila.inject.MycilaGuice: com.google.inject.Binder binder>;

        $r3 = interfaceinvoke $r2.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(r1);

        $r5 = virtualinvoke r0.<com.mycila.inject.MycilaGuice: java.lang.Object requestInjection(java.lang.Object)>(r4);

        interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r5);

        return r0;
    }

    public com.mycila.inject.MycilaGuice install(com.google.inject.Module)
    {
        com.google.inject.Module r1, $r4;
        com.mycila.inject.MycilaGuice r0;
        com.google.inject.Binder $r2;
        java.lang.Object $r3;

        r0 := @this: com.mycila.inject.MycilaGuice;

        r1 := @parameter0: com.google.inject.Module;

        $r2 = r0.<com.mycila.inject.MycilaGuice: com.google.inject.Binder binder>;

        $r3 = virtualinvoke r0.<com.mycila.inject.MycilaGuice: java.lang.Object requestInjection(java.lang.Object)>(r1);

        $r4 = (com.google.inject.Module) $r3;

        interfaceinvoke $r2.<com.google.inject.Binder: void install(com.google.inject.Module)>($r4);

        return r0;
    }

    public java.lang.Object requestInjection(java.lang.Object)
    {
        java.lang.Object r1;
        com.mycila.inject.MycilaGuice r0;
        com.google.inject.Binder $r2;

        r0 := @this: com.mycila.inject.MycilaGuice;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mycila.inject.MycilaGuice: com.google.inject.Binder binder>;

        interfaceinvoke $r2.<com.google.inject.Binder: void requestInjection(java.lang.Object)>(r1);

        return r1;
    }

    public org.aopalliance.intercept.MethodInterceptor createDelegatingInterceptor(java.lang.Class)
    {
        org.aopalliance.intercept.MethodInterceptor $r3;
        com.mycila.inject.MycilaGuice r0;
        com.google.inject.Key $r2;
        java.lang.Class r1;

        r0 := @this: com.mycila.inject.MycilaGuice;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>(r1);

        $r3 = virtualinvoke r0.<com.mycila.inject.MycilaGuice: org.aopalliance.intercept.MethodInterceptor createDelegatingInterceptor(com.google.inject.Key)>($r2);

        return $r3;
    }

    public org.aopalliance.intercept.MethodInterceptor createDelegatingInterceptor(com.google.inject.Key)
    {
        com.google.inject.Provider $r3;
        com.mycila.inject.MycilaGuice r0;
        com.google.inject.Binder $r2;
        com.google.inject.Key r1;
        com.mycila.inject.MycilaGuice$DelegatingInterceptor $r4;

        r0 := @this: com.mycila.inject.MycilaGuice;

        r1 := @parameter0: com.google.inject.Key;

        $r2 = r0.<com.mycila.inject.MycilaGuice: com.google.inject.Binder binder>;

        $r3 = interfaceinvoke $r2.<com.google.inject.Binder: com.google.inject.Provider getProvider(com.google.inject.Key)>(r1);

        $r4 = new com.mycila.inject.MycilaGuice$DelegatingInterceptor;

        specialinvoke $r4.<com.mycila.inject.MycilaGuice$DelegatingInterceptor: void <init>(com.google.inject.Provider,com.mycila.inject.MycilaGuice$1)>($r3, null);

        return $r4;
    }

    public static com.mycila.inject.MycilaGuice in(com.google.inject.Binder)
    {
        com.mycila.inject.MycilaGuice $r0;
        com.google.inject.Binder r1;

        r1 := @parameter0: com.google.inject.Binder;

        $r0 = new com.mycila.inject.MycilaGuice;

        specialinvoke $r0.<com.mycila.inject.MycilaGuice: void <init>(com.google.inject.Binder)>(r1);

        return $r0;
    }

    public static boolean isBindingAnnotation(java.lang.Class)
    {
        java.lang.Class r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Lcom/google/inject/BindingAnnotation;");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Ljavax/inject/Qualifier;");

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }
}
