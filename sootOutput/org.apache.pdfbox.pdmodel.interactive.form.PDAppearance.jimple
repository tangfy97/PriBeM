public class org.apache.pdfbox.pdmodel.interactive.form.PDAppearance extends java.lang.Object
{
    private org.apache.pdfbox.pdmodel.interactive.form.PDVariableText parent;
    private java.lang.String value;
    private org.apache.pdfbox.cos.COSString defaultAppearance;
    private org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm acroForm;
    private java.util.List widgets;

    public void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm, org.apache.pdfbox.pdmodel.interactive.form.PDVariableText) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm r2;
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r0;
        org.apache.pdfbox.cos.COSString $r6;
        java.util.ArrayList $r1, $r7;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget $r9;
        java.util.List $r4, $r5, $r8;
        org.apache.pdfbox.pdmodel.interactive.form.PDVariableText r3;

        r0 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        r2 := @parameter0: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm;

        r3 := @parameter1: org.apache.pdfbox.pdmodel.interactive.form.PDVariableText;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: java.util.List widgets> = $r1;

        r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm acroForm> = r2;

        r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.pdmodel.interactive.form.PDVariableText parent> = r3;

        $r4 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.interactive.form.PDVariableText: java.util.List getKids()>();

        r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: java.util.List widgets> = $r4;

        $r5 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: java.util.List widgets>;

        if $r5 != null goto label1;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: java.util.List widgets> = $r7;

        $r8 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: java.util.List widgets>;

        $r9 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.interactive.form.PDVariableText: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget getWidget()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

     label1:
        $r6 = specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.cos.COSString getDefaultAppearance()>();

        r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.cos.COSString defaultAppearance> = $r6;

        return;
    }

    private org.apache.pdfbox.cos.COSString getDefaultAppearance()
    {
        org.apache.pdfbox.cos.COSArray r7;
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r0;
        org.apache.pdfbox.cos.COSString $r2, r16;
        org.apache.pdfbox.pdmodel.interactive.form.PDVariableText $r1, $r3;
        int $i0;
        org.apache.pdfbox.cos.COSName $r5, $r10, $r14;
        org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm $r8;
        org.apache.pdfbox.cos.COSDictionary $r4, $r9, r13;
        org.apache.pdfbox.cos.COSBase $r6, $r11, $r12, $r15;

        r0 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.pdmodel.interactive.form.PDVariableText parent>;

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.interactive.form.PDVariableText: org.apache.pdfbox.cos.COSString getDefaultAppearance()>();

        r16 = $r2;

        if $r2 != null goto label2;

        $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.pdmodel.interactive.form.PDVariableText parent>;

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.interactive.form.PDVariableText: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>;

        $r6 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5);

        r7 = (org.apache.pdfbox.cos.COSArray) $r6;

        if r7 == null goto label1;

        $i0 = virtualinvoke r7.<org.apache.pdfbox.cos.COSArray: int size()>();

        if $i0 <= 0 goto label1;

        $r12 = virtualinvoke r7.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(0);

        r13 = (org.apache.pdfbox.cos.COSDictionary) $r12;

        $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DA>;

        $r15 = virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r14);

        r16 = (org.apache.pdfbox.cos.COSString) $r15;

     label1:
        if r16 != null goto label2;

        $r8 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm acroForm>;

        $r9 = virtualinvoke $r8.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DA>;

        $r11 = virtualinvoke $r9.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r10);

        r16 = (org.apache.pdfbox.cos.COSString) $r11;

     label2:
        return r16;
    }

    private int getQ()
    {
        org.apache.pdfbox.cos.COSArray r10;
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r0;
        org.apache.pdfbox.cos.COSNumber r15;
        org.apache.pdfbox.pdmodel.interactive.form.PDVariableText $r1, $r2, $r6;
        int $i0, i1;
        org.apache.pdfbox.cos.COSName $r4, $r8, $r13;
        org.apache.pdfbox.cos.COSDictionary $r3, $r7, r12;
        org.apache.pdfbox.cos.COSBase $r5, $r9, $r11, $r14;

        r0 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.pdmodel.interactive.form.PDVariableText parent>;

        i1 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.interactive.form.PDVariableText: int getQ()>();

        $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.pdmodel.interactive.form.PDVariableText parent>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.interactive.form.PDVariableText: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName Q>;

        $r5 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r4);

        if $r5 != null goto label1;

        $r6 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.pdmodel.interactive.form.PDVariableText parent>;

        $r7 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.interactive.form.PDVariableText: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>;

        $r9 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r8);

        r10 = (org.apache.pdfbox.cos.COSArray) $r9;

        if r10 == null goto label1;

        $i0 = virtualinvoke r10.<org.apache.pdfbox.cos.COSArray: int size()>();

        if $i0 <= 0 goto label1;

        $r11 = virtualinvoke r10.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(0);

        r12 = (org.apache.pdfbox.cos.COSDictionary) $r11;

        $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName Q>;

        $r14 = virtualinvoke r12.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r13);

        r15 = (org.apache.pdfbox.cos.COSNumber) $r14;

        if r15 == null goto label1;

        i1 = virtualinvoke r15.<org.apache.pdfbox.cos.COSNumber: int intValue()>();

     label1:
        return i1;
    }

    private java.util.List getStreamTokens(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream r0;
        java.util.List r3;
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r1;
        org.apache.pdfbox.cos.COSStream $r2;

        r1 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream;

        r3 = null;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream: org.apache.pdfbox.cos.COSStream getStream()>();

        r3 = specialinvoke r1.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: java.util.List getStreamTokens(org.apache.pdfbox.cos.COSStream)>($r2);

     label1:
        return r3;
    }

    private java.util.List getStreamTokens(org.apache.pdfbox.cos.COSString) throws java.io.IOException
    {
        byte[] $r2;
        org.apache.pdfbox.cos.COSDocument $r7;
        org.apache.pdfbox.pdmodel.PDDocument $r6;
        org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm $r5;
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r4;
        org.apache.pdfbox.cos.COSString r0;
        org.apache.pdfbox.pdfparser.PDFStreamParser $r3;
        java.util.List r9;
        java.io.ByteArrayInputStream $r1;
        org.apache.pdfbox.io.RandomAccess $r8;

        r4 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        r0 := @parameter0: org.apache.pdfbox.cos.COSString;

        r9 = null;

        if r0 == null goto label1;

        $r1 = new java.io.ByteArrayInputStream;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>();

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        $r3 = new org.apache.pdfbox.pdfparser.PDFStreamParser;

        $r5 = r4.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm acroForm>;

        $r6 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.pdmodel.PDDocument getDocument()>();

        $r7 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        $r8 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.RandomAccess getScratchFile()>();

        specialinvoke $r3.<org.apache.pdfbox.pdfparser.PDFStreamParser: void <init>(java.io.InputStream,org.apache.pdfbox.io.RandomAccess)>($r1, $r8);

        virtualinvoke $r3.<org.apache.pdfbox.pdfparser.PDFStreamParser: void parse()>();

        r9 = virtualinvoke $r3.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.util.List getTokens()>();

     label1:
        return r9;
    }

    private java.util.List getStreamTokens(org.apache.pdfbox.cos.COSStream) throws java.io.IOException
    {
        org.apache.pdfbox.pdfparser.PDFStreamParser $r1;
        java.util.List r3;
        org.apache.pdfbox.cos.COSStream r0;
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r2;

        r2 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        r0 := @parameter0: org.apache.pdfbox.cos.COSStream;

        r3 = null;

        if r0 == null goto label1;

        $r1 = new org.apache.pdfbox.pdfparser.PDFStreamParser;

        specialinvoke $r1.<org.apache.pdfbox.pdfparser.PDFStreamParser: void <init>(org.apache.pdfbox.cos.COSStream)>(r0);

        virtualinvoke $r1.<org.apache.pdfbox.pdfparser.PDFStreamParser: void parse()>();

        r3 = virtualinvoke $r1.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.util.List getTokens()>();

     label1:
        return r3;
    }

    private boolean containsMarkedContent(java.util.List)
    {
        java.util.List r0;
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r2;
        org.apache.pdfbox.util.PDFOperator $r1;
        boolean $z0;

        r2 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <org.apache.pdfbox.util.PDFOperator: org.apache.pdfbox.util.PDFOperator getOperator(java.lang.String)>("BMC");

        $z0 = interfaceinvoke r0.<java.util.List: boolean contains(java.lang.Object)>($r1);

        return $z0;
    }

    public void setAppearanceValue(java.lang.String) throws java.io.IOException
    {
        byte[] $r15, $r18, $r24, $r26, $r27, $r54;
        org.apache.pdfbox.cos.COSFloat $r61;
        org.apache.pdfbox.pdmodel.interactive.form.PDField r44;
        java.util.Map $r4;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream $r36, r49, $r56;
        org.apache.pdfbox.pdmodel.PDDocument $r29;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget r45;
        org.apache.pdfbox.cos.COSBase $r40;
        org.apache.pdfbox.util.PDFOperator $r10, $r12, $r13, $r19, $r20;
        java.io.ByteArrayOutputStream $r57, $r59;
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r0;
        org.apache.pdfbox.cos.COSString $r7, r53;
        org.apache.pdfbox.pdmodel.font.PDFont $r9;
        java.lang.String $r14, $r23, $r25, r41;
        org.apache.pdfbox.pdmodel.interactive.action.type.PDAction $r37;
        org.apache.pdfbox.cos.COSDocument $r30;
        org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions r46;
        org.apache.pdfbox.pdmodel.common.COSObjectable r3;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary $r47, r48, $r55;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        org.apache.pdfbox.cos.COSDictionary $r38;
        java.util.List $r6, $r8, $r42;
        float $f0;
        org.apache.pdfbox.pdmodel.interactive.form.PDVariableText $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i13, $i15, $i17, $i19, $i21;
        org.apache.pdfbox.cos.COSStream $r31;
        org.apache.pdfbox.pdfwriter.ContentStreamWriter $r58, $r60;
        org.apache.pdfbox.cos.COSName $r39;
        java.util.Iterator $r43;
        org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm $r28;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r33, $r34, $r52;
        java.lang.Object $r2, $r5, $r16, $r17;

        r0 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        r41 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.pdmodel.interactive.form.PDVariableText parent>;

        $z0 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.interactive.form.PDVariableText: boolean isMultiline()>();

        if $z0 == 0 goto label01;

        $i9 = virtualinvoke r41.<java.lang.String: int indexOf(int)>(10);

        $i13 = (int) -1;

        if $i9 == $i13 goto label01;

        r41 = specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: java.lang.String convertToMultiLine(java.lang.String)>(r41);

     label01:
        r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: java.lang.String value> = r41;

        $r42 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: java.util.List widgets>;

        $r43 = interfaceinvoke $r42.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z4 = interfaceinvoke $r43.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label19;

        $r2 = interfaceinvoke $r43.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.pdfbox.pdmodel.common.COSObjectable) $r2;

        r44 = null;

        $z1 = r3 instanceof org.apache.pdfbox.pdmodel.interactive.form.PDField;

        if $z1 == 0 goto label03;

        r44 = (org.apache.pdfbox.pdmodel.interactive.form.PDField) r3;

        r45 = virtualinvoke r44.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget getWidget()>();

        goto label04;

     label03:
        r45 = (org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget) r3;

     label04:
        r46 = null;

        if r44 == null goto label05;

        r46 = virtualinvoke r44.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions getActions()>();

     label05:
        if r46 == null goto label06;

        $r37 = virtualinvoke r46.<org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions: org.apache.pdfbox.pdmodel.interactive.action.type.PDAction getF()>();

        if $r37 == null goto label06;

        $r38 = virtualinvoke r45.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r39 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName AP>;

        $r40 = virtualinvoke $r38.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r39);

        if $r40 != null goto label06;

        goto label18;

     label06:
        $r47 = virtualinvoke r45.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary getAppearance()>();

        r48 = $r47;

        if $r47 != null goto label07;

        $r55 = new org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary;

        specialinvoke $r55.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: void <init>()>();

        r48 = $r55;

        virtualinvoke r45.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget: void setAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary)>($r55);

     label07:
        $r4 = virtualinvoke r48.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: java.util.Map getNormalAppearance()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("default");

        $r36 = (org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream) $r5;

        r49 = $r36;

        if $r36 != null goto label08;

        $r28 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm acroForm>;

        $r29 = virtualinvoke $r28.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.pdmodel.PDDocument getDocument()>();

        $r30 = virtualinvoke $r29.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        $r31 = virtualinvoke $r30.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSStream createCOSStream()>();

        $r56 = new org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream;

        specialinvoke $r56.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream: void <init>(org.apache.pdfbox.cos.COSStream)>($r31);

        r49 = $r56;

        $r33 = virtualinvoke r45.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget: org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()>();

        $r34 = virtualinvoke $r33.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.pdmodel.common.PDRectangle createRetranslatedRectangle()>();

        virtualinvoke $r56.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream: void setBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle)>($r34);

        virtualinvoke r48.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: void setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)>($r56);

     label08:
        $r6 = specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: java.util.List getStreamTokens(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)>(r49);

        $r7 = specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.cos.COSString getDefaultAppearance()>();

        $r8 = specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: java.util.List getStreamTokens(org.apache.pdfbox.cos.COSString)>($r7);

        $r9 = specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.pdmodel.font.PDFont getFontAndUpdateResources(java.util.List,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)>($r6, r49);

        $z2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: boolean containsMarkedContent(java.util.List)>($r6);

        if $z2 != 0 goto label09;

        $r57 = new java.io.ByteArrayOutputStream;

        specialinvoke $r57.<java.io.ByteArrayOutputStream: void <init>()>();

        $r58 = new org.apache.pdfbox.pdfwriter.ContentStreamWriter;

        specialinvoke $r58.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: void <init>(java.io.OutputStream)>($r57);

        virtualinvoke $r58.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: void writeTokens(java.util.List)>($r6);

        $r23 = " /Tx BMC\n";

        $r24 = virtualinvoke $r23.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        virtualinvoke $r57.<java.io.ByteArrayOutputStream: void write(byte[])>($r24);

        specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,java.io.OutputStream,org.apache.pdfbox.pdmodel.font.PDFont,java.util.List,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)>(r45, $r57, $r9, $r6, r49);

        $r25 = " EMC";

        $r26 = virtualinvoke $r25.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        virtualinvoke $r57.<java.io.ByteArrayOutputStream: void write(byte[])>($r26);

        $r27 = virtualinvoke $r57.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: void writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)>($r27, r49);

        goto label18;

     label09:
        if $r6 == null goto label18;

        if $r8 == null goto label10;

        $r19 = staticinvoke <org.apache.pdfbox.util.PDFOperator: org.apache.pdfbox.util.PDFOperator getOperator(java.lang.String)>("BMC");

        $i6 = interfaceinvoke $r6.<java.util.List: int indexOf(java.lang.Object)>($r19);

        $r20 = staticinvoke <org.apache.pdfbox.util.PDFOperator: org.apache.pdfbox.util.PDFOperator getOperator(java.lang.String)>("EMC");

        $i7 = interfaceinvoke $r6.<java.util.List: int indexOf(java.lang.Object)>($r20);

        $i15 = (int) -1;

        if $i6 == $i15 goto label10;

        $i17 = (int) -1;

        if $i7 == $i17 goto label10;

        $i8 = $i6 + 1;

        if $i7 != $i8 goto label10;

        interfaceinvoke $r6.<java.util.List: boolean addAll(int,java.util.Collection)>($i7, $r8);

     label10:
        $r59 = new java.io.ByteArrayOutputStream;

        specialinvoke $r59.<java.io.ByteArrayOutputStream: void <init>()>();

        $r60 = new org.apache.pdfbox.pdfwriter.ContentStreamWriter;

        specialinvoke $r60.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: void <init>(java.io.OutputStream)>($r59);

        $r52 = virtualinvoke r49.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream: org.apache.pdfbox.pdmodel.common.PDRectangle getBoundingBox()>();

        $f0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle,java.util.List,java.util.List)>($r9, $r52, $r6, null);

        z5 = 0;

        i10 = 0;

     label11:
        $i11 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i10 >= $i11 goto label13;

        $r16 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i10);

        $z3 = $r16 instanceof org.apache.pdfbox.cos.COSString;

        if $z3 == 0 goto label12;

        z5 = 1;

        $r17 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i10);

        r53 = (org.apache.pdfbox.cos.COSString) $r17;

        virtualinvoke r53.<org.apache.pdfbox.cos.COSString: void reset()>();

        $r18 = virtualinvoke r41.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        virtualinvoke r53.<org.apache.pdfbox.cos.COSString: void append(byte[])>($r18);

     label12:
        i10 = i10 + 1;

        goto label11;

     label13:
        $r10 = staticinvoke <org.apache.pdfbox.util.PDFOperator: org.apache.pdfbox.util.PDFOperator getOperator(java.lang.String)>("Tf");

        $i0 = interfaceinvoke $r6.<java.util.List: int indexOf(java.lang.Object)>($r10);

        $i1 = $i0 - 1;

        $r61 = new org.apache.pdfbox.cos.COSFloat;

        specialinvoke $r61.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f0);

        interfaceinvoke $r6.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i1, $r61);

        if z5 == 0 goto label14;

        virtualinvoke $r60.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: void writeTokens(java.util.List)>($r6);

        goto label17;

     label14:
        $r12 = staticinvoke <org.apache.pdfbox.util.PDFOperator: org.apache.pdfbox.util.PDFOperator getOperator(java.lang.String)>("BMC");

        $i2 = interfaceinvoke $r6.<java.util.List: int indexOf(java.lang.Object)>($r12);

        $r13 = staticinvoke <org.apache.pdfbox.util.PDFOperator: org.apache.pdfbox.util.PDFOperator getOperator(java.lang.String)>("EMC");

        $i3 = interfaceinvoke $r6.<java.util.List: int indexOf(java.lang.Object)>($r13);

        $i19 = (int) -1;

        if $i2 == $i19 goto label15;

        $i5 = $i2 + 1;

        virtualinvoke $r60.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: void writeTokens(java.util.List,int,int)>($r6, 0, $i5);

        goto label16;

     label15:
        virtualinvoke $r60.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: void writeTokens(java.util.List)>($r6);

     label16:
        $r14 = "\n";

        $r15 = virtualinvoke $r14.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        virtualinvoke $r59.<java.io.ByteArrayOutputStream: void write(byte[])>($r15);

        specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,java.io.OutputStream,org.apache.pdfbox.pdmodel.font.PDFont,java.util.List,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)>(r45, $r59, $r9, $r6, r49);

        $i21 = (int) -1;

        if $i3 == $i21 goto label17;

        $i4 = interfaceinvoke $r6.<java.util.List: int size()>();

        virtualinvoke $r60.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: void writeTokens(java.util.List,int,int)>($r6, $i3, $i4);

     label17:
        $r54 = virtualinvoke $r59.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: void writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)>($r54, r49);

     label18:
        goto label02;

     label19:
        return;
    }

    private void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget, java.io.OutputStream, org.apache.pdfbox.pdmodel.font.PDFont, java.util.List, org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream) throws java.io.IOException
    {
        byte[] $r30;
        org.apache.pdfbox.cos.COSFloat $r42;
        java.io.ByteArrayInputStream $r40;
        java.io.PrintWriter $r39;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream r2;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget r35;
        org.apache.pdfbox.pdfparser.PDFStreamParser $r41;
        java.util.List r7, $r31;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, f8;
        java.lang.StringBuilder $r10, $r11, $r14, $r18, $r19, $r23, $r24, $r44, $r45, $r47;
        org.apache.pdfbox.util.PDFOperator $r32;
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r4;
        org.apache.pdfbox.cos.COSString $r5, $r26, $r48;
        org.apache.pdfbox.pdmodel.font.PDFont r6;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r8, $r12, $r16, $r17, $r20, $r25, $r27, $r38;
        org.apache.pdfbox.pdfwriter.ContentStreamWriter $r43;
        java.io.OutputStream r1;
        java.io.IOException $r46;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r3, $r36, r37;

        r4 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        r35 := @parameter0: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget;

        r1 := @parameter1: java.io.OutputStream;

        r6 := @parameter2: org.apache.pdfbox.pdmodel.font.PDFont;

        r7 := @parameter3: java.util.List;

        r2 := @parameter4: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream;

        $r39 = new java.io.PrintWriter;

        specialinvoke $r39.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>(r1, 1);

        f7 = 0.0F;

        $r3 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream: org.apache.pdfbox.pdmodel.common.PDRectangle getBoundingBox()>();

        r37 = $r3;

        if $r3 != null goto label1;

        $r36 = virtualinvoke r35.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget: org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()>();

        r37 = virtualinvoke $r36.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.pdmodel.common.PDRectangle createRetranslatedRectangle()>();

     label1:
        virtualinvoke $r39.<java.io.PrintWriter: void println(java.lang.String)>("BT");

        $r5 = r4.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.cos.COSString defaultAppearance>;

        if $r5 == null goto label3;

        $r26 = r4.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.cos.COSString defaultAppearance>;

        $r27 = virtualinvoke $r26.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>();

        $r41 = new org.apache.pdfbox.pdfparser.PDFStreamParser;

        $r40 = new java.io.ByteArrayInputStream;

        $r30 = virtualinvoke $r27.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        specialinvoke $r40.<java.io.ByteArrayInputStream: void <init>(byte[])>($r30);

        specialinvoke $r41.<org.apache.pdfbox.pdfparser.PDFStreamParser: void <init>(java.io.InputStream,org.apache.pdfbox.io.RandomAccess)>($r40, null);

        virtualinvoke $r41.<org.apache.pdfbox.pdfparser.PDFStreamParser: void parse()>();

        $r31 = virtualinvoke $r41.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.util.List getTokens()>();

        $f6 = specialinvoke r4.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle,java.util.List,java.util.List)>(r6, r37, r7, $r31);

        f7 = $f6;

        $r32 = staticinvoke <org.apache.pdfbox.util.PDFOperator: org.apache.pdfbox.util.PDFOperator getOperator(java.lang.String)>("Tf");

        $i0 = interfaceinvoke $r31.<java.util.List: int indexOf(java.lang.Object)>($r32);

        $i4 = (int) -1;

        if $i0 == $i4 goto label2;

        $i1 = $i0 - 1;

        $r42 = new org.apache.pdfbox.cos.COSFloat;

        specialinvoke $r42.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f6);

        interfaceinvoke $r31.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i1, $r42);

     label2:
        $r43 = new org.apache.pdfbox.pdfwriter.ContentStreamWriter;

        specialinvoke $r43.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: void <init>(java.io.OutputStream)>(r1);

        virtualinvoke $r43.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: void writeTokens(java.util.List)>($r31);

     label3:
        $r38 = specialinvoke r4.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: java.lang.String getTextPosition(org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float,java.util.List)>(r37, r6, f7, r7);

        virtualinvoke $r39.<java.io.PrintWriter: void println(java.lang.String)>($r38);

        $i2 = specialinvoke r4.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: int getQ()>();

        if $i2 != 0 goto label4;

        goto label8;

     label4:
        if $i2 == 1 goto label5;

        if $i2 != 2 goto label7;

     label5:
        $f0 = virtualinvoke r37.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>();

        $r8 = r4.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: java.lang.String value>;

        $f1 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.font.PDFont: float getStringWidth(java.lang.String)>($r8);

        $f2 = $f1 / 1000.0F;

        $f4 = $f2 * f7;

        $f3 = $f0 - $f4;

        $f5 = $f3 - 4.0F;

        f8 = $f5;

        if $i2 != 1 goto label6;

        f8 = $f5 / 2.0F;

     label6:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 0 Td");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r39.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        goto label8;

     label7:
        $r46 = new java.io.IOException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown justification value:");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.io.IOException: void <init>(java.lang.String)>($r25);

        throw $r46;

     label8:
        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r48 = new org.apache.pdfbox.cos.COSString;

        $r16 = r4.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: java.lang.String value>;

        specialinvoke $r48.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>($r16);

        $r17 = virtualinvoke $r48.<org.apache.pdfbox.cos.COSString: java.lang.String getHexString()>();

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> Tj");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r39.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        virtualinvoke $r39.<java.io.PrintWriter: void println(java.lang.String)>("ET");

        virtualinvoke $r39.<java.io.PrintWriter: void flush()>();

        return;
    }

    private org.apache.pdfbox.pdmodel.font.PDFont getFontAndUpdateResources(java.util.List, org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream) throws java.io.IOException
    {
        byte[] $r16;
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r2;
        org.apache.pdfbox.cos.COSString $r5;
        org.apache.pdfbox.pdmodel.font.PDFont $r18, r21;
        java.io.ByteArrayInputStream $r15;
        java.util.Map $r9, $r11;
        int $i0, $i1;
        java.lang.String $r8, $r13;
        org.apache.pdfbox.cos.COSName $r17;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream r0;
        org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm $r3;
        org.apache.pdfbox.pdmodel.PDResources $r1, $r4, $r19, r22;
        org.apache.pdfbox.pdfparser.PDFStreamParser $r14;
        java.util.List r20;
        java.lang.Object $r7, $r10, $r12;
        org.apache.pdfbox.util.PDFOperator $r6;

        r2 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        r20 := @parameter0: java.util.List;

        r0 := @parameter1: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream;

        r21 = null;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream: org.apache.pdfbox.pdmodel.PDResources getResources()>();

        r22 = $r1;

        $r3 = r2.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm acroForm>;

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.pdmodel.PDResources getDefaultResources()>();

        if $r4 == null goto label3;

        if $r1 != null goto label1;

        $r19 = new org.apache.pdfbox.pdmodel.PDResources;

        specialinvoke $r19.<org.apache.pdfbox.pdmodel.PDResources: void <init>()>();

        r22 = $r19;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream: void setResources(org.apache.pdfbox.pdmodel.PDResources)>($r19);

     label1:
        $r5 = specialinvoke r2.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.cos.COSString getDefaultAppearance()>();

        if $r5 == null goto label2;

        $r13 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>();

        $r14 = new org.apache.pdfbox.pdfparser.PDFStreamParser;

        $r15 = new java.io.ByteArrayInputStream;

        $r16 = virtualinvoke $r13.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        specialinvoke $r15.<java.io.ByteArrayInputStream: void <init>(byte[])>($r16);

        specialinvoke $r14.<org.apache.pdfbox.pdfparser.PDFStreamParser: void <init>(java.io.InputStream,org.apache.pdfbox.io.RandomAccess)>($r15, null);

        virtualinvoke $r14.<org.apache.pdfbox.pdfparser.PDFStreamParser: void parse()>();

        r20 = virtualinvoke $r14.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.util.List getTokens()>();

     label2:
        $r6 = staticinvoke <org.apache.pdfbox.util.PDFOperator: org.apache.pdfbox.util.PDFOperator getOperator(java.lang.String)>("Tf");

        $i0 = interfaceinvoke r20.<java.util.List: int indexOf(java.lang.Object)>($r6);

        $i1 = $i0 - 2;

        $r7 = interfaceinvoke r20.<java.util.List: java.lang.Object get(int)>($i1);

        $r17 = (org.apache.pdfbox.cos.COSName) $r7;

        $r8 = virtualinvoke $r17.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>();

        $r9 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.PDResources: java.util.Map getFonts()>();

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r18 = (org.apache.pdfbox.pdmodel.font.PDFont) $r10;

        r21 = $r18;

        if $r18 != null goto label3;

        $r11 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDResources: java.util.Map getFonts()>();

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        r21 = (org.apache.pdfbox.pdmodel.font.PDFont) $r12;

        virtualinvoke r22.<org.apache.pdfbox.pdmodel.PDResources: java.lang.String addFont(org.apache.pdfbox.pdmodel.font.PDFont,java.lang.String)>(r21, $r8);

     label3:
        return r21;
    }

    private java.lang.String convertToMultiLine(java.lang.String)
    {
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r5;
        java.lang.StringBuffer $r6;
        int $i0, $i1, $i2, i3, $i5;
        java.lang.String r1, $r2, $r3, $r4;

        r5 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        r1 := @parameter0: java.lang.String;

        i3 = 0;

        $r6 = new java.lang.StringBuffer;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = $i0 + 64;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(int)>($i1);

     label1:
        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(10, i3);

        $i5 = (int) -1;

        if $i2 <= $i5 goto label2;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i3, $i2);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ) Tj\n0 -13 Td\n(");

        i3 = $i2 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i3);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    private void writeToStream(byte[], org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        byte[] r3;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream r0;
        org.apache.pdfbox.cos.COSStream $r1;
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r4;

        r4 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        r3 := @parameter0: byte[];

        r0 := @parameter1: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream: org.apache.pdfbox.cos.COSStream getStream()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createUnfilteredStream()>();

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>(r3);

        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

        return;
    }

    private float getLineWidth(java.util.List)
    {
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r5;
        java.util.List r0;
        org.apache.pdfbox.cos.COSNumber $r4;
        int $i0, $i1, $i2;
        float f0;
        java.lang.Object $r3;
        org.apache.pdfbox.util.PDFOperator $r1, $r2;

        r5 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        r0 := @parameter0: java.util.List;

        f0 = 1.0F;

        if r0 == null goto label1;

        $r1 = staticinvoke <org.apache.pdfbox.util.PDFOperator: org.apache.pdfbox.util.PDFOperator getOperator(java.lang.String)>("BT");

        $i0 = interfaceinvoke r0.<java.util.List: int indexOf(java.lang.Object)>($r1);

        $r2 = staticinvoke <org.apache.pdfbox.util.PDFOperator: org.apache.pdfbox.util.PDFOperator getOperator(java.lang.String)>("w");

        $i1 = interfaceinvoke r0.<java.util.List: int indexOf(java.lang.Object)>($r2);

        if $i1 <= 0 goto label1;

        if $i1 >= $i0 goto label1;

        $i2 = $i1 - 1;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i2);

        $r4 = (org.apache.pdfbox.cos.COSNumber) $r3;

        f0 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSNumber: float floatValue()>();

     label1:
        return f0;
    }

    private org.apache.pdfbox.pdmodel.common.PDRectangle getSmallestDrawnRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle, java.util.List)
    {
        byte $b5, $b6;
        org.apache.pdfbox.cos.COSNumber r5, r7, r9, r11;
        java.util.List r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        org.apache.pdfbox.util.PDFOperator $r3;
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r13;
        int $i0, $i1, $i2, $i3, $i4, i7, $i8, $i9;
        org.apache.pdfbox.pdmodel.common.PDRectangle r0, r14, $r15;
        java.lang.Object $r2, $r4, $r6, $r8, $r10;

        r13 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.common.PDRectangle;

        r1 := @parameter1: java.util.List;

        r14 = r0;

        i7 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i7 >= $i0 goto label4;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        $r3 = staticinvoke <org.apache.pdfbox.util.PDFOperator: org.apache.pdfbox.util.PDFOperator getOperator(java.lang.String)>("re");

        if $r2 != $r3 goto label3;

        $i1 = i7 - 4;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i1);

        r5 = (org.apache.pdfbox.cos.COSNumber) $r4;

        $i2 = i7 - 3;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i2);

        r7 = (org.apache.pdfbox.cos.COSNumber) $r6;

        $i3 = i7 - 2;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i3);

        r9 = (org.apache.pdfbox.cos.COSNumber) $r8;

        $i4 = i7 - 1;

        $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i4);

        r11 = (org.apache.pdfbox.cos.COSNumber) $r10;

        $r15 = new org.apache.pdfbox.pdmodel.common.PDRectangle;

        specialinvoke $r15.<org.apache.pdfbox.pdmodel.common.PDRectangle: void <init>()>();

        $f0 = virtualinvoke r5.<org.apache.pdfbox.cos.COSNumber: float floatValue()>();

        virtualinvoke $r15.<org.apache.pdfbox.pdmodel.common.PDRectangle: void setLowerLeftX(float)>($f0);

        $f1 = virtualinvoke r7.<org.apache.pdfbox.cos.COSNumber: float floatValue()>();

        virtualinvoke $r15.<org.apache.pdfbox.pdmodel.common.PDRectangle: void setLowerLeftY(float)>($f1);

        $f2 = virtualinvoke r5.<org.apache.pdfbox.cos.COSNumber: float floatValue()>();

        $f3 = virtualinvoke r9.<org.apache.pdfbox.cos.COSNumber: float floatValue()>();

        $f4 = $f2 + $f3;

        virtualinvoke $r15.<org.apache.pdfbox.pdmodel.common.PDRectangle: void setUpperRightX(float)>($f4);

        $f5 = virtualinvoke r7.<org.apache.pdfbox.cos.COSNumber: float floatValue()>();

        $f6 = virtualinvoke r11.<org.apache.pdfbox.cos.COSNumber: float floatValue()>();

        $f7 = $f5 + $f6;

        virtualinvoke $r15.<org.apache.pdfbox.pdmodel.common.PDRectangle: void setUpperRightY(float)>($f7);

        if r14 == null goto label2;

        $f8 = virtualinvoke r14.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>();

        $f9 = virtualinvoke $r15.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>();

        $b5 = $f8 cmpg $f9;

        $i8 = (int) $b5;

        if $i8 < 0 goto label2;

        $f10 = virtualinvoke r14.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getUpperRightY()>();

        $f11 = virtualinvoke $r15.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getUpperRightY()>();

        $b6 = $f10 cmpl $f11;

        $i9 = (int) $b6;

        if $i9 <= 0 goto label3;

     label2:
        r14 = $r15;

     label3:
        i7 = i7 + 1;

        goto label1;

     label4:
        return r14;
    }

    private float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont, org.apache.pdfbox.pdmodel.common.PDRectangle, java.util.List, java.util.List) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r1;
        org.apache.pdfbox.pdmodel.font.PDFont r3;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor $r7;
        byte $b0;
        org.apache.pdfbox.cos.COSNumber $r12;
        org.apache.pdfbox.pdmodel.interactive.form.PDVariableText $r13;
        int $i1, $i2, $i4;
        java.lang.String $r4, $r9;
        boolean $z0, $z1;
        org.apache.pdfbox.pdmodel.common.PDRectangle r5, $r8;
        java.util.List r0, r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, f8, f9, f10;
        java.lang.Object $r11;
        org.apache.pdfbox.pdmodel.font.PDSimpleFont $r6;
        org.apache.pdfbox.util.PDFOperator $r10;

        r1 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        r3 := @parameter0: org.apache.pdfbox.pdmodel.font.PDFont;

        r5 := @parameter1: org.apache.pdfbox.pdmodel.common.PDRectangle;

        r2 := @parameter2: java.util.List;

        r0 := @parameter3: java.util.List;

        f7 = 0.0F;

        if r0 == null goto label1;

        $r10 = staticinvoke <org.apache.pdfbox.util.PDFOperator: org.apache.pdfbox.util.PDFOperator getOperator(java.lang.String)>("Tf");

        $i1 = interfaceinvoke r0.<java.util.List: int indexOf(java.lang.Object)>($r10);

        $i4 = (int) -1;

        if $i1 == $i4 goto label1;

        $i2 = $i1 - 1;

        $r11 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i2);

        $r12 = (org.apache.pdfbox.cos.COSNumber) $r11;

        f7 = virtualinvoke $r12.<org.apache.pdfbox.cos.COSNumber: float floatValue()>();

     label1:
        $r13 = r1.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.pdmodel.interactive.form.PDVariableText parent>;

        $z1 = virtualinvoke $r13.<org.apache.pdfbox.pdmodel.interactive.form.PDVariableText: boolean doNotScroll()>();

        if $z1 == 0 goto label2;

        $r9 = r1.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: java.lang.String value>;

        $f4 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.font.PDFont: float getStringWidth(java.lang.String)>($r9);

        f8 = $f4 / 1000.0F;

        $f5 = specialinvoke r1.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: float getLineWidth(java.util.List)>(r2);

        $f6 = specialinvoke r1.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: float getAvailableWidth(org.apache.pdfbox.pdmodel.common.PDRectangle,float)>(r5, $f5);

        f9 = $f6 / f8;

        goto label5;

     label2:
        $b0 = f7 cmpl 0.0F;

        if $b0 != 0 goto label5;

        $f0 = specialinvoke r1.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: float getLineWidth(java.util.List)>(r2);

        $r4 = r1.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: java.lang.String value>;

        virtualinvoke r3.<org.apache.pdfbox.pdmodel.font.PDFont: float getStringWidth(java.lang.String)>($r4);

        $z0 = r3 instanceof org.apache.pdfbox.pdmodel.font.PDSimpleFont;

        if $z0 == 0 goto label3;

        $r6 = (org.apache.pdfbox.pdmodel.font.PDSimpleFont) r3;

        $r7 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>();

        $r8 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: org.apache.pdfbox.pdmodel.common.PDRectangle getFontBoundingBox()>();

        f10 = virtualinvoke $r8.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>();

        goto label4;

     label3:
        f10 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.font.PDFont: float getAverageFontWidth()>();

     label4:
        $f3 = f10 / 1000.0F;

        $f1 = specialinvoke r1.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: float getAvailableHeight(org.apache.pdfbox.pdmodel.common.PDRectangle,float)>(r5, $f0);

        $f2 = $f1 / $f3;

        f7 = staticinvoke <java.lang.Math: float min(float,float)>($f2, 3.4028235E38F);

     label5:
        return f7;
    }

    private java.lang.String getTextPosition(org.apache.pdfbox.pdmodel.common.PDRectangle, org.apache.pdfbox.pdmodel.font.PDFont, float, java.util.List) throws java.io.IOException
    {
        boolean $z0, $z1;
        java.util.List r1;
        float $f0, $f1, $f2, $f3, $f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, f18, f19, f20;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14;
        org.apache.pdfbox.pdmodel.font.PDSimpleFont $r5;
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r0;
        org.apache.pdfbox.pdmodel.font.PDFont r3;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor $r6;
        org.apache.pdfbox.pdmodel.interactive.form.PDVariableText $r2;
        int $i0, $i1, i2;
        java.lang.String $r15;
        java.io.IOException $r4;
        org.apache.pdfbox.pdmodel.common.PDRectangle r7, $r8, $r9;

        r0 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        r7 := @parameter0: org.apache.pdfbox.pdmodel.common.PDRectangle;

        r3 := @parameter1: org.apache.pdfbox.pdmodel.font.PDFont;

        f5 := @parameter2: float;

        r1 := @parameter3: java.util.List;

        $f0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: float getLineWidth(java.util.List)>(r1);

        $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.pdmodel.interactive.form.PDVariableText parent>;

        $z0 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.interactive.form.PDVariableText: boolean isMultiline()>();

        if $z0 == 0 goto label1;

        $f12 = specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: float getAvailableHeight(org.apache.pdfbox.pdmodel.common.PDRectangle,float)>(r7, $f0);

        $i1 = (int) f5;

        $f13 = (float) $i1;

        $f14 = $f12 / $f13;

        i2 = (int) $f14;

        $f15 = (float) i2;

        $f16 = $f15 * f5;

        f18 = $f16 - f5;

        goto label3;

     label1:
        $z1 = r3 instanceof org.apache.pdfbox.pdmodel.font.PDSimpleFont;

        if $z1 == 0 goto label2;

        $r5 = (org.apache.pdfbox.pdmodel.font.PDSimpleFont) r3;

        $r6 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>();

        $f1 = virtualinvoke r7.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>();

        $r8 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: org.apache.pdfbox.pdmodel.common.PDRectangle getFontBoundingBox()>();

        $f2 = virtualinvoke $r8.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>();

        $f3 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getDescent()>();

        $f4 = 2.0F * $f3;

        f19 = $f2 + $f4;

        $f6 = f19 / 1000.0F;

        f20 = $f6 * f5;

        $f7 = $f1 - f20;

        f18 = $f7 / 2.0F;

        goto label3;

     label2:
        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Error: Don\'t know how to calculate the position for non-simple fonts");

        throw $r4;

     label3:
        $r9 = specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAppearance: org.apache.pdfbox.pdmodel.common.PDRectangle getSmallestDrawnRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle,java.util.List)>(r7, r1);

        $f8 = virtualinvoke r7.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>();

        $f9 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>();

        $f10 = $f8 - $f9;

        $f11 = 2.0F * $f10;

        $f17 = 2.0F + $f11;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f17);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f18);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Td");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    private float getAvailableWidth(org.apache.pdfbox.pdmodel.common.PDRectangle, float)
    {
        org.apache.pdfbox.pdmodel.common.PDRectangle r0;
        float $f0, f1, $f2, $f3;
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r1;

        r1 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.common.PDRectangle;

        f1 := @parameter1: float;

        $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>();

        $f2 = 2.0F * f1;

        $f3 = $f0 - $f2;

        return $f3;
    }

    private float getAvailableHeight(org.apache.pdfbox.pdmodel.common.PDRectangle, float)
    {
        org.apache.pdfbox.pdmodel.common.PDRectangle r0;
        float $f0, f1, $f2, $f3;
        org.apache.pdfbox.pdmodel.interactive.form.PDAppearance r1;

        r1 := @this: org.apache.pdfbox.pdmodel.interactive.form.PDAppearance;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.common.PDRectangle;

        f1 := @parameter1: float;

        $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>();

        $f2 = 2.0F * f1;

        $f3 = $f0 - $f2;

        return $f3;
    }
}
