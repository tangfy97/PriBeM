final class org.apache.lucene.index.DocInverter extends org.apache.lucene.index.DocFieldConsumer
{
    final org.apache.lucene.index.InvertedDocConsumer consumer;
    final org.apache.lucene.index.InvertedDocEndConsumer endConsumer;
    final org.apache.lucene.index.DocumentsWriterPerThread$DocState docState;

    public void <init>(org.apache.lucene.index.DocumentsWriterPerThread$DocState, org.apache.lucene.index.InvertedDocConsumer, org.apache.lucene.index.InvertedDocEndConsumer)
    {
        org.apache.lucene.index.InvertedDocEndConsumer r3;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState r1;
        org.apache.lucene.index.DocInverter r0;
        org.apache.lucene.index.InvertedDocConsumer r2;

        r0 := @this: org.apache.lucene.index.DocInverter;

        r1 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThread$DocState;

        r2 := @parameter1: org.apache.lucene.index.InvertedDocConsumer;

        r3 := @parameter2: org.apache.lucene.index.InvertedDocEndConsumer;

        specialinvoke r0.<org.apache.lucene.index.DocFieldConsumer: void <init>()>();

        r0.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState> = r1;

        r0.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.InvertedDocConsumer consumer> = r2;

        r0.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.InvertedDocEndConsumer endConsumer> = r3;

        return;
    }

    void flush(java.util.Map, org.apache.lucene.index.SegmentWriteState) throws java.io.IOException
    {
        org.apache.lucene.index.InvertedDocEndConsumer $r8;
        java.util.HashMap $r0, $r1;
        org.apache.lucene.index.DocInverter r5;
        org.apache.lucene.index.InvertedDocConsumer $r7;
        org.apache.lucene.index.DocInverterPerField r12;
        java.util.Map r2;
        org.apache.lucene.index.SegmentWriteState r6;
        boolean $z0;
        java.util.Map$Entry r10;
        java.util.Iterator $r4;
        java.util.Set $r3;
        org.apache.lucene.index.InvertedDocEndConsumerPerField $r16;
        java.lang.Object $r9, $r11, $r13, $r15;
        org.apache.lucene.index.InvertedDocConsumerPerField $r14;

        r5 := @this: org.apache.lucene.index.DocInverter;

        r2 := @parameter0: java.util.Map;

        r6 := @parameter1: org.apache.lucene.index.SegmentWriteState;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        $r11 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        r12 = (org.apache.lucene.index.DocInverterPerField) $r11;

        $r13 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = r12.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.InvertedDocConsumerPerField consumer>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14);

        $r15 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = r12.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.InvertedDocEndConsumerPerField endConsumer>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16);

        goto label1;

     label2:
        $r7 = r5.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.InvertedDocConsumer consumer>;

        virtualinvoke $r7.<org.apache.lucene.index.InvertedDocConsumer: void flush(java.util.Map,org.apache.lucene.index.SegmentWriteState)>($r0, r6);

        $r8 = r5.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.InvertedDocEndConsumer endConsumer>;

        virtualinvoke $r8.<org.apache.lucene.index.InvertedDocEndConsumer: void flush(java.util.Map,org.apache.lucene.index.SegmentWriteState)>($r1, r6);

        return;
    }

    public void startDocument() throws java.io.IOException
    {
        org.apache.lucene.index.DocInverter r0;
        org.apache.lucene.index.InvertedDocConsumer $r1;
        org.apache.lucene.index.InvertedDocEndConsumer $r2;

        r0 := @this: org.apache.lucene.index.DocInverter;

        $r1 = r0.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.InvertedDocConsumer consumer>;

        virtualinvoke $r1.<org.apache.lucene.index.InvertedDocConsumer: void startDocument()>();

        $r2 = r0.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.InvertedDocEndConsumer endConsumer>;

        virtualinvoke $r2.<org.apache.lucene.index.InvertedDocEndConsumer: void startDocument()>();

        return;
    }

    public void finishDocument() throws java.io.IOException
    {
        org.apache.lucene.index.DocInverter r0;
        org.apache.lucene.index.InvertedDocConsumer $r2;
        org.apache.lucene.index.InvertedDocEndConsumer $r1;

        r0 := @this: org.apache.lucene.index.DocInverter;

        $r1 = r0.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.InvertedDocEndConsumer endConsumer>;

        virtualinvoke $r1.<org.apache.lucene.index.InvertedDocEndConsumer: void finishDocument()>();

        $r2 = r0.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.InvertedDocConsumer consumer>;

        virtualinvoke $r2.<org.apache.lucene.index.InvertedDocConsumer: void finishDocument()>();

        return;
    }

    void abort()
    {
        java.lang.Throwable $r3;
        org.apache.lucene.index.InvertedDocEndConsumer $r2, $r4;
        org.apache.lucene.index.DocInverter r0;
        org.apache.lucene.index.InvertedDocConsumer $r1;

        r0 := @this: org.apache.lucene.index.DocInverter;

     label1:
        $r1 = r0.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.InvertedDocConsumer consumer>;

        virtualinvoke $r1.<org.apache.lucene.index.InvertedDocConsumer: void abort()>();

     label2:
        $r2 = r0.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.InvertedDocEndConsumer endConsumer>;

        virtualinvoke $r2.<org.apache.lucene.index.InvertedDocEndConsumer: void abort()>();

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        $r4 = r0.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.InvertedDocEndConsumer endConsumer>;

        virtualinvoke $r4.<org.apache.lucene.index.InvertedDocEndConsumer: void abort()>();

        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.lucene.index.DocFieldConsumerPerField addField(org.apache.lucene.index.FieldInfo)
    {
        org.apache.lucene.index.FieldInfo r2;
        org.apache.lucene.index.DocInverter r1;
        org.apache.lucene.index.DocInverterPerField $r0;

        r1 := @this: org.apache.lucene.index.DocInverter;

        r2 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r0 = new org.apache.lucene.index.DocInverterPerField;

        specialinvoke $r0.<org.apache.lucene.index.DocInverterPerField: void <init>(org.apache.lucene.index.DocInverter,org.apache.lucene.index.FieldInfo)>(r1, r2);

        return $r0;
    }
}
