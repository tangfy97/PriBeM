public final enum class org.springframework.jmx.support.MetricType extends java.lang.Enum
{
    public static final enum org.springframework.jmx.support.MetricType GAUGE;
    public static final enum org.springframework.jmx.support.MetricType COUNTER;
    private static final org.springframework.jmx.support.MetricType[] ENUM$VALUES;

    static void <clinit>()
    {
        org.springframework.jmx.support.MetricType $r0, $r1, $r3, $r4;
        org.springframework.jmx.support.MetricType[] $r2;

        $r0 = new org.springframework.jmx.support.MetricType;

        specialinvoke $r0.<org.springframework.jmx.support.MetricType: void <init>(java.lang.String,int)>("GAUGE", 0);

        <org.springframework.jmx.support.MetricType: org.springframework.jmx.support.MetricType GAUGE> = $r0;

        $r1 = new org.springframework.jmx.support.MetricType;

        specialinvoke $r1.<org.springframework.jmx.support.MetricType: void <init>(java.lang.String,int)>("COUNTER", 1);

        <org.springframework.jmx.support.MetricType: org.springframework.jmx.support.MetricType COUNTER> = $r1;

        $r2 = newarray (org.springframework.jmx.support.MetricType)[2];

        $r3 = <org.springframework.jmx.support.MetricType: org.springframework.jmx.support.MetricType GAUGE>;

        $r2[0] = $r3;

        $r4 = <org.springframework.jmx.support.MetricType: org.springframework.jmx.support.MetricType COUNTER>;

        $r2[1] = $r4;

        <org.springframework.jmx.support.MetricType: org.springframework.jmx.support.MetricType[] ENUM$VALUES> = $r2;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        org.springframework.jmx.support.MetricType r0;
        java.lang.String r1;

        r0 := @this: org.springframework.jmx.support.MetricType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static org.springframework.jmx.support.MetricType[] values()
    {
        int $i0;
        org.springframework.jmx.support.MetricType[] $r0, $r1;

        $r0 = <org.springframework.jmx.support.MetricType: org.springframework.jmx.support.MetricType[] ENUM$VALUES>;

        $i0 = lengthof $r0;

        $r1 = newarray (org.springframework.jmx.support.MetricType)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r1, 0, $i0);

        return $r1;
    }

    public static org.springframework.jmx.support.MetricType valueOf(java.lang.String)
    {
        org.springframework.jmx.support.MetricType $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/springframework/jmx/support/MetricType;", r0);

        $r2 = (org.springframework.jmx.support.MetricType) $r1;

        return $r2;
    }
}
