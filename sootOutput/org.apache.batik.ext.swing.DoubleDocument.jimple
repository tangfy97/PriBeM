public class org.apache.batik.ext.swing.DoubleDocument extends javax.swing.text.PlainDocument
{

    public void <init>()
    {
        org.apache.batik.ext.swing.DoubleDocument r0;

        r0 := @this: org.apache.batik.ext.swing.DoubleDocument;

        specialinvoke r0.<javax.swing.text.PlainDocument: void <init>()>();

        return;
    }

    public void insertString(int, java.lang.String, javax.swing.text.AttributeSet) throws javax.swing.text.BadLocationException
    {
        org.apache.batik.ext.swing.DoubleDocument r1;
        javax.swing.text.AttributeSet r7;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.lang.StringBuffer $r11;
        int $i0, $i1, $i2, i3, $i6, $i7, $i9, i12, i13, $i14, $i16, $i17, $i18;
        java.lang.String r0, $r2, $r6, $r10;
        char $c4, $c5, $c8, $c10, $c11;
        java.lang.NumberFormatException $r9;
        char[] $r3, $r8;

        r1 := @this: org.apache.batik.ext.swing.DoubleDocument;

        i3 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r7 := @parameter2: javax.swing.text.AttributeSet;

        if r0 != null goto label01;

        return;

     label01:
        $i0 = virtualinvoke r1.<javax.swing.text.AbstractDocument: int getLength()>();

        $r2 = virtualinvoke r1.<javax.swing.text.AbstractDocument: java.lang.String getText(int,int)>(0, $i0);

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(46);

        $i16 = (int) -1;

        if $i1 == $i16 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        z5 = $z4;

        $r3 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $i2 = lengthof $r3;

        $r8 = newarray (char)[$i2];

        i12 = 0;

        if i3 != 0 goto label04;

        if $r3 == null goto label04;

        $i9 = lengthof $r3;

        if $i9 <= 0 goto label04;

        $c10 = $r3[0];

        $i17 = (int) $c10;

        if $i17 != 45 goto label04;

        i12 = 1;

        $c11 = $r3[0];

        $r8[0] = $c11;

     label04:
        i13 = 0;

        goto label08;

     label05:
        $c4 = $r3[i13];

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 == 0 goto label06;

        $i7 = i12;

        i12 = i12 + 1;

        $c8 = $r3[i13];

        $r8[$i7] = $c8;

     label06:
        if z5 != 0 goto label07;

        $c5 = $r3[i13];

        $i18 = (int) $c5;

        if $i18 != 46 goto label07;

        $i6 = i12;

        i12 = i12 + 1;

        $r8[$i6] = 46;

        z5 = 1;

     label07:
        i13 = i13 + 1;

     label08:
        $i14 = lengthof $r3;

        if i13 < $i14 goto label05;

        $r10 = new java.lang.String;

        specialinvoke $r10.<java.lang.String: void <init>(char[],int,int)>($r8, 0, i12);

     label09:
        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>(java.lang.String)>($r2);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>(i3, $r10);

        $r6 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(".");

        if $z1 != 0 goto label10;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z2 != 0 goto label10;

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("-.");

        if $z3 == 0 goto label11;

     label10:
        specialinvoke r1.<javax.swing.text.AbstractDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>(i3, $r10, r7);

        goto label12;

     label11:
        staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r6);

        specialinvoke r1.<javax.swing.text.AbstractDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>(i3, $r10, r7);

     label12:
        goto label14;

     label13:
        $r9 := @caughtexception;

     label14:
        return;

        catch java.lang.NumberFormatException from label09 to label12 with label13;
    }

    public void setValue(double)
    {
        int $i0;
        java.lang.String $r1;
        javax.swing.text.BadLocationException $r2;
        org.apache.batik.ext.swing.DoubleDocument r0;
        double d0;

        r0 := @this: org.apache.batik.ext.swing.DoubleDocument;

        d0 := @parameter0: double;

     label1:
        $i0 = virtualinvoke r0.<javax.swing.text.AbstractDocument: int getLength()>();

        virtualinvoke r0.<javax.swing.text.AbstractDocument: void remove(int,int)>(0, $i0);

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        virtualinvoke r0.<org.apache.batik.ext.swing.DoubleDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>(0, $r1, null);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch javax.swing.text.BadLocationException from label1 to label2 with label3;
    }

    public double getValue()
    {
        java.lang.Error $r3;
        javax.swing.text.BadLocationException $r2;
        org.apache.batik.ext.swing.DoubleDocument r0;
        int $i0, $i1;
        java.lang.String $r1, $r4;
        double $d0;

        r0 := @this: org.apache.batik.ext.swing.DoubleDocument;

     label1:
        $i0 = virtualinvoke r0.<javax.swing.text.AbstractDocument: int getLength()>();

        $r1 = virtualinvoke r0.<javax.swing.text.AbstractDocument: java.lang.String getText(int,int)>(0, $i0);

        if $r1 == null goto label2;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 <= 0 goto label2;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r1);

        return $d0;

     label2:
        return 0.0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Error;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.Error: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch javax.swing.text.BadLocationException from label1 to label3 with label3;
    }
}
