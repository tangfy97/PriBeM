public class org.apache.poi.xssf.model.StylesTable extends org.apache.poi.POIXMLDocumentPart
{
    private final java.util.Map numberFormats;
    private final java.util.List fonts;
    private final java.util.List fills;
    private final java.util.List borders;
    private final java.util.List styleXfs;
    private final java.util.List xfs;
    private final java.util.List dxfs;
    public static final int FIRST_CUSTOM_STYLE_ID;
    private org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument doc;
    private org.apache.poi.xssf.model.ThemesTable theme;

    public void <init>()
    {
        org.apache.poi.xssf.model.StylesTable r0;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r6, $r7;
        java.util.LinkedHashMap $r1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument $r8, $r9;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        specialinvoke r0.<org.apache.poi.POIXMLDocumentPart: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.poi.xssf.model.StylesTable: java.util.Map numberFormats> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fonts> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fills> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xssf.model.StylesTable: java.util.List borders> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xssf.model.StylesTable: java.util.List styleXfs> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xssf.model.StylesTable: java.util.List dxfs> = $r7;

        $r8 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument newInstance()>();

        r0.<org.apache.poi.xssf.model.StylesTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument doc> = $r8;

        $r9 = r0.<org.apache.poi.xssf.model.StylesTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument doc>;

        interfaceinvoke $r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet addNewStyleSheet()>();

        specialinvoke r0.<org.apache.poi.xssf.model.StylesTable: void initialize()>();

        return;
    }

    public void <init>(org.apache.poi.openxml4j.opc.PackagePart, org.apache.poi.openxml4j.opc.PackageRelationship) throws java.io.IOException
    {
        org.apache.poi.xssf.model.StylesTable r0;
        org.apache.poi.openxml4j.opc.PackageRelationship r2;
        java.util.ArrayList $r4, $r5, $r6, $r7, $r8, $r9;
        java.util.LinkedHashMap $r3;
        org.apache.poi.openxml4j.opc.PackagePart r1;
        java.io.InputStream $r10;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.PackagePart;

        r2 := @parameter1: org.apache.poi.openxml4j.opc.PackageRelationship;

        specialinvoke r0.<org.apache.poi.POIXMLDocumentPart: void <init>(org.apache.poi.openxml4j.opc.PackagePart,org.apache.poi.openxml4j.opc.PackageRelationship)>(r1, r2);

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.poi.xssf.model.StylesTable: java.util.Map numberFormats> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fonts> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fills> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xssf.model.StylesTable: java.util.List borders> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xssf.model.StylesTable: java.util.List styleXfs> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xssf.model.StylesTable: java.util.List dxfs> = $r9;

        $r10 = virtualinvoke r1.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        virtualinvoke r0.<org.apache.poi.xssf.model.StylesTable: void readFrom(java.io.InputStream)>($r10);

        return;
    }

    public org.apache.poi.xssf.model.ThemesTable getTheme()
    {
        org.apache.poi.xssf.model.ThemesTable $r1;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: org.apache.poi.xssf.model.ThemesTable theme>;

        return $r1;
    }

    public void setTheme(org.apache.poi.xssf.model.ThemesTable)
    {
        java.util.Iterator $r3, $r5;
        org.apache.poi.xssf.model.StylesTable r0;
        org.apache.poi.xssf.usermodel.XSSFFont r8;
        org.apache.poi.xssf.model.ThemesTable r1;
        java.util.List $r2, $r4;
        java.lang.Object $r6, $r7;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        r1 := @parameter0: org.apache.poi.xssf.model.ThemesTable;

        r0.<org.apache.poi.xssf.model.StylesTable: org.apache.poi.xssf.model.ThemesTable theme> = r1;

        $r2 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fonts>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.poi.xssf.usermodel.XSSFFont) $r7;

        virtualinvoke r8.<org.apache.poi.xssf.usermodel.XSSFFont: void setThemesTable(org.apache.poi.xssf.model.ThemesTable)>(r1);

        goto label1;

     label2:
        $r4 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List borders>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder) $r6;

        virtualinvoke r9.<org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder: void setThemesTable(org.apache.poi.xssf.model.ThemesTable)>(r1);

        goto label3;

     label4:
        return;
    }

    protected void readFrom(java.io.InputStream) throws java.io.IOException
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellXfs $r9;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont[] $r27;
        org.apache.poi.xssf.model.StylesTable r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxfs $r11;
        java.lang.Integer $r32;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellFill $r25;
        java.util.Map $r31;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmts $r5;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder r40;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont r38;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf[] $r13;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet $r4;
        java.util.List $r12, $r14, $r15, $r17, $r18, $r20, $r23, $r26, $r29;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellStyleXfs $r10;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFonts $r6;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorders $r8;
        long $l0;
        org.apache.poi.xssf.usermodel.XSSFFont $r28;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument $r2, $r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf[] $r16, $r19;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder[] $r21;
        int $i1, i2, i3, i4, i5, i6, i7, i8, i9, i10;
        java.lang.String $r33, $r36;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill[] $r24;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFills $r7;
        java.io.IOException $r35;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmt[] $r30;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill r39;
        org.apache.xmlbeans.XmlException $r34;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder $r22;
        java.io.InputStream r1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmt r37;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        r1 := @parameter0: java.io.InputStream;

     label01:
        $r2 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument parse(java.io.InputStream)>(r1);

        r0.<org.apache.poi.xssf.model.StylesTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument doc> = $r2;

        $r3 = r0.<org.apache.poi.xssf.model.StylesTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument doc>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet getStyleSheet()>();

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmts getNumFmts()>();

        if $r5 == null goto label03;

        $r30 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmts: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmt[] getNumFmtArray()>();

        i2 = lengthof $r30;

        i3 = 0;

     label02:
        if i3 >= i2 goto label03;

        r37 = $r30[i3];

        $r31 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.Map numberFormats>;

        $l0 = interfaceinvoke r37.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmt: long getNumFmtId()>();

        $i1 = (int) $l0;

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r33 = interfaceinvoke r37.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmt: java.lang.String getFormatCode()>();

        interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r33);

        i3 = i3 + 1;

        goto label02;

     label03:
        $r6 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFonts getFonts()>();

        if $r6 == null goto label05;

        i4 = 0;

        $r27 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFonts: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont[] getFontArray()>();

        i5 = lengthof $r27;

        i6 = 0;

     label04:
        if i6 >= i5 goto label05;

        r38 = $r27[i6];

        $r28 = new org.apache.poi.xssf.usermodel.XSSFFont;

        specialinvoke $r28.<org.apache.poi.xssf.usermodel.XSSFFont: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont,int)>(r38, i4);

        $r29 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fonts>;

        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>($r28);

        i4 = i4 + 1;

        i6 = i6 + 1;

        goto label04;

     label05:
        $r7 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFills getFills()>();

        if $r7 == null goto label07;

        $r24 = interfaceinvoke $r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFills: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill[] getFillArray()>();

        i7 = lengthof $r24;

        i8 = 0;

     label06:
        if i8 >= i7 goto label07;

        r39 = $r24[i8];

        $r26 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fills>;

        $r25 = new org.apache.poi.xssf.usermodel.extensions.XSSFCellFill;

        specialinvoke $r25.<org.apache.poi.xssf.usermodel.extensions.XSSFCellFill: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill)>(r39);

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r25);

        i8 = i8 + 1;

        goto label06;

     label07:
        $r8 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorders getBorders()>();

        if $r8 == null goto label09;

        $r21 = interfaceinvoke $r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorders: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder[] getBorderArray()>();

        i9 = lengthof $r21;

        i10 = 0;

     label08:
        if i10 >= i9 goto label09;

        r40 = $r21[i10];

        $r23 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List borders>;

        $r22 = new org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder;

        specialinvoke $r22.<org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder)>(r40);

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r22);

        i10 = i10 + 1;

        goto label08;

     label09:
        $r9 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellXfs getCellXfs()>();

        if $r9 == null goto label10;

        $r18 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        $r19 = interfaceinvoke $r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellXfs: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf[] getXfArray()>();

        $r20 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r19);

        interfaceinvoke $r18.<java.util.List: boolean addAll(java.util.Collection)>($r20);

     label10:
        $r10 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellStyleXfs getCellStyleXfs()>();

        if $r10 == null goto label11;

        $r15 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List styleXfs>;

        $r16 = interfaceinvoke $r10.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellStyleXfs: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf[] getXfArray()>();

        $r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16);

        interfaceinvoke $r15.<java.util.List: boolean addAll(java.util.Collection)>($r17);

     label11:
        $r11 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxfs getDxfs()>();

        if $r11 == null goto label12;

        $r12 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List dxfs>;

        $r13 = interfaceinvoke $r11.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxfs: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf[] getDxfArray()>();

        $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13);

        interfaceinvoke $r12.<java.util.List: boolean addAll(java.util.Collection)>($r14);

     label12:
        goto label14;

     label13:
        $r34 := @caughtexception;

        $r35 = new java.io.IOException;

        $r36 = virtualinvoke $r34.<org.apache.xmlbeans.XmlException: java.lang.String getLocalizedMessage()>();

        specialinvoke $r35.<java.io.IOException: void <init>(java.lang.String)>($r36);

        throw $r35;

     label14:
        return;

        catch org.apache.xmlbeans.XmlException from label01 to label12 with label13;
    }

    public java.lang.String getNumberFormatAt(int)
    {
        java.util.Map $r1;
        int i0;
        java.lang.Object $r3;
        java.lang.String $r4;
        org.apache.poi.xssf.model.StylesTable r0;
        java.lang.Integer $r2;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.Map numberFormats>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public int putNumberFormat(java.lang.String)
    {
        java.lang.IllegalStateException $r10;
        org.apache.poi.xssf.model.StylesTable r0;
        java.lang.Integer $r4, $r6, r12;
        java.util.Map $r2, $r3, $r5, $r7, $r13;
        int $i0, i1;
        java.lang.String r1, $r15;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r9;
        java.util.Set $r8;
        java.lang.Object $r11, $r14;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.Map numberFormats>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsValue(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        $r7 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.Map numberFormats>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r11 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.lang.Integer) $r11;

        $r13 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.Map numberFormats>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12);

        $r15 = (java.lang.String) $r14;

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label2;

        $i0 = virtualinvoke r12.<java.lang.Integer: int intValue()>();

        return $i0;

     label2:
        goto label1;

     label3:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Found the format, but couldn\'t figure out where - should never happen!");

        throw $r10;

     label4:
        i1 = 165;

     label5:
        $r3 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.Map numberFormats>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z1 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z1 == 0 goto label6;

        i1 = i1 + 1;

        goto label5;

     label6:
        $r5 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.Map numberFormats>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r1);

        return i1;
    }

    public org.apache.poi.xssf.usermodel.XSSFFont getFontAt(int)
    {
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;
        org.apache.poi.xssf.model.StylesTable r0;
        org.apache.poi.xssf.usermodel.XSSFFont $r3;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fonts>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.poi.xssf.usermodel.XSSFFont) $r2;

        return $r3;
    }

    public int putFont(org.apache.poi.xssf.usermodel.XSSFFont, boolean)
    {
        org.apache.poi.xssf.model.StylesTable r0;
        org.apache.poi.xssf.usermodel.XSSFFont r2;
        java.util.List $r1, $r3, $r4;
        int $i0, i1, $i3, $i5;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        r2 := @parameter0: org.apache.poi.xssf.usermodel.XSSFFont;

        z0 := @parameter1: boolean;

        $i3 = (int) -1;

        i1 = $i3;

        if z0 != 0 goto label1;

        $r4 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fonts>;

        i1 = interfaceinvoke $r4.<java.util.List: int indexOf(java.lang.Object)>(r2);

     label1:
        $i5 = (int) -1;

        if i1 == $i5 goto label2;

        return i1;

     label2:
        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fonts>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fonts>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return $i0;
    }

    public int putFont(org.apache.poi.xssf.usermodel.XSSFFont)
    {
        int $i0;
        org.apache.poi.xssf.model.StylesTable r0;
        org.apache.poi.xssf.usermodel.XSSFFont r1;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        r1 := @parameter0: org.apache.poi.xssf.usermodel.XSSFFont;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.model.StylesTable: int putFont(org.apache.poi.xssf.usermodel.XSSFFont,boolean)>(r1, 0);

        return $i0;
    }

    public org.apache.poi.xssf.usermodel.XSSFCellStyle getStyleAt(int)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf $r3, $r8;
        long $l1, $l3;
        org.apache.poi.xssf.model.StylesTable r0;
        org.apache.poi.xssf.usermodel.XSSFCellStyle $r9;
        org.apache.poi.xssf.model.ThemesTable $r5;
        java.util.List $r1, $r6;
        byte $b2;
        int i0, i4, $i5;
        java.lang.Object $r2, $r7;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        i0 := @parameter0: int;

        i4 = 0;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf) $r2;

        $l1 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf: long getXfId()>();

        $b2 = $l1 cmp 0L;

        $i5 = (int) $b2;

        if $i5 <= 0 goto label1;

        $r6 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        $r8 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf) $r7;

        $l3 = interfaceinvoke $r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf: long getXfId()>();

        i4 = (int) $l3;

     label1:
        $r9 = new org.apache.poi.xssf.usermodel.XSSFCellStyle;

        $r5 = r0.<org.apache.poi.xssf.model.StylesTable: org.apache.poi.xssf.model.ThemesTable theme>;

        specialinvoke $r9.<org.apache.poi.xssf.usermodel.XSSFCellStyle: void <init>(int,int,org.apache.poi.xssf.model.StylesTable,org.apache.poi.xssf.model.ThemesTable)>(i0, i4, r0, $r5);

        return $r9;
    }

    public int putStyle(org.apache.poi.xssf.usermodel.XSSFCellStyle)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf $r1;
        org.apache.poi.xssf.usermodel.XSSFCellStyle r0;
        org.apache.poi.xssf.model.StylesTable r2;
        java.util.List $r3, $r4, $r5;
        int $i0;
        boolean $z0;

        r2 := @this: org.apache.poi.xssf.model.StylesTable;

        r0 := @parameter0: org.apache.poi.xssf.usermodel.XSSFCellStyle;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCellStyle: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf getCoreXf()>();

        $r3 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r5 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r1);

     label1:
        $r4 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        $i0 = interfaceinvoke $r4.<java.util.List: int indexOf(java.lang.Object)>($r1);

        return $i0;
    }

    public org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder getBorderAt(int)
    {
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;
        org.apache.poi.xssf.model.StylesTable r0;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder $r3;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List borders>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder) $r2;

        return $r3;
    }

    public int putBorder(org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder)
    {
        org.apache.poi.xssf.model.StylesTable r0;
        org.apache.poi.xssf.model.ThemesTable $r4;
        java.util.List $r2, $r3, $r5;
        int $i0, $i1, $i2, $i4;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder r1;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        r1 := @parameter0: org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder;

        $r2 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List borders>;

        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        $i4 = (int) -1;

        if $i0 == $i4 goto label1;

        return $i0;

     label1:
        $r3 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List borders>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.poi.xssf.model.StylesTable: org.apache.poi.xssf.model.ThemesTable theme>;

        virtualinvoke r1.<org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder: void setThemesTable(org.apache.poi.xssf.model.ThemesTable)>($r4);

        $r5 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List borders>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        return $i2;
    }

    public org.apache.poi.xssf.usermodel.extensions.XSSFCellFill getFillAt(int)
    {
        java.util.List $r1;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellFill $r3;
        int i0;
        java.lang.Object $r2;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fills>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.poi.xssf.usermodel.extensions.XSSFCellFill) $r2;

        return $r3;
    }

    public java.util.List getBorders()
    {
        java.util.List $r1;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List borders>;

        return $r1;
    }

    public java.util.List getFills()
    {
        java.util.List $r1;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fills>;

        return $r1;
    }

    public java.util.List getFonts()
    {
        java.util.List $r1;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fonts>;

        return $r1;
    }

    public java.util.Map getNumberFormats()
    {
        org.apache.poi.xssf.model.StylesTable r0;
        java.util.Map $r1;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.Map numberFormats>;

        return $r1;
    }

    public int putFill(org.apache.poi.xssf.usermodel.extensions.XSSFCellFill)
    {
        org.apache.poi.xssf.model.StylesTable r0;
        java.util.List $r2, $r3, $r4;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellFill r1;
        int $i0, $i1, $i2, $i4;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        r1 := @parameter0: org.apache.poi.xssf.usermodel.extensions.XSSFCellFill;

        $r2 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fills>;

        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        $i4 = (int) -1;

        if $i0 == $i4 goto label1;

        return $i0;

     label1:
        $r3 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fills>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fills>;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        return $i2;
    }

    public org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf getCellXfAt(int)
    {
        java.util.List $r1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf $r3;
        int i0;
        java.lang.Object $r2;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf) $r2;

        return $r3;
    }

    public int putCellXf(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf)
    {
        java.util.List $r2, $r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf r1;
        int $i0;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        r1 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf;

        $r2 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        return $i0;
    }

    public void replaceCellXfAt(int, org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf)
    {
        java.util.List $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf r1;
        int i0;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        i0 := @parameter0: int;

        r1 := @parameter1: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf;

        $r2 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return;
    }

    public org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf getCellStyleXfAt(int)
    {
        java.util.List $r1, $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf $r4;
        int i0, $i1;
        java.lang.Object $r3;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List styleXfs>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label1;

        $r2 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List styleXfs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf) $r3;

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public int putCellStyleXf(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf)
    {
        java.util.List $r2, $r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf r1;
        int $i0;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        r1 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf;

        $r2 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List styleXfs>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List styleXfs>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        return $i0;
    }

    public void replaceCellStyleXfAt(int, org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf)
    {
        java.util.List $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf r1;
        int i0;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        i0 := @parameter0: int;

        r1 := @parameter1: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf;

        $r2 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List styleXfs>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return;
    }

    public int getNumCellStyles()
    {
        int $i0;
        java.util.List $r1;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public int _getNumberFormatSize()
    {
        int $i0;
        org.apache.poi.xssf.model.StylesTable r0;
        java.util.Map $r1;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.Map numberFormats>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public int _getXfsSize()
    {
        int $i0;
        java.util.List $r1;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public int _getStyleXfsSize()
    {
        int $i0;
        java.util.List $r1;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List styleXfs>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet getCTStylesheet()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument $r1;
        org.apache.poi.xssf.model.StylesTable r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet $r2;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument doc>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet getStyleSheet()>();

        return $r2;
    }

    public int _getDXfsSize()
    {
        int $i0;
        java.util.List $r1;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List dxfs>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.poi.xssf.model.StylesTable r2;
        java.lang.Integer $r61;
        java.util.Map $r6, $r7;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmts $r5;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder $r50;
        java.util.Set $r8;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellStyleXfs $r34, r72;
        java.lang.Object[] $r32, $r39, $r46;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorders $r20, r69;
        long $l1, $l3, $l6, $l9, $l13, $l16, $l19, $l25;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument $r3, $r75;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf[] $r38, $r40, $r45, $r47;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder[] $r51;
        java.lang.String $r63;
        java.util.Map$Entry r64;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill $r53;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellXfs $r41, r70;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont[] $r57;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxfs $r27, r74;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellFill r68;
        boolean $z0, $z1, $z2, $z3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont $r56;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf[] $r31, $r33;
        java.util.List $r11, $r12, $r13, $r16, $r17, $r18, $r21, $r22, $r23, $r25, $r28, $r29, $r30, $r35, $r36, $r37, $r42, $r43, $r44, $r71, $r73;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFonts $r10, r65;
        org.apache.poi.xssf.usermodel.XSSFFont r66;
        int $i0, $i2, $i4, $i5, $i7, $i8, $i10, $i11, $i12, $i14, $i15, $i17, $i18, $i20, $i21, $i22, $i23, $i24, i26, i27, i28, $i29, $i30;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill[] $r54;
        java.io.OutputStream r26;
        java.util.Iterator $r9, $r14, $r19, $r24;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFills $r15, r67;
        org.apache.xmlbeans.XmlOptions $r0, $r1;
        java.lang.Object $r48, $r52, $r55, $r58, $r60, $r62;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder r49;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmt $r59;

        r2 := @this: org.apache.poi.xssf.model.StylesTable;

        r26 := @parameter0: java.io.OutputStream;

        $r0 = new org.apache.xmlbeans.XmlOptions;

        $r1 = <org.apache.poi.xssf.model.StylesTable: org.apache.xmlbeans.XmlOptions DEFAULT_XML_OPTIONS>;

        specialinvoke $r0.<org.apache.xmlbeans.XmlOptions: void <init>(org.apache.xmlbeans.XmlOptions)>($r1);

        $r3 = r2.<org.apache.poi.xssf.model.StylesTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument doc>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet getStyleSheet()>();

        $r5 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmts$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmts newInstance()>();

        $r6 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.Map numberFormats>;

        $i0 = interfaceinvoke $r6.<java.util.Map: int size()>();

        $l1 = (long) $i0;

        interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmts: void setCount(long)>($l1);

        $r7 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.Map numberFormats>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r58 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r64 = (java.util.Map$Entry) $r58;

        $r59 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmts: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmt addNewNumFmt()>();

        $r60 = interfaceinvoke r64.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r61 = (java.lang.Integer) $r60;

        $i24 = virtualinvoke $r61.<java.lang.Integer: int intValue()>();

        $l25 = (long) $i24;

        interfaceinvoke $r59.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmt: void setNumFmtId(long)>($l25);

        $r62 = interfaceinvoke r64.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r63 = (java.lang.String) $r62;

        interfaceinvoke $r59.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmt: void setFormatCode(java.lang.String)>($r63);

        goto label01;

     label02:
        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: void setNumFmts(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTNumFmts)>($r5);

        $r10 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFonts getFonts()>();

        r65 = $r10;

        if $r10 != null goto label03;

        r65 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFonts$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFonts newInstance()>();

     label03:
        $r11 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List fonts>;

        $i2 = interfaceinvoke $r11.<java.util.List: int size()>();

        $l3 = (long) $i2;

        interfaceinvoke r65.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFonts: void setCount(long)>($l3);

        $r12 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List fonts>;

        $i4 = interfaceinvoke $r12.<java.util.List: int size()>();

        $r57 = newarray (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont)[$i4];

        i26 = 0;

        $r13 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List fonts>;

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r55 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r66 = (org.apache.poi.xssf.usermodel.XSSFFont) $r55;

        $i23 = i26;

        i26 = i26 + 1;

        $r56 = virtualinvoke r66.<org.apache.poi.xssf.usermodel.XSSFFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont getCTFont()>();

        $r57[$i23] = $r56;

        goto label04;

     label05:
        interfaceinvoke r65.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFonts: void setFontArray(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont[])>($r57);

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: void setFonts(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFonts)>(r65);

        $r15 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFills getFills()>();

        r67 = $r15;

        if $r15 != null goto label06;

        r67 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFills$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFills newInstance()>();

     label06:
        $r16 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List fills>;

        $i5 = interfaceinvoke $r16.<java.util.List: int size()>();

        $l6 = (long) $i5;

        interfaceinvoke r67.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFills: void setCount(long)>($l6);

        $r17 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List fills>;

        $i7 = interfaceinvoke $r17.<java.util.List: int size()>();

        $r54 = newarray (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill)[$i7];

        i27 = 0;

        $r18 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List fills>;

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r52 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r68 = (org.apache.poi.xssf.usermodel.extensions.XSSFCellFill) $r52;

        $i22 = i27;

        i27 = i27 + 1;

        $r53 = virtualinvoke r68.<org.apache.poi.xssf.usermodel.extensions.XSSFCellFill: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill getCTFill()>();

        $r54[$i22] = $r53;

        goto label07;

     label08:
        interfaceinvoke r67.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFills: void setFillArray(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill[])>($r54);

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: void setFills(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFills)>(r67);

        $r20 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorders getBorders()>();

        r69 = $r20;

        if $r20 != null goto label09;

        r69 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorders$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorders newInstance()>();

     label09:
        $r21 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List borders>;

        $i8 = interfaceinvoke $r21.<java.util.List: int size()>();

        $l9 = (long) $i8;

        interfaceinvoke r69.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorders: void setCount(long)>($l9);

        $r22 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List borders>;

        $i10 = interfaceinvoke $r22.<java.util.List: int size()>();

        $r51 = newarray (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder)[$i10];

        i28 = 0;

        $r23 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List borders>;

        $r24 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z3 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r48 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r49 = (org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder) $r48;

        $i21 = i28;

        i28 = i28 + 1;

        $r50 = virtualinvoke r49.<org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder getCTBorder()>();

        $r51[$i21] = $r50;

        goto label10;

     label11:
        interfaceinvoke r69.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorders: void setBorderArray(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder[])>($r51);

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: void setBorders(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorders)>(r69);

        $r25 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        $i11 = interfaceinvoke $r25.<java.util.List: int size()>();

        if $i11 <= 0 goto label13;

        $r41 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellXfs getCellXfs()>();

        r70 = $r41;

        if $r41 != null goto label12;

        r70 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellXfs$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellXfs newInstance()>();

     label12:
        $r42 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        $i18 = interfaceinvoke $r42.<java.util.List: int size()>();

        $l19 = (long) $i18;

        interfaceinvoke r70.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellXfs: void setCount(long)>($l19);

        $r44 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        $r43 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        $i20 = interfaceinvoke $r43.<java.util.List: int size()>();

        $r45 = newarray (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf)[$i20];

        $r46 = interfaceinvoke $r44.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r45);

        $r47 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf[]) $r46;

        interfaceinvoke r70.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellXfs: void setXfArray(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf[])>($r47);

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: void setCellXfs(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellXfs)>(r70);

     label13:
        $r71 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List styleXfs>;

        $i29 = interfaceinvoke $r71.<java.util.List: int size()>();

        if $i29 <= 0 goto label15;

        $r34 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellStyleXfs getCellStyleXfs()>();

        r72 = $r34;

        if $r34 != null goto label14;

        r72 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellStyleXfs$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellStyleXfs newInstance()>();

     label14:
        $r35 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List styleXfs>;

        $i15 = interfaceinvoke $r35.<java.util.List: int size()>();

        $l16 = (long) $i15;

        interfaceinvoke r72.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellStyleXfs: void setCount(long)>($l16);

        $r37 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List styleXfs>;

        $r36 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List styleXfs>;

        $i17 = interfaceinvoke $r36.<java.util.List: int size()>();

        $r38 = newarray (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf)[$i17];

        $r39 = interfaceinvoke $r37.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r38);

        $r40 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf[]) $r39;

        interfaceinvoke r72.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellStyleXfs: void setXfArray(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf[])>($r40);

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: void setCellStyleXfs(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellStyleXfs)>(r72);

     label15:
        $r73 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List dxfs>;

        $i30 = interfaceinvoke $r73.<java.util.List: int size()>();

        if $i30 <= 0 goto label17;

        $r27 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxfs getDxfs()>();

        r74 = $r27;

        if $r27 != null goto label16;

        r74 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxfs$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxfs newInstance()>();

     label16:
        $r28 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List dxfs>;

        $i12 = interfaceinvoke $r28.<java.util.List: int size()>();

        $l13 = (long) $i12;

        interfaceinvoke r74.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxfs: void setCount(long)>($l13);

        $r30 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List dxfs>;

        $r29 = r2.<org.apache.poi.xssf.model.StylesTable: java.util.List dxfs>;

        $i14 = interfaceinvoke $r29.<java.util.List: int size()>();

        $r31 = newarray (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf)[$i14];

        $r32 = interfaceinvoke $r30.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r31);

        $r33 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf[]) $r32;

        interfaceinvoke r74.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxfs: void setDxfArray(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf[])>($r33);

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTStylesheet: void setDxfs(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxfs)>(r74);

     label17:
        $r75 = r2.<org.apache.poi.xssf.model.StylesTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument doc>;

        interfaceinvoke $r75.<org.openxmlformats.schemas.spreadsheetml.x2006.main.StyleSheetDocument: void save(java.io.OutputStream,org.apache.xmlbeans.XmlOptions)>(r26, $r0);

        return;
    }

    protected void commit() throws java.io.IOException
    {
        java.io.OutputStream $r2;
        org.apache.poi.openxml4j.opc.PackagePart $r1;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.model.StylesTable: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePart: java.io.OutputStream getOutputStream()>();

        virtualinvoke r0.<org.apache.poi.xssf.model.StylesTable: void writeTo(java.io.OutputStream)>($r2);

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        return;
    }

    private void initialize()
    {
        org.apache.poi.xssf.model.StylesTable r1;
        org.apache.poi.xssf.usermodel.XSSFFont $r0;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellFill $r4, $r7;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill[] $r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder $r10;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf $r13, $r15;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill $r5, $r8;
        java.util.List $r2, $r6, $r9, $r12, $r14, $r16;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder $r11;

        r1 := @this: org.apache.poi.xssf.model.StylesTable;

        $r0 = staticinvoke <org.apache.poi.xssf.model.StylesTable: org.apache.poi.xssf.usermodel.XSSFFont createDefaultFont()>();

        $r2 = r1.<org.apache.poi.xssf.model.StylesTable: java.util.List fonts>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r0);

        $r3 = staticinvoke <org.apache.poi.xssf.model.StylesTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill[] createDefaultFills()>();

        $r6 = r1.<org.apache.poi.xssf.model.StylesTable: java.util.List fills>;

        $r4 = new org.apache.poi.xssf.usermodel.extensions.XSSFCellFill;

        $r5 = $r3[0];

        specialinvoke $r4.<org.apache.poi.xssf.usermodel.extensions.XSSFCellFill: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill)>($r5);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r9 = r1.<org.apache.poi.xssf.model.StylesTable: java.util.List fills>;

        $r7 = new org.apache.poi.xssf.usermodel.extensions.XSSFCellFill;

        $r8 = $r3[1];

        specialinvoke $r7.<org.apache.poi.xssf.usermodel.extensions.XSSFCellFill: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill)>($r8);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r10 = staticinvoke <org.apache.poi.xssf.model.StylesTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder createDefaultBorder()>();

        $r12 = r1.<org.apache.poi.xssf.model.StylesTable: java.util.List borders>;

        $r11 = new org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder;

        specialinvoke $r11.<org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder)>($r10);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r13 = staticinvoke <org.apache.poi.xssf.model.StylesTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf createDefaultXf()>();

        $r14 = r1.<org.apache.poi.xssf.model.StylesTable: java.util.List styleXfs>;

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r15 = staticinvoke <org.apache.poi.xssf.model.StylesTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf createDefaultXf()>();

        interfaceinvoke $r15.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf: void setXfId(long)>(0L);

        $r16 = r1.<org.apache.poi.xssf.model.StylesTable: java.util.List xfs>;

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r15);

        return;
    }

    private static org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf createDefaultXf()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf $r0;

        $r0 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf newInstance()>();

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf: void setNumFmtId(long)>(0L);

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf: void setFontId(long)>(0L);

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf: void setFillId(long)>(0L);

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf: void setBorderId(long)>(0L);

        return $r0;
    }

    private static org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder createDefaultBorder()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder $r0;

        $r0 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder newInstance()>();

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorderPr addNewBottom()>();

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorderPr addNewTop()>();

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorderPr addNewLeft()>();

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorderPr addNewRight()>();

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorder: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBorderPr addNewDiagonal()>();

        return $r0;
    }

    private static org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill[] createDefaultFills()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTPatternFill $r4, $r7;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill $r1, $r2, $r3, $r6;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STPatternType$Enum $r5, $r8;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill[] $r0;

        $r0 = newarray (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill)[2];

        $r1 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill newInstance()>();

        $r0[0] = $r1;

        $r2 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill newInstance()>();

        $r0[1] = $r2;

        $r3 = $r0[0];

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTPatternFill addNewPatternFill()>();

        $r5 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STPatternType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STPatternType$Enum NONE>;

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTPatternFill: void setPatternType(org.openxmlformats.schemas.spreadsheetml.x2006.main.STPatternType$Enum)>($r5);

        $r6 = $r0[1];

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFill: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTPatternFill addNewPatternFill()>();

        $r8 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STPatternType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STPatternType$Enum DARK_GRAY>;

        interfaceinvoke $r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTPatternFill: void setPatternType(org.openxmlformats.schemas.spreadsheetml.x2006.main.STPatternType$Enum)>($r8);

        return $r0;
    }

    private static org.apache.poi.xssf.usermodel.XSSFFont createDefaultFont()
    {
        org.apache.poi.ss.usermodel.FontFamily $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont $r0;
        short $s0;
        org.apache.poi.ss.usermodel.FontScheme $r3;
        org.apache.poi.xssf.usermodel.XSSFFont $r1;

        $r0 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont newInstance()>();

        $r1 = new org.apache.poi.xssf.usermodel.XSSFFont;

        specialinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFFont: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont,int)>($r0, 0);

        virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFFont: void setFontHeightInPoints(short)>(11);

        $s0 = <org.apache.poi.xssf.usermodel.XSSFFont: short DEFAULT_FONT_COLOR>;

        virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFFont: void setColor(short)>($s0);

        virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFFont: void setFontName(java.lang.String)>("Calibri");

        $r2 = <org.apache.poi.ss.usermodel.FontFamily: org.apache.poi.ss.usermodel.FontFamily SWISS>;

        virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFFont: void setFamily(org.apache.poi.ss.usermodel.FontFamily)>($r2);

        $r3 = <org.apache.poi.ss.usermodel.FontScheme: org.apache.poi.ss.usermodel.FontScheme MINOR>;

        virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFFont: void setScheme(org.apache.poi.ss.usermodel.FontScheme)>($r3);

        return $r1;
    }

    public org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf getDxfAt(int)
    {
        java.util.List $r1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf $r3;
        int i0;
        java.lang.Object $r2;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List dxfs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf) $r2;

        return $r3;
    }

    public int putDxf(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf)
    {
        java.util.List $r2, $r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf r1;
        int $i0;
        org.apache.poi.xssf.model.StylesTable r0;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        r1 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTDxf;

        $r2 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List dxfs>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List dxfs>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        return $i0;
    }

    public org.apache.poi.xssf.usermodel.XSSFCellStyle createCellStyle()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf $r0;
        org.apache.poi.xssf.model.StylesTable r1;
        org.apache.poi.xssf.usermodel.XSSFCellStyle $r3;
        org.apache.poi.xssf.model.ThemesTable $r4;
        java.util.List $r2;
        int $i0, $i1, $i2, $i3;

        r1 := @this: org.apache.poi.xssf.model.StylesTable;

        $r0 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf newInstance()>();

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf: void setNumFmtId(long)>(0L);

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf: void setFontId(long)>(0L);

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf: void setFillId(long)>(0L);

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf: void setBorderId(long)>(0L);

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf: void setXfId(long)>(0L);

        $r2 = r1.<org.apache.poi.xssf.model.StylesTable: java.util.List styleXfs>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = virtualinvoke r1.<org.apache.poi.xssf.model.StylesTable: int putCellXf(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXf)>($r0);

        $r3 = new org.apache.poi.xssf.usermodel.XSSFCellStyle;

        $i3 = $i1 - 1;

        $i2 = $i0 - 1;

        $r4 = r1.<org.apache.poi.xssf.model.StylesTable: org.apache.poi.xssf.model.ThemesTable theme>;

        specialinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFCellStyle: void <init>(int,int,org.apache.poi.xssf.model.StylesTable,org.apache.poi.xssf.model.ThemesTable)>($i3, $i2, r1, $r4);

        return $r3;
    }

    public org.apache.poi.xssf.usermodel.XSSFFont findFont(short, short, short, java.lang.String, boolean, boolean, short, byte)
    {
        org.apache.poi.xssf.model.StylesTable r0;
        byte $b8, b9;
        boolean $z0, $z1, $z2, z3, $z4, z5;
        java.util.List $r1;
        org.apache.poi.xssf.usermodel.XSSFFont r4;
        short $s0, s1, $s2, s3, $s4, s5, $s6, s7;
        int $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.String $r5, r6;
        java.util.Iterator $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.poi.xssf.model.StylesTable;

        s1 := @parameter0: short;

        s3 := @parameter1: short;

        s5 := @parameter2: short;

        r6 := @parameter3: java.lang.String;

        z3 := @parameter4: boolean;

        z5 := @parameter5: boolean;

        s7 := @parameter6: short;

        b9 := @parameter7: byte;

        $r1 = r0.<org.apache.poi.xssf.model.StylesTable: java.util.List fonts>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.xssf.usermodel.XSSFFont) $r3;

        $s0 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFFont: short getBoldweight()>();

        $i10 = (int) $s0;

        $i11 = (int) s1;

        if $i10 != $i11 goto label2;

        $s2 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFFont: short getColor()>();

        $i12 = (int) $s2;

        $i13 = (int) s3;

        if $i12 != $i13 goto label2;

        $s4 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFFont: short getFontHeight()>();

        $i14 = (int) $s4;

        $i15 = (int) s5;

        if $i14 != $i15 goto label2;

        $r5 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFFont: java.lang.String getFontName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFFont: boolean getItalic()>();

        if $z2 != z3 goto label2;

        $z4 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFFont: boolean getStrikeout()>();

        if $z4 != z5 goto label2;

        $s6 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFFont: short getTypeOffset()>();

        $i16 = (int) $s6;

        $i17 = (int) s7;

        if $i16 != $i17 goto label2;

        $b8 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFFont: byte getUnderline()>();

        $i18 = (int) $b8;

        $i19 = (int) b9;

        if $i18 != $i19 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public static void <clinit>()
    {
        <org.apache.poi.xssf.model.StylesTable: int FIRST_CUSTOM_STYLE_ID> = 165;

        return;
    }
}
