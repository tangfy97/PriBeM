public class org.apache.commons.configuration.XMLPropertiesConfiguration extends org.apache.commons.configuration.PropertiesConfiguration
{
    private static final java.lang.String DEFAULT_ENCODING;

    public void <init>()
    {
        org.apache.commons.configuration.XMLPropertiesConfiguration r0;

        r0 := @this: org.apache.commons.configuration.XMLPropertiesConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: void <init>()>();

        virtualinvoke r0.<org.apache.commons.configuration.XMLPropertiesConfiguration: void setEncoding(java.lang.String)>("UTF-8");

        return;
    }

    public void <init>(java.lang.String) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.XMLPropertiesConfiguration r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.XMLPropertiesConfiguration;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: void <init>(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.commons.configuration.XMLPropertiesConfiguration: void setEncoding(java.lang.String)>("UTF-8");

        return;
    }

    public void <init>(java.io.File) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.XMLPropertiesConfiguration r0;
        java.io.File r1;

        r0 := @this: org.apache.commons.configuration.XMLPropertiesConfiguration;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: void <init>(java.io.File)>(r1);

        virtualinvoke r0.<org.apache.commons.configuration.XMLPropertiesConfiguration: void setEncoding(java.lang.String)>("UTF-8");

        return;
    }

    public void <init>(java.net.URL) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.XMLPropertiesConfiguration r0;
        java.net.URL r1;

        r0 := @this: org.apache.commons.configuration.XMLPropertiesConfiguration;

        r1 := @parameter0: java.net.URL;

        specialinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: void <init>(java.net.URL)>(r1);

        virtualinvoke r0.<org.apache.commons.configuration.XMLPropertiesConfiguration: void setEncoding(java.lang.String)>("UTF-8");

        return;
    }

    public void load(java.io.Reader) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.XMLPropertiesConfiguration r4;
        org.xml.sax.InputSource $r6;
        javax.xml.parsers.SAXParserFactory $r0;
        java.io.Reader r7;
        org.apache.commons.configuration.XMLPropertiesConfiguration$XMLPropertiesHandler $r5;
        java.lang.Exception $r8;
        org.xml.sax.XMLReader $r2;
        org.apache.commons.configuration.XMLPropertiesConfiguration$1 $r3;
        javax.xml.parsers.SAXParser $r1;
        org.apache.commons.configuration.ConfigurationException $r9;

        r4 := @this: org.apache.commons.configuration.XMLPropertiesConfiguration;

        r7 := @parameter0: java.io.Reader;

        $r0 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke $r0.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(0);

        virtualinvoke $r0.<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>(1);

     label1:
        $r1 = virtualinvoke $r0.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r2 = virtualinvoke $r1.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        $r3 = new org.apache.commons.configuration.XMLPropertiesConfiguration$1;

        specialinvoke $r3.<org.apache.commons.configuration.XMLPropertiesConfiguration$1: void <init>(org.apache.commons.configuration.XMLPropertiesConfiguration)>(r4);

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>($r3);

        $r5 = new org.apache.commons.configuration.XMLPropertiesConfiguration$XMLPropertiesHandler;

        specialinvoke $r5.<org.apache.commons.configuration.XMLPropertiesConfiguration$XMLPropertiesHandler: void <init>(org.apache.commons.configuration.XMLPropertiesConfiguration,org.apache.commons.configuration.XMLPropertiesConfiguration$1)>(r4, null);

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r5);

        $r6 = new org.xml.sax.InputSource;

        specialinvoke $r6.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r7);

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r6);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r9.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to parse the configuration file", $r8);

        throw $r9;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void save(java.io.Writer) throws org.apache.commons.configuration.ConfigurationException
    {
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r15, $r16, $r19, $r20;
        java.lang.String $r3, $r8, $r9, r12, $r17, $r18, $r21, $r22;
        boolean $z0, $z1;
        java.io.PrintWriter $r0;
        org.apache.commons.configuration.XMLPropertiesConfiguration r2;
        java.util.Iterator $r10;
        java.util.List $r14;
        java.io.Writer r1;
        java.lang.Object $r11, $r13;

        r2 := @this: org.apache.commons.configuration.XMLPropertiesConfiguration;

        r1 := @parameter0: java.io.Writer;

        $r0 = new java.io.PrintWriter;

        specialinvoke $r0.<java.io.PrintWriter: void <init>(java.io.Writer)>(r1);

        $r3 = virtualinvoke r2.<org.apache.commons.configuration.XMLPropertiesConfiguration: java.lang.String getEncoding()>();

        if $r3 == null goto label1;

        $r22 = virtualinvoke r2.<org.apache.commons.configuration.XMLPropertiesConfiguration: java.lang.String getEncoding()>();

        goto label2;

     label1:
        $r22 = "UTF-8";

     label2:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<?xml version=\"1.0\" encoding=\"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"?>");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        virtualinvoke $r0.<java.io.PrintWriter: void println(java.lang.String)>("<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">");

        virtualinvoke $r0.<java.io.PrintWriter: void println(java.lang.String)>("<properties>");

        $r9 = virtualinvoke r2.<org.apache.commons.configuration.XMLPropertiesConfiguration: java.lang.String getHeader()>();

        if $r9 == null goto label3;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  <comment>");

        $r17 = virtualinvoke r2.<org.apache.commons.configuration.XMLPropertiesConfiguration: java.lang.String getHeader()>();

        $r18 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String escapeXml(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</comment>");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintWriter: void println(java.lang.String)>($r21);

     label3:
        $r10 = virtualinvoke r2.<org.apache.commons.configuration.XMLPropertiesConfiguration: java.util.Iterator getKeys()>();

     label4:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.lang.String) $r11;

        $r13 = virtualinvoke r2.<org.apache.commons.configuration.XMLPropertiesConfiguration: java.lang.Object getProperty(java.lang.String)>(r12);

        $z0 = $r13 instanceof java.util.List;

        if $z0 == 0 goto label5;

        $r14 = (java.util.List) $r13;

        specialinvoke r2.<org.apache.commons.configuration.XMLPropertiesConfiguration: void writeProperty(java.io.PrintWriter,java.lang.String,java.util.List)>($r0, r12, $r14);

        goto label6;

     label5:
        specialinvoke r2.<org.apache.commons.configuration.XMLPropertiesConfiguration: void writeProperty(java.io.PrintWriter,java.lang.String,java.lang.Object)>($r0, r12, $r13);

     label6:
        goto label4;

     label7:
        virtualinvoke $r0.<java.io.PrintWriter: void println(java.lang.String)>("</properties>");

        virtualinvoke $r0.<java.io.PrintWriter: void flush()>();

        return;
    }

    private void writeProperty(java.io.PrintWriter, java.lang.String, java.lang.Object)
    {
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22, $r23;
        java.lang.String r0, $r1, $r8, $r9, $r10, $r12, $r16, $r17, $r24;
        java.io.PrintWriter r3;
        org.apache.commons.configuration.XMLPropertiesConfiguration r11;
        char $c0, $c1;
        java.lang.Object r2;

        r11 := @this: org.apache.commons.configuration.XMLPropertiesConfiguration;

        r3 := @parameter0: java.io.PrintWriter;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        $r1 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String escapeXml(java.lang.String)>(r0);

        if r2 == null goto label1;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $r10 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String escapeXml(java.lang.String)>($r9);

        $c0 = virtualinvoke r11.<org.apache.commons.configuration.XMLPropertiesConfiguration: char getListDelimiter()>();

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\");

        $c1 = virtualinvoke r11.<org.apache.commons.configuration.XMLPropertiesConfiguration: char getListDelimiter()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        $r17 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r10, $r12, $r16);

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  <entry key=\"");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\">");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</entry>");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        goto label2;

     label1:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  <entry key=\"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"/>");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r8);

     label2:
        return;
    }

    private void writeProperty(java.io.PrintWriter, java.lang.String, java.util.List)
    {
        java.io.PrintWriter r2;
        org.apache.commons.configuration.XMLPropertiesConfiguration r1;
        java.util.List r0;
        int $i0, i1;
        java.lang.Object $r4;
        java.lang.String r3;

        r1 := @this: org.apache.commons.configuration.XMLPropertiesConfiguration;

        r2 := @parameter0: java.io.PrintWriter;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: java.util.List;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        specialinvoke r1.<org.apache.commons.configuration.XMLPropertiesConfiguration: void writeProperty(java.io.PrintWriter,java.lang.String,java.lang.Object)>(r2, r3, $r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.configuration.XMLPropertiesConfiguration: java.lang.String DEFAULT_ENCODING> = "UTF-8";

        return;
    }
}
