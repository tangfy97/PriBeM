class org.apache.lucene.search.PhraseQuery$PostingsAndFreq extends java.lang.Object implements java.lang.Comparable
{
    final org.apache.lucene.index.DocsAndPositionsEnum postings;
    final int docFreq;
    final int position;
    final org.apache.lucene.index.Term[] terms;
    final int nTerms;

    public transient void <init>(org.apache.lucene.index.DocsAndPositionsEnum, int, int, org.apache.lucene.index.Term[])
    {
        org.apache.lucene.search.PhraseQuery$PostingsAndFreq r0;
        org.apache.lucene.index.DocsAndPositionsEnum r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.lucene.index.Term[] r2, r3;

        r0 := @this: org.apache.lucene.search.PhraseQuery$PostingsAndFreq;

        r1 := @parameter0: org.apache.lucene.index.DocsAndPositionsEnum;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: org.apache.lucene.index.Term[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: org.apache.lucene.index.DocsAndPositionsEnum postings> = r1;

        r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int docFreq> = i0;

        r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int position> = i1;

        if r2 != null goto label1;

        $i6 = 0;

        goto label2;

     label1:
        $i6 = lengthof r2;

     label2:
        r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int nTerms> = $i6;

        $i2 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int nTerms>;

        if $i2 <= 0 goto label4;

        $i3 = lengthof r2;

        if $i3 != 1 goto label3;

        r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: org.apache.lucene.index.Term[] terms> = r2;

        goto label5;

     label3:
        $i4 = lengthof r2;

        r3 = newarray (org.apache.lucene.index.Term)[$i4];

        $i5 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, $i5);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(r3);

        r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: org.apache.lucene.index.Term[] terms> = r3;

        goto label5;

     label4:
        r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: org.apache.lucene.index.Term[] terms> = null;

     label5:
        return;
    }

    public int compareTo(org.apache.lucene.search.PhraseQuery$PostingsAndFreq)
    {
        org.apache.lucene.index.Term $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18;
        org.apache.lucene.index.Term[] $r2, $r3, $r4;
        org.apache.lucene.search.PhraseQuery$PostingsAndFreq r0, r1;

        r0 := @this: org.apache.lucene.search.PhraseQuery$PostingsAndFreq;

        r1 := @parameter0: org.apache.lucene.search.PhraseQuery$PostingsAndFreq;

        $i1 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int docFreq>;

        $i0 = r1.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int docFreq>;

        if $i1 == $i0 goto label1;

        $i16 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int docFreq>;

        $i15 = r1.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int docFreq>;

        $i17 = $i16 - $i15;

        return $i17;

     label1:
        $i3 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int position>;

        $i2 = r1.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int position>;

        if $i3 == $i2 goto label2;

        $i13 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int position>;

        $i12 = r1.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int position>;

        $i14 = $i13 - $i12;

        return $i14;

     label2:
        $i5 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int nTerms>;

        $i4 = r1.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int nTerms>;

        if $i5 == $i4 goto label3;

        $i10 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int nTerms>;

        $i9 = r1.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int nTerms>;

        $i11 = $i10 - $i9;

        return $i11;

     label3:
        $i6 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int nTerms>;

        if $i6 != 0 goto label4;

        return 0;

     label4:
        i18 = 0;

     label5:
        $r2 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: org.apache.lucene.index.Term[] terms>;

        $i7 = lengthof $r2;

        if i18 >= $i7 goto label7;

        $r3 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: org.apache.lucene.index.Term[] terms>;

        $r6 = $r3[i18];

        $r4 = r1.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: org.apache.lucene.index.Term[] terms>;

        $r5 = $r4[i18];

        $i8 = virtualinvoke $r6.<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)>($r5);

        if $i8 == 0 goto label6;

        return $i8;

     label6:
        i18 = i18 + 1;

        goto label5;

     label7:
        return 0;
    }

    public int hashCode()
    {
        org.apache.lucene.index.Term $r2;
        org.apache.lucene.search.PhraseQuery$PostingsAndFreq r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        org.apache.lucene.index.Term[] $r1;

        r0 := @this: org.apache.lucene.search.PhraseQuery$PostingsAndFreq;

        $i0 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int docFreq>;

        i6 = 31 + $i0;

        $i2 = 31 * i6;

        $i1 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int position>;

        i7 = $i2 + $i1;

        i8 = 0;

     label1:
        $i3 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int nTerms>;

        if i8 >= $i3 goto label2;

        $i4 = 31 * i7;

        $r1 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: org.apache.lucene.index.Term[] terms>;

        $r2 = $r1[i8];

        $i5 = virtualinvoke $r2.<org.apache.lucene.index.Term: int hashCode()>();

        i7 = $i4 + $i5;

        i8 = i8 + 1;

        goto label1;

     label2:
        return i7;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.search.PhraseQuery$PostingsAndFreq r0, r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        org.apache.lucene.index.Term[] $r5, $r6, $r7, $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.search.PhraseQuery$PostingsAndFreq;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.apache.lucene.search.PhraseQuery$PostingsAndFreq) r1;

        $i1 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int docFreq>;

        $i0 = r4.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int docFreq>;

        if $i1 == $i0 goto label4;

        return 0;

     label4:
        $i3 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int position>;

        $i2 = r4.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int position>;

        if $i3 == $i2 goto label5;

        return 0;

     label5:
        $r5 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: org.apache.lucene.index.Term[] terms>;

        if $r5 != null goto label8;

        $r8 = r4.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: org.apache.lucene.index.Term[] terms>;

        if $r8 != null goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        return $z1;

     label8:
        $r7 = r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: org.apache.lucene.index.Term[] terms>;

        $r6 = r4.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: org.apache.lucene.index.Term[] terms>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r7, $r6);

        return $z0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        org.apache.lucene.search.PhraseQuery$PostingsAndFreq r0, $r2;

        r0 := @this: org.apache.lucene.search.PhraseQuery$PostingsAndFreq;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.lucene.search.PhraseQuery$PostingsAndFreq) r1;

        $i0 = virtualinvoke r0.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int compareTo(org.apache.lucene.search.PhraseQuery$PostingsAndFreq)>($r2);

        return $i0;
    }
}
