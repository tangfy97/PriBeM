public class org.springframework.beans.propertyeditors.CustomDateEditor extends java.beans.PropertyEditorSupport
{
    private final java.text.DateFormat dateFormat;
    private final boolean allowEmpty;
    private final int exactDateLength;

    public void <init>(java.text.DateFormat, boolean)
    {
        int $i1;
        org.springframework.beans.propertyeditors.CustomDateEditor r0;
        java.text.DateFormat r1;
        boolean z0;

        r0 := @this: org.springframework.beans.propertyeditors.CustomDateEditor;

        r1 := @parameter0: java.text.DateFormat;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        r0.<org.springframework.beans.propertyeditors.CustomDateEditor: java.text.DateFormat dateFormat> = r1;

        r0.<org.springframework.beans.propertyeditors.CustomDateEditor: boolean allowEmpty> = z0;

        $i1 = (int) -1;

        r0.<org.springframework.beans.propertyeditors.CustomDateEditor: int exactDateLength> = $i1;

        return;
    }

    public void <init>(java.text.DateFormat, boolean, int)
    {
        int i0;
        org.springframework.beans.propertyeditors.CustomDateEditor r0;
        java.text.DateFormat r1;
        boolean z0;

        r0 := @this: org.springframework.beans.propertyeditors.CustomDateEditor;

        r1 := @parameter0: java.text.DateFormat;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        r0.<org.springframework.beans.propertyeditors.CustomDateEditor: java.text.DateFormat dateFormat> = r1;

        r0.<org.springframework.beans.propertyeditors.CustomDateEditor: boolean allowEmpty> = z0;

        r0.<org.springframework.beans.propertyeditors.CustomDateEditor: int exactDateLength> = i0;

        return;
    }

    public void setAsText(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.util.Date $r14;
        int $i0, $i1, $i2, $i3;
        java.lang.String r1, $r6, $r10, $r12;
        org.springframework.beans.propertyeditors.CustomDateEditor r0;
        java.text.ParseException $r7;
        java.text.DateFormat $r13;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2, $r8;
        java.lang.StringBuilder $r3, $r4, $r5, $r9, $r11;

        r0 := @this: org.springframework.beans.propertyeditors.CustomDateEditor;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.springframework.beans.propertyeditors.CustomDateEditor: boolean allowEmpty>;

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r1);

        if $z1 != 0 goto label1;

        virtualinvoke r0.<org.springframework.beans.propertyeditors.CustomDateEditor: void setValue(java.lang.Object)>(null);

        goto label5;

     label1:
        if r1 == null goto label2;

        $i0 = r0.<org.springframework.beans.propertyeditors.CustomDateEditor: int exactDateLength>;

        if $i0 < 0 goto label2;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = r0.<org.springframework.beans.propertyeditors.CustomDateEditor: int exactDateLength>;

        if $i1 == $i2 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not parse date: it is not exactly");

        $i3 = r0.<org.springframework.beans.propertyeditors.CustomDateEditor: int exactDateLength>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("characters long");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        $r13 = r0.<org.springframework.beans.propertyeditors.CustomDateEditor: java.text.DateFormat dateFormat>;

        $r14 = virtualinvoke $r13.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(r1);

        virtualinvoke r0.<org.springframework.beans.propertyeditors.CustomDateEditor: void setValue(java.lang.Object)>($r14);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not parse date: ");

        $r10 = virtualinvoke $r7.<java.text.ParseException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r7);

        throw $r8;

     label5:
        return;

        catch java.text.ParseException from label2 to label3 with label4;
    }

    public java.lang.String getAsText()
    {
        java.util.Date r2;
        java.lang.Object $r1;
        java.lang.String $r4;
        org.springframework.beans.propertyeditors.CustomDateEditor r0;
        java.text.DateFormat $r3;

        r0 := @this: org.springframework.beans.propertyeditors.CustomDateEditor;

        $r1 = virtualinvoke r0.<org.springframework.beans.propertyeditors.CustomDateEditor: java.lang.Object getValue()>();

        r2 = (java.util.Date) $r1;

        if r2 == null goto label1;

        $r3 = r0.<org.springframework.beans.propertyeditors.CustomDateEditor: java.text.DateFormat dateFormat>;

        $r4 = virtualinvoke $r3.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r2);

        goto label2;

     label1:
        $r4 = "";

     label2:
        return $r4;
    }
}
