public final class org.codehaus.jackson.impl.WriterBasedGenerator extends org.codehaus.jackson.impl.JsonGeneratorBase
{
    static final int SHORT_WRITE;
    static final char[] HEX_CHARS;
    protected final org.codehaus.jackson.io.IOContext _ioContext;
    protected final java.io.Writer _writer;
    protected char[] _outputBuffer;
    protected int _outputHead;
    protected int _outputTail;
    protected int _outputEnd;
    protected char[] _entityBuffer;

    public void <init>(org.codehaus.jackson.io.IOContext, int, org.codehaus.jackson.ObjectCodec, java.io.Writer)
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.io.IOContext r2;
        org.codehaus.jackson.ObjectCodec r1;
        int i0, $i1;
        java.io.Writer r3;
        char[] $r4, $r5;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r2 := @parameter0: org.codehaus.jackson.io.IOContext;

        i0 := @parameter1: int;

        r1 := @parameter2: org.codehaus.jackson.ObjectCodec;

        r3 := @parameter3: java.io.Writer;

        specialinvoke r0.<org.codehaus.jackson.impl.JsonGeneratorBase: void <init>(int,org.codehaus.jackson.ObjectCodec)>(i0, r1);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead> = 0;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = 0;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.io.IOContext _ioContext> = r2;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer> = r3;

        $r4 = virtualinvoke r2.<org.codehaus.jackson.io.IOContext: char[] allocConcatBuffer()>();

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer> = $r4;

        $r5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i1 = lengthof $r5;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd> = $i1;

        return;
    }

    protected void _writeStartArray() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, $i2, $i3;
        char[] $r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i3;

        $r1[$i2] = 91;

        return;
    }

    protected void _writeEndArray() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, $i2, $i3;
        char[] $r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i3;

        $r1[$i2] = 93;

        return;
    }

    protected void _writeStartObject() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, $i2, $i3;
        char[] $r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i3;

        $r1[$i2] = 123;

        return;
    }

    protected void _writeEndObject() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, $i2, $i3;
        char[] $r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i3;

        $r1[$i2] = 125;

        return;
    }

    protected void _writeFieldName(java.lang.String, boolean) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.JsonGenerator$Feature $r2;
        org.codehaus.jackson.PrettyPrinter $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String r4;
        boolean z0, $z1;
        char[] $r3, $r5, $r6;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r4 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        if $r1 == null goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writePPFieldName(java.lang.String,boolean)>(r4, z0);

        return;

     label1:
        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i2 = $i0 + 1;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i2 < $i1 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        if z0 == 0 goto label3;

        $r6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i9 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i10 = $i9 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i10;

        $r6[$i9] = 44;

     label3:
        $r2 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature QUOTE_FIELD_NAMES>;

        $z1 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>($r2);

        if $z1 != 0 goto label4;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeString(java.lang.String)>(r4);

        return;

     label4:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i4 = $i3 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i4;

        $r3[$i3] = 34;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeString(java.lang.String)>(r4);

        $i6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i6 < $i5 goto label5;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label5:
        $r5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i7 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i8 = $i7 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i8;

        $r5[$i7] = 34;

        return;
    }

    protected final void _writePPFieldName(java.lang.String, boolean) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.JsonGenerator$Feature $r2;
        org.codehaus.jackson.PrettyPrinter $r1, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r3;
        boolean z0, $z1;
        char[] $r4, $r5;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r3 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r6.<org.codehaus.jackson.PrettyPrinter: void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator)>(r0);

        goto label2;

     label1:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r1.<org.codehaus.jackson.PrettyPrinter: void beforeObjectEntries(org.codehaus.jackson.JsonGenerator)>(r0);

     label2:
        $r2 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature QUOTE_FIELD_NAMES>;

        $z1 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>($r2);

        if $z1 == 0 goto label5;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i0 goto label3;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label3:
        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i3;

        $r4[$i2] = 34;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeString(java.lang.String)>(r3);

        $i5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i5 < $i4 goto label4;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label4:
        $r5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i7 = $i6 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i7;

        $r5[$i6] = 34;

        goto label6;

     label5:
        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeString(java.lang.String)>(r3);

     label6:
        return;
    }

    public void writeString(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        char[] $r2, $r3;
        java.lang.String r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write text value");

        if r1 != null goto label1;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeNull()>();

        return;

     label1:
        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i0 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i3;

        $r2[$i2] = 34;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeString(java.lang.String)>(r1);

        $i5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i5 < $i4 goto label3;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label3:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i7 = $i6 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i7;

        $r3[$i6] = 34;

        return;
    }

    public void writeString(char[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7, $i8, $i9;
        char[] $r1, r2, $r3;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r2 := @parameter0: char[];

        i4 := @parameter1: int;

        i5 := @parameter2: int;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write text value");

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i3;

        $r1[$i2] = 34;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeString(char[],int,int)>(r2, i4, i5);

        $i7 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i7 < $i6 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i8 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i9 = $i8 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i9;

        $r3[$i8] = 34;

        return;
    }

    public void writeRaw(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        char[] $r2;
        java.lang.String r0;

        r1 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        $i1 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i8 = $i2 - $i1;

        if i8 != 0 goto label1;

        virtualinvoke r1.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $i7 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        $i6 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i8 = $i7 - $i6;

     label1:
        if i8 < $i0 goto label2;

        $r2 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i3 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r2, $i3);

        $i4 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i5 = $i4 + $i0;

        r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i5;

        goto label3;

     label2:
        specialinvoke r1.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRawLong(java.lang.String)>(r0);

     label3:
        return;
    }

    public void writeRaw(java.lang.String, int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        java.lang.String r1, $r2;
        char[] $r3;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r1 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

        i2 := @parameter2: int;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i11 = $i1 - $i0;

        if i11 >= i2 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $i10 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        $i9 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i11 = $i10 - $i9;

     label1:
        if i11 < i2 goto label2;

        $i6 = i3 + i2;

        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i3, $i6, $r3, $i5);

        $i7 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i8 = $i7 + i2;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i8;

        goto label3;

     label2:
        $i4 = i3 + i2;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i3, $i4);

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRawLong(java.lang.String)>($r2);

     label3:
        return;
    }

    public void writeRaw(char[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7;
        java.io.Writer $r2;
        char[] r1, $r3;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r1 := @parameter0: char[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 >= 32 goto label2;

        $i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i4 = $i3 - $i2;

        if i0 <= i4 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i1, $r3, $i5, i0);

        $i6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i7 = $i6 + i0;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i7;

        return;

     label2:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        virtualinvoke $r2.<java.io.Writer: void write(char[],int,int)>(r1, i1, i0);

        return;
    }

    public void writeRaw(char) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, $i2, $i3;
        char[] $r1;
        char c4;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        c4 := @parameter0: char;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i3;

        $r1[$i2] = c4;

        return;
    }

    public void writeRawValue(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write raw value");

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(java.lang.String)>(r1);

        return;
    }

    public void writeRawValue(java.lang.String, int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write raw value");

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(java.lang.String,int,int)>(r1, i0, i1);

        return;
    }

    public void writeRawValue(char[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int i0, i1;
        char[] r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write raw value");

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(char[],int,int)>(r1, i0, i1);

        return;
    }

    private void writeRawLong(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, i11, i12;
        java.lang.String r1;
        char[] $r2, $r3, $r4;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r1 := @parameter0: java.lang.String;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i2 = $i1 - $i0;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i2, $r2, $i3);

        $i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i5 = $i4 + i2;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i5;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        i11 = i2;

        $i6 = virtualinvoke r1.<java.lang.String: int length()>();

        i12 = $i6 - i2;

     label1:
        $i7 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if i12 <= $i7 goto label2;

        i9 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        $i10 = i11 + i9;

        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i11, $i10, $r4, 0);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead> = 0;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = i9;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        i11 = i11 + i9;

        i12 = i12 - i9;

        goto label1;

     label2:
        $i8 = i11 + i12;

        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i11, $i8, $r3, 0);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead> = 0;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = i12;

        return;
    }

    public void writeBinary(org.codehaus.jackson.Base64Variant, byte[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        byte[] r3;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7, $i8, $i9, $i10;
        org.codehaus.jackson.Base64Variant r2;
        char[] $r1, $r4;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r2 := @parameter0: org.codehaus.jackson.Base64Variant;

        r3 := @parameter1: byte[];

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write binary value");

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i3;

        $r1[$i2] = 34;

        $i6 = i4 + i5;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int)>(r2, r3, i4, $i6);

        $i8 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i7 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i8 < $i7 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i9 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i10 = $i9 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i10;

        $r4[$i9] = 34;

        return;
    }

    public void writeNumber(int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, $i2, i3, $i4, $i5;
        char[] $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        i3 := @parameter0: int;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write number");

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i2 = $i0 + 11;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i2 < $i1 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $z0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeQuotedInt(int)>(i3);

        return;

     label2:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i5 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputInt(int,char[],int)>(i3, $r1, $i4);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i5;

        return;
    }

    private final void _writeQuotedInt(int) throws java.io.IOException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9;
        char[] $r1, $r2, $r3;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        i5 := @parameter0: int;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i2 = $i0 + 13;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i2 < $i1 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i4 = $i3 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i4;

        $r1[$i3] = 34;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i7 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputInt(int,char[],int)>(i5, $r2, $i6);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i7;

        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i8 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i9 = $i8 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i9;

        $r3[$i8] = 34;

        return;
    }

    public void writeNumber(long) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        long l3;
        int $i0, $i1, $i2, $i4, $i5;
        char[] $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        l3 := @parameter0: long;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write number");

        $z0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeQuotedLong(long)>(l3);

        return;

     label1:
        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i2 = $i0 + 21;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i2 < $i1 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i5 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputLong(long,char[],int)>(l3, $r1, $i4);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i5;

        return;
    }

    private final void _writeQuotedLong(long) throws java.io.IOException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        long l5;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9;
        char[] $r1, $r2, $r3;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        l5 := @parameter0: long;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i2 = $i0 + 23;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i2 < $i1 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i4 = $i3 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i4;

        $r1[$i3] = 34;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i7 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputLong(long,char[],int)>(l5, $r2, $i6);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i7;

        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i8 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i9 = $i8 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i9;

        $r3[$i8] = 34;

        return;
    }

    public void writeNumber(java.math.BigInteger) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.math.BigInteger r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r1 := @parameter0: java.math.BigInteger;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write number");

        if r1 != null goto label1;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeNull()>();

        goto label3;

     label1:
        $z0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeQuotedRaw(java.lang.Object)>(r1);

        goto label3;

     label2:
        $r2 = virtualinvoke r1.<java.math.BigInteger: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(java.lang.String)>($r2);

     label3:
        return;
    }

    public void writeNumber(double) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.JsonGenerator$Feature $r2;
        java.lang.String $r1, $r3;
        boolean $z0, $z1, $z2, $z3;
        double d0;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        d0 := @parameter0: double;

        $z0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z1 != 0 goto label1;

        $z3 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0);

        if $z3 == 0 goto label3;

     label1:
        $r2 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS>;

        $z2 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>($r2);

        if $z2 == 0 goto label3;

     label2:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeString(java.lang.String)>($r1);

        return;

     label3:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write number");

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(java.lang.String)>($r3);

        return;
    }

    public void writeNumber(float) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.JsonGenerator$Feature $r2;
        float f0;
        java.lang.String $r1, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        f0 := @parameter0: float;

        $z0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z1 != 0 goto label1;

        $z3 = staticinvoke <java.lang.Float: boolean isInfinite(float)>(f0);

        if $z3 == 0 goto label3;

     label1:
        $r2 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS>;

        $z2 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>($r2);

        if $z2 == 0 goto label3;

     label2:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeString(java.lang.String)>($r1);

        return;

     label3:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write number");

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(java.lang.String)>($r3);

        return;
    }

    public void writeNumber(java.math.BigDecimal) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.math.BigDecimal r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r1 := @parameter0: java.math.BigDecimal;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write number");

        if r1 != null goto label1;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeNull()>();

        goto label3;

     label1:
        $z0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeQuotedRaw(java.lang.Object)>(r1);

        goto label3;

     label2:
        $r2 = virtualinvoke r1.<java.math.BigDecimal: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(java.lang.String)>($r2);

     label3:
        return;
    }

    public void writeNumber(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write number");

        $z0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeQuotedRaw(java.lang.Object)>(r1);

        goto label2;

     label1:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(java.lang.String)>(r1);

     label2:
        return;
    }

    private final void _writeQuotedRaw(java.lang.Object) throws java.io.IOException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        char[] $r1, $r4;
        java.lang.Object r2;
        java.lang.String $r3;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r2 := @parameter0: java.lang.Object;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i3;

        $r1[$i2] = 34;

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(java.lang.String)>($r3);

        $i5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i5 < $i4 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i7 = $i6 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i7;

        $r4[$i6] = 34;

        return;
    }

    public void writeBoolean(boolean) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9, i10;
        char[] $r1;
        boolean z0;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write boolean value");

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i2 = $i0 + 5;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i2 < $i1 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        if z0 == 0 goto label2;

        $r1[$i4] = 116;

        i5 = $i4 + 1;

        $r1[i5] = 114;

        i6 = i5 + 1;

        $r1[i6] = 117;

        i7 = i6 + 1;

        $r1[i7] = 101;

        goto label3;

     label2:
        $r1[$i4] = 102;

        i8 = $i4 + 1;

        $r1[i8] = 97;

        i9 = i8 + 1;

        $r1[i9] = 108;

        i10 = i9 + 1;

        $r1[i10] = 115;

        i7 = i10 + 1;

        $r1[i7] = 101;

     label3:
        $i3 = i7 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i3;

        return;
    }

    public void writeNull() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write null value");

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeNull()>();

        return;
    }

    protected final void _verifyValueWrite(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.PrettyPrinter $r2;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        java.lang.String r3, $r9;
        char c4;
        org.codehaus.jackson.impl.JsonWriteContext $r1;
        char[] $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $i0 = virtualinvoke $r1.<org.codehaus.jackson.impl.JsonWriteContext: int writeValue()>();

        if $i0 != 5 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expecting field name");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _reportError(java.lang.String)>($r9);

     label1:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        if $r2 != null goto label8;

        tableswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label2:
        c4 = 44;

        goto label6;

     label3:
        c4 = 58;

        goto label6;

     label4:
        c4 = 32;

        goto label6;

     label5:
        return;

     label6:
        $i5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i5 < $i6 goto label7;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label7:
        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $r4[$i1] = c4;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i3;

        return;

     label8:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyPrettyValueWrite(java.lang.String,int)>(r3, $i0);

        return;
    }

    protected final void _verifyPrettyValueWrite(java.lang.String, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.PrettyPrinter $r1, $r2, $r3, $r6, $r7;
        org.codehaus.jackson.impl.JsonWriteContext $r4, $r5;
        int i0;
        java.lang.String r8;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        tableswitch(i0)
        {
            case 0: goto label4;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label6;
        };

     label1:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r3.<org.codehaus.jackson.PrettyPrinter: void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator)>(r0);

        goto label7;

     label2:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r2.<org.codehaus.jackson.PrettyPrinter: void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator)>(r0);

        goto label7;

     label3:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r1.<org.codehaus.jackson.PrettyPrinter: void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator)>(r0);

        goto label7;

     label4:
        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $z0 = virtualinvoke $r4.<org.codehaus.jackson.impl.JsonWriteContext: boolean inArray()>();

        if $z0 == 0 goto label5;

        $r7 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r7.<org.codehaus.jackson.PrettyPrinter: void beforeArrayValues(org.codehaus.jackson.JsonGenerator)>(r0);

        goto label7;

     label5:
        $r5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $z1 = virtualinvoke $r5.<org.codehaus.jackson.impl.JsonWriteContext: boolean inObject()>();

        if $z1 == 0 goto label7;

        $r6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r6.<org.codehaus.jackson.PrettyPrinter: void beforeObjectEntries(org.codehaus.jackson.JsonGenerator)>(r0);

        goto label7;

     label6:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _cantHappen()>();

     label7:
        return;
    }

    public final void flush() throws java.io.IOException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.io.Writer $r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        virtualinvoke $r1.<java.io.Writer: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.io.IOContext $r7;
        org.codehaus.jackson.JsonGenerator$Feature $r3, $r5;
        org.codehaus.jackson.impl.JsonWriteContext $r6;
        java.io.Writer $r2, $r4;
        char[] $r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        specialinvoke r0.<org.codehaus.jackson.impl.JsonGeneratorBase: void close()>();

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        if $r1 == null goto label4;

        $r5 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT>;

        $z1 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>($r5);

        if $z1 == 0 goto label4;

     label1:
        $r6 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext getOutputContext()>();

        $z2 = virtualinvoke $r6.<org.codehaus.jackson.JsonStreamContext: boolean inArray()>();

        if $z2 == 0 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeEndArray()>();

        goto label3;

     label2:
        $z3 = virtualinvoke $r6.<org.codehaus.jackson.JsonStreamContext: boolean inObject()>();

        if $z3 == 0 goto label4;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeEndObject()>();

     label3:
        goto label1;

     label4:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $r7 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.io.IOContext _ioContext>;

        $z4 = virtualinvoke $r7.<org.codehaus.jackson.io.IOContext: boolean isResourceManaged()>();

        if $z4 != 0 goto label5;

        $r3 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_TARGET>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>($r3);

        if $z0 == 0 goto label6;

     label5:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        virtualinvoke $r2.<java.io.Writer: void close()>();

        goto label7;

     label6:
        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        virtualinvoke $r4.<java.io.Writer: void flush()>();

     label7:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _releaseBuffers()>();

        return;
    }

    protected void _releaseBuffers()
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        char[] r1;
        org.codehaus.jackson.io.IOContext $r2;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        if r1 == null goto label1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer> = null;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.io.IOContext _ioContext>;

        virtualinvoke $r2.<org.codehaus.jackson.io.IOContext: void releaseConcatBuffer(char[])>(r1);

     label1:
        return;
    }

    private void _writeString(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        byte $b29, $b30;
        int[] $r3;
        java.io.Writer $r8;
        org.codehaus.jackson.impl.WriterBasedGenerator r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, $i31, $i32, $i33;
        java.lang.String r0;
        char $c10, $c15;
        char[] $r2, $r4, $r5, $r6, $r7;

        r1 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 <= $i1 goto label01;

        specialinvoke r1.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeLongString(java.lang.String)>(r0);

        return;

     label01:
        $i2 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i4 = $i2 + $i0;

        $i3 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i4 <= $i3 goto label02;

        virtualinvoke r1.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label02:
        $r2 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i5 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r2, $i5);

        $i6 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i24 = $i6 + $i0;

        $r3 = staticinvoke <org.codehaus.jackson.util.CharTypes: int[] getOutputEscapes()>();

        $i25 = lengthof $r3;

     label03:
        $i26 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        if $i26 >= $i24 goto label13;

     label04:
        $r4 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i7 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $c10 = $r4[$i7];

        $i31 = (int) $c10;

        if $i31 >= $i25 goto label05;

        $i32 = (int) $c10;

        $i11 = $r3[$i32];

        if $i11 == 0 goto label05;

        goto label07;

     label05:
        $i8 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i9 = $i8 + 1;

        r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i9;

        if $i9 < $i24 goto label06;

        goto label13;

     label06:
        goto label04;

     label07:
        $i13 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i12 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead>;

        i27 = $i13 - $i12;

        if i27 <= 0 goto label08;

        $r8 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        $r7 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i22 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead>;

        virtualinvoke $r8.<java.io.Writer: void write(char[],int,int)>($r7, $i22, i27);

     label08:
        $r5 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i14 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $c15 = $r5[$i14];

        $i33 = (int) $c15;

        $i23 = $r3[$i33];

        $i16 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i17 = $i16 + 1;

        r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i17;

        if $i23 >= 0 goto label09;

        $b30 = 6;

        $b29 = 6;

        goto label10;

     label09:
        $b30 = 2;

        $b29 = 2;

     label10:
        $i18 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        if $b30 <= $i18 goto label11;

        $i21 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead> = $i21;

        specialinvoke r1.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeSingleEscape(int)>($i23);

        goto label12;

     label11:
        $i19 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i20 = $i19 - $b29;

        r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead> = i20;

        $r6 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        specialinvoke r1.<org.codehaus.jackson.impl.WriterBasedGenerator: void _appendSingleEscape(int,char[],int)>($i23, $r6, i20);

     label12:
        goto label03;

     label13:
        return;
    }

    private void _writeLongString(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6;
        char[] $r2;
        java.lang.String r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i5 = 0;

     label1:
        $i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        $i1 = i5 + $i3;

        if $i1 <= $i0 goto label2;

        $i6 = $i0 - i5;

        goto label3;

     label2:
        $i6 = $i3;

     label3:
        $i2 = i5 + $i6;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i5, $i2, $r2, 0);

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeSegment(int)>($i6);

        $i4 = i5 + $i6;

        i5 = $i4;

        if $i4 < $i0 goto label1;

        return;
    }

    private final void _writeSegment(int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r1;
        byte $b11, $b12;
        int[] $r0;
        int i0, i1, i2, $i5, $i6, $i7, $i8, i9, $i13, $i14, $i15;
        char $c3, $c4;
        java.io.Writer $r6;
        char[] $r2, $r3, $r4, $r5;

        r1 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        i1 := @parameter0: int;

        $r0 = staticinvoke <org.codehaus.jackson.util.CharTypes: int[] getOutputEscapes()>();

        i0 = lengthof $r0;

        i9 = 0;

     label01:
        if i9 >= i1 goto label11;

        i2 = i9;

     label02:
        $r2 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $c3 = $r2[i9];

        $i13 = (int) $c3;

        if $i13 >= i0 goto label03;

        $i14 = (int) $c3;

        $i7 = $r0[$i14];

        if $i7 == 0 goto label03;

        goto label05;

     label03:
        i9 = i9 + 1;

        if i9 < i1 goto label04;

        goto label05;

     label04:
        goto label02;

     label05:
        $i8 = i9 - i2;

        if $i8 <= 0 goto label06;

        $r6 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        $r5 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        virtualinvoke $r6.<java.io.Writer: void write(char[],int,int)>($r5, i2, $i8);

        if i9 < i1 goto label06;

        goto label11;

     label06:
        $r3 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $c4 = $r3[i9];

        $i15 = (int) $c4;

        $i6 = $r0[$i15];

        i9 = i9 + 1;

        if $i6 >= 0 goto label07;

        $b12 = 6;

        $b11 = 6;

        goto label08;

     label07:
        $b12 = 2;

        $b11 = 2;

     label08:
        $i5 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        if $b12 <= $i5 goto label09;

        specialinvoke r1.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeSingleEscape(int)>($i6);

        goto label10;

     label09:
        i9 = i9 - $b11;

        $r4 = r1.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        specialinvoke r1.<org.codehaus.jackson.impl.WriterBasedGenerator: void _appendSingleEscape(int,char[],int)>($i6, $r4, i9);

     label10:
        goto label01;

     label11:
        return;
    }

    private void _writeString(char[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        byte b5, $b24, $b25;
        int[] $r0;
        java.io.Writer $r3;
        org.codehaus.jackson.impl.WriterBasedGenerator r2;
        int i0, i1, i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, $i26, $i27, $i28;
        char $c2, $c3;
        char[] r1, $r4, $r5;

        r2 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r1 := @parameter0: char[];

        i20 := @parameter1: int;

        i21 := @parameter2: int;

        i22 = i21 + i20;

        $r0 = staticinvoke <org.codehaus.jackson.util.CharTypes: int[] getOutputEscapes()>();

        i0 = lengthof $r0;

     label01:
        if i20 >= i22 goto label13;

        i1 = i20;

     label02:
        $c2 = r1[i20];

        $i26 = (int) $c2;

        if $i26 >= i0 goto label03;

        $i27 = (int) $c2;

        $i18 = $r0[$i27];

        if $i18 == 0 goto label03;

        goto label05;

     label03:
        i20 = i20 + 1;

        if i20 < i22 goto label04;

        goto label05;

     label04:
        goto label02;

     label05:
        $i19 = i20 - i1;

        if $i19 >= 32 goto label07;

        $i12 = r2.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i14 = $i12 + $i19;

        $i13 = r2.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i14 <= $i13 goto label06;

        virtualinvoke r2.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label06:
        if $i19 <= 0 goto label08;

        $r5 = r2.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i15 = r2.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i1, $r5, $i15, $i19);

        $i16 = r2.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i17 = $i16 + $i19;

        r2.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i17;

        goto label08;

     label07:
        virtualinvoke r2.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $r3 = r2.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        virtualinvoke $r3.<java.io.Writer: void write(char[],int,int)>(r1, i1, $i19);

     label08:
        if i20 < i22 goto label09;

        goto label13;

     label09:
        $c3 = r1[i20];

        $i28 = (int) $c3;

        i4 = $r0[$i28];

        i20 = i20 + 1;

        if i4 >= 0 goto label10;

        $b25 = 6;

        $b24 = 6;

        goto label11;

     label10:
        $b25 = 2;

        $b24 = 2;

     label11:
        b5 = $b24;

        $i6 = r2.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i8 = $i6 + $b25;

        $i7 = r2.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i8 <= $i7 goto label12;

        virtualinvoke r2.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label12:
        $r4 = r2.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i9 = r2.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        specialinvoke r2.<org.codehaus.jackson.impl.WriterBasedGenerator: void _appendSingleEscape(int,char[],int)>(i4, $r4, $i9);

        $i10 = r2.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i11 = $i10 + b5;

        r2.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i11;

        goto label01;

     label13:
        return;
    }

    protected void _writeBinary(org.codehaus.jackson.Base64Variant, byte[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        byte[] r2;
        byte $b6, $b9, $b14, $b15, $b17;
        org.codehaus.jackson.Base64Variant r1;
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        short $s10, $s16, $s18, $s38, $s40, $s45;
        int i0, i1, $i2, i3, $i4, $i5, $i7, $i8, $i11, $i12, $i13, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31, i32, i33, i34, i35, i36, $i37, $i39, $i41, $i43, $i44, $i46;
        char[] $r3, $r4, $r5, $r6;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r1 := @parameter0: org.codehaus.jackson.Base64Variant;

        r2 := @parameter1: byte[];

        i30 := @parameter2: int;

        i0 := @parameter3: int;

        i1 = i0 - 3;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        i3 = $i2 - 6;

        $i4 = virtualinvoke r1.<org.codehaus.jackson.Base64Variant: int getMaxLineLength()>();

        i31 = $i4 >> 2;

     label1:
        if i30 > i1 goto label4;

        $i13 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        if $i13 <= i3 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        i32 = i30 + 1;

        $b14 = r2[i30];

        $i37 = (int) $b14;

        $i27 = $i37 << 8;

        i33 = i32 + 1;

        $b15 = r2[i32];

        $s38 = (short) $b15;

        $s16 = $s38 & 255;

        $i39 = (int) $s16;

        $i28 = $i27 | $i39;

        $i19 = $i28 << 8;

        i30 = i33 + 1;

        $b17 = r2[i33];

        $s40 = (short) $b17;

        $s18 = $s40 & 255;

        $i41 = (int) $s18;

        $i29 = $i19 | $i41;

        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i20 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i21 = virtualinvoke r1.<org.codehaus.jackson.Base64Variant: int encodeBase64Chunk(int,char[],int)>($i29, $r4, $i20);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i21;

        $i43 = (int) -1;

        i31 = i31 + $i43;

        if i31 > 0 goto label3;

        $r5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i22 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i23 = $i22 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i23;

        $r5[$i22] = 92;

        $r6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i24 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i25 = $i24 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i25;

        $r6[$i24] = 110;

        $i26 = virtualinvoke r1.<org.codehaus.jackson.Base64Variant: int getMaxLineLength()>();

        i31 = $i26 >> 2;

     label3:
        goto label1;

     label4:
        i34 = i0 - i30;

        if i34 <= 0 goto label7;

        $i5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        if $i5 <= i3 goto label5;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label5:
        i35 = i30 + 1;

        $b6 = r2[i30];

        $i44 = (int) $b6;

        $i12 = $i44 << 16;

        i36 = $i12;

        if i34 != 2 goto label6;

        $b9 = r2[i35];

        $s45 = (short) $b9;

        $s10 = $s45 & 255;

        $i46 = (int) $s10;

        $i11 = $i46 << 8;

        i36 = $i12 | $i11;

     label6:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i7 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i8 = virtualinvoke r1.<org.codehaus.jackson.Base64Variant: int encodeBase64Partial(int,int,char[],int)>(i36, i34, $r3, $i7);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i8;

     label7:
        return;
    }

    private final void _writeNull() throws java.io.IOException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        char[] $r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i2 = $i0 + 4;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i2 < $i1 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $r1[$i4] = 110;

        i5 = $i4 + 1;

        $r1[i5] = 117;

        i6 = i5 + 1;

        $r1[i6] = 108;

        i7 = i6 + 1;

        $r1[i7] = 108;

        $i3 = i7 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i3;

        return;
    }

    private void _writeSingleEscape(int) throws java.io.IOException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        char $c1, $c5, $c7;
        int i0, $i2, i3, $i4, $i6;
        java.io.Writer $r1, $r4;
        char[] $r2, $r3, r5;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        i0 := @parameter0: int;

        r5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _entityBuffer>;

        if r5 != null goto label1;

        r5 = newarray (char)[6];

        r5[0] = 92;

        r5[2] = 48;

        r5[3] = 48;

     label1:
        if i0 >= 0 goto label2;

        $i2 = i0 + 1;

        i3 = neg $i2;

        r5[1] = 117;

        $r2 = <org.codehaus.jackson.impl.WriterBasedGenerator: char[] HEX_CHARS>;

        $i4 = i3 >> 4;

        $c5 = $r2[$i4];

        r5[4] = $c5;

        $r3 = <org.codehaus.jackson.impl.WriterBasedGenerator: char[] HEX_CHARS>;

        $i6 = i3 & 15;

        $c7 = $r3[$i6];

        r5[5] = $c7;

        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>(r5, 0, 6);

        goto label3;

     label2:
        $c1 = (char) i0;

        r5[1] = $c1;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        virtualinvoke $r1.<java.io.Writer: void write(char[],int,int)>(r5, 0, 2);

     label3:
        return;
    }

    private void _appendSingleEscape(int, char[], int)
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r3;
        int i0, $i2, $i3, i4, $i5, $i7, i9, i10, i11, i12, i13, i14;
        char $c1, $c6, $c8;
        char[] r0, $r1, $r2;

        r3 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        i0 := @parameter0: int;

        r0 := @parameter1: char[];

        i9 := @parameter2: int;

        if i0 >= 0 goto label1;

        $i3 = i0 + 1;

        i4 = neg $i3;

        r0[i9] = 92;

        i10 = i9 + 1;

        r0[i10] = 117;

        i11 = i10 + 1;

        r0[i11] = 48;

        i12 = i11 + 1;

        r0[i12] = 48;

        i13 = i12 + 1;

        $r1 = <org.codehaus.jackson.impl.WriterBasedGenerator: char[] HEX_CHARS>;

        $i5 = i4 >> 4;

        $c6 = $r1[$i5];

        r0[i13] = $c6;

        i14 = i13 + 1;

        $r2 = <org.codehaus.jackson.impl.WriterBasedGenerator: char[] HEX_CHARS>;

        $i7 = i4 & 15;

        $c8 = $r2[$i7];

        r0[i14] = $c8;

        goto label2;

     label1:
        r0[i9] = 92;

        $i2 = i9 + 1;

        $c1 = (char) i0;

        r0[$i2] = $c1;

     label2:
        return;
    }

    protected final void _flushBuffer() throws java.io.IOException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, i2, i3;
        java.io.Writer $r2;
        char[] $r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead>;

        i2 = $i1 - $i0;

        if i2 <= 0 goto label1;

        i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead>;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead> = 0;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = 0;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        virtualinvoke $r2.<java.io.Writer: void write(char[],int,int)>($r1, i3, i2);

     label1:
        return;
    }

    static void <clinit>()
    {
        char[] $r1;
        java.lang.String $r0;

        <org.codehaus.jackson.impl.WriterBasedGenerator: int SHORT_WRITE> = 32;

        $r0 = "0123456789ABCDEF";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <org.codehaus.jackson.impl.WriterBasedGenerator: char[] HEX_CHARS> = $r1;

        return;
    }
}
