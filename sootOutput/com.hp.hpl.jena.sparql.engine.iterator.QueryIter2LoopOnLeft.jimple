public abstract class com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft extends com.hp.hpl.jena.sparql.engine.iterator.QueryIter2
{
    com.hp.hpl.jena.sparql.algebra.Table tableRight;
    com.hp.hpl.jena.sparql.engine.binding.Binding slot;

    public void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator, com.hp.hpl.jena.sparql.engine.QueryIterator, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.engine.ExecutionContext r3;
        com.hp.hpl.jena.sparql.algebra.Table $r5;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft r0;
        com.hp.hpl.jena.sparql.engine.QueryIterator r1, r2, $r4, $r6;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r2 := @parameter1: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r3 := @parameter2: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2: void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r1, r2, r3);

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: com.hp.hpl.jena.sparql.engine.binding.Binding slot> = null;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: com.hp.hpl.jena.sparql.engine.QueryIterator getRight()>();

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.algebra.TableFactory: com.hp.hpl.jena.sparql.algebra.Table create(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: com.hp.hpl.jena.sparql.algebra.Table tableRight> = $r5;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: com.hp.hpl.jena.sparql.engine.QueryIterator getRight()>();

        interfaceinvoke $r6.<com.hp.hpl.jena.sparql.engine.QueryIterator: void close()>();

        return;
    }

    protected final void closeSubIterator()
    {
        com.hp.hpl.jena.sparql.algebra.Table $r1;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: com.hp.hpl.jena.sparql.algebra.Table tableRight>;

        interfaceinvoke $r1.<com.hp.hpl.jena.sparql.algebra.Table: void close()>();

        return;
    }

    protected void requestSubCancel()
    {
        com.hp.hpl.jena.sparql.algebra.Table $r1;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: com.hp.hpl.jena.sparql.algebra.Table tableRight>;

        interfaceinvoke $r1.<com.hp.hpl.jena.sparql.algebra.Table: void close()>();

        return;
    }

    protected final boolean hasNextBinding()
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1, $r5, $r6, $r7;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: com.hp.hpl.jena.sparql.engine.binding.Binding slot>;

        if $r1 == null goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: com.hp.hpl.jena.sparql.engine.QueryIterator getLeft()>();

        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.engine.QueryIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: com.hp.hpl.jena.sparql.engine.QueryIterator getLeft()>();

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.sparql.engine.QueryIterator: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: com.hp.hpl.jena.sparql.engine.binding.Binding getNextSlot(com.hp.hpl.jena.sparql.engine.binding.Binding)>($r5);

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: com.hp.hpl.jena.sparql.engine.binding.Binding slot> = $r6;

        $r7 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: com.hp.hpl.jena.sparql.engine.binding.Binding slot>;

        if $r7 == null goto label2;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: com.hp.hpl.jena.sparql.engine.binding.Binding slot> = $r5;

        return 1;

     label2:
        goto label1;

     label3:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: com.hp.hpl.jena.sparql.engine.QueryIterator getLeft()>();

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.engine.QueryIterator: void close()>();

        return 0;
    }

    protected abstract com.hp.hpl.jena.sparql.engine.binding.Binding getNextSlot(com.hp.hpl.jena.sparql.engine.binding.Binding);

    protected final com.hp.hpl.jena.sparql.engine.binding.Binding moveToNextBinding()
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r1;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: boolean hasNextBinding()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        r1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: com.hp.hpl.jena.sparql.engine.binding.Binding slot>;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2LoopOnLeft: com.hp.hpl.jena.sparql.engine.binding.Binding slot> = null;

        return r1;
    }
}
