public class org.apache.xml.utils.StringToIntTable extends java.lang.Object
{
    public static final int INVALID_KEY;
    private int m_blocksize;
    private java.lang.String[] m_map;
    private int[] m_values;
    private int m_firstFree;
    private int m_mapSize;

    public void <init>()
    {
        org.apache.xml.utils.StringToIntTable r0;
        int[] $r2;
        int $i0, $i1, $i2;
        java.lang.String[] $r1;

        r0 := @this: org.apache.xml.utils.StringToIntTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.StringToIntTable: int m_firstFree> = 0;

        r0.<org.apache.xml.utils.StringToIntTable: int m_blocksize> = 8;

        $i0 = r0.<org.apache.xml.utils.StringToIntTable: int m_blocksize>;

        r0.<org.apache.xml.utils.StringToIntTable: int m_mapSize> = $i0;

        $i1 = r0.<org.apache.xml.utils.StringToIntTable: int m_blocksize>;

        $r1 = newarray (java.lang.String)[$i1];

        r0.<org.apache.xml.utils.StringToIntTable: java.lang.String[] m_map> = $r1;

        $i2 = r0.<org.apache.xml.utils.StringToIntTable: int m_blocksize>;

        $r2 = newarray (int)[$i2];

        r0.<org.apache.xml.utils.StringToIntTable: int[] m_values> = $r2;

        return;
    }

    public void <init>(int)
    {
        org.apache.xml.utils.StringToIntTable r0;
        int[] $r2;
        int i0, $i1;
        java.lang.String[] $r1;

        r0 := @this: org.apache.xml.utils.StringToIntTable;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.StringToIntTable: int m_firstFree> = 0;

        r0.<org.apache.xml.utils.StringToIntTable: int m_blocksize> = i0;

        r0.<org.apache.xml.utils.StringToIntTable: int m_mapSize> = i0;

        $r1 = newarray (java.lang.String)[i0];

        r0.<org.apache.xml.utils.StringToIntTable: java.lang.String[] m_map> = $r1;

        $i1 = r0.<org.apache.xml.utils.StringToIntTable: int m_blocksize>;

        $r2 = newarray (int)[$i1];

        r0.<org.apache.xml.utils.StringToIntTable: int[] m_values> = $r2;

        return;
    }

    public final int getLength()
    {
        int $i0;
        org.apache.xml.utils.StringToIntTable r0;

        r0 := @this: org.apache.xml.utils.StringToIntTable;

        $i0 = r0.<org.apache.xml.utils.StringToIntTable: int m_firstFree>;

        return $i0;
    }

    public final void put(java.lang.String, int)
    {
        java.lang.String[] $r2, r4, $r5;
        org.apache.xml.utils.StringToIntTable r0;
        int[] $r3, r6, $r7;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.StringToIntTable;

        r1 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        $i0 = r0.<org.apache.xml.utils.StringToIntTable: int m_firstFree>;

        $i2 = $i0 + 1;

        $i1 = r0.<org.apache.xml.utils.StringToIntTable: int m_mapSize>;

        if $i2 < $i1 goto label1;

        $i9 = r0.<org.apache.xml.utils.StringToIntTable: int m_mapSize>;

        $i8 = r0.<org.apache.xml.utils.StringToIntTable: int m_blocksize>;

        $i10 = $i9 + $i8;

        r0.<org.apache.xml.utils.StringToIntTable: int m_mapSize> = $i10;

        $i11 = r0.<org.apache.xml.utils.StringToIntTable: int m_mapSize>;

        r4 = newarray (java.lang.String)[$i11];

        $r5 = r0.<org.apache.xml.utils.StringToIntTable: java.lang.String[] m_map>;

        $i12 = r0.<org.apache.xml.utils.StringToIntTable: int m_firstFree>;

        $i13 = $i12 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r4, 0, $i13);

        r0.<org.apache.xml.utils.StringToIntTable: java.lang.String[] m_map> = r4;

        $i14 = r0.<org.apache.xml.utils.StringToIntTable: int m_mapSize>;

        r6 = newarray (int)[$i14];

        $r7 = r0.<org.apache.xml.utils.StringToIntTable: int[] m_values>;

        $i15 = r0.<org.apache.xml.utils.StringToIntTable: int m_firstFree>;

        $i16 = $i15 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r6, 0, $i16);

        r0.<org.apache.xml.utils.StringToIntTable: int[] m_values> = r6;

     label1:
        $r2 = r0.<org.apache.xml.utils.StringToIntTable: java.lang.String[] m_map>;

        $i3 = r0.<org.apache.xml.utils.StringToIntTable: int m_firstFree>;

        $r2[$i3] = r1;

        $r3 = r0.<org.apache.xml.utils.StringToIntTable: int[] m_values>;

        $i5 = r0.<org.apache.xml.utils.StringToIntTable: int m_firstFree>;

        $r3[$i5] = i4;

        $i6 = r0.<org.apache.xml.utils.StringToIntTable: int m_firstFree>;

        $i7 = $i6 + 1;

        r0.<org.apache.xml.utils.StringToIntTable: int m_firstFree> = $i7;

        return;
    }

    public final int get(java.lang.String)
    {
        java.lang.String[] $r1;
        org.apache.xml.utils.StringToIntTable r0;
        int[] $r4;
        int $i0, $i1, i2, $i4;
        java.lang.String r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.StringToIntTable;

        r2 := @parameter0: java.lang.String;

        i2 = 0;

        goto label3;

     label1:
        $r1 = r0.<org.apache.xml.utils.StringToIntTable: java.lang.String[] m_map>;

        $r3 = $r1[i2];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $r4 = r0.<org.apache.xml.utils.StringToIntTable: int[] m_values>;

        $i1 = $r4[i2];

        return $i1;

     label2:
        i2 = i2 + 1;

     label3:
        $i0 = r0.<org.apache.xml.utils.StringToIntTable: int m_firstFree>;

        if i2 < $i0 goto label1;

        $i4 = (int) -10000;

        return $i4;
    }

    public final int getIgnoreCase(java.lang.String)
    {
        java.lang.String[] $r2;
        org.apache.xml.utils.StringToIntTable r1;
        int[] $r4;
        int $i0, $i1, i2, $i4, $i6;
        java.lang.String r0, $r3;
        boolean $z0;

        r1 := @this: org.apache.xml.utils.StringToIntTable;

        r0 := @parameter0: java.lang.String;

        if null != r0 goto label1;

        $i4 = (int) -10000;

        return $i4;

     label1:
        i2 = 0;

        goto label4;

     label2:
        $r2 = r1.<org.apache.xml.utils.StringToIntTable: java.lang.String[] m_map>;

        $r3 = $r2[i2];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label3;

        $r4 = r1.<org.apache.xml.utils.StringToIntTable: int[] m_values>;

        $i1 = $r4[i2];

        return $i1;

     label3:
        i2 = i2 + 1;

     label4:
        $i0 = r1.<org.apache.xml.utils.StringToIntTable: int m_firstFree>;

        if i2 < $i0 goto label2;

        $i6 = (int) -10000;

        return $i6;
    }

    public final boolean contains(java.lang.String)
    {
        org.apache.xml.utils.StringToIntTable r0;
        int $i0, i1;
        java.lang.String[] $r1;
        java.lang.String r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.StringToIntTable;

        r2 := @parameter0: java.lang.String;

        i1 = 0;

        goto label3;

     label1:
        $r1 = r0.<org.apache.xml.utils.StringToIntTable: java.lang.String[] m_map>;

        $r3 = $r1[i1];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

     label3:
        $i0 = r0.<org.apache.xml.utils.StringToIntTable: int m_firstFree>;

        if i1 < $i0 goto label1;

        return 0;
    }

    public final java.lang.String[] keys()
    {
        org.apache.xml.utils.StringToIntTable r0;
        int $i0, $i1, i2;
        java.lang.String[] r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xml.utils.StringToIntTable;

        $i0 = r0.<org.apache.xml.utils.StringToIntTable: int m_firstFree>;

        r1 = newarray (java.lang.String)[$i0];

        i2 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.utils.StringToIntTable: java.lang.String[] m_map>;

        $r3 = $r2[i2];

        r1[i2] = $r3;

        i2 = i2 + 1;

     label2:
        $i1 = r0.<org.apache.xml.utils.StringToIntTable: int m_firstFree>;

        if i2 < $i1 goto label1;

        return r1;
    }

    public static void <clinit>()
    {
        <org.apache.xml.utils.StringToIntTable: int INVALID_KEY> = -10000;

        return;
    }
}
