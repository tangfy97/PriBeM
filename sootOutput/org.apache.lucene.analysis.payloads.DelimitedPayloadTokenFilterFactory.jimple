public class org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory extends org.apache.lucene.analysis.util.TokenFilterFactory implements org.apache.lucene.analysis.util.ResourceLoaderAware
{
    public static final java.lang.String ENCODER_ATTR;
    public static final java.lang.String DELIMITER_ATTR;
    private final java.lang.String encoderClass;
    private final char delimiter;
    private org.apache.lucene.analysis.payloads.PayloadEncoder encoder;

    public void <init>(java.util.Map)
    {
        char $c0;
        java.lang.IllegalArgumentException $r3;
        org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory r0;
        java.util.Map r1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r2, $r7;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.lucene.analysis.util.TokenFilterFactory: void <init>(java.util.Map)>(r1);

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: java.lang.String require(java.util.Map,java.lang.String)>(r1, "encoder");

        r0.<org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: java.lang.String encoderClass> = $r2;

        $c0 = virtualinvoke r0.<org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: char getChar(java.util.Map,java.lang.String,char)>(r1, "delimiter", 124);

        r0.<org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: char delimiter> = $c0;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown parameters: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        return;
    }

    public org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilter create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.payloads.PayloadEncoder $r3;
        org.apache.lucene.analysis.TokenStream r1;
        org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilter $r0;
        char $c0;
        org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory r2;

        r2 := @this: org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r0 = new org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilter;

        $c0 = r2.<org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: char delimiter>;

        $r3 = r2.<org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: org.apache.lucene.analysis.payloads.PayloadEncoder encoder>;

        specialinvoke $r0.<org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilter: void <init>(org.apache.lucene.analysis.TokenStream,char,org.apache.lucene.analysis.payloads.PayloadEncoder)>(r1, $c0, $r3);

        return $r0;
    }

    public void inform(org.apache.lucene.analysis.util.ResourceLoader)
    {
        org.apache.lucene.analysis.payloads.FloatEncoder $r10;
        org.apache.lucene.analysis.payloads.IdentityEncoder $r8;
        org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory r0;
        org.apache.lucene.analysis.payloads.PayloadEncoder $r7;
        org.apache.lucene.analysis.payloads.IntegerEncoder $r9;
        org.apache.lucene.analysis.util.ResourceLoader r4;
        java.lang.Object $r6;
        java.lang.String $r1, $r2, $r3, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory;

        r4 := @parameter0: org.apache.lucene.analysis.util.ResourceLoader;

        $r1 = r0.<org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: java.lang.String encoderClass>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z0 == 0 goto label1;

        $r10 = new org.apache.lucene.analysis.payloads.FloatEncoder;

        specialinvoke $r10.<org.apache.lucene.analysis.payloads.FloatEncoder: void <init>()>();

        r0.<org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: org.apache.lucene.analysis.payloads.PayloadEncoder encoder> = $r10;

        goto label4;

     label1:
        $r2 = r0.<org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: java.lang.String encoderClass>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("integer");

        if $z1 == 0 goto label2;

        $r9 = new org.apache.lucene.analysis.payloads.IntegerEncoder;

        specialinvoke $r9.<org.apache.lucene.analysis.payloads.IntegerEncoder: void <init>()>();

        r0.<org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: org.apache.lucene.analysis.payloads.PayloadEncoder encoder> = $r9;

        goto label4;

     label2:
        $r3 = r0.<org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: java.lang.String encoderClass>;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("identity");

        if $z2 == 0 goto label3;

        $r8 = new org.apache.lucene.analysis.payloads.IdentityEncoder;

        specialinvoke $r8.<org.apache.lucene.analysis.payloads.IdentityEncoder: void <init>()>();

        r0.<org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: org.apache.lucene.analysis.payloads.PayloadEncoder encoder> = $r8;

        goto label4;

     label3:
        $r5 = r0.<org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: java.lang.String encoderClass>;

        $r6 = interfaceinvoke r4.<org.apache.lucene.analysis.util.ResourceLoader: java.lang.Object newInstance(java.lang.String,java.lang.Class)>($r5, class "Lorg/apache/lucene/analysis/payloads/PayloadEncoder;");

        $r7 = (org.apache.lucene.analysis.payloads.PayloadEncoder) $r6;

        r0.<org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: org.apache.lucene.analysis.payloads.PayloadEncoder encoder> = $r7;

     label4:
        return;
    }

    public volatile org.apache.lucene.analysis.TokenStream create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilter $r2;
        org.apache.lucene.analysis.TokenStream r1;
        org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory r0;

        r0 := @this: org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilter create(org.apache.lucene.analysis.TokenStream)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: java.lang.String DELIMITER_ATTR> = "delimiter";

        <org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilterFactory: java.lang.String ENCODER_ATTR> = "encoder";

        return;
    }
}
