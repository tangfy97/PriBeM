class com.sun.jwt.resources.editor.editors.CreateBitmapFont$4 extends javax.swing.text.DocumentFilter
{
    final javax.swing.text.AbstractDocument val$document;
    final com.sun.jwt.resources.editor.editors.CreateBitmapFont this$0;

    void <init>(com.sun.jwt.resources.editor.editors.CreateBitmapFont, javax.swing.text.AbstractDocument)
    {
        com.sun.jwt.resources.editor.editors.CreateBitmapFont$4 r0;
        com.sun.jwt.resources.editor.editors.CreateBitmapFont r1;
        javax.swing.text.AbstractDocument r2;

        r0 := @this: com.sun.jwt.resources.editor.editors.CreateBitmapFont$4;

        r1 := @parameter0: com.sun.jwt.resources.editor.editors.CreateBitmapFont;

        r2 := @parameter1: javax.swing.text.AbstractDocument;

        r0.<com.sun.jwt.resources.editor.editors.CreateBitmapFont$4: com.sun.jwt.resources.editor.editors.CreateBitmapFont this$0> = r1;

        r0.<com.sun.jwt.resources.editor.editors.CreateBitmapFont$4: javax.swing.text.AbstractDocument val$document> = r2;

        specialinvoke r0.<javax.swing.text.DocumentFilter: void <init>()>();

        return;
    }

    public void insertString(javax.swing.text.DocumentFilter$FilterBypass, int, java.lang.String, javax.swing.text.AttributeSet) throws javax.swing.text.BadLocationException
    {
        javax.swing.text.AbstractDocument $r1, $r2;
        javax.swing.text.DocumentFilter$FilterBypass r4;
        com.sun.jwt.resources.editor.editors.CreateBitmapFont$4 r0;
        int $i0, $i1, i2, $i3, $i5, $i7, i8, $i9, $i10;
        java.lang.String $r3, $r6, $r7, $r9, $r11, $r12, r14;
        javax.swing.text.AttributeSet r5;
        char $c4, $c6;
        java.lang.StringBuilder $r10, $r13, $r15;

        r0 := @this: com.sun.jwt.resources.editor.editors.CreateBitmapFont$4;

        r4 := @parameter0: javax.swing.text.DocumentFilter$FilterBypass;

        i2 := @parameter1: int;

        r14 := @parameter2: java.lang.String;

        r5 := @parameter3: javax.swing.text.AttributeSet;

        $r2 = r0.<com.sun.jwt.resources.editor.editors.CreateBitmapFont$4: javax.swing.text.AbstractDocument val$document>;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.CreateBitmapFont$4: javax.swing.text.AbstractDocument val$document>;

        $i0 = virtualinvoke $r1.<javax.swing.text.AbstractDocument: int getLength()>();

        $r3 = virtualinvoke $r2.<javax.swing.text.AbstractDocument: java.lang.String getText(int,int)>(0, $i0);

        i8 = 0;

     label1:
        $i1 = virtualinvoke r14.<java.lang.String: int length()>();

        if i8 >= $i1 goto label5;

        $i3 = i8 + 1;

        $r6 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int,int)>(i8, $i3);

        $c4 = virtualinvoke r14.<java.lang.String: char charAt(int)>(i8);

        $i9 = (int) $c4;

        $i5 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>($i9);

        if $i5 < 0 goto label2;

        r14 = virtualinvoke r14.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r6, "");

        goto label4;

     label2:
        $r7 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int,int)>(0, i8);

        $c6 = virtualinvoke r14.<java.lang.String: char charAt(int)>(i8);

        $i10 = (int) $c6;

        $i7 = virtualinvoke $r7.<java.lang.String: int indexOf(int)>($i10);

        if $i7 < 0 goto label3;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int,int)>(0, i8);

        $r10 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int)>(i8);

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r6, "");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        i8 = i8 + 1;

     label4:
        goto label1;

     label5:
        specialinvoke r0.<javax.swing.text.DocumentFilter: void insertString(javax.swing.text.DocumentFilter$FilterBypass,int,java.lang.String,javax.swing.text.AttributeSet)>(r4, i2, r14, r5);

        return;
    }

    public void replace(javax.swing.text.DocumentFilter$FilterBypass, int, int, java.lang.String, javax.swing.text.AttributeSet) throws javax.swing.text.BadLocationException
    {
        javax.swing.text.AbstractDocument $r1, $r2;
        javax.swing.text.DocumentFilter$FilterBypass r10;
        javax.swing.text.AttributeSet r11;
        java.lang.StringBuilder $r6, $r8, $r16, $r19, $r21, $r22;
        com.sun.jwt.resources.editor.editors.CreateBitmapFont$4 r0;
        int $i0, i1, i2, $i3, $i4, $i5, $i7, $i9, i10, $i11, $i12;
        java.lang.String $r3, $r5, $r7, $r9, $r12, $r13, $r15, $r17, $r18, r20;
        char $c6, $c8;

        r0 := @this: com.sun.jwt.resources.editor.editors.CreateBitmapFont$4;

        r10 := @parameter0: javax.swing.text.DocumentFilter$FilterBypass;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r20 := @parameter3: java.lang.String;

        r11 := @parameter4: javax.swing.text.AttributeSet;

        $r2 = r0.<com.sun.jwt.resources.editor.editors.CreateBitmapFont$4: javax.swing.text.AbstractDocument val$document>;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.CreateBitmapFont$4: javax.swing.text.AbstractDocument val$document>;

        $i0 = virtualinvoke $r1.<javax.swing.text.AbstractDocument: int getLength()>();

        $r3 = virtualinvoke $r2.<javax.swing.text.AbstractDocument: java.lang.String getText(int,int)>(0, $i0);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        $r6 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i3 = i1 + i2;

        $r7 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i3);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        i10 = 0;

     label1:
        $i4 = virtualinvoke r20.<java.lang.String: int length()>();

        if i10 >= $i4 goto label5;

        $i5 = i10 + 1;

        $r12 = virtualinvoke r20.<java.lang.String: java.lang.String substring(int,int)>(i10, $i5);

        $c6 = virtualinvoke r20.<java.lang.String: char charAt(int)>(i10);

        $i11 = (int) $c6;

        $i7 = virtualinvoke $r9.<java.lang.String: int indexOf(int)>($i11);

        if $i7 < 0 goto label2;

        r20 = virtualinvoke r20.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r12, "");

        goto label4;

     label2:
        $r13 = virtualinvoke r20.<java.lang.String: java.lang.String substring(int,int)>(0, i10);

        $c8 = virtualinvoke r20.<java.lang.String: char charAt(int)>(i10);

        $i12 = (int) $c8;

        $i9 = virtualinvoke $r13.<java.lang.String: int indexOf(int)>($i12);

        if $i9 < 0 goto label3;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r20.<java.lang.String: java.lang.String substring(int,int)>(0, i10);

        $r16 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke r20.<java.lang.String: java.lang.String substring(int)>(i10);

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r12, "");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        i10 = i10 + 1;

     label4:
        goto label1;

     label5:
        specialinvoke r0.<javax.swing.text.DocumentFilter: void replace(javax.swing.text.DocumentFilter$FilterBypass,int,int,java.lang.String,javax.swing.text.AttributeSet)>(r10, i1, i2, r20, r11);

        return;
    }
}
