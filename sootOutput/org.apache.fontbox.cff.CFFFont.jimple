public class org.apache.fontbox.cff.CFFFont extends java.lang.Object
{
    private java.lang.String fontname;
    private java.util.Map topDict;
    private java.util.Map privateDict;
    private org.apache.fontbox.cff.encoding.CFFEncoding fontEncoding;
    private org.apache.fontbox.cff.charset.CFFCharset fontCharset;
    private java.util.Map charStringsDict;
    private org.apache.fontbox.cff.IndexData globalSubrIndex;
    private org.apache.fontbox.cff.IndexData localSubrIndex;

    public void <init>()
    {
        java.util.LinkedHashMap $r1, $r2, $r3;
        org.apache.fontbox.cff.CFFFont r0;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.fontbox.cff.CFFFont: java.lang.String fontname> = null;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.fontbox.cff.CFFFont: java.util.Map topDict> = $r1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.fontbox.cff.CFFFont: java.util.Map privateDict> = $r2;

        r0.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.encoding.CFFEncoding fontEncoding> = null;

        r0.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.charset.CFFCharset fontCharset> = null;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.fontbox.cff.CFFFont: java.util.Map charStringsDict> = $r3;

        r0.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.IndexData globalSubrIndex> = null;

        r0.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.IndexData localSubrIndex> = null;

        return;
    }

    public java.lang.String getName()
    {
        org.apache.fontbox.cff.CFFFont r0;
        java.lang.String $r1;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        $r1 = r0.<org.apache.fontbox.cff.CFFFont: java.lang.String fontname>;

        return $r1;
    }

    public void setName(java.lang.String)
    {
        org.apache.fontbox.cff.CFFFont r0;
        java.lang.String r1;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.fontbox.cff.CFFFont: java.lang.String fontname> = r1;

        return;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        java.util.Map $r2, $r4;
        org.apache.fontbox.cff.CFFFont r0;
        java.lang.Object $r3, $r5;
        java.lang.String r1;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.fontbox.cff.CFFFont: java.util.Map topDict>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r4 = r0.<org.apache.fontbox.cff.CFFFont: java.util.Map privateDict>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if $r5 == null goto label2;

        return $r5;

     label2:
        return null;
    }

    public void addValueToTopDict(java.lang.String, java.lang.Object)
    {
        java.util.Map $r3;
        org.apache.fontbox.cff.CFFFont r1;
        java.lang.Object r0;
        java.lang.String r2;

        r1 := @this: org.apache.fontbox.cff.CFFFont;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        if r0 == null goto label1;

        $r3 = r1.<org.apache.fontbox.cff.CFFFont: java.util.Map topDict>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

     label1:
        return;
    }

    public java.util.Map getTopDict()
    {
        org.apache.fontbox.cff.CFFFont r0;
        java.util.Map $r1;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        $r1 = r0.<org.apache.fontbox.cff.CFFFont: java.util.Map topDict>;

        return $r1;
    }

    public void addValueToPrivateDict(java.lang.String, java.lang.Object)
    {
        java.util.Map $r3;
        org.apache.fontbox.cff.CFFFont r1;
        java.lang.Object r0;
        java.lang.String r2;

        r1 := @this: org.apache.fontbox.cff.CFFFont;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        if r0 == null goto label1;

        $r3 = r1.<org.apache.fontbox.cff.CFFFont: java.util.Map privateDict>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

     label1:
        return;
    }

    public java.util.Map getPrivateDict()
    {
        org.apache.fontbox.cff.CFFFont r0;
        java.util.Map $r1;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        $r1 = r0.<org.apache.fontbox.cff.CFFFont: java.util.Map privateDict>;

        return $r1;
    }

    public java.util.Collection getMappings()
    {
        byte[] r31, r34, r36;
        org.apache.fontbox.cff.CFFFont$Mapping $r14, $r23, $r29;
        org.apache.fontbox.cff.CFFFont r2;
        org.apache.fontbox.cff.CFFParser$EmbeddedEncoding$Supplement r33;
        java.util.Map $r12, $r21, $r27;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r4, $r8, $r16;
        org.apache.fontbox.cff.charset.CFFCharset $r7, $r19, $r25;
        org.apache.fontbox.cff.charset.CFFCharset$Entry r35;
        java.util.ArrayList $r0;
        java.util.HashSet $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.String $r11, $r20, $r26;
        org.apache.fontbox.cff.encoding.CFFEncoding$Entry r30;
        java.util.Iterator $r5, $r9, $r17;
        org.apache.fontbox.cff.CFFParser$EmbeddedEncoding r32;
        org.apache.fontbox.cff.encoding.CFFEncoding $r3, $r6, $r15;
        java.lang.Object $r10, $r13, $r18, $r22, $r24, $r28;

        r2 := @this: org.apache.fontbox.cff.CFFFont;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r3 = r2.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.encoding.CFFEncoding fontEncoding>;

        $r4 = virtualinvoke $r3.<org.apache.fontbox.cff.encoding.CFFEncoding: java.util.List getEntries()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label04;

        $r24 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r30 = (org.apache.fontbox.cff.encoding.CFFEncoding$Entry) $r24;

        $r25 = r2.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.charset.CFFCharset fontCharset>;

        $i5 = virtualinvoke r30.<org.apache.fontbox.cff.encoding.CFFEncoding$Entry: int getSID()>();

        $r26 = virtualinvoke $r25.<org.apache.fontbox.cff.charset.CFFCharset: java.lang.String getName(int)>($i5);

        if $r26 != null goto label02;

        goto label01;

     label02:
        $r27 = r2.<org.apache.fontbox.cff.CFFFont: java.util.Map charStringsDict>;

        $r28 = interfaceinvoke $r27.<java.util.Map: java.lang.Object get(java.lang.Object)>($r26);

        r31 = (byte[]) $r28;

        if r31 != null goto label03;

        goto label01;

     label03:
        $r29 = new org.apache.fontbox.cff.CFFFont$Mapping;

        specialinvoke $r29.<org.apache.fontbox.cff.CFFFont$Mapping: void <init>(org.apache.fontbox.cff.CFFFont)>(r2);

        $i6 = virtualinvoke r30.<org.apache.fontbox.cff.encoding.CFFEncoding$Entry: int getCode()>();

        staticinvoke <org.apache.fontbox.cff.CFFFont$Mapping: void access$000(org.apache.fontbox.cff.CFFFont$Mapping,int)>($r29, $i6);

        $i7 = virtualinvoke r30.<org.apache.fontbox.cff.encoding.CFFEncoding$Entry: int getSID()>();

        staticinvoke <org.apache.fontbox.cff.CFFFont$Mapping: void access$100(org.apache.fontbox.cff.CFFFont$Mapping,int)>($r29, $i7);

        staticinvoke <org.apache.fontbox.cff.CFFFont$Mapping: void access$200(org.apache.fontbox.cff.CFFFont$Mapping,java.lang.String)>($r29, $r26);

        staticinvoke <org.apache.fontbox.cff.CFFFont$Mapping: void access$300(org.apache.fontbox.cff.CFFFont$Mapping,byte[])>($r29, r31);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r29);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r26);

        goto label01;

     label04:
        $r6 = r2.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.encoding.CFFEncoding fontEncoding>;

        $z0 = $r6 instanceof org.apache.fontbox.cff.CFFParser$EmbeddedEncoding;

        if $z0 == 0 goto label08;

        $r15 = r2.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.encoding.CFFEncoding fontEncoding>;

        r32 = (org.apache.fontbox.cff.CFFParser$EmbeddedEncoding) $r15;

        $r16 = virtualinvoke r32.<org.apache.fontbox.cff.CFFParser$EmbeddedEncoding: java.util.List getSupplements()>();

        $r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z3 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r33 = (org.apache.fontbox.cff.CFFParser$EmbeddedEncoding$Supplement) $r18;

        $r19 = r2.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.charset.CFFCharset fontCharset>;

        $i2 = virtualinvoke r33.<org.apache.fontbox.cff.CFFParser$EmbeddedEncoding$Supplement: int getGlyph()>();

        $r20 = virtualinvoke $r19.<org.apache.fontbox.cff.charset.CFFCharset: java.lang.String getName(int)>($i2);

        if $r20 != null goto label06;

        goto label05;

     label06:
        $r21 = r2.<org.apache.fontbox.cff.CFFFont: java.util.Map charStringsDict>;

        $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>($r20);

        r34 = (byte[]) $r22;

        if r34 != null goto label07;

        goto label05;

     label07:
        $r23 = new org.apache.fontbox.cff.CFFFont$Mapping;

        specialinvoke $r23.<org.apache.fontbox.cff.CFFFont$Mapping: void <init>(org.apache.fontbox.cff.CFFFont)>(r2);

        $i3 = virtualinvoke r33.<org.apache.fontbox.cff.CFFParser$EmbeddedEncoding$Supplement: int getCode()>();

        staticinvoke <org.apache.fontbox.cff.CFFFont$Mapping: void access$000(org.apache.fontbox.cff.CFFFont$Mapping,int)>($r23, $i3);

        $i4 = virtualinvoke r33.<org.apache.fontbox.cff.CFFParser$EmbeddedEncoding$Supplement: int getGlyph()>();

        staticinvoke <org.apache.fontbox.cff.CFFFont$Mapping: void access$100(org.apache.fontbox.cff.CFFFont$Mapping,int)>($r23, $i4);

        staticinvoke <org.apache.fontbox.cff.CFFFont$Mapping: void access$200(org.apache.fontbox.cff.CFFFont$Mapping,java.lang.String)>($r23, $r20);

        staticinvoke <org.apache.fontbox.cff.CFFFont$Mapping: void access$300(org.apache.fontbox.cff.CFFFont$Mapping,byte[])>($r23, r34);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r23);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r20);

        goto label05;

     label08:
        i8 = 256;

        $r7 = r2.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.charset.CFFCharset fontCharset>;

        $r8 = virtualinvoke $r7.<org.apache.fontbox.cff.charset.CFFCharset: java.util.List getEntries()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r35 = (org.apache.fontbox.cff.charset.CFFCharset$Entry) $r10;

        $r11 = virtualinvoke r35.<org.apache.fontbox.cff.charset.CFFCharset$Entry: java.lang.String getName()>();

        $z1 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r11);

        if $z1 == 0 goto label10;

        goto label09;

     label10:
        $r12 = r2.<org.apache.fontbox.cff.CFFFont: java.util.Map charStringsDict>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        r36 = (byte[]) $r13;

        if r36 != null goto label11;

        goto label09;

     label11:
        $r14 = new org.apache.fontbox.cff.CFFFont$Mapping;

        specialinvoke $r14.<org.apache.fontbox.cff.CFFFont$Mapping: void <init>(org.apache.fontbox.cff.CFFFont)>(r2);

        $i0 = i8;

        i8 = i8 + 1;

        staticinvoke <org.apache.fontbox.cff.CFFFont$Mapping: void access$000(org.apache.fontbox.cff.CFFFont$Mapping,int)>($r14, $i0);

        $i1 = virtualinvoke r35.<org.apache.fontbox.cff.charset.CFFCharset$Entry: int getSID()>();

        staticinvoke <org.apache.fontbox.cff.CFFFont$Mapping: void access$100(org.apache.fontbox.cff.CFFFont$Mapping,int)>($r14, $i1);

        staticinvoke <org.apache.fontbox.cff.CFFFont$Mapping: void access$200(org.apache.fontbox.cff.CFFFont$Mapping,java.lang.String)>($r14, $r11);

        staticinvoke <org.apache.fontbox.cff.CFFFont$Mapping: void access$300(org.apache.fontbox.cff.CFFFont$Mapping,byte[])>($r14, r36);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r14);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r11);

        goto label09;

     label12:
        return $r0;
    }

    public int getWidth(int) throws java.io.IOException
    {
        org.apache.fontbox.cff.CFFFont$Mapping r6;
        org.apache.fontbox.cff.CFFFont r0;
        java.util.Map $r1, $r2, $r13, $r16;
        org.apache.fontbox.cff.CharStringRenderer $r10, $r12, r19;
        boolean $z0, $z1, $z2;
        java.util.Collection $r3;
        java.util.List $r9, $r11;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Number $r8, $r15, $r18;
        java.util.Iterator $r4;
        java.lang.Object $r5, $r7, $r14, $r17;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        i4 := @parameter0: int;

        $r1 = r0.<org.apache.fontbox.cff.CFFFont: java.util.Map privateDict>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>("nominalWidthX");

        if $z0 == 0 goto label01;

        $r16 = r0.<org.apache.fontbox.cff.CFFFont: java.util.Map privateDict>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>("nominalWidthX");

        $r18 = (java.lang.Number) $r17;

        $i8 = virtualinvoke $r18.<java.lang.Number: int intValue()>();

        goto label02;

     label01:
        $i8 = 0;

     label02:
        i0 = $i8;

        $r2 = r0.<org.apache.fontbox.cff.CFFFont: java.util.Map privateDict>;

        $z1 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("defaultWidthX");

        if $z1 == 0 goto label03;

        $r13 = r0.<org.apache.fontbox.cff.CFFFont: java.util.Map privateDict>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>("defaultWidthX");

        $r15 = (java.lang.Number) $r14;

        $i9 = virtualinvoke $r15.<java.lang.Number: int intValue()>();

        goto label04;

     label03:
        $i9 = 1000;

     label04:
        i1 = $i9;

        $r3 = virtualinvoke r0.<org.apache.fontbox.cff.CFFFont: java.util.Collection getMappings()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.fontbox.cff.CFFFont$Mapping) $r5;

        $i3 = virtualinvoke r6.<org.apache.fontbox.cff.CFFFont$Mapping: int getSID()>();

        if $i3 != i4 goto label10;

        $r7 = virtualinvoke r0.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("CharstringType");

        $r8 = (java.lang.Number) $r7;

        $i5 = virtualinvoke $r8.<java.lang.Number: int intValue()>();

        if $i5 != 2 goto label06;

        $r11 = virtualinvoke r6.<org.apache.fontbox.cff.CFFFont$Mapping: java.util.List toType2Sequence()>();

        $r12 = new org.apache.fontbox.cff.CharStringRenderer;

        specialinvoke $r12.<org.apache.fontbox.cff.CharStringRenderer: void <init>(boolean)>(0);

        r19 = $r12;

        virtualinvoke $r12.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath render(java.util.List)>($r11);

        goto label07;

     label06:
        $r9 = virtualinvoke r6.<org.apache.fontbox.cff.CFFFont$Mapping: java.util.List toType1Sequence()>();

        $r10 = new org.apache.fontbox.cff.CharStringRenderer;

        specialinvoke $r10.<org.apache.fontbox.cff.CharStringRenderer: void <init>()>();

        r19 = $r10;

        virtualinvoke $r10.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath render(java.util.List)>($r9);

     label07:
        $i6 = virtualinvoke r19.<org.apache.fontbox.cff.CharStringRenderer: int getWidth()>();

        if $i6 == 0 goto label08;

        $i7 = virtualinvoke r19.<org.apache.fontbox.cff.CharStringRenderer: int getWidth()>();

        $i10 = $i7 + i0;

        goto label09;

     label08:
        $i10 = i1;

     label09:
        return $i10;

     label10:
        goto label05;

     label11:
        $i2 = virtualinvoke r0.<org.apache.fontbox.cff.CFFFont: int getNotDefWidth(int,int)>(i1, i0);

        return $i2;
    }

    protected int getNotDefWidth(int, int) throws java.io.IOException
    {
        byte[] r3;
        org.apache.fontbox.cff.IndexData $r7, $r11, $r12;
        org.apache.fontbox.cff.CFFFont r0;
        java.util.Map $r1;
        int $i0, $i1, i2, $i3, i4, $i5;
        java.lang.Number $r5;
        org.apache.fontbox.cff.CharStringRenderer $r9, $r14, r15;
        org.apache.fontbox.cff.Type2CharStringParser $r10;
        java.util.List $r8, $r13;
        java.lang.Object $r2, $r4;
        org.apache.fontbox.cff.Type1CharStringParser $r6;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        i2 := @parameter0: int;

        i4 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.fontbox.cff.CFFFont: java.util.Map getCharStringsDict()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(".notdef");

        r3 = (byte[]) $r2;

        $r4 = virtualinvoke r0.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("CharstringType");

        $r5 = (java.lang.Number) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        if $i0 != 2 goto label1;

        $r10 = new org.apache.fontbox.cff.Type2CharStringParser;

        specialinvoke $r10.<org.apache.fontbox.cff.Type2CharStringParser: void <init>()>();

        $r11 = virtualinvoke r0.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.IndexData getGlobalSubrIndex()>();

        $r12 = virtualinvoke r0.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.IndexData getLocalSubrIndex()>();

        $r13 = virtualinvoke $r10.<org.apache.fontbox.cff.Type2CharStringParser: java.util.List parse(byte[],org.apache.fontbox.cff.IndexData,org.apache.fontbox.cff.IndexData)>(r3, $r11, $r12);

        $r14 = new org.apache.fontbox.cff.CharStringRenderer;

        specialinvoke $r14.<org.apache.fontbox.cff.CharStringRenderer: void <init>(boolean)>(0);

        r15 = $r14;

        virtualinvoke $r14.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath render(java.util.List)>($r13);

        goto label2;

     label1:
        $r6 = new org.apache.fontbox.cff.Type1CharStringParser;

        specialinvoke $r6.<org.apache.fontbox.cff.Type1CharStringParser: void <init>()>();

        $r7 = virtualinvoke r0.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.IndexData getLocalSubrIndex()>();

        $r8 = virtualinvoke $r6.<org.apache.fontbox.cff.Type1CharStringParser: java.util.List parse(byte[],org.apache.fontbox.cff.IndexData)>(r3, $r7);

        $r9 = new org.apache.fontbox.cff.CharStringRenderer;

        specialinvoke $r9.<org.apache.fontbox.cff.CharStringRenderer: void <init>()>();

        r15 = $r9;

        virtualinvoke $r9.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath render(java.util.List)>($r8);

     label2:
        $i1 = virtualinvoke r15.<org.apache.fontbox.cff.CharStringRenderer: int getWidth()>();

        if $i1 == 0 goto label3;

        $i3 = virtualinvoke r15.<org.apache.fontbox.cff.CharStringRenderer: int getWidth()>();

        $i5 = $i3 + i4;

        goto label4;

     label3:
        $i5 = i2;

     label4:
        return $i5;
    }

    public org.apache.fontbox.cff.encoding.CFFEncoding getEncoding()
    {
        org.apache.fontbox.cff.CFFFont r0;
        org.apache.fontbox.cff.encoding.CFFEncoding $r1;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        $r1 = r0.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.encoding.CFFEncoding fontEncoding>;

        return $r1;
    }

    public void setEncoding(org.apache.fontbox.cff.encoding.CFFEncoding)
    {
        org.apache.fontbox.cff.CFFFont r0;
        org.apache.fontbox.cff.encoding.CFFEncoding r1;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        r1 := @parameter0: org.apache.fontbox.cff.encoding.CFFEncoding;

        r0.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.encoding.CFFEncoding fontEncoding> = r1;

        return;
    }

    public org.apache.fontbox.cff.charset.CFFCharset getCharset()
    {
        org.apache.fontbox.cff.CFFFont r0;
        org.apache.fontbox.cff.charset.CFFCharset $r1;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        $r1 = r0.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.charset.CFFCharset fontCharset>;

        return $r1;
    }

    public void setCharset(org.apache.fontbox.cff.charset.CFFCharset)
    {
        org.apache.fontbox.cff.CFFFont r0;
        org.apache.fontbox.cff.charset.CFFCharset r1;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        r1 := @parameter0: org.apache.fontbox.cff.charset.CFFCharset;

        r0.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.charset.CFFCharset fontCharset> = r1;

        return;
    }

    public java.util.Map getCharStringsDict()
    {
        org.apache.fontbox.cff.CFFFont r0;
        java.util.Map $r1;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        $r1 = r0.<org.apache.fontbox.cff.CFFFont: java.util.Map charStringsDict>;

        return $r1;
    }

    public org.apache.fontbox.cff.CharStringConverter createConverter()
    {
        org.apache.fontbox.cff.CharStringConverter $r5;
        org.apache.fontbox.cff.CFFFont r0;
        int $i0, $i1;
        java.lang.Object $r1, $r3;
        java.lang.Number r2, r4;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        $r1 = virtualinvoke r0.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("defaultWidthX");

        r2 = (java.lang.Number) $r1;

        $r3 = virtualinvoke r0.<org.apache.fontbox.cff.CFFFont: java.lang.Object getProperty(java.lang.String)>("nominalWidthX");

        r4 = (java.lang.Number) $r3;

        $r5 = new org.apache.fontbox.cff.CharStringConverter;

        $i0 = virtualinvoke r2.<java.lang.Number: int intValue()>();

        $i1 = virtualinvoke r4.<java.lang.Number: int intValue()>();

        specialinvoke $r5.<org.apache.fontbox.cff.CharStringConverter: void <init>(int,int)>($i0, $i1);

        return $r5;
    }

    public org.apache.fontbox.cff.CharStringRenderer createRenderer()
    {
        org.apache.fontbox.cff.CFFFont r1;
        org.apache.fontbox.cff.CharStringRenderer $r0;

        r1 := @this: org.apache.fontbox.cff.CFFFont;

        $r0 = new org.apache.fontbox.cff.CharStringRenderer;

        specialinvoke $r0.<org.apache.fontbox.cff.CharStringRenderer: void <init>()>();

        return $r0;
    }

    public java.lang.String toString()
    {
        org.apache.fontbox.cff.CFFFont r1;
        java.util.Map $r9, $r12, $r21;
        java.lang.String $r3, $r6, $r24;
        org.apache.fontbox.cff.charset.CFFCharset $r18;
        org.apache.fontbox.cff.encoding.CFFEncoding $r15;
        java.lang.StringBuilder $r0, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r20, $r22, $r23;
        java.lang.Class $r2;

        r1 := @this: org.apache.fontbox.cff.CFFFont;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[name=");

        $r6 = r1.<org.apache.fontbox.cff.CFFFont: java.lang.String fontname>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", topDict=");

        $r9 = r1.<org.apache.fontbox.cff.CFFFont: java.util.Map topDict>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", privateDict=");

        $r12 = r1.<org.apache.fontbox.cff.CFFFont: java.util.Map privateDict>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", encoding=");

        $r15 = r1.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.encoding.CFFEncoding fontEncoding>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", charset=");

        $r18 = r1.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.charset.CFFCharset fontCharset>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", charStringsDict=");

        $r21 = r1.<org.apache.fontbox.cff.CFFFont: java.util.Map charStringsDict>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r24;
    }

    public void setGlobalSubrIndex(org.apache.fontbox.cff.IndexData)
    {
        org.apache.fontbox.cff.CFFFont r0;
        org.apache.fontbox.cff.IndexData r1;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        r1 := @parameter0: org.apache.fontbox.cff.IndexData;

        r0.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.IndexData globalSubrIndex> = r1;

        return;
    }

    public org.apache.fontbox.cff.IndexData getGlobalSubrIndex()
    {
        org.apache.fontbox.cff.CFFFont r0;
        org.apache.fontbox.cff.IndexData $r1;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        $r1 = r0.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.IndexData globalSubrIndex>;

        return $r1;
    }

    public org.apache.fontbox.cff.IndexData getLocalSubrIndex()
    {
        org.apache.fontbox.cff.CFFFont r0;
        org.apache.fontbox.cff.IndexData $r1;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        $r1 = r0.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.IndexData localSubrIndex>;

        return $r1;
    }

    public void setLocalSubrIndex(org.apache.fontbox.cff.IndexData)
    {
        org.apache.fontbox.cff.CFFFont r0;
        org.apache.fontbox.cff.IndexData r1;

        r0 := @this: org.apache.fontbox.cff.CFFFont;

        r1 := @parameter0: org.apache.fontbox.cff.IndexData;

        r0.<org.apache.fontbox.cff.CFFFont: org.apache.fontbox.cff.IndexData localSubrIndex> = r1;

        return;
    }
}
