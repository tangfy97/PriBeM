public class org.eclipse.jdt.internal.compiler.ast.EmptyStatement extends org.eclipse.jdt.internal.compiler.ast.Statement
{

    public void <init>(int, int)
    {
        int i0, i1;
        org.eclipse.jdt.internal.compiler.ast.EmptyStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.EmptyStatement;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Statement: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.EmptyStatement: int sourceStart> = i0;

        r0.<org.eclipse.jdt.internal.compiler.ast.EmptyStatement: int sourceEnd> = i1;

        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.EmptyStatement r1;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r3;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.EmptyStatement;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r0 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        return r0;
    }

    public boolean complainIfUnreachable(org.eclipse.jdt.internal.compiler.flow.FlowInfo, org.eclipse.jdt.internal.compiler.lookup.BlockScope, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r0;
        org.eclipse.jdt.internal.compiler.ast.EmptyStatement r2;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r3;
        long $l0;
        byte $b1;
        int $i2;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        boolean z0, $z1;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.EmptyStatement;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l0 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long complianceLevel>;

        $b1 = $l0 cmp 3145728L;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label1;

        return 0;

     label1:
        $z1 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.ast.Statement: boolean complainIfUnreachable(org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>(r3, r0, z0);

        return $z1;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r2;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.ast.EmptyStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.EmptyStatement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        return;
    }

    public java.lang.StringBuffer printStatement(int, java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0, $r1, $r2;
        org.eclipse.jdt.internal.compiler.ast.EmptyStatement r3;
        int i0;

        r3 := @this: org.eclipse.jdt.internal.compiler.ast.EmptyStatement;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.EmptyStatement: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i0, r0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        return $r2;
    }

    public void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.EmptyStatement r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.EmptyStatement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.EmptyStatement: int bits>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label1;

        $r3 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.EmptyStatement: int sourceStart>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.ast.EmptyStatement: int sourceEnd>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void superfluousSemicolon(int,int)>($i5, $i4);

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.EmptyStatement: int sourceStart>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.EmptyStatement: int sourceEnd>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void emptyControlFlowStatement(int,int)>($i3, $i2);

     label2:
        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.EmptyStatement r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.EmptyStatement;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.EmptyStatement,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.EmptyStatement,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
