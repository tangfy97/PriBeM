public abstract class com.google.inject.internal.util.$ImmutableCollection extends java.lang.Object implements java.util.Collection, java.io.Serializable
{
    static final com.google.inject.internal.util.$ImmutableCollection EMPTY_IMMUTABLE_COLLECTION;
    private static final java.lang.Object[] EMPTY_ARRAY;
    private static final com.google.inject.internal.util.$UnmodifiableIterator EMPTY_ITERATOR;

    void <init>()
    {
        com.google.inject.internal.util.$ImmutableCollection r0;

        r0 := @this: com.google.inject.internal.util.$ImmutableCollection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract com.google.inject.internal.util.$UnmodifiableIterator iterator();

    public java.lang.Object[] toArray()
    {
        com.google.inject.internal.util.$ImmutableCollection r0;
        java.lang.Object[] r1, $r2;
        int $i0;

        r0 := @this: com.google.inject.internal.util.$ImmutableCollection;

        $i0 = virtualinvoke r0.<com.google.inject.internal.util.$ImmutableCollection: int size()>();

        r1 = newarray (java.lang.Object)[$i0];

        $r2 = virtualinvoke r0.<com.google.inject.internal.util.$ImmutableCollection: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        return $r2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Object[] r2;
        java.util.Iterator $r3;
        com.google.inject.internal.util.$ImmutableCollection r0;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.google.inject.internal.util.$ImmutableCollection;

        r2 := @parameter0: java.lang.Object[];

        $i0 = virtualinvoke r0.<com.google.inject.internal.util.$ImmutableCollection: int size()>();

        $i1 = lengthof r2;

        if $i1 >= $i0 goto label1;

        r2 = staticinvoke <com.google.inject.internal.util.$ObjectArrays: java.lang.Object[] newArray(java.lang.Object[],int)>(r2, $i0);

        goto label2;

     label1:
        $i2 = lengthof r2;

        if $i2 <= $i0 goto label2;

        r2[$i0] = null;

     label2:
        i4 = 0;

        $r3 = virtualinvoke r0.<com.google.inject.internal.util.$ImmutableCollection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r1 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $i3 = i4;

        i4 = i4 + 1;

        r2[$i3] = $r1;

        goto label3;

     label4:
        return r2;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.inject.internal.util.$ImmutableCollection r1;
        java.util.Iterator $r2;
        java.lang.Object r0, $r3;
        boolean $z0, $z1;

        r1 := @this: com.google.inject.internal.util.$ImmutableCollection;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<com.google.inject.internal.util.$ImmutableCollection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    public boolean containsAll(java.util.Collection)
    {
        com.google.inject.internal.util.$ImmutableCollection r3;
        java.util.Iterator $r1;
        java.util.Collection r0;
        java.lang.Object $r2;
        boolean $z0, $z1;

        r3 := @this: com.google.inject.internal.util.$ImmutableCollection;

        r0 := @parameter0: java.util.Collection;

        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r3.<com.google.inject.internal.util.$ImmutableCollection: boolean contains(java.lang.Object)>($r2);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public boolean isEmpty()
    {
        com.google.inject.internal.util.$ImmutableCollection r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.inject.internal.util.$ImmutableCollection;

        $i0 = virtualinvoke r0.<com.google.inject.internal.util.$ImmutableCollection: int size()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        com.google.inject.internal.util.$UnmodifiableIterator $r2;
        com.google.inject.internal.util.$ImmutableCollection r1;
        int $i0, $i1;
        java.lang.StringBuilder $r0, $r3;
        java.lang.Object $r5, $r6;
        java.lang.String $r4;
        boolean $z0, $z1;

        r1 := @this: com.google.inject.internal.util.$ImmutableCollection;

        $r0 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<com.google.inject.internal.util.$ImmutableCollection: int size()>();

        $i1 = $i0 * 16;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r2 = virtualinvoke r1.<com.google.inject.internal.util.$ImmutableCollection: com.google.inject.internal.util.$UnmodifiableIterator iterator()>();

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        goto label1;

     label2:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public final boolean add(java.lang.Object)
    {
        com.google.inject.internal.util.$ImmutableCollection r1;
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;

        r1 := @this: com.google.inject.internal.util.$ImmutableCollection;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public final boolean remove(java.lang.Object)
    {
        com.google.inject.internal.util.$ImmutableCollection r1;
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;

        r1 := @this: com.google.inject.internal.util.$ImmutableCollection;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public final boolean addAll(java.util.Collection)
    {
        com.google.inject.internal.util.$ImmutableCollection r1;
        java.lang.UnsupportedOperationException $r0;
        java.util.Collection r2;

        r1 := @this: com.google.inject.internal.util.$ImmutableCollection;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public final boolean removeAll(java.util.Collection)
    {
        com.google.inject.internal.util.$ImmutableCollection r1;
        java.lang.UnsupportedOperationException $r0;
        java.util.Collection r2;

        r1 := @this: com.google.inject.internal.util.$ImmutableCollection;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public final boolean retainAll(java.util.Collection)
    {
        com.google.inject.internal.util.$ImmutableCollection r1;
        java.lang.UnsupportedOperationException $r0;
        java.util.Collection r2;

        r1 := @this: com.google.inject.internal.util.$ImmutableCollection;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public final void clear()
    {
        com.google.inject.internal.util.$ImmutableCollection r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: com.google.inject.internal.util.$ImmutableCollection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    java.lang.Object writeReplace()
    {
        com.google.inject.internal.util.$ImmutableCollection r1;
        java.lang.Object[] $r2;
        com.google.inject.internal.util.$ImmutableCollection$SerializedForm $r0;

        r1 := @this: com.google.inject.internal.util.$ImmutableCollection;

        $r0 = new com.google.inject.internal.util.$ImmutableCollection$SerializedForm;

        $r2 = virtualinvoke r1.<com.google.inject.internal.util.$ImmutableCollection: java.lang.Object[] toArray()>();

        specialinvoke $r0.<com.google.inject.internal.util.$ImmutableCollection$SerializedForm: void <init>(java.lang.Object[])>($r2);

        return $r0;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.inject.internal.util.$ImmutableCollection r0;
        com.google.inject.internal.util.$UnmodifiableIterator $r1;

        r0 := @this: com.google.inject.internal.util.$ImmutableCollection;

        $r1 = virtualinvoke r0.<com.google.inject.internal.util.$ImmutableCollection: com.google.inject.internal.util.$UnmodifiableIterator iterator()>();

        return $r1;
    }

    static com.google.inject.internal.util.$UnmodifiableIterator access$100()
    {
        com.google.inject.internal.util.$UnmodifiableIterator $r0;

        $r0 = <com.google.inject.internal.util.$ImmutableCollection: com.google.inject.internal.util.$UnmodifiableIterator EMPTY_ITERATOR>;

        return $r0;
    }

    static java.lang.Object[] access$200()
    {
        java.lang.Object[] $r0;

        $r0 = <com.google.inject.internal.util.$ImmutableCollection: java.lang.Object[] EMPTY_ARRAY>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r1;
        com.google.inject.internal.util.$ImmutableCollection$1 $r2;
        com.google.inject.internal.util.$ImmutableCollection$EmptyImmutableCollection $r0;

        $r0 = new com.google.inject.internal.util.$ImmutableCollection$EmptyImmutableCollection;

        specialinvoke $r0.<com.google.inject.internal.util.$ImmutableCollection$EmptyImmutableCollection: void <init>(com.google.inject.internal.util.$ImmutableCollection$1)>(null);

        <com.google.inject.internal.util.$ImmutableCollection: com.google.inject.internal.util.$ImmutableCollection EMPTY_IMMUTABLE_COLLECTION> = $r0;

        $r1 = newarray (java.lang.Object)[0];

        <com.google.inject.internal.util.$ImmutableCollection: java.lang.Object[] EMPTY_ARRAY> = $r1;

        $r2 = new com.google.inject.internal.util.$ImmutableCollection$1;

        specialinvoke $r2.<com.google.inject.internal.util.$ImmutableCollection$1: void <init>()>();

        <com.google.inject.internal.util.$ImmutableCollection: com.google.inject.internal.util.$UnmodifiableIterator EMPTY_ITERATOR> = $r2;

        return;
    }
}
