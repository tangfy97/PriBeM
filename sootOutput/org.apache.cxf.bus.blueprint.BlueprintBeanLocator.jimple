public class org.apache.cxf.bus.blueprint.BlueprintBeanLocator extends java.lang.Object implements org.apache.cxf.configuration.ConfiguredBeanLocator
{
    private static final java.util.logging.Logger LOG;
    org.apache.cxf.configuration.ConfiguredBeanLocator orig;
    org.osgi.service.blueprint.container.BlueprintContainer container;
    org.osgi.framework.BundleContext context;

    public void <init>(org.apache.cxf.configuration.ConfiguredBeanLocator, org.osgi.service.blueprint.container.BlueprintContainer, org.osgi.framework.BundleContext)
    {
        org.apache.cxf.bus.blueprint.BlueprintBeanLocator r0;
        java.util.Set $r6;
        org.apache.cxf.configuration.ConfiguredBeanLocator r1;
        org.osgi.framework.BundleContext r3;
        java.util.ArrayList $r4;
        org.osgi.service.blueprint.container.BlueprintContainer r2, $r5;
        boolean $z0;
        org.apache.cxf.bus.extension.ExtensionManagerImpl $r7;

        r0 := @this: org.apache.cxf.bus.blueprint.BlueprintBeanLocator;

        r1 := @parameter0: org.apache.cxf.configuration.ConfiguredBeanLocator;

        r2 := @parameter1: org.osgi.service.blueprint.container.BlueprintContainer;

        r3 := @parameter2: org.osgi.framework.BundleContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.apache.cxf.configuration.ConfiguredBeanLocator orig> = r1;

        r0.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.container.BlueprintContainer container> = r2;

        r0.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.framework.BundleContext context> = r3;

        $z0 = r1 instanceof org.apache.cxf.bus.extension.ExtensionManagerImpl;

        if $z0 == 0 goto label1;

        $r4 = new java.util.ArrayList;

        $r5 = r0.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r6 = interfaceinvoke $r5.<org.osgi.service.blueprint.container.BlueprintContainer: java.util.Set getComponentIds()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        $r7 = (org.apache.cxf.bus.extension.ExtensionManagerImpl) r1;

        virtualinvoke $r7.<org.apache.cxf.bus.extension.ExtensionManagerImpl: void removeBeansOfNames(java.util.List)>($r4);

     label1:
        return;
    }

    static java.lang.Class getClassForMetaData(org.osgi.service.blueprint.container.BlueprintContainer, org.osgi.service.blueprint.reflect.ComponentMetadata)
    {
        java.lang.Object[] $r7;
        org.osgi.service.blueprint.reflect.ComponentMetadata r0;
        java.lang.String $r9;
        java.lang.reflect.Method $r5, $r8;
        boolean $z0, $z1;
        java.lang.reflect.AccessibleObject $r6;
        java.lang.Class[] $r4;
        org.apache.aries.blueprint.ExtendedBeanMetadata $r11;
        java.lang.Exception $r12;
        org.osgi.service.blueprint.reflect.BeanMetadata r1;
        java.lang.Class $r3, r13;
        java.lang.Object $r10;
        org.osgi.service.blueprint.container.BlueprintContainer r2;

        r2 := @parameter0: org.osgi.service.blueprint.container.BlueprintContainer;

        r0 := @parameter1: org.osgi.service.blueprint.reflect.ComponentMetadata;

        r13 = null;

        $z0 = r0 instanceof org.osgi.service.blueprint.reflect.BeanMetadata;

        if $z0 == 0 goto label5;

        r1 = (org.osgi.service.blueprint.reflect.BeanMetadata) r0;

        $z1 = r1 instanceof org.apache.aries.blueprint.ExtendedBeanMetadata;

        if $z1 == 0 goto label1;

        $r11 = (org.apache.aries.blueprint.ExtendedBeanMetadata) r1;

        r13 = interfaceinvoke $r11.<org.apache.aries.blueprint.ExtendedBeanMetadata: java.lang.Class getRuntimeClass()>();

     label1:
        if r13 != null goto label5;

     label2:
        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = class "Ljava/lang/String;";

        $r5 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r3, "loadClass", $r4);

        $r6 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.AccessibleObject setAccessible(java.lang.reflect.AccessibleObject)>($r5);

        $r8 = (java.lang.reflect.Method) $r6;

        $r7 = newarray (java.lang.Object)[1];

        $r9 = interfaceinvoke r1.<org.osgi.service.blueprint.reflect.BeanMetadata: java.lang.String getClassName()>();

        $r7[0] = $r9;

        $r10 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r7);

        r13 = (java.lang.Class) $r10;

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

     label5:
        return r13;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private java.lang.Class getClassForMetaData(org.osgi.service.blueprint.reflect.ComponentMetadata)
    {
        org.osgi.service.blueprint.reflect.ComponentMetadata r1;
        org.apache.cxf.bus.blueprint.BlueprintBeanLocator r0;
        java.lang.Class $r3;
        org.osgi.service.blueprint.container.BlueprintContainer $r2;

        r0 := @this: org.apache.cxf.bus.blueprint.BlueprintBeanLocator;

        r1 := @parameter0: org.osgi.service.blueprint.reflect.ComponentMetadata;

        $r2 = r0.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r3 = staticinvoke <org.apache.cxf.bus.blueprint.BlueprintBeanLocator: java.lang.Class getClassForMetaData(org.osgi.service.blueprint.container.BlueprintContainer,org.osgi.service.blueprint.reflect.ComponentMetadata)>($r2, r1);

        return $r3;
    }

    private org.osgi.service.blueprint.reflect.ComponentMetadata getComponentMetadata(java.lang.String)
    {
        java.lang.Throwable $r4;
        org.osgi.service.blueprint.reflect.ComponentMetadata $r3;
        org.apache.cxf.bus.blueprint.BlueprintBeanLocator r0;
        java.lang.String r1;
        org.osgi.service.blueprint.container.BlueprintContainer $r2;

        r0 := @this: org.apache.cxf.bus.blueprint.BlueprintBeanLocator;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r3 = interfaceinvoke $r2.<org.osgi.service.blueprint.container.BlueprintContainer: org.osgi.service.blueprint.reflect.ComponentMetadata getComponentMetadata(java.lang.String)>(r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

        catch org.osgi.service.blueprint.container.NoSuchComponentException from label1 to label2 with label3;
    }

    public java.lang.Object getBeanOfType(java.lang.String, java.lang.Class)
    {
        org.apache.cxf.bus.blueprint.BlueprintBeanLocator r0;
        org.apache.cxf.configuration.ConfiguredBeanLocator $r5;
        org.osgi.service.blueprint.reflect.ComponentMetadata $r2;
        java.lang.Class $r3, r4;
        java.lang.Object $r6, $r8, $r9;
        java.lang.String r1;
        org.osgi.service.blueprint.container.BlueprintContainer $r7;
        boolean $z0;

        r0 := @this: org.apache.cxf.bus.blueprint.BlueprintBeanLocator;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Class;

        $r2 = specialinvoke r0.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.reflect.ComponentMetadata getComponentMetadata(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: java.lang.Class getClassForMetaData(org.osgi.service.blueprint.reflect.ComponentMetadata)>($r2);

        if $r3 == null goto label1;

        $z0 = virtualinvoke r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r8 = interfaceinvoke $r7.<org.osgi.service.blueprint.container.BlueprintContainer: java.lang.Object getComponentInstance(java.lang.String)>(r1);

        $r9 = virtualinvoke r4.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r8);

        return $r9;

     label1:
        $r5 = r0.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.apache.cxf.configuration.ConfiguredBeanLocator orig>;

        $r6 = interfaceinvoke $r5.<org.apache.cxf.configuration.ConfiguredBeanLocator: java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)>(r1, r4);

        return $r6;
    }

    public java.util.List getBeanNamesOfType(java.lang.Class)
    {
        java.util.ArrayList $r8;
        org.osgi.service.blueprint.reflect.ComponentMetadata $r12;
        java.lang.String r10;
        java.util.LinkedHashSet $r0;
        boolean $z0, $z1;
        java.util.Iterator $r4;
        org.apache.cxf.bus.blueprint.BlueprintBeanLocator r1;
        java.util.Set $r3;
        org.apache.cxf.configuration.ConfiguredBeanLocator $r6;
        java.util.List $r7;
        java.lang.Class r5, $r13;
        java.lang.Object $r9;
        org.osgi.service.blueprint.container.BlueprintContainer $r2, $r11;

        r1 := @this: org.apache.cxf.bus.blueprint.BlueprintBeanLocator;

        r5 := @parameter0: java.lang.Class;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>();

        $r2 = r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r3 = interfaceinvoke $r2.<org.osgi.service.blueprint.container.BlueprintContainer: java.util.Set getComponentIds()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        $r11 = r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r12 = interfaceinvoke $r11.<org.osgi.service.blueprint.container.BlueprintContainer: org.osgi.service.blueprint.reflect.ComponentMetadata getComponentMetadata(java.lang.String)>(r10);

        $r13 = specialinvoke r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: java.lang.Class getClassForMetaData(org.osgi.service.blueprint.reflect.ComponentMetadata)>($r12);

        if $r13 == null goto label2;

        $z1 = virtualinvoke r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r13);

        if $z1 == 0 goto label2;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r10);

     label2:
        goto label1;

     label3:
        $r6 = r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.apache.cxf.configuration.ConfiguredBeanLocator orig>;

        $r7 = interfaceinvoke $r6.<org.apache.cxf.configuration.ConfiguredBeanLocator: java.util.List getBeanNamesOfType(java.lang.Class)>(r5);

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r7);

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r0);

        return $r8;
    }

    public java.util.Collection getBeansOfType(java.lang.Class)
    {
        org.osgi.framework.ServiceReference[] $r10;
        org.osgi.framework.ServiceReference r11;
        boolean $z0, $z1, $z2;
        java.util.Collection $r7;
        java.util.Set $r3;
        org.apache.cxf.configuration.ConfiguredBeanLocator $r6;
        java.util.logging.Logger $r24;
        org.osgi.framework.BundleContext $r8, $r12;
        java.lang.Exception $r22;
        java.lang.StringBuilder $r23, $r25, $r26, $r27, $r28;
        org.osgi.service.blueprint.container.BlueprintContainer $r2, $r16, $r19;
        java.util.ArrayList $r0;
        org.osgi.service.blueprint.reflect.ComponentMetadata $r17;
        int i0, i1;
        java.lang.String $r9, $r29, r30;
        java.util.Iterator $r4;
        org.apache.cxf.bus.blueprint.BlueprintBeanLocator r1;
        java.lang.Class r5, $r18;
        java.lang.Object $r13, $r14, $r15, $r20, $r21;

        r1 := @this: org.apache.cxf.bus.blueprint.BlueprintBeanLocator;

        r5 := @parameter0: java.lang.Class;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r3 = interfaceinvoke $r2.<org.osgi.service.blueprint.container.BlueprintContainer: java.util.Set getComponentIds()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r15 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.lang.String) $r15;

        $r16 = r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r17 = interfaceinvoke $r16.<org.osgi.service.blueprint.container.BlueprintContainer: org.osgi.service.blueprint.reflect.ComponentMetadata getComponentMetadata(java.lang.String)>(r30);

        $r18 = specialinvoke r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: java.lang.Class getClassForMetaData(org.osgi.service.blueprint.reflect.ComponentMetadata)>($r17);

        if $r18 == null goto label2;

        $z2 = virtualinvoke r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r18);

        if $z2 == 0 goto label2;

        $r19 = r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r20 = interfaceinvoke $r19.<org.osgi.service.blueprint.container.BlueprintContainer: java.lang.Object getComponentInstance(java.lang.String)>(r30);

        $r21 = virtualinvoke r5.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r20);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r21);

     label2:
        goto label1;

     label3:
        $r6 = r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.apache.cxf.configuration.ConfiguredBeanLocator orig>;

        $r7 = interfaceinvoke $r6.<org.apache.cxf.configuration.ConfiguredBeanLocator: java.util.Collection getBeansOfType(java.lang.Class)>(r5);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        $z1 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label8;

     label4:
        $r8 = r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.framework.BundleContext context>;

        $r9 = virtualinvoke r5.<java.lang.Class: java.lang.String getName()>();

        $r10 = interfaceinvoke $r8.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceReference[] getServiceReferences(java.lang.String,java.lang.String)>($r9, null);

        if $r10 == null goto label6;

        i0 = lengthof $r10;

        i1 = 0;

     label5:
        if i1 >= i0 goto label6;

        r11 = $r10[i1];

        $r12 = r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.framework.BundleContext context>;

        $r13 = interfaceinvoke $r12.<org.osgi.framework.BundleContext: java.lang.Object getService(org.osgi.framework.ServiceReference)>(r11);

        $r14 = virtualinvoke r5.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r13);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r14);

        i1 = i1 + 1;

        goto label5;

     label6:
        goto label8;

     label7:
        $r22 := @caughtexception;

        $r24 = <org.apache.cxf.bus.blueprint.BlueprintBeanLocator: java.util.logging.Logger LOG>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Try to find the Bean with type:");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from OSGi services and get error: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.util.logging.Logger: void info(java.lang.String)>($r29);

     label8:
        return $r0;

        catch java.lang.Exception from label4 to label6 with label7;
    }

    public boolean loadBeansOfType(java.lang.Class, org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)
    {
        java.util.ArrayList $r0;
        org.osgi.service.blueprint.reflect.ComponentMetadata $r11, $r19;
        java.lang.String r21, r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7;
        java.util.Iterator $r4, $r5;
        org.apache.cxf.bus.blueprint.BlueprintBeanLocator r1;
        java.util.Set $r3;
        org.apache.cxf.configuration.ConfiguredBeanLocator $r8;
        org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener r7;
        java.lang.Class r6, $r12, $r13, $r20;
        java.lang.Object $r9, $r15, $r16, $r17;
        org.osgi.service.blueprint.container.BlueprintContainer $r2, $r10, $r14, $r18;

        r1 := @this: org.apache.cxf.bus.blueprint.BlueprintBeanLocator;

        r6 := @parameter0: java.lang.Class;

        r7 := @parameter1: org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        z6 = 0;

        $r2 = r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r3 = interfaceinvoke $r2.<org.osgi.service.blueprint.container.BlueprintContainer: java.util.Set getComponentIds()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r17 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.lang.String) $r17;

        $r18 = r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r19 = interfaceinvoke $r18.<org.osgi.service.blueprint.container.BlueprintContainer: org.osgi.service.blueprint.reflect.ComponentMetadata getComponentMetadata(java.lang.String)>(r21);

        $r20 = specialinvoke r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: java.lang.Class getClassForMetaData(org.osgi.service.blueprint.reflect.ComponentMetadata)>($r19);

        if $r20 == null goto label02;

        $z5 = virtualinvoke r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r20);

        if $z5 == 0 goto label02;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r21);

     label02:
        goto label01;

     label03:
        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r0);

        $r5 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r9 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.lang.String) $r9;

        $r10 = r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r11 = interfaceinvoke $r10.<org.osgi.service.blueprint.container.BlueprintContainer: org.osgi.service.blueprint.reflect.ComponentMetadata getComponentMetadata(java.lang.String)>(r22);

        $r12 = specialinvoke r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: java.lang.Class getClassForMetaData(org.osgi.service.blueprint.reflect.ComponentMetadata)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(r6);

        $z3 = interfaceinvoke r7.<org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener: boolean loadBean(java.lang.String,java.lang.Class)>(r22, $r13);

        if $z3 == 0 goto label06;

        $r14 = r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r15 = interfaceinvoke $r14.<org.osgi.service.blueprint.container.BlueprintContainer: java.lang.Object getComponentInstance(java.lang.String)>(r22);

        $r16 = virtualinvoke r6.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r15);

        $z4 = interfaceinvoke r7.<org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener: boolean beanLoaded(java.lang.String,java.lang.Object)>(r22, $r16);

        if $z4 == 0 goto label05;

        return 1;

     label05:
        z6 = 1;

     label06:
        goto label04;

     label07:
        if z6 != 0 goto label08;

        $r8 = r1.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.apache.cxf.configuration.ConfiguredBeanLocator orig>;

        $z2 = interfaceinvoke $r8.<org.apache.cxf.configuration.ConfiguredBeanLocator: boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)>(r6, r7);

        if $z2 == 0 goto label09;

     label08:
        $z7 = 1;

        goto label10;

     label09:
        $z7 = 0;

     label10:
        return $z7;
    }

    public boolean hasConfiguredPropertyValue(java.lang.String, java.lang.String, java.lang.String)
    {
        org.osgi.service.blueprint.reflect.ComponentMetadata $r2;
        java.lang.String r1, r3, r4, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r8;
        org.osgi.service.blueprint.reflect.BeanProperty r10;
        org.apache.cxf.bus.blueprint.BlueprintBeanLocator r0;
        org.apache.cxf.configuration.ConfiguredBeanLocator $r5;
        org.osgi.service.blueprint.reflect.BeanMetadata r6;
        java.util.List $r7;
        java.lang.Object $r9;

        r0 := @this: org.apache.cxf.bus.blueprint.BlueprintBeanLocator;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.reflect.ComponentMetadata getComponentMetadata(java.lang.String)>(r1);

        $z0 = $r2 instanceof org.osgi.service.blueprint.reflect.BeanMetadata;

        if $z0 == 0 goto label4;

        r6 = (org.osgi.service.blueprint.reflect.BeanMetadata) $r2;

        $r7 = interfaceinvoke r6.<org.osgi.service.blueprint.reflect.BeanMetadata: java.util.List getProperties()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.osgi.service.blueprint.reflect.BeanProperty) $r9;

        $r11 = interfaceinvoke r10.<org.osgi.service.blueprint.reflect.BeanProperty: java.lang.String getName()>();

        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z3 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;

     label4:
        $r5 = r0.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.apache.cxf.configuration.ConfiguredBeanLocator orig>;

        $z1 = interfaceinvoke $r5.<org.apache.cxf.configuration.ConfiguredBeanLocator: boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)>(r1, r3, r4);

        return $z1;
    }

    public boolean hasBeanOfName(java.lang.String)
    {
        org.osgi.service.blueprint.reflect.ComponentMetadata $r2;
        org.apache.cxf.bus.blueprint.BlueprintBeanLocator r0;
        org.apache.cxf.configuration.ConfiguredBeanLocator $r3;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.bus.blueprint.BlueprintBeanLocator;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.osgi.service.blueprint.reflect.ComponentMetadata getComponentMetadata(java.lang.String)>(r1);

        $z0 = $r2 instanceof org.osgi.service.blueprint.reflect.BeanMetadata;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = r0.<org.apache.cxf.bus.blueprint.BlueprintBeanLocator: org.apache.cxf.configuration.ConfiguredBeanLocator orig>;

        $z1 = interfaceinvoke $r3.<org.apache.cxf.configuration.ConfiguredBeanLocator: boolean hasBeanOfName(java.lang.String)>(r1);

        return $z1;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/bus/blueprint/BlueprintBeanLocator;");

        <org.apache.cxf.bus.blueprint.BlueprintBeanLocator: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
