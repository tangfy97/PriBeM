public class com.jhlabs.image.CompositeFilter extends com.jhlabs.image.AbstractBufferedImageOp
{
    private java.awt.Composite composite;
    private java.awt.geom.AffineTransform transform;

    public void <init>()
    {
        com.jhlabs.image.CompositeFilter r0;

        r0 := @this: com.jhlabs.image.CompositeFilter;

        specialinvoke r0.<com.jhlabs.image.AbstractBufferedImageOp: void <init>()>();

        return;
    }

    public void <init>(java.awt.Composite)
    {
        com.jhlabs.image.CompositeFilter r0;
        java.awt.Composite r1;

        r0 := @this: com.jhlabs.image.CompositeFilter;

        r1 := @parameter0: java.awt.Composite;

        specialinvoke r0.<com.jhlabs.image.AbstractBufferedImageOp: void <init>()>();

        r0.<com.jhlabs.image.CompositeFilter: java.awt.Composite composite> = r1;

        return;
    }

    public void <init>(java.awt.Composite, java.awt.geom.AffineTransform)
    {
        com.jhlabs.image.CompositeFilter r0;
        java.awt.geom.AffineTransform r2;
        java.awt.Composite r1;

        r0 := @this: com.jhlabs.image.CompositeFilter;

        r1 := @parameter0: java.awt.Composite;

        r2 := @parameter1: java.awt.geom.AffineTransform;

        specialinvoke r0.<com.jhlabs.image.AbstractBufferedImageOp: void <init>()>();

        r0.<com.jhlabs.image.CompositeFilter: java.awt.Composite composite> = r1;

        r0.<com.jhlabs.image.CompositeFilter: java.awt.geom.AffineTransform transform> = r2;

        return;
    }

    public void setComposite(java.awt.Composite)
    {
        com.jhlabs.image.CompositeFilter r0;
        java.awt.Composite r1;

        r0 := @this: com.jhlabs.image.CompositeFilter;

        r1 := @parameter0: java.awt.Composite;

        r0.<com.jhlabs.image.CompositeFilter: java.awt.Composite composite> = r1;

        return;
    }

    public java.awt.Composite getComposite()
    {
        com.jhlabs.image.CompositeFilter r0;
        java.awt.Composite $r1;

        r0 := @this: com.jhlabs.image.CompositeFilter;

        $r1 = r0.<com.jhlabs.image.CompositeFilter: java.awt.Composite composite>;

        return $r1;
    }

    public java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)
    {
        java.awt.Composite $r6;
        java.awt.image.BufferedImage r7, r9;
        java.awt.geom.AffineTransform $r8;
        java.awt.Graphics2D $r0;
        java.awt.RenderingHints$Key $r2, $r4;
        java.lang.Object $r1, $r3;
        com.jhlabs.image.CompositeFilter r5;

        r5 := @this: com.jhlabs.image.CompositeFilter;

        r7 := @parameter0: java.awt.image.BufferedImage;

        r9 := @parameter1: java.awt.image.BufferedImage;

        if r9 != null goto label1;

        r9 = virtualinvoke r5.<com.jhlabs.image.AbstractBufferedImageOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>(r7, null);

     label1:
        $r0 = virtualinvoke r9.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        $r2 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r1 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;

        virtualinvoke $r0.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r2, $r1);

        $r4 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_INTERPOLATION>;

        $r3 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR>;

        virtualinvoke $r0.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r4, $r3);

        $r6 = r5.<com.jhlabs.image.CompositeFilter: java.awt.Composite composite>;

        virtualinvoke $r0.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r6);

        $r8 = r5.<com.jhlabs.image.CompositeFilter: java.awt.geom.AffineTransform transform>;

        virtualinvoke $r0.<java.awt.Graphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>(r7, $r8);

        virtualinvoke $r0.<java.awt.Graphics: void dispose()>();

        return r9;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.CompositeFilter r0;

        r0 := @this: com.jhlabs.image.CompositeFilter;

        return "Composite";
    }
}
