class org.waveprotocol.wave.client.editor.content.ContentDocument$3 extends java.lang.Object implements org.waveprotocol.wave.client.editor.content.ContentRawDocument$Factory
{
    final org.waveprotocol.wave.client.editor.content.ContentDocument this$0;

    void <init>(org.waveprotocol.wave.client.editor.content.ContentDocument)
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument$3 r0;
        org.waveprotocol.wave.client.editor.content.ContentDocument r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$3;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentDocument;

        r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$3: org.waveprotocol.wave.client.editor.content.ContentDocument this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.client.editor.content.ContentElement createElement(java.lang.String, java.util.Map)
    {
        org.waveprotocol.wave.client.editor.content.AgentAdapter $r0;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r4, $r6, $r9;
        org.waveprotocol.wave.client.editor.ElementHandlerRegistry $r8;
        org.waveprotocol.wave.client.editor.content.ContentDocument$3 r3;
        org.waveprotocol.wave.client.editor.content.ExtendedClientDocumentContext $r5;
        java.util.Map r2;
        java.lang.String r1;
        org.waveprotocol.wave.client.editor.content.Registries $r7;

        r3 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$3;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $r0 = new org.waveprotocol.wave.client.editor.content.AgentAdapter;

        $r4 = r3.<org.waveprotocol.wave.client.editor.content.ContentDocument$3: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r5 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ExtendedClientDocumentContext access$700(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r4);

        $r6 = r3.<org.waveprotocol.wave.client.editor.content.ContentDocument$3: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r7 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.Registries access$800(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r6);

        $r8 = interfaceinvoke $r7.<org.waveprotocol.wave.client.editor.content.Registries: org.waveprotocol.wave.client.editor.ElementHandlerRegistry getElementHandlerRegistry()>();

        specialinvoke $r0.<org.waveprotocol.wave.client.editor.content.AgentAdapter: void <init>(java.lang.String,java.util.Map,org.waveprotocol.wave.client.editor.content.ExtendedClientDocumentContext,org.waveprotocol.wave.client.editor.ElementHandlerRegistry)>(r1, r2, $r5, $r8);

        $r9 = r3.<org.waveprotocol.wave.client.editor.content.ContentDocument$3: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: void access$900(org.waveprotocol.wave.client.editor.content.ContentDocument,org.waveprotocol.wave.client.editor.content.ContentElement)>($r9, $r0);

        return $r0;
    }

    public void setupBehaviour(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument$3 r0;
        org.waveprotocol.wave.client.editor.content.ContentElement r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$3;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r2 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$3: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: void access$1000(org.waveprotocol.wave.client.editor.content.ContentDocument,org.waveprotocol.wave.client.editor.content.ContentElement,org.waveprotocol.wave.client.editor.content.ContentDocument$Level)>($r2, r1, null);

        return;
    }

    public org.waveprotocol.wave.client.editor.content.ContentTextNode createText(java.lang.String)
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument$3 r2;
        org.waveprotocol.wave.client.editor.content.ContentTextNode $r0;
        org.waveprotocol.wave.client.editor.content.ExtendedClientDocumentContext $r4;
        java.lang.String r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r3;

        r2 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$3;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.waveprotocol.wave.client.editor.content.ContentTextNode;

        $r3 = r2.<org.waveprotocol.wave.client.editor.content.ContentDocument$3: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ExtendedClientDocumentContext access$700(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r3);

        specialinvoke $r0.<org.waveprotocol.wave.client.editor.content.ContentTextNode: void <init>(java.lang.String,org.waveprotocol.wave.client.editor.content.ExtendedClientDocumentContext)>(r1, $r4);

        return $r0;
    }
}
