public interface  org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder extends java.lang.Object implements org.apache.xmlbeans.XmlObject
{
    public static final org.apache.xmlbeans.SchemaType type;

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.CTExtensionListModify getExtLst();

    public abstract boolean isSetExtLst();

    public abstract void setExtLst(org.openxmlformats.schemas.presentationml.x2006.main.CTExtensionListModify);

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.CTExtensionListModify addNewExtLst();

    public abstract void unsetExtLst();

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderType$Enum getType();

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderType xgetType();

    public abstract boolean isSetType();

    public abstract void setType(org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderType$Enum);

    public abstract void xsetType(org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderType);

    public abstract void unsetType();

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.STDirection$Enum getOrient();

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.STDirection xgetOrient();

    public abstract boolean isSetOrient();

    public abstract void setOrient(org.openxmlformats.schemas.presentationml.x2006.main.STDirection$Enum);

    public abstract void xsetOrient(org.openxmlformats.schemas.presentationml.x2006.main.STDirection);

    public abstract void unsetOrient();

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderSize$Enum getSz();

    public abstract org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderSize xgetSz();

    public abstract boolean isSetSz();

    public abstract void setSz(org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderSize$Enum);

    public abstract void xsetSz(org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderSize);

    public abstract void unsetSz();

    public abstract long getIdx();

    public abstract org.apache.xmlbeans.XmlUnsignedInt xgetIdx();

    public abstract boolean isSetIdx();

    public abstract void setIdx(long);

    public abstract void xsetIdx(org.apache.xmlbeans.XmlUnsignedInt);

    public abstract void unsetIdx();

    public abstract boolean getHasCustomPrompt();

    public abstract org.apache.xmlbeans.XmlBoolean xgetHasCustomPrompt();

    public abstract boolean isSetHasCustomPrompt();

    public abstract void setHasCustomPrompt(boolean);

    public abstract void xsetHasCustomPrompt(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetHasCustomPrompt();

    static void <clinit>()
    {
        org.apache.xmlbeans.SchemaTypeSystem $r2;
        java.lang.Class $r0;
        org.apache.xmlbeans.SchemaComponent $r3;
        java.lang.ClassLoader $r1;
        org.apache.xmlbeans.SchemaType $r4;

        $r0 = class "Lorg/openxmlformats/schemas/presentationml/x2006/main/CTPlaceholder;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeSystem typeSystemForClassLoader(java.lang.ClassLoader,java.lang.String)>($r1, "schemaorg_apache_xmlbeans.system.sE130CAA0A01A7CDE5A2B4FEB8B311707");

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaComponent resolveHandle(java.lang.String)>("ctplaceholder9efctype");

        $r4 = (org.apache.xmlbeans.SchemaType) $r3;

        <org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder: org.apache.xmlbeans.SchemaType type> = $r4;

        return;
    }
}
