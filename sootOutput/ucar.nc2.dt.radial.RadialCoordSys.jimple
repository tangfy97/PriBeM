public class ucar.nc2.dt.radial.RadialCoordSys extends java.lang.Object
{
    private ucar.nc2.dataset.CoordinateAxis aziAxis;
    private ucar.nc2.dataset.CoordinateAxis elevAxis;
    private ucar.nc2.dataset.CoordinateAxis radialAxis;
    private ucar.nc2.dataset.CoordinateAxis timeAxis;
    private ucar.ma2.Array aziData;
    private ucar.ma2.Array elevData;
    private ucar.ma2.Array radialData;
    private ucar.ma2.Array timeData;
    private java.lang.String name;
    private java.util.ArrayList coordAxes;
    private ucar.nc2.units.DateUnit dateUnit;
    private ucar.unidata.geoloc.EarthLocation origin;
    private ucar.unidata.geoloc.LatLonRect bb;
    private double maxRadial;

    public static boolean isRadialCoordSys(java.util.Formatter, ucar.nc2.dataset.CoordinateSystem)
    {
        ucar.nc2.dataset.CoordinateAxis $r1, $r2, $r3;
        ucar.nc2.dataset.CoordinateSystem r0;
        java.util.Formatter r4;
        boolean $z0;

        r4 := @parameter0: java.util.Formatter;

        r0 := @parameter1: ucar.nc2.dataset.CoordinateSystem;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getAzimuthAxis()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getRadialAxis()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getElevationAxis()>();

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static ucar.nc2.dt.radial.RadialCoordSys makeRadialCoordSys(java.util.Formatter, ucar.nc2.dataset.CoordinateSystem, ucar.nc2.dataset.VariableEnhanced)
    {
        java.lang.Object[] $r4, $r5, $r6, $r12;
        java.util.Formatter r0;
        ucar.nc2.dt.radial.RadialCoordSys $r2;
        ucar.nc2.dataset.VariableEnhanced r3;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9, $r11;
        ucar.nc2.dataset.CoordinateSystem r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.Formatter;

        r1 := @parameter1: ucar.nc2.dataset.CoordinateSystem;

        r3 := @parameter2: ucar.nc2.dataset.VariableEnhanced;

        if r0 == null goto label1;

        $r6 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" ", $r6);

        interfaceinvoke r3.<ucar.nc2.dataset.VariableEnhanced: void getNameAndDimensions(java.util.Formatter,boolean,boolean)>(r0, 1, 0);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" check CS ");

        $r9 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateSystem: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r11, $r12);

     label1:
        $z0 = staticinvoke <ucar.nc2.dt.radial.RadialCoordSys: boolean isRadialCoordSys(java.util.Formatter,ucar.nc2.dataset.CoordinateSystem)>(r0, r1);

        if $z0 == 0 goto label4;

        $r2 = new ucar.nc2.dt.radial.RadialCoordSys;

        specialinvoke $r2.<ucar.nc2.dt.radial.RadialCoordSys: void <init>(ucar.nc2.dataset.CoordinateSystem)>(r1);

        $z1 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateSystem: boolean isComplete(ucar.nc2.VariableIF)>(r3);

        if $z1 == 0 goto label3;

        if r0 == null goto label2;

        $r5 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" OK\n", $r5);

     label2:
        return $r2;

     label3:
        if r0 == null goto label4;

        $r4 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" NOT complete\n", $r4);

     label4:
        return null;
    }

    public void <init>(ucar.nc2.dataset.CoordinateSystem)
    {
        java.util.ArrayList $r1, $r8, $r10, $r12, $r14, $r15;
        ucar.nc2.dataset.CoordinateAxis $r3, $r4, $r5, $r6, $r7, $r9, $r11;
        ucar.nc2.dataset.CoordinateAxis$AxisComparator $r13;
        java.lang.String $r16;
        ucar.nc2.dt.radial.RadialCoordSys r0;
        ucar.nc2.dataset.CoordinateSystem r2;

        r0 := @this: ucar.nc2.dt.radial.RadialCoordSys;

        r2 := @parameter0: ucar.nc2.dataset.CoordinateSystem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dt.radial.RadialCoordSys: java.util.ArrayList coordAxes> = $r1;

        $r3 = virtualinvoke r2.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getAzimuthAxis()>();

        r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis aziAxis> = $r3;

        $r4 = virtualinvoke r2.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getRadialAxis()>();

        r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis radialAxis> = $r4;

        $r5 = virtualinvoke r2.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getElevationAxis()>();

        r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis elevAxis> = $r5;

        $r6 = virtualinvoke r2.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getTaxis()>();

        r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis timeAxis> = $r6;

        $r8 = r0.<ucar.nc2.dt.radial.RadialCoordSys: java.util.ArrayList coordAxes>;

        $r7 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis aziAxis>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $r10 = r0.<ucar.nc2.dt.radial.RadialCoordSys: java.util.ArrayList coordAxes>;

        $r9 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis radialAxis>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        $r12 = r0.<ucar.nc2.dt.radial.RadialCoordSys: java.util.ArrayList coordAxes>;

        $r11 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis elevAxis>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r14 = r0.<ucar.nc2.dt.radial.RadialCoordSys: java.util.ArrayList coordAxes>;

        $r13 = new ucar.nc2.dataset.CoordinateAxis$AxisComparator;

        specialinvoke $r13.<ucar.nc2.dataset.CoordinateAxis$AxisComparator: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r14, $r13);

        $r15 = r0.<ucar.nc2.dt.radial.RadialCoordSys: java.util.ArrayList coordAxes>;

        $r16 = staticinvoke <ucar.nc2.dataset.CoordinateSystem: java.lang.String makeName(java.util.List)>($r15);

        r0.<ucar.nc2.dt.radial.RadialCoordSys: java.lang.String name> = $r16;

        return;
    }

    public java.lang.String getName()
    {
        ucar.nc2.dt.radial.RadialCoordSys r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.dt.radial.RadialCoordSys;

        $r1 = r0.<ucar.nc2.dt.radial.RadialCoordSys: java.lang.String name>;

        return $r1;
    }

    public java.util.List getCoordAxes()
    {
        ucar.nc2.dt.radial.RadialCoordSys r0;
        java.util.ArrayList $r1;

        r0 := @this: ucar.nc2.dt.radial.RadialCoordSys;

        $r1 = r0.<ucar.nc2.dt.radial.RadialCoordSys: java.util.ArrayList coordAxes>;

        return $r1;
    }

    public ucar.nc2.dataset.CoordinateAxis getAzimuthAxis()
    {
        ucar.nc2.dataset.CoordinateAxis $r1;
        ucar.nc2.dt.radial.RadialCoordSys r0;

        r0 := @this: ucar.nc2.dt.radial.RadialCoordSys;

        $r1 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis aziAxis>;

        return $r1;
    }

    public ucar.nc2.dataset.CoordinateAxis getElevationAxis()
    {
        ucar.nc2.dataset.CoordinateAxis $r1;
        ucar.nc2.dt.radial.RadialCoordSys r0;

        r0 := @this: ucar.nc2.dt.radial.RadialCoordSys;

        $r1 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis elevAxis>;

        return $r1;
    }

    public ucar.nc2.dataset.CoordinateAxis getRadialAxis()
    {
        ucar.nc2.dataset.CoordinateAxis $r1;
        ucar.nc2.dt.radial.RadialCoordSys r0;

        r0 := @this: ucar.nc2.dt.radial.RadialCoordSys;

        $r1 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis radialAxis>;

        return $r1;
    }

    public ucar.nc2.dataset.CoordinateAxis getTimeAxis()
    {
        ucar.nc2.dataset.CoordinateAxis $r1;
        ucar.nc2.dt.radial.RadialCoordSys r0;

        r0 := @this: ucar.nc2.dt.radial.RadialCoordSys;

        $r1 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis timeAxis>;

        return $r1;
    }

    public ucar.ma2.Array getAzimuthAxisDataCached() throws java.io.IOException
    {
        ucar.nc2.dataset.CoordinateAxis $r3;
        ucar.nc2.dt.radial.RadialCoordSys r0;
        ucar.ma2.Array $r1, $r2, $r4;

        r0 := @this: ucar.nc2.dt.radial.RadialCoordSys;

        $r1 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.ma2.Array aziData>;

        if $r1 != null goto label1;

        $r3 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis aziAxis>;

        $r4 = virtualinvoke $r3.<ucar.nc2.dataset.CoordinateAxis: ucar.ma2.Array read()>();

        r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.ma2.Array aziData> = $r4;

     label1:
        $r2 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.ma2.Array aziData>;

        return $r2;
    }

    public ucar.ma2.Array getElevationAxisDataCached() throws java.io.IOException
    {
        ucar.nc2.dataset.CoordinateAxis $r3;
        ucar.nc2.dt.radial.RadialCoordSys r0;
        ucar.ma2.Array $r1, $r2, $r4;

        r0 := @this: ucar.nc2.dt.radial.RadialCoordSys;

        $r1 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.ma2.Array elevData>;

        if $r1 != null goto label1;

        $r3 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis elevAxis>;

        $r4 = virtualinvoke $r3.<ucar.nc2.dataset.CoordinateAxis: ucar.ma2.Array read()>();

        r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.ma2.Array elevData> = $r4;

     label1:
        $r2 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.ma2.Array elevData>;

        return $r2;
    }

    public ucar.ma2.Array getRadialAxisDataCached() throws java.io.IOException
    {
        ucar.nc2.dataset.CoordinateAxis $r3;
        ucar.nc2.dt.radial.RadialCoordSys r0;
        ucar.ma2.Array $r1, $r2, $r4;

        r0 := @this: ucar.nc2.dt.radial.RadialCoordSys;

        $r1 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.ma2.Array radialData>;

        if $r1 != null goto label1;

        $r3 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis radialAxis>;

        $r4 = virtualinvoke $r3.<ucar.nc2.dataset.CoordinateAxis: ucar.ma2.Array read()>();

        r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.ma2.Array radialData> = $r4;

     label1:
        $r2 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.ma2.Array radialData>;

        return $r2;
    }

    public ucar.ma2.Array getTimeAxisDataCached() throws java.io.IOException
    {
        ucar.nc2.dataset.CoordinateAxis $r3;
        ucar.nc2.dt.radial.RadialCoordSys r0;
        ucar.ma2.Array $r1, $r2, $r4;

        r0 := @this: ucar.nc2.dt.radial.RadialCoordSys;

        $r1 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.ma2.Array timeData>;

        if $r1 != null goto label1;

        $r3 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis timeAxis>;

        $r4 = virtualinvoke $r3.<ucar.nc2.dataset.CoordinateAxis: ucar.ma2.Array read()>();

        r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.ma2.Array timeData> = $r4;

     label1:
        $r2 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.ma2.Array timeData>;

        return $r2;
    }

    public ucar.unidata.geoloc.EarthLocation getOrigin()
    {
        ucar.nc2.dt.radial.RadialCoordSys r0;
        ucar.unidata.geoloc.EarthLocation $r1;

        r0 := @this: ucar.nc2.dt.radial.RadialCoordSys;

        $r1 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.unidata.geoloc.EarthLocation origin>;

        return $r1;
    }

    public void setOrigin(ucar.unidata.geoloc.EarthLocation)
    {
        ucar.nc2.dt.radial.RadialCoordSys r0;
        ucar.unidata.geoloc.EarthLocation r1;

        r0 := @this: ucar.nc2.dt.radial.RadialCoordSys;

        r1 := @parameter0: ucar.unidata.geoloc.EarthLocation;

        r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.unidata.geoloc.EarthLocation origin> = r1;

        return;
    }

    public double getMaximumRadial()
    {
        java.io.IOException $r7;
        java.lang.IllegalArgumentException $r6;
        ucar.ma2.Array $r1;
        ucar.nc2.dataset.CoordinateAxis $r2;
        ucar.nc2.dt.radial.RadialCoordSys r0;
        byte $b0;
        ucar.nc2.units.SimpleUnit $r4, $r5;
        java.lang.String $r3;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: ucar.nc2.dt.radial.RadialCoordSys;

        $d0 = r0.<ucar.nc2.dt.radial.RadialCoordSys: double maxRadial>;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label5;

     label1:
        $r1 = virtualinvoke r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.ma2.Array getRadialAxisDataCached()>();

        $d1 = staticinvoke <ucar.ma2.MAMath: double getMaximum(ucar.ma2.Array)>($r1);

        r0.<ucar.nc2.dt.radial.RadialCoordSys: double maxRadial> = $d1;

        $r2 = virtualinvoke r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis getRadialAxis()>();

        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getUnitsString()>();

        $r4 = staticinvoke <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit factory(java.lang.String)>($r3);

        $d2 = r0.<ucar.nc2.dt.radial.RadialCoordSys: double maxRadial>;

        $r5 = <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit kmUnit>;

        $d3 = virtualinvoke $r4.<ucar.nc2.units.SimpleUnit: double convertTo(double,ucar.nc2.units.SimpleUnit)>($d2, $r5);

        r0.<ucar.nc2.dt.radial.RadialCoordSys: double maxRadial> = $d3;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.io.IOException: void printStackTrace()>();

        goto label5;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.IllegalArgumentException: void printStackTrace()>();

     label5:
        $d4 = r0.<ucar.nc2.dt.radial.RadialCoordSys: double maxRadial>;

        return $d4;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
    }

    public ucar.unidata.geoloc.LatLonRect getBoundingBox()
    {
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7, $d8, $d9, d10, $d11, $d12, d13;
        ucar.nc2.dt.radial.RadialCoordSys r0;
        ucar.unidata.geoloc.LatLonRect $r1, $r6, $r8, $r9;
        ucar.unidata.geoloc.EarthLocation $r2, $r3, $r4, $r5;
        ucar.unidata.geoloc.LatLonPointImpl $r7;

        r0 := @this: ucar.nc2.dt.radial.RadialCoordSys;

        $r1 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.unidata.geoloc.LatLonRect bb>;

        if $r1 == null goto label1;

        $r9 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.unidata.geoloc.LatLonRect bb>;

        return $r9;

     label1:
        $r2 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.unidata.geoloc.EarthLocation origin>;

        if $r2 != null goto label2;

        return null;

     label2:
        $d0 = virtualinvoke r0.<ucar.nc2.dt.radial.RadialCoordSys: double getMaximumRadial()>();

        $d1 = staticinvoke <ucar.unidata.geoloc.Earth: double getRadius()>();

        $d2 = $d0 / $d1;

        $d3 = staticinvoke <java.lang.Math: double toDegrees(double)>($d2);

        $r3 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.unidata.geoloc.EarthLocation origin>;

        $d4 = interfaceinvoke $r3.<ucar.unidata.geoloc.EarthLocation: double getLatitude()>();

        $d5 = staticinvoke <java.lang.Math: double toRadians(double)>($d4);

        $d6 = staticinvoke <java.lang.Math: double cos(double)>($d5);

        d7 = $d3 * $d6;

        $r4 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.unidata.geoloc.EarthLocation origin>;

        $d8 = interfaceinvoke $r4.<ucar.unidata.geoloc.EarthLocation: double getLatitude()>();

        $d9 = $d3 / 2.0;

        d10 = $d8 - $d9;

        $r5 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.unidata.geoloc.EarthLocation origin>;

        $d11 = interfaceinvoke $r5.<ucar.unidata.geoloc.EarthLocation: double getLongitude()>();

        $d12 = d7 / 2.0;

        d13 = $d11 - $d12;

        $r6 = new ucar.unidata.geoloc.LatLonRect;

        $r7 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(d10, d13);

        specialinvoke $r6.<ucar.unidata.geoloc.LatLonRect: void <init>(ucar.unidata.geoloc.LatLonPoint,double,double)>($r7, $d3, d7);

        r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.unidata.geoloc.LatLonRect bb> = $r6;

        $r8 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.unidata.geoloc.LatLonRect bb>;

        return $r8;
    }

    public ucar.nc2.units.DateUnit getTimeUnits() throws java.lang.Exception
    {
        ucar.nc2.dataset.CoordinateAxis $r4;
        ucar.nc2.dt.radial.RadialCoordSys r0;
        ucar.nc2.units.DateUnit $r1, $r2, $r3;
        java.lang.String $r5;

        r0 := @this: ucar.nc2.dt.radial.RadialCoordSys;

        $r1 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.units.DateUnit dateUnit>;

        if null != $r1 goto label1;

        $r3 = new ucar.nc2.units.DateUnit;

        $r4 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.dataset.CoordinateAxis timeAxis>;

        $r5 = virtualinvoke $r4.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getUnitsString()>();

        specialinvoke $r3.<ucar.nc2.units.DateUnit: void <init>(java.lang.String)>($r5);

        r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.units.DateUnit dateUnit> = $r3;

     label1:
        $r2 = r0.<ucar.nc2.dt.radial.RadialCoordSys: ucar.nc2.units.DateUnit dateUnit>;

        return $r2;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r1;
        java.lang.String[] r5;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.lang.String $r4;
        double $d0, $d1, $d2;

        r5 := @parameter0: java.lang.String[];

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1 Deg=");

        $d0 = staticinvoke <ucar.unidata.geoloc.Earth: double getRadius()>();

        $d1 = 111000.0 / $d0;

        $d2 = staticinvoke <java.lang.Math: double toDegrees(double)>($d1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4);

        return;
    }
}
