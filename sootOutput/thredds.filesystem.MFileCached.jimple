class thredds.filesystem.MFileCached extends java.lang.Object implements thredds.inventory.MFile
{
    private final java.lang.String parentDirName;
    private final thredds.filesystem.CacheFile cfile;
    private java.lang.Object auxInfo;

    void <init>(java.lang.String, thredds.filesystem.CacheFile)
    {
        thredds.filesystem.CacheFile r2;
        thredds.filesystem.MFileCached r0;
        java.lang.String r1;

        r0 := @this: thredds.filesystem.MFileCached;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: thredds.filesystem.CacheFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.filesystem.MFileCached: java.lang.String parentDirName> = r1;

        r0.<thredds.filesystem.MFileCached: thredds.filesystem.CacheFile cfile> = r2;

        return;
    }

    public long getLastModified()
    {
        thredds.filesystem.CacheFile $r1;
        thredds.filesystem.MFileCached r0;
        long $l0;

        r0 := @this: thredds.filesystem.MFileCached;

        $r1 = r0.<thredds.filesystem.MFileCached: thredds.filesystem.CacheFile cfile>;

        $l0 = $r1.<thredds.filesystem.CacheFile: long lastModified>;

        return $l0;
    }

    public long getLength()
    {
        thredds.filesystem.CacheFile $r1;
        thredds.filesystem.MFileCached r0;
        long $l0;

        r0 := @this: thredds.filesystem.MFileCached;

        $r1 = r0.<thredds.filesystem.MFileCached: thredds.filesystem.CacheFile cfile>;

        $l0 = $r1.<thredds.filesystem.CacheFile: long length>;

        return $l0;
    }

    public boolean isDirectory()
    {
        thredds.filesystem.CacheFile $r1;
        thredds.filesystem.MFileCached r0;
        boolean $z0;

        r0 := @this: thredds.filesystem.MFileCached;

        $r1 = r0.<thredds.filesystem.MFileCached: thredds.filesystem.CacheFile cfile>;

        $z0 = $r1.<thredds.filesystem.CacheFile: boolean isDirectory>;

        return $z0;
    }

    public java.lang.String getPath()
    {
        thredds.filesystem.MFileCached r1;
        thredds.filesystem.CacheFile $r5;
        java.lang.StringBuilder $r0, $r3, $r4, $r7;
        java.lang.String $r2, $r6, $r8;

        r1 := @this: thredds.filesystem.MFileCached;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<thredds.filesystem.MFileCached: java.lang.String parentDirName>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = r1.<thredds.filesystem.MFileCached: thredds.filesystem.CacheFile cfile>;

        $r6 = virtualinvoke $r5.<thredds.filesystem.CacheFile: java.lang.String getShortName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public java.lang.String getName()
    {
        thredds.filesystem.CacheFile $r1;
        thredds.filesystem.MFileCached r0;
        java.lang.String $r2;

        r0 := @this: thredds.filesystem.MFileCached;

        $r1 = r0.<thredds.filesystem.MFileCached: thredds.filesystem.CacheFile cfile>;

        $r2 = virtualinvoke $r1.<thredds.filesystem.CacheFile: java.lang.String getShortName()>();

        return $r2;
    }

    public int compareTo(thredds.inventory.MFile)
    {
        thredds.inventory.MFile r2;
        int $i0;
        thredds.filesystem.MFileCached r0;
        java.lang.String $r1, $r3;

        r0 := @this: thredds.filesystem.MFileCached;

        r2 := @parameter0: thredds.inventory.MFile;

        $r1 = virtualinvoke r0.<thredds.filesystem.MFileCached: java.lang.String getPath()>();

        $r3 = interfaceinvoke r2.<thredds.inventory.MFile: java.lang.String getPath()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }

    public java.lang.Object getAuxInfo()
    {
        thredds.filesystem.MFileCached r0;
        java.lang.Object $r1;

        r0 := @this: thredds.filesystem.MFileCached;

        $r1 = r0.<thredds.filesystem.MFileCached: java.lang.Object auxInfo>;

        return $r1;
    }

    public void setAuxInfo(java.lang.Object)
    {
        thredds.filesystem.MFileCached r0;
        java.lang.Object r1;

        r0 := @this: thredds.filesystem.MFileCached;

        r1 := @parameter0: java.lang.Object;

        r0.<thredds.filesystem.MFileCached: java.lang.Object auxInfo> = r1;

        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        thredds.inventory.MFile $r2;
        int $i0;
        thredds.filesystem.MFileCached r0;
        java.lang.Object r1;

        r0 := @this: thredds.filesystem.MFileCached;

        r1 := @parameter0: java.lang.Object;

        $r2 = (thredds.inventory.MFile) r1;

        $i0 = virtualinvoke r0.<thredds.filesystem.MFileCached: int compareTo(thredds.inventory.MFile)>($r2);

        return $i0;
    }
}
