public abstract class org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator extends org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator
{
    private org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper advisorRetrievalHelper;

    public void <init>()
    {
        org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator;

        specialinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: void <init>()>();

        return;
    }

    public void setBeanFactory(org.springframework.beans.factory.BeanFactory)
    {
        java.lang.IllegalStateException $r3;
        org.springframework.beans.factory.BeanFactory r1;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r2;
        org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator r0;
        boolean $z0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator;

        r1 := @parameter0: org.springframework.beans.factory.BeanFactory;

        specialinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: void setBeanFactory(org.springframework.beans.factory.BeanFactory)>(r1);

        $z0 = r1 instanceof org.springframework.beans.factory.config.ConfigurableListableBeanFactory;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot use AdvisorAutoProxyCreator without a ConfigurableListableBeanFactory");

        throw $r3;

     label1:
        $r2 = (org.springframework.beans.factory.config.ConfigurableListableBeanFactory) r1;

        virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator: void initBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>($r2);

        return;
    }

    protected void initBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
    {
        org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator$BeanFactoryAdvisorRetrievalHelperAdapter $r1;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory r2;
        org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator;

        r2 := @parameter0: org.springframework.beans.factory.config.ConfigurableListableBeanFactory;

        $r1 = new org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator$BeanFactoryAdvisorRetrievalHelperAdapter;

        specialinvoke $r1.<org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator$BeanFactoryAdvisorRetrievalHelperAdapter: void <init>(org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>(r0, r2);

        r0.<org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator: org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper advisorRetrievalHelper> = $r1;

        return;
    }

    protected java.lang.Object[] getAdvicesAndAdvisorsForBean(java.lang.Class, java.lang.String, org.springframework.aop.TargetSource)
    {
        java.lang.Object[] $r4, $r5;
        org.springframework.aop.TargetSource r6;
        org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator r0;
        java.util.List $r3;
        java.lang.Class r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r6 := @parameter2: org.springframework.aop.TargetSource;

        $r3 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator: java.util.List findEligibleAdvisors(java.lang.Class,java.lang.String)>(r1, r2);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r5 = <org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator: java.lang.Object[] DO_NOT_PROXY>;

        return $r5;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray()>();

        return $r4;
    }

    protected java.util.List findEligibleAdvisors(java.lang.Class, java.lang.String)
    {
        java.util.List $r1, $r4, r5;
        java.lang.Class r2;
        java.lang.String r3;
        org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator r0;
        boolean $z0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator: java.util.List findCandidateAdvisors()>();

        $r4 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator: java.util.List findAdvisorsThatCanApply(java.util.List,java.lang.Class,java.lang.String)>($r1, r2, r3);

        r5 = $r4;

        virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator: void extendAdvisors(java.util.List)>($r4);

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        r5 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator: java.util.List sortAdvisors(java.util.List)>($r4);

     label1:
        return r5;
    }

    protected java.util.List findCandidateAdvisors()
    {
        org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper $r1;
        java.util.List $r2;
        org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator;

        $r1 = r0.<org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator: org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper advisorRetrievalHelper>;

        $r2 = virtualinvoke $r1.<org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper: java.util.List findAdvisorBeans()>();

        return $r2;
    }

    protected java.util.List findAdvisorsThatCanApply(java.util.List, java.lang.Class, java.lang.String)
    {
        java.lang.Throwable $r4;
        java.util.List r1, $r3;
        java.lang.Class r2;
        java.lang.String r0;
        org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator r5;

        r5 := @this: org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.Class;

        r0 := @parameter2: java.lang.String;

        staticinvoke <org.springframework.aop.framework.autoproxy.ProxyCreationContext: void setCurrentProxiedBeanName(java.lang.String)>(r0);

     label1:
        $r3 = staticinvoke <org.springframework.aop.support.AopUtils: java.util.List findAdvisorsThatCanApply(java.util.List,java.lang.Class)>(r1, r2);

     label2:
        staticinvoke <org.springframework.aop.framework.autoproxy.ProxyCreationContext: void setCurrentProxiedBeanName(java.lang.String)>(null);

        return $r3;

     label3:
        $r4 := @caughtexception;

        staticinvoke <org.springframework.aop.framework.autoproxy.ProxyCreationContext: void setCurrentProxiedBeanName(java.lang.String)>(null);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected boolean isEligibleAdvisorBean(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator;

        r1 := @parameter0: java.lang.String;

        return 1;
    }

    protected java.util.List sortAdvisors(java.util.List)
    {
        java.util.List r0;
        org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator r1;

        r1 := @this: org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator;

        r0 := @parameter0: java.util.List;

        staticinvoke <org.springframework.core.OrderComparator: void sort(java.util.List)>(r0);

        return r0;
    }

    protected void extendAdvisors(java.util.List)
    {
        java.util.List r1;
        org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator;

        r1 := @parameter0: java.util.List;

        return;
    }

    protected boolean advisorsPreFiltered()
    {
        org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator;

        return 1;
    }
}
