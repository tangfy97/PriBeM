public class org.apache.cxf.clustering.FailoverTargetSelector$InvocationKey extends java.lang.Object
{
    private org.apache.cxf.message.Exchange exchange;

    void <init>(org.apache.cxf.message.Exchange)
    {
        org.apache.cxf.clustering.FailoverTargetSelector$InvocationKey r0;
        org.apache.cxf.message.Exchange r1;

        r0 := @this: org.apache.cxf.clustering.FailoverTargetSelector$InvocationKey;

        r1 := @parameter0: org.apache.cxf.message.Exchange;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.clustering.FailoverTargetSelector$InvocationKey: org.apache.cxf.message.Exchange exchange> = r1;

        return;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.cxf.clustering.FailoverTargetSelector$InvocationKey r0;
        org.apache.cxf.message.Exchange $r1;

        r0 := @this: org.apache.cxf.clustering.FailoverTargetSelector$InvocationKey;

        $r1 = r0.<org.apache.cxf.clustering.FailoverTargetSelector$InvocationKey: org.apache.cxf.message.Exchange exchange>;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.cxf.clustering.FailoverTargetSelector$InvocationKey r1, $r2;
        java.lang.Object r0;
        org.apache.cxf.message.Exchange $r3, $r4;
        boolean $z0, $z1;

        r1 := @this: org.apache.cxf.clustering.FailoverTargetSelector$InvocationKey;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.cxf.clustering.FailoverTargetSelector$InvocationKey;

        if $z0 == 0 goto label1;

        $r4 = r1.<org.apache.cxf.clustering.FailoverTargetSelector$InvocationKey: org.apache.cxf.message.Exchange exchange>;

        $r2 = (org.apache.cxf.clustering.FailoverTargetSelector$InvocationKey) r0;

        $r3 = $r2.<org.apache.cxf.clustering.FailoverTargetSelector$InvocationKey: org.apache.cxf.message.Exchange exchange>;

        if $r4 != $r3 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }
}
