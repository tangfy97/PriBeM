public class org.springframework.beans.factory.support.SimpleAutowireCandidateResolver extends java.lang.Object implements org.springframework.beans.factory.support.AutowireCandidateResolver
{

    public void <init>()
    {
        org.springframework.beans.factory.support.SimpleAutowireCandidateResolver r0;

        r0 := @this: org.springframework.beans.factory.support.SimpleAutowireCandidateResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isAutowireCandidate(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.config.DependencyDescriptor)
    {
        org.springframework.beans.factory.config.BeanDefinitionHolder r0;
        org.springframework.beans.factory.support.SimpleAutowireCandidateResolver r2;
        org.springframework.beans.factory.config.BeanDefinition $r1;
        org.springframework.beans.factory.config.DependencyDescriptor r3;
        boolean $z0;

        r2 := @this: org.springframework.beans.factory.support.SimpleAutowireCandidateResolver;

        r0 := @parameter0: org.springframework.beans.factory.config.BeanDefinitionHolder;

        r3 := @parameter1: org.springframework.beans.factory.config.DependencyDescriptor;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.config.BeanDefinitionHolder: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition()>();

        $z0 = interfaceinvoke $r1.<org.springframework.beans.factory.config.BeanDefinition: boolean isAutowireCandidate()>();

        return $z0;
    }

    public java.lang.Object getSuggestedValue(org.springframework.beans.factory.config.DependencyDescriptor)
    {
        org.springframework.beans.factory.support.SimpleAutowireCandidateResolver r0;
        org.springframework.beans.factory.config.DependencyDescriptor r1;

        r0 := @this: org.springframework.beans.factory.support.SimpleAutowireCandidateResolver;

        r1 := @parameter0: org.springframework.beans.factory.config.DependencyDescriptor;

        return null;
    }
}
