public class org.dom4j.util.SimpleSingleton extends java.lang.Object implements org.dom4j.util.SingletonStrategy
{
    private java.lang.String singletonClassName;
    private java.lang.Object singletonInstance;

    public void <init>()
    {
        org.dom4j.util.SimpleSingleton r0;

        r0 := @this: org.dom4j.util.SimpleSingleton;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.util.SimpleSingleton: java.lang.String singletonClassName> = null;

        r0.<org.dom4j.util.SimpleSingleton: java.lang.Object singletonInstance> = null;

        return;
    }

    public java.lang.Object instance()
    {
        java.lang.Object $r1;
        org.dom4j.util.SimpleSingleton r0;

        r0 := @this: org.dom4j.util.SimpleSingleton;

        $r1 = r0.<org.dom4j.util.SimpleSingleton: java.lang.Object singletonInstance>;

        return $r1;
    }

    public void reset()
    {
        java.lang.Exception $r7, $r8;
        org.dom4j.util.SimpleSingleton r0;
        java.lang.Thread $r2;
        java.lang.Class $r5, $r10;
        java.lang.Object $r6, $r11;
        java.lang.String $r1, $r4, $r9;
        java.lang.ClassLoader $r3;

        r0 := @this: org.dom4j.util.SimpleSingleton;

        $r1 = r0.<org.dom4j.util.SimpleSingleton: java.lang.String singletonClassName>;

        if $r1 == null goto label7;

     label1:
        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = virtualinvoke $r2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r4 = r0.<org.dom4j.util.SimpleSingleton: java.lang.String singletonClassName>;

        $r5 = virtualinvoke $r3.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Object newInstance()>();

        r0.<org.dom4j.util.SimpleSingleton: java.lang.Object singletonInstance> = $r6;

     label2:
        goto label7;

     label3:
        $r8 := @caughtexception;

     label4:
        $r9 = r0.<org.dom4j.util.SimpleSingleton: java.lang.String singletonClassName>;

        $r10 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.Object newInstance()>();

        r0.<org.dom4j.util.SimpleSingleton: java.lang.Object singletonInstance> = $r11;

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

     label7:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public void setSingletonClassName(java.lang.String)
    {
        java.lang.String r1;
        org.dom4j.util.SimpleSingleton r0;

        r0 := @this: org.dom4j.util.SimpleSingleton;

        r1 := @parameter0: java.lang.String;

        r0.<org.dom4j.util.SimpleSingleton: java.lang.String singletonClassName> = r1;

        virtualinvoke r0.<org.dom4j.util.SimpleSingleton: void reset()>();

        return;
    }
}
