class org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$StringNullComparator extends java.lang.Object implements java.util.Comparator
{
    final org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator this$1;

    void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$StringNullComparator r0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator r1;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$StringNullComparator;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$StringNullComparator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.String, java.lang.String)
    {
        int $i0, $i2;
        java.lang.String r0, r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$StringNullComparator r2;

        r2 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$StringNullComparator;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != r1 goto label1;

        return 0;

     label1:
        if r0 != null goto label2;

        $i2 = (int) -1;

        return $i2;

     label2:
        if r1 != null goto label3;

        return 1;

     label3:
        $i0 = virtualinvoke r0.<java.lang.String: int compareTo(java.lang.String)>(r1);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object r1, r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$StringNullComparator r0;
        java.lang.String $r3, $r4;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$StringNullComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) r1;

        $r3 = (java.lang.String) r2;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AnnotationBoundaryGenerator$StringNullComparator: int compare(java.lang.String,java.lang.String)>($r4, $r3);

        return $i0;
    }
}
