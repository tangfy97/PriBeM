public class org.apache.lucene.search.ConstantScoreQuery$ConstantScorer extends org.apache.lucene.search.Scorer
{
    final org.apache.lucene.search.DocIdSetIterator docIdSetIterator;
    final float theScore;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.search.ConstantScoreQuery this$0;

    public void <init>(org.apache.lucene.search.ConstantScoreQuery, org.apache.lucene.search.DocIdSetIterator, org.apache.lucene.search.Weight, float)
    {
        org.apache.lucene.search.ConstantScoreQuery r1;
        org.apache.lucene.search.Weight r2;
        float f0;
        org.apache.lucene.search.ConstantScoreQuery$ConstantScorer r0;
        org.apache.lucene.search.DocIdSetIterator r3;

        r0 := @this: org.apache.lucene.search.ConstantScoreQuery$ConstantScorer;

        r1 := @parameter0: org.apache.lucene.search.ConstantScoreQuery;

        r3 := @parameter1: org.apache.lucene.search.DocIdSetIterator;

        r2 := @parameter2: org.apache.lucene.search.Weight;

        f0 := @parameter3: float;

        r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: org.apache.lucene.search.ConstantScoreQuery this$0> = r1;

        specialinvoke r0.<org.apache.lucene.search.Scorer: void <init>(org.apache.lucene.search.Weight)>(r2);

        r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: float theScore> = f0;

        r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: org.apache.lucene.search.DocIdSetIterator docIdSetIterator> = r3;

        return;
    }

    public int nextDoc() throws java.io.IOException
    {
        int $i0;
        org.apache.lucene.search.ConstantScoreQuery$ConstantScorer r0;
        org.apache.lucene.search.DocIdSetIterator $r1;

        r0 := @this: org.apache.lucene.search.ConstantScoreQuery$ConstantScorer;

        $r1 = r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: org.apache.lucene.search.DocIdSetIterator docIdSetIterator>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.search.DocIdSetIterator: int nextDoc()>();

        return $i0;
    }

    public int docID()
    {
        int $i0;
        org.apache.lucene.search.ConstantScoreQuery$ConstantScorer r0;
        org.apache.lucene.search.DocIdSetIterator $r1;

        r0 := @this: org.apache.lucene.search.ConstantScoreQuery$ConstantScorer;

        $r1 = r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: org.apache.lucene.search.DocIdSetIterator docIdSetIterator>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.search.DocIdSetIterator: int docID()>();

        return $i0;
    }

    public float score() throws java.io.IOException
    {
        int $i0;
        float $f0;
        java.lang.AssertionError $r2;
        org.apache.lucene.search.ConstantScoreQuery$ConstantScorer r0;
        boolean $z0;
        org.apache.lucene.search.DocIdSetIterator $r1;

        r0 := @this: org.apache.lucene.search.ConstantScoreQuery$ConstantScorer;

        $z0 = <org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: org.apache.lucene.search.DocIdSetIterator docIdSetIterator>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.search.DocIdSetIterator: int docID()>();

        if $i0 != 2147483647 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $f0 = r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: float theScore>;

        return $f0;
    }

    public int freq() throws java.io.IOException
    {
        org.apache.lucene.search.ConstantScoreQuery$ConstantScorer r0;

        r0 := @this: org.apache.lucene.search.ConstantScoreQuery$ConstantScorer;

        return 1;
    }

    public int advance(int) throws java.io.IOException
    {
        int i0, $i1;
        org.apache.lucene.search.ConstantScoreQuery$ConstantScorer r0;
        org.apache.lucene.search.DocIdSetIterator $r1;

        r0 := @this: org.apache.lucene.search.ConstantScoreQuery$ConstantScorer;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: org.apache.lucene.search.DocIdSetIterator docIdSetIterator>;

        $i1 = virtualinvoke $r1.<org.apache.lucene.search.DocIdSetIterator: int advance(int)>(i0);

        return $i1;
    }

    public long cost()
    {
        long $l0;
        org.apache.lucene.search.ConstantScoreQuery$ConstantScorer r0;
        org.apache.lucene.search.DocIdSetIterator $r1;

        r0 := @this: org.apache.lucene.search.ConstantScoreQuery$ConstantScorer;

        $r1 = r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: org.apache.lucene.search.DocIdSetIterator docIdSetIterator>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.search.DocIdSetIterator: long cost()>();

        return $l0;
    }

    private org.apache.lucene.search.Collector wrapCollector(org.apache.lucene.search.Collector)
    {
        org.apache.lucene.search.ConstantScoreQuery$ConstantScorer$1 $r0;
        org.apache.lucene.search.Collector r2;
        org.apache.lucene.search.ConstantScoreQuery$ConstantScorer r1;

        r1 := @this: org.apache.lucene.search.ConstantScoreQuery$ConstantScorer;

        r2 := @parameter0: org.apache.lucene.search.Collector;

        $r0 = new org.apache.lucene.search.ConstantScoreQuery$ConstantScorer$1;

        specialinvoke $r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer$1: void <init>(org.apache.lucene.search.ConstantScoreQuery$ConstantScorer,org.apache.lucene.search.Collector)>(r1, r2);

        return $r0;
    }

    public void score(org.apache.lucene.search.Collector) throws java.io.IOException
    {
        org.apache.lucene.search.Scorer $r4;
        org.apache.lucene.search.Collector r2, $r5;
        org.apache.lucene.search.ConstantScoreQuery$ConstantScorer r0;
        org.apache.lucene.search.DocIdSetIterator $r1, $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.ConstantScoreQuery$ConstantScorer;

        r2 := @parameter0: org.apache.lucene.search.Collector;

        $r1 = r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: org.apache.lucene.search.DocIdSetIterator docIdSetIterator>;

        $z0 = $r1 instanceof org.apache.lucene.search.Scorer;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: org.apache.lucene.search.DocIdSetIterator docIdSetIterator>;

        $r4 = (org.apache.lucene.search.Scorer) $r3;

        $r5 = specialinvoke r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: org.apache.lucene.search.Collector wrapCollector(org.apache.lucene.search.Collector)>(r2);

        virtualinvoke $r4.<org.apache.lucene.search.Scorer: void score(org.apache.lucene.search.Collector)>($r5);

        goto label2;

     label1:
        specialinvoke r0.<org.apache.lucene.search.Scorer: void score(org.apache.lucene.search.Collector)>(r2);

     label2:
        return;
    }

    public boolean score(org.apache.lucene.search.Collector, int, int) throws java.io.IOException
    {
        org.apache.lucene.search.Scorer $r4;
        org.apache.lucene.search.Collector r2, $r5;
        int i0, i1;
        org.apache.lucene.search.ConstantScoreQuery$ConstantScorer r0;
        org.apache.lucene.search.DocIdSetIterator $r1, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.search.ConstantScoreQuery$ConstantScorer;

        r2 := @parameter0: org.apache.lucene.search.Collector;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: org.apache.lucene.search.DocIdSetIterator docIdSetIterator>;

        $z0 = $r1 instanceof org.apache.lucene.search.Scorer;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: org.apache.lucene.search.DocIdSetIterator docIdSetIterator>;

        $r4 = (org.apache.lucene.search.Scorer) $r3;

        $r5 = specialinvoke r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: org.apache.lucene.search.Collector wrapCollector(org.apache.lucene.search.Collector)>(r2);

        $z2 = virtualinvoke $r4.<org.apache.lucene.search.Scorer: boolean score(org.apache.lucene.search.Collector,int,int)>($r5, i0, i1);

        return $z2;

     label1:
        $z1 = specialinvoke r0.<org.apache.lucene.search.Scorer: boolean score(org.apache.lucene.search.Collector,int,int)>(r2, i0, i1);

        return $z1;
    }

    public java.util.Collection getChildren()
    {
        org.apache.lucene.search.Scorer $r5;
        org.apache.lucene.search.Scorer$ChildScorer $r3;
        java.util.List $r2, $r6;
        org.apache.lucene.search.ConstantScoreQuery$ConstantScorer r0;
        org.apache.lucene.search.DocIdSetIterator $r1, $r4;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.ConstantScoreQuery$ConstantScorer;

        $r1 = r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: org.apache.lucene.search.DocIdSetIterator docIdSetIterator>;

        $z0 = $r1 instanceof org.apache.lucene.search.Scorer;

        if $z0 == 0 goto label1;

        $r3 = new org.apache.lucene.search.Scorer$ChildScorer;

        $r4 = r0.<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: org.apache.lucene.search.DocIdSetIterator docIdSetIterator>;

        $r5 = (org.apache.lucene.search.Scorer) $r4;

        specialinvoke $r3.<org.apache.lucene.search.Scorer$ChildScorer: void <init>(org.apache.lucene.search.Scorer,java.lang.String)>($r5, "constant");

        $r6 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r3);

        return $r6;

     label1:
        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/ConstantScoreQuery;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: boolean $assertionsDisabled> = $z1;

        return;
    }
}
