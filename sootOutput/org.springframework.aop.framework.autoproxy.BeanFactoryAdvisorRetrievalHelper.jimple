public class org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper extends java.lang.Object
{
    private static final org.apache.commons.logging.Log logger;
    private final org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory;
    private java.lang.String[] cachedAdvisorBeanNames;

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/springframework/aop/framework/autoproxy/BeanFactoryAdvisorRetrievalHelper;");

        <org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper: org.apache.commons.logging.Log logger> = $r0;

        return;
    }

    public void <init>(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
    {
        org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper r0;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory r1;

        r0 := @this: org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper;

        r1 := @parameter0: org.springframework.beans.factory.config.ConfigurableListableBeanFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "ListableBeanFactory must not be null");

        r0.<org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory> = r1;

        return;
    }

    public java.util.List findAdvisorBeans()
    {
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r4, $r5, $r9, $r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r17, $r19, $r20, $r22;
        java.lang.Throwable $r12, $r24;
        java.lang.String[] r2, $r10, r25;
        org.springframework.beans.factory.BeanCreationException $r11, r13;
        org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper r0;
        int $i0, i1, i2;
        java.lang.String r3, $r15, $r21, $r23;
        java.util.LinkedList $r1, $r8;
        org.springframework.aop.Advisor $r7;
        java.lang.Object $r6;
        org.apache.commons.logging.Log $r16, $r18;

        r0 := @this: org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper;

        entermonitor r0;

     label01:
        r25 = r0.<org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper: java.lang.String[] cachedAdvisorBeanNames>;

        if r25 != null goto label02;

        $r9 = r0.<org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $r10 = staticinvoke <org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class,boolean,boolean)>($r9, class "Lorg/springframework/aop/Advisor;", 1, 0);

        r25 = $r10;

        r0.<org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper: java.lang.String[] cachedAdvisorBeanNames> = $r10;

     label02:
        exitmonitor r0;

     label03:
        goto label06;

     label04:
        $r24 := @caughtexception;

        exitmonitor r0;

     label05:
        throw $r24;

     label06:
        $i0 = lengthof r25;

        if $i0 != 0 goto label07;

        $r8 = new java.util.LinkedList;

        specialinvoke $r8.<java.util.LinkedList: void <init>()>();

        return $r8;

     label07:
        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r2 = r25;

        i1 = lengthof r25;

        i2 = 0;

        goto label14;

     label08:
        r3 = r2[i2];

        $z0 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper: boolean isEligibleBean(java.lang.String)>(r3);

        if $z0 == 0 goto label13;

        $r4 = r0.<org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $z1 = interfaceinvoke $r4.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: boolean isCurrentlyInCreation(java.lang.String)>(r3);

        if $z1 != 0 goto label13;

     label09:
        $r5 = r0.<org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $r6 = interfaceinvoke $r5.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>(r3, class "Lorg/springframework/aop/Advisor;");

        $r7 = (org.springframework.aop.Advisor) $r6;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r7);

     label10:
        goto label13;

     label11:
        $r11 := @caughtexception;

        $r12 = virtualinvoke $r11.<org.springframework.beans.factory.BeanCreationException: java.lang.Throwable getMostSpecificCause()>();

        $z2 = $r12 instanceof org.springframework.beans.factory.BeanCurrentlyInCreationException;

        if $z2 == 0 goto label12;

        r13 = (org.springframework.beans.factory.BeanCreationException) $r12;

        $r14 = r0.<org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper: org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory>;

        $r15 = virtualinvoke r13.<org.springframework.beans.factory.BeanCreationException: java.lang.String getBeanName()>();

        $z3 = interfaceinvoke $r14.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: boolean isCurrentlyInCreation(java.lang.String)>($r15);

        if $z3 == 0 goto label12;

        $r16 = <org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper: org.apache.commons.logging.Log logger>;

        $z4 = interfaceinvoke $r16.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label13;

        $r18 = <org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper: org.apache.commons.logging.Log logger>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Ignoring currently created advisor \'");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r21 = virtualinvoke $r11.<org.springframework.beans.factory.BeanCreationException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r23);

        goto label13;

     label12:
        throw $r11;

     label13:
        i2 = i2 + 1;

     label14:
        if i2 < i1 goto label08;

        return $r1;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch org.springframework.beans.factory.BeanCreationException from label09 to label10 with label11;
    }

    protected boolean isEligibleBean(java.lang.String)
    {
        org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper r0;
        java.lang.String r1;

        r0 := @this: org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper;

        r1 := @parameter0: java.lang.String;

        return 1;
    }
}
