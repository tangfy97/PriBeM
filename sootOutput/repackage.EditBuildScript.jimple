public class repackage.EditBuildScript extends java.lang.Object
{

    public void <init>()
    {
        repackage.EditBuildScript r0;

        r0 := @this: repackage.EditBuildScript;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0;
        java.lang.StringBuffer $r5, $r7, $r9, $r10, $r15, $r16, $r21, $r22;
        int $i0, $i2, $i3, $i5, $i6, i7, $i8;
        java.lang.String $r1, $r2, $r4, $r8, $r11, $r12, $r17;
        char $c1, $c4;
        java.lang.IllegalArgumentException $r19, $r23;
        java.io.File $r20;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 == 3 goto label1;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Wrong number of arguments");

        throw $r19;

     label1:
        $r1 = r0[0];

        $c1 = <java.io.File: char separatorChar>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(47, $c1);

        r0[0] = $r2;

        $r20 = new java.io.File;

        $r4 = r0[0];

        specialinvoke $r20.<java.io.File: void <init>(java.lang.String)>($r4);

        $r5 = staticinvoke <repackage.EditBuildScript: java.lang.StringBuffer readFile(java.io.File)>($r20);

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<property name=\"");

        $r8 = r0[1];

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" value=\"");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $i2 = virtualinvoke $r5.<java.lang.StringBuffer: int indexOf(java.lang.String)>($r11);

        if $i2 >= 0 goto label2;

        $r23 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can\'t find token: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r23;

     label2:
        $i3 = virtualinvoke $r11.<java.lang.String: int length()>();

        i7 = $i2 + $i3;

     label3:
        $c4 = virtualinvoke $r5.<java.lang.StringBuffer: char charAt(int)>(i7);

        $i8 = (int) $c4;

        if $i8 == 34 goto label4;

        i7 = i7 + 1;

        goto label3;

     label4:
        $i5 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i6 = $i2 + $i5;

        $r12 = r0[2];

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>($i6, i7, $r12);

        staticinvoke <repackage.EditBuildScript: void writeFile(java.io.File,java.lang.StringBuffer)>($r20, $r5);

        return;
    }

    static java.lang.StringBuffer readFile(java.io.File) throws java.io.IOException
    {
        java.lang.StringBuffer $r4;
        java.io.StringWriter $r3;
        java.io.FileInputStream $r0;
        java.io.InputStreamReader $r2;
        java.io.File r1;

        r1 := @parameter0: java.io.File;

        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

        $r3 = new java.io.StringWriter;

        specialinvoke $r3.<java.io.StringWriter: void <init>()>();

        staticinvoke <repackage.EditBuildScript: void copy(java.io.Reader,java.io.Writer)>($r2, $r3);

        virtualinvoke $r3.<java.io.StringWriter: void close()>();

        virtualinvoke $r2.<java.io.Reader: void close()>();

        virtualinvoke $r0.<java.io.InputStream: void close()>();

        $r4 = virtualinvoke $r3.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        return $r4;
    }

    static void writeFile(java.io.File, java.lang.StringBuffer) throws java.io.IOException
    {
        java.io.StringReader $r3;
        java.lang.StringBuffer r4;
        java.io.FileOutputStream $r0;
        java.io.OutputStreamWriter $r2;
        java.lang.String $r5;
        java.io.File r1;

        r1 := @parameter0: java.io.File;

        r4 := @parameter1: java.lang.StringBuffer;

        $r0 = new java.io.FileOutputStream;

        specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        $r2 = new java.io.OutputStreamWriter;

        specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r0);

        $r3 = new java.io.StringReader;

        $r5 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.io.StringReader: void <init>(java.lang.String)>($r5);

        staticinvoke <repackage.EditBuildScript: void copy(java.io.Reader,java.io.Writer)>($r3, $r2);

        virtualinvoke $r3.<java.io.Reader: void close()>();

        virtualinvoke $r2.<java.io.Writer: void close()>();

        virtualinvoke $r0.<java.io.OutputStream: void close()>();

        return;
    }

    static void copy(java.io.Reader, java.io.Writer) throws java.io.IOException
    {
        int $i0, $i1;
        java.io.Writer r2;
        char[] r0;
        java.io.Reader r1;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.io.Writer;

        r0 = newarray (char)[16384];

     label1:
        $i0 = lengthof r0;

        $i1 = virtualinvoke r1.<java.io.Reader: int read(char[],int,int)>(r0, 0, $i0);

        if $i1 >= 0 goto label2;

        goto label3;

     label2:
        virtualinvoke r2.<java.io.Writer: void write(char[],int,int)>(r0, 0, $i1);

        goto label1;

     label3:
        return;
    }
}
