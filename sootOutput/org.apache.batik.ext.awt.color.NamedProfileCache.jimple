public class org.apache.batik.ext.awt.color.NamedProfileCache extends org.apache.batik.util.SoftReferenceCache
{
    static org.apache.batik.ext.awt.color.NamedProfileCache theCache;

    public static org.apache.batik.ext.awt.color.NamedProfileCache getDefaultCache()
    {
        org.apache.batik.ext.awt.color.NamedProfileCache $r0;

        $r0 = <org.apache.batik.ext.awt.color.NamedProfileCache: org.apache.batik.ext.awt.color.NamedProfileCache theCache>;

        return $r0;
    }

    public void <init>()
    {
        org.apache.batik.ext.awt.color.NamedProfileCache r0;

        r0 := @this: org.apache.batik.ext.awt.color.NamedProfileCache;

        specialinvoke r0.<org.apache.batik.util.SoftReferenceCache: void <init>()>();

        return;
    }

    public synchronized boolean isPresent(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.ext.awt.color.NamedProfileCache r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.color.NamedProfileCache;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<org.apache.batik.util.SoftReferenceCache: boolean isPresentImpl(java.lang.Object)>(r1);

        return $z0;
    }

    public synchronized boolean isDone(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.ext.awt.color.NamedProfileCache r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.color.NamedProfileCache;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<org.apache.batik.util.SoftReferenceCache: boolean isDoneImpl(java.lang.Object)>(r1);

        return $z0;
    }

    public synchronized org.apache.batik.ext.awt.color.ICCColorSpaceExt request(java.lang.String)
    {
        org.apache.batik.ext.awt.color.NamedProfileCache r0;
        java.lang.Object $r2;
        java.lang.String r1;
        org.apache.batik.ext.awt.color.ICCColorSpaceExt $r3;

        r0 := @this: org.apache.batik.ext.awt.color.NamedProfileCache;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.batik.util.SoftReferenceCache: java.lang.Object requestImpl(java.lang.Object)>(r1);

        $r3 = (org.apache.batik.ext.awt.color.ICCColorSpaceExt) $r2;

        return $r3;
    }

    public synchronized void clear(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.ext.awt.color.NamedProfileCache r0;

        r0 := @this: org.apache.batik.ext.awt.color.NamedProfileCache;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.batik.util.SoftReferenceCache: void clearImpl(java.lang.Object)>(r1);

        return;
    }

    public synchronized void put(java.lang.String, org.apache.batik.ext.awt.color.ICCColorSpaceExt)
    {
        java.lang.String r1;
        org.apache.batik.ext.awt.color.ICCColorSpaceExt r2;
        org.apache.batik.ext.awt.color.NamedProfileCache r0;

        r0 := @this: org.apache.batik.ext.awt.color.NamedProfileCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.ext.awt.color.ICCColorSpaceExt;

        specialinvoke r0.<org.apache.batik.util.SoftReferenceCache: void putImpl(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    static void <clinit>()
    {
        org.apache.batik.ext.awt.color.NamedProfileCache $r0;

        $r0 = new org.apache.batik.ext.awt.color.NamedProfileCache;

        specialinvoke $r0.<org.apache.batik.ext.awt.color.NamedProfileCache: void <init>()>();

        <org.apache.batik.ext.awt.color.NamedProfileCache: org.apache.batik.ext.awt.color.NamedProfileCache theCache> = $r0;

        return;
    }
}
