public class org.jdom.input.SAXHandler extends org.xml.sax.helpers.DefaultHandler implements org.xml.sax.ext.LexicalHandler, org.xml.sax.ext.DeclHandler, org.xml.sax.DTDHandler
{
    private static final java.lang.String CVS_ID;
    private static final java.util.Map attrNameToTypeMap;
    private org.jdom.Document document;
    private org.jdom.Element currentElement;
    private boolean atRoot;
    private boolean inDTD;
    private boolean inInternalSubset;
    private boolean previousCDATA;
    private boolean inCDATA;
    private boolean expand;
    private boolean suppress;
    private int entityDepth;
    private java.util.List declaredNamespaces;
    private java.lang.StringBuffer internalSubset;
    private org.jdom.input.TextBuffer textBuffer;
    private java.util.Map externalEntities;
    private org.jdom.JDOMFactory factory;
    private boolean ignoringWhite;
    private org.xml.sax.Locator locator;

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.lang.Integer $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        java.util.Map $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20;

        <org.jdom.input.SAXHandler: java.lang.String CVS_ID> = "@(#) $RCSfile: SAXHandler.java,v $ $Revision: 1.68 $ $Date: 2004/08/31 06:14:05 $ $Name: jdom_1_0 $";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(13);

        <org.jdom.input.SAXHandler: java.util.Map attrNameToTypeMap> = $r0;

        $r2 = <org.jdom.input.SAXHandler: java.util.Map attrNameToTypeMap>;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(1);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CDATA", $r1);

        $r4 = <org.jdom.input.SAXHandler: java.util.Map attrNameToTypeMap>;

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(2);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ID", $r3);

        $r6 = <org.jdom.input.SAXHandler: java.util.Map attrNameToTypeMap>;

        $r5 = new java.lang.Integer;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(3);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("IDREF", $r5);

        $r8 = <org.jdom.input.SAXHandler: java.util.Map attrNameToTypeMap>;

        $r7 = new java.lang.Integer;

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>(4);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("IDREFS", $r7);

        $r10 = <org.jdom.input.SAXHandler: java.util.Map attrNameToTypeMap>;

        $r9 = new java.lang.Integer;

        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(5);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ENTITY", $r9);

        $r12 = <org.jdom.input.SAXHandler: java.util.Map attrNameToTypeMap>;

        $r11 = new java.lang.Integer;

        specialinvoke $r11.<java.lang.Integer: void <init>(int)>(6);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ENTITIES", $r11);

        $r14 = <org.jdom.input.SAXHandler: java.util.Map attrNameToTypeMap>;

        $r13 = new java.lang.Integer;

        specialinvoke $r13.<java.lang.Integer: void <init>(int)>(7);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NMTOKEN", $r13);

        $r16 = <org.jdom.input.SAXHandler: java.util.Map attrNameToTypeMap>;

        $r15 = new java.lang.Integer;

        specialinvoke $r15.<java.lang.Integer: void <init>(int)>(8);

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NMTOKENS", $r15);

        $r18 = <org.jdom.input.SAXHandler: java.util.Map attrNameToTypeMap>;

        $r17 = new java.lang.Integer;

        specialinvoke $r17.<java.lang.Integer: void <init>(int)>(9);

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NOTATION", $r17);

        $r20 = <org.jdom.input.SAXHandler: java.util.Map attrNameToTypeMap>;

        $r19 = new java.lang.Integer;

        specialinvoke $r19.<java.lang.Integer: void <init>(int)>(10);

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ENUMERATION", $r19);

        return;
    }

    public void <init>()
    {
        org.jdom.input.SAXHandler r0;

        r0 := @this: org.jdom.input.SAXHandler;

        specialinvoke r0.<org.jdom.input.SAXHandler: void <init>(org.jdom.JDOMFactory)>(null);

        return;
    }

    public void <init>(org.jdom.JDOMFactory)
    {
        java.util.HashMap $r6;
        java.util.ArrayList $r5;
        org.jdom.Document $r8;
        java.lang.StringBuffer $r1;
        org.jdom.input.SAXHandler r0;
        org.jdom.DefaultJDOMFactory $r4;
        org.jdom.input.TextBuffer $r2;
        org.jdom.JDOMFactory r3, $r7;

        r0 := @this: org.jdom.input.SAXHandler;

        r3 := @parameter0: org.jdom.JDOMFactory;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.jdom.input.SAXHandler: boolean inDTD> = 0;

        r0.<org.jdom.input.SAXHandler: boolean inInternalSubset> = 0;

        r0.<org.jdom.input.SAXHandler: boolean previousCDATA> = 0;

        r0.<org.jdom.input.SAXHandler: boolean inCDATA> = 0;

        r0.<org.jdom.input.SAXHandler: boolean expand> = 1;

        r0.<org.jdom.input.SAXHandler: boolean suppress> = 0;

        r0.<org.jdom.input.SAXHandler: int entityDepth> = 0;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset> = $r1;

        $r2 = new org.jdom.input.TextBuffer;

        specialinvoke $r2.<org.jdom.input.TextBuffer: void <init>()>();

        r0.<org.jdom.input.SAXHandler: org.jdom.input.TextBuffer textBuffer> = $r2;

        r0.<org.jdom.input.SAXHandler: boolean ignoringWhite> = 0;

        if r3 == null goto label1;

        r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory> = r3;

        goto label2;

     label1:
        $r4 = new org.jdom.DefaultJDOMFactory;

        specialinvoke $r4.<org.jdom.DefaultJDOMFactory: void <init>()>();

        r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory> = $r4;

     label2:
        r0.<org.jdom.input.SAXHandler: boolean atRoot> = 1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.jdom.input.SAXHandler: java.util.List declaredNamespaces> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.jdom.input.SAXHandler: java.util.Map externalEntities> = $r6;

        $r7 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r8 = interfaceinvoke $r7.<org.jdom.JDOMFactory: org.jdom.Document document(org.jdom.Element)>(null);

        r0.<org.jdom.input.SAXHandler: org.jdom.Document document> = $r8;

        return;
    }

    private void appendExternalId(java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        org.jdom.input.SAXHandler r2;
        java.lang.String r0, r1;

        r2 := @this: org.jdom.input.SAXHandler;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r8 = r2.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" PUBLIC \"");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

     label1:
        if r1 == null goto label4;

        if r0 != null goto label2;

        $r7 = r2.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" SYSTEM ");

        goto label3;

     label2:
        $r3 = r2.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label3:
        $r4 = r2.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

     label4:
        return;
    }

    public void attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20;
        java.lang.String r3, r6, r9, r11, r14;
        boolean $z0, $z1;
        org.jdom.input.SAXHandler r0;

        r0 := @this: org.jdom.input.SAXHandler;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        r11 := @parameter3: java.lang.String;

        r14 := @parameter4: java.lang.String;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean inInternalSubset>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  <!ATTLIST ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        if r11 == null goto label2;

        $r19 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        goto label3;

     label2:
        $r12 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r14);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

     label3:
        if r11 == null goto label4;

        $z1 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("#FIXED");

        if $z1 == 0 goto label4;

        $r16 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \"");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r14);

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

     label4:
        $r20 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">\n");

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.jdom.input.SAXHandler r0;
        int i0, i1;
        char[] r1;
        org.jdom.input.TextBuffer $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jdom.input.SAXHandler;

        r1 := @parameter0: char[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean suppress>;

        if $z0 != 0 goto label1;

        if i0 != 0 goto label2;

     label1:
        return;

     label2:
        $z2 = r0.<org.jdom.input.SAXHandler: boolean previousCDATA>;

        $z1 = r0.<org.jdom.input.SAXHandler: boolean inCDATA>;

        if $z2 == $z1 goto label3;

        virtualinvoke r0.<org.jdom.input.SAXHandler: void flushCharacters()>();

     label3:
        $r2 = r0.<org.jdom.input.SAXHandler: org.jdom.input.TextBuffer textBuffer>;

        virtualinvoke $r2.<org.jdom.input.TextBuffer: void append(char[],int,int)>(r1, i1, i0);

        return;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        org.jdom.Comment $r6, $r10;
        org.jdom.Document $r9;
        java.lang.StringBuffer $r11, $r12, $r13;
        int i0, i1;
        java.lang.String $r1;
        org.jdom.JDOMFactory $r3, $r5, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.jdom.input.SAXHandler r0;
        char[] r2;
        org.jdom.Element $r4;

        r0 := @this: org.jdom.input.SAXHandler;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean suppress>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.jdom.input.SAXHandler: void flushCharacters()>();

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        $z1 = r0.<org.jdom.input.SAXHandler: boolean inDTD>;

        if $z1 == 0 goto label2;

        $z4 = r0.<org.jdom.input.SAXHandler: boolean inInternalSubset>;

        if $z4 == 0 goto label2;

        $z5 = r0.<org.jdom.input.SAXHandler: boolean expand>;

        if $z5 != 0 goto label2;

        $r11 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  <!--");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-->\n");

        return;

     label2:
        $z6 = r0.<org.jdom.input.SAXHandler: boolean inDTD>;

        if $z6 != 0 goto label4;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 != 0 goto label4;

        $z3 = r0.<org.jdom.input.SAXHandler: boolean atRoot>;

        if $z3 == 0 goto label3;

        $r8 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r9 = r0.<org.jdom.input.SAXHandler: org.jdom.Document document>;

        $r7 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r10 = interfaceinvoke $r7.<org.jdom.JDOMFactory: org.jdom.Comment comment(java.lang.String)>($r1);

        interfaceinvoke $r8.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>($r9, $r10);

        goto label4;

     label3:
        $r3 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r4 = virtualinvoke r0.<org.jdom.input.SAXHandler: org.jdom.Element getCurrentElement()>();

        $r5 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r6 = interfaceinvoke $r5.<org.jdom.JDOMFactory: org.jdom.Comment comment(java.lang.String)>($r1);

        interfaceinvoke $r3.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>($r4, $r6);

     label4:
        return;
    }

    public void elementDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r7;
        org.jdom.input.SAXHandler r0;
        java.lang.String r3, r6;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXHandler;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean inInternalSubset>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  <!ELEMENT ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">\n");

        return;
    }

    public void endCDATA() throws org.xml.sax.SAXException
    {
        org.jdom.input.SAXHandler r0;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXHandler;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean suppress>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<org.jdom.input.SAXHandler: boolean previousCDATA> = 1;

        r0.<org.jdom.input.SAXHandler: boolean inCDATA> = 0;

        return;
    }

    public void endDTD() throws org.xml.sax.SAXException
    {
        org.jdom.Document $r1;
        java.lang.StringBuffer $r3;
        org.jdom.input.SAXHandler r0;
        org.jdom.DocType $r2;
        java.lang.String $r4;

        r0 := @this: org.jdom.input.SAXHandler;

        $r1 = r0.<org.jdom.input.SAXHandler: org.jdom.Document document>;

        $r2 = virtualinvoke $r1.<org.jdom.Document: org.jdom.DocType getDocType()>();

        $r3 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<org.jdom.DocType: void setInternalSubset(java.lang.String)>($r4);

        r0.<org.jdom.input.SAXHandler: boolean inDTD> = 0;

        r0.<org.jdom.input.SAXHandler: boolean inInternalSubset> = 0;

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.jdom.Parent $r8;
        java.lang.StringBuffer $r2, $r4, $r5;
        org.xml.sax.SAXException $r1;
        org.jdom.input.SAXHandler r0;
        java.lang.String r3, $r6, r10, r11;
        org.jdom.Element $r7, $r9;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jdom.input.SAXHandler;

        r10 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean suppress>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.jdom.input.SAXHandler: void flushCharacters()>();

        $z1 = r0.<org.jdom.input.SAXHandler: boolean atRoot>;

        if $z1 != 0 goto label3;

        $r7 = r0.<org.jdom.input.SAXHandler: org.jdom.Element currentElement>;

        $r8 = virtualinvoke $r7.<org.jdom.Content: org.jdom.Parent getParent()>();

        $z2 = $r8 instanceof org.jdom.Document;

        if $z2 == 0 goto label2;

        r0.<org.jdom.input.SAXHandler: boolean atRoot> = 1;

        goto label4;

     label2:
        $r9 = (org.jdom.Element) $r8;

        r0.<org.jdom.input.SAXHandler: org.jdom.Element currentElement> = $r9;

        goto label4;

     label3:
        $r1 = new org.xml.sax.SAXException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>("Ill-formed XML document (missing opening tag for ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label4:
        return;
    }

    public void endEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.jdom.input.SAXHandler r0;
        int $i0, $i1, $i2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXHandler;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<org.jdom.input.SAXHandler: int entityDepth>;

        $i1 = $i0 - 1;

        r0.<org.jdom.input.SAXHandler: int entityDepth> = $i1;

        $i2 = r0.<org.jdom.input.SAXHandler: int entityDepth>;

        if $i2 != 0 goto label1;

        r0.<org.jdom.input.SAXHandler: boolean suppress> = 0;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("[dtd]");

        if $z0 == 0 goto label2;

        r0.<org.jdom.input.SAXHandler: boolean inInternalSubset> = 1;

     label2:
        return;
    }

    public void externalEntityDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String[] $r2;
        java.lang.StringBuffer $r6, $r7, $r8;
        java.util.Map $r5;
        org.jdom.input.SAXHandler r0;
        java.lang.String r1, r3, r4;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXHandler;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r5 = r0.<org.jdom.input.SAXHandler: java.util.Map externalEntities>;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = r3;

        $r2[1] = r4;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r2);

        $z0 = r0.<org.jdom.input.SAXHandler: boolean inInternalSubset>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r6 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  <!ENTITY ");

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        specialinvoke r0.<org.jdom.input.SAXHandler: void appendExternalId(java.lang.String,java.lang.String)>(r3, r4);

        $r8 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">\n");

        return;
    }

    protected void flushCharacters() throws org.xml.sax.SAXException
    {
        org.jdom.input.SAXHandler r0;
        org.jdom.input.TextBuffer $r1, $r3;
        java.lang.String $r2;

        r0 := @this: org.jdom.input.SAXHandler;

        $r1 = r0.<org.jdom.input.SAXHandler: org.jdom.input.TextBuffer textBuffer>;

        $r2 = virtualinvoke $r1.<org.jdom.input.TextBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.jdom.input.SAXHandler: void flushCharacters(java.lang.String)>($r2);

        $r3 = r0.<org.jdom.input.SAXHandler: org.jdom.input.TextBuffer textBuffer>;

        virtualinvoke $r3.<org.jdom.input.TextBuffer: void clear()>();

        return;
    }

    protected void flushCharacters(java.lang.String) throws org.xml.sax.SAXException
    {
        org.jdom.Text $r5;
        org.jdom.CDATA $r9;
        int $i0;
        org.jdom.input.SAXHandler r1;
        java.lang.String r0;
        org.jdom.Element $r3, $r7;
        org.jdom.JDOMFactory $r2, $r4, $r6, $r8;
        boolean $z0, $z1, $z2;

        r1 := @this: org.jdom.input.SAXHandler;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $z2 = r1.<org.jdom.input.SAXHandler: boolean inCDATA>;

        r1.<org.jdom.input.SAXHandler: boolean previousCDATA> = $z2;

        return;

     label1:
        $z0 = r1.<org.jdom.input.SAXHandler: boolean previousCDATA>;

        if $z0 == 0 goto label2;

        $r6 = r1.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r7 = virtualinvoke r1.<org.jdom.input.SAXHandler: org.jdom.Element getCurrentElement()>();

        $r8 = r1.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r9 = interfaceinvoke $r8.<org.jdom.JDOMFactory: org.jdom.CDATA cdata(java.lang.String)>(r0);

        interfaceinvoke $r6.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>($r7, $r9);

        goto label3;

     label2:
        $r2 = r1.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r3 = virtualinvoke r1.<org.jdom.input.SAXHandler: org.jdom.Element getCurrentElement()>();

        $r4 = r1.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r5 = interfaceinvoke $r4.<org.jdom.JDOMFactory: org.jdom.Text text(java.lang.String)>(r0);

        interfaceinvoke $r2.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>($r3, $r5);

     label3:
        $z1 = r1.<org.jdom.input.SAXHandler: boolean inCDATA>;

        r1.<org.jdom.input.SAXHandler: boolean previousCDATA> = $z1;

        return;
    }

    private static int getAttributeType(java.lang.String)
    {
        char $c2;
        java.lang.Integer r3;
        java.util.Map $r1;
        int $i0, $i1, $i3;
        java.lang.Object $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.jdom.input.SAXHandler: java.util.Map attrNameToTypeMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.Integer) $r2;

        if r3 != null goto label2;

        if r0 == null goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 <= 0 goto label1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i3 = (int) $c2;

        if $i3 != 40 goto label1;

        return 10;

     label1:
        return 0;

     label2:
        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public org.jdom.Element getCurrentElement() throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXException $r3;
        org.jdom.input.SAXHandler r0;
        org.jdom.Element $r1, $r2;

        r0 := @this: org.jdom.input.SAXHandler;

        $r1 = r0.<org.jdom.input.SAXHandler: org.jdom.Element currentElement>;

        if $r1 != null goto label1;

        $r3 = new org.xml.sax.SAXException;

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Ill-formed XML document (multiple root elements detected)");

        throw $r3;

     label1:
        $r2 = r0.<org.jdom.input.SAXHandler: org.jdom.Element currentElement>;

        return $r2;
    }

    public org.jdom.Document getDocument()
    {
        org.jdom.input.SAXHandler r0;
        org.jdom.Document $r1;

        r0 := @this: org.jdom.input.SAXHandler;

        $r1 = r0.<org.jdom.input.SAXHandler: org.jdom.Document document>;

        return $r1;
    }

    public org.xml.sax.Locator getDocumentLocator()
    {
        org.jdom.input.SAXHandler r0;
        org.xml.sax.Locator $r1;

        r0 := @this: org.jdom.input.SAXHandler;

        $r1 = r0.<org.jdom.input.SAXHandler: org.xml.sax.Locator locator>;

        return $r1;
    }

    public boolean getExpandEntities()
    {
        org.jdom.input.SAXHandler r0;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXHandler;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean expand>;

        return $z0;
    }

    public org.jdom.JDOMFactory getFactory()
    {
        org.jdom.input.SAXHandler r0;
        org.jdom.JDOMFactory $r1;

        r0 := @this: org.jdom.input.SAXHandler;

        $r1 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        return $r1;
    }

    public boolean getIgnoringElementContentWhitespace()
    {
        org.jdom.input.SAXHandler r0;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXHandler;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean ignoringWhite>;

        return $z0;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        org.jdom.input.SAXHandler r0;
        int i0, i1;
        char[] r1;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXHandler;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean ignoringWhite>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.jdom.input.SAXHandler: void characters(char[],int,int)>(r1, i0, i1);

     label1:
        return;
    }

    public void internalEntityDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r7, $r8, $r9;
        org.jdom.input.SAXHandler r0;
        java.lang.String r2, r6, $r10;
        boolean $z0, $z1;

        r0 := @this: org.jdom.input.SAXHandler;

        r2 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean inInternalSubset>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  <!ENTITY ");

        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("%");

        if $z1 == 0 goto label2;

        $r8 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("% ");

        $r10 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        goto label3;

     label2:
        $r3 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

     label3:
        $r4 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \"");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\">\n");

        return;
    }

    public void notationDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.StringBuffer $r1, $r2, $r6;
        org.jdom.input.SAXHandler r0;
        java.lang.String r3, r4, r5;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXHandler;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean inInternalSubset>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  <!NOTATION ");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        specialinvoke r0.<org.jdom.input.SAXHandler: void appendExternalId(java.lang.String,java.lang.String)>(r4, r5);

        $r6 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">\n");

        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.jdom.ProcessingInstruction $r6, $r10;
        org.jdom.Document $r9;
        org.jdom.input.SAXHandler r0;
        java.lang.String r3, r4;
        org.jdom.Element $r2;
        org.jdom.JDOMFactory $r1, $r5, $r7, $r8;
        boolean $z0, $z1;

        r0 := @this: org.jdom.input.SAXHandler;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean suppress>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.jdom.input.SAXHandler: void flushCharacters()>();

        $z1 = r0.<org.jdom.input.SAXHandler: boolean atRoot>;

        if $z1 == 0 goto label2;

        $r8 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r9 = r0.<org.jdom.input.SAXHandler: org.jdom.Document document>;

        $r7 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r10 = interfaceinvoke $r7.<org.jdom.JDOMFactory: org.jdom.ProcessingInstruction processingInstruction(java.lang.String,java.lang.String)>(r3, r4);

        interfaceinvoke $r8.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>($r9, $r10);

        goto label3;

     label2:
        $r1 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r2 = virtualinvoke r0.<org.jdom.input.SAXHandler: org.jdom.Element getCurrentElement()>();

        $r5 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r6 = interfaceinvoke $r5.<org.jdom.JDOMFactory: org.jdom.ProcessingInstruction processingInstruction(java.lang.String,java.lang.String)>(r3, r4);

        interfaceinvoke $r1.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>($r2, $r6);

     label3:
        return;
    }

    protected void pushElement(org.jdom.Element)
    {
        org.jdom.Document $r4;
        org.jdom.input.SAXHandler r0;
        org.jdom.Element r1, $r2;
        org.jdom.JDOMFactory $r3;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXHandler;

        r1 := @parameter0: org.jdom.Element;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean atRoot>;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.jdom.input.SAXHandler: org.jdom.Document document>;

        virtualinvoke $r4.<org.jdom.Document: org.jdom.Document setRootElement(org.jdom.Element)>(r1);

        r0.<org.jdom.input.SAXHandler: boolean atRoot> = 0;

        goto label2;

     label1:
        $r3 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r2 = r0.<org.jdom.input.SAXHandler: org.jdom.Element currentElement>;

        interfaceinvoke $r3.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>($r2, r1);

     label2:
        r0.<org.jdom.input.SAXHandler: org.jdom.Element currentElement> = r1;

        return;
    }

    public void setDocumentLocator(org.xml.sax.Locator)
    {
        org.jdom.input.SAXHandler r0;
        org.xml.sax.Locator r1;

        r0 := @this: org.jdom.input.SAXHandler;

        r1 := @parameter0: org.xml.sax.Locator;

        r0.<org.jdom.input.SAXHandler: org.xml.sax.Locator locator> = r1;

        return;
    }

    public void setExpandEntities(boolean)
    {
        org.jdom.input.SAXHandler r0;
        boolean z0;

        r0 := @this: org.jdom.input.SAXHandler;

        z0 := @parameter0: boolean;

        r0.<org.jdom.input.SAXHandler: boolean expand> = z0;

        return;
    }

    public void setIgnoringElementContentWhitespace(boolean)
    {
        org.jdom.input.SAXHandler r0;
        boolean z0;

        r0 := @this: org.jdom.input.SAXHandler;

        z0 := @parameter0: boolean;

        r0.<org.jdom.input.SAXHandler: boolean ignoringWhite> = z0;

        return;
    }

    public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.jdom.input.SAXHandler r1;
        org.jdom.EntityRef $r5;
        java.lang.String r0;
        org.jdom.Element $r3;
        org.jdom.JDOMFactory $r2, $r4;
        boolean $z0;

        r1 := @this: org.jdom.input.SAXHandler;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("%");

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r1.<org.jdom.input.SAXHandler: void flushCharacters()>();

        $r2 = r1.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r3 = virtualinvoke r1.<org.jdom.input.SAXHandler: org.jdom.Element getCurrentElement()>();

        $r4 = r1.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r5 = interfaceinvoke $r4.<org.jdom.JDOMFactory: org.jdom.EntityRef entityRef(java.lang.String)>(r0);

        interfaceinvoke $r2.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>($r3, $r5);

        return;
    }

    public void startCDATA() throws org.xml.sax.SAXException
    {
        org.jdom.input.SAXHandler r0;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXHandler;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean suppress>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<org.jdom.input.SAXHandler: boolean inCDATA> = 1;

        return;
    }

    public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.jdom.Document $r6;
        org.jdom.input.SAXHandler r0;
        org.jdom.DocType $r7;
        java.lang.String r1, r2, r3;
        org.jdom.JDOMFactory $r4, $r5;

        r0 := @this: org.jdom.input.SAXHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.jdom.input.SAXHandler: void flushCharacters()>();

        $r5 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r6 = r0.<org.jdom.input.SAXHandler: org.jdom.Document document>;

        $r4 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r7 = interfaceinvoke $r4.<org.jdom.JDOMFactory: org.jdom.DocType docType(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        interfaceinvoke $r5.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>($r6, $r7);

        r0.<org.jdom.input.SAXHandler: boolean inDTD> = 1;

        r0.<org.jdom.input.SAXHandler: boolean inInternalSubset> = 1;

        return;
    }

    public void startDocument()
    {
        org.jdom.Document $r3;
        org.jdom.input.SAXHandler r0;
        java.lang.String $r4;
        org.xml.sax.Locator $r1, $r2;

        r0 := @this: org.jdom.input.SAXHandler;

        $r1 = r0.<org.jdom.input.SAXHandler: org.xml.sax.Locator locator>;

        if $r1 == null goto label1;

        $r3 = r0.<org.jdom.input.SAXHandler: org.jdom.Document document>;

        $r2 = r0.<org.jdom.input.SAXHandler: org.xml.sax.Locator locator>;

        $r4 = interfaceinvoke $r2.<org.xml.sax.Locator: java.lang.String getSystemId()>();

        virtualinvoke $r3.<org.jdom.Document: void setBaseURI(java.lang.String)>($r4);

     label1:
        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.jdom.Document $r18;
        org.jdom.Namespace $r13, $r20;
        org.jdom.JDOMFactory $r3, $r8, $r10, $r14, $r16, $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.jdom.Attribute r25;
        java.util.List $r24;
        org.jdom.input.SAXHandler r0;
        org.xml.sax.Attributes r4;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String r1, r2, $r5, $r6, $r7, $r9, $r11, $r12, $r15, r19, r22;
        org.jdom.Element $r17, r23;

        r0 := @this: org.jdom.input.SAXHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r19 := @parameter2: java.lang.String;

        r4 := @parameter3: org.xml.sax.Attributes;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean suppress>;

        if $z0 == 0 goto label01;

        return;

     label01:
        if r1 == null goto label03;

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z5 != 0 goto label03;

        r22 = "";

        $z6 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z6 != 0 goto label02;

        $i3 = virtualinvoke r19.<java.lang.String: int indexOf(java.lang.String)>(":");

        r22 = virtualinvoke r19.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

     label02:
        $r20 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String,java.lang.String)>(r22, r1);

        $r21 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        r23 = interfaceinvoke $r21.<org.jdom.JDOMFactory: org.jdom.Element element(java.lang.String,org.jdom.Namespace)>(r2, $r20);

        goto label04;

     label03:
        $r3 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        r23 = interfaceinvoke $r3.<org.jdom.JDOMFactory: org.jdom.Element element(java.lang.String)>(r2);

     label04:
        $r24 = r0.<org.jdom.input.SAXHandler: java.util.List declaredNamespaces>;

        $i4 = interfaceinvoke $r24.<java.util.List: int size()>();

        if $i4 <= 0 goto label05;

        specialinvoke r0.<org.jdom.input.SAXHandler: void transferNamespaces(org.jdom.Element)>(r23);

     label05:
        i5 = 0;

        $i0 = interfaceinvoke r4.<org.xml.sax.Attributes: int getLength()>();

        goto label11;

     label06:
        $r5 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i5);

        $r6 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i5);

        $r7 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getType(int)>(i5);

        $i1 = staticinvoke <org.jdom.input.SAXHandler: int getAttributeType(java.lang.String)>($r7);

        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z1 != 0 goto label10;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z2 == 0 goto label07;

        goto label10;

     label07:
        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z3 != 0 goto label08;

        $i2 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>(":");

        $r11 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r12 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i5);

        $r13 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String,java.lang.String)>($r11, $r12);

        $r14 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r15 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i5);

        r25 = interfaceinvoke $r14.<org.jdom.JDOMFactory: org.jdom.Attribute attribute(java.lang.String,java.lang.String,int,org.jdom.Namespace)>($r5, $r15, $i1, $r13);

        goto label09;

     label08:
        $r8 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r9 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i5);

        r25 = interfaceinvoke $r8.<org.jdom.JDOMFactory: org.jdom.Attribute attribute(java.lang.String,java.lang.String,int)>($r5, $r9, $i1);

     label09:
        $r10 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        interfaceinvoke $r10.<org.jdom.JDOMFactory: void setAttribute(org.jdom.Element,org.jdom.Attribute)>(r23, r25);

     label10:
        i5 = i5 + 1;

     label11:
        if i5 < $i0 goto label06;

        virtualinvoke r0.<org.jdom.input.SAXHandler: void flushCharacters()>();

        $z4 = r0.<org.jdom.input.SAXHandler: boolean atRoot>;

        if $z4 == 0 goto label12;

        $r18 = r0.<org.jdom.input.SAXHandler: org.jdom.Document document>;

        virtualinvoke $r18.<org.jdom.Document: org.jdom.Document setRootElement(org.jdom.Element)>(r23);

        r0.<org.jdom.input.SAXHandler: boolean atRoot> = 0;

        goto label13;

     label12:
        $r16 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r17 = virtualinvoke r0.<org.jdom.input.SAXHandler: org.jdom.Element getCurrentElement()>();

        interfaceinvoke $r16.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>($r17, r23);

     label13:
        r0.<org.jdom.input.SAXHandler: org.jdom.Element currentElement> = r23;

        return;
    }

    public void startEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String[] r4;
        java.util.Map $r2;
        int $i0, $i1, $i2;
        java.lang.String r1, r9, r10;
        org.jdom.JDOMFactory $r5, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.jdom.EntityRef $r6;
        org.jdom.input.SAXHandler r0;
        java.lang.Object $r3;
        org.jdom.Element $r8;

        r0 := @this: org.jdom.input.SAXHandler;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<org.jdom.input.SAXHandler: int entityDepth>;

        $i1 = $i0 + 1;

        r0.<org.jdom.input.SAXHandler: int entityDepth> = $i1;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean expand>;

        if $z0 != 0 goto label1;

        $i2 = r0.<org.jdom.input.SAXHandler: int entityDepth>;

        if $i2 <= 1 goto label2;

     label1:
        return;

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("[dtd]");

        if $z1 == 0 goto label3;

        r0.<org.jdom.input.SAXHandler: boolean inInternalSubset> = 0;

        return;

     label3:
        $z2 = r0.<org.jdom.input.SAXHandler: boolean inDTD>;

        if $z2 != 0 goto label6;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("amp");

        if $z3 != 0 goto label6;

        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lt");

        if $z4 != 0 goto label6;

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("gt");

        if $z5 != 0 goto label6;

        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("apos");

        if $z6 != 0 goto label6;

        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("quot");

        if $z7 != 0 goto label6;

        $z8 = r0.<org.jdom.input.SAXHandler: boolean expand>;

        if $z8 != 0 goto label6;

        r9 = null;

        r10 = null;

        $r2 = r0.<org.jdom.input.SAXHandler: java.util.Map externalEntities>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.String[]) $r3;

        if r4 == null goto label4;

        r9 = r4[0];

        r10 = r4[1];

     label4:
        $z9 = r0.<org.jdom.input.SAXHandler: boolean atRoot>;

        if $z9 != 0 goto label5;

        virtualinvoke r0.<org.jdom.input.SAXHandler: void flushCharacters()>();

        $r5 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r6 = interfaceinvoke $r5.<org.jdom.JDOMFactory: org.jdom.EntityRef entityRef(java.lang.String,java.lang.String,java.lang.String)>(r1, r9, r10);

        $r7 = r0.<org.jdom.input.SAXHandler: org.jdom.JDOMFactory factory>;

        $r8 = virtualinvoke r0.<org.jdom.input.SAXHandler: org.jdom.Element getCurrentElement()>();

        interfaceinvoke $r7.<org.jdom.JDOMFactory: void addContent(org.jdom.Parent,org.jdom.Content)>($r8, $r6);

     label5:
        r0.<org.jdom.input.SAXHandler: boolean suppress> = 1;

     label6:
        return;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.util.List $r4;
        org.jdom.input.SAXHandler r0;
        org.jdom.Namespace $r3;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean suppress>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String,java.lang.String)>(r1, r2);

        $r4 = r0.<org.jdom.input.SAXHandler: java.util.List declaredNamespaces>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    private void transferNamespaces(org.jdom.Element)
    {
        java.util.Iterator $r2;
        java.util.List $r1, $r7;
        org.jdom.input.SAXHandler r0;
        java.lang.Object $r3;
        org.jdom.Namespace r4, $r6;
        org.jdom.Element r5;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXHandler;

        r5 := @parameter0: org.jdom.Element;

        $r1 = r0.<org.jdom.input.SAXHandler: java.util.List declaredNamespaces>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jdom.Namespace) $r3;

        $r6 = virtualinvoke r5.<org.jdom.Element: org.jdom.Namespace getNamespace()>();

        if r4 == $r6 goto label2;

        virtualinvoke r5.<org.jdom.Element: void addNamespaceDeclaration(org.jdom.Namespace)>(r4);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r7 = r0.<org.jdom.input.SAXHandler: java.util.List declaredNamespaces>;

        interfaceinvoke $r7.<java.util.List: void clear()>();

        return;
    }

    public void unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.StringBuffer $r1, $r2, $r6, $r7, $r9;
        org.jdom.input.SAXHandler r0;
        java.lang.String r3, r4, r5, r8;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXHandler;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r8 := @parameter3: java.lang.String;

        $z0 = r0.<org.jdom.input.SAXHandler: boolean inInternalSubset>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  <!ENTITY ");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        specialinvoke r0.<org.jdom.input.SAXHandler: void appendExternalId(java.lang.String,java.lang.String)>(r4, r5);

        $r6 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" NDATA ");

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        $r9 = r0.<org.jdom.input.SAXHandler: java.lang.StringBuffer internalSubset>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">\n");

        return;
    }
}
