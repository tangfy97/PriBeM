public class bsh.CollectionManager extends java.lang.Object
{
    private static bsh.CollectionManager manager;

    public void <init>()
    {
        bsh.CollectionManager r0;

        r0 := @this: bsh.CollectionManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static synchronized bsh.CollectionManager getCollectionManager()
    {
        bsh.CollectionManager $r0, $r1, $r2, $r5, $r11;
        java.lang.Exception $r6;
        java.lang.StringBuffer $r7, $r8, $r9;
        java.lang.Class $r3;
        java.lang.Object $r4;
        java.lang.String $r10;
        boolean $z0;

        $r0 = <bsh.CollectionManager: bsh.CollectionManager manager>;

        if $r0 != null goto label4;

        $z0 = staticinvoke <bsh.Capabilities: boolean classExists(java.lang.String)>("java.util.Collection");

        if $z0 == 0 goto label4;

     label1:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("bsh.collection.CollectionManagerImpl");

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>();

        $r5 = (bsh.CollectionManager) $r4;

        <bsh.CollectionManager: bsh.CollectionManager manager> = $r5;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("unable to load CollectionManagerImpl: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <bsh.Interpreter: void debug(java.lang.String)>($r10);

        goto label4;

     label4:
        $r11 = <bsh.CollectionManager: bsh.CollectionManager manager>;

        if $r11 != null goto label5;

        $r2 = new bsh.CollectionManager;

        specialinvoke $r2.<bsh.CollectionManager: void <init>()>();

        <bsh.CollectionManager: bsh.CollectionManager manager> = $r2;

     label5:
        $r1 = <bsh.CollectionManager: bsh.CollectionManager manager>;

        return $r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public boolean isBshIterable(java.lang.Object)
    {
        bsh.CollectionManager r0;
        java.lang.Object r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: bsh.CollectionManager;

        r1 := @parameter0: java.lang.Object;

     label1:
        virtualinvoke r0.<bsh.CollectionManager: bsh.BshIterator getBshIterator(java.lang.Object)>(r1);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public bsh.BshIterator getBshIterator(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        bsh.CollectionManager r2;
        java.lang.Object r1;
        bsh.CollectionManager$BasicBshIterator $r0;

        r2 := @this: bsh.CollectionManager;

        r1 := @parameter0: java.lang.Object;

        $r0 = new bsh.CollectionManager$BasicBshIterator;

        specialinvoke $r0.<bsh.CollectionManager$BasicBshIterator: void <init>(java.lang.Object)>(r1);

        return $r0;
    }

    public boolean isMap(java.lang.Object)
    {
        bsh.CollectionManager r1;
        java.lang.Object r0;
        boolean $z0;

        r1 := @this: bsh.CollectionManager;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.Hashtable;

        return $z0;
    }

    public java.lang.Object getFromMap(java.lang.Object, java.lang.Object)
    {
        bsh.CollectionManager r4;
        java.lang.Object r0, r1, $r3;
        java.util.Hashtable $r2;

        r4 := @this: bsh.CollectionManager;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = (java.util.Hashtable) r0;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.Object putInMap(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        bsh.CollectionManager r5;
        java.lang.Object r0, r1, r2, $r4;
        java.util.Hashtable $r3;

        r5 := @this: bsh.CollectionManager;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r3 = (java.util.Hashtable) r0;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r4;
    }
}
