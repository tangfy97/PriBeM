public class org.apache.batik.dom.util.ListNodeList extends java.lang.Object implements org.w3c.dom.NodeList
{
    protected java.util.List list;

    public void <init>(java.util.List)
    {
        org.apache.batik.dom.util.ListNodeList r0;
        java.util.List r1;

        r0 := @this: org.apache.batik.dom.util.ListNodeList;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.dom.util.ListNodeList: java.util.List list> = r1;

        return;
    }

    public org.w3c.dom.Node item(int)
    {
        org.apache.batik.dom.util.ListNodeList r0;
        java.util.List $r1, $r2;
        org.w3c.dom.Node $r4;
        int i0, $i1;
        java.lang.Object $r3;

        r0 := @this: org.apache.batik.dom.util.ListNodeList;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.apache.batik.dom.util.ListNodeList: java.util.List list>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 <= $i1 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<org.apache.batik.dom.util.ListNodeList: java.util.List list>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (org.w3c.dom.Node) $r3;

        return $r4;
    }

    public int getLength()
    {
        int $i0;
        org.apache.batik.dom.util.ListNodeList r0;
        java.util.List $r1;

        r0 := @this: org.apache.batik.dom.util.ListNodeList;

        $r1 = r0.<org.apache.batik.dom.util.ListNodeList: java.util.List list>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }
}
