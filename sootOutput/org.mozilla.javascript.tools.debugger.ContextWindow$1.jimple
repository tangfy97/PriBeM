class org.mozilla.javascript.tools.debugger.ContextWindow$1 extends java.lang.Object implements java.awt.event.ComponentListener
{
    boolean t1Docked;
    boolean t2Docked;
    private final javax.swing.JPanel val$finalThis;
    private final javax.swing.JToolBar val$finalT1;
    private final javax.swing.JPanel val$finalP1;
    private final org.mozilla.javascript.tools.debugger.SwingGui val$debugGui;
    private final javax.swing.JToolBar val$finalT2;
    private final javax.swing.JPanel val$finalP2;
    private final javax.swing.JSplitPane val$finalSplit;
    private final org.mozilla.javascript.tools.debugger.ContextWindow this$0;

    void <init>(org.mozilla.javascript.tools.debugger.ContextWindow, javax.swing.JPanel, javax.swing.JToolBar, javax.swing.JPanel, org.mozilla.javascript.tools.debugger.SwingGui, javax.swing.JToolBar, javax.swing.JPanel, javax.swing.JSplitPane)
    {
        javax.swing.JToolBar r3, r6;
        javax.swing.JSplitPane r8;
        org.mozilla.javascript.tools.debugger.ContextWindow r1;
        org.mozilla.javascript.tools.debugger.ContextWindow$1 r0;
        javax.swing.JPanel r2, r4, r7;
        org.mozilla.javascript.tools.debugger.SwingGui r5;

        r0 := @this: org.mozilla.javascript.tools.debugger.ContextWindow$1;

        r1 := @parameter0: org.mozilla.javascript.tools.debugger.ContextWindow;

        r2 := @parameter1: javax.swing.JPanel;

        r3 := @parameter2: javax.swing.JToolBar;

        r4 := @parameter3: javax.swing.JPanel;

        r5 := @parameter4: org.mozilla.javascript.tools.debugger.SwingGui;

        r6 := @parameter5: javax.swing.JToolBar;

        r7 := @parameter6: javax.swing.JPanel;

        r8 := @parameter7: javax.swing.JSplitPane;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: org.mozilla.javascript.tools.debugger.ContextWindow this$0> = r1;

        r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: javax.swing.JPanel val$finalThis> = r2;

        r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: javax.swing.JToolBar val$finalT1> = r3;

        r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: javax.swing.JPanel val$finalP1> = r4;

        r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: org.mozilla.javascript.tools.debugger.SwingGui val$debugGui> = r5;

        r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: javax.swing.JToolBar val$finalT2> = r6;

        r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: javax.swing.JPanel val$finalP2> = r7;

        r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: javax.swing.JSplitPane val$finalSplit> = r8;

        r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: boolean t1Docked> = 1;

        r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: boolean t2Docked> = 1;

        return;
    }

    void check(java.awt.Component)
    {
        java.awt.event.WindowListener $r15;
        javax.swing.JFrame r19, r24;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6, z7, z8, z9, z10, z11, z12, z13;
        javax.swing.JToolBar $r3, $r21;
        java.util.EventListener[] $r13;
        java.awt.Component r17;
        java.util.EventListener $r14;
        javax.swing.JPanel $r1, $r8, $r10;
        org.mozilla.javascript.tools.debugger.SwingGui $r9, $r11;
        javax.swing.JSplitPane $r5, $r6, $r7, $r25;
        java.awt.Container $r2, $r4, r18, $r22, r23;
        org.mozilla.javascript.tools.debugger.ContextWindow$1 r0;
        org.mozilla.javascript.tools.debugger.ContextWindow$2 $r16;
        java.lang.Class $r12, $r20;

        r0 := @this: org.mozilla.javascript.tools.debugger.ContextWindow$1;

        r17 := @parameter0: java.awt.Component;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: javax.swing.JPanel val$finalThis>;

        $r2 = virtualinvoke $r1.<javax.swing.JPanel: java.awt.Container getParent()>();

        if $r2 != null goto label01;

        return;

     label01:
        $r3 = r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: javax.swing.JToolBar val$finalT1>;

        $r4 = virtualinvoke $r3.<javax.swing.JToolBar: java.awt.Container getParent()>();

        r18 = $r4;

        z5 = 1;

        z9 = 1;

        z8 = 1;

        z7 = 1;

        z6 = 1;

        z13 = 1;

        z12 = 1;

        z11 = 1;

        z10 = 1;

        if $r4 == null goto label08;

        $r10 = r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: javax.swing.JPanel val$finalP1>;

        if $r4 == $r10 goto label07;

     label02:
        $z3 = r18 instanceof javax.swing.JFrame;

        if $z3 != 0 goto label03;

        r18 = virtualinvoke r18.<java.awt.Component: java.awt.Container getParent()>();

        goto label02;

     label03:
        r19 = (javax.swing.JFrame) r18;

        $r11 = r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: org.mozilla.javascript.tools.debugger.SwingGui val$debugGui>;

        virtualinvoke $r11.<org.mozilla.javascript.tools.debugger.SwingGui: void addTopLevel(java.lang.String,javax.swing.JFrame)>("Variables", r19);

        $z4 = virtualinvoke r19.<javax.swing.JFrame: boolean isResizable()>();

        if $z4 != 0 goto label06;

        virtualinvoke r19.<javax.swing.JFrame: void setResizable(boolean)>(1);

        virtualinvoke r19.<javax.swing.JFrame: void setDefaultCloseOperation(int)>(0);

        $r12 = <org.mozilla.javascript.tools.debugger.ContextWindow: java.lang.Class class$java$awt$event$WindowListener>;

        if $r12 != null goto label04;

        $r20 = staticinvoke <org.mozilla.javascript.tools.debugger.ContextWindow: java.lang.Class class$(java.lang.String)>("java.awt.event.WindowListener");

        <org.mozilla.javascript.tools.debugger.ContextWindow: java.lang.Class class$java$awt$event$WindowListener> = $r20;

        goto label05;

     label04:
        $r20 = <org.mozilla.javascript.tools.debugger.ContextWindow: java.lang.Class class$java$awt$event$WindowListener>;

     label05:
        $r13 = virtualinvoke r19.<javax.swing.JFrame: java.util.EventListener[] getListeners(java.lang.Class)>($r20);

        $r14 = $r13[0];

        $r15 = (java.awt.event.WindowListener) $r14;

        virtualinvoke r19.<javax.swing.JFrame: void removeWindowListener(java.awt.event.WindowListener)>($r15);

        $r16 = new org.mozilla.javascript.tools.debugger.ContextWindow$2;

        specialinvoke $r16.<org.mozilla.javascript.tools.debugger.ContextWindow$2: void <init>(org.mozilla.javascript.tools.debugger.ContextWindow$1,java.util.EventListener[])>(r0, $r13);

        virtualinvoke r19.<javax.swing.JFrame: void addWindowListener(java.awt.event.WindowListener)>($r16);

     label06:
        z5 = 0;

        z9 = 0;

        z8 = 0;

        z7 = 0;

        goto label08;

     label07:
        z5 = 1;

        z9 = 1;

        z8 = 1;

        z7 = 1;

     label08:
        $r21 = r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: javax.swing.JToolBar val$finalT2>;

        $r22 = virtualinvoke $r21.<javax.swing.JToolBar: java.awt.Container getParent()>();

        r23 = $r22;

        if $r22 == null goto label12;

        $r8 = r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: javax.swing.JPanel val$finalP2>;

        if $r22 == $r8 goto label11;

     label09:
        $z2 = r23 instanceof javax.swing.JFrame;

        if $z2 != 0 goto label10;

        r23 = virtualinvoke r23.<java.awt.Component: java.awt.Container getParent()>();

        goto label09;

     label10:
        r24 = (javax.swing.JFrame) r23;

        $r9 = r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: org.mozilla.javascript.tools.debugger.SwingGui val$debugGui>;

        virtualinvoke $r9.<org.mozilla.javascript.tools.debugger.SwingGui: void addTopLevel(java.lang.String,javax.swing.JFrame)>("Evaluate", r24);

        virtualinvoke r24.<javax.swing.JFrame: void setResizable(boolean)>(1);

        z6 = 0;

        z13 = 0;

        z12 = 0;

        z11 = 0;

        z10 = 0;

        goto label12;

     label11:
        z6 = 1;

        z13 = 1;

        z12 = 1;

        z11 = 1;

        z10 = 1;

     label12:
        if z8 == 0 goto label13;

        $z0 = r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: boolean t2Docked>;

        if $z0 == 0 goto label13;

        if z12 == 0 goto label13;

        $z1 = r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: boolean t2Docked>;

        if $z1 == 0 goto label13;

        return;

     label13:
        r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: boolean t1Docked> = z7;

        r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: boolean t2Docked> = z13;

        $r25 = (javax.swing.JSplitPane) $r2;

        if z9 == 0 goto label16;

        if z10 == 0 goto label14;

        $r7 = r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: javax.swing.JSplitPane val$finalSplit>;

        virtualinvoke $r7.<javax.swing.JSplitPane: void setDividerLocation(double)>(0.5);

        goto label15;

     label14:
        $r6 = r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: javax.swing.JSplitPane val$finalSplit>;

        virtualinvoke $r6.<javax.swing.JSplitPane: void setDividerLocation(double)>(1.0);

     label15:
        if 0 == 0 goto label18;

        virtualinvoke $r25.<javax.swing.JSplitPane: void setDividerLocation(double)>(0.66);

        goto label18;

     label16:
        if z11 == 0 goto label17;

        $r5 = r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: javax.swing.JSplitPane val$finalSplit>;

        virtualinvoke $r5.<javax.swing.JSplitPane: void setDividerLocation(double)>(0.0);

        virtualinvoke $r25.<javax.swing.JSplitPane: void setDividerLocation(double)>(0.66);

        goto label18;

     label17:
        virtualinvoke $r25.<javax.swing.JSplitPane: void setDividerLocation(double)>(1.0);

     label18:
        return;
    }

    public void componentHidden(java.awt.event.ComponentEvent)
    {
        org.mozilla.javascript.tools.debugger.ContextWindow$1 r0;
        java.awt.event.ComponentEvent r1;
        java.awt.Component $r2;

        r0 := @this: org.mozilla.javascript.tools.debugger.ContextWindow$1;

        r1 := @parameter0: java.awt.event.ComponentEvent;

        $r2 = virtualinvoke r1.<java.awt.event.ComponentEvent: java.awt.Component getComponent()>();

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: void check(java.awt.Component)>($r2);

        return;
    }

    public void componentMoved(java.awt.event.ComponentEvent)
    {
        org.mozilla.javascript.tools.debugger.ContextWindow$1 r0;
        java.awt.event.ComponentEvent r1;
        java.awt.Component $r2;

        r0 := @this: org.mozilla.javascript.tools.debugger.ContextWindow$1;

        r1 := @parameter0: java.awt.event.ComponentEvent;

        $r2 = virtualinvoke r1.<java.awt.event.ComponentEvent: java.awt.Component getComponent()>();

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: void check(java.awt.Component)>($r2);

        return;
    }

    public void componentResized(java.awt.event.ComponentEvent)
    {
        org.mozilla.javascript.tools.debugger.ContextWindow$1 r0;
        java.awt.event.ComponentEvent r1;
        java.awt.Component $r2;

        r0 := @this: org.mozilla.javascript.tools.debugger.ContextWindow$1;

        r1 := @parameter0: java.awt.event.ComponentEvent;

        $r2 = virtualinvoke r1.<java.awt.event.ComponentEvent: java.awt.Component getComponent()>();

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: void check(java.awt.Component)>($r2);

        return;
    }

    public void componentShown(java.awt.event.ComponentEvent)
    {
        org.mozilla.javascript.tools.debugger.ContextWindow$1 r0;
        java.awt.event.ComponentEvent r1;
        java.awt.Component $r2;

        r0 := @this: org.mozilla.javascript.tools.debugger.ContextWindow$1;

        r1 := @parameter0: java.awt.event.ComponentEvent;

        $r2 = virtualinvoke r1.<java.awt.event.ComponentEvent: java.awt.Component getComponent()>();

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: void check(java.awt.Component)>($r2);

        return;
    }

    static org.mozilla.javascript.tools.debugger.ContextWindow access$000(org.mozilla.javascript.tools.debugger.ContextWindow$1)
    {
        org.mozilla.javascript.tools.debugger.ContextWindow$1 r0;
        org.mozilla.javascript.tools.debugger.ContextWindow $r1;

        r0 := @parameter0: org.mozilla.javascript.tools.debugger.ContextWindow$1;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.ContextWindow$1: org.mozilla.javascript.tools.debugger.ContextWindow this$0>;

        return $r1;
    }
}
