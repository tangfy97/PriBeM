public interface  org.apache.batik.dom.anim.AnimationTarget extends java.lang.Object
{
    public static final short PERCENTAGE_FONT_SIZE;
    public static final short PERCENTAGE_VIEWPORT_WIDTH;
    public static final short PERCENTAGE_VIEWPORT_HEIGHT;
    public static final short PERCENTAGE_VIEWPORT_SIZE;

    public abstract org.w3c.dom.Element getElement();

    public abstract void updatePropertyValue(java.lang.String, org.apache.batik.anim.values.AnimatableValue);

    public abstract void updateAttributeValue(java.lang.String, java.lang.String, org.apache.batik.anim.values.AnimatableValue);

    public abstract void updateOtherValue(java.lang.String, org.apache.batik.anim.values.AnimatableValue);

    public abstract org.apache.batik.anim.values.AnimatableValue getUnderlyingValue(java.lang.String, java.lang.String);

    public abstract short getPercentageInterpretation(java.lang.String, java.lang.String, boolean);

    public abstract boolean useLinearRGBColorInterpolation();

    public abstract float svgToUserSpace(float, short, short);

    public abstract void addTargetListener(java.lang.String, java.lang.String, boolean, org.apache.batik.dom.anim.AnimationTargetListener);

    public abstract void removeTargetListener(java.lang.String, java.lang.String, boolean, org.apache.batik.dom.anim.AnimationTargetListener);

    public static void <clinit>()
    {
        <org.apache.batik.dom.anim.AnimationTarget: short PERCENTAGE_VIEWPORT_SIZE> = 3;

        <org.apache.batik.dom.anim.AnimationTarget: short PERCENTAGE_VIEWPORT_HEIGHT> = 2;

        <org.apache.batik.dom.anim.AnimationTarget: short PERCENTAGE_VIEWPORT_WIDTH> = 1;

        <org.apache.batik.dom.anim.AnimationTarget: short PERCENTAGE_FONT_SIZE> = 0;

        return;
    }
}
