public class com.sun.xml.bind.v2.util.EditDistance extends java.lang.Object
{
    private int[] cost;
    private int[] back;
    private final java.lang.String a;
    private final java.lang.String b;

    public static int editDistance(java.lang.String, java.lang.String)
    {
        com.sun.xml.bind.v2.util.EditDistance $r0;
        int $i0;
        java.lang.String r1, r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new com.sun.xml.bind.v2.util.EditDistance;

        specialinvoke $r0.<com.sun.xml.bind.v2.util.EditDistance: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $i0 = specialinvoke $r0.<com.sun.xml.bind.v2.util.EditDistance: int calc()>();

        return $i0;
    }

    public static java.lang.String findNearest(java.lang.String, java.lang.String[])
    {
        java.util.List $r2;
        java.lang.String[] r1;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        $r3 = staticinvoke <com.sun.xml.bind.v2.util.EditDistance: java.lang.String findNearest(java.lang.String,java.util.Collection)>(r0, $r2);

        return $r3;
    }

    public static java.lang.String findNearest(java.lang.String, java.util.Collection)
    {
        java.util.Iterator $r1;
        java.util.Collection r0;
        int $i0, i1;
        java.lang.Object $r2;
        java.lang.String r3, r4, r5;
        boolean $z0;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Collection;

        i1 = 2147483647;

        r5 = null;

        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r2;

        $i0 = staticinvoke <com.sun.xml.bind.v2.util.EditDistance: int editDistance(java.lang.String,java.lang.String)>(r4, r3);

        if i1 <= $i0 goto label2;

        i1 = $i0;

        r5 = r3;

     label2:
        goto label1;

     label3:
        return r5;
    }

    private void <init>(java.lang.String, java.lang.String)
    {
        com.sun.xml.bind.v2.util.EditDistance r0;
        int[] $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String r1, r2;

        r0 := @this: com.sun.xml.bind.v2.util.EditDistance;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.xml.bind.v2.util.EditDistance: java.lang.String a> = r1;

        r0.<com.sun.xml.bind.v2.util.EditDistance: java.lang.String b> = r2;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = $i0 + 1;

        $r3 = newarray (int)[$i1];

        r0.<com.sun.xml.bind.v2.util.EditDistance: int[] cost> = $r3;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = $i2 + 1;

        $r4 = newarray (int)[$i3];

        r0.<com.sun.xml.bind.v2.util.EditDistance: int[] back> = $r4;

        i5 = 0;

     label1:
        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        if i5 > $i4 goto label2;

        $r5 = r0.<com.sun.xml.bind.v2.util.EditDistance: int[] cost>;

        $r5[i5] = i5;

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    private void flip()
    {
        com.sun.xml.bind.v2.util.EditDistance r0;
        int[] r1, $r2;

        r0 := @this: com.sun.xml.bind.v2.util.EditDistance;

        r1 = r0.<com.sun.xml.bind.v2.util.EditDistance: int[] cost>;

        $r2 = r0.<com.sun.xml.bind.v2.util.EditDistance: int[] back>;

        r0.<com.sun.xml.bind.v2.util.EditDistance: int[] cost> = $r2;

        r0.<com.sun.xml.bind.v2.util.EditDistance: int[] back> = r1;

        return;
    }

    private int min(int, int, int)
    {
        com.sun.xml.bind.v2.util.EditDistance r0;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: com.sun.xml.bind.v2.util.EditDistance;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i2);

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i3);

        return $i4;
    }

    private int calc()
    {
        int[] $r3, $r4, $r8, $r9, $r10, $r11;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, $i18, $i19;
        java.lang.String $r1, $r2, $r5, $r6, $r7;
        com.sun.xml.bind.v2.util.EditDistance r0;
        char $c5, $c6;

        r0 := @this: com.sun.xml.bind.v2.util.EditDistance;

        i16 = 0;

     label1:
        $r1 = r0.<com.sun.xml.bind.v2.util.EditDistance: java.lang.String b>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i16 >= $i0 goto label6;

        specialinvoke r0.<com.sun.xml.bind.v2.util.EditDistance: void flip()>();

        $r4 = r0.<com.sun.xml.bind.v2.util.EditDistance: int[] cost>;

        $i3 = i16 + 1;

        $r4[0] = $i3;

        i17 = 0;

     label2:
        $r5 = r0.<com.sun.xml.bind.v2.util.EditDistance: java.lang.String a>;

        $i4 = virtualinvoke $r5.<java.lang.String: int length()>();

        if i17 >= $i4 goto label5;

        $r6 = r0.<com.sun.xml.bind.v2.util.EditDistance: java.lang.String a>;

        $c5 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(i17);

        $r7 = r0.<com.sun.xml.bind.v2.util.EditDistance: java.lang.String b>;

        $c6 = virtualinvoke $r7.<java.lang.String: char charAt(int)>(i16);

        $i18 = (int) $c5;

        $i19 = (int) $c6;

        if $i18 != $i19 goto label3;

        $z0 = 0;

        goto label4;

     label3:
        $z0 = 1;

     label4:
        $r11 = r0.<com.sun.xml.bind.v2.util.EditDistance: int[] cost>;

        $i14 = i17 + 1;

        $r8 = r0.<com.sun.xml.bind.v2.util.EditDistance: int[] back>;

        $i7 = $r8[i17];

        $i13 = $i7 + $z0;

        $r9 = r0.<com.sun.xml.bind.v2.util.EditDistance: int[] cost>;

        $i8 = $r9[i17];

        $i12 = $i8 + 1;

        $r10 = r0.<com.sun.xml.bind.v2.util.EditDistance: int[] back>;

        $i9 = i17 + 1;

        $i10 = $r10[$i9];

        $i11 = $i10 + 1;

        $i15 = specialinvoke r0.<com.sun.xml.bind.v2.util.EditDistance: int min(int,int,int)>($i13, $i12, $i11);

        $r11[$i14] = $i15;

        i17 = i17 + 1;

        goto label2;

     label5:
        i16 = i16 + 1;

        goto label1;

     label6:
        $r3 = r0.<com.sun.xml.bind.v2.util.EditDistance: int[] cost>;

        $r2 = r0.<com.sun.xml.bind.v2.util.EditDistance: java.lang.String a>;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = $r3[$i1];

        return $i2;
    }
}
