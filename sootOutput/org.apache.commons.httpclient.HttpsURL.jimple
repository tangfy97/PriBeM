public class org.apache.commons.httpclient.HttpsURL extends org.apache.commons.httpclient.HttpURL
{
    public static final char[] DEFAULT_SCHEME;
    public static final char[] _default_scheme;
    public static final int DEFAULT_PORT;
    public static final int _default_port;
    static final long serialVersionUID;

    protected void <init>()
    {
        org.apache.commons.httpclient.HttpsURL r0;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>()>();

        return;
    }

    public void <init>(char[], java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        org.apache.commons.httpclient.HttpsURL r0;
        char[] r3;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r3 := @parameter0: char[];

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>()>();

        r0.<org.apache.commons.httpclient.HttpsURL: java.lang.String protocolCharset> = r1;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r3);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpsURL: void parseUriReference(java.lang.String,boolean)>($r2, 1);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpsURL: void checkValid()>();

        return;
    }

    public void <init>(char[]) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        char[] r2;
        org.apache.commons.httpclient.HttpsURL r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r2 := @parameter0: char[];

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>()>();

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r2);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpsURL: void parseUriReference(java.lang.String,boolean)>($r1, 1);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpsURL: void checkValid()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpsURL r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>()>();

        r0.<org.apache.commons.httpclient.HttpsURL: java.lang.String protocolCharset> = r1;

        virtualinvoke r0.<org.apache.commons.httpclient.HttpsURL: void parseUriReference(java.lang.String,boolean)>(r2, 0);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpsURL: void checkValid()>();

        return;
    }

    public void <init>(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpsURL r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>()>();

        virtualinvoke r0.<org.apache.commons.httpclient.HttpsURL: void parseUriReference(java.lang.String,boolean)>(r1, 0);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpsURL: void checkValid()>();

        return;
    }

    public void <init>(java.lang.String, int, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpsURL r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(null, r1, i0, r2, null, null);

        return;
    }

    public void <init>(java.lang.String, int, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpsURL r0;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(null, r1, i0, r2, r3, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpsURL r0;
        int $i1;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $i1 = (int) -1;

        specialinvoke r0.<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, $i1, null, null, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpsURL r0;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        specialinvoke r0.<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, i0, null, null, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpsURL r0;
        int i0;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, i0, r4, null, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpsURL r0;
        int i0;
        java.lang.String r1, r2, r3, r4, r5;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, i0, r4, r5, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpsURL r0;
        int $i1;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $i1 = (int) -1;

        specialinvoke r0.<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(null, r1, $i1, r2, r3, r4);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpsURL r0;
        int $i1;
        java.lang.String r1, r2, r3, r4, r5;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $i1 = (int) -1;

        specialinvoke r0.<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $i1, r3, r4, r5);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, int, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpsURL r0;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, i0, r3, null, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpsURL r0;
        int i0;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, i0, r3, r4, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URIException $r21;
        java.lang.StringBuffer $r20;
        int i0, $i2, $i4;
        java.lang.String r2, r3, r4, r5, r6, $r7, $r9, $r11, $r14, $r17;
        boolean $z0;
        org.apache.commons.httpclient.HttpsURL r0;
        char[] $r18, $r19;
        java.util.BitSet $r8, $r10, $r12, $r13, $r16;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>()>();

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        if r2 != null goto label1;

        if r3 != null goto label1;

        $i2 = (int) -1;

        if i0 == $i2 goto label4;

     label1:
        $r18 = <org.apache.commons.httpclient.HttpsURL: char[] DEFAULT_SCHEME>;

        r0.<org.apache.commons.httpclient.HttpsURL: char[] _scheme> = $r18;

        $r19 = <org.apache.commons.httpclient.HttpsURL: char[] _default_scheme>;

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r19);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("://");

        if r2 == null goto label2;

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

     label2:
        if r3 == null goto label4;

        $r16 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_host>;

        $r17 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)>(r3, $r16);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $i4 = (int) -1;

        if i0 != $i4 goto label3;

        if i0 == 443 goto label4;

     label3:
        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

     label4:
        if r4 == null goto label6;

        $r12 = <org.apache.commons.httpclient.HttpsURL: java.util.BitSet scheme>;

        if $r12 == null goto label5;

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label5;

        $r21 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r21.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "abs_path requested");

        throw $r21;

     label5:
        $r13 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path>;

        $r14 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)>(r4, $r13);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

     label6:
        if r5 == null goto label7;

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r10 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query>;

        $r11 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)>(r5, $r10);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

     label7:
        if r6 == null goto label8;

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        $r8 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_fragment>;

        $r9 = staticinvoke <org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)>(r6, $r8);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label8:
        $r7 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.commons.httpclient.HttpsURL: void parseUriReference(java.lang.String,boolean)>($r7, 1);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpsURL: void checkValid()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpsURL r0;
        int i0;
        java.lang.String r1, r2, $r3, r4, r5, r6, r7;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        $r3 = staticinvoke <org.apache.commons.httpclient.HttpURL: java.lang.String toUserinfo(java.lang.String,java.lang.String)>(r1, r2);

        specialinvoke r0.<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r3, r4, i0, r5, r6, r7);

        return;
    }

    public void <init>(org.apache.commons.httpclient.HttpsURL, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpsURL r0, r1, $r2;
        java.lang.String r3;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r1 := @parameter0: org.apache.commons.httpclient.HttpsURL;

        r3 := @parameter1: java.lang.String;

        $r2 = new org.apache.commons.httpclient.HttpsURL;

        specialinvoke $r2.<org.apache.commons.httpclient.HttpsURL: void <init>(java.lang.String)>(r3);

        specialinvoke r0.<org.apache.commons.httpclient.HttpsURL: void <init>(org.apache.commons.httpclient.HttpsURL,org.apache.commons.httpclient.HttpsURL)>(r1, $r2);

        return;
    }

    public void <init>(org.apache.commons.httpclient.HttpsURL, org.apache.commons.httpclient.HttpsURL) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpsURL r0, r1, r2;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        r1 := @parameter0: org.apache.commons.httpclient.HttpsURL;

        r2 := @parameter1: org.apache.commons.httpclient.HttpsURL;

        specialinvoke r0.<org.apache.commons.httpclient.HttpURL: void <init>(org.apache.commons.httpclient.HttpURL,org.apache.commons.httpclient.HttpURL)>(r1, r2);

        virtualinvoke r0.<org.apache.commons.httpclient.HttpsURL: void checkValid()>();

        return;
    }

    public char[] getRawScheme()
    {
        char[] $r1, $r2;
        org.apache.commons.httpclient.HttpsURL r0;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        $r1 = r0.<org.apache.commons.httpclient.HttpsURL: char[] _scheme>;

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = <org.apache.commons.httpclient.HttpsURL: char[] DEFAULT_SCHEME>;

     label2:
        return $r2;
    }

    public java.lang.String getScheme()
    {
        org.apache.commons.httpclient.HttpsURL r0;
        char[] $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        $r1 = r0.<org.apache.commons.httpclient.HttpsURL: char[] _scheme>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = new java.lang.String;

        $r2 = <org.apache.commons.httpclient.HttpsURL: char[] DEFAULT_SCHEME>;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r2);

     label2:
        return $r3;
    }

    public int getPort()
    {
        org.apache.commons.httpclient.HttpsURL r0;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        $i0 = r0.<org.apache.commons.httpclient.HttpsURL: int _port>;

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $i1 = 443;

        goto label2;

     label1:
        $i1 = r0.<org.apache.commons.httpclient.HttpsURL: int _port>;

     label2:
        return $i1;
    }

    protected void checkValid() throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpsURL r0;
        char[] $r1, $r2, $r3;
        org.apache.commons.httpclient.URIException $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.HttpsURL;

        $r2 = r0.<org.apache.commons.httpclient.HttpsURL: char[] _scheme>;

        $r1 = <org.apache.commons.httpclient.HttpsURL: char[] DEFAULT_SCHEME>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.HttpsURL: boolean equals(char[],char[])>($r2, $r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.apache.commons.httpclient.HttpsURL: char[] _scheme>;

        if $r3 == null goto label1;

        $r4 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r4.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "wrong class use");

        throw $r4;

     label1:
        return;
    }

    static void <clinit>()
    {
        char[] $r0, $r1;

        <org.apache.commons.httpclient.HttpsURL: long serialVersionUID> = 887844277028676648L;

        <org.apache.commons.httpclient.HttpsURL: int _default_port> = 443;

        <org.apache.commons.httpclient.HttpsURL: int DEFAULT_PORT> = 443;

        $r0 = newarray (char)[5];

        $r0[0] = 104;

        $r0[1] = 116;

        $r0[2] = 116;

        $r0[3] = 112;

        $r0[4] = 115;

        <org.apache.commons.httpclient.HttpsURL: char[] DEFAULT_SCHEME> = $r0;

        $r1 = <org.apache.commons.httpclient.HttpsURL: char[] DEFAULT_SCHEME>;

        <org.apache.commons.httpclient.HttpsURL: char[] _default_scheme> = $r1;

        return;
    }
}
