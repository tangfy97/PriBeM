public class org.wiztools.restclient.bean.ContentTypeBean extends java.lang.Object implements org.wiztools.restclient.bean.ContentType
{
    private java.lang.String contentType;
    private java.nio.charset.Charset charset;

    public void <init>(java.lang.String, java.nio.charset.Charset)
    {
        java.nio.charset.Charset r2;
        org.wiztools.restclient.bean.ContentTypeBean r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r0 := @this: org.wiztools.restclient.bean.ContentTypeBean;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.nio.charset.Charset;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = staticinvoke <org.wiztools.commons.StringUtil: boolean isEmpty(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("content-type MUST NOT be empty!");

        throw $r3;

     label1:
        r0.<org.wiztools.restclient.bean.ContentTypeBean: java.lang.String contentType> = r1;

        r0.<org.wiztools.restclient.bean.ContentTypeBean: java.nio.charset.Charset charset> = r2;

        return;
    }

    public java.lang.String getContentType()
    {
        java.lang.String $r1;
        org.wiztools.restclient.bean.ContentTypeBean r0;

        r0 := @this: org.wiztools.restclient.bean.ContentTypeBean;

        $r1 = r0.<org.wiztools.restclient.bean.ContentTypeBean: java.lang.String contentType>;

        return $r1;
    }

    public java.nio.charset.Charset getCharset()
    {
        java.nio.charset.Charset $r1;
        org.wiztools.restclient.bean.ContentTypeBean r0;

        r0 := @this: org.wiztools.restclient.bean.ContentTypeBean;

        $r1 = r0.<org.wiztools.restclient.bean.ContentTypeBean: java.nio.charset.Charset charset>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.nio.charset.Charset $r8, $r9, $r10, $r11, $r12;
        org.wiztools.restclient.bean.ContentTypeBean r1, r4;
        java.lang.String $r5, $r6, $r7, $r13;
        boolean $z0, $z1;
        java.lang.Object r0;
        java.lang.Class $r2, $r3;

        r1 := @this: org.wiztools.restclient.bean.ContentTypeBean;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label2;

        return 0;

     label2:
        r4 = (org.wiztools.restclient.bean.ContentTypeBean) r0;

        $r5 = r1.<org.wiztools.restclient.bean.ContentTypeBean: java.lang.String contentType>;

        if $r5 != null goto label3;

        $r13 = r4.<org.wiztools.restclient.bean.ContentTypeBean: java.lang.String contentType>;

        if $r13 == null goto label5;

        goto label4;

     label3:
        $r7 = r1.<org.wiztools.restclient.bean.ContentTypeBean: java.lang.String contentType>;

        $r6 = r4.<org.wiztools.restclient.bean.ContentTypeBean: java.lang.String contentType>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label5;

     label4:
        return 0;

     label5:
        $r9 = r1.<org.wiztools.restclient.bean.ContentTypeBean: java.nio.charset.Charset charset>;

        $r8 = r4.<org.wiztools.restclient.bean.ContentTypeBean: java.nio.charset.Charset charset>;

        if $r9 == $r8 goto label7;

        $r10 = r1.<org.wiztools.restclient.bean.ContentTypeBean: java.nio.charset.Charset charset>;

        if $r10 == null goto label6;

        $r12 = r1.<org.wiztools.restclient.bean.ContentTypeBean: java.nio.charset.Charset charset>;

        $r11 = r4.<org.wiztools.restclient.bean.ContentTypeBean: java.nio.charset.Charset charset>;

        $z1 = virtualinvoke $r12.<java.nio.charset.Charset: boolean equals(java.lang.Object)>($r11);

        if $z1 != 0 goto label7;

     label6:
        return 0;

     label7:
        return 1;
    }

    public int hashCode()
    {
        java.nio.charset.Charset $r2, $r3;
        org.wiztools.restclient.bean.ContentTypeBean r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r1, $r4;

        r0 := @this: org.wiztools.restclient.bean.ContentTypeBean;

        $r1 = r0.<org.wiztools.restclient.bean.ContentTypeBean: java.lang.String contentType>;

        if $r1 == null goto label1;

        $r4 = r0.<org.wiztools.restclient.bean.ContentTypeBean: java.lang.String contentType>;

        $i3 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $i3 = 0;

     label2:
        $i2 = 259 + $i3;

        $i0 = 37 * $i2;

        $r2 = r0.<org.wiztools.restclient.bean.ContentTypeBean: java.nio.charset.Charset charset>;

        if $r2 == null goto label3;

        $r3 = r0.<org.wiztools.restclient.bean.ContentTypeBean: java.nio.charset.Charset charset>;

        $i4 = virtualinvoke $r3.<java.nio.charset.Charset: int hashCode()>();

        goto label4;

     label3:
        $i4 = 0;

     label4:
        $i1 = $i0 + $i4;

        return $i1;
    }

    public java.lang.String toString()
    {
        java.nio.charset.Charset $r1;
        org.wiztools.restclient.bean.ContentTypeBean r0;
        java.lang.String $r2, $r3;

        r0 := @this: org.wiztools.restclient.bean.ContentTypeBean;

        $r2 = r0.<org.wiztools.restclient.bean.ContentTypeBean: java.lang.String contentType>;

        $r1 = r0.<org.wiztools.restclient.bean.ContentTypeBean: java.nio.charset.Charset charset>;

        $r3 = staticinvoke <org.wiztools.restclient.util.HttpUtil: java.lang.String getFormattedContentType(java.lang.String,java.nio.charset.Charset)>($r2, $r1);

        return $r3;
    }
}
