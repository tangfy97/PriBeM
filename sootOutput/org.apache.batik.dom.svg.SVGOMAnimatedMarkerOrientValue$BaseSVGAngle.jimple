public class org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle extends org.apache.batik.dom.svg.SVGOMAngle
{
    private final org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0;

    protected void <init>(org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue r1;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle;

        r1 := @parameter0: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMAngle: void <init>()>();

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0> = r1;

        return;
    }

    public void invalidate()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue $r1;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r1.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: boolean valid> = 0;

        return;
    }

    protected void reset()
    {
        java.lang.Throwable $r13;
        short $s0, $s1;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r12, $r14;
        int $i2;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle r0;
        java.lang.String $r9, $r10, r15;
        org.apache.batik.dom.svg.AbstractElement $r11;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle;

     label01:
        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r1.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: boolean changing> = 1;

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r2.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: boolean valid> = 1;

        $r3 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $s0 = $r3.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: short baseEnumerationVal>;

        $i2 = (int) $s0;

        if $i2 != 2 goto label02;

        r15 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMAngle: java.lang.String getValueAsString()>();

        goto label05;

     label02:
        $r4 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $s1 = $r4.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: short baseEnumerationVal>;

        if $s1 != 1 goto label03;

        r15 = "auto";

        goto label05;

     label03:
        goto label10;

     label04:
        return;

     label05:
        $r6 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r11 = $r6.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r7 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r10 = $r7.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String namespaceURI>;

        $r8 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r9 = $r8.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        virtualinvoke $r11.<org.apache.batik.dom.AbstractElement: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>($r10, $r9, r15);

        goto label11;

     label06:
        goto label09;

     label07:
        $r13 := @caughtexception;

        goto label12;

     label08:
        throw $r13;

     label09:
        return;

     label10:
        $r5 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r5.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: boolean changing> = 0;

        goto label04;

     label11:
        $r12 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r12.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: boolean changing> = 0;

        goto label06;

     label12:
        $r14 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r14.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: boolean changing> = 0;

        goto label08;

        catch java.lang.Throwable from label01 to label07 with label07;
    }

    protected void revalidate()
    {
        org.w3c.dom.Attr $r8;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue $r1, $r2, $r3, $r4, $r10;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle r0;
        java.lang.String $r5, $r6, $r9;
        org.apache.batik.dom.svg.AbstractElement $r7;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $z0 = $r1.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: boolean valid>;

        if $z0 != 0 goto label3;

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r7 = $r2.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r6 = $r3.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String namespaceURI>;

        $r4 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r5 = $r4.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        $r8 = virtualinvoke $r7.<org.apache.batik.dom.AbstractElement: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>($r6, $r5);

        if $r8 != null goto label1;

        r0.<org.apache.batik.dom.svg.SVGOMAngle: short unitType> = 1;

        r0.<org.apache.batik.dom.svg.SVGOMAngle: float value> = 0.0F;

        goto label2;

     label1:
        $r9 = interfaceinvoke $r8.<org.w3c.dom.Attr: java.lang.String getValue()>();

        virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: void parse(java.lang.String)>($r9);

     label2:
        $r10 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r10.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: boolean valid> = 1;

     label3:
        return;
    }

    protected void parse(java.lang.String)
    {
        short $s0;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue $r2, $r3, $r4;
        java.lang.String r0;
        org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle r1;
        boolean $z0;

        r1 := @this: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("auto");

        if $z0 == 0 goto label1;

        r1.<org.apache.batik.dom.svg.SVGOMAngle: short unitType> = 1;

        r1.<org.apache.batik.dom.svg.SVGOMAngle: float value> = 0.0F;

        $r4 = r1.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r4.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: short baseEnumerationVal> = 1;

        goto label3;

     label1:
        specialinvoke r1.<org.apache.batik.dom.svg.SVGOMAngle: void parse(java.lang.String)>(r0);

        $s0 = r1.<org.apache.batik.dom.svg.SVGOMAngle: short unitType>;

        if $s0 != 0 goto label2;

        $r3 = r1.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r3.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: short baseEnumerationVal> = 0;

        goto label3;

     label2:
        $r2 = r1.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue$BaseSVGAngle: org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue this$0>;

        $r2.<org.apache.batik.dom.svg.SVGOMAnimatedMarkerOrientValue: short baseEnumerationVal> = 2;

     label3:
        return;
    }
}
