class org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler extends java.lang.Object implements java.lang.reflect.InvocationHandler
{
    private final org.jruby.runtime.builtin.IRubyObject rubyObject;
    private final org.jruby.Ruby ruby;

    public void <init>(org.jruby.runtime.builtin.IRubyObject, org.jruby.Ruby)
    {
        org.jruby.runtime.builtin.IRubyObject r1;
        org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler r0;
        org.jruby.Ruby r2;

        r0 := @this: org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler;

        r1 := @parameter0: org.jruby.runtime.builtin.IRubyObject;

        r2 := @parameter1: org.jruby.Ruby;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: org.jruby.runtime.builtin.IRubyObject rubyObject> = r1;

        r0.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: org.jruby.Ruby ruby> = r2;

        return;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        org.jruby.exceptions.RaiseException $r28;
        org.jruby.Ruby $r4;
        java.lang.Integer $r19;
        java.lang.reflect.Method r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.jruby.runtime.ThreadContext $r6;
        org.springframework.scripting.jruby.JRubyScriptUtils$JRubyExecutionException $r27;
        org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler r1;
        java.lang.StringBuilder $r14, $r15, $r26;
        java.lang.Throwable $r22;
        java.lang.Object[] r2;
        int $i0;
        java.lang.Boolean $r21;
        java.lang.String $r7, $r12, $r16, r25;
        org.jruby.runtime.builtin.IRubyObject[] $r3;
        org.jruby.runtime.builtin.IRubyObject $r5, $r8, $r11, $r17, $r18;
        java.lang.Class $r9;
        java.lang.Object $r10, $r20, r24;

        r1 := @this: org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler;

        r24 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.reflect.Method;

        r2 := @parameter2: java.lang.Object[];

        $z0 = staticinvoke <org.springframework.util.ReflectionUtils: boolean isEqualsMethod(java.lang.reflect.Method)>(r0);

        if $z0 == 0 goto label1;

        $r20 = r2[0];

        $z4 = specialinvoke r1.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: boolean isProxyForSameRubyObject(java.lang.Object)>($r20);

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        return $r21;

     label1:
        $z1 = staticinvoke <org.springframework.util.ReflectionUtils: boolean isHashCodeMethod(java.lang.reflect.Method)>(r0);

        if $z1 == 0 goto label2;

        $r18 = r1.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: org.jruby.runtime.builtin.IRubyObject rubyObject>;

        $i0 = virtualinvoke $r18.<java.lang.Object: int hashCode()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r19;

     label2:
        $z2 = staticinvoke <org.springframework.util.ReflectionUtils: boolean isToStringMethod(java.lang.reflect.Method)>(r0);

        if $z2 == 0 goto label4;

        $r11 = r1.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: org.jruby.runtime.builtin.IRubyObject rubyObject>;

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        r25 = $r12;

        $z3 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r12);

        if $z3 != 0 goto label3;

        $r17 = r1.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: org.jruby.runtime.builtin.IRubyObject rubyObject>;

        r25 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String identityToString(java.lang.Object)>($r17);

     label3:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("JRuby object [");

        $r14 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;

     label4:
        $r3 = specialinvoke r1.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: org.jruby.runtime.builtin.IRubyObject[] convertToRuby(java.lang.Object[])>(r2);

        $r5 = r1.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: org.jruby.runtime.builtin.IRubyObject rubyObject>;

        $r4 = r1.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: org.jruby.Ruby ruby>;

        $r6 = virtualinvoke $r4.<org.jruby.Ruby: org.jruby.runtime.ThreadContext getCurrentContext()>();

        $r7 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        $r8 = interfaceinvoke $r5.<org.jruby.runtime.builtin.IRubyObject: org.jruby.runtime.builtin.IRubyObject callMethod(org.jruby.runtime.ThreadContext,java.lang.String,org.jruby.runtime.builtin.IRubyObject[])>($r6, $r7, $r3);

        $r9 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r10 = specialinvoke r1.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: java.lang.Object convertFromRuby(org.jruby.runtime.builtin.IRubyObject,java.lang.Class)>($r8, $r9);

     label5:
        return $r10;

     label6:
        $r22 := @caughtexception;

        $r27 = new org.springframework.scripting.jruby.JRubyScriptUtils$JRubyExecutionException;

        $r28 = (org.jruby.exceptions.RaiseException) $r22;

        specialinvoke $r27.<org.springframework.scripting.jruby.JRubyScriptUtils$JRubyExecutionException: void <init>(org.jruby.exceptions.RaiseException)>($r28);

        throw $r27;

        catch org.jruby.exceptions.RaiseException from label4 to label5 with label6;
    }

    private boolean isProxyForSameRubyObject(java.lang.Object)
    {
        org.jruby.runtime.builtin.IRubyObject $r5, $r6;
        java.lang.Object r0;
        java.lang.Class $r1;
        org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler r3, $r4;
        java.lang.reflect.InvocationHandler $r2;
        boolean $z0, $z1, $z2;

        r3 := @this: org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>($r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>(r0);

        $z1 = $r2 instanceof org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler;

        if $z1 == 0 goto label2;

        $r6 = r3.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: org.jruby.runtime.builtin.IRubyObject rubyObject>;

        $r4 = (org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler) $r2;

        $r5 = $r4.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: org.jruby.runtime.builtin.IRubyObject rubyObject>;

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private org.jruby.runtime.builtin.IRubyObject[] convertToRuby(java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.jruby.Ruby $r5;
        org.jruby.runtime.builtin.IRubyObject[] $r1, r2;
        int $i0, $i1, $i2, i3;
        org.jruby.runtime.builtin.IRubyObject $r6;
        org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler r3;
        java.lang.Object $r4;

        r3 := @this: org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler;

        r0 := @parameter0: java.lang.Object[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

     label1:
        $r1 = newarray (org.jruby.runtime.builtin.IRubyObject)[0];

        return $r1;

     label2:
        $i1 = lengthof r0;

        r2 = newarray (org.jruby.runtime.builtin.IRubyObject)[$i1];

        i3 = 0;

        goto label4;

     label3:
        $r5 = r3.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: org.jruby.Ruby ruby>;

        $r4 = r0[i3];

        $r6 = staticinvoke <org.jruby.javasupport.JavaEmbedUtils: org.jruby.runtime.builtin.IRubyObject javaToRuby(org.jruby.Ruby,java.lang.Object)>($r5, $r4);

        r2[i3] = $r6;

        i3 = i3 + 1;

     label4:
        $i2 = lengthof r0;

        if i3 < $i2 goto label3;

        return r2;
    }

    private java.lang.Object convertFromRuby(org.jruby.runtime.builtin.IRubyObject, java.lang.Class)
    {
        org.jruby.Ruby $r3;
        org.jruby.RubyArray $r5;
        org.jruby.runtime.builtin.IRubyObject[] $r6;
        org.jruby.runtime.builtin.IRubyObject r1;
        org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler r0;
        java.lang.Class r2;
        java.lang.Object $r4, r7;
        boolean $z0, $z1;

        r0 := @this: org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler;

        r1 := @parameter0: org.jruby.runtime.builtin.IRubyObject;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: org.jruby.Ruby ruby>;

        $r4 = staticinvoke <org.jruby.javasupport.JavaEmbedUtils: java.lang.Object rubyToJava(org.jruby.Ruby,org.jruby.runtime.builtin.IRubyObject,java.lang.Class)>($r3, r1, r2);

        r7 = $r4;

        $z0 = $r4 instanceof org.jruby.RubyArray;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r2.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label1;

        $r5 = (org.jruby.RubyArray) $r4;

        $r6 = virtualinvoke $r5.<org.jruby.RubyArray: org.jruby.runtime.builtin.IRubyObject[] toJavaArray()>();

        r7 = specialinvoke r0.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: java.lang.Object convertFromRubyArray(org.jruby.runtime.builtin.IRubyObject[],java.lang.Class)>($r6, r2);

     label1:
        return r7;
    }

    private java.lang.Object convertFromRubyArray(org.jruby.runtime.builtin.IRubyObject[], java.lang.Class)
    {
        org.jruby.runtime.builtin.IRubyObject[] r2;
        int $i0, $i1, i2;
        org.jruby.runtime.builtin.IRubyObject r4;
        java.lang.Class r0, $r1;
        java.lang.Object $r3, $r6;
        org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler r5;

        r5 := @this: org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler;

        r2 := @parameter0: org.jruby.runtime.builtin.IRubyObject[];

        r0 := @parameter1: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>();

        $i0 = lengthof r2;

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r1, $i0);

        i2 = 0;

        goto label2;

     label1:
        r4 = r2[i2];

        $r6 = specialinvoke r5.<org.springframework.scripting.jruby.JRubyScriptUtils$RubyObjectInvocationHandler: java.lang.Object convertFromRuby(org.jruby.runtime.builtin.IRubyObject,java.lang.Class)>(r4, $r1);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r3, i2, $r6);

        i2 = i2 + 1;

     label2:
        $i1 = lengthof r2;

        if i2 < $i1 goto label1;

        return $r3;
    }
}
