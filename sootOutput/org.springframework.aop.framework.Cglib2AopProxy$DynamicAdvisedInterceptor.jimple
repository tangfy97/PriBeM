class org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor extends java.lang.Object implements net.sf.cglib.proxy.MethodInterceptor, java.io.Serializable
{
    private org.springframework.aop.framework.AdvisedSupport advised;

    public void <init>(org.springframework.aop.framework.AdvisedSupport)
    {
        org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor r0;
        org.springframework.aop.framework.AdvisedSupport r1;

        r0 := @this: org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor;

        r1 := @parameter0: org.springframework.aop.framework.AdvisedSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor: org.springframework.aop.framework.AdvisedSupport advised> = r1;

        return;
    }

    public java.lang.Object intercept(java.lang.Object, java.lang.reflect.Method, java.lang.Object[], net.sf.cglib.proxy.MethodProxy) throws java.lang.Throwable
    {
        java.lang.Throwable $r10;
        java.lang.Object[] r8;
        int $i0;
        java.lang.reflect.Method r3;
        org.springframework.aop.framework.AdvisedSupport $r1, $r4;
        boolean $z0, $z1, $z2, z3, z4, z5;
        org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation $r6;
        java.util.List $r5;
        org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor r0;
        java.lang.Object $r2, r7, r11, r13, r14, $r15;
        java.lang.Class r12;
        net.sf.cglib.proxy.MethodProxy r9;

        r0 := @this: org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor;

        r7 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.reflect.Method;

        r8 := @parameter2: java.lang.Object[];

        r9 := @parameter3: net.sf.cglib.proxy.MethodProxy;

        r11 = null;

        z3 = 0;

        z5 = 0;

        z4 = 0;

        r12 = null;

        r13 = null;

     label01:
        $r1 = r0.<org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor: org.springframework.aop.framework.AdvisedSupport advised>;

        $z0 = $r1.<org.springframework.aop.framework.AdvisedSupport: boolean exposeProxy>;

        if $z0 == 0 goto label02;

        r11 = staticinvoke <org.springframework.aop.framework.AopContext: java.lang.Object setCurrentProxy(java.lang.Object)>(r7);

        z3 = 1;

        z5 = 1;

        z4 = 1;

     label02:
        $r2 = virtualinvoke r0.<org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor: java.lang.Object getTarget()>();

        r13 = $r2;

        if $r2 == null goto label03;

        r12 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

     label03:
        $r4 = r0.<org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor: org.springframework.aop.framework.AdvisedSupport advised>;

        $r5 = virtualinvoke $r4.<org.springframework.aop.framework.AdvisedSupport: java.util.List getInterceptorsAndDynamicInterceptionAdvice(java.lang.reflect.Method,java.lang.Class)>(r3, r12);

        $z1 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label04;

        $i0 = virtualinvoke r3.<java.lang.reflect.Method: int getModifiers()>();

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        if $z2 == 0 goto label04;

        r14 = virtualinvoke r9.<net.sf.cglib.proxy.MethodProxy: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, r8);

        goto label05;

     label04:
        $r6 = new org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation;

        specialinvoke $r6.<org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation: void <init>(java.lang.Object,java.lang.Object,java.lang.reflect.Method,java.lang.Object[],java.lang.Class,java.util.List,net.sf.cglib.proxy.MethodProxy)>(r7, $r2, r3, r8, r12, $r5, r9);

        r14 = virtualinvoke $r6.<org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation: java.lang.Object proceed()>();

     label05:
        $r15 = staticinvoke <org.springframework.aop.framework.Cglib2AopProxy: java.lang.Object access$0(java.lang.Object,java.lang.Object,java.lang.reflect.Method,java.lang.Object)>(r7, $r2, r3, r14);

     label06:
        if $r2 == null goto label07;

        virtualinvoke r0.<org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor: void releaseTarget(java.lang.Object)>($r2);

     label07:
        if z4 == 0 goto label08;

        staticinvoke <org.springframework.aop.framework.AopContext: java.lang.Object setCurrentProxy(java.lang.Object)>(r11);

     label08:
        return $r15;

     label09:
        $r10 := @caughtexception;

        if r13 == null goto label10;

        virtualinvoke r0.<org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor: void releaseTarget(java.lang.Object)>(r13);

     label10:
        if z5 == 0 goto label11;

        staticinvoke <org.springframework.aop.framework.AopContext: java.lang.Object setCurrentProxy(java.lang.Object)>(r11);

     label11:
        throw $r10;

        catch java.lang.Throwable from label01 to label06 with label09;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        org.springframework.aop.framework.AdvisedSupport $r3, $r4;

        r0 := @this: org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label2;

        $z0 = r1 instanceof org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor: org.springframework.aop.framework.AdvisedSupport advised>;

        $r2 = (org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor) r1;

        $r3 = $r2.<org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor: org.springframework.aop.framework.AdvisedSupport advised>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public int hashCode()
    {
        int $i0;
        org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor r0;
        org.springframework.aop.framework.AdvisedSupport $r1;

        r0 := @this: org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor;

        $r1 = r0.<org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor: org.springframework.aop.framework.AdvisedSupport advised>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    protected java.lang.Object getTarget() throws java.lang.Exception
    {
        org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor r0;
        org.springframework.aop.TargetSource $r2;
        java.lang.Object $r3;
        org.springframework.aop.framework.AdvisedSupport $r1;

        r0 := @this: org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor;

        $r1 = r0.<org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor: org.springframework.aop.framework.AdvisedSupport advised>;

        $r2 = virtualinvoke $r1.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        $r3 = interfaceinvoke $r2.<org.springframework.aop.TargetSource: java.lang.Object getTarget()>();

        return $r3;
    }

    protected void releaseTarget(java.lang.Object) throws java.lang.Exception
    {
        org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor r0;
        org.springframework.aop.TargetSource $r2;
        java.lang.Object r3;
        org.springframework.aop.framework.AdvisedSupport $r1;

        r0 := @this: org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor: org.springframework.aop.framework.AdvisedSupport advised>;

        $r2 = virtualinvoke $r1.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        interfaceinvoke $r2.<org.springframework.aop.TargetSource: void releaseTarget(java.lang.Object)>(r3);

        return;
    }
}
