public class com.jidesoft.utils.LoggerUtils extends java.lang.Object
{

    public void <init>()
    {
        com.jidesoft.utils.LoggerUtils r0;

        r0 := @this: com.jidesoft.utils.LoggerUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.logging.Handler enableLogger(java.lang.String, java.util.logging.Level)
    {
        com.jidesoft.utils.LoggerUtils$1 $r3;
        java.lang.String r0;
        java.util.logging.Logger $r1;
        java.util.logging.Level r2;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.logging.Level;

        $r1 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(r0);

        virtualinvoke $r1.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>(r2);

        $r3 = new com.jidesoft.utils.LoggerUtils$1;

        specialinvoke $r3.<com.jidesoft.utils.LoggerUtils$1: void <init>()>();

        virtualinvoke $r1.<java.util.logging.Logger: void addHandler(java.util.logging.Handler)>($r3);

        return $r3;
    }

    public static void disableLogger(java.lang.String, java.util.logging.Handler)
    {
        java.lang.String r0;
        java.util.logging.Logger $r1;
        java.util.logging.Handler r2;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.logging.Handler;

        $r1 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(r0);

        virtualinvoke $r1.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>(null);

        virtualinvoke $r1.<java.util.logging.Logger: void removeHandler(java.util.logging.Handler)>(r2);

        return;
    }
}
