public class ucar.nc2.dt.grid.NetcdfCFWriter extends java.lang.Object
{
    private static org.slf4j.Logger log;

    public void <init>()
    {
        ucar.nc2.dt.grid.NetcdfCFWriter r0;

        r0 := @this: ucar.nc2.dt.grid.NetcdfCFWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void makeFile(java.lang.String, ucar.nc2.dt.GridDataset, java.util.List, ucar.unidata.geoloc.LatLonRect, ucar.nc2.units.DateRange) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dt.GridDataset r2;
        ucar.unidata.geoloc.LatLonRect r4;
        java.util.List r3;
        ucar.nc2.units.DateRange r5;
        ucar.nc2.dt.grid.NetcdfCFWriter $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: ucar.nc2.dt.GridDataset;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: ucar.unidata.geoloc.LatLonRect;

        r5 := @parameter4: ucar.nc2.units.DateRange;

        $r0 = new ucar.nc2.dt.grid.NetcdfCFWriter;

        specialinvoke $r0.<ucar.nc2.dt.grid.NetcdfCFWriter: void <init>()>();

        virtualinvoke $r0.<ucar.nc2.dt.grid.NetcdfCFWriter: void makeFile(java.lang.String,ucar.nc2.dt.GridDataset,java.util.List,ucar.unidata.geoloc.LatLonRect,ucar.nc2.units.DateRange,boolean,int,int,int)>(r1, r2, r3, r4, r5, 0, 1, 1, 1);

        return;
    }

    public void makeFile(java.lang.String, ucar.nc2.dt.GridDataset, java.util.List, ucar.unidata.geoloc.LatLonRect, ucar.nc2.units.DateRange, boolean, int, int, int) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dt.grid.NetcdfCFWriter r0;
        ucar.nc2.dt.GridDataset r2;
        ucar.unidata.geoloc.LatLonRect r4;
        java.util.List r3;
        ucar.nc2.units.DateRange r5;
        int i0, i1, i2;
        java.lang.String r1;
        boolean z0;

        r0 := @this: ucar.nc2.dt.grid.NetcdfCFWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: ucar.nc2.dt.GridDataset;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: ucar.unidata.geoloc.LatLonRect;

        r5 := @parameter4: ucar.nc2.units.DateRange;

        z0 := @parameter5: boolean;

        i0 := @parameter6: int;

        i2 := @parameter7: int;

        i1 := @parameter8: int;

        virtualinvoke r0.<ucar.nc2.dt.grid.NetcdfCFWriter: void makeFile(java.lang.String,ucar.nc2.dt.GridDataset,java.util.List,ucar.unidata.geoloc.LatLonRect,int,ucar.ma2.Range,ucar.nc2.units.DateRange,int,boolean)>(r1, r2, r3, r4, i0, null, r5, i1, z0);

        return;
    }

    public void makeFile(java.lang.String, ucar.nc2.dt.GridDataset, java.util.List, ucar.unidata.geoloc.LatLonRect, int, ucar.ma2.Range, ucar.nc2.units.DateRange, int, boolean) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dt.GridDatatype $r61, $r93, r138;
        byte $b0;
        java.lang.Long $r91;
        ucar.nc2.Attribute r146, $r164, $r167, $r170, $r171, $r172, $r173, $r174, $r175, $r176, $r177, $r178;
        java.lang.StringBuilder $r15, $r17, $r18, $r20, $r80, $r83, $r84, $r85, $r87, $r119, $r122, $r123, $r125, $r129, $r132, $r133, $r135, $r158, $r160, $r165, $r168, $r169;
        long $l1, $l2, l7, $l8, $l10, $l11;
        ucar.nc2.dataset.ProjectionCT $r31;
        ucar.ma2.InvalidRangeException $r159, $r161;
        java.util.Date $r113, $r115, $r121, $r124, $r131, $r134, $r166;
        ucar.nc2.dataset.VariableDS $r140;
        ucar.nc2.units.DateType $r112, $r114, $r120, $r130;
        int i3, $i4, $i5, i6, $i9, $i12, $i14;
        ucar.nc2.Variable $r33, $r39, $r62, $r73, $r106;
        org.slf4j.Logger $r82, $r90;
        java.lang.Object $r29, $r37, $r60, $r71, $r78, $r89, $r92, $r104, $r109;
        ucar.nc2.dt.grid.NetcdfCFWriter r34;
        ucar.nc2.dataset.CoordinateAxis $r102, $r103, r144, r148, r150;
        ucar.nc2.constants.AxisType $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r56, $r57, $r58, $r59, $r152, $r153;
        ucar.nc2.Group $r23;
        ucar.nc2.units.DateRange r96;
        ucar.nc2.dt.GridCoordSystem $r30, $r64, $r94, $r141;
        ucar.nc2.NetcdfFileWriteable $r22;
        java.util.ArrayList $r155, $r156, $r157, $r179;
        java.lang.String r9, $r16, $r21, $r32, $r38, $r55, $r68, $r72, $r77, $r79, $r86, $r88, $r105, $r107, $r108, $r110, $r111, $r126, $r136, r137, r147, $r151;
        ucar.nc2.dt.GridDataset r0;
        ucar.unidata.geoloc.LatLonRect r98;
        ucar.nc2.dataset.NetcdfDataset r2, $r36;
        ucar.nc2.dataset.TransformType $r74, $r75;
        ucar.unidata.geoloc.ProjectionImpl $r101;
        ucar.nc2.FileWriter $r163;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10, $z11, z12, $z13, $z14, $z15;
        ucar.nc2.dataset.CoordinateAxis1DTime $r95;
        ucar.ma2.Range r97, r139, $r162;
        java.util.List r6, $r10, $r27, $r65, $r69, $r99, $r142;
        ucar.nc2.NetcdfFile $r1, $r35;
        ucar.nc2.dataset.CoordinateTransform r145, r149;
        java.util.Iterator $r7, $r11, $r24, $r25, $r28, $r66, $r70, $r100, $r143;
        ucar.nc2.dt.GridDataset$Gridset r154;

        r34 := @this: ucar.nc2.dt.grid.NetcdfCFWriter;

        r9 := @parameter0: java.lang.String;

        r0 := @parameter1: ucar.nc2.dt.GridDataset;

        r6 := @parameter2: java.util.List;

        r98 := @parameter3: ucar.unidata.geoloc.LatLonRect;

        i3 := @parameter4: int;

        r97 := @parameter5: ucar.ma2.Range;

        r96 := @parameter6: ucar.nc2.units.DateRange;

        i6 := @parameter7: int;

        z9 := @parameter8: boolean;

        $r1 = interfaceinvoke r0.<ucar.nc2.dt.GridDataset: ucar.nc2.NetcdfFile getNetcdfFile()>();

        r2 = (ucar.nc2.dataset.NetcdfDataset) $r1;

        $r155 = new java.util.ArrayList;

        specialinvoke $r155.<java.util.ArrayList: void <init>()>();

        $r156 = new java.util.ArrayList;

        specialinvoke $r156.<java.util.ArrayList: void <init>()>();

        $r157 = new java.util.ArrayList;

        specialinvoke $r157.<java.util.ArrayList: void <init>()>();

        l7 = 0L;

        $r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z10 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label15;

        $r92 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r137 = (java.lang.String) $r92;

        $z4 = virtualinvoke $r156.<java.util.ArrayList: boolean contains(java.lang.Object)>(r137);

        if $z4 == 0 goto label02;

        goto label01;

     label02:
        virtualinvoke $r156.<java.util.ArrayList: boolean add(java.lang.Object)>(r137);

        $r93 = interfaceinvoke r0.<ucar.nc2.dt.GridDataset: ucar.nc2.dt.GridDatatype findGridDatatype(java.lang.String)>(r137);

        r138 = $r93;

        $r94 = interfaceinvoke $r93.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r95 = interfaceinvoke $r94.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1DTime getTimeAxis1D()>();

        r139 = null;

        if r96 == null goto label05;

        if $r95 == null goto label05;

        $r112 = virtualinvoke r96.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $r113 = virtualinvoke $r112.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $i4 = virtualinvoke $r95.<ucar.nc2.dataset.CoordinateAxis1DTime: int findTimeIndexFromDate(java.util.Date)>($r113);

        $r114 = virtualinvoke r96.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $r115 = virtualinvoke $r114.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $i5 = virtualinvoke $r95.<ucar.nc2.dataset.CoordinateAxis1DTime: int findTimeIndexFromDate(java.util.Date)>($r115);

        if $i4 >= 0 goto label03;

        $r159 = new ucar.ma2.InvalidRangeException;

        $r158 = new java.lang.StringBuilder;

        specialinvoke $r158.<java.lang.StringBuilder: void <init>()>();

        $r129 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start time=");

        $r130 = virtualinvoke r96.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $r131 = virtualinvoke $r130.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $r132 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r131);

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be >= ");

        $r134 = virtualinvoke $r95.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date getTimeDate(int)>(0);

        $r135 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r134);

        $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r159.<ucar.ma2.InvalidRangeException: void <init>(java.lang.String)>($r136);

        throw $r159;

     label03:
        if $i5 >= 0 goto label04;

        $r161 = new ucar.ma2.InvalidRangeException;

        $r160 = new java.lang.StringBuilder;

        specialinvoke $r160.<java.lang.StringBuilder: void <init>()>();

        $r119 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("end time=");

        $r120 = virtualinvoke r96.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $r121 = virtualinvoke $r120.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $r122 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r121);

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be >= ");

        $r124 = virtualinvoke $r95.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date getTimeDate(int)>(0);

        $r125 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r124);

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r161.<ucar.ma2.InvalidRangeException: void <init>(java.lang.String)>($r126);

        throw $r161;

     label04:
        $r162 = new ucar.ma2.Range;

        specialinvoke $r162.<ucar.ma2.Range: void <init>(int,int)>($i4, $i5);

        r139 = $r162;

     label05:
        if null != r139 goto label06;

        if r97 != null goto label06;

        if r98 != null goto label06;

        if i3 <= 1 goto label07;

     label06:
        r138 = interfaceinvoke $r93.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridDatatype makeSubset(ucar.ma2.Range,ucar.ma2.Range,ucar.unidata.geoloc.LatLonRect,int,int,int)>(r139, r97, r98, 1, i3, i3);

     label07:
        $r140 = interfaceinvoke r138.<ucar.nc2.dt.GridDatatype: ucar.nc2.dataset.VariableDS getVariable()>();

        virtualinvoke $r155.<java.util.ArrayList: boolean add(java.lang.Object)>($r140);

        $l8 = virtualinvoke $r140.<ucar.nc2.Variable: long getSize()>();

        $i9 = virtualinvoke $r140.<ucar.nc2.Variable: int getElementSize()>();

        $l10 = (long) $i9;

        $l11 = $l8 * $l10;

        l7 = l7 + $l11;

        $r141 = interfaceinvoke r138.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r142 = interfaceinvoke $r141.<ucar.nc2.dt.GridCoordSystem: java.util.List getCoordinateAxes()>();

        $r143 = interfaceinvoke $r142.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z11 = interfaceinvoke $r143.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label10;

        $r109 = interfaceinvoke $r143.<java.util.Iterator: java.lang.Object next()>();

        r144 = (ucar.nc2.dataset.CoordinateAxis) $r109;

        $r110 = virtualinvoke r144.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getName()>();

        $z8 = virtualinvoke $r156.<java.util.ArrayList: boolean contains(java.lang.Object)>($r110);

        if $z8 != 0 goto label09;

        $r111 = virtualinvoke r144.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getName()>();

        virtualinvoke $r156.<java.util.ArrayList: boolean add(java.lang.Object)>($r111);

        virtualinvoke $r155.<java.util.ArrayList: boolean add(java.lang.Object)>(r144);

        virtualinvoke $r157.<java.util.ArrayList: boolean add(java.lang.Object)>(r144);

     label09:
        goto label08;

     label10:
        $r99 = interfaceinvoke $r141.<ucar.nc2.dt.GridCoordSystem: java.util.List getCoordinateTransforms()>();

        $r100 = interfaceinvoke $r99.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z5 = interfaceinvoke $r100.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label13;

        $r104 = interfaceinvoke $r100.<java.util.Iterator: java.lang.Object next()>();

        r145 = (ucar.nc2.dataset.CoordinateTransform) $r104;

        $r105 = virtualinvoke r145.<ucar.nc2.dataset.CoordinateTransform: java.lang.String getName()>();

        $r106 = virtualinvoke r2.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r105);

        $r107 = virtualinvoke r145.<ucar.nc2.dataset.CoordinateTransform: java.lang.String getName()>();

        $z7 = virtualinvoke $r156.<java.util.ArrayList: boolean contains(java.lang.Object)>($r107);

        if $z7 != 0 goto label12;

        if null == $r106 goto label12;

        $r108 = virtualinvoke r145.<ucar.nc2.dataset.CoordinateTransform: java.lang.String getName()>();

        virtualinvoke $r156.<java.util.ArrayList: boolean add(java.lang.Object)>($r108);

        virtualinvoke $r155.<java.util.ArrayList: boolean add(java.lang.Object)>($r106);

     label12:
        goto label11;

     label13:
        if z9 == 0 goto label14;

        $r101 = interfaceinvoke $r141.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        if null == $r101 goto label14;

        $z6 = $r101 instanceof ucar.unidata.geoloc.projection.LatLonProjection;

        if $z6 != 0 goto label14;

        $r102 = interfaceinvoke $r141.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getXHorizAxis()>();

        $r103 = interfaceinvoke $r141.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getYHorizAxis()>();

        specialinvoke r34.<ucar.nc2.dt.grid.NetcdfCFWriter: void addLatLon2D(ucar.nc2.NetcdfFile,java.util.List,ucar.unidata.geoloc.Projection,ucar.nc2.dataset.CoordinateAxis,ucar.nc2.dataset.CoordinateAxis)>(r2, $r155, $r101, $r102, $r103);

        z9 = 0;

     label14:
        goto label01;

     label15:
        z12 = 0;

        $b0 = l7 cmp 2000000000L;

        $i12 = (int) $b0;

        if $i12 <= 0 goto label16;

        $r90 = <ucar.nc2.dt.grid.NetcdfCFWriter: org.slf4j.Logger log>;

        $l1 = l7 / 1000L;

        $l2 = $l1 / 1000L;

        $r91 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r90.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Request size = {} Mbytes", $r91);

        z12 = 1;

     label16:
        $r163 = new ucar.nc2.FileWriter;

        $i14 = (int) -1;

        specialinvoke $r163.<ucar.nc2.FileWriter: void <init>(java.lang.String,boolean,boolean,int)>(r9, 0, z12, $i14);

        $r10 = interfaceinvoke r0.<ucar.nc2.dt.GridDataset: java.util.List getGlobalAttributes()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z13 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label18;

        $r89 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r146 = (ucar.nc2.Attribute) $r89;

        virtualinvoke $r163.<ucar.nc2.FileWriter: void writeGlobalAttribute(ucar.nc2.Attribute)>(r146);

        goto label17;

     label18:
        $r164 = new ucar.nc2.Attribute;

        specialinvoke $r164.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("Conventions", "CF-1.0");

        virtualinvoke $r163.<ucar.nc2.FileWriter: void writeGlobalAttribute(ucar.nc2.Attribute)>($r164);

        $r167 = new ucar.nc2.Attribute;

        $r165 = new java.lang.StringBuilder;

        specialinvoke $r165.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Translated to CF-1.0 Conventions by Netcdf-Java CDM (NetcdfCFWriter)\nOriginal Dataset = ");

        $r16 = interfaceinvoke r0.<ucar.nc2.dt.GridDataset: java.lang.String getLocationURI()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Translation Date = ");

        $r166 = new java.util.Date;

        specialinvoke $r166.<java.util.Date: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r166);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r167.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("History", $r21);

        virtualinvoke $r163.<ucar.nc2.FileWriter: void writeGlobalAttribute(ucar.nc2.Attribute)>($r167);

        virtualinvoke $r163.<ucar.nc2.FileWriter: void writeVariables(java.util.List)>($r155);

        $r22 = virtualinvoke $r163.<ucar.nc2.FileWriter: ucar.nc2.NetcdfFileWriteable getNetcdf()>();

        $r23 = virtualinvoke $r22.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Group getRootGroup()>();

        $r24 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z14 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label27;

        $r60 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r147 = (java.lang.String) $r60;

        $r61 = interfaceinvoke r0.<ucar.nc2.dt.GridDataset: ucar.nc2.dt.GridDatatype findGridDatatype(java.lang.String)>(r147);

        $r62 = virtualinvoke $r23.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>(r147);

        if $r62 != null goto label20;

        $r82 = <ucar.nc2.dt.grid.NetcdfCFWriter: org.slf4j.Logger log>;

        $r168 = new java.lang.StringBuilder;

        specialinvoke $r168.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NetcdfCFWriter cant find ");

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r147);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in gds ");

        $r86 = interfaceinvoke r0.<ucar.nc2.dt.GridDataset: java.lang.String getLocationURI()>();

        $r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r82.<org.slf4j.Logger: void warn(java.lang.String)>($r88);

        goto label19;

     label20:
        $r169 = new java.lang.StringBuilder;

        specialinvoke $r169.<java.lang.StringBuilder: void <init>()>();

        $r64 = interfaceinvoke $r61.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r65 = interfaceinvoke $r64.<ucar.nc2.dt.GridCoordSystem: java.util.List getCoordinateAxes()>();

        $r66 = interfaceinvoke $r65.<java.util.List: java.util.Iterator iterator()>();

     label21:
        $z3 = interfaceinvoke $r66.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label22;

        $r78 = interfaceinvoke $r66.<java.util.Iterator: java.lang.Object next()>();

        r148 = (ucar.nc2.dataset.CoordinateAxis) $r78;

        $r79 = virtualinvoke r148.<ucar.nc2.Variable: java.lang.String getName()>();

        $r80 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        goto label21;

     label22:
        if z9 == 0 goto label23;

        virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lat lon");

     label23:
        $r170 = new ucar.nc2.Attribute;

        $r68 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r170.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("coordinates", $r68);

        virtualinvoke $r62.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r170);

        $r69 = interfaceinvoke $r64.<ucar.nc2.dt.GridCoordSystem: java.util.List getCoordinateTransforms()>();

        $r70 = interfaceinvoke $r69.<java.util.List: java.util.Iterator iterator()>();

     label24:
        $z15 = interfaceinvoke $r70.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label26;

        $r71 = interfaceinvoke $r70.<java.util.Iterator: java.lang.Object next()>();

        r149 = (ucar.nc2.dataset.CoordinateTransform) $r71;

        $r72 = virtualinvoke r149.<ucar.nc2.dataset.CoordinateTransform: java.lang.String getName()>();

        $r73 = virtualinvoke r2.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r72);

        $r74 = virtualinvoke r149.<ucar.nc2.dataset.CoordinateTransform: ucar.nc2.dataset.TransformType getTransformType()>();

        $r75 = <ucar.nc2.dataset.TransformType: ucar.nc2.dataset.TransformType Projection>;

        if $r74 != $r75 goto label25;

        $r171 = new ucar.nc2.Attribute;

        $r77 = virtualinvoke $r73.<ucar.nc2.Variable: java.lang.String getName()>();

        specialinvoke $r171.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("grid_mapping", $r77);

        virtualinvoke $r62.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r171);

     label25:
        goto label24;

     label26:
        goto label19;

     label27:
        $r25 = virtualinvoke $r157.<java.util.ArrayList: java.util.Iterator iterator()>();

     label28:
        $z0 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label35;

        $r37 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        r150 = (ucar.nc2.dataset.CoordinateAxis) $r37;

        $r38 = virtualinvoke r150.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getShortName()>();

        $r39 = virtualinvoke $r23.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r38);

        $r40 = virtualinvoke r150.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r41 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        if $r40 == $r41 goto label29;

        $r56 = virtualinvoke r150.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r57 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Pressure>;

        if $r56 == $r57 goto label29;

        $r58 = virtualinvoke r150.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r59 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        if $r58 != $r59 goto label30;

     label29:
        $r151 = virtualinvoke r150.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getPositive()>();

        if null == $r151 goto label30;

        $r172 = new ucar.nc2.Attribute;

        $r55 = virtualinvoke r150.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getPositive()>();

        specialinvoke $r172.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("positive", $r55);

        virtualinvoke $r39.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r172);

     label30:
        $r152 = virtualinvoke r150.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r153 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        if $r152 != $r153 goto label31;

        $r173 = new ucar.nc2.Attribute;

        specialinvoke $r173.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_north");

        virtualinvoke $r39.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r173);

        $r174 = new ucar.nc2.Attribute;

        specialinvoke $r174.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "latitude");

        virtualinvoke $r39.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r174);

     label31:
        $r42 = virtualinvoke r150.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r43 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        if $r42 != $r43 goto label32;

        $r175 = new ucar.nc2.Attribute;

        specialinvoke $r175.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_east");

        virtualinvoke $r39.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r175);

        $r176 = new ucar.nc2.Attribute;

        specialinvoke $r176.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "longitude");

        virtualinvoke $r39.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r176);

     label32:
        $r44 = virtualinvoke r150.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r45 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        if $r44 != $r45 goto label33;

        $r177 = new ucar.nc2.Attribute;

        specialinvoke $r177.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "projection_x_coordinate");

        virtualinvoke $r39.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r177);

     label33:
        $r46 = virtualinvoke r150.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r47 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        if $r46 != $r47 goto label34;

        $r178 = new ucar.nc2.Attribute;

        specialinvoke $r178.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "projection_y_coordinate");

        virtualinvoke $r39.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r178);

     label34:
        goto label28;

     label35:
        $r179 = new java.util.ArrayList;

        specialinvoke $r179.<java.util.ArrayList: void <init>()>();

        $r27 = interfaceinvoke r0.<ucar.nc2.dt.GridDataset: java.util.List getGridsets()>();

        $r28 = interfaceinvoke $r27.<java.util.List: java.util.Iterator iterator()>();

     label36:
        $z1 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label38;

        $r29 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        r154 = (ucar.nc2.dt.GridDataset$Gridset) $r29;

        $r30 = interfaceinvoke r154.<ucar.nc2.dt.GridDataset$Gridset: ucar.nc2.dt.GridCoordSystem getGeoCoordSystem()>();

        $r31 = interfaceinvoke $r30.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.ProjectionCT getProjectionCT()>();

        if $r31 == null goto label37;

        $r32 = virtualinvoke $r31.<ucar.nc2.dataset.ProjectionCT: java.lang.String getName()>();

        $r33 = virtualinvoke $r23.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r32);

        if $r33 == null goto label37;

        $z2 = interfaceinvoke $r179.<java.util.List: boolean contains(java.lang.Object)>($r33);

        if $z2 != 0 goto label37;

        $r35 = interfaceinvoke r0.<ucar.nc2.dt.GridDataset: ucar.nc2.NetcdfFile getNetcdfFile()>();

        $r36 = (ucar.nc2.dataset.NetcdfDataset) $r35;

        specialinvoke r34.<ucar.nc2.dt.grid.NetcdfCFWriter: void convertProjectionCTV(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>($r36, $r33);

        interfaceinvoke $r179.<java.util.List: boolean add(java.lang.Object)>($r33);

     label37:
        goto label36;

     label38:
        virtualinvoke $r163.<ucar.nc2.FileWriter: void finish()>();

        return;
    }

    private void convertProjectionCTV(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Variable)
    {
        ucar.nc2.dt.grid.NetcdfCFWriter r6;
        ucar.nc2.Attribute $r1, $r3, $r4;
        byte $b0;
        ucar.nc2.Variable r0;
        java.lang.String $r2;
        ucar.nc2.dataset.NetcdfDataset r5;
        boolean $z0;
        double $d0;

        r6 := @this: ucar.nc2.dt.grid.NetcdfCFWriter;

        r5 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: ucar.nc2.Variable;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("_CoordinateTransformType");

        if null == $r1 goto label2;

        $r2 = virtualinvoke $r1.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("Projection");

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("false_easting");

        $r4 = virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("false_northing");

        if null != $r3 goto label1;

        if null == $r4 goto label2;

     label1:
        $d0 = staticinvoke <ucar.nc2.dataset.transform.AbstractCoordTransBuilder: double getFalseEastingScaleFactor(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r5, r0);

        $b0 = $d0 cmpl 1.0;

        if $b0 == 0 goto label2;

        specialinvoke r6.<ucar.nc2.dt.grid.NetcdfCFWriter: void convertAttribute(ucar.nc2.Variable,ucar.nc2.Attribute,double)>(r0, $r3, $d0);

        specialinvoke r6.<ucar.nc2.dt.grid.NetcdfCFWriter: void convertAttribute(ucar.nc2.Variable,ucar.nc2.Attribute,double)>(r0, $r4, $d0);

     label2:
        return;
    }

    private void convertAttribute(ucar.nc2.Variable, ucar.nc2.Attribute, double)
    {
        java.lang.Double $r5;
        ucar.nc2.dt.grid.NetcdfCFWriter r6;
        ucar.nc2.Attribute r0, $r3;
        ucar.nc2.Variable r2;
        java.lang.String $r4;
        java.lang.Number $r1;
        double d0, $d1, d2;

        r6 := @this: ucar.nc2.dt.grid.NetcdfCFWriter;

        r2 := @parameter0: ucar.nc2.Variable;

        r0 := @parameter1: ucar.nc2.Attribute;

        d0 := @parameter2: double;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d1 = virtualinvoke $r1.<java.lang.Number: double doubleValue()>();

        d2 = d0 * $d1;

        $r3 = new ucar.nc2.Attribute;

        $r4 = virtualinvoke r0.<ucar.nc2.Attribute: java.lang.String getName()>();

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        specialinvoke $r3.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>($r4, $r5);

        virtualinvoke r2.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r3);

        return;
    }

    private void addLatLon2D(ucar.nc2.NetcdfFile, java.util.List, ucar.unidata.geoloc.Projection, ucar.nc2.dataset.CoordinateAxis, ucar.nc2.dataset.CoordinateAxis) throws java.io.IOException
    {
        ucar.nc2.dt.grid.NetcdfCFWriter r44;
        ucar.unidata.geoloc.Projection r43;
        ucar.nc2.dataset.CoordinateAxis r0, r6;
        int[] $r36, $r39;
        ucar.nc2.constants.AxisType $r22, $r30;
        ucar.unidata.geoloc.ProjectionPointImpl $r32;
        ucar.ma2.DataType $r17, $r25, $r37, $r40;
        java.util.List r42;
        ucar.nc2.Attribute $r18, $r19, $r20, $r21, $r26, $r27, $r28, $r29;
        ucar.nc2.NetcdfFile r16;
        double[] $r4, r5, $r10, r11, r34, r35;
        java.util.ArrayList $r12;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        ucar.nc2.Variable $r15, $r24;
        java.lang.String $r23, $r31;
        double $d0, $d1, $d2, $d3;
        ucar.ma2.Array $r1, $r7, $r38, $r41;
        java.lang.Class $r2, $r8;
        java.lang.Object $r3, $r9;
        ucar.nc2.Dimension $r13, $r14;
        ucar.unidata.geoloc.LatLonPointImpl $r33;

        r44 := @this: ucar.nc2.dt.grid.NetcdfCFWriter;

        r16 := @parameter0: ucar.nc2.NetcdfFile;

        r42 := @parameter1: java.util.List;

        r43 := @parameter2: ucar.unidata.geoloc.Projection;

        r0 := @parameter3: ucar.nc2.dataset.CoordinateAxis;

        r6 := @parameter4: ucar.nc2.dataset.CoordinateAxis;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis: ucar.ma2.Array read()>();

        $r2 = <java.lang.Double: java.lang.Class TYPE>;

        $r3 = virtualinvoke $r1.<ucar.ma2.Array: java.lang.Object get1DJavaArray(java.lang.Class)>($r2);

        $r4 = (double[]) $r3;

        r5 = (double[]) $r4;

        $r7 = virtualinvoke r6.<ucar.nc2.dataset.CoordinateAxis: ucar.ma2.Array read()>();

        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        $r9 = virtualinvoke $r7.<ucar.ma2.Array: java.lang.Object get1DJavaArray(java.lang.Class)>($r8);

        $r10 = (double[]) $r9;

        r11 = (double[]) $r10;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $r13 = virtualinvoke r6.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Dimension getDimension(int)>(0);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Dimension getDimension(int)>(0);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = new ucar.nc2.Variable;

        specialinvoke $r15.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r16, null, null, "lat");

        $r17 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r15.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r17);

        virtualinvoke $r15.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r12);

        $r18 = new ucar.nc2.Attribute;

        specialinvoke $r18.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_north");

        virtualinvoke $r15.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r18);

        $r19 = new ucar.nc2.Attribute;

        specialinvoke $r19.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "latitude coordinate");

        virtualinvoke $r15.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r19);

        $r20 = new ucar.nc2.Attribute;

        specialinvoke $r20.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "latitude");

        virtualinvoke $r15.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r20);

        $r21 = new ucar.nc2.Attribute;

        $r22 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r23 = virtualinvoke $r22.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r21.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r23);

        virtualinvoke $r15.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r21);

        $r24 = new ucar.nc2.Variable;

        specialinvoke $r24.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r16, null, null, "lon");

        $r25 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r24.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r25);

        virtualinvoke $r24.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r12);

        $r26 = new ucar.nc2.Attribute;

        specialinvoke $r26.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_east");

        virtualinvoke $r24.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r26);

        $r27 = new ucar.nc2.Attribute;

        specialinvoke $r27.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "longitude coordinate");

        virtualinvoke $r24.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r27);

        $r28 = new ucar.nc2.Attribute;

        specialinvoke $r28.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "longitude");

        virtualinvoke $r24.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r28);

        $r29 = new ucar.nc2.Attribute;

        $r30 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r31 = virtualinvoke $r30.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r29.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r31);

        virtualinvoke $r24.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r29);

        i0 = lengthof r5;

        i1 = lengthof r11;

        $r32 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r32.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r33 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r33.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        $i2 = i0 * i1;

        r34 = newarray (double)[$i2];

        $i3 = i0 * i1;

        r35 = newarray (double)[$i3];

        i8 = 0;

     label1:
        if i8 >= i1 goto label4;

        i9 = 0;

     label2:
        if i9 >= i0 goto label3;

        $d1 = r5[i9];

        $d0 = r11[i8];

        virtualinvoke $r32.<ucar.unidata.geoloc.ProjectionPointImpl: void setLocation(double,double)>($d1, $d0);

        interfaceinvoke r43.<ucar.unidata.geoloc.Projection: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint,ucar.unidata.geoloc.LatLonPointImpl)>($r32, $r33);

        $i4 = i8 * i0;

        $i5 = $i4 + i9;

        $d2 = virtualinvoke $r33.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        r34[$i5] = $d2;

        $i6 = i8 * i0;

        $i7 = $i6 + i9;

        $d3 = virtualinvoke $r33.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        r35[$i7] = $d3;

        i9 = i9 + 1;

        goto label2;

     label3:
        i8 = i8 + 1;

        goto label1;

     label4:
        $r37 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r36 = newarray (int)[2];

        $r36[0] = i1;

        $r36[1] = i0;

        $r38 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r37, $r36, r34);

        virtualinvoke $r15.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r38, 0);

        $r40 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r39 = newarray (int)[2];

        $r39[0] = i1;

        $r39[1] = i0;

        $r41 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r40, $r39, r35);

        virtualinvoke $r24.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r41, 0);

        interfaceinvoke r42.<java.util.List: boolean add(java.lang.Object)>($r15);

        interfaceinvoke r42.<java.util.List: boolean add(java.lang.Object)>($r24);

        return;
    }

    public static void test1() throws java.io.IOException, ucar.ma2.InvalidRangeException, java.text.ParseException
    {
        ucar.nc2.dt.grid.GridDataset $r0;
        java.util.Date $r4, $r5;
        ucar.nc2.dt.grid.NetcdfCFWriter $r1;
        java.util.ArrayList $r2;
        ucar.unidata.geoloc.LatLonRect $r6;
        ucar.nc2.units.DateRange $r8;
        ucar.unidata.geoloc.LatLonPointImpl $r7;
        ucar.nc2.units.DateFormatter $r3;

        $r0 = staticinvoke <ucar.nc2.dt.grid.GridDataset: ucar.nc2.dt.grid.GridDataset open(java.lang.String)>("C:/data/ncmodels/NAM_CONUS_80km_20051206_0000.nc");

        $r1 = new ucar.nc2.dt.grid.NetcdfCFWriter;

        specialinvoke $r1.<ucar.nc2.dt.grid.NetcdfCFWriter: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("RH");

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("T");

        $r3 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r3.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r4 = virtualinvoke $r3.<ucar.nc2.units.DateFormatter: java.util.Date isoDateTimeFormat(java.lang.String)>("2005-12-06T18:00:00Z");

        $r5 = virtualinvoke $r3.<ucar.nc2.units.DateFormatter: java.util.Date isoDateTimeFormat(java.lang.String)>("2005-12-07T18:00:00Z");

        $r6 = new ucar.unidata.geoloc.LatLonRect;

        $r7 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(37.0, -109.0);

        specialinvoke $r6.<ucar.unidata.geoloc.LatLonRect: void <init>(ucar.unidata.geoloc.LatLonPoint,double,double)>($r7, 400.0, 7.0);

        $r8 = new ucar.nc2.units.DateRange;

        specialinvoke $r8.<ucar.nc2.units.DateRange: void <init>(java.util.Date,java.util.Date)>($r4, $r5);

        virtualinvoke $r1.<ucar.nc2.dt.grid.NetcdfCFWriter: void makeFile(java.lang.String,ucar.nc2.dt.GridDataset,java.util.List,ucar.unidata.geoloc.LatLonRect,ucar.nc2.units.DateRange,boolean,int,int,int)>("C:/temp/cf3.nc", $r0, $r2, $r6, $r8, 1, 1, 1, 1);

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException, ucar.ma2.InvalidRangeException, java.text.ParseException
    {
        ucar.nc2.dt.grid.GridDataset $r0;
        java.util.Date $r4, $r5;
        ucar.nc2.dt.grid.NetcdfCFWriter $r1;
        java.lang.String[] r7;
        java.util.ArrayList $r2;
        ucar.nc2.units.DateRange $r6;
        ucar.nc2.units.DateFormatter $r3;

        r7 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <ucar.nc2.dt.grid.GridDataset: ucar.nc2.dt.grid.GridDataset open(java.lang.String)>("dods://motherlode.ucar.edu/repository/entry/show/output:data.opendap/entryid:c41a3a26-57e5-4b15-b8b1-a8762b6f02c7/dodsC/entry");

        $r1 = new ucar.nc2.dt.grid.NetcdfCFWriter;

        specialinvoke $r1.<ucar.nc2.dt.grid.NetcdfCFWriter: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("Z_sfc");

        $r3 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r3.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r4 = virtualinvoke $r3.<ucar.nc2.units.DateFormatter: java.util.Date isoDateTimeFormat(java.lang.String)>("2003-06-01T03:00:00Z");

        $r5 = virtualinvoke $r3.<ucar.nc2.units.DateFormatter: java.util.Date isoDateTimeFormat(java.lang.String)>("2004-01-01T00:00:00Z");

        $r6 = new ucar.nc2.units.DateRange;

        specialinvoke $r6.<ucar.nc2.units.DateRange: void <init>(java.util.Date,java.util.Date)>($r4, $r5);

        virtualinvoke $r1.<ucar.nc2.dt.grid.NetcdfCFWriter: void makeFile(java.lang.String,ucar.nc2.dt.GridDataset,java.util.List,ucar.unidata.geoloc.LatLonRect,ucar.nc2.units.DateRange,boolean,int,int,int)>("C:/temp/testCF.nc", $r0, $r2, null, $r6, 1, 1, 1, 1);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/dt/grid/NetcdfCFWriter;");

        <ucar.nc2.dt.grid.NetcdfCFWriter: org.slf4j.Logger log> = $r0;

        return;
    }
}
