class groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    private groovy.lang.Reference builder;
    private groovy.lang.Reference newChild;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$groovy$swing$factory$TabbedPaneFactory;
    static java.lang.Class class$groovy$util$FactoryBuilderSupport;

    public void <init>(java.lang.Object, java.lang.Object, groovy.lang.Reference, groovy.lang.Reference)
    {
        groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1 r2;
        groovy.lang.Reference r5, $r6, r7, $r8;
        java.lang.Class $r0, $r1, $r9, $r10;
        java.lang.Object r3, r4;

        r2 := @this: groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        r5 := @parameter2: groovy.lang.Reference;

        r7 := @parameter3: groovy.lang.Reference;

        $r0 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r9 = staticinvoke <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1");

        <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$0> = $r9;

        goto label2;

     label1:
        $r9 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r10 = staticinvoke <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r10;

        goto label4;

     label3:
        $r10 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        $r6 = (groovy.lang.Reference) r5;

        r2.<groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: groovy.lang.Reference builder> = $r6;

        $r8 = (groovy.lang.Reference) r7;

        r2.<groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: groovy.lang.Reference newChild> = $r8;

        return;
    }

    public java.lang.Object doCall(groovy.util.FactoryBuilderSupport, java.lang.Object, java.util.Map)
    {
        java.lang.Object[] $r16;
        groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1 r10;
        java.util.Map r4;
        boolean $z0;
        groovy.util.FactoryBuilderSupport r0;
        groovy.lang.Reference $r1, $r3, $r5, $r11, $r14;
        java.lang.Object r2, $r12, $r13, $r15, $r17, $r18, $r19;
        java.lang.Class $r6, r7, $r8, $r9, $r20, $r21, $r22;

        r10 := @this: groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1;

        r0 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.util.Map;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r3 = new groovy.lang.Reference;

        specialinvoke $r3.<groovy.lang.Reference: void <init>(java.lang.Object)>(r2);

        $r5 = new groovy.lang.Reference;

        specialinvoke $r5.<groovy.lang.Reference: void <init>(java.lang.Object)>(r4);

        $r6 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$0>;

        if $r6 != null goto label1;

        $r20 = staticinvoke <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1");

        <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$0> = $r20;

        goto label2;

     label1:
        $r20 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$0>;

     label2:
        r7 = $r20;

        $r8 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r8 != null goto label3;

        $r21 = staticinvoke <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r21;

        goto label4;

     label3:
        $r21 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r9 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$swing$factory$TabbedPaneFactory>;

        if $r9 != null goto label5;

        $r22 = staticinvoke <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TabbedPaneFactory");

        <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$swing$factory$TabbedPaneFactory> = $r22;

        goto label6;

     label5:
        $r22 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$swing$factory$TabbedPaneFactory>;

     label6:
        $r11 = r10.<groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: groovy.lang.Reference builder>;

        $r12 = virtualinvoke $r11.<groovy.lang.Reference: java.lang.Object get()>();

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r22, $r12, "current");

        $r14 = r10.<groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: groovy.lang.Reference newChild>;

        $r15 = virtualinvoke $r14.<groovy.lang.Reference: java.lang.Object get()>();

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r13, $r15);

        if $z0 == 0 goto label7;

        $r16 = newarray (java.lang.Object)[3];

        $r17 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r16[0] = $r17;

        $r18 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r16[1] = $r18;

        $r19 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        $r16[2] = $r19;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r7, r10, "inspectChild", $r16);

        goto label7;

     label7:
        return null;
    }

    public java.lang.Object call(groovy.util.FactoryBuilderSupport, java.lang.Object, java.util.Map)
    {
        java.lang.Object[] $r10;
        groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1 r9;
        java.util.Map r4;
        groovy.util.FactoryBuilderSupport r0;
        groovy.lang.Reference $r1, $r3, $r5;
        java.lang.Object r2, $r11, $r12, $r13, $r14;
        java.lang.Class $r6, r7, $r8, $r15, $r16;

        r9 := @this: groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1;

        r0 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.util.Map;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r3 = new groovy.lang.Reference;

        specialinvoke $r3.<groovy.lang.Reference: void <init>(java.lang.Object)>(r2);

        $r5 = new groovy.lang.Reference;

        specialinvoke $r5.<groovy.lang.Reference: void <init>(java.lang.Object)>(r4);

        $r6 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$0>;

        if $r6 != null goto label1;

        $r15 = staticinvoke <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1");

        <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$0> = $r15;

        goto label2;

     label1:
        $r15 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$0>;

     label2:
        r7 = $r15;

        $r8 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r8 != null goto label3;

        $r16 = staticinvoke <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r16;

        goto label4;

     label3:
        $r16 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r10 = newarray (java.lang.Object)[3];

        $r11 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r10[0] = $r11;

        $r12 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r10[1] = $r12;

        $r13 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        $r10[2] = $r13;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r7, r9, "doCall", $r10);

        return $r14;
    }

    public groovy.util.FactoryBuilderSupport getBuilder()
    {
        groovy.util.FactoryBuilderSupport $r7;
        groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1 r2;
        groovy.lang.Reference $r3;
        java.lang.Class $r0, $r1, $r5, $r8, $r9, $r10;
        java.lang.Object $r4, $r6;

        r2 := @this: groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1;

        $r0 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r8 = staticinvoke <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1");

        <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$0> = $r8;

        goto label2;

     label1:
        $r8 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r9 = staticinvoke <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r9;

        goto label4;

     label3:
        $r9 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: groovy.lang.Reference builder>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r5 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$util$FactoryBuilderSupport>;

        if $r5 != null goto label5;

        $r10 = staticinvoke <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$(java.lang.String)>("groovy.util.FactoryBuilderSupport");

        <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$util$FactoryBuilderSupport> = $r10;

        goto label6;

     label5:
        $r10 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$util$FactoryBuilderSupport>;

     label6:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r10);

        $r7 = (groovy.util.FactoryBuilderSupport) $r6;

        return $r7;
    }

    public java.lang.Object getNewChild()
    {
        groovy.lang.Reference $r3;
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object $r4;
        groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1 r2;

        r2 := @this: groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1;

        $r0 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1");

        <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<groovy.swing.factory.TabbedPaneFactory$_newInstance_closure1: groovy.lang.Reference newChild>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        return $r4;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
