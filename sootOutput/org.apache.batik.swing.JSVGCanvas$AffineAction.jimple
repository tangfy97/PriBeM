public class org.apache.batik.swing.JSVGCanvas$AffineAction extends javax.swing.AbstractAction
{
    java.awt.geom.AffineTransform at;
    private final org.apache.batik.swing.JSVGCanvas this$0;

    public void <init>(org.apache.batik.swing.JSVGCanvas, java.awt.geom.AffineTransform)
    {
        java.awt.geom.AffineTransform r2;
        org.apache.batik.swing.JSVGCanvas$AffineAction r0;
        org.apache.batik.swing.JSVGCanvas r1;

        r0 := @this: org.apache.batik.swing.JSVGCanvas$AffineAction;

        r1 := @parameter0: org.apache.batik.swing.JSVGCanvas;

        r2 := @parameter1: java.awt.geom.AffineTransform;

        specialinvoke r0.<javax.swing.AbstractAction: void <init>()>();

        r0.<org.apache.batik.swing.JSVGCanvas$AffineAction: org.apache.batik.swing.JSVGCanvas this$0> = r1;

        r0.<org.apache.batik.swing.JSVGCanvas$AffineAction: java.awt.geom.AffineTransform at> = r2;

        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        org.apache.batik.swing.JSVGCanvas $r1, $r3, $r6, $r10;
        int $i0, i1, $i2, i3, $i4, $i5;
        org.apache.batik.swing.JSVGCanvas$AffineAction r0;
        double $d0, $d1, $d2, $d3;
        org.apache.batik.gvt.GraphicsNode $r2;
        java.awt.geom.AffineTransform $r4, $r5, $r8, $r9;
        java.awt.event.ActionEvent r11;
        java.awt.Dimension $r7;

        r0 := @this: org.apache.batik.swing.JSVGCanvas$AffineAction;

        r11 := @parameter0: java.awt.event.ActionEvent;

        $r1 = r0.<org.apache.batik.swing.JSVGCanvas$AffineAction: org.apache.batik.swing.JSVGCanvas this$0>;

        $r2 = staticinvoke <org.apache.batik.swing.JSVGCanvas: org.apache.batik.gvt.GraphicsNode access$101(org.apache.batik.swing.JSVGCanvas)>($r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<org.apache.batik.swing.JSVGCanvas$AffineAction: org.apache.batik.swing.JSVGCanvas this$0>;

        $r4 = virtualinvoke $r3.<org.apache.batik.swing.gvt.AbstractJGVTComponent: java.awt.geom.AffineTransform getRenderingTransform()>();

        $r5 = r0.<org.apache.batik.swing.JSVGCanvas$AffineAction: java.awt.geom.AffineTransform at>;

        if $r5 == null goto label2;

        $r6 = r0.<org.apache.batik.swing.JSVGCanvas$AffineAction: org.apache.batik.swing.JSVGCanvas this$0>;

        $r7 = virtualinvoke $r6.<java.awt.Component: java.awt.Dimension getSize()>();

        $i0 = $r7.<java.awt.Dimension: int width>;

        i1 = $i0 / 2;

        $i2 = $r7.<java.awt.Dimension: int height>;

        i3 = $i2 / 2;

        $d1 = (double) i1;

        $d0 = (double) i3;

        $r8 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d1, $d0);

        $r9 = r0.<org.apache.batik.swing.JSVGCanvas$AffineAction: java.awt.geom.AffineTransform at>;

        virtualinvoke $r8.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r9);

        $i4 = neg i1;

        $d3 = (double) $i4;

        $i5 = neg i3;

        $d2 = (double) $i5;

        virtualinvoke $r8.<java.awt.geom.AffineTransform: void translate(double,double)>($d3, $d2);

        virtualinvoke $r8.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r4);

        $r10 = r0.<org.apache.batik.swing.JSVGCanvas$AffineAction: org.apache.batik.swing.JSVGCanvas this$0>;

        virtualinvoke $r10.<org.apache.batik.swing.gvt.AbstractJGVTComponent: void setRenderingTransform(java.awt.geom.AffineTransform)>($r8);

     label2:
        return;
    }
}
