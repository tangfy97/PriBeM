class com.jidesoft.plaf.aqua.XMLParseException extends java.lang.RuntimeException
{
    public static final int NO_LINE;
    private int lineNr;

    public void <init>(java.lang.String, java.lang.String)
    {
        com.jidesoft.plaf.aqua.XMLParseException r0;
        int $i1;
        java.lang.StringBuilder $r2, $r5, $r6, $r7, $r8, $r9, $r11, $r14, $r15;
        java.lang.String r3, r10, $r12, $r13;

        r0 := @this: com.jidesoft.plaf.aqua.XMLParseException;

        r3 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XML Parse Exception during parsing of ");

        if r3 != null goto label1;

        $r13 = "the XML definition";

        goto label2;

     label1:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" element");

        $r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        $i1 = (int) -1;

        r0.<com.jidesoft.plaf.aqua.XMLParseException: int lineNr> = $i1;

        return;
    }

    public void <init>(java.lang.String, int, java.lang.String)
    {
        com.jidesoft.plaf.aqua.XMLParseException r0;
        int i0;
        java.lang.String r3, r12, $r14, $r15;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13;

        r0 := @this: com.jidesoft.plaf.aqua.XMLParseException;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r12 := @parameter2: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XML Parse Exception during parsing of ");

        if r3 != null goto label1;

        $r15 = "the XML definition";

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" element");

        $r15 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at line ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        r0.<com.jidesoft.plaf.aqua.XMLParseException: int lineNr> = i0;

        return;
    }

    public int getLineNr()
    {
        int $i0;
        com.jidesoft.plaf.aqua.XMLParseException r0;

        r0 := @this: com.jidesoft.plaf.aqua.XMLParseException;

        $i0 = r0.<com.jidesoft.plaf.aqua.XMLParseException: int lineNr>;

        return $i0;
    }

    public static void <clinit>()
    {
        <com.jidesoft.plaf.aqua.XMLParseException: int NO_LINE> = -1;

        return;
    }
}
