final class org.eclipse.jetty.xml.XmlConfiguration$1 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.lang.String[] val$args;
    final java.util.concurrent.atomic.AtomicReference val$exception;

    void <init>(java.lang.String[], java.util.concurrent.atomic.AtomicReference)
    {
        org.eclipse.jetty.xml.XmlConfiguration$1 r0;
        java.lang.String[] r1;
        java.util.concurrent.atomic.AtomicReference r2;

        r0 := @this: org.eclipse.jetty.xml.XmlConfiguration$1;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.util.concurrent.atomic.AtomicReference;

        r0.<org.eclipse.jetty.xml.XmlConfiguration$1: java.lang.String[] val$args> = r1;

        r0.<org.eclipse.jetty.xml.XmlConfiguration$1: java.util.concurrent.atomic.AtomicReference val$exception> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object run()
    {
        java.util.Enumeration $r40;
        java.util.Map $r27, $r32, $r33;
        org.eclipse.jetty.xml.XmlConfiguration $r18, r55;
        java.util.Set $r25;
        java.lang.Exception $r44, $r47;
        java.lang.ClassLoader $r1;
        java.lang.Object[] $r5, $r8, $r41;
        java.lang.String $r16, $r17, $r20, $r29, $r31, $r35, $r43, r54;
        java.util.Properties $r38, $r39, r53;
        java.lang.Class[] $r3;
        org.eclipse.jetty.util.resource.Resource $r21, $r36;
        java.lang.ClassNotFoundException $r49;
        org.eclipse.jetty.util.component.LifeCycle r57;
        java.net.URL $r22;
        java.util.Locale $r15;
        java.lang.reflect.Method $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String[] $r10, $r11, $r14, $r19, $r34, $r56;
        java.util.HashMap $r24;
        java.util.concurrent.atomic.AtomicReference $r46;
        int $i0, $i1, $i2, i3, $i4, i5;
        java.lang.NoClassDefFoundError $r51;
        java.util.Iterator $r26;
        org.eclipse.jetty.xml.XmlConfiguration$1 r9;
        java.lang.Class $r0, $r2;
        java.lang.Object $r6, $r12, $r13, $r23, $r28, $r30, $r42;
        org.eclipse.jetty.util.log.Logger $r7, $r45, $r48, $r50, $r52;
        java.io.InputStream $r37;

        r9 := @this: org.eclipse.jetty.xml.XmlConfiguration$1;

     label01:
        r53 = null;

     label02:
        $r0 = class "Lorg/eclipse/jetty/xml/XmlConfiguration;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = virtualinvoke $r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("org.eclipse.jetty.start.Config");

        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getProperties", $r3);

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r5);

        r53 = (java.util.Properties) $r6;

        $r7 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r53;

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("org.eclipse.jetty.start.Config properties = {}", $r8);

     label03:
        goto label07;

     label04:
        $r51 := @caughtexception;

        $r52 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r52.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r51);

        goto label07;

     label05:
        $r49 := @caughtexception;

        $r50 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r50.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r49);

        goto label07;

     label06:
        $r47 := @caughtexception;

        $r48 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r48.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r47);

     label07:
        if r53 != null goto label09;

        $r38 = new java.util.Properties;

        specialinvoke $r38.<java.util.Properties: void <init>()>();

        r53 = $r38;

        $r39 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();

        $r40 = virtualinvoke $r39.<java.util.Properties: java.util.Enumeration propertyNames()>();

     label08:
        $z4 = interfaceinvoke $r40.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z4 == 0 goto label09;

        $r42 = interfaceinvoke $r40.<java.util.Enumeration: java.lang.Object nextElement()>();

        r54 = (java.lang.String) $r42;

        $r43 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r54);

        virtualinvoke $r38.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r54, $r43);

        goto label08;

     label09:
        r55 = null;

        $r10 = r9.<org.eclipse.jetty.xml.XmlConfiguration$1: java.lang.String[] val$args>;

        $i0 = lengthof $r10;

        $r41 = newarray (java.lang.Object)[$i0];

        i3 = 0;

     label10:
        $r56 = r9.<org.eclipse.jetty.xml.XmlConfiguration$1: java.lang.String[] val$args>;

        $i4 = lengthof $r56;

        if i3 >= $i4 goto label17;

        $r14 = r9.<org.eclipse.jetty.xml.XmlConfiguration$1: java.lang.String[] val$args>;

        $r16 = $r14[i3];

        $r15 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r15);

        $z2 = virtualinvoke $r17.<java.lang.String: boolean endsWith(java.lang.String)>(".properties");

        if $z2 == 0 goto label11;

        $r34 = r9.<org.eclipse.jetty.xml.XmlConfiguration$1: java.lang.String[] val$args>;

        $r35 = $r34[i3];

        $r36 = staticinvoke <org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource newResource(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<org.eclipse.jetty.util.resource.Resource: java.io.InputStream getInputStream()>();

        virtualinvoke r53.<java.util.Properties: void load(java.io.InputStream)>($r37);

        goto label16;

     label11:
        $r18 = new org.eclipse.jetty.xml.XmlConfiguration;

        $r19 = r9.<org.eclipse.jetty.xml.XmlConfiguration$1: java.lang.String[] val$args>;

        $r20 = $r19[i3];

        $r21 = staticinvoke <org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource newResource(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<org.eclipse.jetty.util.resource.Resource: java.net.URL getURL()>();

        specialinvoke $r18.<org.eclipse.jetty.xml.XmlConfiguration: void <init>(java.net.URL)>($r22);

        if r55 == null goto label12;

        $r32 = virtualinvoke $r18.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map getIdMap()>();

        $r33 = virtualinvoke r55.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map getIdMap()>();

        interfaceinvoke $r32.<java.util.Map: void putAll(java.util.Map)>($r33);

     label12:
        $i2 = virtualinvoke r53.<java.util.Properties: int size()>();

        if $i2 <= 0 goto label15;

        $r24 = new java.util.HashMap;

        specialinvoke $r24.<java.util.HashMap: void <init>()>();

        $r25 = virtualinvoke r53.<java.util.Properties: java.util.Set keySet()>();

        $r26 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z3 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r28 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        $r29 = virtualinvoke $r28.<java.lang.Object: java.lang.String toString()>();

        $r30 = virtualinvoke r53.<java.util.Properties: java.lang.Object get(java.lang.Object)>($r28);

        $r31 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r30);

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r31);

        goto label13;

     label14:
        $r27 = virtualinvoke $r18.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map getProperties()>();

        interfaceinvoke $r27.<java.util.Map: void putAll(java.util.Map)>($r24);

     label15:
        $r23 = virtualinvoke $r18.<org.eclipse.jetty.xml.XmlConfiguration: java.lang.Object configure()>();

        $r41[i3] = $r23;

        r55 = $r18;

     label16:
        i3 = i3 + 1;

        goto label10;

     label17:
        i5 = 0;

     label18:
        $r11 = r9.<org.eclipse.jetty.xml.XmlConfiguration$1: java.lang.String[] val$args>;

        $i1 = lengthof $r11;

        if i5 >= $i1 goto label20;

        $r12 = $r41[i5];

        $z0 = $r12 instanceof org.eclipse.jetty.util.component.LifeCycle;

        if $z0 == 0 goto label19;

        $r13 = $r41[i5];

        r57 = (org.eclipse.jetty.util.component.LifeCycle) $r13;

        $z1 = interfaceinvoke r57.<org.eclipse.jetty.util.component.LifeCycle: boolean isRunning()>();

        if $z1 != 0 goto label19;

        interfaceinvoke r57.<org.eclipse.jetty.util.component.LifeCycle: void start()>();

     label19:
        i5 = i5 + 1;

        goto label18;

     label20:
        goto label22;

     label21:
        $r44 := @caughtexception;

        $r45 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r45.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Throwable)>("EXCEPTION ", $r44);

        $r46 = r9.<org.eclipse.jetty.xml.XmlConfiguration$1: java.util.concurrent.atomic.AtomicReference val$exception>;

        virtualinvoke $r46.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r44);

     label22:
        return null;

        catch java.lang.NoClassDefFoundError from label02 to label03 with label04;
        catch java.lang.ClassNotFoundException from label02 to label03 with label05;
        catch java.lang.Exception from label02 to label03 with label06;
        catch java.lang.Exception from label01 to label20 with label21;
    }
}
