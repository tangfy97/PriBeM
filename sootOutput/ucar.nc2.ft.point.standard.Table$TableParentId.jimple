public class ucar.nc2.ft.point.standard.Table$TableParentId extends ucar.nc2.ft.point.standard.Table$TableStructure
{
    private ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo[] indexMap;
    private java.lang.String parentIdName;

    void <init>(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.ft.point.standard.TableConfig)
    {
        ucar.nc2.ft.point.standard.TableConfig r2;
        ucar.ma2.StructureData $r20;
        int[] $r14;
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo $r23, r31, r33;
        java.util.Collection $r8;
        ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo[] $r9, $r19;
        ucar.ma2.StructureMembers $r13;
        ucar.nc2.ft.point.standard.Table $r15, r34;
        ucar.nc2.ft.point.standard.Table$TableConstruct $r17;
        java.util.HashMap $r7;
        long $l0, $l1;
        ucar.ma2.ArrayStructureW $r11;
        ucar.ma2.ArrayChar $r24;
        int $i2, $i3, $i4, i5, i6;
        ucar.nc2.Variable $r5, r29;
        java.lang.String $r3, $r4, $r16, $r25;
        ucar.ma2.StructureData[] r32;
        java.util.Iterator $r10;
        java.io.IOException $r27;
        java.lang.RuntimeException $r28;
        ucar.ma2.Array $r6, r30;
        ucar.nc2.dataset.StructureDS $r12, $r26;
        java.lang.Object $r18, $r21, $r22;
        ucar.nc2.dataset.NetcdfDataset r1;
        ucar.nc2.ft.point.standard.Table$TableParentId r0;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableParentId;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.ft.point.standard.TableConfig;

        specialinvoke r0.<ucar.nc2.ft.point.standard.Table$TableStructure: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig)>(r1, r2);

        $r3 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String parentIndex>;

        r0.<ucar.nc2.ft.point.standard.Table$TableParentId: java.lang.String parentIdName> = $r3;

     label01:
        $r4 = r0.<ucar.nc2.ft.point.standard.Table$TableParentId: java.lang.String parentIdName>;

        $r5 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r4);

        r29 = $r5;

        if $r5 != null goto label02;

        $r26 = r0.<ucar.nc2.ft.point.standard.Table$TableParentId: ucar.nc2.dataset.StructureDS struct>;

        $r25 = r0.<ucar.nc2.ft.point.standard.Table$TableParentId: java.lang.String parentIdName>;

        r29 = virtualinvoke $r26.<ucar.nc2.dataset.StructureDS: ucar.nc2.Variable findVariable(java.lang.String)>($r25);

     label02:
        $r6 = virtualinvoke r29.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        r30 = $r6;

        $z0 = $r6 instanceof ucar.ma2.ArrayChar;

        if $z0 == 0 goto label03;

        $r24 = (ucar.ma2.ArrayChar) $r6;

        r30 = virtualinvoke $r24.<ucar.ma2.ArrayChar: ucar.ma2.ArrayObject make1DStringArray()>();

     label03:
        $r7 = new java.util.HashMap;

        $l0 = virtualinvoke r30.<ucar.ma2.Array: long getSize()>();

        $l1 = 2L * $l0;

        $i2 = (int) $l1;

        specialinvoke $r7.<java.util.HashMap: void <init>(int)>($i2);

        i5 = 0;

     label04:
        $z3 = virtualinvoke r30.<ucar.ma2.Array: boolean hasNext()>();

        if $z3 == 0 goto label06;

        $r21 = virtualinvoke r30.<ucar.ma2.Array: java.lang.Object next()>();

        $r22 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r21);

        r31 = (ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo) $r22;

        if r31 != null goto label05;

        $r23 = new ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo;

        specialinvoke $r23.<ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo: void <init>(ucar.nc2.ft.point.standard.Table$TableParentId,ucar.nc2.ft.point.standard.Table$1)>(r0, null);

        r31 = $r23;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r23);

     label05:
        virtualinvoke r31.<ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo: void add(int)>(i5);

        i5 = i5 + 1;

        goto label04;

     label06:
        goto label08;

     label07:
        $r27 := @caughtexception;

        $r28 = new java.lang.RuntimeException;

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r27);

        throw $r28;

     label08:
        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>();

        $i3 = interfaceinvoke $r8.<java.util.Collection: int size()>();

        $r9 = newarray (ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo)[$i3];

        r0.<ucar.nc2.ft.point.standard.Table$TableParentId: ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo[] indexMap> = $r9;

        r32 = newarray (ucar.ma2.StructureData)[$i3];

        i6 = 0;

        $r10 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r18 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r33 = (ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo) $r18;

        $r19 = r0.<ucar.nc2.ft.point.standard.Table$TableParentId: ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo[] indexMap>;

        $r19[i6] = r33;

        $i4 = i6;

        i6 = i6 + 1;

        $r20 = r33.<ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo: ucar.ma2.StructureData sdata>;

        r32[$i4] = $r20;

        goto label09;

     label10:
        $r11 = new ucar.ma2.ArrayStructureW;

        $r12 = r0.<ucar.nc2.ft.point.standard.Table$TableParentId: ucar.nc2.dataset.StructureDS struct>;

        $r13 = virtualinvoke $r12.<ucar.nc2.dataset.StructureDS: ucar.ma2.StructureMembers makeStructureMembers()>();

        $r14 = newarray (int)[1];

        $r14[0] = $i3;

        specialinvoke $r11.<ucar.ma2.ArrayStructureW: void <init>(ucar.ma2.StructureMembers,int[],ucar.ma2.StructureData[])>($r13, $r14, r32);

        r34 = r0;

     label11:
        $r15 = r34.<ucar.nc2.ft.point.standard.Table: ucar.nc2.ft.point.standard.Table parent>;

        if $r15 == null goto label12;

        r34 = r34.<ucar.nc2.ft.point.standard.Table: ucar.nc2.ft.point.standard.Table parent>;

        $z2 = r34 instanceof ucar.nc2.ft.point.standard.Table$TableConstruct;

        if $z2 == 0 goto label11;

        $r17 = (ucar.nc2.ft.point.standard.Table$TableConstruct) r34;

        $r17.<ucar.nc2.ft.point.standard.Table$TableConstruct: ucar.ma2.ArrayStructure as> = $r11;

        goto label12;

     label12:
        $r16 = r0.<ucar.nc2.ft.point.standard.Table$TableParentId: java.lang.String parentIdName>;

        virtualinvoke r0.<ucar.nc2.ft.point.standard.Table$TableParentId: void checkNonDataVariable(java.lang.String)>($r16);

        return;

        catch java.io.IOException from label01 to label06 with label07;
    }

    protected void showTableExtraInfo(java.lang.String, java.util.Formatter)
    {
        java.lang.Object[] $r1;
        java.lang.Integer $r6;
        java.util.Formatter r0;
        ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo[] $r5;
        int $i0;
        java.lang.String r2, $r4;
        ucar.nc2.ft.point.standard.Table$TableParentId r3;

        r3 := @this: ucar.nc2.ft.point.standard.Table$TableParentId;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Formatter;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = r2;

        $r4 = r3.<ucar.nc2.ft.point.standard.Table$TableParentId: java.lang.String parentIdName>;

        $r1[1] = $r4;

        $r5 = r3.<ucar.nc2.ft.point.standard.Table$TableParentId: ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo[] indexMap>;

        $i0 = lengthof $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[2] = $r6;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%sparentIdName=%s, indexMap.size=%d%n", $r1);

        return;
    }

    public ucar.ma2.StructureDataIterator getStructureDataIterator(ucar.nc2.ft.point.standard.Cursor, int) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo r3;
        ucar.nc2.ft.point.StructureDataIteratorIndexed $r8;
        java.util.ArrayList $r7;
        ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo[] $r2;
        java.util.List $r6;
        ucar.nc2.dataset.StructureDS $r5;
        int $i0, i1;
        ucar.nc2.ft.point.standard.Cursor r0;
        ucar.nc2.ft.point.standard.Table$TableParentId r1;

        r1 := @this: ucar.nc2.ft.point.standard.Table$TableParentId;

        r0 := @parameter0: ucar.nc2.ft.point.standard.Cursor;

        i1 := @parameter1: int;

        $i0 = virtualinvoke r0.<ucar.nc2.ft.point.standard.Cursor: int getParentRecnum()>();

        $r2 = r1.<ucar.nc2.ft.point.standard.Table$TableParentId: ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo[] indexMap>;

        r3 = $r2[$i0];

        if r3 != null goto label1;

        $r7 = new java.util.ArrayList;

        $r6 = $r7;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        goto label2;

     label1:
        $r6 = r3.<ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo: java.util.List recnumList>;

     label2:
        $r8 = new ucar.nc2.ft.point.StructureDataIteratorIndexed;

        $r5 = r1.<ucar.nc2.ft.point.standard.Table$TableParentId: ucar.nc2.dataset.StructureDS struct>;

        specialinvoke $r8.<ucar.nc2.ft.point.StructureDataIteratorIndexed: void <init>(ucar.nc2.Structure,java.util.List)>($r5, $r6);

        return $r8;
    }

    public java.lang.String getName()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;
        ucar.nc2.ft.point.standard.Table$TableParentId r2;

        r2 := @this: ucar.nc2.ft.point.standard.Table$TableParentId;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ParentId(");

        $r3 = r2.<ucar.nc2.ft.point.standard.Table$TableParentId: java.lang.String parentIdName>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
