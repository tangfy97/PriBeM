public abstract class org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler extends org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext implements org.apache.batik.bridge.BridgeUpdateHandler
{
    private final org.apache.batik.bridge.SVGTextElementBridge this$0;

    protected void <init>(org.apache.batik.bridge.SVGTextElementBridge, org.apache.batik.bridge.BridgeContext, org.apache.batik.bridge.SVGTextElementBridge, org.w3c.dom.Element)
    {
        org.apache.batik.bridge.SVGTextElementBridge r1, r3;
        org.w3c.dom.Element r4;
        org.apache.batik.bridge.BridgeContext r2;
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler r0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler;

        r1 := @parameter0: org.apache.batik.bridge.SVGTextElementBridge;

        r2 := @parameter1: org.apache.batik.bridge.BridgeContext;

        r3 := @parameter2: org.apache.batik.bridge.SVGTextElementBridge;

        r4 := @parameter3: org.w3c.dom.Element;

        specialinvoke r0.<org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext: void <init>(org.apache.batik.bridge.SVGTextElementBridge,org.apache.batik.bridge.BridgeContext,org.apache.batik.bridge.SVGTextElementBridge,org.w3c.dom.Element)>(r1, r2, r3, r4);

        r0.<org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler: org.apache.batik.bridge.SVGTextElementBridge this$0> = r1;

        return;
    }

    public void handleDOMAttrModifiedEvent(org.w3c.dom.events.MutationEvent)
    {
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler r0;
        org.w3c.dom.events.MutationEvent r1;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler;

        r1 := @parameter0: org.w3c.dom.events.MutationEvent;

        return;
    }

    public void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)
    {
        org.apache.batik.bridge.SVGTextElementBridge $r2;
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler r0;
        org.w3c.dom.events.MutationEvent r1;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler;

        r1 := @parameter0: org.w3c.dom.events.MutationEvent;

        $r2 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext: org.apache.batik.bridge.SVGTextElementBridge textBridge>;

        virtualinvoke $r2.<org.apache.batik.bridge.SVGTextElementBridge: void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)>(r1);

        return;
    }

    public void handleDOMNodeRemovedEvent(org.w3c.dom.events.MutationEvent)
    {
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler r0;
        org.w3c.dom.events.MutationEvent r1;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler;

        r1 := @parameter0: org.w3c.dom.events.MutationEvent;

        return;
    }

    public void handleDOMCharacterDataModified(org.w3c.dom.events.MutationEvent)
    {
        org.apache.batik.bridge.SVGTextElementBridge $r2;
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler r0;
        org.w3c.dom.events.MutationEvent r1;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler;

        r1 := @parameter0: org.w3c.dom.events.MutationEvent;

        $r2 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext: org.apache.batik.bridge.SVGTextElementBridge textBridge>;

        virtualinvoke $r2.<org.apache.batik.bridge.SVGTextElementBridge: void handleDOMCharacterDataModified(org.w3c.dom.events.MutationEvent)>(r1);

        return;
    }

    public void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)
    {
        org.apache.batik.bridge.SVGTextElementBridge $r2;
        org.apache.batik.css.engine.CSSEngineEvent r1;
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler r0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler;

        r1 := @parameter0: org.apache.batik.css.engine.CSSEngineEvent;

        $r2 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildSVGContext: org.apache.batik.bridge.SVGTextElementBridge textBridge>;

        virtualinvoke $r2.<org.apache.batik.bridge.SVGTextElementBridge: void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)>(r1);

        return;
    }

    public void handleAnimatedAttributeChanged(org.apache.batik.dom.svg.AnimatedLiveAttributeValue)
    {
        org.apache.batik.dom.svg.AnimatedLiveAttributeValue r1;
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler r0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler;

        r1 := @parameter0: org.apache.batik.dom.svg.AnimatedLiveAttributeValue;

        return;
    }

    public void handleOtherAnimationChanged(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler r0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void dispose()
    {
        org.apache.batik.bridge.SVGTextElementBridge $r3;
        org.w3c.dom.Element $r1, $r4;
        org.apache.batik.dom.svg.SVGOMElement $r2;
        java.util.WeakHashMap $r5;
        org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler r0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler;

        $r1 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $r2 = (org.apache.batik.dom.svg.SVGOMElement) $r1;

        virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMElement: void setSVGContext(org.apache.batik.dom.svg.SVGContext)>(null);

        $r3 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler: org.apache.batik.bridge.SVGTextElementBridge this$0>;

        $r5 = $r3.<org.apache.batik.bridge.SVGTextElementBridge: java.util.WeakHashMap elemTPI>;

        $r4 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        virtualinvoke $r5.<java.util.WeakHashMap: java.lang.Object remove(java.lang.Object)>($r4);

        return;
    }
}
