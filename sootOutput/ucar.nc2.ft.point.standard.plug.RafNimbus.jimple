public class ucar.nc2.ft.point.standard.plug.RafNimbus extends ucar.nc2.ft.point.standard.TableConfigurerImpl
{

    public void <init>()
    {
        ucar.nc2.ft.point.standard.plug.RafNimbus r0;

        r0 := @this: ucar.nc2.ft.point.standard.plug.RafNimbus;

        specialinvoke r0.<ucar.nc2.ft.point.standard.TableConfigurerImpl: void <init>()>();

        return;
    }

    public boolean isMine(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.ft.point.standard.plug.RafNimbus r2;
        java.lang.String $r1;
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.nc2.constants.FeatureType r3;
        boolean $z0, $z1;

        r2 := @this: ucar.nc2.ft.point.standard.plug.RafNimbus;

        r3 := @parameter0: ucar.nc2.constants.FeatureType;

        r0 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "Convention", null);

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("NCAR-RAF/nimbus");

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public ucar.nc2.ft.point.standard.TableConfig getConfig(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        java.lang.Object[] $r7;
        java.util.Formatter r6;
        ucar.nc2.ft.point.standard.TableConfig $r0, $r10;
        ucar.nc2.ft.point.standard.Table$Type $r1, $r11;
        ucar.nc2.dataset.CoordinateAxis $r4;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r16;
        ucar.nc2.ft.point.standard.plug.RafNimbus r8;
        ucar.nc2.constants.AxisType $r3;
        java.lang.String $r12, $r13, $r14, $r15;
        ucar.nc2.constants.FeatureType r9;
        boolean $z0, z1, $z2, $z4, $z5;
        ucar.nc2.Dimension $r5;
        ucar.nc2.dataset.NetcdfDataset r2;

        r8 := @this: ucar.nc2.ft.point.standard.plug.RafNimbus;

        r9 := @parameter0: ucar.nc2.constants.FeatureType;

        r2 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r6 := @parameter2: java.util.Formatter;

        $r0 = new ucar.nc2.ft.point.standard.TableConfig;

        $r1 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Top>;

        specialinvoke $r0.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>($r1, "singleTrajectory");

        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r4 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r2, $r3);

        if $r4 != null goto label1;

        $r7 = newarray (java.lang.Object)[0];

        virtualinvoke r6.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Cant find a time coordinate", $r7);

        return null;

     label1:
        $r5 = virtualinvoke $r4.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Dimension getDimension(int)>(0);

        $z0 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: boolean hasRecordStructure(ucar.nc2.dataset.NetcdfDataset)>(r2);

        if $z0 == 0 goto label2;

        $z2 = virtualinvoke $r5.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z2 == 0 goto label2;

        $z5 = 1;

        $z4 = 1;

        goto label3;

     label2:
        $z5 = 0;

        $z4 = 0;

     label3:
        z1 = $z4;

        $r10 = new ucar.nc2.ft.point.standard.TableConfig;

        $r11 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Structure>;

        $r12 = virtualinvoke $r5.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r10.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>($r11, $r12);

        $r13 = virtualinvoke $r5.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r10.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r13;

        $r14 = virtualinvoke $r4.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getName()>();

        $r10.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String time> = $r14;

        if $z5 == 0 goto label4;

        $r15 = "record";

        goto label5;

     label4:
        $r15 = virtualinvoke $r5.<ucar.nc2.Dimension: java.lang.String getName()>();

     label5:
        $r10.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r15;

        if z1 == 0 goto label6;

        $r16 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType Structure>;

        goto label7;

     label6:
        $r16 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure>;

     label7:
        $r10.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r16;

        staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: void findCoordWithDimension(ucar.nc2.ft.point.standard.TableConfig,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Dimension)>($r10, r2, $r5);

        virtualinvoke $r0.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r10);

        return $r0;
    }
}
