public class ucar.ma2.ArrayChar extends ucar.ma2.Array
{
    protected char[] storage;

    static ucar.ma2.ArrayChar factory(ucar.ma2.Index)
    {
        ucar.ma2.ArrayChar $r1;
        ucar.ma2.Index r0;

        r0 := @parameter0: ucar.ma2.Index;

        $r1 = staticinvoke <ucar.ma2.ArrayChar: ucar.ma2.ArrayChar factory(ucar.ma2.Index,char[])>(r0, null);

        return $r1;
    }

    static ucar.ma2.ArrayChar factory(ucar.ma2.Index, char[])
    {
        ucar.ma2.ArrayChar$D5 $r4;
        ucar.ma2.ArrayChar$D4 $r5;
        ucar.ma2.ArrayChar$D7 $r1;
        ucar.ma2.ArrayChar$D6 $r3;
        ucar.ma2.ArrayChar$D1 $r8;
        ucar.ma2.ArrayChar$D0 $r9;
        ucar.ma2.ArrayChar$D3 $r6;
        ucar.ma2.ArrayChar$D2 $r7;
        ucar.ma2.ArrayChar $r10;
        ucar.ma2.Index r0;
        int $i0;
        char[] r2;

        r0 := @parameter0: ucar.ma2.Index;

        r2 := @parameter1: char[];

        $i0 = virtualinvoke r0.<ucar.ma2.Index: int getRank()>();

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            case 7: goto label8;
            default: goto label9;
        };

     label1:
        $r9 = new ucar.ma2.ArrayChar$D0;

        specialinvoke $r9.<ucar.ma2.ArrayChar$D0: void <init>(ucar.ma2.Index,char[],ucar.ma2.ArrayChar$1)>(r0, r2, null);

        return $r9;

     label2:
        $r8 = new ucar.ma2.ArrayChar$D1;

        specialinvoke $r8.<ucar.ma2.ArrayChar$D1: void <init>(ucar.ma2.Index,char[],ucar.ma2.ArrayChar$1)>(r0, r2, null);

        return $r8;

     label3:
        $r7 = new ucar.ma2.ArrayChar$D2;

        specialinvoke $r7.<ucar.ma2.ArrayChar$D2: void <init>(ucar.ma2.Index,char[],ucar.ma2.ArrayChar$1)>(r0, r2, null);

        return $r7;

     label4:
        $r6 = new ucar.ma2.ArrayChar$D3;

        specialinvoke $r6.<ucar.ma2.ArrayChar$D3: void <init>(ucar.ma2.Index,char[],ucar.ma2.ArrayChar$1)>(r0, r2, null);

        return $r6;

     label5:
        $r5 = new ucar.ma2.ArrayChar$D4;

        specialinvoke $r5.<ucar.ma2.ArrayChar$D4: void <init>(ucar.ma2.Index,char[],ucar.ma2.ArrayChar$1)>(r0, r2, null);

        return $r5;

     label6:
        $r4 = new ucar.ma2.ArrayChar$D5;

        specialinvoke $r4.<ucar.ma2.ArrayChar$D5: void <init>(ucar.ma2.Index,char[],ucar.ma2.ArrayChar$1)>(r0, r2, null);

        return $r4;

     label7:
        $r3 = new ucar.ma2.ArrayChar$D6;

        specialinvoke $r3.<ucar.ma2.ArrayChar$D6: void <init>(ucar.ma2.Index,char[],ucar.ma2.ArrayChar$1)>(r0, r2, null);

        return $r3;

     label8:
        $r1 = new ucar.ma2.ArrayChar$D7;

        specialinvoke $r1.<ucar.ma2.ArrayChar$D7: void <init>(ucar.ma2.Index,char[],ucar.ma2.ArrayChar$1)>(r0, r2, null);

        return $r1;

     label9:
        $r10 = new ucar.ma2.ArrayChar;

        specialinvoke $r10.<ucar.ma2.ArrayChar: void <init>(ucar.ma2.Index,char[])>(r0, r2);

        return $r10;
    }

    public void <init>(int[])
    {
        ucar.ma2.ArrayChar r0;
        int[] r1;
        ucar.ma2.Index $r2;
        int $i1;
        char[] $r3;
        long $l0;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: int[];

        specialinvoke r0.<ucar.ma2.Array: void <init>(int[])>(r1);

        $r2 = r0.<ucar.ma2.ArrayChar: ucar.ma2.Index indexCalc>;

        $l0 = virtualinvoke $r2.<ucar.ma2.Index: long getSize()>();

        $i1 = (int) $l0;

        $r3 = newarray (char)[$i1];

        r0.<ucar.ma2.ArrayChar: char[] storage> = $r3;

        return;
    }

    void <init>(ucar.ma2.Index, char[])
    {
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index r1;
        int $i1;
        char[] r2, $r3;
        long $l0;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        r2 := @parameter1: char[];

        specialinvoke r0.<ucar.ma2.Array: void <init>(ucar.ma2.Index)>(r1);

        if r2 == null goto label1;

        r0.<ucar.ma2.ArrayChar: char[] storage> = r2;

        goto label2;

     label1:
        $l0 = virtualinvoke r1.<ucar.ma2.Index: long getSize()>();

        $i1 = (int) $l0;

        $r3 = newarray (char)[$i1];

        r0.<ucar.ma2.ArrayChar: char[] storage> = $r3;

     label2:
        return;
    }

    public void <init>(java.lang.String)
    {
        char $c3;
        ucar.ma2.ArrayChar r0;
        int[] $r1;
        int $i0, $i1, $i2, i4;
        char[] $r3, $r4;
        java.lang.String r2;

        r0 := @this: ucar.ma2.ArrayChar;

        r2 := @parameter0: java.lang.String;

        $r1 = newarray (int)[1];

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $r1[0] = $i0;

        specialinvoke r0.<ucar.ma2.Array: void <init>(int[])>($r1);

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $r3 = newarray (char)[$i1];

        r0.<ucar.ma2.ArrayChar: char[] storage> = $r3;

        i4 = 0;

     label1:
        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        if i4 >= $i2 goto label2;

        $r4 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $c3 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i4);

        $r4[i4] = $c3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    ucar.ma2.Array createView(ucar.ma2.Index)
    {
        ucar.ma2.ArrayChar r1, $r3;
        ucar.ma2.Index r0;
        char[] $r2;

        r1 := @this: ucar.ma2.ArrayChar;

        r0 := @parameter0: ucar.ma2.Index;

        $r2 = r1.<ucar.ma2.ArrayChar: char[] storage>;

        $r3 = staticinvoke <ucar.ma2.ArrayChar: ucar.ma2.ArrayChar factory(ucar.ma2.Index,char[])>(r0, $r2);

        return $r3;
    }

    public java.lang.Object getStorage()
    {
        char[] $r1;
        ucar.ma2.ArrayChar r0;

        r0 := @this: ucar.ma2.ArrayChar;

        $r1 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        return $r1;
    }

    void copyFrom1DJavaArray(ucar.ma2.IndexIterator, java.lang.Object)
    {
        ucar.ma2.IndexIterator r3;
        char $c1;
        ucar.ma2.ArrayChar r4;
        int $i0, i2;
        char[] $r1, r2;
        java.lang.Object r0;

        r4 := @this: ucar.ma2.ArrayChar;

        r3 := @parameter0: ucar.ma2.IndexIterator;

        r0 := @parameter1: java.lang.Object;

        $r1 = (char[]) r0;

        r2 = (char[]) $r1;

        i2 = 0;

     label1:
        $i0 = lengthof r2;

        if i2 >= $i0 goto label2;

        $c1 = r2[i2];

        interfaceinvoke r3.<ucar.ma2.IndexIterator: void setCharNext(char)>($c1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    void copyTo1DJavaArray(ucar.ma2.IndexIterator, java.lang.Object)
    {
        ucar.ma2.IndexIterator r3;
        char $c1;
        ucar.ma2.ArrayChar r4;
        int $i0, i2;
        char[] $r1, r2;
        java.lang.Object r0;

        r4 := @this: ucar.ma2.ArrayChar;

        r3 := @parameter0: ucar.ma2.IndexIterator;

        r0 := @parameter1: java.lang.Object;

        $r1 = (char[]) r0;

        r2 = (char[]) $r1;

        i2 = 0;

     label1:
        $i0 = lengthof r2;

        if i2 >= $i0 goto label2;

        $c1 = interfaceinvoke r3.<ucar.ma2.IndexIterator: char getCharNext()>();

        r2[i2] = $c1;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public java.nio.ByteBuffer getDataAsByteBuffer()
    {
        ucar.ma2.ArrayChar r0;
        byte $b2;
        int $i1;
        long $l0;
        java.nio.ByteBuffer $r1;
        boolean $z0;

        r0 := @this: ucar.ma2.ArrayChar;

        $l0 = virtualinvoke r0.<ucar.ma2.ArrayChar: long getSize()>();

        $i1 = (int) $l0;

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i1);

        virtualinvoke r0.<ucar.ma2.ArrayChar: void resetLocalIterator()>();

     label1:
        $z0 = virtualinvoke r0.<ucar.ma2.ArrayChar: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $b2 = virtualinvoke r0.<ucar.ma2.ArrayChar: byte nextByte()>();

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b2);

        goto label1;

     label2:
        return $r1;
    }

    public java.lang.Class getElementType()
    {
        java.lang.Class $r0;
        ucar.ma2.ArrayChar r1;

        r1 := @this: ucar.ma2.ArrayChar;

        $r0 = <java.lang.Character: java.lang.Class TYPE>;

        return $r0;
    }

    public char get(ucar.ma2.Index)
    {
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index r1;
        int $i0;
        char[] $r2;
        char $c1;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $c1 = $r2[$i0];

        return $c1;
    }

    public void set(ucar.ma2.Index, char)
    {
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index r1;
        int $i0;
        char[] $r2;
        char c1;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        c1 := @parameter1: char;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $r2[$i0] = c1;

        return;
    }

    public double getDouble(ucar.ma2.Index)
    {
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index r1;
        int $i0;
        char[] $r2;
        char $c1;
        double $d0;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $c1 = $r2[$i0];

        $d0 = (double) $c1;

        return $d0;
    }

    public void setDouble(ucar.ma2.Index, double)
    {
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index r1;
        int $i0, $i1;
        char[] $r2;
        char $c2;
        double d0;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        d0 := @parameter1: double;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $i1 = (int) d0;

        $c2 = (char) $i1;

        $r2[$i0] = $c2;

        return;
    }

    public float getFloat(ucar.ma2.Index)
    {
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index r1;
        int $i0;
        char[] $r2;
        float $f0;
        char $c1;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $c1 = $r2[$i0];

        $f0 = (float) $c1;

        return $f0;
    }

    public void setFloat(ucar.ma2.Index, float)
    {
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index r1;
        int $i0, $i1;
        char[] $r2;
        float f0;
        char $c2;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        f0 := @parameter1: float;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $i1 = (int) f0;

        $c2 = (char) $i1;

        $r2[$i0] = $c2;

        return;
    }

    public long getLong(ucar.ma2.Index)
    {
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index r1;
        int $i0;
        char[] $r2;
        char $c1;
        long $l2;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $c1 = $r2[$i0];

        $l2 = (long) $c1;

        return $l2;
    }

    public void setLong(ucar.ma2.Index, long)
    {
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index r1;
        int $i0, $i2;
        char[] $r2;
        long l1;
        char $c3;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        l1 := @parameter1: long;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $i2 = (int) l1;

        $c3 = (char) $i2;

        $r2[$i0] = $c3;

        return;
    }

    public int getInt(ucar.ma2.Index)
    {
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index r1;
        int $i0, $i2;
        char[] $r2;
        char $c1;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $c1 = $r2[$i0];

        $i2 = (int) $c1;

        return $i2;
    }

    public void setInt(ucar.ma2.Index, int)
    {
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index r1;
        int $i0, i1;
        char[] $r2;
        char $c2;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        i1 := @parameter1: int;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $c2 = (char) i1;

        $r2[$i0] = $c2;

        return;
    }

    public short getShort(ucar.ma2.Index)
    {
        short $s2;
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index r1;
        int $i0;
        char[] $r2;
        char $c1;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $c1 = $r2[$i0];

        $s2 = (short) $c1;

        return $s2;
    }

    public void setShort(ucar.ma2.Index, short)
    {
        short s1;
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index r1;
        int $i0;
        char[] $r2;
        char $c2;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        s1 := @parameter1: short;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $c2 = (char) s1;

        $r2[$i0] = $c2;

        return;
    }

    public byte getByte(ucar.ma2.Index)
    {
        ucar.ma2.ArrayChar r0;
        byte $b2;
        ucar.ma2.Index r1;
        int $i0;
        char[] $r2;
        char $c1;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $c1 = $r2[$i0];

        $b2 = (byte) $c1;

        return $b2;
    }

    public void setByte(ucar.ma2.Index, byte)
    {
        ucar.ma2.ArrayChar r0;
        byte b1;
        ucar.ma2.Index r1;
        int $i0;
        char[] $r2;
        char $c2;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        b1 := @parameter1: byte;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $c2 = (char) b1;

        $r2[$i0] = $c2;

        return;
    }

    public char getChar(ucar.ma2.Index)
    {
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index r1;
        int $i0;
        char[] $r2;
        char $c1;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $c1 = $r2[$i0];

        return $c1;
    }

    public void setChar(ucar.ma2.Index, char)
    {
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index r1;
        int $i0;
        char[] $r2;
        char c1;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        c1 := @parameter1: char;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $r2[$i0] = c1;

        return;
    }

    public boolean getBoolean(ucar.ma2.Index)
    {
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayChar r1;
        ucar.ma2.Index r2;

        r1 := @this: ucar.ma2.ArrayChar;

        r2 := @parameter0: ucar.ma2.Index;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setBoolean(ucar.ma2.Index, boolean)
    {
        ucar.ma2.ArrayChar r1;
        ucar.ma2.Index r2;
        ucar.ma2.ForbiddenConversionException $r0;
        boolean z0;

        r1 := @this: ucar.ma2.ArrayChar;

        r2 := @parameter0: ucar.ma2.Index;

        z0 := @parameter1: boolean;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object getObject(ucar.ma2.Index)
    {
        ucar.ma2.ArrayChar r0;
        java.lang.Character $r3;
        ucar.ma2.Index r1;
        int $i0;
        char[] $r2;
        char $c1;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $c1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r3;
    }

    public void setObject(ucar.ma2.Index, java.lang.Object)
    {
        ucar.ma2.ArrayChar r0;
        java.lang.Character $r4;
        ucar.ma2.Index r1;
        int $i0;
        char[] $r2;
        java.lang.Object r3;
        char $c1;

        r0 := @this: ucar.ma2.ArrayChar;

        r1 := @parameter0: ucar.ma2.Index;

        r3 := @parameter1: java.lang.Object;

        $r2 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i0 = virtualinvoke r1.<ucar.ma2.Index: int currentElement()>();

        $r4 = (java.lang.Character) r3;

        $c1 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        $r2[$i0] = $c1;

        return;
    }

    public java.lang.String getString()
    {
        char $c2;
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index $r1;
        int $i0, $i1, i3, i4;
        char[] $r3, $r4;
        java.lang.String $r2;

        r0 := @this: ucar.ma2.ArrayChar;

        $i0 = virtualinvoke r0.<ucar.ma2.ArrayChar: int getRank()>();

        if $i0 == 1 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ArayChar.getString rank must be 1");

        throw $r5;

     label1:
        $r1 = r0.<ucar.ma2.ArrayChar: ucar.ma2.Index indexCalc>;

        $i1 = virtualinvoke $r1.<ucar.ma2.Index: int getShape(int)>(0);

        i3 = 0;

        i4 = 0;

     label2:
        if i4 >= $i1 goto label4;

        $r4 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $c2 = $r4[i4];

        if 0 != $c2 goto label3;

        goto label4;

     label3:
        i3 = i3 + 1;

        i4 = i4 + 1;

        goto label2;

     label4:
        $r2 = new java.lang.String;

        $r3 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r3, 0, i3);

        return $r2;
    }

    public java.lang.String getString(int)
    {
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index $r1, $r2;
        int i0;
        java.lang.String $r3;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<ucar.ma2.ArrayChar: ucar.ma2.Index getIndex()>();

        $r2 = virtualinvoke $r1.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i0);

        $r3 = virtualinvoke r0.<ucar.ma2.ArrayChar: java.lang.String getString(ucar.ma2.Index)>($r2);

        return $r3;
    }

    public java.lang.String getString(ucar.ma2.Index)
    {
        char $c4, $c5;
        java.lang.IllegalArgumentException $r6;
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index $r1, r4;
        int $i0, $i1, $i2, $i3, i6, i7;
        char[] r2;
        java.lang.String $r3, $r5;

        r0 := @this: ucar.ma2.ArrayChar;

        r4 := @parameter0: ucar.ma2.Index;

        $i0 = virtualinvoke r0.<ucar.ma2.ArrayChar: int getRank()>();

        if $i0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ArayChar.getString rank must not be 0");

        throw $r6;

     label1:
        if $i0 != 1 goto label2;

        $r5 = virtualinvoke r0.<ucar.ma2.ArrayChar: java.lang.String getString()>();

        return $r5;

     label2:
        $r1 = r0.<ucar.ma2.ArrayChar: ucar.ma2.Index indexCalc>;

        $i1 = $i0 - 1;

        $i2 = virtualinvoke $r1.<ucar.ma2.Index: int getShape(int)>($i1);

        r2 = newarray (char)[$i2];

        i6 = 0;

        i7 = 0;

     label3:
        if i7 >= $i2 goto label5;

        $i3 = $i0 - 1;

        virtualinvoke r4.<ucar.ma2.Index: void setDim(int,int)>($i3, i7);

        $c4 = virtualinvoke r0.<ucar.ma2.ArrayChar: char getChar(ucar.ma2.Index)>(r4);

        r2[i7] = $c4;

        $c5 = r2[i7];

        if 0 != $c5 goto label4;

        goto label5;

     label4:
        i6 = i6 + 1;

        i7 = i7 + 1;

        goto label3;

     label5:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>(r2, 0, i6);

        return $r3;
    }

    public void setString(java.lang.String)
    {
        char $c4;
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index $r1;
        int $i0, $i1, $i2, $i3, i5, i6;
        char[] $r3, $r4;
        java.lang.String r2;

        r0 := @this: ucar.ma2.ArrayChar;

        r2 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<ucar.ma2.ArrayChar: int getRank()>();

        if $i0 == 1 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ArayChar.setString rank must be 1");

        throw $r5;

     label1:
        $r1 = r0.<ucar.ma2.ArrayChar: ucar.ma2.Index indexCalc>;

        $i1 = virtualinvoke $r1.<ucar.ma2.Index: int getShape(int)>(0);

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i1);

        i5 = 0;

     label2:
        if i5 >= $i3 goto label3;

        $r4 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $c4 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i5);

        $r4[i5] = $c4;

        i5 = i5 + 1;

        goto label2;

     label3:
        i6 = $i3;

     label4:
        if i6 >= $i1 goto label5;

        $r3 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $r3[i6] = 0;

        i6 = i6 + 1;

        goto label4;

     label5:
        return;
    }

    public void setString(int, java.lang.String)
    {
        ucar.ma2.ArrayChar r0;
        ucar.ma2.Index $r1, $r2;
        int $i0, i1;
        java.lang.String r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: ucar.ma2.ArrayChar;

        i1 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<ucar.ma2.ArrayChar: int getRank()>();

        if $i0 == 2 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ArrayChar.setString rank must be 2");

        throw $r4;

     label1:
        $r1 = virtualinvoke r0.<ucar.ma2.ArrayChar: ucar.ma2.Index getIndex()>();

        $r2 = virtualinvoke $r1.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i1);

        virtualinvoke r0.<ucar.ma2.ArrayChar: void setString(ucar.ma2.Index,java.lang.String)>($r2, r3);

        return;
    }

    public void setString(ucar.ma2.Index, java.lang.String)
    {
        ucar.ma2.ArrayChar r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i8, i9, i10;
        java.lang.String r2;
        char $c7;
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.Index $r1, r3;

        r0 := @this: ucar.ma2.ArrayChar;

        r3 := @parameter0: ucar.ma2.Index;

        r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<ucar.ma2.ArrayChar: int getRank()>();

        if $i0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ArrayChar.setString rank must not be 0");

        throw $r4;

     label1:
        $r1 = r0.<ucar.ma2.ArrayChar: ucar.ma2.Index indexCalc>;

        $i1 = $i0 - 1;

        $i2 = virtualinvoke $r1.<ucar.ma2.Index: int getShape(int)>($i1);

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

        i8 = 0;

        i9 = 0;

     label2:
        if i9 >= $i4 goto label3;

        $i6 = $i0 - 1;

        virtualinvoke r3.<ucar.ma2.Index: void setDim(int,int)>($i6, i9);

        $c7 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i9);

        virtualinvoke r0.<ucar.ma2.ArrayChar: void setChar(ucar.ma2.Index,char)>(r3, $c7);

        i8 = i8 + 1;

        i9 = i9 + 1;

        goto label2;

     label3:
        i10 = i8;

     label4:
        if i10 >= $i2 goto label5;

        $i5 = $i0 - 1;

        virtualinvoke r3.<ucar.ma2.Index: void setDim(int,int)>($i5, i10);

        virtualinvoke r0.<ucar.ma2.ArrayChar: void setChar(ucar.ma2.Index,char)>(r3, 0);

        i10 = i10 + 1;

        goto label4;

     label5:
        return;
    }

    public double getDouble(int)
    {
        ucar.ma2.ArrayChar r0;
        int i0;
        char[] $r1;
        char $c1;
        double $d0;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $c1 = $r1[i0];

        $d0 = (double) $c1;

        return $d0;
    }

    public void setDouble(int, double)
    {
        ucar.ma2.ArrayChar r0;
        int i0, $i1;
        char[] $r1;
        char $c2;
        double d0;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $r1 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i1 = (int) d0;

        $c2 = (char) $i1;

        $r1[i0] = $c2;

        return;
    }

    public float getFloat(int)
    {
        ucar.ma2.ArrayChar r0;
        int i0;
        char[] $r1;
        float $f0;
        char $c1;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $c1 = $r1[i0];

        $f0 = (float) $c1;

        return $f0;
    }

    public void setFloat(int, float)
    {
        ucar.ma2.ArrayChar r0;
        int i0, $i1;
        float f0;
        char[] $r1;
        char $c2;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r1 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i1 = (int) f0;

        $c2 = (char) $i1;

        $r1[i0] = $c2;

        return;
    }

    public long getLong(int)
    {
        ucar.ma2.ArrayChar r0;
        int i0;
        char[] $r1;
        char $c1;
        long $l2;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $c1 = $r1[i0];

        $l2 = (long) $c1;

        return $l2;
    }

    public void setLong(int, long)
    {
        ucar.ma2.ArrayChar r0;
        int i0, $i2;
        char[] $r1;
        long l1;
        char $c3;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $i2 = (int) l1;

        $c3 = (char) $i2;

        $r1[i0] = $c3;

        return;
    }

    public int getInt(int)
    {
        ucar.ma2.ArrayChar r0;
        int i0, $i2;
        char[] $r1;
        char $c1;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $c1 = $r1[i0];

        $i2 = (int) $c1;

        return $i2;
    }

    public void setInt(int, int)
    {
        ucar.ma2.ArrayChar r0;
        int i0, i1;
        char[] $r1;
        char $c2;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $c2 = (char) i1;

        $r1[i0] = $c2;

        return;
    }

    public short getShort(int)
    {
        short $s2;
        ucar.ma2.ArrayChar r0;
        int i0;
        char[] $r1;
        char $c1;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $c1 = $r1[i0];

        $s2 = (short) $c1;

        return $s2;
    }

    public void setShort(int, short)
    {
        short s1;
        ucar.ma2.ArrayChar r0;
        int i0;
        char[] $r1;
        char $c2;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        s1 := @parameter1: short;

        $r1 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $c2 = (char) s1;

        $r1[i0] = $c2;

        return;
    }

    public byte getByte(int)
    {
        ucar.ma2.ArrayChar r0;
        byte $b2;
        int i0;
        char[] $r1;
        char $c1;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $c1 = $r1[i0];

        $b2 = (byte) $c1;

        return $b2;
    }

    public void setByte(int, byte)
    {
        ucar.ma2.ArrayChar r0;
        byte b1;
        int i0;
        char[] $r1;
        char $c2;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        $r1 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $c2 = (char) b1;

        $r1[i0] = $c2;

        return;
    }

    public char getChar(int)
    {
        ucar.ma2.ArrayChar r0;
        int i0;
        char[] $r1;
        char $c1;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $c1 = $r1[i0];

        return $c1;
    }

    public void setChar(int, char)
    {
        ucar.ma2.ArrayChar r0;
        int i0;
        char[] $r1;
        char c1;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        c1 := @parameter1: char;

        $r1 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $r1[i0] = c1;

        return;
    }

    public boolean getBoolean(int)
    {
        int i0;
        ucar.ma2.ForbiddenConversionException $r0;
        ucar.ma2.ArrayChar r1;

        r1 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public void setBoolean(int, boolean)
    {
        ucar.ma2.ArrayChar r1;
        int i0;
        ucar.ma2.ForbiddenConversionException $r0;
        boolean z0;

        r1 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r0 = new ucar.ma2.ForbiddenConversionException;

        specialinvoke $r0.<ucar.ma2.ForbiddenConversionException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object getObject(int)
    {
        ucar.ma2.ArrayChar r0;
        java.lang.Character $r1;
        int i0;
        char $c1;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        $c1 = virtualinvoke r0.<ucar.ma2.ArrayChar: char getChar(int)>(i0);

        $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r1;
    }

    public void setObject(int, java.lang.Object)
    {
        ucar.ma2.ArrayChar r0;
        java.lang.Character $r2;
        int i0;
        char[] $r3;
        java.lang.Object r1;
        char $c1;

        r0 := @this: ucar.ma2.ArrayChar;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r3 = r0.<ucar.ma2.ArrayChar: char[] storage>;

        $r2 = (java.lang.Character) r1;

        $c1 = virtualinvoke $r2.<java.lang.Character: char charValue()>();

        $r3[i0] = $c1;

        return;
    }

    public java.lang.String toString()
    {
        ucar.ma2.ArrayChar r1;
        int i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r3, $r4;
        ucar.ma2.ArrayChar$StringIterator $r2;
        boolean $z0;

        r1 := @this: ucar.ma2.ArrayChar;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<ucar.ma2.ArrayChar: ucar.ma2.ArrayChar$StringIterator getStringIterator()>();

        i0 = 0;

     label1:
        $z0 = virtualinvoke $r2.<ucar.ma2.ArrayChar$StringIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        if i0 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        $r4 = virtualinvoke $r2.<ucar.ma2.ArrayChar$StringIterator: java.lang.String next()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        i0 = i0 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public ucar.ma2.ArrayChar$StringIterator getStringIterator()
    {
        ucar.ma2.ArrayChar r1;
        ucar.ma2.ArrayChar$StringIterator $r0;

        r1 := @this: ucar.ma2.ArrayChar;

        $r0 = new ucar.ma2.ArrayChar$StringIterator;

        specialinvoke $r0.<ucar.ma2.ArrayChar$StringIterator: void <init>(ucar.ma2.ArrayChar)>(r1);

        return $r0;
    }

    public ucar.ma2.ArrayObject make1DStringArray()
    {
        long $l1;
        ucar.ma2.ArrayChar r0;
        int[] $r2;
        int $i0, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r7;
        ucar.ma2.ArrayChar$StringIterator $r5;
        boolean $z0;
        ucar.ma2.ArrayObject $r6;
        ucar.ma2.IndexIterator $r4;
        ucar.ma2.Array $r3;
        ucar.ma2.Index $r1;

        r0 := @this: ucar.ma2.ArrayChar;

        $i0 = virtualinvoke r0.<ucar.ma2.ArrayChar: int getRank()>();

        if $i0 != 0 goto label1;

        $i6 = 1;

        goto label2;

     label1:
        $l1 = virtualinvoke r0.<ucar.ma2.ArrayChar: long getSize()>();

        $i2 = (int) $l1;

        $r1 = r0.<ucar.ma2.ArrayChar: ucar.ma2.Index indexCalc>;

        $i3 = virtualinvoke r0.<ucar.ma2.ArrayChar: int getRank()>();

        $i4 = $i3 - 1;

        $i5 = virtualinvoke $r1.<ucar.ma2.Index: int getShape(int)>($i4);

        $i6 = $i2 / $i5;

     label2:
        $r2 = newarray (int)[1];

        $r2[0] = $i6;

        $r3 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>(class "Ljava/lang/String;", $r2);

        $r4 = virtualinvoke $r3.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r5 = virtualinvoke r0.<ucar.ma2.ArrayChar: ucar.ma2.ArrayChar$StringIterator getStringIterator()>();

     label3:
        $z0 = virtualinvoke $r5.<ucar.ma2.ArrayChar$StringIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = virtualinvoke $r5.<ucar.ma2.ArrayChar$StringIterator: java.lang.String next()>();

        interfaceinvoke $r4.<ucar.ma2.IndexIterator: void setObjectNext(java.lang.Object)>($r7);

        goto label3;

     label4:
        $r6 = (ucar.ma2.ArrayObject) $r3;

        return $r6;
    }

    public static ucar.ma2.ArrayChar makeFromString(java.lang.String, int)
    {
        int i0, $i1, i3;
        char $c2;
        java.lang.String r1;
        ucar.ma2.ArrayChar$D1 $r0;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new ucar.ma2.ArrayChar$D1;

        specialinvoke $r0.<ucar.ma2.ArrayChar$D1: void <init>(int)>(i0);

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i3 >= $i1 goto label2;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        virtualinvoke $r0.<ucar.ma2.ArrayChar: void setChar(int,char)>(i3, $c2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public static ucar.ma2.ArrayChar makeFromStringArray(ucar.ma2.ArrayObject)
    {
        ucar.ma2.ArrayObject r0;
        ucar.ma2.IndexIterator $r1;
        ucar.ma2.ArrayChar $r2;
        int $i0, i1;
        java.lang.Object $r3;
        java.lang.String r4;
        boolean $z0;

        r0 := @parameter0: ucar.ma2.ArrayObject;

        $r1 = virtualinvoke r0.<ucar.ma2.ArrayObject: ucar.ma2.IndexIterator getIndexIterator()>();

        i1 = 0;

     label1:
        $z0 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, i1);

        goto label1;

     label2:
        $r2 = staticinvoke <ucar.ma2.ArrayChar: ucar.ma2.ArrayChar makeFromStringArray(ucar.ma2.ArrayObject,int)>(r0, i1);

        return $r2;
    }

    public static ucar.ma2.ArrayChar makeFromStringArray(ucar.ma2.ArrayObject, int)
    {
        ucar.ma2.Section $r0;
        long $l1;
        ucar.ma2.ArrayChar $r8;
        int[] $r2, $r3;
        int i0, $i2, $i3, $i4, i6, i7;
        java.lang.String r11;
        boolean $z0;
        ucar.ma2.ArrayObject r1;
        ucar.ma2.IndexIterator $r5;
        char $c5;
        ucar.ma2.Array $r7;
        ucar.ma2.InvalidRangeException $r10;
        char[] r4;
        java.lang.Class $r6;
        java.lang.Object $r9;

        r1 := @parameter0: ucar.ma2.ArrayObject;

        i0 := @parameter1: int;

     label1:
        $r0 = new ucar.ma2.Section;

        $r2 = virtualinvoke r1.<ucar.ma2.ArrayObject: int[] getShape()>();

        specialinvoke $r0.<ucar.ma2.Section: void <init>(int[])>($r2);

        virtualinvoke $r0.<ucar.ma2.Section: ucar.ma2.Section appendRange(int)>(i0);

        $r3 = virtualinvoke $r0.<ucar.ma2.Section: int[] getShape()>();

        $l1 = virtualinvoke $r0.<ucar.ma2.Section: long computeSize()>();

        $i2 = (int) $l1;

        r4 = newarray (char)[$i2];

        i6 = 0;

        $r5 = virtualinvoke r1.<ucar.ma2.ArrayObject: ucar.ma2.IndexIterator getIndexIterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke $r5.<ucar.ma2.IndexIterator: java.lang.Object next()>();

        r11 = (java.lang.String) $r9;

        i7 = 0;

     label3:
        $i3 = virtualinvoke r11.<java.lang.String: int length()>();

        if i7 >= $i3 goto label4;

        if i7 >= i0 goto label4;

        $i4 = i6 + i7;

        $c5 = virtualinvoke r11.<java.lang.String: char charAt(int)>(i7);

        r4[$i4] = $c5;

        i7 = i7 + 1;

        goto label3;

     label4:
        i6 = i6 + i0;

        goto label2;

     label5:
        $r6 = <java.lang.Character: java.lang.Class TYPE>;

        $r7 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r6, $r3, r4);

        $r8 = (ucar.ma2.ArrayChar) $r7;

     label6:
        return $r8;

     label7:
        $r10 := @caughtexception;

        virtualinvoke $r10.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        return null;

        catch ucar.ma2.InvalidRangeException from label1 to label6 with label7;
    }
}
