class com.mycila.inject.internal.cglib.core.ClassEmitter$1 extends com.mycila.inject.internal.cglib.core.ClassInfo
{
    private final com.mycila.inject.internal.asm.Type val$classType;
    private final com.mycila.inject.internal.asm.Type val$superType;
    private final com.mycila.inject.internal.asm.Type[] val$interfaces;
    private final int val$access;
    private final com.mycila.inject.internal.cglib.core.ClassEmitter this$0;

    void <init>(com.mycila.inject.internal.cglib.core.ClassEmitter, com.mycila.inject.internal.asm.Type, com.mycila.inject.internal.asm.Type, com.mycila.inject.internal.asm.Type[], int)
    {
        com.mycila.inject.internal.cglib.core.ClassEmitter r1;
        com.mycila.inject.internal.cglib.core.ClassEmitter$1 r0;
        int i0;
        com.mycila.inject.internal.asm.Type r2, r3;
        com.mycila.inject.internal.asm.Type[] r4;

        r0 := @this: com.mycila.inject.internal.cglib.core.ClassEmitter$1;

        r1 := @parameter0: com.mycila.inject.internal.cglib.core.ClassEmitter;

        r2 := @parameter1: com.mycila.inject.internal.asm.Type;

        r3 := @parameter2: com.mycila.inject.internal.asm.Type;

        r4 := @parameter3: com.mycila.inject.internal.asm.Type[];

        i0 := @parameter4: int;

        specialinvoke r0.<com.mycila.inject.internal.cglib.core.ClassInfo: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.core.ClassEmitter$1: com.mycila.inject.internal.cglib.core.ClassEmitter this$0> = r1;

        r0.<com.mycila.inject.internal.cglib.core.ClassEmitter$1: com.mycila.inject.internal.asm.Type val$classType> = r2;

        r0.<com.mycila.inject.internal.cglib.core.ClassEmitter$1: com.mycila.inject.internal.asm.Type val$superType> = r3;

        r0.<com.mycila.inject.internal.cglib.core.ClassEmitter$1: com.mycila.inject.internal.asm.Type[] val$interfaces> = r4;

        r0.<com.mycila.inject.internal.cglib.core.ClassEmitter$1: int val$access> = i0;

        return;
    }

    public com.mycila.inject.internal.asm.Type getType()
    {
        com.mycila.inject.internal.asm.Type $r1;
        com.mycila.inject.internal.cglib.core.ClassEmitter$1 r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.ClassEmitter$1;

        $r1 = r0.<com.mycila.inject.internal.cglib.core.ClassEmitter$1: com.mycila.inject.internal.asm.Type val$classType>;

        return $r1;
    }

    public com.mycila.inject.internal.asm.Type getSuperType()
    {
        com.mycila.inject.internal.asm.Type $r1, $r2;
        com.mycila.inject.internal.cglib.core.ClassEmitter$1 r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.ClassEmitter$1;

        $r1 = r0.<com.mycila.inject.internal.cglib.core.ClassEmitter$1: com.mycila.inject.internal.asm.Type val$superType>;

        if $r1 == null goto label1;

        $r2 = r0.<com.mycila.inject.internal.cglib.core.ClassEmitter$1: com.mycila.inject.internal.asm.Type val$superType>;

        goto label2;

     label1:
        $r2 = <com.mycila.inject.internal.cglib.core.Constants: com.mycila.inject.internal.asm.Type TYPE_OBJECT>;

     label2:
        return $r2;
    }

    public com.mycila.inject.internal.asm.Type[] getInterfaces()
    {
        com.mycila.inject.internal.asm.Type[] $r1;
        com.mycila.inject.internal.cglib.core.ClassEmitter$1 r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.ClassEmitter$1;

        $r1 = r0.<com.mycila.inject.internal.cglib.core.ClassEmitter$1: com.mycila.inject.internal.asm.Type[] val$interfaces>;

        return $r1;
    }

    public int getModifiers()
    {
        int $i0;
        com.mycila.inject.internal.cglib.core.ClassEmitter$1 r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.ClassEmitter$1;

        $i0 = r0.<com.mycila.inject.internal.cglib.core.ClassEmitter$1: int val$access>;

        return $i0;
    }
}
