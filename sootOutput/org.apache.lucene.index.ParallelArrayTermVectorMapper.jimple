class org.apache.lucene.index.ParallelArrayTermVectorMapper extends org.apache.lucene.index.TermVectorMapper
{
    private java.lang.String[] terms;
    private int[] termFreqs;
    private int[][] positions;
    private org.apache.lucene.index.TermVectorOffsetInfo[][] offsets;
    private int currentPosition;
    private boolean storingOffsets;
    private boolean storingPositions;
    private java.lang.String field;

    void <init>()
    {
        org.apache.lucene.index.ParallelArrayTermVectorMapper r0;

        r0 := @this: org.apache.lucene.index.ParallelArrayTermVectorMapper;

        specialinvoke r0.<org.apache.lucene.index.TermVectorMapper: void <init>()>();

        return;
    }

    public void setExpectations(java.lang.String, int, boolean, boolean)
    {
        int[][] $r5;
        java.lang.String[] $r2;
        int[] $r3;
        org.apache.lucene.index.TermVectorOffsetInfo[][] $r4;
        int i0;
        java.lang.String r1;
        org.apache.lucene.index.ParallelArrayTermVectorMapper r0;
        boolean z0, z1;

        r0 := @this: org.apache.lucene.index.ParallelArrayTermVectorMapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: java.lang.String field> = r1;

        $r2 = newarray (java.lang.String)[i0];

        r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: java.lang.String[] terms> = $r2;

        $r3 = newarray (int)[i0];

        r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: int[] termFreqs> = $r3;

        r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: boolean storingOffsets> = z0;

        r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: boolean storingPositions> = z1;

        if z1 == 0 goto label1;

        $r5 = newarray (int[])[i0];

        r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: int[][] positions> = $r5;

     label1:
        if z0 == 0 goto label2;

        $r4 = newarray (org.apache.lucene.index.TermVectorOffsetInfo[])[i0];

        r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: org.apache.lucene.index.TermVectorOffsetInfo[][] offsets> = $r4;

     label2:
        return;
    }

    public void map(java.lang.String, int, org.apache.lucene.index.TermVectorOffsetInfo[], int[])
    {
        int[][] $r5;
        java.lang.String[] $r2;
        int[] $r3, r4;
        org.apache.lucene.index.TermVectorOffsetInfo[][] $r7;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String r1;
        boolean $z0, $z1;
        org.apache.lucene.index.TermVectorOffsetInfo[] r6;
        org.apache.lucene.index.ParallelArrayTermVectorMapper r0;

        r0 := @this: org.apache.lucene.index.ParallelArrayTermVectorMapper;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        r6 := @parameter2: org.apache.lucene.index.TermVectorOffsetInfo[];

        r4 := @parameter3: int[];

        $r2 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: java.lang.String[] terms>;

        $i0 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: int currentPosition>;

        $r2[$i0] = r1;

        $r3 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: int[] termFreqs>;

        $i2 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: int currentPosition>;

        $r3[$i2] = i1;

        $z0 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: boolean storingOffsets>;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: org.apache.lucene.index.TermVectorOffsetInfo[][] offsets>;

        $i6 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: int currentPosition>;

        $r7[$i6] = r6;

     label1:
        $z1 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: boolean storingPositions>;

        if $z1 == 0 goto label2;

        $r5 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: int[][] positions>;

        $i5 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: int currentPosition>;

        $r5[$i5] = r4;

     label2:
        $i3 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: int currentPosition>;

        $i4 = $i3 + 1;

        r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: int currentPosition> = $i4;

        return;
    }

    public org.apache.lucene.index.TermFreqVector materializeVector()
    {
        int[][] $r5;
        org.apache.lucene.index.SegmentTermVector $r9, r13;
        java.lang.String[] $r2, $r7, $r11;
        int[] $r6, $r10;
        org.apache.lucene.index.TermVectorOffsetInfo[][] $r4;
        java.lang.String $r1, $r8, $r12;
        boolean $z0, $z1;
        org.apache.lucene.index.SegmentTermPositionVector $r3;
        org.apache.lucene.index.ParallelArrayTermVectorMapper r0;

        r0 := @this: org.apache.lucene.index.ParallelArrayTermVectorMapper;

        r13 = null;

        $r1 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: java.lang.String field>;

        if $r1 == null goto label3;

        $r2 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: java.lang.String[] terms>;

        if $r2 == null goto label3;

        $z0 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: boolean storingPositions>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: boolean storingOffsets>;

        if $z1 == 0 goto label2;

     label1:
        $r3 = new org.apache.lucene.index.SegmentTermPositionVector;

        $r8 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: java.lang.String field>;

        $r7 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: java.lang.String[] terms>;

        $r6 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: int[] termFreqs>;

        $r5 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: int[][] positions>;

        $r4 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: org.apache.lucene.index.TermVectorOffsetInfo[][] offsets>;

        specialinvoke $r3.<org.apache.lucene.index.SegmentTermPositionVector: void <init>(java.lang.String,java.lang.String[],int[],int[][],org.apache.lucene.index.TermVectorOffsetInfo[][])>($r8, $r7, $r6, $r5, $r4);

        r13 = $r3;

        goto label3;

     label2:
        $r9 = new org.apache.lucene.index.SegmentTermVector;

        $r12 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: java.lang.String field>;

        $r11 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: java.lang.String[] terms>;

        $r10 = r0.<org.apache.lucene.index.ParallelArrayTermVectorMapper: int[] termFreqs>;

        specialinvoke $r9.<org.apache.lucene.index.SegmentTermVector: void <init>(java.lang.String,java.lang.String[],int[])>($r12, $r11, $r10);

        r13 = $r9;

     label3:
        return r13;
    }
}
