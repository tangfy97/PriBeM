public class org.apache.batik.css.engine.value.svg12.MarginShorthandManager extends org.apache.batik.css.engine.value.AbstractValueFactory implements org.apache.batik.css.engine.value.ShorthandManager
{

    public void <init>()
    {
        org.apache.batik.css.engine.value.svg12.MarginShorthandManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg12.MarginShorthandManager;

        specialinvoke r0.<org.apache.batik.css.engine.value.AbstractValueFactory: void <init>()>();

        return;
    }

    public java.lang.String getPropertyName()
    {
        org.apache.batik.css.engine.value.svg12.MarginShorthandManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg12.MarginShorthandManager;

        return "margin";
    }

    public boolean isAnimatableProperty()
    {
        org.apache.batik.css.engine.value.svg12.MarginShorthandManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg12.MarginShorthandManager;

        return 1;
    }

    public boolean isAdditiveProperty()
    {
        org.apache.batik.css.engine.value.svg12.MarginShorthandManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg12.MarginShorthandManager;

        return 0;
    }

    public void setValues(org.apache.batik.css.engine.CSSEngine, org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler, org.w3c.css.sac.LexicalUnit, boolean) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.CSSEngine r8;
        org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler r4;
        short $s0, $s2;
        org.w3c.dom.DOMException $r2;
        int $i1, i3, $i4;
        org.w3c.css.sac.LexicalUnit $r3, $r5, $r6, $r7, r9, $r10, $r11, $r12, $r13;
        boolean z0;
        org.w3c.css.sac.LexicalUnit[] r0;
        org.apache.batik.css.engine.value.svg12.MarginShorthandManager r1;

        r1 := @this: org.apache.batik.css.engine.value.svg12.MarginShorthandManager;

        r8 := @parameter0: org.apache.batik.css.engine.CSSEngine;

        r4 := @parameter1: org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler;

        r9 := @parameter2: org.w3c.css.sac.LexicalUnit;

        z0 := @parameter3: boolean;

        $s0 = interfaceinvoke r9.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i4 = (int) $s0;

        if $i4 != 12 goto label1;

        return;

     label1:
        r0 = newarray (org.w3c.css.sac.LexicalUnit)[4];

        i3 = 0;

        goto label4;

     label2:
        if i3 != 4 goto label3;

        $s2 = interfaceinvoke r9.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $r2 = virtualinvoke r1.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidLexicalUnitDOMException(short)>($s2);

        throw $r2;

     label3:
        $i1 = i3;

        i3 = i3 + 1;

        r0[$i1] = r9;

        r9 = interfaceinvoke r9.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

     label4:
        if r9 != null goto label2;

        tableswitch(i3)
        {
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label7;
            default: goto label8;
        };

     label5:
        $r7 = r0[0];

        r0[1] = $r7;

        r0[2] = $r7;

        r0[3] = $r7;

        goto label8;

     label6:
        $r5 = r0[0];

        r0[2] = $r5;

        $r6 = r0[1];

        r0[3] = $r6;

        goto label8;

     label7:
        $r3 = r0[1];

        r0[3] = $r3;

        goto label8;

     label8:
        $r10 = r0[0];

        interfaceinvoke r4.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>("margin-top", $r10, z0);

        $r11 = r0[1];

        interfaceinvoke r4.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>("margin-right", $r11, z0);

        $r12 = r0[2];

        interfaceinvoke r4.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>("margin-bottom", $r12, z0);

        $r13 = r0[3];

        interfaceinvoke r4.<org.apache.batik.css.engine.value.ShorthandManager$PropertyHandler: void property(java.lang.String,org.w3c.css.sac.LexicalUnit,boolean)>("margin-left", $r13, z0);

        return;
    }
}
