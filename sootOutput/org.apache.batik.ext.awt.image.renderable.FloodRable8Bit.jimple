public class org.apache.batik.ext.awt.image.renderable.FloodRable8Bit extends org.apache.batik.ext.awt.image.renderable.AbstractRable implements org.apache.batik.ext.awt.image.renderable.FloodRable
{
    java.awt.Paint floodPaint;
    java.awt.geom.Rectangle2D floodRegion;

    public void <init>(java.awt.geom.Rectangle2D, java.awt.Paint)
    {
        org.apache.batik.ext.awt.image.renderable.FloodRable8Bit r0;
        java.awt.Paint r1;
        java.awt.geom.Rectangle2D r2;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.FloodRable8Bit;

        r2 := @parameter0: java.awt.geom.Rectangle2D;

        r1 := @parameter1: java.awt.Paint;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void <init>()>();

        virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.FloodRable8Bit: void setFloodPaint(java.awt.Paint)>(r1);

        virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.FloodRable8Bit: void setFloodRegion(java.awt.geom.Rectangle2D)>(r2);

        return;
    }

    public void setFloodPaint(java.awt.Paint)
    {
        java.awt.Color $r2;
        org.apache.batik.ext.awt.image.renderable.FloodRable8Bit r0;
        java.awt.Paint r1;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.FloodRable8Bit;

        r1 := @parameter0: java.awt.Paint;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void touch()>();

        if r1 != null goto label1;

        $r2 = new java.awt.Color;

        specialinvoke $r2.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r0.<org.apache.batik.ext.awt.image.renderable.FloodRable8Bit: java.awt.Paint floodPaint> = $r2;

        goto label2;

     label1:
        r0.<org.apache.batik.ext.awt.image.renderable.FloodRable8Bit: java.awt.Paint floodPaint> = r1;

     label2:
        return;
    }

    public java.awt.Paint getFloodPaint()
    {
        org.apache.batik.ext.awt.image.renderable.FloodRable8Bit r0;
        java.awt.Paint $r1;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.FloodRable8Bit;

        $r1 = r0.<org.apache.batik.ext.awt.image.renderable.FloodRable8Bit: java.awt.Paint floodPaint>;

        return $r1;
    }

    public java.awt.geom.Rectangle2D getBounds2D()
    {
        java.awt.geom.Rectangle2D $r1, $r3;
        org.apache.batik.ext.awt.image.renderable.FloodRable8Bit r0;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.FloodRable8Bit;

        $r1 = r0.<org.apache.batik.ext.awt.image.renderable.FloodRable8Bit: java.awt.geom.Rectangle2D floodRegion>;

        $r2 = virtualinvoke $r1.<java.awt.geom.RectangularShape: java.lang.Object clone()>();

        $r3 = (java.awt.geom.Rectangle2D) $r2;

        return $r3;
    }

    public java.awt.geom.Rectangle2D getFloodRegion()
    {
        java.awt.geom.Rectangle2D $r1, $r3;
        org.apache.batik.ext.awt.image.renderable.FloodRable8Bit r0;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.FloodRable8Bit;

        $r1 = r0.<org.apache.batik.ext.awt.image.renderable.FloodRable8Bit: java.awt.geom.Rectangle2D floodRegion>;

        $r2 = virtualinvoke $r1.<java.awt.geom.RectangularShape: java.lang.Object clone()>();

        $r3 = (java.awt.geom.Rectangle2D) $r2;

        return $r3;
    }

    public void setFloodRegion(java.awt.geom.Rectangle2D)
    {
        org.apache.batik.ext.awt.image.renderable.FloodRable8Bit r1;
        java.lang.IllegalArgumentException $r2;
        java.awt.geom.Rectangle2D r0;

        r1 := @this: org.apache.batik.ext.awt.image.renderable.FloodRable8Bit;

        r0 := @parameter0: java.awt.geom.Rectangle2D;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        virtualinvoke r1.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void touch()>();

        r1.<org.apache.batik.ext.awt.image.renderable.FloodRable8Bit: java.awt.geom.Rectangle2D floodRegion> = r0;

        return;
    }

    public java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)
    {
        java.awt.Rectangle $r7;
        org.apache.batik.ext.awt.image.rendered.PadRed $r10;
        java.awt.geom.Rectangle2D $r3, $r5, r14;
        org.apache.batik.ext.awt.image.PadMode $r11;
        int $i0, $i1;
        org.apache.batik.ext.awt.image.renderable.FloodRable8Bit r2;
        boolean $z0;
        java.awt.Shape $r4, $r6;
        org.apache.batik.ext.awt.image.rendered.FloodRed $r8;
        java.awt.geom.AffineTransform $r1, $r12, r13;
        java.awt.image.renderable.RenderContext r0;
        java.awt.Paint $r9;

        r2 := @this: org.apache.batik.ext.awt.image.renderable.FloodRable8Bit;

        r0 := @parameter0: java.awt.image.renderable.RenderContext;

        $r1 = virtualinvoke r0.<java.awt.image.renderable.RenderContext: java.awt.geom.AffineTransform getTransform()>();

        r13 = $r1;

        if $r1 != null goto label1;

        $r12 = new java.awt.geom.AffineTransform;

        specialinvoke $r12.<java.awt.geom.AffineTransform: void <init>()>();

        r13 = $r12;

     label1:
        $r3 = virtualinvoke r2.<org.apache.batik.ext.awt.image.renderable.FloodRable8Bit: java.awt.geom.Rectangle2D getBounds2D()>();

        $r4 = virtualinvoke r0.<java.awt.image.renderable.RenderContext: java.awt.Shape getAreaOfInterest()>();

        if $r4 != null goto label2;

        r14 = $r3;

        goto label4;

     label2:
        $r5 = interfaceinvoke $r4.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        r14 = $r5;

        $z0 = virtualinvoke $r3.<java.awt.geom.RectangularShape: boolean intersects(java.awt.geom.Rectangle2D)>($r5);

        if $z0 != 0 goto label3;

        return null;

     label3:
        staticinvoke <java.awt.geom.Rectangle2D: void intersect(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>($r3, $r5, $r5);

     label4:
        $r6 = virtualinvoke r13.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r14);

        $r7 = interfaceinvoke $r6.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $i0 = $r7.<java.awt.Rectangle: int width>;

        if $i0 <= 0 goto label5;

        $i1 = $r7.<java.awt.Rectangle: int height>;

        if $i1 > 0 goto label6;

     label5:
        return null;

     label6:
        $r8 = new org.apache.batik.ext.awt.image.rendered.FloodRed;

        $r9 = virtualinvoke r2.<org.apache.batik.ext.awt.image.renderable.FloodRable8Bit: java.awt.Paint getFloodPaint()>();

        specialinvoke $r8.<org.apache.batik.ext.awt.image.rendered.FloodRed: void <init>(java.awt.Rectangle,java.awt.Paint)>($r7, $r9);

        $r10 = new org.apache.batik.ext.awt.image.rendered.PadRed;

        $r11 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r10.<org.apache.batik.ext.awt.image.rendered.PadRed: void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed,java.awt.Rectangle,org.apache.batik.ext.awt.image.PadMode,java.awt.RenderingHints)>($r8, $r7, $r11, null);

        return $r10;
    }
}
