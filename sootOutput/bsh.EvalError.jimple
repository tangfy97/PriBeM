public class bsh.EvalError extends java.lang.Exception
{
    bsh.SimpleNode node;
    java.lang.String message;
    bsh.CallStack callstack;

    public void <init>(java.lang.String, bsh.SimpleNode, bsh.CallStack)
    {
        bsh.EvalError r0;
        bsh.SimpleNode r2;
        java.lang.String r1;
        bsh.CallStack r3, $r4;

        r0 := @this: bsh.EvalError;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: bsh.SimpleNode;

        r3 := @parameter2: bsh.CallStack;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        virtualinvoke r0.<bsh.EvalError: void setMessage(java.lang.String)>(r1);

        r0.<bsh.EvalError: bsh.SimpleNode node> = r2;

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.<bsh.CallStack: bsh.CallStack copy()>();

        r0.<bsh.EvalError: bsh.CallStack callstack> = $r4;

     label1:
        return;
    }

    public java.lang.String toString()
    {
        bsh.SimpleNode $r1, $r15, $r18, $r22;
        bsh.CallStack $r2;
        java.lang.StringBuffer $r3, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r20, $r21, $r24;
        int $i0;
        java.lang.String $r4, $r7, $r11, $r19, $r23, r25;
        bsh.EvalError r0;

        r0 := @this: bsh.EvalError;

        $r1 = r0.<bsh.EvalError: bsh.SimpleNode node>;

        if $r1 == null goto label1;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : at Line: ");

        $r15 = r0.<bsh.EvalError: bsh.SimpleNode node>;

        $i0 = virtualinvoke $r15.<bsh.SimpleNode: int getLineNumber()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : in file: ");

        $r18 = r0.<bsh.EvalError: bsh.SimpleNode node>;

        $r19 = virtualinvoke $r18.<bsh.SimpleNode: java.lang.String getSourceFile()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : ");

        $r22 = r0.<bsh.EvalError: bsh.SimpleNode node>;

        $r23 = virtualinvoke $r22.<bsh.SimpleNode: java.lang.String getText()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label2;

     label1:
        r25 = ": <at unknown location>";

     label2:
        $r2 = r0.<bsh.EvalError: bsh.CallStack callstack>;

        if $r2 == null goto label3;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r25);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r11 = virtualinvoke r0.<bsh.EvalError: java.lang.String getScriptStackTrace()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        r25 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r0.<bsh.EvalError: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r25);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public void reThrow(java.lang.String) throws bsh.EvalError
    {
        bsh.EvalError r0;
        java.lang.String r1;

        r0 := @this: bsh.EvalError;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<bsh.EvalError: void prependMessage(java.lang.String)>(r1);

        throw r0;
    }

    bsh.SimpleNode getNode()
    {
        bsh.EvalError r0;
        bsh.SimpleNode $r1;

        r0 := @this: bsh.EvalError;

        $r1 = r0.<bsh.EvalError: bsh.SimpleNode node>;

        return $r1;
    }

    void setNode(bsh.SimpleNode)
    {
        bsh.EvalError r0;
        bsh.SimpleNode r1;

        r0 := @this: bsh.EvalError;

        r1 := @parameter0: bsh.SimpleNode;

        r0.<bsh.EvalError: bsh.SimpleNode node> = r1;

        return;
    }

    public java.lang.String getErrorText()
    {
        bsh.EvalError r0;
        bsh.SimpleNode $r1, $r2;
        java.lang.String $r3;

        r0 := @this: bsh.EvalError;

        $r1 = r0.<bsh.EvalError: bsh.SimpleNode node>;

        if $r1 == null goto label1;

        $r2 = r0.<bsh.EvalError: bsh.SimpleNode node>;

        $r3 = virtualinvoke $r2.<bsh.SimpleNode: java.lang.String getText()>();

        return $r3;

     label1:
        return "<unknown error>";
    }

    public int getErrorLineNumber()
    {
        bsh.EvalError r0;
        int $i0, $i2;
        bsh.SimpleNode $r1, $r2;

        r0 := @this: bsh.EvalError;

        $r1 = r0.<bsh.EvalError: bsh.SimpleNode node>;

        if $r1 == null goto label1;

        $r2 = r0.<bsh.EvalError: bsh.SimpleNode node>;

        $i0 = virtualinvoke $r2.<bsh.SimpleNode: int getLineNumber()>();

        return $i0;

     label1:
        $i2 = (int) -1;

        return $i2;
    }

    public java.lang.String getErrorSourceFile()
    {
        bsh.EvalError r0;
        bsh.SimpleNode $r1, $r2;
        java.lang.String $r3;

        r0 := @this: bsh.EvalError;

        $r1 = r0.<bsh.EvalError: bsh.SimpleNode node>;

        if $r1 == null goto label1;

        $r2 = r0.<bsh.EvalError: bsh.SimpleNode node>;

        $r3 = virtualinvoke $r2.<bsh.SimpleNode: java.lang.String getSourceFile()>();

        return $r3;

     label1:
        return "<unknown file>";
    }

    public java.lang.String getScriptStackTrace()
    {
        bsh.NameSpace $r4;
        bsh.SimpleNode $r5;
        bsh.CallStack $r1, $r2, $r3;
        java.lang.StringBuffer $r6, $r7, $r8, $r10, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r21;
        int $i0, $i1;
        java.lang.String $r9, $r11, $r17, $r20, r22;
        boolean $z0;
        bsh.EvalError r0;

        r0 := @this: bsh.EvalError;

        $r1 = r0.<bsh.EvalError: bsh.CallStack callstack>;

        if $r1 != null goto label1;

        return "<Unknown>";

     label1:
        r22 = "";

        $r2 = r0.<bsh.EvalError: bsh.CallStack callstack>;

        $r3 = virtualinvoke $r2.<bsh.CallStack: bsh.CallStack copy()>();

        goto label3;

     label2:
        $r4 = virtualinvoke $r3.<bsh.CallStack: bsh.NameSpace pop()>();

        $r5 = virtualinvoke $r4.<bsh.NameSpace: bsh.SimpleNode getNode()>();

        $z0 = $r4.<bsh.NameSpace: boolean isMethod>;

        if $z0 == 0 goto label3;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r22);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nCalled from method: ");

        $r9 = virtualinvoke $r4.<bsh.NameSpace: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        r22 = $r11;

        if $r5 == null goto label3;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : at Line: ");

        $i0 = virtualinvoke $r5.<bsh.SimpleNode: int getLineNumber()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : in file: ");

        $r17 = virtualinvoke $r5.<bsh.SimpleNode: java.lang.String getSourceFile()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : ");

        $r20 = virtualinvoke $r5.<bsh.SimpleNode: java.lang.String getText()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $i1 = virtualinvoke $r3.<bsh.CallStack: int depth()>();

        if $i1 > 0 goto label2;

        return r22;
    }

    public java.lang.String getMessage()
    {
        bsh.EvalError r0;
        java.lang.String $r1;

        r0 := @this: bsh.EvalError;

        $r1 = r0.<bsh.EvalError: java.lang.String message>;

        return $r1;
    }

    public void setMessage(java.lang.String)
    {
        bsh.EvalError r0;
        java.lang.String r1;

        r0 := @this: bsh.EvalError;

        r1 := @parameter0: java.lang.String;

        r0.<bsh.EvalError: java.lang.String message> = r1;

        return;
    }

    protected void prependMessage(java.lang.String)
    {
        bsh.EvalError r1;
        java.lang.StringBuffer $r3, $r4, $r5, $r7;
        java.lang.String r0, $r2, $r6, $r8;

        r1 := @this: bsh.EvalError;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<bsh.EvalError: java.lang.String message>;

        if $r2 != null goto label2;

        r1.<bsh.EvalError: java.lang.String message> = r0;

        goto label3;

     label2:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : ");

        $r6 = r1.<bsh.EvalError: java.lang.String message>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<bsh.EvalError: java.lang.String message> = $r8;

     label3:
        return;
    }
}
