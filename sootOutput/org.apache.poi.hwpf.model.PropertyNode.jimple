public abstract class org.apache.poi.hwpf.model.PropertyNode extends java.lang.Object implements java.lang.Comparable, java.lang.Cloneable
{
    private static final org.apache.poi.util.POILogger _logger;
    protected java.lang.Object _buf;
    private int _cpStart;
    private int _cpEnd;

    protected void <init>(int, int, java.lang.Object)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r8, $r14;
        org.apache.poi.hwpf.model.PropertyNode r0;
        org.apache.poi.util.POILogger $r3, $r10;
        java.lang.Object r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r9, $r11, $r12, $r13;

        r0 := @this: org.apache.poi.hwpf.model.PropertyNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpStart> = i0;

        r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpEnd> = i1;

        r0.<org.apache.poi.hwpf.model.PropertyNode: java.lang.Object _buf> = r1;

        $i2 = r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpStart>;

        if $i2 >= 0 goto label1;

        $r10 = <org.apache.poi.hwpf.model.PropertyNode: org.apache.poi.util.POILogger _logger>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A property claimed to start before zero, at ");

        $i7 = r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpStart>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("! Resetting it to zero, and hoping for the best");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r14);

        r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpStart> = 0;

     label1:
        $i4 = r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpEnd>;

        $i3 = r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpStart>;

        if $i4 >= $i3 goto label2;

        $r3 = <org.apache.poi.hwpf.model.PropertyNode: org.apache.poi.util.POILogger _logger>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A property claimed to end (");

        $i5 = r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpEnd>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") before start! ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resetting end to start, and hoping for the best");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r8);

        $i6 = r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpStart>;

        r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpEnd> = $i6;

     label2:
        return;
    }

    public int getStart()
    {
        int $i0;
        org.apache.poi.hwpf.model.PropertyNode r0;

        r0 := @this: org.apache.poi.hwpf.model.PropertyNode;

        $i0 = r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpStart>;

        return $i0;
    }

    public void setStart(int)
    {
        int i0;
        org.apache.poi.hwpf.model.PropertyNode r0;

        r0 := @this: org.apache.poi.hwpf.model.PropertyNode;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpStart> = i0;

        return;
    }

    public int getEnd()
    {
        int $i0;
        org.apache.poi.hwpf.model.PropertyNode r0;

        r0 := @this: org.apache.poi.hwpf.model.PropertyNode;

        $i0 = r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpEnd>;

        return $i0;
    }

    public void setEnd(int)
    {
        int i0;
        org.apache.poi.hwpf.model.PropertyNode r0;

        r0 := @this: org.apache.poi.hwpf.model.PropertyNode;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpEnd> = i0;

        return;
    }

    public void adjustForDelete(int, int)
    {
        org.apache.poi.hwpf.model.PropertyNode r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;

        r0 := @this: org.apache.poi.hwpf.model.PropertyNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 + i1;

        $i3 = r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpEnd>;

        if $i3 <= i0 goto label4;

        $i4 = r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpStart>;

        if $i4 >= i2 goto label3;

        $i9 = r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpEnd>;

        if i2 < $i9 goto label1;

        $i13 = i0;

        goto label2;

     label1:
        $i10 = r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpEnd>;

        $i13 = $i10 - i1;

     label2:
        r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpEnd> = $i13;

        $i11 = r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpStart>;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i11);

        r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpStart> = $i12;

        goto label4;

     label3:
        $i5 = r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpEnd>;

        $i6 = $i5 - i1;

        r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpEnd> = $i6;

        $i7 = r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpStart>;

        $i8 = $i7 - i1;

        r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpStart> = $i8;

     label4:
        return;
    }

    protected boolean limitsAreEqual(java.lang.Object)
    {
        org.apache.poi.hwpf.model.PropertyNode $r1, r2, $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r0;
        boolean $z0;

        r2 := @this: org.apache.poi.hwpf.model.PropertyNode;

        r0 := @parameter0: java.lang.Object;

        $r1 = (org.apache.poi.hwpf.model.PropertyNode) r0;

        $i0 = virtualinvoke $r1.<org.apache.poi.hwpf.model.PropertyNode: int getStart()>();

        $i1 = r2.<org.apache.poi.hwpf.model.PropertyNode: int _cpStart>;

        if $i0 != $i1 goto label1;

        $r3 = (org.apache.poi.hwpf.model.PropertyNode) r0;

        $i2 = virtualinvoke $r3.<org.apache.poi.hwpf.model.PropertyNode: int getEnd()>();

        $i3 = r2.<org.apache.poi.hwpf.model.PropertyNode: int _cpEnd>;

        if $i2 != $i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int hashCode()
    {
        org.apache.poi.hwpf.model.PropertyNode r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r1;

        r0 := @this: org.apache.poi.hwpf.model.PropertyNode;

        $i0 = r0.<org.apache.poi.hwpf.model.PropertyNode: int _cpStart>;

        $i1 = $i0 * 31;

        $r1 = r0.<org.apache.poi.hwpf.model.PropertyNode: java.lang.Object _buf>;

        $i2 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i3 = $i1 + $i2;

        return $i3;
    }

    public boolean equals(java.lang.Object)
    {
        byte[] $r6, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.poi.hwpf.model.PropertyNode r1, $r2;
        java.lang.Object r0, r3, $r4, $r5, $r7;

        r1 := @this: org.apache.poi.hwpf.model.PropertyNode;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.poi.hwpf.model.PropertyNode;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r1.<org.apache.poi.hwpf.model.PropertyNode: boolean limitsAreEqual(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        $r2 = (org.apache.poi.hwpf.model.PropertyNode) r0;

        r3 = $r2.<org.apache.poi.hwpf.model.PropertyNode: java.lang.Object _buf>;

        $z2 = r3 instanceof byte[];

        if $z2 == 0 goto label2;

        $r5 = r1.<org.apache.poi.hwpf.model.PropertyNode: java.lang.Object _buf>;

        $z4 = $r5 instanceof byte[];

        if $z4 == 0 goto label2;

        $r6 = (byte[]) r3;

        $r10 = (byte[]) $r6;

        $r7 = r1.<org.apache.poi.hwpf.model.PropertyNode: java.lang.Object _buf>;

        $r8 = (byte[]) $r7;

        $r9 = (byte[]) $r8;

        $z5 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r10, $r9);

        return $z5;

     label2:
        $r4 = r1.<org.apache.poi.hwpf.model.PropertyNode: java.lang.Object _buf>;

        $z3 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        return $z3;

     label3:
        return 0;
    }

    public org.apache.poi.hwpf.model.PropertyNode clone() throws java.lang.CloneNotSupportedException
    {
        java.lang.Object $r1;
        org.apache.poi.hwpf.model.PropertyNode r0, $r2;

        r0 := @this: org.apache.poi.hwpf.model.PropertyNode;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.poi.hwpf.model.PropertyNode) $r1;

        return $r2;
    }

    public int compareTo(org.apache.poi.hwpf.model.PropertyNode)
    {
        org.apache.poi.hwpf.model.PropertyNode r0, r1;
        int $i0, $i1, $i2, $i4;

        r1 := @this: org.apache.poi.hwpf.model.PropertyNode;

        r0 := @parameter0: org.apache.poi.hwpf.model.PropertyNode;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.model.PropertyNode: int getEnd()>();

        $i1 = r1.<org.apache.poi.hwpf.model.PropertyNode: int _cpEnd>;

        if $i1 != $i0 goto label1;

        return 0;

     label1:
        $i2 = r1.<org.apache.poi.hwpf.model.PropertyNode: int _cpEnd>;

        if $i2 >= $i0 goto label2;

        $i4 = (int) -1;

        return $i4;

     label2:
        return 1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.poi.hwpf.model.PropertyNode r0, $r1;

        r0 := @this: org.apache.poi.hwpf.model.PropertyNode;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.model.PropertyNode: org.apache.poi.hwpf.model.PropertyNode clone()>();

        return $r1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.apache.poi.hwpf.model.PropertyNode r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: org.apache.poi.hwpf.model.PropertyNode;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.poi.hwpf.model.PropertyNode) r1;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.model.PropertyNode: int compareTo(org.apache.poi.hwpf.model.PropertyNode)>($r2);

        return $i0;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hwpf/model/PropertyNode;");

        <org.apache.poi.hwpf.model.PropertyNode: org.apache.poi.util.POILogger _logger> = $r0;

        return;
    }
}
