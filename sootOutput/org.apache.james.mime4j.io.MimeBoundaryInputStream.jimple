public class org.apache.james.mime4j.io.MimeBoundaryInputStream extends org.apache.james.mime4j.io.LineReaderInputStream
{
    private final byte[] boundary;
    private final boolean strict;
    private boolean eof;
    private int limit;
    private boolean atBoundary;
    private int boundaryLen;
    private boolean lastPart;
    private boolean completed;
    private org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer;
    private int initialLength;

    public void <init>(org.apache.james.mime4j.io.BufferedLineReaderInputStream, java.lang.String, boolean) throws java.io.IOException
    {
        byte[] $r3, $r4, $r5, $r6;
        byte b4;
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;
        int $i0, $i1, $i2, $i5, i6, i7, $i8, $i10, $i12;
        java.lang.String r2;
        boolean z0;
        char $c3;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r1;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        r1 := @parameter0: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.james.mime4j.io.LineReaderInputStream: void <init>(java.io.InputStream)>(r1);

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        i6 = 2 * $i0;

        if i6 >= 4096 goto label1;

        i6 = 4096;

     label1:
        virtualinvoke r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: void ensureCapacity(int)>(i6);

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer> = r1;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean eof> = 0;

        $i10 = (int) -1;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int limit> = $i10;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean atBoundary> = 0;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int boundaryLen> = 0;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean lastPart> = 0;

        $i12 = (int) -1;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int initialLength> = $i12;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean completed> = 0;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean strict> = z0;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $i2 = $i1 + 2;

        $r3 = newarray (byte)[$i2];

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: byte[] boundary> = $r3;

        $r4 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: byte[] boundary>;

        $r4[0] = 45;

        $r5 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: byte[] boundary>;

        $r5[1] = 45;

        i7 = 0;

     label2:
        $i8 = virtualinvoke r2.<java.lang.String: int length()>();

        if i7 >= $i8 goto label3;

        $c3 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i7);

        b4 = (byte) $c3;

        $r6 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: byte[] boundary>;

        $i5 = i7 + 2;

        $r6[$i5] = b4;

        i7 = i7 + 1;

        goto label2;

     label3:
        specialinvoke r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int fillBuffer()>();

        return;
    }

    public void <init>(org.apache.james.mime4j.io.BufferedLineReaderInputStream, java.lang.String) throws java.io.IOException
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream r1;
        java.lang.String r2;
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        r1 := @parameter0: org.apache.james.mime4j.io.BufferedLineReaderInputStream;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: void <init>(org.apache.james.mime4j.io.BufferedLineReaderInputStream,java.lang.String,boolean)>(r1, r2, 0);

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        return;
    }

    public boolean markSupported()
    {
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        return 0;
    }

    public boolean readAllowed() throws java.io.IOException
    {
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        $z0 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean completed>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = specialinvoke r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean endOfStream()>();

        if $z1 == 0 goto label2;

        $z2 = specialinvoke r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean hasData()>();

        if $z2 != 0 goto label2;

        specialinvoke r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: void skipBoundary()>();

        specialinvoke r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: void verifyEndOfStream()>();

        return 0;

     label2:
        return 1;
    }

    public int read() throws java.io.IOException
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream $r1;
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;
        int $i0, $i2;
        boolean $z0, $z1;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

     label1:
        $z0 = virtualinvoke r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean readAllowed()>();

        if $z0 != 0 goto label2;

        $i2 = (int) -1;

        return $i2;

     label2:
        $z1 = specialinvoke r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean hasData()>();

        if $z1 == 0 goto label3;

        $r1 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i0 = virtualinvoke $r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int read()>();

        return $i0;

     label3:
        specialinvoke r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int fillBuffer()>();

        goto label1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r2;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream $r1, $r3;
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i8;
        boolean $z0, $z1;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        r2 := @parameter0: byte[];

        i5 := @parameter1: int;

        i0 := @parameter2: int;

     label1:
        $z0 = virtualinvoke r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean readAllowed()>();

        if $z0 != 0 goto label2;

        $i8 = (int) -1;

        return $i8;

     label2:
        $z1 = specialinvoke r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean hasData()>();

        if $z1 == 0 goto label3;

        $i1 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int limit>;

        $r1 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i2 = virtualinvoke $r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

        $i3 = $i1 - $i2;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i3);

        $r3 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i6 = virtualinvoke $r3.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int read(byte[],int,int)>(r2, i5, $i4);

        return $i6;

     label3:
        specialinvoke r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int fillBuffer()>();

        goto label1;
    }

    public int readLine(org.apache.james.mime4j.util.ByteArrayBuffer) throws java.io.IOException
    {
        byte[] $r3;
        org.apache.james.mime4j.io.MimeBoundaryInputStream r1;
        boolean $z0, $z1, $z2, $z3, z4;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream $r2, $r4, $r5, $r6, $r8, $r9, $r10;
        org.apache.james.mime4j.util.ByteArrayBuffer r0;
        int $i0, $i1, $i2, i3, i4, $i5, $i6, $i7, $i8, $i9, i10, $i12, $i14, $i16, $i18, $i20;
        java.lang.IllegalArgumentException $r11;

        r1 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        r0 := @parameter0: org.apache.james.mime4j.util.ByteArrayBuffer;

        if r0 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Destination buffer may not be null");

        throw $r11;

     label1:
        $z0 = virtualinvoke r1.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean readAllowed()>();

        if $z0 != 0 goto label2;

        $i12 = (int) -1;

        return $i12;

     label2:
        i3 = 0;

        z4 = 0;

        i4 = 0;

     label3:
        if z4 != 0 goto label8;

        $z1 = specialinvoke r1.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean hasData()>();

        if $z1 != 0 goto label4;

        i4 = specialinvoke r1.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int fillBuffer()>();

        $z2 = specialinvoke r1.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean endOfStream()>();

        if $z2 == 0 goto label4;

        $z3 = specialinvoke r1.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean hasData()>();

        if $z3 != 0 goto label4;

        specialinvoke r1.<org.apache.james.mime4j.io.MimeBoundaryInputStream: void skipBoundary()>();

        specialinvoke r1.<org.apache.james.mime4j.io.MimeBoundaryInputStream: void verifyEndOfStream()>();

        $i14 = (int) -1;

        i4 = $i14;

        goto label8;

     label4:
        $i5 = r1.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int limit>;

        $r8 = r1.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i6 = virtualinvoke $r8.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

        $i7 = $i5 - $i6;

        $r9 = r1.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $r10 = r1.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i8 = virtualinvoke $r10.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

        $i9 = virtualinvoke $r9.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int indexOf(byte,int,int)>(10, $i8, $i7);

        $i16 = (int) -1;

        if $i9 == $i16 goto label5;

        z4 = 1;

        $i1 = $i9 + 1;

        $r6 = r1.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i2 = virtualinvoke $r6.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

        i10 = $i1 - $i2;

        goto label6;

     label5:
        i10 = $i7;

     label6:
        if i10 <= 0 goto label7;

        $r2 = r1.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: byte[] buf()>();

        $r4 = r1.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i0 = virtualinvoke $r4.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

        virtualinvoke r0.<org.apache.james.mime4j.util.ByteArrayBuffer: void append(byte[],int,int)>($r3, $i0, i10);

        $r5 = r1.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        virtualinvoke $r5.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int skip(int)>(i10);

        i3 = i3 + i10;

     label7:
        goto label3;

     label8:
        if i3 != 0 goto label9;

        $i18 = (int) -1;

        if i4 != $i18 goto label9;

        $i20 = (int) -1;

        return $i20;

     label9:
        return i3;
    }

    private void verifyEndOfStream() throws java.io.IOException
    {
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;
        org.apache.james.mime4j.MimeException $r2;
        org.apache.james.mime4j.MimeIOException $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        $z0 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean strict>;

        if $z0 == 0 goto label1;

        $z1 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean eof>;

        if $z1 == 0 goto label1;

        $z2 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean atBoundary>;

        if $z2 != 0 goto label1;

        $r1 = new org.apache.james.mime4j.MimeIOException;

        $r2 = new org.apache.james.mime4j.MimeException;

        specialinvoke $r2.<org.apache.james.mime4j.MimeException: void <init>(java.lang.String)>("Unexpected end of stream");

        specialinvoke $r1.<org.apache.james.mime4j.MimeIOException: void <init>(org.apache.james.mime4j.MimeException)>($r2);

        throw $r1;

     label1:
        return;
    }

    private boolean endOfStream()
    {
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        $z0 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean eof>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean atBoundary>;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private boolean hasData()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream $r1, $r2;
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        $i0 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int limit>;

        $r1 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i1 = virtualinvoke $r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

        if $i0 <= $i1 goto label1;

        $i2 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int limit>;

        $r2 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i3 = virtualinvoke $r2.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int limit()>();

        if $i2 > $i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private int fillBuffer() throws java.io.IOException
    {
        byte[] $r2, $r6, $r8, $r13;
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;
        boolean $z0, $z1, $z2, $z3;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream $r1, $r3, $r4, $r5, $r7, $r9, $r10, $r11, $r12, $r14;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, $i18, $i19, $i20, $i22, $i24, $i26, $i27, $i29;
        char c4;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        $z0 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean eof>;

        if $z0 == 0 goto label01;

        $i22 = (int) -1;

        return $i22;

     label01:
        $z1 = specialinvoke r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean hasData()>();

        if $z1 != 0 goto label02;

        $r10 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i15 = virtualinvoke $r10.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int fillBuffer()>();

        i16 = $i15;

        $i24 = (int) -1;

        if $i15 != $i24 goto label03;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean eof> = 1;

        goto label03;

     label02:
        i16 = 0;

     label03:
        $r11 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        i17 = virtualinvoke $r11.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

     label04:
        $r12 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $r13 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: byte[] boundary>;

        $r14 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i18 = virtualinvoke $r14.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int limit()>();

        $i19 = $i18 - i17;

        $i20 = virtualinvoke $r12.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int indexOf(byte[],int,int)>($r13, i17, $i19);

        $i26 = (int) -1;

        if $i20 != $i26 goto label05;

        goto label09;

     label05:
        $r1 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i0 = virtualinvoke $r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

        if $i20 == $i0 goto label06;

        $r9 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i11 = $i20 - 1;

        $i12 = virtualinvoke $r9.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int byteAt(int)>($i11);

        if $i12 != 10 goto label08;

     label06:
        $r2 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: byte[] boundary>;

        $i1 = lengthof $r2;

        $i13 = $i20 + $i1;

        $r3 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i2 = virtualinvoke $r3.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int limit()>();

        $i14 = $i2 - $i13;

        if $i14 > 0 goto label07;

        goto label09;

     label07:
        $r4 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i3 = virtualinvoke $r4.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int byteAt(int)>($i13);

        c4 = (char) $i3;

        $z2 = staticinvoke <org.apache.james.mime4j.util.CharsetUtil: boolean isWhitespace(char)>(c4);

        if $z2 != 0 goto label09;

        $i27 = (int) c4;

        if $i27 != 45 goto label08;

        goto label09;

     label08:
        $r8 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: byte[] boundary>;

        $i10 = lengthof $r8;

        i17 = $i20 + $i10;

        goto label04;

     label09:
        $i29 = (int) -1;

        if $i20 == $i29 goto label10;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int limit> = $i20;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean atBoundary> = 1;

        specialinvoke r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: void calculateBoundaryLen()>();

        goto label12;

     label10:
        $z3 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean eof>;

        if $z3 == 0 goto label11;

        $r7 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i9 = virtualinvoke $r7.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int limit()>();

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int limit> = $i9;

        goto label12;

     label11:
        $r5 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i5 = virtualinvoke $r5.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int limit()>();

        $r6 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: byte[] boundary>;

        $i6 = lengthof $r6;

        $i7 = $i6 + 2;

        $i8 = $i5 - $i7;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int limit> = $i8;

     label12:
        return i16;
    }

    public boolean isEmptyStream()
    {
        int $i0;
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        $i0 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int initialLength>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isFullyConsumed()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream $r1;
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        $z0 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean completed>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $z1 = virtualinvoke $r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean hasBufferedData()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private void calculateBoundaryLen() throws java.io.IOException
    {
        byte[] $r1;
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream $r2, $r3, $r4;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        $r1 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: byte[] boundary>;

        $i0 = lengthof $r1;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int boundaryLen> = $i0;

        $i1 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int limit>;

        $r2 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i2 = virtualinvoke $r2.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

        i3 = $i1 - $i2;

        if i3 < 0 goto label1;

        $i18 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int initialLength>;

        $i20 = (int) -1;

        if $i18 != $i20 goto label1;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int initialLength> = i3;

     label1:
        if i3 <= 0 goto label2;

        $r4 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i11 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int limit>;

        $i12 = $i11 - 1;

        $i13 = virtualinvoke $r4.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int byteAt(int)>($i12);

        if $i13 != 10 goto label2;

        $i14 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int boundaryLen>;

        $i15 = $i14 + 1;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int boundaryLen> = $i15;

        $i16 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int limit>;

        $i17 = $i16 - 1;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int limit> = $i17;

     label2:
        if i3 <= 1 goto label3;

        $r3 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i4 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int limit>;

        $i5 = $i4 - 1;

        $i6 = virtualinvoke $r3.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int byteAt(int)>($i5);

        if $i6 != 13 goto label3;

        $i7 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int boundaryLen>;

        $i8 = $i7 + 1;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int boundaryLen> = $i8;

        $i9 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int limit>;

        $i10 = $i9 - 1;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int limit> = $i10;

     label3:
        return;
    }

    private void skipBoundary() throws java.io.IOException
    {
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1, z2;
        org.apache.james.mime4j.io.BufferedLineReaderInputStream $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        $z0 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean completed>;

        if $z0 != 0 goto label7;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean completed> = 1;

        $r1 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i0 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int boundaryLen>;

        virtualinvoke $r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int skip(int)>($i0);

        z2 = 1;

     label1:
        $r10 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i6 = virtualinvoke $r10.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int length()>();

        if $i6 <= 1 goto label5;

        $r3 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $r2 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i1 = virtualinvoke $r2.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

        $i2 = virtualinvoke $r3.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int byteAt(int)>($i1);

        $r5 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $r4 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $i3 = virtualinvoke $r4.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int pos()>();

        $i4 = $i3 + 1;

        $i5 = virtualinvoke $r5.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int byteAt(int)>($i4);

        if z2 == 0 goto label2;

        if $i2 != 45 goto label2;

        if $i5 != 45 goto label2;

        r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean lastPart> = 1;

        $r9 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        virtualinvoke $r9.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int skip(int)>(2);

        z2 = 0;

        goto label1;

     label2:
        if $i2 != 13 goto label3;

        if $i5 != 10 goto label3;

        $r8 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        virtualinvoke $r8.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int skip(int)>(2);

        goto label7;

     label3:
        if $i2 != 10 goto label4;

        $r7 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        virtualinvoke $r7.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int skip(int)>(1);

        goto label7;

     label4:
        $r6 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        virtualinvoke $r6.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: int skip(int)>(1);

        goto label1;

     label5:
        $z1 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean eof>;

        if $z1 == 0 goto label6;

        goto label7;

     label6:
        specialinvoke r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: int fillBuffer()>();

        goto label1;

     label7:
        return;
    }

    public boolean isLastPart()
    {
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        $z0 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean lastPart>;

        return $z0;
    }

    public boolean eof()
    {
        org.apache.james.mime4j.io.BufferedLineReaderInputStream $r1;
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        $z0 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: boolean eof>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.james.mime4j.io.MimeBoundaryInputStream: org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer>;

        $z1 = virtualinvoke $r1.<org.apache.james.mime4j.io.BufferedLineReaderInputStream: boolean hasBufferedData()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.lang.String toString()
    {
        byte[] r2;
        char $c2;
        byte b1;
        org.apache.james.mime4j.io.MimeBoundaryInputStream r1;
        int i0, i3;
        java.lang.StringBuilder $r0;
        java.lang.String $r3;

        r1 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("MimeBoundaryInputStream, boundary ");

        r2 = r1.<org.apache.james.mime4j.io.MimeBoundaryInputStream: byte[] boundary>;

        i0 = lengthof r2;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        b1 = r2[i3];

        $c2 = (char) b1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public boolean unread(org.apache.james.mime4j.util.ByteArrayBuffer)
    {
        org.apache.james.mime4j.util.ByteArrayBuffer r1;
        org.apache.james.mime4j.io.MimeBoundaryInputStream r0;

        r0 := @this: org.apache.james.mime4j.io.MimeBoundaryInputStream;

        r1 := @parameter0: org.apache.james.mime4j.util.ByteArrayBuffer;

        return 0;
    }
}
