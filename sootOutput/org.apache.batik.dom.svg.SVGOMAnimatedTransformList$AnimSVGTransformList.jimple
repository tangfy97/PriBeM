public class org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList extends org.apache.batik.dom.svg.AbstractSVGTransformList
{
    private final org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0;

    public void <init>(org.apache.batik.dom.svg.SVGOMAnimatedTransformList)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList r1;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        r1 := @parameter0: org.apache.batik.dom.svg.SVGOMAnimatedTransformList;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGTransformList: void <init>()>();

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0> = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(1);

        r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList> = $r2;

        return;
    }

    protected org.w3c.dom.DOMException createDOMException(short, java.lang.String, java.lang.Object[])
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1;
        short s0;
        java.lang.Object[] r3;
        org.w3c.dom.DOMException $r5;
        java.lang.String r2;
        org.apache.batik.dom.svg.AbstractElement $r4;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        s0 := @parameter0: short;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r4 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r5 = virtualinvoke $r4.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(s0, r2, r3);

        return $r5;
    }

    protected org.w3c.dom.svg.SVGException createSVGException(short, java.lang.String, java.lang.Object[])
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1;
        java.lang.Object[] r4;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;
        short s0;
        org.w3c.dom.svg.SVGException $r6;
        java.lang.String r3;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMElement $r5;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        s0 := @parameter0: short;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Object[];

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r5 = (org.apache.batik.dom.svg.SVGOMElement) $r2;

        $r6 = virtualinvoke $r5.<org.apache.batik.dom.svg.SVGOMElement: org.w3c.dom.svg.SVGException createSVGException(short,java.lang.String,java.lang.Object[])>(s0, r3, r4);

        return $r6;
    }

    public int getNumberOfItems()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1, $r2;
        org.w3c.dom.svg.SVGTransformList $r3;
        int $i0, $i1;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $z0 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 == 0 goto label1;

        $i1 = specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: int getNumberOfItems()>();

        return $i1;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.w3c.dom.svg.SVGTransformList getBaseVal()>();

        $i0 = interfaceinvoke $r3.<org.w3c.dom.svg.SVGTransformList: int getNumberOfItems()>();

        return $i0;
    }

    public org.w3c.dom.svg.SVGTransform getItem(int) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.svg.SVGTransform $r4, $r5;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1, $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;
        org.w3c.dom.svg.SVGTransformList $r3;
        int i0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $z0 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 == 0 goto label1;

        $r5 = specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGTransformList: org.w3c.dom.svg.SVGTransform getItem(int)>(i0);

        return $r5;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.w3c.dom.svg.SVGTransformList getBaseVal()>();

        $r4 = interfaceinvoke $r3.<org.w3c.dom.svg.SVGTransformList: org.w3c.dom.svg.SVGTransform getItem(int)>(i0);

        return $r4;
    }

    protected java.lang.String getValueAsString()
    {
        java.lang.StringBuffer $r2;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r9, $r10, $r13;
        boolean $z0, $z1;
        java.util.Iterator $r5;
        org.apache.batik.dom.svg.SVGItem $r8, $r12;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;
        java.util.List $r1, $r3, $r4;
        java.lang.Object $r7, $r11;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r2 = new java.lang.StringBuffer;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i2 = $i1 * 8;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>($i2);

        $r4 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (org.apache.batik.dom.svg.SVGItem) $r11;

        $r13 = interfaceinvoke $r12.<org.apache.batik.dom.svg.SVGItem: java.lang.String getValueAsString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        goto label3;

     label2:
        $r6 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGTransformList: java.lang.String getItemSeparator()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.batik.dom.svg.SVGItem) $r7;

        $r9 = interfaceinvoke $r8.<org.apache.batik.dom.svg.SVGItem: java.lang.String getValueAsString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label3:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label2;

        $r10 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    protected void setAttributeValue(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void clear() throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1;
        org.w3c.dom.DOMException $r3;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.transform.list", null);

        throw $r3;
    }

    public org.w3c.dom.svg.SVGTransform initialize(org.w3c.dom.svg.SVGTransform) throws org.w3c.dom.DOMException, org.w3c.dom.svg.SVGException
    {
        org.w3c.dom.svg.SVGTransform r4;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1;
        org.w3c.dom.DOMException $r3;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        r4 := @parameter0: org.w3c.dom.svg.SVGTransform;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.transform.list", null);

        throw $r3;
    }

    public org.w3c.dom.svg.SVGTransform insertItemBefore(org.w3c.dom.svg.SVGTransform, int) throws org.w3c.dom.DOMException, org.w3c.dom.svg.SVGException
    {
        org.w3c.dom.svg.SVGTransform r4;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1;
        org.w3c.dom.DOMException $r3;
        int i0;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        r4 := @parameter0: org.w3c.dom.svg.SVGTransform;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.transform.list", null);

        throw $r3;
    }

    public org.w3c.dom.svg.SVGTransform replaceItem(org.w3c.dom.svg.SVGTransform, int) throws org.w3c.dom.DOMException, org.w3c.dom.svg.SVGException
    {
        org.w3c.dom.svg.SVGTransform r4;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1;
        org.w3c.dom.DOMException $r3;
        int i0;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        r4 := @parameter0: org.w3c.dom.svg.SVGTransform;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.transform.list", null);

        throw $r3;
    }

    public org.w3c.dom.svg.SVGTransform removeItem(int) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1;
        org.w3c.dom.DOMException $r3;
        int i0;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.transform.list", null);

        throw $r3;
    }

    public org.w3c.dom.svg.SVGTransform appendItem(org.w3c.dom.svg.SVGTransform) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.svg.SVGTransform r4;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1;
        org.w3c.dom.DOMException $r3;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        r4 := @parameter0: org.w3c.dom.svg.SVGTransform;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.transform.list", null);

        throw $r3;
    }

    public org.w3c.dom.svg.SVGTransform consolidate()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1;
        org.w3c.dom.DOMException $r3;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.transform.list", null);

        throw $r3;
    }

    protected void setAnimatedValue(java.util.Iterator)
    {
        org.w3c.dom.svg.SVGTransform $r5, $r10;
        int $i0, i1, i2, $i4;
        boolean $z0, $z1;
        java.util.Iterator r2;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;
        java.util.List $r1, $r6;
        java.lang.Object $r4, $r7, $r9;
        org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem r8, $r11;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        r2 := @parameter0: java.util.Iterator;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i1 = $i0;

        i2 = 0;

        goto label2;

     label1:
        $r6 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i2);

        r8 = (org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem) $r7;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (org.w3c.dom.svg.SVGTransform) $r9;

        virtualinvoke r8.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void assign(org.w3c.dom.svg.SVGTransform)>($r10);

        i2 = i2 + 1;

     label2:
        if i2 >= $i0 goto label4;

        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        goto label4;

     label3:
        $r11 = new org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.w3c.dom.svg.SVGTransform) $r4;

        specialinvoke $r11.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void <init>(org.apache.batik.dom.svg.AbstractSVGTransformList,org.w3c.dom.svg.SVGTransform)>(r0, $r5);

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: org.apache.batik.dom.svg.SVGItem appendItemImpl(java.lang.Object)>($r11);

        i2 = i2 + 1;

     label4:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        goto label6;

     label5:
        $i4 = (int) -1;

        i1 = i1 + $i4;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: org.apache.batik.dom.svg.SVGItem removeItemImpl(int)>(i1);

     label6:
        if i1 > i2 goto label5;

        return;
    }

    protected void setAnimatedValue(org.w3c.dom.svg.SVGTransform)
    {
        org.w3c.dom.svg.SVGTransform r5;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;
        java.util.List $r1, $r2;
        int i0, $i2;
        java.lang.Object $r3;
        org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem r4, $r7;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        r5 := @parameter0: org.w3c.dom.svg.SVGTransform;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        goto label2;

     label1:
        $i2 = (int) -1;

        i0 = i0 + $i2;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: org.apache.batik.dom.svg.SVGItem removeItemImpl(int)>(i0);

     label2:
        if i0 > 1 goto label1;

        if i0 != 0 goto label3;

        $r7 = new org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem;

        specialinvoke $r7.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void <init>(org.apache.batik.dom.svg.AbstractSVGTransformList,org.w3c.dom.svg.SVGTransform)>(r0, r5);

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: org.apache.batik.dom.svg.SVGItem appendItemImpl(java.lang.Object)>($r7);

        goto label4;

     label3:
        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        r4 = (org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem) $r3;

        virtualinvoke r4.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void assign(org.w3c.dom.svg.SVGTransform)>(r5);

     label4:
        return;
    }

    protected void resetAttribute()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        return;
    }

    protected void resetAttribute(org.apache.batik.dom.svg.SVGItem)
    {
        org.apache.batik.dom.svg.SVGItem r1;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        r1 := @parameter0: org.apache.batik.dom.svg.SVGItem;

        return;
    }

    protected void revalidate()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        r0.<org.apache.batik.dom.svg.AbstractSVGList: boolean valid> = 1;

        return;
    }
}
