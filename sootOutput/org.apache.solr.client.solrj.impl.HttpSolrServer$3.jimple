class org.apache.solr.client.solrj.impl.HttpSolrServer$3 extends java.lang.Object implements java.util.Iterator
{
    final java.util.Iterator val$beanIterator;
    final org.apache.solr.client.solrj.impl.HttpSolrServer this$0;

    void <init>(org.apache.solr.client.solrj.impl.HttpSolrServer, java.util.Iterator)
    {
        java.util.Iterator r2;
        org.apache.solr.client.solrj.impl.HttpSolrServer r1;
        org.apache.solr.client.solrj.impl.HttpSolrServer$3 r0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer$3;

        r1 := @parameter0: org.apache.solr.client.solrj.impl.HttpSolrServer;

        r2 := @parameter1: java.util.Iterator;

        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer$3: org.apache.solr.client.solrj.impl.HttpSolrServer this$0> = r1;

        r0.<org.apache.solr.client.solrj.impl.HttpSolrServer$3: java.util.Iterator val$beanIterator> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r1;
        org.apache.solr.client.solrj.impl.HttpSolrServer$3 r0;
        boolean $z0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer$3;

        $r1 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer$3: java.util.Iterator val$beanIterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public org.apache.solr.common.SolrInputDocument next()
    {
        org.apache.solr.client.solrj.beans.DocumentObjectBinder $r4;
        java.util.Iterator $r1;
        org.apache.solr.client.solrj.impl.HttpSolrServer$3 r0;
        java.lang.Object $r2;
        org.apache.solr.client.solrj.impl.HttpSolrServer $r3;
        org.apache.solr.common.SolrInputDocument $r5;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer$3;

        $r1 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer$3: java.util.Iterator val$beanIterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer$3: org.apache.solr.client.solrj.impl.HttpSolrServer this$0>;

        $r4 = virtualinvoke $r3.<org.apache.solr.client.solrj.impl.HttpSolrServer: org.apache.solr.client.solrj.beans.DocumentObjectBinder getBinder()>();

        $r5 = virtualinvoke $r4.<org.apache.solr.client.solrj.beans.DocumentObjectBinder: org.apache.solr.common.SolrInputDocument toSolrInputDocument(java.lang.Object)>($r2);

        return $r5;
    }

    public void remove()
    {
        java.util.Iterator $r1;
        org.apache.solr.client.solrj.impl.HttpSolrServer$3 r0;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer$3;

        $r1 = r0.<org.apache.solr.client.solrj.impl.HttpSolrServer$3: java.util.Iterator val$beanIterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        return;
    }

    public volatile java.lang.Object next()
    {
        org.apache.solr.client.solrj.impl.HttpSolrServer$3 r0;
        org.apache.solr.common.SolrInputDocument $r1;

        r0 := @this: org.apache.solr.client.solrj.impl.HttpSolrServer$3;

        $r1 = virtualinvoke r0.<org.apache.solr.client.solrj.impl.HttpSolrServer$3: org.apache.solr.common.SolrInputDocument next()>();

        return $r1;
    }
}
