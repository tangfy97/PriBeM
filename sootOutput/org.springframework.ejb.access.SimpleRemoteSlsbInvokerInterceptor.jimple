public class org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor extends org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor implements org.springframework.beans.factory.DisposableBean
{
    private boolean cacheSessionBean;
    private java.lang.Object beanInstance;
    private final java.lang.Object beanInstanceMonitor;

    public void <init>()
    {
        org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor r0;
        java.lang.Object $r1;

        r0 := @this: org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor;

        specialinvoke r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: void <init>()>();

        r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: boolean cacheSessionBean> = 0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.Object beanInstanceMonitor> = $r1;

        return;
    }

    public void setCacheSessionBean(boolean)
    {
        org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor r0;
        boolean z0;

        r0 := @this: org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor;

        z0 := @parameter0: boolean;

        r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: boolean cacheSessionBean> = z0;

        return;
    }

    protected java.lang.Object doInvoke(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable
    {
        javax.naming.NamingException $r20;
        org.aopalliance.intercept.MethodInvocation r2;
        java.lang.reflect.Method $r9, $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Exception $r15, $r19;
        java.lang.reflect.InvocationTargetException $r7;
        java.rmi.RemoteException r16;
        java.lang.StringBuilder $r10, $r12, $r13, $r22, $r24, $r25;
        java.lang.Throwable $r5, $r8;
        org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor r0;
        javax.ejb.EJBObject $r4, $r6;
        org.springframework.remoting.RemoteLookupFailureException $r21;
        java.lang.String $r11, $r14, $r18, $r23, $r26;
        java.lang.Object $r1, $r3, r27;

        r0 := @this: org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor;

        r2 := @parameter0: org.aopalliance.intercept.MethodInvocation;

        r27 = null;

     label1:
        $r1 = virtualinvoke r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.Object getSessionBeanInstance()>();

        r27 = $r1;

        $r3 = staticinvoke <org.springframework.remoting.rmi.RmiClientInterceptorUtils: java.lang.Object invokeRemoteMethod(org.aopalliance.intercept.MethodInvocation,java.lang.Object)>(r2, $r1);

     label2:
        $z0 = $r1 instanceof javax.ejb.EJBObject;

        if $z0 == 0 goto label3;

        $r4 = (javax.ejb.EJBObject) $r1;

        virtualinvoke r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: void releaseSessionBeanInstance(javax.ejb.EJBObject)>($r4);

     label3:
        return $r3;

     label4:
        $r20 := @caughtexception;

        $r21 = new org.springframework.remoting.RemoteLookupFailureException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to locate remote EJB [");

        $r23 = virtualinvoke r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.String getJndiName()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<org.springframework.remoting.RemoteLookupFailureException: void <init>(java.lang.String,java.lang.Throwable)>($r26, $r20);

        throw $r21;

     label5:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z2 = $r8 instanceof java.rmi.RemoteException;

        if $z2 == 0 goto label6;

        r16 = (java.rmi.RemoteException) $r8;

        $r17 = interfaceinvoke r2.<org.aopalliance.intercept.MethodInvocation: java.lang.reflect.Method getMethod()>();

        $z4 = virtualinvoke r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: boolean isConnectFailure(java.rmi.RemoteException)>(r16);

        $r18 = virtualinvoke r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.String getJndiName()>();

        $r19 = staticinvoke <org.springframework.remoting.rmi.RmiClientInterceptorUtils: java.lang.Exception convertRmiAccessException(java.lang.reflect.Method,java.rmi.RemoteException,boolean,java.lang.String)>($r17, r16, $z4, $r18);

        throw $r19;

     label6:
        $z3 = $r8 instanceof javax.ejb.CreateException;

        if $z3 == 0 goto label7;

        $r9 = interfaceinvoke r2.<org.aopalliance.intercept.MethodInvocation: java.lang.reflect.Method getMethod()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not create remote EJB [");

        $r11 = virtualinvoke r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.String getJndiName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = staticinvoke <org.springframework.remoting.rmi.RmiClientInterceptorUtils: java.lang.Exception convertRmiAccessException(java.lang.reflect.Method,java.lang.Throwable,java.lang.String)>($r9, $r8, $r14);

        throw $r15;

     label7:
        throw $r8;

     label8:
        $r5 := @caughtexception;

        $z1 = r27 instanceof javax.ejb.EJBObject;

        if $z1 == 0 goto label9;

        $r6 = (javax.ejb.EJBObject) r27;

        virtualinvoke r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: void releaseSessionBeanInstance(javax.ejb.EJBObject)>($r6);

     label9:
        throw $r5;

        catch javax.naming.NamingException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label8 with label8;
    }

    protected java.lang.Object getSessionBeanInstance() throws javax.naming.NamingException, java.lang.reflect.InvocationTargetException
    {
        java.lang.Throwable $r6;
        org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor r0;
        java.lang.Object $r1, $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor;

        $z0 = r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: boolean cacheSessionBean>;

        if $z0 == 0 goto label6;

        $r2 = r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.Object beanInstanceMonitor>;

        entermonitor $r2;

     label1:
        $r3 = r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.Object beanInstance>;

        if $r3 != null goto label2;

        $r5 = virtualinvoke r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.Object newSessionBeanInstance()>();

        r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.Object beanInstance> = $r5;

     label2:
        $r4 = r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.Object beanInstance>;

        exitmonitor $r2;

     label3:
        return $r4;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r6;

     label6:
        $r1 = virtualinvoke r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.Object newSessionBeanInstance()>();

        return $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void releaseSessionBeanInstance(javax.ejb.EJBObject)
    {
        org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor r0;
        javax.ejb.EJBObject r1;
        boolean $z0;

        r0 := @this: org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor;

        r1 := @parameter0: javax.ejb.EJBObject;

        $z0 = r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: boolean cacheSessionBean>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: void removeSessionBeanInstance(javax.ejb.EJBObject)>(r1);

     label1:
        return;
    }

    protected void refreshHome() throws javax.naming.NamingException
    {
        java.lang.Throwable $r2;
        org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor;

        specialinvoke r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: void refreshHome()>();

        $z0 = r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: boolean cacheSessionBean>;

        if $z0 == 0 goto label5;

        $r1 = r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.Object beanInstanceMonitor>;

        entermonitor $r1;

     label1:
        r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.Object beanInstance> = null;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void destroy()
    {
        java.lang.Throwable $r5;
        org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor r0;
        javax.ejb.EJBObject $r4;
        java.lang.Object $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor;

        $z0 = r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: boolean cacheSessionBean>;

        if $z0 == 0 goto label6;

        $r1 = r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.Object beanInstanceMonitor>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.Object beanInstance>;

        $z1 = $r2 instanceof javax.ejb.EJBObject;

        if $z1 == 0 goto label2;

        $r3 = r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.Object beanInstance>;

        $r4 = (javax.ejb.EJBObject) $r3;

        virtualinvoke r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: void removeSessionBeanInstance(javax.ejb.EJBObject)>($r4);

     label2:
        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
}
