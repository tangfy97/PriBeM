public class org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate extends java.lang.Object implements org.xmlpull.v1.XmlPullParser
{
    protected org.xmlpull.v1.XmlPullParser pp;

    public void <init>(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp> = r1;

        return;
    }

    public java.lang.String getText()
    {
        java.lang.String $r2;
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        return $r2;
    }

    public void setFeature(java.lang.String, boolean) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        java.lang.String r1;
        boolean z0;
        org.xmlpull.v1.XmlPullParser $r2;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>(r1, z0);

        return;
    }

    public char[] getTextCharacters(int[])
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        int[] r1;
        char[] $r3;
        org.xmlpull.v1.XmlPullParser $r2;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        r1 := @parameter0: int[];

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: char[] getTextCharacters(int[])>(r1);

        return $r3;
    }

    public int getColumnNumber()
    {
        int $i0;
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getColumnNumber()>();

        return $i0;
    }

    public int getNamespaceCount(int) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        int i0, $i1;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>(i0);

        return $i1;
    }

    public java.lang.String getNamespacePrefix(int) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        int i0;
        java.lang.String $r2;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespacePrefix(int)>(i0);

        return $r2;
    }

    public java.lang.String getAttributeName(int)
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        int i0;
        java.lang.String $r2;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        return $r2;
    }

    public java.lang.String getName()
    {
        java.lang.String $r2;
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        return $r2;
    }

    public boolean getFeature(java.lang.String)
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        java.lang.String r1;
        org.xmlpull.v1.XmlPullParser $r2;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $z0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>(r1);

        return $z0;
    }

    public java.lang.String getInputEncoding()
    {
        java.lang.String $r2;
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getInputEncoding()>();

        return $r2;
    }

    public java.lang.String getAttributeValue(int)
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        int i0;
        java.lang.String $r2;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(i0);

        return $r2;
    }

    public java.lang.String getNamespace(java.lang.String)
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        java.lang.String r1, $r3;
        org.xmlpull.v1.XmlPullParser $r2;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace(java.lang.String)>(r1);

        return $r3;
    }

    public void setInput(java.io.Reader) throws org.xmlpull.v1.XmlPullParserException
    {
        java.io.Reader r1;
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r2;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        r1 := @parameter0: java.io.Reader;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r1);

        return;
    }

    public int getLineNumber()
    {
        int $i0;
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getLineNumber()>();

        return $i0;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        java.lang.Object $r3;
        java.lang.String r1;
        org.xmlpull.v1.XmlPullParser $r2;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r3;
    }

    public boolean isEmptyElementTag() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $z0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: boolean isEmptyElementTag()>();

        return $z0;
    }

    public boolean isAttributeDefault(int)
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        int i0;
        org.xmlpull.v1.XmlPullParser $r1;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $z0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: boolean isAttributeDefault(int)>(i0);

        return $z0;
    }

    public java.lang.String getNamespaceUri(int) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        int i0;
        java.lang.String $r2;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespaceUri(int)>(i0);

        return $r2;
    }

    public int next() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        int $i0;
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        return $i0;
    }

    public int nextToken() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        int $i0;
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextToken()>();

        return $i0;
    }

    public void defineEntityReplacementText(java.lang.String, java.lang.String) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        java.lang.String r1, r2;
        org.xmlpull.v1.XmlPullParser $r3;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: void defineEntityReplacementText(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public int getAttributeCount()
    {
        int $i0;
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        return $i0;
    }

    public boolean isWhitespace() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $z0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: boolean isWhitespace()>();

        return $z0;
    }

    public java.lang.String getPrefix()
    {
        java.lang.String $r2;
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPrefix()>();

        return $r2;
    }

    public void require(int, java.lang.String, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        int i0;
        java.lang.String r1, r2;
        org.xmlpull.v1.XmlPullParser $r3;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        return;
    }

    public java.lang.String nextText() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String $r2;
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        return $r2;
    }

    public java.lang.String getAttributeType(int)
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        int i0;
        java.lang.String $r2;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)>(i0);

        return $r2;
    }

    public int getDepth()
    {
        int $i0;
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        return $i0;
    }

    public int nextTag() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        int $i0;
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

        return $i0;
    }

    public int getEventType() throws org.xmlpull.v1.XmlPullParserException
    {
        int $i0;
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        return $i0;
    }

    public java.lang.String getAttributePrefix(int)
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        int i0;
        java.lang.String $r2;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributePrefix(int)>(i0);

        return $r2;
    }

    public void setInput(java.io.InputStream, java.lang.String) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        java.lang.String r2;
        java.io.InputStream r1;
        org.xmlpull.v1.XmlPullParser $r3;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, r2);

        return;
    }

    public java.lang.String getAttributeValue(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        java.lang.String r1, r2, $r4;
        org.xmlpull.v1.XmlPullParser $r3;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        java.lang.Object r2;
        java.lang.String r1;
        org.xmlpull.v1.XmlPullParser $r3;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.String getPositionDescription()
    {
        java.lang.String $r2;
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        return $r2;
    }

    public java.lang.String getNamespace()
    {
        java.lang.String $r2;
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        return $r2;
    }

    public java.lang.String getAttributeNamespace(int)
    {
        org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate r0;
        int i0;
        java.lang.String $r2;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>(i0);

        return $r2;
    }
}
