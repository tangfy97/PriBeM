class com.google.inject.internal.cglib.proxy.$NoOpGenerator extends java.lang.Object implements com.google.inject.internal.cglib.proxy.$CallbackGenerator
{
    public static final com.google.inject.internal.cglib.proxy.$NoOpGenerator INSTANCE;

    void <init>()
    {
        com.google.inject.internal.cglib.proxy.$NoOpGenerator r0;

        r0 := @this: com.google.inject.internal.cglib.proxy.$NoOpGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void generate(com.google.inject.internal.cglib.core.$ClassEmitter, com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context, java.util.List)
    {
        java.util.Iterator $r1;
        com.google.inject.internal.cglib.core.$CodeEmitter $r6;
        java.util.List r0;
        com.google.inject.internal.cglib.core.$ClassEmitter r5;
        com.google.inject.internal.cglib.proxy.$NoOpGenerator r7;
        int $i0, $i1;
        java.lang.Object $r2;
        com.google.inject.internal.cglib.core.$MethodInfo r3;
        boolean $z0, $z1, $z2;
        com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context r4;

        r7 := @this: com.google.inject.internal.cglib.proxy.$NoOpGenerator;

        r5 := @parameter0: com.google.inject.internal.cglib.core.$ClassEmitter;

        r4 := @parameter1: com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context;

        r0 := @parameter2: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.google.inject.internal.cglib.core.$MethodInfo) $r2;

        $i0 = interfaceinvoke r4.<com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context: int getOriginalModifiers(com.google.inject.internal.cglib.core.$MethodInfo)>(r3);

        $z1 = staticinvoke <com.google.inject.internal.cglib.core.$TypeUtils: boolean isProtected(int)>($i0);

        if $z1 == 0 goto label2;

        $i1 = virtualinvoke r3.<com.google.inject.internal.cglib.core.$MethodInfo: int getModifiers()>();

        $z2 = staticinvoke <com.google.inject.internal.cglib.core.$TypeUtils: boolean isPublic(int)>($i1);

        if $z2 == 0 goto label2;

        $r6 = staticinvoke <com.google.inject.internal.cglib.core.$EmitUtils: com.google.inject.internal.cglib.core.$CodeEmitter begin_method(com.google.inject.internal.cglib.core.$ClassEmitter,com.google.inject.internal.cglib.core.$MethodInfo)>(r5, r3);

        virtualinvoke $r6.<com.google.inject.internal.cglib.core.$CodeEmitter: void load_this()>();

        virtualinvoke $r6.<com.google.inject.internal.cglib.core.$CodeEmitter: void load_args()>();

        virtualinvoke $r6.<com.google.inject.internal.cglib.core.$CodeEmitter: void super_invoke()>();

        virtualinvoke $r6.<com.google.inject.internal.cglib.core.$CodeEmitter: void return_value()>();

        virtualinvoke $r6.<com.google.inject.internal.cglib.core.$CodeEmitter: void end_method()>();

     label2:
        goto label1;

     label3:
        return;
    }

    public void generateStatic(com.google.inject.internal.cglib.core.$CodeEmitter, com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context, java.util.List)
    {
        java.util.List r3;
        com.google.inject.internal.cglib.core.$CodeEmitter r1;
        com.google.inject.internal.cglib.proxy.$NoOpGenerator r0;
        com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context r2;

        r0 := @this: com.google.inject.internal.cglib.proxy.$NoOpGenerator;

        r1 := @parameter0: com.google.inject.internal.cglib.core.$CodeEmitter;

        r2 := @parameter1: com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context;

        r3 := @parameter2: java.util.List;

        return;
    }

    static void <clinit>()
    {
        com.google.inject.internal.cglib.proxy.$NoOpGenerator $r0;

        $r0 = new com.google.inject.internal.cglib.proxy.$NoOpGenerator;

        specialinvoke $r0.<com.google.inject.internal.cglib.proxy.$NoOpGenerator: void <init>()>();

        <com.google.inject.internal.cglib.proxy.$NoOpGenerator: com.google.inject.internal.cglib.proxy.$NoOpGenerator INSTANCE> = $r0;

        return;
    }
}
