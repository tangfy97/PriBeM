public class ucar.nc2.ft.point.standard.plug.Ndbc extends ucar.nc2.ft.point.standard.TableConfigurerImpl
{

    public void <init>()
    {
        ucar.nc2.ft.point.standard.plug.Ndbc r0;

        r0 := @this: ucar.nc2.ft.point.standard.plug.Ndbc;

        specialinvoke r0.<ucar.nc2.ft.point.standard.TableConfigurerImpl: void <init>()>();

        return;
    }

    public boolean isMine(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.ft.point.standard.plug.Ndbc r5;
        java.lang.String $r1, $r2, $r3, $r4, r7;
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.nc2.constants.FeatureType r6;
        boolean $z0, $z1, $z2;

        r5 := @this: ucar.nc2.ft.point.standard.plug.Ndbc;

        r6 := @parameter0: ucar.nc2.constants.FeatureType;

        r0 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "Conventions", "");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("COARDS");

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "data_provider", null);

        r7 = $r2;

        if $r2 != null goto label2;

        r7 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "institution", "");

     label2:
        $z1 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("National Data Buoy Center");

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "station", null);

        if null != $r3 goto label4;

        return 0;

     label4:
        $r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "location", null);

        if null != $r4 goto label5;

        return 0;

     label5:
        $z2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: boolean hasUnlimitedDimension()>();

        if $z2 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public ucar.nc2.ft.point.standard.TableConfig getConfig(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset, java.util.Formatter)
    {
        java.util.Formatter r23;
        ucar.nc2.ft.point.standard.TableConfig $r4, $r14, $r20;
        ucar.nc2.dataset.CoordinateAxis $r26;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r30, $r32;
        ucar.nc2.constants.AxisType $r7, $r9, $r17, $r25;
        ucar.nc2.constants.FeatureType r2, $r3, $r6, $r22;
        boolean $z0, $z1;
        java.lang.Object[] $r24;
        ucar.nc2.ft.point.standard.Table$Type $r5, $r15, $r21;
        java.lang.String $r8, $r10, $r11, $r12, $r13, $r16, $r18, $r19, $r29, $r31;
        ucar.nc2.ft.point.standard.plug.Ndbc r27;
        ucar.nc2.Dimension $r1, r28;
        ucar.nc2.dataset.NetcdfDataset r0;

        r27 := @this: ucar.nc2.ft.point.standard.plug.Ndbc;

        r2 := @parameter0: ucar.nc2.constants.FeatureType;

        r0 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r23 := @parameter2: java.util.Formatter;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension getUnlimitedDimension()>();

        r28 = $r1;

        if $r1 != null goto label01;

        $r25 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r26 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r25);

        if $r26 == null goto label01;

        $z1 = virtualinvoke $r26.<ucar.nc2.dataset.CoordinateAxis: boolean isScalar()>();

        if $z1 == 0 goto label01;

        r28 = virtualinvoke $r26.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Dimension getDimension(int)>(0);

     label01:
        if r28 != null goto label02;

        $r24 = newarray (java.lang.Object)[0];

        virtualinvoke r23.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have an Observation dimension: unlimited dimension, or from Time Coordinate", $r24);

        return null;

     label02:
        $z0 = staticinvoke <ucar.nc2.ft.point.standard.Evaluator: boolean hasRecordStructure(ucar.nc2.dataset.NetcdfDataset)>(r0);

        $r3 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType POINT>;

        if r2 != $r3 goto label07;

        $r20 = new ucar.nc2.ft.point.standard.TableConfig;

        $r21 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Structure>;

        if $z0 == 0 goto label03;

        $r29 = "record";

        goto label04;

     label03:
        $r29 = virtualinvoke r28.<ucar.nc2.Dimension: java.lang.String getName()>();

     label04:
        specialinvoke $r20.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>($r21, $r29);

        $r20.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = "record";

        if $z0 == 0 goto label05;

        $r30 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType Structure>;

        goto label06;

     label05:
        $r30 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure>;

     label06:
        $r20.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r30;

        $r22 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType POINT>;

        $r20.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.constants.FeatureType featureType> = $r22;

        staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: void findCoords(ucar.nc2.ft.point.standard.TableConfig,ucar.nc2.dataset.NetcdfDataset)>($r20, r0);

        return $r20;

     label07:
        $r4 = new ucar.nc2.ft.point.standard.TableConfig;

        $r5 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Top>;

        specialinvoke $r4.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>($r5, "station");

        $r6 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION>;

        $r4.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.constants.FeatureType featureType> = $r6;

        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r8 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: java.lang.String findCoordNameByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r7);

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lat> = $r8;

        $r9 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r10 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: java.lang.String findCoordNameByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r9);

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lon> = $r10;

        $r11 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "station", null);

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnId> = $r11;

        $r12 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "description", null);

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnDesc> = $r12;

        $r13 = $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnDesc>;

        if $r13 != null goto label08;

        $r19 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "comment", null);

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnDesc> = $r19;

     label08:
        $r14 = new ucar.nc2.ft.point.standard.TableConfig;

        $r15 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Structure>;

        if $z0 == 0 goto label09;

        $r31 = "record";

        goto label10;

     label09:
        $r31 = virtualinvoke r28.<ucar.nc2.Dimension: java.lang.String getName()>();

     label10:
        specialinvoke $r14.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>($r15, $r31);

        $r14.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = "record";

        if $z0 == 0 goto label11;

        $r32 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType Structure>;

        goto label12;

     label11:
        $r32 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure>;

     label12:
        $r14.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r32;

        $r16 = virtualinvoke r28.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r14.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r16;

        $r17 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r18 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: java.lang.String findCoordNameByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r17);

        $r14.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String time> = $r18;

        virtualinvoke $r4.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r14);

        return $r4;
    }
}
