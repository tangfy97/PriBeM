final class com.google.gxp.html.HtmlClosures$5 extends java.lang.Object implements com.google.gxp.html.HtmlClosure
{
    final java.io.File val$file;
    final java.nio.charset.Charset val$charset;

    void <init>(java.io.File, java.nio.charset.Charset)
    {
        java.nio.charset.Charset r2;
        java.io.File r1;
        com.google.gxp.html.HtmlClosures$5 r0;

        r0 := @this: com.google.gxp.html.HtmlClosures$5;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.nio.charset.Charset;

        r0.<com.google.gxp.html.HtmlClosures$5: java.io.File val$file> = r1;

        r0.<com.google.gxp.html.HtmlClosures$5: java.nio.charset.Charset val$charset> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void write(java.lang.Appendable, com.google.gxp.base.GxpContext) throws java.io.IOException
    {
        com.google.gxp.base.GxpContext r6;
        java.nio.charset.Charset $r4;
        java.lang.Appendable r5;
        com.google.gxp.html.HtmlClosures$5 r1;
        java.io.FileInputStream $r0;
        java.io.InputStreamReader $r3;
        java.io.File $r2;

        r1 := @this: com.google.gxp.html.HtmlClosures$5;

        r5 := @parameter0: java.lang.Appendable;

        r6 := @parameter1: com.google.gxp.base.GxpContext;

        $r0 = new java.io.FileInputStream;

        $r2 = r1.<com.google.gxp.html.HtmlClosures$5: java.io.File val$file>;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        $r3 = new java.io.InputStreamReader;

        $r4 = r1.<com.google.gxp.html.HtmlClosures$5: java.nio.charset.Charset val$charset>;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r0, $r4);

        staticinvoke <com.google.gxp.com.google.common.io.Characters: long copy(java.lang.Readable,java.lang.Appendable)>($r3, r5);

        virtualinvoke $r3.<java.io.InputStreamReader: void close()>();

        virtualinvoke $r0.<java.io.FileInputStream: void close()>();

        return;
    }
}
