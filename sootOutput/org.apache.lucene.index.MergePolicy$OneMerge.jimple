public class org.apache.lucene.index.MergePolicy$OneMerge extends java.lang.Object
{
    org.apache.lucene.index.SegmentInfoPerCommit info;
    boolean registerDone;
    long mergeGen;
    boolean isExternal;
    int maxNumSegments;
    public volatile long estimatedMergeBytes;
    volatile long totalMergeBytes;
    java.util.List readers;
    public final java.util.List segments;
    public final int totalDocCount;
    boolean aborted;
    java.lang.Throwable error;
    boolean paused;

    public void <init>(java.util.List)
    {
        java.util.Iterator $r3;
        org.apache.lucene.index.SegmentInfo $r6;
        org.apache.lucene.index.SegmentInfoPerCommit r5;
        java.lang.RuntimeException $r8;
        java.util.ArrayList $r9;
        java.util.List r1;
        org.apache.lucene.index.MergePolicy$OneMerge r0;
        int $i0, $i1, i2, $i4;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.MergePolicy$OneMerge;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i4 = (int) -1;

        r0.<org.apache.lucene.index.MergePolicy$OneMerge: int maxNumSegments> = $i4;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if 0 != $i0 goto label1;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("segments must include at least one segment");

        throw $r8;

     label1:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<org.apache.lucene.index.MergePolicy$OneMerge: java.util.List segments> = $r9;

        i2 = 0;

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.lucene.index.SegmentInfoPerCommit) $r4;

        $r6 = r5.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i1 = virtualinvoke $r6.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        i2 = i2 + $i1;

        goto label2;

     label3:
        r0.<org.apache.lucene.index.MergePolicy$OneMerge: int totalDocCount> = i2;

        return;
    }

    public java.util.List getMergeReaders() throws java.io.IOException
    {
        java.lang.IllegalStateException $r9;
        java.util.Iterator $r5;
        java.util.ArrayList $r2;
        java.util.List $r1, $r3, $r4, $r6;
        org.apache.lucene.index.MergePolicy$OneMerge r0;
        int $i0, $i1;
        java.lang.Object $r7;
        org.apache.lucene.index.SegmentReader r8;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.MergePolicy$OneMerge;

        $r1 = r0.<org.apache.lucene.index.MergePolicy$OneMerge: java.util.List readers>;

        if $r1 != null goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("IndexWriter has not initialized readers from the segment infos yet");

        throw $r9;

     label1:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<org.apache.lucene.index.MergePolicy$OneMerge: java.util.List readers>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = r0.<org.apache.lucene.index.MergePolicy$OneMerge: java.util.List readers>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.lucene.index.SegmentReader) $r7;

        $i1 = virtualinvoke r8.<org.apache.lucene.index.AtomicReader: int numDocs()>();

        if $i1 <= 0 goto label3;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r8);

     label3:
        goto label2;

     label4:
        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r6;
    }

    public void setInfo(org.apache.lucene.index.SegmentInfoPerCommit)
    {
        org.apache.lucene.index.SegmentInfoPerCommit r1;
        org.apache.lucene.index.MergePolicy$OneMerge r0;

        r0 := @this: org.apache.lucene.index.MergePolicy$OneMerge;

        r1 := @parameter0: org.apache.lucene.index.SegmentInfoPerCommit;

        r0.<org.apache.lucene.index.MergePolicy$OneMerge: org.apache.lucene.index.SegmentInfoPerCommit info> = r1;

        return;
    }

    public org.apache.lucene.index.MergePolicy$DocMap getDocMap(org.apache.lucene.index.MergeState)
    {
        org.apache.lucene.index.MergePolicy$OneMerge$1 $r0;
        org.apache.lucene.index.MergePolicy$OneMerge r1;
        org.apache.lucene.index.MergeState r2;

        r1 := @this: org.apache.lucene.index.MergePolicy$OneMerge;

        r2 := @parameter0: org.apache.lucene.index.MergeState;

        $r0 = new org.apache.lucene.index.MergePolicy$OneMerge$1;

        specialinvoke $r0.<org.apache.lucene.index.MergePolicy$OneMerge$1: void <init>(org.apache.lucene.index.MergePolicy$OneMerge)>(r1);

        return $r0;
    }

    synchronized void setException(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        org.apache.lucene.index.MergePolicy$OneMerge r0;

        r0 := @this: org.apache.lucene.index.MergePolicy$OneMerge;

        r1 := @parameter0: java.lang.Throwable;

        r0.<org.apache.lucene.index.MergePolicy$OneMerge: java.lang.Throwable error> = r1;

        return;
    }

    synchronized java.lang.Throwable getException()
    {
        java.lang.Throwable $r1;
        org.apache.lucene.index.MergePolicy$OneMerge r0;

        r0 := @this: org.apache.lucene.index.MergePolicy$OneMerge;

        $r1 = r0.<org.apache.lucene.index.MergePolicy$OneMerge: java.lang.Throwable error>;

        return $r1;
    }

    synchronized void abort()
    {
        org.apache.lucene.index.MergePolicy$OneMerge r0;

        r0 := @this: org.apache.lucene.index.MergePolicy$OneMerge;

        r0.<org.apache.lucene.index.MergePolicy$OneMerge: boolean aborted> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    synchronized boolean isAborted()
    {
        org.apache.lucene.index.MergePolicy$OneMerge r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.MergePolicy$OneMerge;

        $z0 = r0.<org.apache.lucene.index.MergePolicy$OneMerge: boolean aborted>;

        return $z0;
    }

    public synchronized void checkAborted(org.apache.lucene.store.Directory) throws org.apache.lucene.index.MergePolicy$MergeAbortedException
    {
        org.apache.lucene.store.Directory r4;
        java.lang.String $r5, $r7, $r11, $r13;
        boolean $z0, $z1, $z2;
        java.lang.RuntimeException $r15;
        org.apache.lucene.index.MergePolicy$OneMerge r0;
        java.lang.InterruptedException $r14;
        org.apache.lucene.index.MergePolicy$MergeAbortedException $r1, $r8;
        java.lang.StringBuilder $r2, $r3, $r6, $r9, $r10, $r12;

        r0 := @this: org.apache.lucene.index.MergePolicy$OneMerge;

        r4 := @parameter0: org.apache.lucene.store.Directory;

        $z0 = r0.<org.apache.lucene.index.MergePolicy$OneMerge: boolean aborted>;

        if $z0 == 0 goto label1;

        $r8 = new org.apache.lucene.index.MergePolicy$MergeAbortedException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("merge is aborted: ");

        $r11 = virtualinvoke r0.<org.apache.lucene.index.MergePolicy$OneMerge: java.lang.String segString(org.apache.lucene.store.Directory)>(r4);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.lucene.index.MergePolicy$MergeAbortedException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label1:
        $z1 = r0.<org.apache.lucene.index.MergePolicy$OneMerge: boolean paused>;

        if $z1 == 0 goto label6;

     label2:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(1000L);

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r14);

        throw $r15;

     label5:
        $z2 = r0.<org.apache.lucene.index.MergePolicy$OneMerge: boolean aborted>;

        if $z2 == 0 goto label1;

        $r1 = new org.apache.lucene.index.MergePolicy$MergeAbortedException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("merge is aborted: ");

        $r5 = virtualinvoke r0.<org.apache.lucene.index.MergePolicy$OneMerge: java.lang.String segString(org.apache.lucene.store.Directory)>(r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.apache.lucene.index.MergePolicy$MergeAbortedException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label6:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    public synchronized void setPause(boolean)
    {
        org.apache.lucene.index.MergePolicy$OneMerge r0;
        boolean z0;

        r0 := @this: org.apache.lucene.index.MergePolicy$OneMerge;

        z0 := @parameter0: boolean;

        r0.<org.apache.lucene.index.MergePolicy$OneMerge: boolean paused> = z0;

        if z0 != 0 goto label1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label1:
        return;
    }

    public synchronized boolean getPause()
    {
        org.apache.lucene.index.MergePolicy$OneMerge r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.MergePolicy$OneMerge;

        $z0 = r0.<org.apache.lucene.index.MergePolicy$OneMerge: boolean paused>;

        return $z0;
    }

    public java.lang.String segString(org.apache.lucene.store.Directory)
    {
        org.apache.lucene.index.SegmentInfoPerCommit $r3, $r11, $r17;
        org.apache.lucene.store.Directory r16;
        int $i0, $i1, $i2, i3, $i5;
        java.lang.String $r4, $r9, $r13, $r18;
        boolean $z0;
        org.apache.lucene.index.SegmentInfo $r12;
        java.util.List $r2, $r14;
        org.apache.lucene.index.MergePolicy$OneMerge r1;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r19, $r20;
        java.lang.Object $r15;

        r1 := @this: org.apache.lucene.index.MergePolicy$OneMerge;

        r16 := @parameter0: org.apache.lucene.store.Directory;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.index.MergePolicy$OneMerge: java.util.List segments>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        i3 = 0;

     label1:
        if i3 >= $i0 goto label3;

        if i3 <= 0 goto label2;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label2:
        $r14 = r1.<org.apache.lucene.index.MergePolicy$OneMerge: java.util.List segments>;

        $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i3);

        $r17 = (org.apache.lucene.index.SegmentInfoPerCommit) $r15;

        $r18 = virtualinvoke $r17.<org.apache.lucene.index.SegmentInfoPerCommit: java.lang.String toString(org.apache.lucene.store.Directory,int)>(r16, 0);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        i3 = i3 + 1;

        goto label1;

     label3:
        $r3 = r1.<org.apache.lucene.index.MergePolicy$OneMerge: org.apache.lucene.index.SegmentInfoPerCommit info>;

        if $r3 == null goto label4;

        $r10 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" into ");

        $r11 = r1.<org.apache.lucene.index.MergePolicy$OneMerge: org.apache.lucene.index.SegmentInfoPerCommit info>;

        $r12 = $r11.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r13 = $r12.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label4:
        $i1 = r1.<org.apache.lucene.index.MergePolicy$OneMerge: int maxNumSegments>;

        $i5 = (int) -1;

        if $i1 == $i5 goto label5;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [maxNumSegments=");

        $i2 = r1.<org.apache.lucene.index.MergePolicy$OneMerge: int maxNumSegments>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label5:
        $z0 = r1.<org.apache.lucene.index.MergePolicy$OneMerge: boolean aborted>;

        if $z0 == 0 goto label6;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [ABORTED]");

     label6:
        $r4 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public long totalBytesSize() throws java.io.IOException
    {
        long $l0;
        org.apache.lucene.index.MergePolicy$OneMerge r0;

        r0 := @this: org.apache.lucene.index.MergePolicy$OneMerge;

        $l0 = r0.<org.apache.lucene.index.MergePolicy$OneMerge: long totalMergeBytes>;

        return $l0;
    }

    public int totalNumDocs() throws java.io.IOException
    {
        java.util.Iterator $r2;
        org.apache.lucene.index.SegmentInfo $r5;
        org.apache.lucene.index.SegmentInfoPerCommit r4;
        java.util.List $r1;
        org.apache.lucene.index.MergePolicy$OneMerge r0;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.MergePolicy$OneMerge;

        i1 = 0;

        $r1 = r0.<org.apache.lucene.index.MergePolicy$OneMerge: java.util.List segments>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.lucene.index.SegmentInfoPerCommit) $r3;

        $r5 = r4.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i0 = virtualinvoke $r5.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        i1 = i1 + $i0;

        goto label1;

     label2:
        return i1;
    }

    public org.apache.lucene.store.MergeInfo getMergeInfo()
    {
        org.apache.lucene.store.MergeInfo $r0;
        org.apache.lucene.index.MergePolicy$OneMerge r1;
        int $i0, $i2;
        long $l1;
        boolean $z0;

        r1 := @this: org.apache.lucene.index.MergePolicy$OneMerge;

        $r0 = new org.apache.lucene.store.MergeInfo;

        $i2 = r1.<org.apache.lucene.index.MergePolicy$OneMerge: int totalDocCount>;

        $l1 = r1.<org.apache.lucene.index.MergePolicy$OneMerge: long estimatedMergeBytes>;

        $z0 = r1.<org.apache.lucene.index.MergePolicy$OneMerge: boolean isExternal>;

        $i0 = r1.<org.apache.lucene.index.MergePolicy$OneMerge: int maxNumSegments>;

        specialinvoke $r0.<org.apache.lucene.store.MergeInfo: void <init>(int,long,boolean,int)>($i2, $l1, $z0, $i0);

        return $r0;
    }
}
