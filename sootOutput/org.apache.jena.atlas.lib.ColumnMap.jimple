public class org.apache.jena.atlas.lib.ColumnMap extends java.lang.Object
{
    private int[] insertOrder;
    private int[] fetchOrder;
    private java.lang.String label;

    public void <init>(java.lang.String, java.lang.String)
    {
        int[] $r8;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.String r2, r5, $r7;
        org.apache.jena.atlas.lib.ColumnMap r0;

        r0 := @this: org.apache.jena.atlas.lib.ColumnMap;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <org.apache.jena.atlas.lib.ColumnMap: int[] compileMapping(java.lang.String,java.lang.String)>(r2, r5);

        specialinvoke r0.<org.apache.jena.atlas.lib.ColumnMap: void <init>(java.lang.String,int[])>($r7, $r8);

        return;
    }

    public void <init>(java.lang.String, java.util.List, java.util.List)
    {
        java.util.List r2, r3;
        int[] $r4;
        java.lang.String r1;
        org.apache.jena.atlas.lib.ColumnMap r0;

        r0 := @this: org.apache.jena.atlas.lib.ColumnMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        $r4 = staticinvoke <org.apache.jena.atlas.lib.ColumnMap: int[] compileMapping(java.util.List,java.util.List)>(r2, r3);

        specialinvoke r0.<org.apache.jena.atlas.lib.ColumnMap: void <init>(java.lang.String,int[])>(r1, $r4);

        return;
    }

    public void <init>(java.lang.String, java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] r2, r3;
        int[] $r4;
        java.lang.String r1;
        org.apache.jena.atlas.lib.ColumnMap r0;

        r0 := @this: org.apache.jena.atlas.lib.ColumnMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 := @parameter2: java.lang.Object[];

        $r4 = staticinvoke <org.apache.jena.atlas.lib.ColumnMap: int[] compileMapping(java.lang.Object[],java.lang.Object[])>(r2, r3);

        specialinvoke r0.<org.apache.jena.atlas.lib.ColumnMap: void <init>(java.lang.String,int[])>(r1, $r4);

        return;
    }

    public transient void <init>(java.lang.String, int[])
    {
        int[] r2, $r3, $r4, $r5, $r6, $r12, $r19, $r20, $r21;
        java.lang.StringBuilder $r9, $r10, $r15, $r17, $r22, $r24;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, i8, $i10, $i12, $i14, $i16;
        java.lang.String r1, $r11, $r16, $r18;
        java.lang.IllegalArgumentException $r23, $r25;
        org.apache.jena.atlas.lib.ColumnMap r0;

        r0 := @this: org.apache.jena.atlas.lib.ColumnMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.atlas.lib.ColumnMap: java.lang.String label> = r1;

        $i0 = lengthof r2;

        $r3 = newarray (int)[$i0];

        r0.<org.apache.jena.atlas.lib.ColumnMap: int[] insertOrder> = $r3;

        $i1 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r2, 0, $i1);

        $r4 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] insertOrder>;

        $i10 = (int) -1;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r4, $i10);

        $i2 = lengthof r2;

        $r5 = newarray (int)[$i2];

        r0.<org.apache.jena.atlas.lib.ColumnMap: int[] fetchOrder> = $r5;

        $r6 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] fetchOrder>;

        $i12 = (int) -1;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r6, $i12);

        i8 = 0;

     label1:
        $i3 = lengthof r2;

        if i8 >= $i3 goto label6;

        i4 = r2[i8];

        if i4 < 0 goto label2;

        $i5 = lengthof r2;

        if i4 < $i5 goto label3;

     label2:
        $r23 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Out of range: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r23;

     label3:
        $r12 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] insertOrder>;

        $i6 = $r12[i8];

        $i14 = (int) -1;

        if $i6 != $i14 goto label4;

        $r19 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] fetchOrder>;

        $i7 = $r19[i4];

        $i16 = (int) -1;

        if $i7 == $i16 goto label5;

     label4:
        $r25 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inconsistent: ");

        $r16 = staticinvoke <org.apache.jena.atlas.lib.ListUtils: java.lang.String str(int[])>(r2);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r25;

     label5:
        $r20 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] insertOrder>;

        $r20[i8] = i4;

        $r21 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] fetchOrder>;

        $r21[i4] = i8;

        i8 = i8 + 1;

        goto label1;

     label6:
        return;
    }

    public int length()
    {
        int $i0;
        int[] $r1;
        org.apache.jena.atlas.lib.ColumnMap r0;

        r0 := @this: org.apache.jena.atlas.lib.ColumnMap;

        $r1 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] fetchOrder>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.lang.Object fetchSlot(int, org.apache.jena.atlas.lib.Tuple)
    {
        int[] $r1;
        org.apache.jena.atlas.lib.Tuple r2;
        int i0, i1;
        java.lang.Object $r3;
        org.apache.jena.atlas.lib.ColumnMap r0;

        r0 := @this: org.apache.jena.atlas.lib.ColumnMap;

        i0 := @parameter0: int;

        r2 := @parameter1: org.apache.jena.atlas.lib.Tuple;

        $r1 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] fetchOrder>;

        i1 = $r1[i0];

        $r3 = virtualinvoke r2.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(i1);

        return $r3;
    }

    public java.lang.Object fetchSlot(int, java.lang.Object[])
    {
        java.lang.Object[] r2;
        int[] $r1;
        int i0, i1;
        java.lang.Object $r3;
        org.apache.jena.atlas.lib.ColumnMap r0;

        r0 := @this: org.apache.jena.atlas.lib.ColumnMap;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object[];

        $r1 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] fetchOrder>;

        i1 = $r1[i0];

        $r3 = r2[i1];

        return $r3;
    }

    public java.lang.Object mapSlot(int, org.apache.jena.atlas.lib.Tuple)
    {
        int[] $r1;
        org.apache.jena.atlas.lib.Tuple r2;
        int i0, i1;
        java.lang.Object $r3;
        org.apache.jena.atlas.lib.ColumnMap r0;

        r0 := @this: org.apache.jena.atlas.lib.ColumnMap;

        i0 := @parameter0: int;

        r2 := @parameter1: org.apache.jena.atlas.lib.Tuple;

        $r1 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] insertOrder>;

        i1 = $r1[i0];

        $r3 = virtualinvoke r2.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(i1);

        return $r3;
    }

    public java.lang.Object mapSlot(int, java.lang.Object[])
    {
        java.lang.Object[] r2;
        int[] $r1;
        int i0, i1;
        java.lang.Object $r3;
        org.apache.jena.atlas.lib.ColumnMap r0;

        r0 := @this: org.apache.jena.atlas.lib.ColumnMap;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object[];

        $r1 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] insertOrder>;

        i1 = $r1[i0];

        $r3 = r2[i1];

        return $r3;
    }

    public int mapSlotIdx(int)
    {
        int[] $r1;
        int i0, $i1;
        org.apache.jena.atlas.lib.ColumnMap r0;

        r0 := @this: org.apache.jena.atlas.lib.ColumnMap;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] insertOrder>;

        $i1 = $r1[i0];

        return $i1;
    }

    public int fetchSlotIdx(int)
    {
        int[] $r1;
        int i0, $i1;
        org.apache.jena.atlas.lib.ColumnMap r0;

        r0 := @this: org.apache.jena.atlas.lib.ColumnMap;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] fetchOrder>;

        $i1 = $r1[i0];

        return $i1;
    }

    public org.apache.jena.atlas.lib.Tuple map(org.apache.jena.atlas.lib.Tuple)
    {
        org.apache.jena.atlas.lib.Tuple r1, $r3;
        int[] $r2;
        org.apache.jena.atlas.lib.ColumnMap r0;

        r0 := @this: org.apache.jena.atlas.lib.ColumnMap;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $r2 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] insertOrder>;

        $r3 = specialinvoke r0.<org.apache.jena.atlas.lib.ColumnMap: org.apache.jena.atlas.lib.Tuple map(org.apache.jena.atlas.lib.Tuple,int[])>(r1, $r2);

        return $r3;
    }

    public org.apache.jena.atlas.lib.Tuple unmap(org.apache.jena.atlas.lib.Tuple)
    {
        org.apache.jena.atlas.lib.Tuple r1, $r3;
        int[] $r2;
        org.apache.jena.atlas.lib.ColumnMap r0;

        r0 := @this: org.apache.jena.atlas.lib.ColumnMap;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $r2 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] fetchOrder>;

        $r3 = specialinvoke r0.<org.apache.jena.atlas.lib.ColumnMap: org.apache.jena.atlas.lib.Tuple map(org.apache.jena.atlas.lib.Tuple,int[])>(r1, $r2);

        return $r3;
    }

    private org.apache.jena.atlas.lib.Tuple map(org.apache.jena.atlas.lib.Tuple, int[])
    {
        java.lang.Object[] $r1, r2;
        org.apache.jena.atlas.lib.Tuple r0, $r3;
        int[] r4;
        int $i0, $i1, i2, i3;
        java.lang.Object $r5;
        org.apache.jena.atlas.lib.ColumnMap r6;

        r6 := @this: org.apache.jena.atlas.lib.ColumnMap;

        r0 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        r4 := @parameter1: int[];

        $i0 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: int size()>();

        $r1 = newarray (java.lang.Object)[$i0];

        r2 = (java.lang.Object[]) $r1;

        i3 = 0;

     label1:
        $i1 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: int size()>();

        if i3 >= $i1 goto label2;

        i2 = r4[i3];

        $r5 = virtualinvoke r0.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(i3);

        r2[i2] = $r5;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r3 = staticinvoke <org.apache.jena.atlas.lib.Tuple: org.apache.jena.atlas.lib.Tuple create(java.lang.Object[])>(r2);

        return $r3;
    }

    static int[] compileMapping(java.lang.String, java.lang.String)
    {
        java.util.List $r1, $r3;
        int[] $r4;
        java.lang.String r0, r2;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.util.List toCharList(java.lang.String)>(r0);

        $r3 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.util.List toCharList(java.lang.String)>(r2);

        $r4 = staticinvoke <org.apache.jena.atlas.lib.ColumnMap: int[] compileMapping(java.util.List,java.util.List)>($r1, $r3);

        return $r4;
    }

    static int[] compileMapping(java.lang.Object[], java.lang.Object[])
    {
        java.util.List $r1, $r3;
        java.lang.Object[] r0, r2;
        int[] $r4;

        r0 := @parameter0: java.lang.Object[];

        r2 := @parameter1: java.lang.Object[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        $r4 = staticinvoke <org.apache.jena.atlas.lib.ColumnMap: int[] compileMapping(java.util.List,java.util.List)>($r1, $r3);

        return $r4;
    }

    static int[] compileMapping(java.util.List, java.util.List)
    {
        int[] r2;
        boolean $z0;
        org.apache.jena.atlas.AtlasException $r5, $r12, $r19;
        java.util.List r0, r1;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r17, $r20, $r21, $r22, $r23, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r11, $r18, $r25;
        boolean[] r3;
        java.lang.Object $r4;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        $r19 = new org.apache.jena.atlas.AtlasException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad mapping: lengths not the same: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.jena.atlas.AtlasException: void <init>(java.lang.String)>($r25);

        throw $r19;

     label1:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        r2 = newarray (int)[$i2];

        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        r3 = newarray (boolean)[$i3];

        i6 = 0;

     label2:
        $i4 = interfaceinvoke r0.<java.util.List: int size()>();

        if i6 >= $i4 goto label5;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i6);

        $i5 = interfaceinvoke r1.<java.util.List: int indexOf(java.lang.Object)>($r4);

        if $i5 >= 0 goto label3;

        $r12 = new org.apache.jena.atlas.AtlasException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad mapping: missing mapping: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.apache.jena.atlas.AtlasException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label3:
        $z0 = r3[$i5];

        if $z0 == 0 goto label4;

        $r5 = new org.apache.jena.atlas.AtlasException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad mapping: duplicate: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.jena.atlas.AtlasException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label4:
        r2[i6] = $i5;

        r3[$i5] = 1;

        i6 = i6 + 1;

        goto label2;

     label5:
        return r2;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r0;
        int[] $r3, $r5;
        java.lang.Object $r4, $r6;
        java.lang.String $r2, $r7;
        org.apache.jena.atlas.lib.ColumnMap r1;

        r1 := @this: org.apache.jena.atlas.lib.ColumnMap;

        $r0 = newarray (java.lang.Object)[3];

        $r2 = r1.<org.apache.jena.atlas.lib.ColumnMap: java.lang.String label>;

        $r0[0] = $r2;

        $r3 = r1.<org.apache.jena.atlas.lib.ColumnMap: int[] insertOrder>;

        $r4 = specialinvoke r1.<org.apache.jena.atlas.lib.ColumnMap: java.lang.Object mapStr(int[])>($r3);

        $r0[1] = $r4;

        $r5 = r1.<org.apache.jena.atlas.lib.ColumnMap: int[] fetchOrder>;

        $r6 = specialinvoke r1.<org.apache.jena.atlas.lib.ColumnMap: java.lang.Object mapStr(int[])>($r5);

        $r0[2] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s%s", $r0);

        return $r7;
    }

    private java.lang.Object mapStr(int[])
    {
        java.lang.Object[] $r3;
        java.lang.Integer $r4, $r5;
        int[] r1;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r6, r8;
        org.apache.jena.atlas.lib.ColumnMap r7;

        r7 := @this: org.apache.jena.atlas.lib.ColumnMap;

        r1 := @parameter0: int[];

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        r8 = "{";

        i2 = 0;

     label1:
        $i0 = lengthof r1;

        if i2 >= $i0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r8 = ", ";

        $r3 = newarray (java.lang.Object)[2];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r3[0] = $r4;

        $i1 = r1[i2];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d->%d", $r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String getLabel()
    {
        java.lang.String $r1;
        org.apache.jena.atlas.lib.ColumnMap r0;

        r0 := @this: org.apache.jena.atlas.lib.ColumnMap;

        $r1 = r0.<org.apache.jena.atlas.lib.ColumnMap: java.lang.String label>;

        return $r1;
    }

    public java.lang.String mapName(java.lang.String)
    {
        int[] $r2;
        java.lang.String r1, $r3;
        org.apache.jena.atlas.lib.ColumnMap r0;

        r0 := @this: org.apache.jena.atlas.lib.ColumnMap;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] insertOrder>;

        $r3 = specialinvoke r0.<org.apache.jena.atlas.lib.ColumnMap: java.lang.String mapString(java.lang.String,int[])>(r1, $r2);

        return $r3;
    }

    public java.lang.String unmapName(java.lang.String)
    {
        int[] $r2;
        java.lang.String r1, $r3;
        org.apache.jena.atlas.lib.ColumnMap r0;

        r0 := @this: org.apache.jena.atlas.lib.ColumnMap;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.atlas.lib.ColumnMap: int[] fetchOrder>;

        $r3 = specialinvoke r0.<org.apache.jena.atlas.lib.ColumnMap: java.lang.String mapString(java.lang.String,int[])>(r1, $r2);

        return $r3;
    }

    private java.lang.String mapString(java.lang.String, int[])
    {
        char $c3;
        int[] r3;
        int $i0, $i1, i2, i4;
        char[] r1;
        java.lang.String r0, $r2;
        org.apache.jena.atlas.lib.ColumnMap r4;

        r4 := @this: org.apache.jena.atlas.lib.ColumnMap;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: int[];

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        r1 = newarray (char)[$i0];

        i4 = 0;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 >= $i1 goto label2;

        i2 = r3[i4];

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        r1[i2] = $c3;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);

        return $r2;
    }
}
