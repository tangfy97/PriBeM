public final class org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl extends java.lang.Object implements org.waveprotocol.wave.model.document.AnnotationInterval
{
    private int start;
    private int end;
    private org.waveprotocol.wave.model.util.ReadableStringMap annotations;
    private org.waveprotocol.wave.model.util.ReadableStringMap diffFromLeft;

    public void <init>(int, int, org.waveprotocol.wave.model.util.ReadableStringMap, org.waveprotocol.wave.model.util.ReadableStringMap)
    {
        int i0, i1;
        org.waveprotocol.wave.model.util.ReadableStringMap r1, r2;
        org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.waveprotocol.wave.model.util.ReadableStringMap;

        r2 := @parameter3: org.waveprotocol.wave.model.util.ReadableStringMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: void set(int,int,org.waveprotocol.wave.model.util.ReadableStringMap,org.waveprotocol.wave.model.util.ReadableStringMap)>(i0, i1, r1, r2);

        return;
    }

    public void <init>(org.waveprotocol.wave.model.document.AnnotationInterval)
    {
        org.waveprotocol.wave.model.util.StringMap $r3, $r5;
        org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl r0;
        int $i0, $i1;
        org.waveprotocol.wave.model.util.ReadableStringMap $r2, $r4;
        org.waveprotocol.wave.model.document.AnnotationInterval r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.document.AnnotationInterval;

        $i0 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.AnnotationInterval: int start()>();

        $i1 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.AnnotationInterval: int end()>();

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.AnnotationInterval: org.waveprotocol.wave.model.util.ReadableStringMap annotations()>();

        $r3 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringMap copyStringMap(org.waveprotocol.wave.model.util.ReadableStringMap)>($r2);

        $r4 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.AnnotationInterval: org.waveprotocol.wave.model.util.ReadableStringMap diffFromLeft()>();

        $r5 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringMap copyStringMap(org.waveprotocol.wave.model.util.ReadableStringMap)>($r4);

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: void <init>(int,int,org.waveprotocol.wave.model.util.ReadableStringMap,org.waveprotocol.wave.model.util.ReadableStringMap)>($i0, $i1, $r3, $r5);

        return;
    }

    public void set(int, int, org.waveprotocol.wave.model.util.ReadableStringMap, org.waveprotocol.wave.model.util.ReadableStringMap)
    {
        int i0, i1;
        org.waveprotocol.wave.model.util.ReadableStringMap r0, r1;
        java.lang.IllegalArgumentException $r3;
        org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl r2;

        r2 := @this: org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: org.waveprotocol.wave.model.util.ReadableStringMap;

        r1 := @parameter3: org.waveprotocol.wave.model.util.ReadableStringMap;

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void checkPositionIndexes(int,int,int)>(i0, i1, 2147483647);

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "annotations must not be null");

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "diffFromPrevious must not be null");

        if i0 < i1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attempt to set AnnotationInterval to zero length");

        throw $r3;

     label1:
        r2.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: int start> = i0;

        r2.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: int end> = i1;

        r2.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: org.waveprotocol.wave.model.util.ReadableStringMap annotations> = r0;

        r2.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: org.waveprotocol.wave.model.util.ReadableStringMap diffFromLeft> = r1;

        return;
    }

    public int start()
    {
        int $i0;
        org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl;

        $i0 = r0.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: int start>;

        return $i0;
    }

    public int end()
    {
        int $i0;
        org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl;

        $i0 = r0.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: int end>;

        return $i0;
    }

    public int length()
    {
        int $i0, $i1, $i2;
        org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl;

        $i1 = r0.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: int end>;

        $i0 = r0.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: int start>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public org.waveprotocol.wave.model.util.ReadableStringMap annotations()
    {
        org.waveprotocol.wave.model.util.ReadableStringMap $r1;
        org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: org.waveprotocol.wave.model.util.ReadableStringMap annotations>;

        return $r1;
    }

    public org.waveprotocol.wave.model.util.ReadableStringMap diffFromLeft()
    {
        org.waveprotocol.wave.model.util.ReadableStringMap $r1;
        org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: org.waveprotocol.wave.model.util.ReadableStringMap diffFromLeft>;

        return $r1;
    }

    private java.lang.String mapToString(org.waveprotocol.wave.model.util.ReadableStringMap)
    {
        boolean[] $r1;
        java.lang.StringBuilder $r0;
        org.waveprotocol.wave.model.util.ReadableStringMap r2;
        java.lang.String $r5;
        org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl r4;
        org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl$1 $r3;

        r4 := @this: org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl;

        r2 := @parameter0: org.waveprotocol.wave.model.util.ReadableStringMap;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("{");

        $r1 = newarray (boolean)[1];

        $r1[0] = 1;

        $r3 = new org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl$1;

        specialinvoke $r3.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl$1: void <init>(org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl,boolean[],java.lang.StringBuilder)>(r4, $r1, $r0);

        interfaceinvoke r2.<org.waveprotocol.wave.model.util.ReadableStringMap: void each(org.waveprotocol.wave.model.util.ReadableStringMap$ProcV)>($r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String toString()
    {
        int $i0, $i1;
        org.waveprotocol.wave.model.util.ReadableStringMap $r7, $r11;
        java.lang.String $r8, $r12, $r15;
        org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl r2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r9, $r10, $r13, $r14;

        r2 := @this: org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AnnotationIntervalImpl(");

        $i0 = r2.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: int start>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i1 = r2.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: int end>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r7 = r2.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: org.waveprotocol.wave.model.util.ReadableStringMap annotations>;

        $r8 = specialinvoke r2.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: java.lang.String mapToString(org.waveprotocol.wave.model.util.ReadableStringMap)>($r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r11 = r2.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: org.waveprotocol.wave.model.util.ReadableStringMap diffFromLeft>;

        $r12 = specialinvoke r2.<org.waveprotocol.wave.model.document.util.AnnotationIntervalImpl: java.lang.String mapToString(org.waveprotocol.wave.model.util.ReadableStringMap)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }
}
