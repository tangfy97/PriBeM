public class org.apache.jena.fuseki.servlets.REST_Quads extends org.apache.jena.fuseki.servlets.SPARQL_REST
{
    static int counter;

    public void <init>()
    {
        org.apache.jena.fuseki.servlets.REST_Quads r0;

        r0 := @this: org.apache.jena.fuseki.servlets.REST_Quads;

        specialinvoke r0.<org.apache.jena.fuseki.servlets.SPARQL_REST: void <init>()>();

        return;
    }

    protected void validate(org.apache.jena.fuseki.servlets.HttpAction)
    {
        org.apache.jena.fuseki.servlets.REST_Quads r0;
        org.apache.jena.fuseki.servlets.HttpAction r1;

        r0 := @this: org.apache.jena.fuseki.servlets.REST_Quads;

        r1 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        return;
    }

    protected void doGet(org.apache.jena.fuseki.servlets.HttpAction)
    {
        java.lang.Throwable $r18;
        java.lang.Object[] $r11;
        long $l0;
        java.lang.Long $r13;
        javax.servlet.ServletOutputStream r21;
        org.apache.jena.atlas.web.TypedOutputStream $r3;
        java.lang.String $r4, $r10, $r14, $r15, $r16, $r17;
        boolean $z0, $z1;
        org.apache.jena.riot.Lang $r5, r22;
        org.slf4j.Logger $r12;
        org.apache.jena.fuseki.servlets.REST_Quads r20;
        java.io.IOException $r19;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r6;
        org.apache.jena.fuseki.servlets.HttpServletResponseTracker $r2;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        java.lang.StringBuilder $r7, $r8, $r9;
        org.apache.jena.atlas.web.MediaType $r1;

        r20 := @this: org.apache.jena.fuseki.servlets.REST_Quads;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        $r1 = staticinvoke <org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.atlas.web.MediaType contentNegotationQuads(org.apache.jena.fuseki.servlets.HttpAction)>(r0);

     label01:
        $r2 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.servlets.HttpServletResponseTracker response>;

        r21 = virtualinvoke $r2.<org.apache.jena.fuseki.servlets.HttpServletResponseTracker: javax.servlet.ServletOutputStream getOutputStream()>();

     label02:
        goto label04;

     label03:
        $r19 := @caughtexception;

        staticinvoke <org.apache.jena.fuseki.servlets.REST_Quads: void errorOccurred(java.lang.Throwable)>($r19);

        r21 = null;

     label04:
        $r3 = new org.apache.jena.atlas.web.TypedOutputStream;

        specialinvoke $r3.<org.apache.jena.atlas.web.TypedOutputStream: void <init>(java.io.OutputStream,org.apache.jena.atlas.web.MediaType)>(r21, $r1);

        $r4 = virtualinvoke $r1.<org.apache.jena.atlas.web.MediaType: java.lang.String getContentType()>();

        $r5 = staticinvoke <org.apache.jena.riot.WebContent: org.apache.jena.riot.Lang contentTypeToLang(java.lang.String)>($r4);

        r22 = $r5;

        if $r5 != null goto label05;

        r22 = <org.apache.jena.riot.RDFLanguages: org.apache.jena.riot.Lang TRIG>;

     label05:
        $z0 = r0.<org.apache.jena.fuseki.servlets.HttpAction: boolean verbose>;

        if $z0 == 0 goto label06;

        $r12 = <org.apache.jena.fuseki.servlets.REST_Quads: org.slf4j.Logger log>;

        $r11 = newarray (java.lang.Object)[4];

        $l0 = r0.<org.apache.jena.fuseki.servlets.HttpAction: long id>;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r11[0] = $r13;

        $r14 = virtualinvoke $r1.<org.apache.jena.atlas.web.MediaType: java.lang.String getContentType()>();

        $r11[1] = $r14;

        $r15 = virtualinvoke $r1.<org.apache.jena.atlas.web.MediaType: java.lang.String getCharset()>();

        $r11[2] = $r15;

        $r16 = virtualinvoke r22.<org.apache.jena.riot.Lang: java.lang.String getName()>();

        $r11[3] = $r16;

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%d]   Get: Content-Type=%s, Charset=%s => %s", $r11);

        interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>($r17);

     label06:
        $z1 = staticinvoke <org.apache.jena.riot.RDFLanguages: boolean isQuads(org.apache.jena.riot.Lang)>(r22);

        if $z1 != 0 goto label07;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a quads format: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.fuseki.servlets.REST_Quads: void errorBadRequest(java.lang.String)>($r10);

     label07:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void beginRead()>();

     label08:
        $r6 = virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph getActiveDSG()>();

        staticinvoke <org.apache.jena.riot.RDFDataMgr: void write(java.io.OutputStream,com.hp.hpl.jena.sparql.core.DatasetGraph,org.apache.jena.riot.Lang)>($r3, $r6, r22);

        staticinvoke <org.apache.jena.fuseki.servlets.REST_Quads: void success(org.apache.jena.fuseki.servlets.HttpAction)>(r0);

     label09:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void endRead()>();

        goto label12;

     label10:
        $r18 := @caughtexception;

     label11:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void endRead()>();

        throw $r18;

     label12:
        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    protected void doOptions(org.apache.jena.fuseki.servlets.HttpAction)
    {
        org.apache.jena.fuseki.servlets.HttpServletResponseTracker $r1, $r2;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        org.apache.jena.fuseki.servlets.REST_Quads r3;

        r3 := @this: org.apache.jena.fuseki.servlets.REST_Quads;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        $r1 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.servlets.HttpServletResponseTracker response>;

        virtualinvoke $r1.<org.apache.jena.fuseki.servlets.HttpServletResponseTracker: void setHeader(java.lang.String,java.lang.String)>("Allow", "GET, HEAD, OPTIONS");

        $r2 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.servlets.HttpServletResponseTracker response>;

        virtualinvoke $r2.<org.apache.jena.fuseki.servlets.HttpServletResponseTracker: void setHeader(java.lang.String,java.lang.String)>("Content-Length", "0");

        staticinvoke <org.apache.jena.fuseki.servlets.REST_Quads: void success(org.apache.jena.fuseki.servlets.HttpAction)>(r0);

        return;
    }

    protected void doHead(org.apache.jena.fuseki.servlets.HttpAction)
    {
        java.lang.Throwable $r1;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        org.apache.jena.fuseki.servlets.REST_Quads r2;

        r2 := @this: org.apache.jena.fuseki.servlets.REST_Quads;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void beginRead()>();

     label1:
        staticinvoke <org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.atlas.web.MediaType contentNegotationQuads(org.apache.jena.fuseki.servlets.HttpAction)>(r0);

        staticinvoke <org.apache.jena.fuseki.servlets.REST_Quads: void success(org.apache.jena.fuseki.servlets.HttpAction)>(r0);

     label2:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void endRead()>();

        goto label5;

     label3:
        $r1 := @caughtexception;

     label4:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void endRead()>();

        throw $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void doPost(org.apache.jena.fuseki.servlets.HttpAction)
    {
        java.lang.Object[] $r12;
        long $l0;
        javax.servlet.http.HttpServletRequest $r2;
        java.lang.Long $r14;
        java.lang.String $r3, $r5, $r10, $r15, $r16, $r17, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.jena.riot.Lang $r6, r19;
        org.slf4j.Logger $r13;
        org.apache.jena.fuseki.servlets.REST_Quads r11;
        org.apache.jena.fuseki.server.DatasetRef $r1;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        java.lang.StringBuilder $r7, $r8, $r9;
        org.apache.jena.atlas.web.MediaType $r4;

        r11 := @this: org.apache.jena.fuseki.servlets.REST_Quads;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        $r1 = virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.server.DatasetRef getDatasetRef()>();

        $z0 = $r1.<org.apache.jena.fuseki.server.DatasetRef: boolean allowDatasetUpdate>;

        if $z0 != 0 goto label1;

        staticinvoke <org.apache.jena.fuseki.servlets.REST_Quads: void errorMethodNotAllowed(java.lang.String)>("POST");

     label1:
        $z5 = <org.apache.jena.fuseki.Fuseki: boolean graphStoreProtocolPostCreate>;

        $r2 = r0.<org.apache.jena.fuseki.servlets.HttpAction: javax.servlet.http.HttpServletRequest request>;

        $r3 = interfaceinvoke $r2.<javax.servlet.http.HttpServletRequest: java.lang.String getContentType()>();

        if $r3 != null goto label2;

        staticinvoke <org.apache.jena.fuseki.servlets.REST_Quads: void errorBadRequest(java.lang.String)>("Content-type required for data format");

     label2:
        $r4 = staticinvoke <org.apache.jena.atlas.web.MediaType: org.apache.jena.atlas.web.MediaType create(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<org.apache.jena.atlas.web.MediaType: java.lang.String getContentType()>();

        $r6 = staticinvoke <org.apache.jena.riot.WebContent: org.apache.jena.riot.Lang contentTypeToLang(java.lang.String)>($r5);

        r19 = $r6;

        if $r6 != null goto label3;

        r19 = <org.apache.jena.riot.RDFLanguages: org.apache.jena.riot.Lang TRIG>;

     label3:
        $z1 = r0.<org.apache.jena.fuseki.servlets.HttpAction: boolean verbose>;

        if $z1 == 0 goto label4;

        $r13 = <org.apache.jena.fuseki.servlets.REST_Quads: org.slf4j.Logger log>;

        $r12 = newarray (java.lang.Object)[4];

        $l0 = r0.<org.apache.jena.fuseki.servlets.HttpAction: long id>;

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r12[0] = $r14;

        $r15 = virtualinvoke $r4.<org.apache.jena.atlas.web.MediaType: java.lang.String getContentType()>();

        $r12[1] = $r15;

        $r16 = virtualinvoke $r4.<org.apache.jena.atlas.web.MediaType: java.lang.String getCharset()>();

        $r12[2] = $r16;

        $r17 = virtualinvoke r19.<org.apache.jena.riot.Lang: java.lang.String getName()>();

        $r12[3] = $r17;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%d]   Post: Content-Type=%s, Charset=%s => %s", $r12);

        interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String)>($r18);

     label4:
        $z2 = staticinvoke <org.apache.jena.riot.RDFLanguages: boolean isQuads(org.apache.jena.riot.Lang)>(r19);

        if $z2 == 0 goto label5;

        virtualinvoke r11.<org.apache.jena.fuseki.servlets.REST_Quads: void doPostQuads(org.apache.jena.fuseki.servlets.HttpAction,org.apache.jena.riot.Lang)>(r0, r19);

        goto label8;

     label5:
        if $z5 == 0 goto label6;

        $z4 = staticinvoke <org.apache.jena.riot.RDFLanguages: boolean isTriples(org.apache.jena.riot.Lang)>(r19);

        if $z4 == 0 goto label6;

        virtualinvoke r11.<org.apache.jena.fuseki.servlets.REST_Quads: void doPostTriplesGSP(org.apache.jena.fuseki.servlets.HttpAction,org.apache.jena.riot.Lang)>(r0, r19);

        goto label8;

     label6:
        $z3 = staticinvoke <org.apache.jena.riot.RDFLanguages: boolean isTriples(org.apache.jena.riot.Lang)>(r19);

        if $z3 == 0 goto label7;

        virtualinvoke r11.<org.apache.jena.fuseki.servlets.REST_Quads: void doPostTriples(org.apache.jena.fuseki.servlets.HttpAction,org.apache.jena.riot.Lang)>(r0, r19);

        goto label8;

     label7:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a triples or quads format: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.fuseki.servlets.REST_Quads: void errorBadRequest(java.lang.String)>($r10);

     label8:
        return;
    }

    protected void doPostQuads(org.apache.jena.fuseki.servlets.HttpAction, org.apache.jena.riot.Lang)
    {
        java.lang.Throwable $r10;
        org.apache.jena.riot.Lang r8;
        javax.servlet.ServletInputStream $r7;
        org.apache.jena.fuseki.servlets.REST_Quads r12;
        org.apache.jena.riot.system.StreamRDF $r5;
        java.io.IOException $r11;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r4;
        javax.servlet.http.HttpServletRequest $r1, $r6;
        org.apache.jena.riot.lang.LangRIOT $r9;
        java.lang.StringBuffer $r2;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        java.lang.String $r3;

        r12 := @this: org.apache.jena.fuseki.servlets.REST_Quads;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        r8 := @parameter1: org.apache.jena.riot.Lang;

        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void beginWrite()>();

     label1:
        $r1 = r0.<org.apache.jena.fuseki.servlets.HttpAction: javax.servlet.http.HttpServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph getActiveDSG()>();

        $r5 = staticinvoke <org.apache.jena.riot.system.StreamRDFLib: org.apache.jena.riot.system.StreamRDF dataset(com.hp.hpl.jena.sparql.core.DatasetGraph)>($r4);

        $r6 = r0.<org.apache.jena.fuseki.servlets.HttpAction: javax.servlet.http.HttpServletRequest request>;

        $r7 = interfaceinvoke $r6.<javax.servlet.http.HttpServletRequest: javax.servlet.ServletInputStream getInputStream()>();

        $r9 = staticinvoke <org.apache.jena.riot.RiotReader: org.apache.jena.riot.lang.LangRIOT createParser(java.io.InputStream,org.apache.jena.riot.Lang,java.lang.String,org.apache.jena.riot.system.StreamRDF)>($r7, r8, $r3, $r5);

        interfaceinvoke $r9.<org.apache.jena.riot.lang.LangRIOT: void parse()>();

        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void commit()>();

        staticinvoke <org.apache.jena.fuseki.servlets.REST_Quads: void success(org.apache.jena.fuseki.servlets.HttpAction)>(r0);

     label2:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void endWrite()>();

        goto label7;

     label3:
        $r11 := @caughtexception;

        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void abort()>();

     label4:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void endWrite()>();

        goto label7;

     label5:
        $r10 := @caughtexception;

     label6:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void endWrite()>();

        throw $r10;

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected void doPostTriples(org.apache.jena.fuseki.servlets.HttpAction, org.apache.jena.riot.Lang)
    {
        java.lang.Throwable $r11;
        org.apache.jena.riot.Lang r9;
        javax.servlet.ServletInputStream $r8;
        org.apache.jena.fuseki.servlets.REST_Quads r13;
        org.apache.jena.riot.system.StreamRDF $r6;
        java.io.IOException $r12;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        javax.servlet.http.HttpServletRequest $r2, $r7;
        org.apache.jena.riot.lang.LangRIOT $r10;
        java.lang.StringBuffer $r3;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        java.lang.String $r4;
        com.hp.hpl.jena.graph.Graph $r5;

        r13 := @this: org.apache.jena.fuseki.servlets.REST_Quads;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        r9 := @parameter1: org.apache.jena.riot.Lang;

        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void beginWrite()>();

     label1:
        $r1 = virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph getActiveDSG()>();

        $r2 = r0.<org.apache.jena.fuseki.servlets.HttpAction: javax.servlet.http.HttpServletRequest request>;

        $r3 = interfaceinvoke $r2.<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.graph.Graph getDefaultGraph()>();

        $r6 = staticinvoke <org.apache.jena.riot.system.StreamRDFLib: org.apache.jena.riot.system.StreamRDF graph(com.hp.hpl.jena.graph.Graph)>($r5);

        $r7 = r0.<org.apache.jena.fuseki.servlets.HttpAction: javax.servlet.http.HttpServletRequest request>;

        $r8 = interfaceinvoke $r7.<javax.servlet.http.HttpServletRequest: javax.servlet.ServletInputStream getInputStream()>();

        $r10 = staticinvoke <org.apache.jena.riot.RiotReader: org.apache.jena.riot.lang.LangRIOT createParser(java.io.InputStream,org.apache.jena.riot.Lang,java.lang.String,org.apache.jena.riot.system.StreamRDF)>($r8, r9, $r4, $r6);

        interfaceinvoke $r10.<org.apache.jena.riot.lang.LangRIOT: void parse()>();

        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void commit()>();

        staticinvoke <org.apache.jena.fuseki.servlets.REST_Quads: void success(org.apache.jena.fuseki.servlets.HttpAction)>(r0);

     label2:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void endWrite()>();

        goto label7;

     label3:
        $r12 := @caughtexception;

        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void abort()>();

     label4:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void endWrite()>();

        goto label7;

     label5:
        $r11 := @caughtexception;

     label6:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void endWrite()>();

        throw $r11;

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected void doPostTriplesGSP(org.apache.jena.fuseki.servlets.HttpAction, org.apache.jena.riot.Lang)
    {
        com.hp.hpl.jena.graph.Node $r9;
        java.lang.Long $r18;
        boolean $z0;
        org.apache.jena.fuseki.servlets.REST_Quads r26;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        java.lang.StringBuilder $r5, $r6, $r7, $r21, $r22, $r23;
        java.lang.Throwable $r24;
        java.lang.Object[] $r16;
        javax.servlet.ServletInputStream $r13;
        long $l2;
        javax.servlet.http.HttpServletRequest $r2, $r12;
        org.apache.jena.riot.lang.LangRIOT $r15;
        java.lang.StringBuffer $r3;
        int $i0, $i1;
        java.lang.String $r4, $r8, $r19, r27;
        com.hp.hpl.jena.graph.Graph $r10;
        org.apache.jena.riot.Lang r14;
        org.slf4j.Logger $r17;
        org.apache.jena.riot.system.StreamRDF $r11;
        java.io.IOException $r25;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        org.apache.jena.fuseki.servlets.HttpServletResponseTracker $r20;

        r26 := @this: org.apache.jena.fuseki.servlets.REST_Quads;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        r14 := @parameter1: org.apache.jena.riot.Lang;

        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void beginWrite()>();

     label1:
        $r1 = virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph getActiveDSG()>();

        $r2 = r0.<org.apache.jena.fuseki.servlets.HttpAction: javax.servlet.http.HttpServletRequest request>;

        $r3 = interfaceinvoke $r2.<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        r27 = $r4;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 != 0 goto label2;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $i0 = <org.apache.jena.fuseki.servlets.REST_Quads: int counter>;

        $i1 = $i0 + 1;

        <org.apache.jena.fuseki.servlets.REST_Quads: int counter> = $i1;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>($r8);

        $r10 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.graph.Node)>($r9);

        $r11 = staticinvoke <org.apache.jena.riot.system.StreamRDFLib: org.apache.jena.riot.system.StreamRDF graph(com.hp.hpl.jena.graph.Graph)>($r10);

        $r12 = r0.<org.apache.jena.fuseki.servlets.HttpAction: javax.servlet.http.HttpServletRequest request>;

        $r13 = interfaceinvoke $r12.<javax.servlet.http.HttpServletRequest: javax.servlet.ServletInputStream getInputStream()>();

        $r15 = staticinvoke <org.apache.jena.riot.RiotReader: org.apache.jena.riot.lang.LangRIOT createParser(java.io.InputStream,org.apache.jena.riot.Lang,java.lang.String,org.apache.jena.riot.system.StreamRDF)>($r13, r14, $r8, $r11);

        interfaceinvoke $r15.<org.apache.jena.riot.lang.LangRIOT: void parse()>();

        $r17 = <org.apache.jena.fuseki.servlets.REST_Quads: org.slf4j.Logger log>;

        $r16 = newarray (java.lang.Object)[2];

        $l2 = r0.<org.apache.jena.fuseki.servlets.HttpAction: long id>;

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r16[0] = $r18;

        $r16[1] = $r8;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%d] Location: %s", $r16);

        interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String)>($r19);

        $r20 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.servlets.HttpServletResponseTracker response>;

        virtualinvoke $r20.<org.apache.jena.fuseki.servlets.HttpServletResponseTracker: void setHeader(java.lang.String,java.lang.String)>("Location", $r8);

        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void commit()>();

        staticinvoke <org.apache.jena.fuseki.servlets.REST_Quads: void successCreated(org.apache.jena.fuseki.servlets.HttpAction)>(r0);

     label3:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void endWrite()>();

        goto label8;

     label4:
        $r25 := @caughtexception;

        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void abort()>();

     label5:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void endWrite()>();

        goto label8;

     label6:
        $r24 := @caughtexception;

     label7:
        virtualinvoke r0.<org.apache.jena.fuseki.servlets.HttpAction: void endWrite()>();

        throw $r24;

     label8:
        return;

        catch java.io.IOException from label1 to label3 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    protected void doDelete(org.apache.jena.fuseki.servlets.HttpAction)
    {
        org.apache.jena.fuseki.servlets.REST_Quads r0;
        org.apache.jena.fuseki.servlets.HttpAction r1;

        r0 := @this: org.apache.jena.fuseki.servlets.REST_Quads;

        r1 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        staticinvoke <org.apache.jena.fuseki.servlets.REST_Quads: void errorMethodNotAllowed(java.lang.String)>("DELETE");

        return;
    }

    protected void doPut(org.apache.jena.fuseki.servlets.HttpAction)
    {
        org.apache.jena.fuseki.servlets.REST_Quads r0;
        org.apache.jena.fuseki.servlets.HttpAction r1;

        r0 := @this: org.apache.jena.fuseki.servlets.REST_Quads;

        r1 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        staticinvoke <org.apache.jena.fuseki.servlets.REST_Quads: void errorMethodNotAllowed(java.lang.String)>("PUT");

        return;
    }

    protected void doPatch(org.apache.jena.fuseki.servlets.HttpAction)
    {
        org.apache.jena.fuseki.servlets.REST_Quads r0;
        org.apache.jena.fuseki.servlets.HttpAction r1;

        r0 := @this: org.apache.jena.fuseki.servlets.REST_Quads;

        r1 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        staticinvoke <org.apache.jena.fuseki.servlets.REST_Quads: void errorMethodNotAllowed(java.lang.String)>("PATCH");

        return;
    }

    static void <clinit>()
    {
        <org.apache.jena.fuseki.servlets.REST_Quads: int counter> = 0;

        return;
    }
}
