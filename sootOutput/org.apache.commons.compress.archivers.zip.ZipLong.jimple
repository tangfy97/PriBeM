public final class org.apache.commons.compress.archivers.zip.ZipLong extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private static final int BYTE_1;
    private static final int BYTE_1_MASK;
    private static final int BYTE_1_SHIFT;
    private static final int BYTE_2;
    private static final int BYTE_2_MASK;
    private static final int BYTE_2_SHIFT;
    private static final int BYTE_3;
    private static final long BYTE_3_MASK;
    private static final int BYTE_3_SHIFT;
    private final long value;
    public static final org.apache.commons.compress.archivers.zip.ZipLong CFH_SIG;
    public static final org.apache.commons.compress.archivers.zip.ZipLong LFH_SIG;
    public static final org.apache.commons.compress.archivers.zip.ZipLong DD_SIG;
    static final org.apache.commons.compress.archivers.zip.ZipLong ZIP64_MAGIC;
    public static final org.apache.commons.compress.archivers.zip.ZipLong SINGLE_SEGMENT_SPLIT_MARKER;
    public static final org.apache.commons.compress.archivers.zip.ZipLong AED_SIG;

    public void <init>(long)
    {
        org.apache.commons.compress.archivers.zip.ZipLong r0;
        long l0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipLong;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.compress.archivers.zip.ZipLong: long value> = l0;

        return;
    }

    public void <init>(byte[])
    {
        org.apache.commons.compress.archivers.zip.ZipLong r0;
        byte[] r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipLong;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.apache.commons.compress.archivers.zip.ZipLong: void <init>(byte[],int)>(r1, 0);

        return;
    }

    public void <init>(byte[], int)
    {
        byte[] r1;
        int i0;
        org.apache.commons.compress.archivers.zip.ZipLong r0;
        long $l1;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipLong;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l1 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipLong: long getValue(byte[],int)>(r1, i0);

        r0.<org.apache.commons.compress.archivers.zip.ZipLong: long value> = $l1;

        return;
    }

    public byte[] getBytes()
    {
        org.apache.commons.compress.archivers.zip.ZipLong r0;
        byte[] $r1;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipLong;

        $l0 = r0.<org.apache.commons.compress.archivers.zip.ZipLong: long value>;

        $r1 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipLong: byte[] getBytes(long)>($l0);

        return $r1;
    }

    public long getValue()
    {
        org.apache.commons.compress.archivers.zip.ZipLong r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipLong;

        $l0 = r0.<org.apache.commons.compress.archivers.zip.ZipLong: long value>;

        return $l0;
    }

    public static byte[] getBytes(long)
    {
        byte[] r0;
        long l0, $l1, $l4, $l5, $l8, $l9, $l12, $l13;
        byte $b3, $b7, $b11, $b15;
        int $i2, $i6, $i10, $i14;

        l0 := @parameter0: long;

        r0 = newarray (byte)[4];

        $l1 = l0 & 255L;

        $i2 = (int) $l1;

        $b3 = (byte) $i2;

        r0[0] = $b3;

        $l4 = l0 & 65280L;

        $l5 = $l4 >> 8;

        $i6 = (int) $l5;

        $b7 = (byte) $i6;

        r0[1] = $b7;

        $l8 = l0 & 16711680L;

        $l9 = $l8 >> 16;

        $i10 = (int) $l9;

        $b11 = (byte) $i10;

        r0[2] = $b11;

        $l12 = l0 & 4278190080L;

        $l13 = $l12 >> 24;

        $i14 = (int) $l13;

        $b15 = (byte) $i14;

        r0[3] = $b15;

        return r0;
    }

    public static long getValue(byte[], int)
    {
        byte[] r0;
        long $l4, $l9, $l14, $l17, l18, l19, l20, l21;
        short $s16, $s27;
        byte $b2, $b6, $b11, $b15;
        int i0, $i1, $i3, $i5, $i7, $i8, $i10, $i12, $i13, $i22, $i23, $i24, $i26;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 + 3;

        $b2 = r0[$i1];

        $i22 = (int) $b2;

        $i3 = $i22 << 24;

        $l4 = (long) $i3;

        l18 = $l4 & 4278190080L;

        $i5 = i0 + 2;

        $b6 = r0[$i5];

        $i23 = (int) $b6;

        $i7 = $i23 << 16;

        $i8 = $i7 & 16711680;

        $l9 = (long) $i8;

        l19 = l18 + $l9;

        $i10 = i0 + 1;

        $b11 = r0[$i10];

        $i24 = (int) $b11;

        $i12 = $i24 << 8;

        $i26 = (int) 65280;

        $i13 = $i12 & $i26;

        $l14 = (long) $i13;

        l20 = l19 + $l14;

        $b15 = r0[i0];

        $s27 = (short) $b15;

        $s16 = $s27 & 255;

        $l17 = (long) $s16;

        l21 = l20 + $l17;

        return l21;
    }

    public static long getValue(byte[])
    {
        byte[] r0;
        long $l0;

        r0 := @parameter0: byte[];

        $l0 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipLong: long getValue(byte[],int)>(r0, 0);

        return $l0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.compress.archivers.zip.ZipLong r1, $r2;
        long $l0, $l1;
        byte $b2;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.apache.commons.compress.archivers.zip.ZipLong;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof org.apache.commons.compress.archivers.zip.ZipLong;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $l0 = r1.<org.apache.commons.compress.archivers.zip.ZipLong: long value>;

        $r2 = (org.apache.commons.compress.archivers.zip.ZipLong) r0;

        $l1 = virtualinvoke $r2.<org.apache.commons.compress.archivers.zip.ZipLong: long getValue()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public int hashCode()
    {
        int $i1;
        org.apache.commons.compress.archivers.zip.ZipLong r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipLong;

        $l0 = r0.<org.apache.commons.compress.archivers.zip.ZipLong: long value>;

        $i1 = (int) $l0;

        return $i1;
    }

    public java.lang.Object clone()
    {
        org.apache.commons.compress.archivers.zip.ZipLong r0;
        java.lang.Object $r1;
        java.lang.RuntimeException $r3;
        java.lang.CloneNotSupportedException $r2;

        r0 := @this: org.apache.commons.compress.archivers.zip.ZipLong;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        org.apache.commons.compress.archivers.zip.ZipLong r2;
        java.lang.StringBuilder $r0, $r1, $r3;
        long $l0;
        java.lang.String $r4;

        r2 := @this: org.apache.commons.compress.archivers.zip.ZipLong;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ZipLong value: ");

        $l0 = r2.<org.apache.commons.compress.archivers.zip.ZipLong: long value>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    static void <clinit>()
    {
        org.apache.commons.compress.archivers.zip.ZipLong $r0, $r1, $r2, $r3, $r4, $r5;

        <org.apache.commons.compress.archivers.zip.ZipLong: int BYTE_3_SHIFT> = 24;

        <org.apache.commons.compress.archivers.zip.ZipLong: long BYTE_3_MASK> = 4278190080L;

        <org.apache.commons.compress.archivers.zip.ZipLong: int BYTE_3> = 3;

        <org.apache.commons.compress.archivers.zip.ZipLong: int BYTE_2_SHIFT> = 16;

        <org.apache.commons.compress.archivers.zip.ZipLong: int BYTE_2_MASK> = 16711680;

        <org.apache.commons.compress.archivers.zip.ZipLong: int BYTE_2> = 2;

        <org.apache.commons.compress.archivers.zip.ZipLong: int BYTE_1_SHIFT> = 8;

        <org.apache.commons.compress.archivers.zip.ZipLong: int BYTE_1_MASK> = 65280;

        <org.apache.commons.compress.archivers.zip.ZipLong: int BYTE_1> = 1;

        <org.apache.commons.compress.archivers.zip.ZipLong: long serialVersionUID> = 1L;

        $r0 = new org.apache.commons.compress.archivers.zip.ZipLong;

        specialinvoke $r0.<org.apache.commons.compress.archivers.zip.ZipLong: void <init>(long)>(33639248L);

        <org.apache.commons.compress.archivers.zip.ZipLong: org.apache.commons.compress.archivers.zip.ZipLong CFH_SIG> = $r0;

        $r1 = new org.apache.commons.compress.archivers.zip.ZipLong;

        specialinvoke $r1.<org.apache.commons.compress.archivers.zip.ZipLong: void <init>(long)>(67324752L);

        <org.apache.commons.compress.archivers.zip.ZipLong: org.apache.commons.compress.archivers.zip.ZipLong LFH_SIG> = $r1;

        $r2 = new org.apache.commons.compress.archivers.zip.ZipLong;

        specialinvoke $r2.<org.apache.commons.compress.archivers.zip.ZipLong: void <init>(long)>(134695760L);

        <org.apache.commons.compress.archivers.zip.ZipLong: org.apache.commons.compress.archivers.zip.ZipLong DD_SIG> = $r2;

        $r3 = new org.apache.commons.compress.archivers.zip.ZipLong;

        specialinvoke $r3.<org.apache.commons.compress.archivers.zip.ZipLong: void <init>(long)>(4294967295L);

        <org.apache.commons.compress.archivers.zip.ZipLong: org.apache.commons.compress.archivers.zip.ZipLong ZIP64_MAGIC> = $r3;

        $r4 = new org.apache.commons.compress.archivers.zip.ZipLong;

        specialinvoke $r4.<org.apache.commons.compress.archivers.zip.ZipLong: void <init>(long)>(808471376L);

        <org.apache.commons.compress.archivers.zip.ZipLong: org.apache.commons.compress.archivers.zip.ZipLong SINGLE_SEGMENT_SPLIT_MARKER> = $r4;

        $r5 = new org.apache.commons.compress.archivers.zip.ZipLong;

        specialinvoke $r5.<org.apache.commons.compress.archivers.zip.ZipLong: void <init>(long)>(134630224L);

        <org.apache.commons.compress.archivers.zip.ZipLong: org.apache.commons.compress.archivers.zip.ZipLong AED_SIG> = $r5;

        return;
    }
}
