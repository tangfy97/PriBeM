class org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Round extends java.lang.Object implements org.apache.pdfbox.pdmodel.common.function.type4.Operator
{

    void <init>()
    {
        org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Round r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Round;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)
    {
        java.lang.Float $r3;
        org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext r0;
        long $l0;
        java.lang.Integer $r5;
        java.util.Stack $r2, $r4;
        org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Round r6;
        int $i1;
        float $f0;
        java.lang.Number $r1;
        boolean $z0;
        double $d0;

        r6 := @this: org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Round;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.lang.Number popNumber()>();

        $z0 = $r1 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack getStack()>();

        $i1 = virtualinvoke $r1.<java.lang.Number: int intValue()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r4.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r5);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack getStack()>();

        $d0 = virtualinvoke $r1.<java.lang.Number: double doubleValue()>();

        $l0 = staticinvoke <java.lang.Math: long round(double)>($d0);

        $f0 = (float) $l0;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r3);

     label2:
        return;
    }
}
