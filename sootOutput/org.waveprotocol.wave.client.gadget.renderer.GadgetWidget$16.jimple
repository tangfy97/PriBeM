class org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$16 extends org.waveprotocol.wave.client.scheduler.ScheduleTimer
{
    final org.waveprotocol.wave.client.gadget.renderer.GadgetWidget this$0;

    void <init>(org.waveprotocol.wave.client.gadget.renderer.GadgetWidget)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget r1;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$16 r0;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$16;

        r1 := @parameter0: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget;

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$16: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.client.scheduler.ScheduleTimer: void <init>()>();

        return;
    }

    public void run()
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$16 r0;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget $r1, $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$16;

        $r1 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$16: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget this$0>;

        $z0 = staticinvoke <org.waveprotocol.wave.client.gadget.renderer.GadgetWidget: boolean access$000(org.waveprotocol.wave.client.gadget.renderer.GadgetWidget)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget$16: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget this$0>;

        staticinvoke <org.waveprotocol.wave.client.gadget.renderer.GadgetWidget: void access$2200(org.waveprotocol.wave.client.gadget.renderer.GadgetWidget)>($r2);

     label1:
        return;
    }
}
