public final class org.waveprotocol.wave.concurrencycontrol.gson.WaveletChannelTerminatorGsonImpl extends org.waveprotocol.wave.concurrencycontrol.impl.WaveletChannelTerminatorImpl implements org.waveprotocol.wave.communication.gson.GsonSerializable
{

    public void <init>()
    {
        org.waveprotocol.wave.concurrencycontrol.gson.WaveletChannelTerminatorGsonImpl r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.gson.WaveletChannelTerminatorGsonImpl;

        specialinvoke r0.<org.waveprotocol.wave.concurrencycontrol.impl.WaveletChannelTerminatorImpl: void <init>()>();

        return;
    }

    public void <init>(org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator)
    {
        org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator r1;
        org.waveprotocol.wave.concurrencycontrol.gson.WaveletChannelTerminatorGsonImpl r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.gson.WaveletChannelTerminatorGsonImpl;

        r1 := @parameter0: org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator;

        specialinvoke r0.<org.waveprotocol.wave.concurrencycontrol.impl.WaveletChannelTerminatorImpl: void <init>(org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator)>(r1);

        return;
    }

    public com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData, com.google.gson.Gson)
    {
        com.google.gson.JsonElement $r3;
        com.google.gson.Gson r2;
        org.waveprotocol.wave.communication.json.RawStringData r1;
        org.waveprotocol.wave.concurrencycontrol.gson.WaveletChannelTerminatorGsonImpl r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.gson.WaveletChannelTerminatorGsonImpl;

        r1 := @parameter0: org.waveprotocol.wave.communication.json.RawStringData;

        r2 := @parameter1: com.google.gson.Gson;

        $r3 = staticinvoke <org.waveprotocol.wave.concurrencycontrol.gson.WaveletChannelTerminatorGsonImpl: com.google.gson.JsonElement toGsonHelper(org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator,org.waveprotocol.wave.communication.json.RawStringData,com.google.gson.Gson)>(r0, r1, r2);

        return $r3;
    }

    public static com.google.gson.JsonElement toGsonHelper(org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator, org.waveprotocol.wave.communication.json.RawStringData, com.google.gson.Gson)
    {
        com.google.gson.JsonElement $r5;
        com.google.gson.JsonObject $r0;
        com.google.gson.Gson r4;
        org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator r1;
        org.waveprotocol.wave.concurrencycontrol.ResponseStatus $r2;
        org.waveprotocol.wave.communication.json.RawStringData r3;

        r1 := @parameter0: org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator;

        r3 := @parameter1: org.waveprotocol.wave.communication.json.RawStringData;

        r4 := @parameter2: com.google.gson.Gson;

        $r0 = new com.google.gson.JsonObject;

        specialinvoke $r0.<com.google.gson.JsonObject: void <init>()>();

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.concurrencycontrol.WaveletChannelTerminator: org.waveprotocol.wave.concurrencycontrol.ResponseStatus getStatus()>();

        $r5 = staticinvoke <org.waveprotocol.wave.concurrencycontrol.gson.ResponseStatusGsonImpl: com.google.gson.JsonElement toGsonHelper(org.waveprotocol.wave.concurrencycontrol.ResponseStatus,org.waveprotocol.wave.communication.json.RawStringData,com.google.gson.Gson)>($r2, r3, r4);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("1", $r5);

        return $r0;
    }

    public void fromGson(com.google.gson.JsonElement, com.google.gson.Gson, org.waveprotocol.wave.communication.json.RawStringData) throws org.waveprotocol.wave.communication.gson.GsonException
    {
        com.google.gson.JsonObject $r2;
        org.waveprotocol.wave.concurrencycontrol.gson.ResponseStatusGsonImpl $r3;
        org.waveprotocol.wave.communication.json.RawStringData r6;
        com.google.gson.JsonElement r1, $r4;
        com.google.gson.Gson r5;
        org.waveprotocol.wave.concurrencycontrol.gson.WaveletChannelTerminatorGsonImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.gson.WaveletChannelTerminatorGsonImpl;

        r1 := @parameter0: com.google.gson.JsonElement;

        r5 := @parameter1: com.google.gson.Gson;

        r6 := @parameter2: org.waveprotocol.wave.communication.json.RawStringData;

        virtualinvoke r0.<org.waveprotocol.wave.concurrencycontrol.gson.WaveletChannelTerminatorGsonImpl: void reset()>();

        $r2 = virtualinvoke r1.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        $z0 = virtualinvoke $r2.<com.google.gson.JsonObject: boolean has(java.lang.String)>("1");

        if $z0 == 0 goto label1;

        $r3 = new org.waveprotocol.wave.concurrencycontrol.gson.ResponseStatusGsonImpl;

        specialinvoke $r3.<org.waveprotocol.wave.concurrencycontrol.gson.ResponseStatusGsonImpl: void <init>()>();

        $r4 = virtualinvoke $r2.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("1");

        staticinvoke <org.waveprotocol.wave.communication.gson.GsonUtil: void extractJsonObject(org.waveprotocol.wave.communication.gson.GsonSerializable,com.google.gson.JsonElement,com.google.gson.Gson,org.waveprotocol.wave.communication.json.RawStringData)>($r3, $r4, r5, r6);

        virtualinvoke r0.<org.waveprotocol.wave.concurrencycontrol.gson.WaveletChannelTerminatorGsonImpl: void setStatus(org.waveprotocol.wave.concurrencycontrol.ResponseStatus)>($r3);

     label1:
        return;
    }
}
