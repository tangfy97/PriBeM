public class org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode extends org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeImpl
{
    private org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier modifier;

    public void <init>(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier)
    {
        org.apache.lucene.queryparser.flexible.core.QueryNodeError $r4;
        java.lang.Object[] $r6;
        org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier $r1, r3;
        org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode r0;
        org.apache.lucene.queryparser.flexible.messages.MessageImpl $r5;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r2;
        java.lang.String $r7;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode;

        r2 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        r3 := @parameter1: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeImpl: void <init>()>();

        $r1 = <org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier MOD_NONE>;

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier modifier> = $r1;

        if r2 != null goto label1;

        $r4 = new org.apache.lucene.queryparser.flexible.core.QueryNodeError;

        $r5 = new org.apache.lucene.queryparser.flexible.messages.MessageImpl;

        $r7 = <org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages: java.lang.String PARAMETER_VALUE_NOT_SUPPORTED>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "query";

        $r6[1] = "null";

        specialinvoke $r5.<org.apache.lucene.queryparser.flexible.messages.MessageImpl: void <init>(java.lang.String,java.lang.Object[])>($r7, $r6);

        specialinvoke $r4.<org.apache.lucene.queryparser.flexible.core.QueryNodeError: void <init>(org.apache.lucene.queryparser.flexible.messages.Message)>($r5);

        throw $r4;

     label1:
        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: void allocate()>();

        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: void setLeaf(boolean)>(0);

        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: void add(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)>(r2);

        r0.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier modifier> = r3;

        return;
    }

    public org.apache.lucene.queryparser.flexible.core.nodes.QueryNode getChild()
    {
        org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode r0;
        java.util.List $r1;
        java.lang.Object $r2;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode $r3;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: java.util.List getChildren()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) $r2;

        return $r3;
    }

    public org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier getModifier()
    {
        org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier $r1;
        org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier modifier>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier $r3;
        org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode r2;
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r7, $r10, $r11;
        java.lang.String $r4, $r9, $r12;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode $r8;

        r2 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<modifier operation=\'");

        $r3 = r2.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier modifier>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'>");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke r2.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode getChild()>();

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n</modifier>");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public java.lang.CharSequence toQueryString(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)
    {
        org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier $r4, $r15;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode $r1, $r2, $r8, $r19, $r24, $r27;
        boolean $z0, $z1;
        java.lang.CharSequence $r10, $r20;
        org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode r0;
        java.lang.StringBuilder $r3, $r6, $r7, $r11, $r12, $r14, $r17, $r18, $r21, $r22;
        java.lang.String $r5, $r13, $r16, $r23, r25, r26, r28, r29, r30, r31;
        org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax r9;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode;

        r9 := @parameter0: org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode getChild()>();

        if $r1 != null goto label1;

        return "";

     label1:
        r25 = "";

        r31 = "";

        r30 = "";

        r26 = "";

        r29 = "";

        r28 = "";

        $r2 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode getChild()>();

        if $r2 == null goto label2;

        $r24 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode getChild()>();

        $z0 = $r24 instanceof org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode;

        if $z0 == 0 goto label2;

        r25 = "(";

        r31 = "(";

        r30 = "(";

        r26 = ")";

        r29 = ")";

        r28 = ")";

     label2:
        $r27 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode getChild()>();

        $z1 = $r27 instanceof org.apache.lucene.queryparser.flexible.core.nodes.BooleanQueryNode;

        if $z1 == 0 goto label3;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier modifier>;

        $r16 = virtualinvoke $r15.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier: java.lang.String toLargeString()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r19 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode getChild()>();

        $r20 = interfaceinvoke $r19.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNode: java.lang.CharSequence toQueryString(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)>(r9);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r23;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier modifier>;

        $r5 = virtualinvoke $r4.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier: java.lang.String toDigitString()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r8 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode getChild()>();

        $r10 = interfaceinvoke $r8.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNode: java.lang.CharSequence toQueryString(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)>(r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public org.apache.lucene.queryparser.flexible.core.nodes.QueryNode cloneTree() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier $r3;
        org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode r0, r2;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode;

        $r1 = specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeImpl: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode cloneTree()>();

        r2 = (org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode) $r1;

        $r3 = r0.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier modifier>;

        r2.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode$Modifier modifier> = $r3;

        return r2;
    }

    public void setChild(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)
    {
        org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode r2;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r1;
        java.util.ArrayList $r0;

        r2 := @this: org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode;

        r1 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r1);

        virtualinvoke r2.<org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode: void set(java.util.List)>($r0);

        return;
    }
}
