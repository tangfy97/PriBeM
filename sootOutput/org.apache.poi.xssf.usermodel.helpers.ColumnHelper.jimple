public class org.apache.poi.xssf.usermodel.helpers.ColumnHelper extends java.lang.Object
{
    private org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet worksheet;
    private org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols newCols;
    static final boolean $assertionsDisabled;

    public void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet)
    {
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet r1;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        r1 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet worksheet> = r1;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: void cleanColumns()>();

        return;
    }

    public void cleanColumns()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol r17;
        java.lang.AssertionError $r21;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols $r1, $r2, $r8, $r10, r19;
        int $i0, $i1, i2, $i4;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r5, $r15;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r0;
        java.util.List $r4, $r6, $r7, $r14;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet $r3, $r9, $r11, $r12;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[] r20;
        java.lang.Object $r13, $r16;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        $r1 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols newInstance()>();

        r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols newCols> = $r1;

        $r2 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols newInstance()>();

        $r3 = r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet worksheet>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet: java.util.List getColsList()>();

        $z0 = <org.apache.poi.xssf.usermodel.helpers.ColumnHelper: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $r4 != null goto label1;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r13 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r19 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols) $r13;

        $r14 = interfaceinvoke r19.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: java.util.List getColList()>();

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol) $r16;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol cloneCol(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)>($r2, r17);

        goto label3;

     label4:
        goto label2;

     label5:
        staticinvoke <org.apache.poi.xssf.usermodel.helpers.ColumnHelper: void sortColumns(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols)>($r2);

        $r6 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: java.util.List getColList()>();

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        r20 = newarray (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)[$i0];

        $r7 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: java.util.List getColList()>();

        interfaceinvoke $r7.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r20);

        $r8 = r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols newCols>;

        specialinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: void sweepCleanColumns(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[],org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)>($r8, r20, null);

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        i2 = $i1 - 1;

     label6:
        if i2 < 0 goto label7;

        $r12 = r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet worksheet>;

        interfaceinvoke $r12.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet: void removeCols(int)>(i2);

        $i4 = (int) -1;

        i2 = i2 + $i4;

        goto label6;

     label7:
        $r9 = r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet worksheet>;

        interfaceinvoke $r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols addNewCols()>();

        $r11 = r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet worksheet>;

        $r10 = r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols newCols>;

        interfaceinvoke $r11.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet: void setColsArray(int,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols)>(0, $r10);

        return;
    }

    private void sweepCleanColumns(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols, org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[], org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)
    {
        byte $b2, $b4, $b6, $b8, $b9, $b12, $b19, $b20, $b21;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols r6;
        java.lang.Object[] $r18, $r23;
        long $l0, $l1, $l3, $l5, $l7, $l10, $l11, l13, l14, l15, $l16, l17, $l18, $l22;
        java.util.TreeSet $r32;
        java.util.ArrayList $r30;
        java.util.SortedSet $r14;
        java.util.ListIterator $r5;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol r8, r10, r13, r21, $r27, r28, r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.util.List $r2;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper$CTColByMaxComparator $r31;
        java.util.HashSet $r33;
        int $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        java.util.Iterator $r9, $r15;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r16;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[] r1, $r17, $r19, $r22, $r24;
        java.lang.Object $r7, $r12, $r20, $r25, $r26;

        r16 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        r6 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols;

        r1 := @parameter1: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[];

        r10 := @parameter2: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol;

        $r30 = new java.util.ArrayList;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        specialinvoke $r30.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r32 = new java.util.TreeSet;

        $r31 = new org.apache.poi.xssf.usermodel.helpers.ColumnHelper$CTColByMaxComparator;

        specialinvoke $r31.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper$CTColByMaxComparator: void <init>(org.apache.poi.xssf.usermodel.helpers.ColumnHelper$1)>(null);

        specialinvoke $r32.<java.util.TreeSet: void <init>(java.util.Comparator)>($r31);

        $r5 = interfaceinvoke $r30.<java.util.List: java.util.ListIterator listIterator()>();

        r28 = null;

        l13 = 0L;

        l14 = 0L;

     label01:
        $z0 = interfaceinvoke $r5.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label22;

        $r7 = interfaceinvoke $r5.<java.util.ListIterator: java.lang.Object next()>();

        r8 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol) $r7;

        $l0 = interfaceinvoke r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMin()>();

        l15 = $l0;

        $l1 = interfaceinvoke r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMax()>();

        $b2 = $l1 cmp l14;

        $i23 = (int) $b2;

        if $i23 <= 0 goto label02;

        $l16 = interfaceinvoke r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMax()>();

        goto label03;

     label02:
        $l16 = l14;

     label03:
        l17 = $l16;

        $z1 = interfaceinvoke $r5.<java.util.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r26 = interfaceinvoke $r5.<java.util.ListIterator: java.lang.Object next()>();

        $r27 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol) $r26;

        l17 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMin()>();

        interfaceinvoke $r5.<java.util.ListIterator: java.lang.Object previous()>();

     label04:
        $r9 = virtualinvoke $r32.<java.util.TreeSet: java.util.Iterator iterator()>();

     label05:
        $z11 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label07;

        $r25 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r29 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol) $r25;

        $l11 = interfaceinvoke r29.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMax()>();

        $b12 = $l0 cmp $l11;

        $i24 = (int) $b12;

        if $i24 > 0 goto label06;

        goto label07;

     label06:
        interfaceinvoke $r9.<java.util.Iterator: void remove()>();

        goto label05;

     label07:
        $z2 = virtualinvoke $r32.<java.util.TreeSet: boolean isEmpty()>();

        if $z2 != 0 goto label08;

        $b9 = l13 cmp $l0;

        $i25 = (int) $b9;

        if $i25 >= 0 goto label08;

        $l10 = $l0 - 1L;

        $r22 = newarray (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)[0];

        $r23 = virtualinvoke $r32.<java.util.TreeSet: java.lang.Object[] toArray(java.lang.Object[])>($r22);

        $r24 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[]) $r23;

        specialinvoke r16.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol insertCol(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols,long,long,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[],boolean,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)>(r6, l13, $l10, $r24, 1, r28);

     label08:
        virtualinvoke $r32.<java.util.TreeSet: boolean add(java.lang.Object)>(r8);

        $l18 = interfaceinvoke r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMax()>();

        $b19 = $l18 cmp l14;

        $i26 = (int) $b19;

        if $i26 <= 0 goto label09;

        l14 = interfaceinvoke r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMax()>();

     label09:
        $z3 = virtualinvoke r8.<java.lang.Object: boolean equals(java.lang.Object)>(r10);

        if $z3 == 0 goto label10;

        r28 = r10;

     label10:
        $b20 = l15 cmp l17;

        $i27 = (int) $b20;

        if $i27 > 0 goto label21;

        $z4 = virtualinvoke $r32.<java.util.TreeSet: boolean isEmpty()>();

        if $z4 != 0 goto label21;

        $r33 = new java.util.HashSet;

        specialinvoke $r33.<java.util.HashSet: void <init>()>();

        $r12 = virtualinvoke $r32.<java.util.TreeSet: java.lang.Object first()>();

        r13 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol) $r12;

        $l3 = interfaceinvoke r13.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMax()>();

        interfaceinvoke $r33.<java.util.Set: boolean add(java.lang.Object)>(r13);

        $r14 = virtualinvoke $r32.<java.util.TreeSet: java.util.SortedSet tailSet(java.lang.Object)>(r13);

        $r15 = interfaceinvoke $r14.<java.util.SortedSet: java.util.Iterator iterator()>();

     label11:
        $z5 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label15;

        $r20 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r21 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol) $r20;

        if r21 == null goto label15;

        $l5 = interfaceinvoke r21.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMax()>();

        $b6 = $l5 cmp $l3;

        if $b6 != 0 goto label12;

        goto label15;

     label12:
        interfaceinvoke $r33.<java.util.Set: boolean add(java.lang.Object)>(r21);

        $l7 = interfaceinvoke r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMax()>();

        $b8 = $l7 cmp l14;

        $i28 = (int) $b8;

        if $i28 <= 0 goto label13;

        l14 = interfaceinvoke r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMax()>();

     label13:
        $z10 = virtualinvoke r8.<java.lang.Object: boolean equals(java.lang.Object)>(r10);

        if $z10 == 0 goto label14;

        r28 = r10;

     label14:
        goto label11;

     label15:
        $b21 = $l3 cmp l17;

        $i29 = (int) $b21;

        if $i29 < 0 goto label16;

        $z9 = interfaceinvoke $r5.<java.util.ListIterator: boolean hasNext()>();

        if $z9 != 0 goto label19;

     label16:
        $r17 = newarray (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)[0];

        $r18 = virtualinvoke $r32.<java.util.TreeSet: java.lang.Object[] toArray(java.lang.Object[])>($r17);

        $r19 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[]) $r18;

        specialinvoke r16.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol insertCol(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols,long,long,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[],boolean,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)>(r6, l15, $l3, $r19, 1, r28);

        $z6 = interfaceinvoke $r5.<java.util.ListIterator: boolean hasNext()>();

        if $z6 == 0 goto label17;

        $b4 = l17 cmp $l3;

        $i30 = (int) $b4;

        if $i30 <= 0 goto label18;

        virtualinvoke $r32.<java.util.TreeSet: boolean removeAll(java.util.Collection)>($r33);

        $z8 = interfaceinvoke $r33.<java.util.Set: boolean contains(java.lang.Object)>(r10);

        if $z8 == 0 goto label18;

        r28 = null;

        goto label18;

     label17:
        virtualinvoke $r32.<java.util.TreeSet: boolean removeAll(java.util.Collection)>($r33);

        $z7 = interfaceinvoke $r33.<java.util.Set: boolean contains(java.lang.Object)>(r10);

        if $z7 == 0 goto label18;

        r28 = null;

     label18:
        $l22 = $l3 + 1L;

        l15 = $l22;

        l13 = $l22;

        goto label20;

     label19:
        l13 = l15;

        l15 = l17 + 1L;

     label20:
        goto label10;

     label21:
        goto label01;

     label22:
        staticinvoke <org.apache.poi.xssf.usermodel.helpers.ColumnHelper: void sortColumns(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols)>(r6);

        return;
    }

    public static void sortColumns(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols)
    {
        java.util.List $r1, $r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[] r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols r0;
        int $i0;
        org.apache.poi.xssf.util.CTColComparator $r4;

        r0 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: java.util.List getColList()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        r2 = newarray (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)[$i0];

        $r3 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: java.util.List getColList()>();

        interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        $r4 = new org.apache.poi.xssf.util.CTColComparator;

        specialinvoke $r4.<org.apache.poi.xssf.util.CTColComparator: void <init>()>();

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r2, $r4);

        interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: void setColArray(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[])>(r2);

        return;
    }

    public org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol cloneCol(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols, org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol $r1, r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols r0;
        long $l0, $l1;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r3;

        r3 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        r0 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols;

        r2 := @parameter1: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol addNewCol()>();

        $l0 = interfaceinvoke r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMin()>();

        interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setMin(long)>($l0);

        $l1 = interfaceinvoke r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMax()>();

        interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setMax(long)>($l1);

        virtualinvoke r3.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: void setColumnAttributes(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)>(r2, $r1);

        return $r1;
    }

    public org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getColumn(long, boolean)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol $r1;
        long l0, $l1;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $l1 = l0 + 1L;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getColumn1Based(long,boolean)>($l1, z0);

        return $r1;
    }

    public org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getColumn1Based(long, boolean)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol r4;
        long $l1, l2, $l4, $l6, $l8, $l10, $l11, $l12, $l13;
        byte $b3, $b5, $b7, $b9;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols $r2;
        int $i0, i14, $i15, $i16, $i17, $i18;
        boolean z0;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet $r1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[] $r3, $r5, $r6;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        l2 := @parameter0: long;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet worksheet>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols getColsArray(int)>(0);

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[] getColArray()>();

        i14 = 0;

     label1:
        $i0 = lengthof $r3;

        if i14 >= $i0 goto label6;

        r4 = $r3[i14];

        $l1 = interfaceinvoke r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMin()>();

        $b3 = $l1 cmp l2;

        $i15 = (int) $b3;

        if $i15 > 0 goto label5;

        $l4 = interfaceinvoke r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMax()>();

        $b5 = $l4 cmp l2;

        $i16 = (int) $b5;

        if $i16 < 0 goto label5;

        if z0 == 0 goto label4;

        $l6 = interfaceinvoke r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMin()>();

        $b7 = $l6 cmp l2;

        $i17 = (int) $b7;

        if $i17 >= 0 goto label2;

        $l12 = interfaceinvoke r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMin()>();

        $l13 = l2 - 1L;

        $r6 = newarray (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)[1];

        $r6[0] = r4;

        specialinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol insertCol(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols,long,long,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[])>($r2, $l12, $l13, $r6);

     label2:
        $l8 = interfaceinvoke r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMax()>();

        $b9 = $l8 cmp l2;

        $i18 = (int) $b9;

        if $i18 <= 0 goto label3;

        $l10 = l2 + 1L;

        $l11 = interfaceinvoke r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMax()>();

        $r5 = newarray (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)[1];

        $r5[0] = r4;

        specialinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol insertCol(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols,long,long,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[])>($r2, $l10, $l11, $r5);

     label3:
        interfaceinvoke r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setMin(long)>(l2);

        interfaceinvoke r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setMax(long)>(l2);

     label4:
        return r4;

     label5:
        i14 = i14 + 1;

        goto label1;

     label6:
        return null;
    }

    public org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols addCleanColIntoCols(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols, org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol r5, r12;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols $r0, r1, $r8;
        int $i0, $i1;
        boolean $z0;
        java.util.Iterator $r3;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r4;
        java.util.List $r2, $r6, $r7, $r9, $r10;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[] r13, r14;
        java.lang.Object $r11;

        r4 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        r1 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols;

        r5 := @parameter1: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol;

        $r0 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols newInstance()>();

        $r2 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: java.util.List getColList()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol) $r11;

        virtualinvoke r4.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol cloneCol(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)>($r0, r12);

        goto label1;

     label2:
        virtualinvoke r4.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol cloneCol(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)>($r0, r5);

        staticinvoke <org.apache.poi.xssf.usermodel.helpers.ColumnHelper: void sortColumns(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols)>($r0);

        $r6 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: java.util.List getColList()>();

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        r13 = newarray (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)[$i0];

        $r7 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: java.util.List getColList()>();

        interfaceinvoke $r7.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r13);

        $r8 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols newInstance()>();

        specialinvoke r4.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: void sweepCleanColumns(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[],org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)>($r8, r13, r5);

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: java.util.List getColList()>();

        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        r14 = newarray (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)[$i1];

        $r10 = interfaceinvoke $r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: java.util.List getColList()>();

        interfaceinvoke $r10.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r14);

        interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: void setColArray(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[])>(r14);

        return $r8;
    }

    private org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol insertCol(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols, long, long, org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[])
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[] r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol $r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols r1;
        long l0, l1;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r0;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        r1 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[];

        $r3 = specialinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol insertCol(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols,long,long,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[],boolean,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)>(r1, l0, l1, r2, 0, null);

        return $r3;
    }

    private org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol insertCol(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols, long, long, org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[], boolean, org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol $r1, r3, r5;
        long l0, l1;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[] r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols r0;
        int $i2, i3;
        boolean z0, $z1;

        r4 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        r0 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol[];

        z0 := @parameter4: boolean;

        r3 := @parameter5: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol;

        if z0 != 0 goto label1;

        $z1 = specialinvoke r4.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: boolean columnExists(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols,long,long)>(r0, l0, l1);

        if $z1 != 0 goto label5;

     label1:
        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol insertNewCol(int)>(0);

        interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setMin(long)>(l0);

        interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setMax(long)>(l1);

        $i2 = lengthof r2;

        i3 = 0;

     label2:
        if i3 >= $i2 goto label3;

        r5 = r2[i3];

        virtualinvoke r4.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: void setColumnAttributes(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)>(r5, $r1);

        i3 = i3 + 1;

        goto label2;

     label3:
        if r3 == null goto label4;

        virtualinvoke r4.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: void setColumnAttributes(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)>(r3, $r1);

     label4:
        return $r1;

     label5:
        return null;
    }

    public boolean columnExists(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols, long)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols r1;
        long l0, $l1;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        r1 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols;

        l0 := @parameter1: long;

        $l1 = l0 + 1L;

        $z0 = specialinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: boolean columnExists1Based(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols,long)>(r1, $l1);

        return $z0;
    }

    private boolean columnExists1Based(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols, long)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol $r1;
        long $l1, l2;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r2;
        byte $b3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols r0;
        int $i0, i4;

        r2 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        r0 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols;

        l2 := @parameter1: long;

        i4 = 0;

     label1:
        $i0 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: int sizeOfColArray()>();

        if i4 >= $i0 goto label3;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getColArray(int)>(i4);

        $l1 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMin()>();

        $b3 = $l1 cmp l2;

        if $b3 != 0 goto label2;

        return 1;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return 0;
    }

    public void setColumnAttributes(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol, org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol r0, r1;
        long $l1;
        short $s0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        double $d0;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r2;

        r2 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        r0 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol;

        r1 := @parameter1: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol;

        $z0 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: boolean isSetBestFit()>();

        if $z0 == 0 goto label1;

        $z13 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: boolean getBestFit()>();

        interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setBestFit(boolean)>($z13);

     label1:
        $z1 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: boolean isSetCustomWidth()>();

        if $z1 == 0 goto label2;

        $z12 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: boolean getCustomWidth()>();

        interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setCustomWidth(boolean)>($z12);

     label2:
        $z2 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: boolean isSetHidden()>();

        if $z2 == 0 goto label3;

        $z11 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: boolean getHidden()>();

        interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setHidden(boolean)>($z11);

     label3:
        $z3 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: boolean isSetStyle()>();

        if $z3 == 0 goto label4;

        $l1 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getStyle()>();

        interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setStyle(long)>($l1);

     label4:
        $z4 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: boolean isSetWidth()>();

        if $z4 == 0 goto label5;

        $d0 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: double getWidth()>();

        interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setWidth(double)>($d0);

     label5:
        $z5 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: boolean isSetCollapsed()>();

        if $z5 == 0 goto label6;

        $z10 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: boolean getCollapsed()>();

        interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setCollapsed(boolean)>($z10);

     label6:
        $z6 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: boolean isSetPhonetic()>();

        if $z6 == 0 goto label7;

        $z9 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: boolean getPhonetic()>();

        interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setPhonetic(boolean)>($z9);

     label7:
        $z7 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: boolean isSetOutlineLevel()>();

        if $z7 == 0 goto label8;

        $s0 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: short getOutlineLevel()>();

        interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setOutlineLevel(short)>($s0);

     label8:
        $z8 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: boolean isSetCollapsed()>();

        interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setCollapsed(boolean)>($z8);

        return;
    }

    public void setColBestFit(long, boolean)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol $r1;
        long l0, $l1;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $l1 = l0 + 1L;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getOrCreateColumn1Based(long,boolean)>($l1, 0);

        interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setBestFit(boolean)>(z0);

        return;
    }

    public void setCustomWidth(long, boolean)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol $r1;
        long l0, $l1;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $l1 = l0 + 1L;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getOrCreateColumn1Based(long,boolean)>($l1, 1);

        interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setCustomWidth(boolean)>(z0);

        return;
    }

    public void setColWidth(long, double)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol $r1;
        long l0, $l1;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r0;
        double d0;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        l0 := @parameter0: long;

        d0 := @parameter1: double;

        $l1 = l0 + 1L;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getOrCreateColumn1Based(long,boolean)>($l1, 1);

        interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setWidth(double)>(d0);

        return;
    }

    public void setColHidden(long, boolean)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol $r1;
        long l0, $l1;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $l1 = l0 + 1L;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getOrCreateColumn1Based(long,boolean)>($l1, 1);

        interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setHidden(boolean)>(z0);

        return;
    }

    protected org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getOrCreateColumn1Based(long, boolean)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol $r1, $r4, r5;
        long l0;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols $r3;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getColumn1Based(long,boolean)>(l0, z0);

        r5 = $r1;

        if $r1 != null goto label1;

        $r2 = r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet worksheet>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols getColsArray(int)>(0);

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol addNewCol()>();

        r5 = $r4;

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setMin(long)>(l0);

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setMax(long)>(l0);

     label1:
        return r5;
    }

    public void setColDefaultStyle(long, org.apache.poi.ss.usermodel.CellStyle)
    {
        short $s1;
        int $i2;
        long l0;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r0;
        org.apache.poi.ss.usermodel.CellStyle r1;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        l0 := @parameter0: long;

        r1 := @parameter1: org.apache.poi.ss.usermodel.CellStyle;

        $s1 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.CellStyle: short getIndex()>();

        $i2 = (int) $s1;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: void setColDefaultStyle(long,int)>(l0, $i2);

        return;
    }

    public void setColDefaultStyle(long, int)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol $r1;
        int i2;
        long l0, $l1, $l3;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r0;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        l0 := @parameter0: long;

        i2 := @parameter1: int;

        $l1 = l0 + 1L;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getOrCreateColumn1Based(long,boolean)>($l1, 1);

        $l3 = (long) i2;

        interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: void setStyle(long)>($l3);

        return;
    }

    public int getColDefaultStyle(long)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol $r1, $r2;
        int $i2, $i4;
        long l0, $l1;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r0;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getColumn(long,boolean)>(l0, 0);

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getColumn(long,boolean)>(l0, 0);

        $l1 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getStyle()>();

        $i2 = (int) $l1;

        return $i2;

     label1:
        $i4 = (int) -1;

        return $i4;
    }

    private boolean columnExists(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols, long, long)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol $r1, $r2;
        long $l1, l2, $l4, l5;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r3;
        byte $b3, $b6;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols r0;
        int $i0, i7;

        r3 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        r0 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols;

        l2 := @parameter1: long;

        l5 := @parameter2: long;

        i7 = 0;

     label1:
        $i0 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: int sizeOfColArray()>();

        if i7 >= $i0 goto label3;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getColArray(int)>(i7);

        $l1 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMin()>();

        $b3 = $l1 cmp l2;

        if $b3 != 0 goto label2;

        $r2 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getColArray(int)>(i7);

        $l4 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMax()>();

        $b6 = $l4 cmp l5;

        if $b6 != 0 goto label2;

        return 1;

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        return 0;
    }

    public int getIndexOfColumn(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols, org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol $r1, r2, $r3;
        long $l1, $l2, $l4, $l5;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper r4;
        byte $b3, $b6;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols r0;
        int $i0, i7, $i9;

        r4 := @this: org.apache.poi.xssf.usermodel.helpers.ColumnHelper;

        r0 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols;

        r2 := @parameter1: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol;

        i7 = 0;

     label1:
        $i0 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: int sizeOfColArray()>();

        if i7 >= $i0 goto label3;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getColArray(int)>(i7);

        $l1 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMin()>();

        $l2 = interfaceinvoke r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMin()>();

        $b3 = $l1 cmp $l2;

        if $b3 != 0 goto label2;

        $r3 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCols: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getColArray(int)>(i7);

        $l4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMax()>();

        $l5 = interfaceinvoke r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: long getMax()>();

        $b6 = $l4 cmp $l5;

        if $b6 != 0 goto label2;

        return i7;

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        $i9 = (int) -1;

        return $i9;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/poi/xssf/usermodel/helpers/ColumnHelper;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.poi.xssf.usermodel.helpers.ColumnHelper: boolean $assertionsDisabled> = $z1;

        return;
    }
}
