public final class org.apache.log4j.DefaultThrowableRenderer extends java.lang.Object implements org.apache.log4j.spi.ThrowableRenderer
{

    public void <init>()
    {
        org.apache.log4j.DefaultThrowableRenderer r0;

        r0 := @this: org.apache.log4j.DefaultThrowableRenderer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String[] doRender(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        java.lang.String[] $r1;
        org.apache.log4j.DefaultThrowableRenderer r2;

        r2 := @this: org.apache.log4j.DefaultThrowableRenderer;

        r0 := @parameter0: java.lang.Throwable;

        $r1 = staticinvoke <org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>(r0);

        return $r1;
    }

    public static java.lang.String[] render(java.lang.Throwable)
    {
        java.io.PrintWriter $r1;
        java.lang.Throwable r2;
        java.io.StringWriter $r0;
        java.io.LineNumberReader $r3;
        java.io.IOException $r7;
        java.lang.String[] $r12;
        java.lang.RuntimeException $r10;
        java.util.ArrayList $r6;
        java.io.StringReader $r4;
        java.lang.Thread $r9;
        int $i0;
        java.lang.String $r5, $r8, r11;
        boolean $z0;

        r2 := @parameter0: java.lang.Throwable;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.Writer)>($r0);

     label01:
        virtualinvoke r2.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r1);

     label02:
        goto label04;

     label03:
        $r10 := @caughtexception;

     label04:
        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        $r3 = new java.io.LineNumberReader;

        $r4 = new java.io.StringReader;

        $r5 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        specialinvoke $r4.<java.io.StringReader: void <init>(java.lang.String)>($r5);

        specialinvoke $r3.<java.io.LineNumberReader: void <init>(java.io.Reader)>($r4);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

     label05:
        r11 = virtualinvoke $r3.<java.io.LineNumberReader: java.lang.String readLine()>();

     label06:
        if r11 == null goto label07;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r11);

        r11 = virtualinvoke $r3.<java.io.LineNumberReader: java.lang.String readLine()>();

        goto label06;

     label07:
        goto label10;

     label08:
        $r7 := @caughtexception;

        $z0 = $r7 instanceof java.io.InterruptedIOException;

        if $z0 == 0 goto label09;

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r9.<java.lang.Thread: void interrupt()>();

     label09:
        $r8 = virtualinvoke $r7.<java.lang.Throwable: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label10:
        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $r12 = newarray (java.lang.String)[$i0];

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        return $r12;

        catch java.lang.RuntimeException from label01 to label02 with label03;
        catch java.io.IOException from label05 to label07 with label08;
    }
}
