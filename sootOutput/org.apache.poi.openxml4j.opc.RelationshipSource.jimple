public interface  org.apache.poi.openxml4j.opc.RelationshipSource extends java.lang.Object
{

    public abstract org.apache.poi.openxml4j.opc.PackageRelationship addRelationship(org.apache.poi.openxml4j.opc.PackagePartName, org.apache.poi.openxml4j.opc.TargetMode, java.lang.String);

    public abstract org.apache.poi.openxml4j.opc.PackageRelationship addRelationship(org.apache.poi.openxml4j.opc.PackagePartName, org.apache.poi.openxml4j.opc.TargetMode, java.lang.String, java.lang.String);

    public abstract org.apache.poi.openxml4j.opc.PackageRelationship addExternalRelationship(java.lang.String, java.lang.String);

    public abstract org.apache.poi.openxml4j.opc.PackageRelationship addExternalRelationship(java.lang.String, java.lang.String, java.lang.String);

    public abstract void clearRelationships();

    public abstract void removeRelationship(java.lang.String);

    public abstract org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationships() throws org.apache.poi.openxml4j.exceptions.InvalidFormatException, org.apache.poi.openxml4j.exceptions.OpenXML4JException;

    public abstract org.apache.poi.openxml4j.opc.PackageRelationship getRelationship(java.lang.String);

    public abstract org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationshipsByType(java.lang.String) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException, java.lang.IllegalArgumentException, org.apache.poi.openxml4j.exceptions.OpenXML4JException;

    public abstract boolean hasRelationships();

    public abstract boolean isRelationshipExists(org.apache.poi.openxml4j.opc.PackageRelationship);
}
