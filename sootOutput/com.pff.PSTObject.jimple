public class com.pff.PSTObject extends java.lang.Object
{
    public static final int NID_TYPE_HID;
    public static final int NID_TYPE_INTERNAL;
    public static final int NID_TYPE_NORMAL_FOLDER;
    public static final int NID_TYPE_SEARCH_FOLDER;
    public static final int NID_TYPE_NORMAL_MESSAGE;
    public static final int NID_TYPE_ATTACHMENT;
    public static final int NID_TYPE_SEARCH_UPDATE_QUEUE;
    public static final int NID_TYPE_SEARCH_CRITERIA_OBJECT;
    public static final int NID_TYPE_ASSOC_MESSAGE;
    public static final int NID_TYPE_CONTENTS_TABLE_INDEX;
    public static final int NID_TYPE_RECEIVE_FOLDER_TABLE;
    public static final int NID_TYPE_OUTGOING_QUEUE_TABLE;
    public static final int NID_TYPE_HIERARCHY_TABLE;
    public static final int NID_TYPE_CONTENTS_TABLE;
    public static final int NID_TYPE_ASSOC_CONTENTS_TABLE;
    public static final int NID_TYPE_SEARCH_CONTENTS_TABLE;
    public static final int NID_TYPE_ATTACHMENT_TABLE;
    public static final int NID_TYPE_RECIPIENT_TABLE;
    public static final int NID_TYPE_SEARCH_TABLE_INDEX;
    public static final int NID_TYPE_LTP;
    protected com.pff.PSTFile pstFile;
    protected byte[] data;
    protected com.pff.DescriptorIndexNode descriptorIndexNode;
    protected java.util.HashMap items;
    protected java.util.HashMap localDescriptorItems;
    protected java.util.LinkedHashMap children;
    protected com.pff.PSTTableBC table;
    static int[] compEnc;
    private static final long EPOCH_DIFF;

    public java.lang.String getItemsString()
    {
        java.util.HashMap $r1;
        java.lang.String $r2;
        com.pff.PSTObject r0;

        r0 := @this: com.pff.PSTObject;

        $r1 = r0.<com.pff.PSTObject: java.util.HashMap items>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.String toString()>();

        return $r2;
    }

    protected void <init>(com.pff.PSTFile, com.pff.DescriptorIndexNode) throws com.pff.PSTException, java.io.IOException
    {
        long $l0, $l1, $l3;
        java.util.HashMap $r8, $r9;
        com.pff.PSTTableBC $r3;
        byte $b2;
        com.pff.OffsetIndexItem $r7;
        com.pff.PSTFile r1, $r5, $r6;
        com.pff.DescriptorIndexNode r2;
        com.pff.PSTNodeInputStream $r4;
        com.pff.PSTObject r0;

        r0 := @this: com.pff.PSTObject;

        r1 := @parameter0: com.pff.PSTFile;

        r2 := @parameter1: com.pff.DescriptorIndexNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.pff.PSTObject: java.util.HashMap localDescriptorItems> = null;

        r0.<com.pff.PSTObject: com.pff.PSTFile pstFile> = r1;

        r0.<com.pff.PSTObject: com.pff.DescriptorIndexNode descriptorIndexNode> = r2;

        $r3 = new com.pff.PSTTableBC;

        $r4 = new com.pff.PSTNodeInputStream;

        $r6 = r0.<com.pff.PSTObject: com.pff.PSTFile pstFile>;

        $r5 = r0.<com.pff.PSTObject: com.pff.PSTFile pstFile>;

        $l0 = r2.<com.pff.DescriptorIndexNode: long dataOffsetIndexIdentifier>;

        $r7 = virtualinvoke $r5.<com.pff.PSTFile: com.pff.OffsetIndexItem getOffsetIndexNode(long)>($l0);

        specialinvoke $r4.<com.pff.PSTNodeInputStream: void <init>(com.pff.PSTFile,com.pff.OffsetIndexItem)>($r6, $r7);

        specialinvoke $r3.<com.pff.PSTTableBC: void <init>(com.pff.PSTNodeInputStream)>($r4);

        $r8 = virtualinvoke $r3.<com.pff.PSTTableBC: java.util.HashMap getItems()>();

        r0.<com.pff.PSTObject: java.util.HashMap items> = $r8;

        $l1 = r2.<com.pff.DescriptorIndexNode: long localDescriptorsOffsetIndexIdentifier>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $l3 = r2.<com.pff.DescriptorIndexNode: long localDescriptorsOffsetIndexIdentifier>;

        $r9 = virtualinvoke r1.<com.pff.PSTFile: java.util.HashMap getPSTDescriptorItems(long)>($l3);

        r0.<com.pff.PSTObject: java.util.HashMap localDescriptorItems> = $r9;

     label1:
        return;
    }

    protected void <init>(com.pff.PSTFile, com.pff.DescriptorIndexNode, com.pff.PSTTableBC, java.util.HashMap)
    {
        com.pff.PSTFile r1;
        com.pff.DescriptorIndexNode r2;
        java.util.HashMap $r4, r5;
        com.pff.PSTObject r0;
        com.pff.PSTTableBC r3;

        r0 := @this: com.pff.PSTObject;

        r1 := @parameter0: com.pff.PSTFile;

        r2 := @parameter1: com.pff.DescriptorIndexNode;

        r3 := @parameter2: com.pff.PSTTableBC;

        r5 := @parameter3: java.util.HashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.pff.PSTObject: java.util.HashMap localDescriptorItems> = null;

        r0.<com.pff.PSTObject: com.pff.PSTFile pstFile> = r1;

        r0.<com.pff.PSTObject: com.pff.DescriptorIndexNode descriptorIndexNode> = r2;

        $r4 = virtualinvoke r3.<com.pff.PSTTableBC: java.util.HashMap getItems()>();

        r0.<com.pff.PSTObject: java.util.HashMap items> = $r4;

        r0.<com.pff.PSTObject: com.pff.PSTTableBC table> = r3;

        r0.<com.pff.PSTObject: java.util.HashMap localDescriptorItems> = r5;

        return;
    }

    public com.pff.DescriptorIndexNode getDescriptorNode()
    {
        com.pff.DescriptorIndexNode $r1;
        com.pff.PSTObject r0;

        r0 := @this: com.pff.PSTObject;

        $r1 = r0.<com.pff.PSTObject: com.pff.DescriptorIndexNode descriptorIndexNode>;

        return $r1;
    }

    public long getDescriptorNodeId()
    {
        int $i0;
        com.pff.DescriptorIndexNode $r1;
        long $l1;
        com.pff.PSTObject r0;

        r0 := @this: com.pff.PSTObject;

        $r1 = r0.<com.pff.PSTObject: com.pff.DescriptorIndexNode descriptorIndexNode>;

        $i0 = $r1.<com.pff.DescriptorIndexNode: int descriptorIdentifier>;

        $l1 = (long) $i0;

        return $l1;
    }

    public int getNodeType()
    {
        int $i0, $i1;
        com.pff.DescriptorIndexNode $r1;
        com.pff.PSTObject r0;

        r0 := @this: com.pff.PSTObject;

        $r1 = r0.<com.pff.PSTObject: com.pff.DescriptorIndexNode descriptorIndexNode>;

        $i0 = $r1.<com.pff.DescriptorIndexNode: int descriptorIdentifier>;

        $i1 = staticinvoke <com.pff.PSTObject: int getNodeType(int)>($i0);

        return $i1;
    }

    public static int getNodeType(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 31;

        return $i1;
    }

    protected int getIntItem(int)
    {
        int i0, $i1;
        com.pff.PSTObject r0;

        r0 := @this: com.pff.PSTObject;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.pff.PSTObject: int getIntItem(int,int)>(i0, 0);

        return $i1;
    }

    protected int getIntItem(int, int)
    {
        java.util.HashMap $r1, $r3;
        java.lang.Integer $r2, $r4;
        com.pff.PSTTableBCItem r6;
        int i0, i1, $i2;
        java.lang.Object $r5;
        com.pff.PSTObject r0;
        boolean $z0;

        r0 := @this: com.pff.PSTObject;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.pff.PSTObject: java.util.HashMap items>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.pff.PSTObject: java.util.HashMap items>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (com.pff.PSTTableBCItem) $r5;

        $i2 = r6.<com.pff.PSTTableBCItem: int entryValueReference>;

        return $i2;

     label1:
        return i1;
    }

    protected boolean getBooleanItem(int)
    {
        int i0;
        com.pff.PSTObject r0;
        boolean $z0;

        r0 := @this: com.pff.PSTObject;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.pff.PSTObject: boolean getBooleanItem(int,boolean)>(i0, 0);

        return $z0;
    }

    protected boolean getBooleanItem(int, boolean)
    {
        java.util.HashMap $r1, $r3;
        java.lang.Integer $r2, $r4;
        com.pff.PSTTableBCItem r6;
        int i0, $i1;
        java.lang.Object $r5;
        com.pff.PSTObject r0;
        boolean $z0, z1, $z2;

        r0 := @this: com.pff.PSTObject;

        i0 := @parameter0: int;

        z1 := @parameter1: boolean;

        $r1 = r0.<com.pff.PSTObject: java.util.HashMap items>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        $r3 = r0.<com.pff.PSTObject: java.util.HashMap items>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (com.pff.PSTTableBCItem) $r5;

        $i1 = r6.<com.pff.PSTTableBCItem: int entryValueReference>;

        if $i1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        return z1;
    }

    protected double getDoubleItem(int)
    {
        int i0;
        com.pff.PSTObject r0;
        double $d0;

        r0 := @this: com.pff.PSTObject;

        i0 := @parameter0: int;

        $d0 = virtualinvoke r0.<com.pff.PSTObject: double getDoubleItem(int,double)>(i0, 0.0);

        return $d0;
    }

    protected double getDoubleItem(int, double)
    {
        byte[] $r7;
        java.util.HashMap $r1, $r3;
        long $l1;
        java.lang.Integer $r2, $r4;
        com.pff.PSTTableBCItem r6;
        int i0;
        java.lang.Object $r5;
        com.pff.PSTObject r0;
        boolean $z0;
        double d0, $d1;

        r0 := @this: com.pff.PSTObject;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $r1 = r0.<com.pff.PSTObject: java.util.HashMap items>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.pff.PSTObject: java.util.HashMap items>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (com.pff.PSTTableBCItem) $r5;

        $r7 = r6.<com.pff.PSTTableBCItem: byte[] data>;

        $l1 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[])>($r7);

        $d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l1);

        return $d1;

     label1:
        return d0;
    }

    protected long getLongItem(int)
    {
        int i0;
        long $l1;
        com.pff.PSTObject r0;

        r0 := @this: com.pff.PSTObject;

        i0 := @parameter0: int;

        $l1 = virtualinvoke r0.<com.pff.PSTObject: long getLongItem(int,long)>(i0, 0L);

        return $l1;
    }

    protected long getLongItem(int, long)
    {
        byte[] $r7, $r11, $r12;
        java.lang.Object[] $r8;
        java.util.HashMap $r1, $r3;
        long l1, $l5, $l7;
        java.lang.Integer $r2, $r4, $r10;
        com.pff.PSTTableBCItem r6;
        int i0, $i2, $i3, $i4, $i6;
        com.pff.PSTObject r0;
        boolean $z0;
        java.io.PrintStream $r9;
        java.lang.Object $r5;

        r0 := @this: com.pff.PSTObject;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = r0.<com.pff.PSTObject: java.util.HashMap items>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        $r3 = r0.<com.pff.PSTObject: java.util.HashMap items>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (com.pff.PSTTableBCItem) $r5;

        $i2 = r6.<com.pff.PSTTableBCItem: int entryValueType>;

        if $i2 != 3 goto label1;

        $i6 = r6.<com.pff.PSTTableBCItem: int entryValueReference>;

        $l7 = (long) $i6;

        return $l7;

     label1:
        $i3 = r6.<com.pff.PSTTableBCItem: int entryValueType>;

        if $i3 != 20 goto label3;

        $r7 = r6.<com.pff.PSTTableBCItem: byte[] data>;

        if $r7 == null goto label2;

        $r11 = r6.<com.pff.PSTTableBCItem: byte[] data>;

        $i4 = lengthof $r11;

        if $i4 != 8 goto label2;

        $r12 = r6.<com.pff.PSTTableBCItem: byte[] data>;

        $l5 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>($r12, 0, 8);

        return $l5;

     label2:
        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r8 = newarray (java.lang.Object)[1];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8[0] = $r10;

        virtualinvoke $r9.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Invalid data length for long id 0x%04X\n", $r8);

     label3:
        return l1;
    }

    protected java.lang.String getStringItem(int)
    {
        int i0;
        java.lang.String $r1;
        com.pff.PSTObject r0;

        r0 := @this: com.pff.PSTObject;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.pff.PSTObject: java.lang.String getStringItem(int,int)>(i0, 0);

        return $r1;
    }

    protected java.lang.String getStringItem(int, int)
    {
        int i0, i1;
        java.lang.String $r1;
        com.pff.PSTObject r0;

        r0 := @this: com.pff.PSTObject;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.pff.PSTObject: java.lang.String getStringItem(int,int,java.lang.String)>(i0, i1, null);

        return $r1;
    }

    protected java.lang.String getStringItem(int, int, java.lang.String)
    {
        byte[] $r6, $r14, $r16, $r23, $r24;
        java.lang.Integer $r2, $r9, $r11;
        com.pff.PSTObject r0;
        boolean $z0, $z1;
        java.lang.Exception $r18;
        java.lang.Object[] $r19;
        java.util.HashMap $r1, $r5, $r8, $r10;
        com.pff.PSTTableBCItem r4;
        int i0, $i1, $i2, i3;
        java.lang.String $r7, $r15, $r17, $r21, $r22, r25, $r26;
        java.io.PrintStream $r20;
        com.pff.PSTDescriptorItem r13;
        java.lang.Object $r3, $r12;

        r0 := @this: com.pff.PSTObject;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        r25 := @parameter2: java.lang.String;

        $r1 = r0.<com.pff.PSTObject: java.util.HashMap items>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (com.pff.PSTTableBCItem) $r3;

        if r4 == null goto label12;

        if r25 != null goto label01;

        r25 = specialinvoke r0.<com.pff.PSTObject: java.lang.String getStringCodepage()>();

     label01:
        if i3 != 0 goto label02;

        i3 = r4.<com.pff.PSTTableBCItem: int entryValueType>;

     label02:
        $z0 = r4.<com.pff.PSTTableBCItem: boolean isExternalValueReference>;

        if $z0 != 0 goto label03;

        $r16 = r4.<com.pff.PSTTableBCItem: byte[] data>;

        $r17 = staticinvoke <com.pff.PSTObject: java.lang.String createJavaString(byte[],int,java.lang.String)>($r16, i3, r25);

        return $r17;

     label03:
        $r5 = r0.<com.pff.PSTObject: java.util.HashMap localDescriptorItems>;

        if $r5 == null goto label11;

        $r8 = r0.<com.pff.PSTObject: java.util.HashMap localDescriptorItems>;

        $i1 = r4.<com.pff.PSTTableBCItem: int entryValueReference>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z1 = virtualinvoke $r8.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r9);

        if $z1 == 0 goto label11;

        $r10 = r0.<com.pff.PSTObject: java.util.HashMap localDescriptorItems>;

        $i2 = r4.<com.pff.PSTTableBCItem: int entryValueReference>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r12 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r11);

        r13 = (com.pff.PSTDescriptorItem) $r12;

     label04:
        $r14 = virtualinvoke r13.<com.pff.PSTDescriptorItem: byte[] getData()>();

        if $r14 != null goto label06;

     label05:
        return "";

     label06:
        $r15 = staticinvoke <com.pff.PSTObject: java.lang.String createJavaString(byte[],int,java.lang.String)>($r14, i3, r25);

     label07:
        return $r15;

     label08:
        $r18 := @caughtexception;

        $r20 = <java.lang.System: java.io.PrintStream err>;

        $r19 = newarray (java.lang.Object)[3];

        $r21 = virtualinvoke $r18.<java.lang.Exception: java.lang.String toString()>();

        $r19[0] = $r21;

        $r22 = staticinvoke <com.pff.PSTFile: java.lang.String getPropertyDescription(int,int)>(i0, i3);

        $r19[1] = $r22;

        $r23 = r0.<com.pff.PSTObject: byte[] data>;

        if $r23 == null goto label09;

        $r24 = r0.<com.pff.PSTObject: byte[] data>;

        $r26 = virtualinvoke $r24.<java.lang.Object: java.lang.String toString()>();

        goto label10;

     label09:
        $r26 = "null";

     label10:
        $r19[2] = $r26;

        virtualinvoke $r20.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Exception %s decoding string %s: %s\n", $r19);

        return "";

     label11:
        $r6 = r0.<com.pff.PSTObject: byte[] data>;

        $r7 = staticinvoke <com.pff.PSTObject: java.lang.String createJavaString(byte[],int,java.lang.String)>($r6, i3, r25);

        return $r7;

     label12:
        return "";

        catch java.lang.Exception from label04 to label05 with label08;
        catch java.lang.Exception from label06 to label07 with label08;
    }

    static java.lang.String createJavaString(byte[], int, java.lang.String)
    {
        java.io.PrintStream $r6;
        byte[] r2;
        java.lang.Exception $r5;
        int i0;
        java.lang.String $r0, $r1, $r3, $r4, r7;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

     label1:
        if i0 != 31 goto label3;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],java.lang.String)>(r2, "UTF-16LE");

     label2:
        return $r4;

     label3:
        if r7 != null goto label5;

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[])>(r2);

     label4:
        return $r3;

     label5:
        $r0 = virtualinvoke r7.<java.lang.String: java.lang.String toUpperCase()>();

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>(r2, $r0);

     label6:
        return $r1;

     label7:
        $r5 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Unable to decode string");

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        return "";

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    private java.lang.String getStringCodepage()
    {
        java.util.HashMap $r1, $r5;
        java.lang.Integer $r2, $r6;
        com.pff.PSTTableBCItem r8;
        int $i0;
        java.lang.Object $r3, $r7;
        java.lang.String $r4;
        com.pff.PSTObject r0;

        r0 := @this: com.pff.PSTObject;

        $r1 = r0.<com.pff.PSTObject: java.util.HashMap items>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16381);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r8 = (com.pff.PSTTableBCItem) $r3;

        if r8 != null goto label1;

        $r5 = r0.<com.pff.PSTObject: java.util.HashMap items>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16350);

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r8 = (com.pff.PSTTableBCItem) $r7;

     label1:
        if r8 == null goto label2;

        $i0 = r8.<com.pff.PSTTableBCItem: int entryValueReference>;

        $r4 = staticinvoke <com.pff.PSTFile: java.lang.String getInternetCodePageCharset(int)>($i0);

        return $r4;

     label2:
        return null;
    }

    public java.util.Date getDateItem(int)
    {
        byte[] $r7, $r8, $r9;
        java.util.Date $r10, $r11;
        java.util.HashMap $r1, $r3;
        long $l2, $l4;
        java.lang.Integer $r2, $r4;
        com.pff.PSTTableBCItem r6;
        int i0, $i1, i3, i5;
        com.pff.PSTObject r0;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.pff.PSTObject;

        i0 := @parameter0: int;

        $r1 = r0.<com.pff.PSTObject: java.util.HashMap items>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r3 = r0.<com.pff.PSTObject: java.util.HashMap items>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (com.pff.PSTTableBCItem) $r5;

        $r7 = r6.<com.pff.PSTTableBCItem: byte[] data>;

        $i1 = lengthof $r7;

        if $i1 != 0 goto label1;

        $r11 = new java.util.Date;

        specialinvoke $r11.<java.util.Date: void <init>(long)>(0L);

        return $r11;

     label1:
        $r8 = r6.<com.pff.PSTTableBCItem: byte[] data>;

        $l2 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>($r8, 4, 8);

        i3 = (int) $l2;

        $r9 = r6.<com.pff.PSTTableBCItem: byte[] data>;

        $l4 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>($r9, 0, 4);

        i5 = (int) $l4;

        $r10 = staticinvoke <com.pff.PSTObject: java.util.Date filetimeToDate(int,int)>(i3, i5);

        return $r10;

     label2:
        return null;
    }

    protected byte[] getBinaryItem(int)
    {
        byte[] $r14, $r15;
        java.lang.Object[] $r17;
        java.util.HashMap $r1, $r3, $r7, $r8, $r10;
        java.lang.Integer $r2, $r4, $r9, $r11, $r19;
        com.pff.PSTTableBCItem r6;
        int i0, $i1, $i2, $i3, $i4;
        com.pff.PSTObject r0;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r18;
        com.pff.PSTDescriptorItem r13;
        java.lang.Exception $r16;
        java.lang.Object $r5, $r12;

        r0 := @this: com.pff.PSTObject;

        i0 := @parameter0: int;

        $r1 = r0.<com.pff.PSTObject: java.util.HashMap items>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label5;

        $r3 = r0.<com.pff.PSTObject: java.util.HashMap items>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (com.pff.PSTTableBCItem) $r5;

        $i1 = r6.<com.pff.PSTTableBCItem: int entryValueType>;

        if $i1 != 258 goto label5;

        $z1 = r6.<com.pff.PSTTableBCItem: boolean isExternalValueReference>;

        if $z1 != 0 goto label1;

        $r15 = r6.<com.pff.PSTTableBCItem: byte[] data>;

        return $r15;

     label1:
        $r7 = r0.<com.pff.PSTObject: java.util.HashMap localDescriptorItems>;

        if $r7 == null goto label5;

        $r8 = r0.<com.pff.PSTObject: java.util.HashMap localDescriptorItems>;

        $i2 = r6.<com.pff.PSTTableBCItem: int entryValueReference>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $z2 = virtualinvoke $r8.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r9);

        if $z2 == 0 goto label5;

        $r10 = r0.<com.pff.PSTObject: java.util.HashMap localDescriptorItems>;

        $i3 = r6.<com.pff.PSTTableBCItem: int entryValueReference>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r12 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r11);

        r13 = (com.pff.PSTDescriptorItem) $r12;

     label2:
        $r14 = virtualinvoke r13.<com.pff.PSTDescriptorItem: byte[] getData()>();

     label3:
        return $r14;

     label4:
        $r16 := @caughtexception;

        $r18 = <java.lang.System: java.io.PrintStream err>;

        $r17 = newarray (java.lang.Object)[1];

        $i4 = r6.<com.pff.PSTTableBCItem: int entryValueReference>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r17[0] = $r19;

        virtualinvoke $r18.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Exception reading binary item: reference 0x%08X\n", $r17);

        return null;

     label5:
        return null;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected com.pff.PSTTimeZone getTimeZoneItem(int)
    {
        byte[] $r1;
        int i0, $i1;
        com.pff.PSTObject r0;
        com.pff.PSTTimeZone $r2;

        r0 := @this: com.pff.PSTObject;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.pff.PSTObject: byte[] getBinaryItem(int)>(i0);

        if $r1 == null goto label1;

        $i1 = lengthof $r1;

        if $i1 == 0 goto label1;

        $r2 = new com.pff.PSTTimeZone;

        specialinvoke $r2.<com.pff.PSTTimeZone: void <init>(byte[])>($r1);

        return $r2;

     label1:
        return null;
    }

    public java.lang.String getMessageClass()
    {
        java.lang.String $r1;
        com.pff.PSTObject r0;

        r0 := @this: com.pff.PSTObject;

        $r1 = virtualinvoke r0.<com.pff.PSTObject: java.lang.String getStringItem(int)>(26);

        return $r1;
    }

    public java.lang.String toString()
    {
        java.util.HashMap $r2, $r5;
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        java.lang.String $r7;
        com.pff.PSTObject r1;

        r1 := @this: com.pff.PSTObject;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<com.pff.PSTObject: java.util.HashMap localDescriptorItems>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r5 = r1.<com.pff.PSTObject: java.util.HashMap items>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String getDisplayName()
    {
        java.lang.String $r1;
        com.pff.PSTObject r0;

        r0 := @this: com.pff.PSTObject;

        $r1 = virtualinvoke r0.<com.pff.PSTObject: java.lang.String getStringItem(int)>(12289);

        return $r1;
    }

    public java.lang.String getAddrType()
    {
        java.lang.String $r1;
        com.pff.PSTObject r0;

        r0 := @this: com.pff.PSTObject;

        $r1 = virtualinvoke r0.<com.pff.PSTObject: java.lang.String getStringItem(int)>(12290);

        return $r1;
    }

    public java.lang.String getEmailAddress()
    {
        java.lang.String $r1;
        com.pff.PSTObject r0;

        r0 := @this: com.pff.PSTObject;

        $r1 = virtualinvoke r0.<com.pff.PSTObject: java.lang.String getStringItem(int)>(12291);

        return $r1;
    }

    public java.lang.String getComment()
    {
        java.lang.String $r1;
        com.pff.PSTObject r0;

        r0 := @this: com.pff.PSTObject;

        $r1 = virtualinvoke r0.<com.pff.PSTObject: java.lang.String getStringItem(int)>(12292);

        return $r1;
    }

    public java.util.Date getCreationTime()
    {
        com.pff.PSTObject r0;
        java.util.Date $r1;

        r0 := @this: com.pff.PSTObject;

        $r1 = virtualinvoke r0.<com.pff.PSTObject: java.util.Date getDateItem(int)>(12295);

        return $r1;
    }

    public java.util.Date getLastModificationTime()
    {
        com.pff.PSTObject r0;
        java.util.Date $r1;

        r0 := @this: com.pff.PSTObject;

        $r1 = virtualinvoke r0.<com.pff.PSTObject: java.util.Date getDateItem(int)>(12296);

        return $r1;
    }

    public static void printFormattedNumber(java.lang.String, long)
    {
        java.io.PrintStream $r1;
        long l0;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>(r0);

        staticinvoke <com.pff.PSTObject: void printFormattedNumber(long)>(l0);

        return;
    }

    public static void printFormattedNumber(long)
    {
        java.io.PrintStream $r0, $r1, $r2, $r3, $r5, $r6;
        long l0;
        java.lang.String $r4, $r7;

        l0 := @parameter0: long;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>("dec: ");

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void print(long)>(l0);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>(", hex: ");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>($r4);

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>(", bin: ");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r7 = staticinvoke <java.lang.Long: java.lang.String toBinaryString(long)>(l0);

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r7);

        return;
    }

    public static void printHexFormatted(byte[], boolean)
    {
        byte[] r0;
        int[] $r1;
        boolean z0;

        r0 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        $r1 = newarray (int)[0];

        staticinvoke <com.pff.PSTObject: void printHexFormatted(byte[],boolean,int[])>(r0, z0, $r1);

        return;
    }

    protected static void printHexFormatted(byte[], boolean, int[])
    {
        byte[] r1;
        byte $b2;
        int[] r0;
        boolean z0, $z1;
        java.lang.StringBuilder $r2, $r4, $r5, $r9, $r10, $r11, $r15, $r17, $r18, $r23, $r24, $r25, $r27, $r28, $r29;
        long $l3, l4;
        int $i0, $i1, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, i14, i15, i16, $i17, $i18, $i20;
        java.lang.String $r6, $r12, $r14, $r19, r31;
        java.io.PrintStream $r3, $r7, $r8, $r13, $r16, $r20, $r21, $r22, $r26, $r30;
        char $c9, $c19;

        r1 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        r0 := @parameter2: int[];

        if z0 == 0 goto label01;

        $r30 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("---");

     label01:
        r31 = "";

        i14 = 0;

        i15 = 0;

        $i0 = lengthof r0;

        if $i0 <= 0 goto label02;

        i14 = r0[0];

        i15 = 1;

     label02:
        i16 = 0;

     label03:
        $i17 = lengthof r1;

        if i16 >= $i17 goto label12;

        $b2 = r1[i16];

        $l3 = (long) $b2;

        l4 = $l3 & 255L;

        $i5 = lengthof r0;

        if $i5 <= 0 goto label06;

        if i16 != i14 goto label06;

        $i10 = lengthof r1;

        if i14 >= $i10 goto label06;

        $r26 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r26.<java.io.PrintStream: void print(java.lang.String)>("+");

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $i11 = lengthof r0;

        $i12 = $i11 - 1;

        if i15 >= $i12 goto label05;

        $i13 = r0[i15];

        if $i13 > i14 goto label05;

        i15 = i15 + 1;

        goto label04;

     label05:
        i14 = r0[i15];

     label06:
        $i18 = (int) l4;

        $c19 = (char) $i18;

        $z1 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c19);

        if $z1 == 0 goto label07;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $i8 = (int) l4;

        $c9 = (char) $i8;

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9);

        r31 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label08;

     label07:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        r31 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        $r12 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l4);

        $i6 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i6 >= 2 goto label09;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r22.<java.io.PrintStream: void print(java.lang.String)>("0");

     label09:
        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r14 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l4);

        virtualinvoke $r13.<java.io.PrintStream: void print(java.lang.String)>($r14);

        $i7 = i16 % 2;

        if $i7 != 1 goto label10;

        if z0 == 0 goto label10;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r21.<java.io.PrintStream: void print(java.lang.String)>(" ");

     label10:
        $i20 = i16 % 16;

        if $i20 != 15 goto label11;

        if z0 == 0 goto label11;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void print(java.lang.String)>($r19);

        $r20 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>("");

        r31 = "";

     label11:
        i16 = i16 + 1;

        goto label03;

     label12:
        if z0 == 0 goto label13;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("---");

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $i1 = lengthof r1;

        virtualinvoke $r8.<java.io.PrintStream: void println(int)>($i1);

     label13:
        return;
    }

    protected static byte[] decode(byte[])
    {
        byte[] r0;
        short s2, $s6;
        byte $b1, $b4;
        int[] $r1;
        int $i0, $i3, i5, $i7;

        r0 := @parameter0: byte[];

        i5 = 0;

     label1:
        $i0 = lengthof r0;

        if i5 >= $i0 goto label2;

        $b1 = r0[i5];

        $s6 = (short) $b1;

        s2 = $s6 & 255;

        $r1 = <com.pff.PSTObject: int[] compEnc>;

        $i7 = (int) s2;

        $i3 = $r1[$i7];

        $b4 = (byte) $i3;

        r0[i5] = $b4;

        i5 = i5 + 1;

        goto label1;

     label2:
        return r0;
    }

    protected static byte[] encode(byte[])
    {
        byte[] r2;
        short s9, $s10;
        byte $b3, $b5;
        int[] $r0, r1, $r3;
        int $i0, $i1, $i2, $i4, $i6, i7, i8, $i11;

        r2 := @parameter0: byte[];

        $r0 = <com.pff.PSTObject: int[] compEnc>;

        $i0 = lengthof $r0;

        r1 = newarray (int)[$i0];

        i7 = 0;

     label1:
        $i1 = lengthof r1;

        if i7 >= $i1 goto label2;

        $r3 = <com.pff.PSTObject: int[] compEnc>;

        $i6 = $r3[i7];

        r1[$i6] = i7;

        i7 = i7 + 1;

        goto label1;

     label2:
        i8 = 0;

     label3:
        $i2 = lengthof r2;

        if i8 >= $i2 goto label4;

        $b3 = r2[i8];

        $s10 = (short) $b3;

        s9 = $s10 & 255;

        $i11 = (int) s9;

        $i4 = r1[$i11];

        $b5 = (byte) $i4;

        r2[i8] = $b5;

        i8 = i8 + 1;

        goto label3;

     label4:
        return r2;
    }

    public static long convertLittleEndianBytesToLong(byte[])
    {
        int $i0;
        byte[] r0;
        long $l1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $l1 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r0, 0, $i0);

        return $l1;
    }

    public static long convertLittleEndianBytesToLong(byte[], int, int)
    {
        byte[] r0;
        long $l6, l7, l8, l10;
        short $s3, $s11;
        byte $b2, $b5;
        int i0, $i1, i4, i9, $i13;

        r0 := @parameter0: byte[];

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = i0 - 1;

        $b2 = r0[$i1];

        $s11 = (short) $b2;

        $s3 = $s11 & 255;

        l8 = (long) $s3;

        i9 = i0 - 2;

     label1:
        if i9 < i4 goto label2;

        l10 = l8 << 8;

        $b5 = r0[i9];

        $l6 = (long) $b5;

        l7 = $l6 & 255L;

        l8 = l10 | l7;

        $i13 = (int) -1;

        i9 = i9 + $i13;

        goto label1;

     label2:
        return l8;
    }

    public static long convertBigEndianBytesToLong(byte[], int, int)
    {
        byte[] r0;
        long $l3, $l4, l5, l7;
        byte $b2;
        int i0, i1, i6;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l5 = 0L;

        i6 = i0;

     label1:
        if i6 >= i1 goto label2;

        l7 = l5 << 8;

        $b2 = r0[i6];

        $l3 = (long) $b2;

        $l4 = $l3 & 255L;

        l5 = l7 | $l4;

        i6 = i6 + 1;

        goto label1;

     label2:
        return l5;
    }

    public static com.pff.PSTObject detectAndLoadPSTObject(com.pff.PSTFile, long) throws java.io.IOException, com.pff.PSTException
    {
        com.pff.PSTFile r0;
        long l0;
        com.pff.DescriptorIndexNode $r1;
        com.pff.PSTObject $r2;

        r0 := @parameter0: com.pff.PSTFile;

        l0 := @parameter1: long;

        $r1 = virtualinvoke r0.<com.pff.PSTFile: com.pff.DescriptorIndexNode getDescriptorIndexNode(long)>(l0);

        $r2 = staticinvoke <com.pff.PSTObject: com.pff.PSTObject detectAndLoadPSTObject(com.pff.PSTFile,com.pff.DescriptorIndexNode)>(r0, $r1);

        return $r2;
    }

    static com.pff.PSTObject detectAndLoadPSTObject(com.pff.PSTFile, com.pff.DescriptorIndexNode) throws java.io.IOException, com.pff.PSTException
    {
        com.pff.PSTFolder $r2;
        com.pff.PSTMessage $r3;
        long $l2, $l3, $l4, $l5;
        java.util.HashMap r12;
        com.pff.PSTTableBC $r9;
        byte $b6;
        int $i0, i1;
        com.pff.DescriptorIndexNode r0;
        java.lang.String $r8;
        com.pff.PSTException $r4;
        com.pff.OffsetIndexItem $r11;
        com.pff.PSTFile r1;
        java.lang.StringBuilder $r5, $r6, $r7;
        com.pff.PSTNodeInputStream $r10;

        r1 := @parameter0: com.pff.PSTFile;

        r0 := @parameter1: com.pff.DescriptorIndexNode;

        $i0 = r0.<com.pff.DescriptorIndexNode: int descriptorIdentifier>;

        i1 = $i0 & 31;

        if i1 == 2 goto label1;

        if i1 == 3 goto label1;

        if i1 != 4 goto label5;

     label1:
        $r9 = new com.pff.PSTTableBC;

        $r10 = new com.pff.PSTNodeInputStream;

        $l4 = r0.<com.pff.DescriptorIndexNode: long dataOffsetIndexIdentifier>;

        $r11 = virtualinvoke r1.<com.pff.PSTFile: com.pff.OffsetIndexItem getOffsetIndexNode(long)>($l4);

        specialinvoke $r10.<com.pff.PSTNodeInputStream: void <init>(com.pff.PSTFile,com.pff.OffsetIndexItem)>(r1, $r11);

        specialinvoke $r9.<com.pff.PSTTableBC: void <init>(com.pff.PSTNodeInputStream)>($r10);

        r12 = null;

        $l5 = r0.<com.pff.DescriptorIndexNode: long localDescriptorsOffsetIndexIdentifier>;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label2;

        $l2 = r0.<com.pff.DescriptorIndexNode: long localDescriptorsOffsetIndexIdentifier>;

        r12 = virtualinvoke r1.<com.pff.PSTFile: java.util.HashMap getPSTDescriptorItems(long)>($l2);

     label2:
        if i1 == 2 goto label3;

        if i1 != 3 goto label4;

     label3:
        $r2 = new com.pff.PSTFolder;

        specialinvoke $r2.<com.pff.PSTFolder: void <init>(com.pff.PSTFile,com.pff.DescriptorIndexNode,com.pff.PSTTableBC,java.util.HashMap)>(r1, r0, $r9, r12);

        return $r2;

     label4:
        $r3 = staticinvoke <com.pff.PSTObject: com.pff.PSTMessage createAppropriatePSTMessageObject(com.pff.PSTFile,com.pff.DescriptorIndexNode,com.pff.PSTTableBC,java.util.HashMap)>(r1, r0, $r9, r12);

        return $r3;

     label5:
        $r4 = new com.pff.PSTException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown child type with offset id: ");

        $l3 = r0.<com.pff.DescriptorIndexNode: long localDescriptorsOffsetIndexIdentifier>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.pff.PSTException: void <init>(java.lang.String)>($r8);

        throw $r4;
    }

    static com.pff.PSTMessage createAppropriatePSTMessageObject(com.pff.PSTFile, com.pff.DescriptorIndexNode, com.pff.PSTTableBC, java.util.HashMap)
    {
        com.pff.PSTMessage $r13, $r19;
        java.util.HashMap $r1, r7;
        com.pff.PSTTask $r17;
        java.lang.Integer $r2;
        com.pff.PSTTableBC r0;
        com.pff.PSTTableBCItem r4;
        com.pff.PSTContact $r18;
        com.pff.PSTAppointment $r21;
        com.pff.DescriptorIndexNode r6;
        java.lang.String $r12, r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.io.PrintStream $r9;
        com.pff.PSTDistList $r14;
        com.pff.PSTRss $r15;
        com.pff.PSTActivity $r16;
        com.pff.PSTFile r5;
        java.lang.Object $r3;
        java.lang.StringBuilder $r8, $r10, $r11;

        r5 := @parameter0: com.pff.PSTFile;

        r6 := @parameter1: com.pff.DescriptorIndexNode;

        r0 := @parameter2: com.pff.PSTTableBC;

        r7 := @parameter3: java.util.HashMap;

        $r1 = virtualinvoke r0.<com.pff.PSTTableBC: java.util.HashMap getItems()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(26);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (com.pff.PSTTableBCItem) $r3;

        r20 = "";

        if r4 == null goto label1;

        r20 = virtualinvoke r4.<com.pff.PSTTableBCItem: java.lang.String getStringValue()>();

     label1:
        $z0 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("IPM.Note");

        if $z0 == 0 goto label2;

        $r19 = new com.pff.PSTMessage;

        specialinvoke $r19.<com.pff.PSTMessage: void <init>(com.pff.PSTFile,com.pff.DescriptorIndexNode,com.pff.PSTTableBC,java.util.HashMap)>(r5, r6, r0, r7);

        return $r19;

     label2:
        $z1 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("IPM.Appointment");

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("IPM.OLE.CLASS.{00061055-0000-0000-C000-000000000046}");

        if $z2 != 0 goto label3;

        $z3 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>("IPM.Schedule.Meeting");

        if $z3 == 0 goto label4;

     label3:
        $r21 = new com.pff.PSTAppointment;

        specialinvoke $r21.<com.pff.PSTAppointment: void <init>(com.pff.PSTFile,com.pff.DescriptorIndexNode,com.pff.PSTTableBC,java.util.HashMap)>(r5, r6, r0, r7);

        return $r21;

     label4:
        $z4 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("IPM.Contact");

        if $z4 == 0 goto label5;

        $r18 = new com.pff.PSTContact;

        specialinvoke $r18.<com.pff.PSTContact: void <init>(com.pff.PSTFile,com.pff.DescriptorIndexNode,com.pff.PSTTableBC,java.util.HashMap)>(r5, r6, r0, r7);

        return $r18;

     label5:
        $z5 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("IPM.Task");

        if $z5 == 0 goto label6;

        $r17 = new com.pff.PSTTask;

        specialinvoke $r17.<com.pff.PSTTask: void <init>(com.pff.PSTFile,com.pff.DescriptorIndexNode,com.pff.PSTTableBC,java.util.HashMap)>(r5, r6, r0, r7);

        return $r17;

     label6:
        $z6 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("IPM.Activity");

        if $z6 == 0 goto label7;

        $r16 = new com.pff.PSTActivity;

        specialinvoke $r16.<com.pff.PSTActivity: void <init>(com.pff.PSTFile,com.pff.DescriptorIndexNode,com.pff.PSTTableBC,java.util.HashMap)>(r5, r6, r0, r7);

        return $r16;

     label7:
        $z7 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("IPM.Post.Rss");

        if $z7 == 0 goto label8;

        $r15 = new com.pff.PSTRss;

        specialinvoke $r15.<com.pff.PSTRss: void <init>(com.pff.PSTFile,com.pff.DescriptorIndexNode,com.pff.PSTTableBC,java.util.HashMap)>(r5, r6, r0, r7);

        return $r15;

     label8:
        $z8 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("IPM.DistList");

        if $z8 == 0 goto label9;

        $r14 = new com.pff.PSTDistList;

        specialinvoke $r14.<com.pff.PSTDistList: void <init>(com.pff.PSTFile,com.pff.DescriptorIndexNode,com.pff.PSTTableBC,java.util.HashMap)>(r5, r6, r0, r7);

        return $r14;

     label9:
        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown message type: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r13 = new com.pff.PSTMessage;

        specialinvoke $r13.<com.pff.PSTMessage: void <init>(com.pff.PSTFile,com.pff.DescriptorIndexNode,com.pff.PSTTableBC,java.util.HashMap)>(r5, r6, r0, r7);

        return $r13;
    }

    static java.lang.String guessPSTObjectType(com.pff.PSTFile, com.pff.DescriptorIndexNode) throws java.io.IOException, com.pff.PSTException
    {
        long $l0;
        java.util.HashMap $r5;
        java.lang.Integer r9;
        com.pff.PSTTableBC $r0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        com.pff.DescriptorIndexNode r3;
        boolean $z0;
        java.util.Iterator $r7;
        java.util.Set $r6;
        com.pff.OffsetIndexItem $r4;
        com.pff.PSTFile r2;
        java.lang.Object $r8;
        com.pff.PSTNodeInputStream $r1;

        r2 := @parameter0: com.pff.PSTFile;

        r3 := @parameter1: com.pff.DescriptorIndexNode;

        $r0 = new com.pff.PSTTableBC;

        $r1 = new com.pff.PSTNodeInputStream;

        $l0 = r3.<com.pff.DescriptorIndexNode: long dataOffsetIndexIdentifier>;

        $r4 = virtualinvoke r2.<com.pff.PSTFile: com.pff.OffsetIndexItem getOffsetIndexNode(long)>($l0);

        specialinvoke $r1.<com.pff.PSTNodeInputStream: void <init>(com.pff.PSTFile,com.pff.OffsetIndexItem)>(r2, $r4);

        specialinvoke $r0.<com.pff.PSTTableBC: void <init>(com.pff.PSTNodeInputStream)>($r1);

        $r5 = virtualinvoke $r0.<com.pff.PSTTableBC: java.util.HashMap getItems()>();

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Set keySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.Integer) $r8;

        $i1 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if $i1 < 1 goto label02;

        $i16 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if $i16 > 3071 goto label02;

        return "Message envelope";

     label02:
        $i2 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if $i2 < 4096 goto label03;

        $i15 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if $i15 > 12287 goto label03;

        return "Message content";

     label03:
        $i3 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if $i3 < 13312 goto label04;

        $i14 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if $i14 > 13823 goto label04;

        return "Message store";

     label04:
        $i4 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if $i4 < 13824 goto label05;

        $i13 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if $i13 > 14079 goto label05;

        return "Folder and address book";

     label05:
        $i5 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if $i5 < 14080 goto label06;

        $i12 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if $i12 > 14591 goto label06;

        return "Attachment";

     label06:
        $i6 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if $i6 < 14592 goto label07;

        $i11 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if $i11 > 14847 goto label07;

        return "Address book";

     label07:
        $i7 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if $i7 < 14848 goto label08;

        $i10 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if $i10 > 15359 goto label08;

        return "Messaging user";

     label08:
        $i8 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if $i8 < 15360 goto label09;

        $i9 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        if $i9 > 15615 goto label09;

        return "Distribution list";

     label09:
        goto label01;

     label10:
        return "Unknown";
    }

    protected static java.util.Date filetimeToDate(int, int)
    {
        java.util.Date $r0;
        long $l1, $l3, $l4, $l5, l6, l7, l8;
        int i0, i2;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $l1 = (long) i0;

        $l5 = $l1 << 32;

        $l3 = (long) i2;

        $l4 = $l3 & 4294967295L;

        l6 = $l5 | $l4;

        l7 = l6 / 10000L;

        l8 = l7 - 11644473600000L;

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>(long)>(l8);

        return $r0;
    }

    public static java.util.Calendar apptTimeToCalendar(int)
    {
        java.util.Calendar $r1;
        int i0;
        long $l1, l2, l3;
        java.util.SimpleTimeZone $r0;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        l2 = $l1 * 60000L;

        l3 = l2 - 11644473600000L;

        $r0 = <com.pff.PSTTimeZone: java.util.SimpleTimeZone utcTimeZone>;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r0);

        virtualinvoke $r1.<java.util.Calendar: void setTimeInMillis(long)>(l3);

        return $r1;
    }

    public static java.util.Calendar apptTimeToUTC(int, com.pff.PSTTimeZone)
    {
        long $l7, l8, $l9;
        com.pff.PSTTimeZone r1;
        java.util.Calendar $r0, $r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.SimpleTimeZone $r2;

        i0 := @parameter0: int;

        r1 := @parameter1: com.pff.PSTTimeZone;

        $r0 = staticinvoke <com.pff.PSTObject: java.util.Calendar apptTimeToCalendar(int)>(i0);

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<com.pff.PSTTimeZone: java.util.SimpleTimeZone getSimpleTimeZone()>();

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r2);

        virtualinvoke $r3.<java.util.Calendar: void clear()>();

        $i1 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(1);

        $i2 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(2);

        $i3 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(5);

        $i4 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(11);

        $i5 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(12);

        $i6 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(13);

        virtualinvoke $r3.<java.util.Calendar: void set(int,int,int,int,int,int)>($i1, $i2, $i3, $i4, $i5, $i6);

        $l7 = virtualinvoke $r3.<java.util.Calendar: long getTimeInMillis()>();

        l8 = $l7 / 1000L;

        $l9 = l8 * 1000L;

        virtualinvoke $r0.<java.util.Calendar: void setTimeInMillis(long)>($l9);

     label1:
        return $r0;
    }

    static void <clinit>()
    {
        int[] $r0;

        <com.pff.PSTObject: long EPOCH_DIFF> = 11644473600000L;

        <com.pff.PSTObject: int NID_TYPE_LTP> = 31;

        <com.pff.PSTObject: int NID_TYPE_SEARCH_TABLE_INDEX> = 19;

        <com.pff.PSTObject: int NID_TYPE_RECIPIENT_TABLE> = 18;

        <com.pff.PSTObject: int NID_TYPE_ATTACHMENT_TABLE> = 17;

        <com.pff.PSTObject: int NID_TYPE_SEARCH_CONTENTS_TABLE> = 16;

        <com.pff.PSTObject: int NID_TYPE_ASSOC_CONTENTS_TABLE> = 15;

        <com.pff.PSTObject: int NID_TYPE_CONTENTS_TABLE> = 14;

        <com.pff.PSTObject: int NID_TYPE_HIERARCHY_TABLE> = 13;

        <com.pff.PSTObject: int NID_TYPE_OUTGOING_QUEUE_TABLE> = 12;

        <com.pff.PSTObject: int NID_TYPE_RECEIVE_FOLDER_TABLE> = 11;

        <com.pff.PSTObject: int NID_TYPE_CONTENTS_TABLE_INDEX> = 10;

        <com.pff.PSTObject: int NID_TYPE_ASSOC_MESSAGE> = 8;

        <com.pff.PSTObject: int NID_TYPE_SEARCH_CRITERIA_OBJECT> = 7;

        <com.pff.PSTObject: int NID_TYPE_SEARCH_UPDATE_QUEUE> = 6;

        <com.pff.PSTObject: int NID_TYPE_ATTACHMENT> = 5;

        <com.pff.PSTObject: int NID_TYPE_NORMAL_MESSAGE> = 4;

        <com.pff.PSTObject: int NID_TYPE_SEARCH_FOLDER> = 3;

        <com.pff.PSTObject: int NID_TYPE_NORMAL_FOLDER> = 2;

        <com.pff.PSTObject: int NID_TYPE_INTERNAL> = 1;

        <com.pff.PSTObject: int NID_TYPE_HID> = 0;

        $r0 = newarray (int)[256];

        $r0[0] = 71;

        $r0[1] = 241;

        $r0[2] = 180;

        $r0[3] = 230;

        $r0[4] = 11;

        $r0[5] = 106;

        $r0[6] = 114;

        $r0[7] = 72;

        $r0[8] = 133;

        $r0[9] = 78;

        $r0[10] = 158;

        $r0[11] = 235;

        $r0[12] = 226;

        $r0[13] = 248;

        $r0[14] = 148;

        $r0[15] = 83;

        $r0[16] = 224;

        $r0[17] = 187;

        $r0[18] = 160;

        $r0[19] = 2;

        $r0[20] = 232;

        $r0[21] = 90;

        $r0[22] = 9;

        $r0[23] = 171;

        $r0[24] = 219;

        $r0[25] = 227;

        $r0[26] = 186;

        $r0[27] = 198;

        $r0[28] = 124;

        $r0[29] = 195;

        $r0[30] = 16;

        $r0[31] = 221;

        $r0[32] = 57;

        $r0[33] = 5;

        $r0[34] = 150;

        $r0[35] = 48;

        $r0[36] = 245;

        $r0[37] = 55;

        $r0[38] = 96;

        $r0[39] = 130;

        $r0[40] = 140;

        $r0[41] = 201;

        $r0[42] = 19;

        $r0[43] = 74;

        $r0[44] = 107;

        $r0[45] = 29;

        $r0[46] = 243;

        $r0[47] = 251;

        $r0[48] = 143;

        $r0[49] = 38;

        $r0[50] = 151;

        $r0[51] = 202;

        $r0[52] = 145;

        $r0[53] = 23;

        $r0[54] = 1;

        $r0[55] = 196;

        $r0[56] = 50;

        $r0[57] = 45;

        $r0[58] = 110;

        $r0[59] = 49;

        $r0[60] = 149;

        $r0[61] = 255;

        $r0[62] = 217;

        $r0[63] = 35;

        $r0[64] = 209;

        $r0[65] = 0;

        $r0[66] = 94;

        $r0[67] = 121;

        $r0[68] = 220;

        $r0[69] = 68;

        $r0[70] = 59;

        $r0[71] = 26;

        $r0[72] = 40;

        $r0[73] = 197;

        $r0[74] = 97;

        $r0[75] = 87;

        $r0[76] = 32;

        $r0[77] = 144;

        $r0[78] = 61;

        $r0[79] = 131;

        $r0[80] = 185;

        $r0[81] = 67;

        $r0[82] = 190;

        $r0[83] = 103;

        $r0[84] = 210;

        $r0[85] = 70;

        $r0[86] = 66;

        $r0[87] = 118;

        $r0[88] = 192;

        $r0[89] = 109;

        $r0[90] = 91;

        $r0[91] = 126;

        $r0[92] = 178;

        $r0[93] = 15;

        $r0[94] = 22;

        $r0[95] = 41;

        $r0[96] = 60;

        $r0[97] = 169;

        $r0[98] = 3;

        $r0[99] = 84;

        $r0[100] = 13;

        $r0[101] = 218;

        $r0[102] = 93;

        $r0[103] = 223;

        $r0[104] = 246;

        $r0[105] = 183;

        $r0[106] = 199;

        $r0[107] = 98;

        $r0[108] = 205;

        $r0[109] = 141;

        $r0[110] = 6;

        $r0[111] = 211;

        $r0[112] = 105;

        $r0[113] = 92;

        $r0[114] = 134;

        $r0[115] = 214;

        $r0[116] = 20;

        $r0[117] = 247;

        $r0[118] = 165;

        $r0[119] = 102;

        $r0[120] = 117;

        $r0[121] = 172;

        $r0[122] = 177;

        $r0[123] = 233;

        $r0[124] = 69;

        $r0[125] = 33;

        $r0[126] = 112;

        $r0[127] = 12;

        $r0[128] = 135;

        $r0[129] = 159;

        $r0[130] = 116;

        $r0[131] = 164;

        $r0[132] = 34;

        $r0[133] = 76;

        $r0[134] = 111;

        $r0[135] = 191;

        $r0[136] = 31;

        $r0[137] = 86;

        $r0[138] = 170;

        $r0[139] = 46;

        $r0[140] = 179;

        $r0[141] = 120;

        $r0[142] = 51;

        $r0[143] = 80;

        $r0[144] = 176;

        $r0[145] = 163;

        $r0[146] = 146;

        $r0[147] = 188;

        $r0[148] = 207;

        $r0[149] = 25;

        $r0[150] = 28;

        $r0[151] = 167;

        $r0[152] = 99;

        $r0[153] = 203;

        $r0[154] = 30;

        $r0[155] = 77;

        $r0[156] = 62;

        $r0[157] = 75;

        $r0[158] = 27;

        $r0[159] = 155;

        $r0[160] = 79;

        $r0[161] = 231;

        $r0[162] = 240;

        $r0[163] = 238;

        $r0[164] = 173;

        $r0[165] = 58;

        $r0[166] = 181;

        $r0[167] = 89;

        $r0[168] = 4;

        $r0[169] = 234;

        $r0[170] = 64;

        $r0[171] = 85;

        $r0[172] = 37;

        $r0[173] = 81;

        $r0[174] = 229;

        $r0[175] = 122;

        $r0[176] = 137;

        $r0[177] = 56;

        $r0[178] = 104;

        $r0[179] = 82;

        $r0[180] = 123;

        $r0[181] = 252;

        $r0[182] = 39;

        $r0[183] = 174;

        $r0[184] = 215;

        $r0[185] = 189;

        $r0[186] = 250;

        $r0[187] = 7;

        $r0[188] = 244;

        $r0[189] = 204;

        $r0[190] = 142;

        $r0[191] = 95;

        $r0[192] = 239;

        $r0[193] = 53;

        $r0[194] = 156;

        $r0[195] = 132;

        $r0[196] = 43;

        $r0[197] = 21;

        $r0[198] = 213;

        $r0[199] = 119;

        $r0[200] = 52;

        $r0[201] = 73;

        $r0[202] = 182;

        $r0[203] = 18;

        $r0[204] = 10;

        $r0[205] = 127;

        $r0[206] = 113;

        $r0[207] = 136;

        $r0[208] = 253;

        $r0[209] = 157;

        $r0[210] = 24;

        $r0[211] = 65;

        $r0[212] = 125;

        $r0[213] = 147;

        $r0[214] = 216;

        $r0[215] = 88;

        $r0[216] = 44;

        $r0[217] = 206;

        $r0[218] = 254;

        $r0[219] = 36;

        $r0[220] = 175;

        $r0[221] = 222;

        $r0[222] = 184;

        $r0[223] = 54;

        $r0[224] = 200;

        $r0[225] = 161;

        $r0[226] = 128;

        $r0[227] = 166;

        $r0[228] = 153;

        $r0[229] = 152;

        $r0[230] = 168;

        $r0[231] = 47;

        $r0[232] = 14;

        $r0[233] = 129;

        $r0[234] = 101;

        $r0[235] = 115;

        $r0[236] = 228;

        $r0[237] = 194;

        $r0[238] = 162;

        $r0[239] = 138;

        $r0[240] = 212;

        $r0[241] = 225;

        $r0[242] = 17;

        $r0[243] = 208;

        $r0[244] = 8;

        $r0[245] = 139;

        $r0[246] = 42;

        $r0[247] = 242;

        $r0[248] = 237;

        $r0[249] = 154;

        $r0[250] = 100;

        $r0[251] = 63;

        $r0[252] = 193;

        $r0[253] = 108;

        $r0[254] = 249;

        $r0[255] = 236;

        <com.pff.PSTObject: int[] compEnc> = $r0;

        return;
    }
}
