abstract class org.tukaani.xz.index.IndexBase extends java.lang.Object
{
    private final org.tukaani.xz.XZIOException invalidIndexException;
    long blocksSum;
    long uncompressedSum;
    long indexListSize;
    long recordCount;

    void <init>(org.tukaani.xz.XZIOException)
    {
        org.tukaani.xz.XZIOException r1;
        org.tukaani.xz.index.IndexBase r0;

        r0 := @this: org.tukaani.xz.index.IndexBase;

        r1 := @parameter0: org.tukaani.xz.XZIOException;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.tukaani.xz.index.IndexBase: long blocksSum> = 0L;

        r0.<org.tukaani.xz.index.IndexBase: long uncompressedSum> = 0L;

        r0.<org.tukaani.xz.index.IndexBase: long indexListSize> = 0L;

        r0.<org.tukaani.xz.index.IndexBase: long recordCount> = 0L;

        r0.<org.tukaani.xz.index.IndexBase: org.tukaani.xz.XZIOException invalidIndexException> = r1;

        return;
    }

    private long getUnpaddedIndexSize()
    {
        org.tukaani.xz.index.IndexBase r0;
        long $l0, $l3, $l4, $l5, $l6;
        int $i1, $i2;

        r0 := @this: org.tukaani.xz.index.IndexBase;

        $l0 = r0.<org.tukaani.xz.index.IndexBase: long recordCount>;

        $i1 = staticinvoke <org.tukaani.xz.common.Util: int getVLISize(long)>($l0);

        $i2 = 1 + $i1;

        $l4 = (long) $i2;

        $l3 = r0.<org.tukaani.xz.index.IndexBase: long indexListSize>;

        $l5 = $l4 + $l3;

        $l6 = $l5 + 4L;

        return $l6;
    }

    public long getIndexSize()
    {
        org.tukaani.xz.index.IndexBase r0;
        long $l0, $l1, $l2;

        r0 := @this: org.tukaani.xz.index.IndexBase;

        $l0 = specialinvoke r0.<org.tukaani.xz.index.IndexBase: long getUnpaddedIndexSize()>();

        $l1 = $l0 + 3L;

        $l2 = $l1 & -4L;

        return $l2;
    }

    public long getStreamSize()
    {
        org.tukaani.xz.index.IndexBase r0;
        long $l0, $l1, $l2, $l3, $l4;

        r0 := @this: org.tukaani.xz.index.IndexBase;

        $l0 = r0.<org.tukaani.xz.index.IndexBase: long blocksSum>;

        $l1 = 12L + $l0;

        $l2 = virtualinvoke r0.<org.tukaani.xz.index.IndexBase: long getIndexSize()>();

        $l3 = $l1 + $l2;

        $l4 = $l3 + 12L;

        return $l4;
    }

    int getIndexPaddingSize()
    {
        org.tukaani.xz.index.IndexBase r0;
        int $i3;
        long $l0, $l1, $l2;

        r0 := @this: org.tukaani.xz.index.IndexBase;

        $l0 = specialinvoke r0.<org.tukaani.xz.index.IndexBase: long getUnpaddedIndexSize()>();

        $l1 = 4L - $l0;

        $l2 = $l1 & 3L;

        $i3 = (int) $l2;

        return $i3;
    }

    void add(long, long) throws org.tukaani.xz.XZIOException
    {
        org.tukaani.xz.index.IndexBase r0;
        long l0, $l1, $l2, $l3, $l4, l5, $l6, $l7, $l8, $l12, $l13, $l14, $l15, $l16, $l18, $l20, $l22;
        byte $b17, $b19, $b21, $b23;
        int $i9, $i10, $i11, $i24, $i25, $i26, $i27;
        org.tukaani.xz.XZIOException $r1;

        r0 := @this: org.tukaani.xz.index.IndexBase;

        l0 := @parameter0: long;

        l5 := @parameter1: long;

        $l3 = r0.<org.tukaani.xz.index.IndexBase: long blocksSum>;

        $l1 = l0 + 3L;

        $l2 = $l1 & -4L;

        $l4 = $l3 + $l2;

        r0.<org.tukaani.xz.index.IndexBase: long blocksSum> = $l4;

        $l6 = r0.<org.tukaani.xz.index.IndexBase: long uncompressedSum>;

        $l7 = $l6 + l5;

        r0.<org.tukaani.xz.index.IndexBase: long uncompressedSum> = $l7;

        $l8 = r0.<org.tukaani.xz.index.IndexBase: long indexListSize>;

        $i9 = staticinvoke <org.tukaani.xz.common.Util: int getVLISize(long)>(l0);

        $i10 = staticinvoke <org.tukaani.xz.common.Util: int getVLISize(long)>(l5);

        $i11 = $i9 + $i10;

        $l12 = (long) $i11;

        $l13 = $l8 + $l12;

        r0.<org.tukaani.xz.index.IndexBase: long indexListSize> = $l13;

        $l14 = r0.<org.tukaani.xz.index.IndexBase: long recordCount>;

        $l15 = $l14 + 1L;

        r0.<org.tukaani.xz.index.IndexBase: long recordCount> = $l15;

        $l16 = r0.<org.tukaani.xz.index.IndexBase: long blocksSum>;

        $b17 = $l16 cmp 0L;

        $i24 = (int) $b17;

        if $i24 < 0 goto label1;

        $l18 = r0.<org.tukaani.xz.index.IndexBase: long uncompressedSum>;

        $b19 = $l18 cmp 0L;

        $i25 = (int) $b19;

        if $i25 < 0 goto label1;

        $l20 = virtualinvoke r0.<org.tukaani.xz.index.IndexBase: long getIndexSize()>();

        $b21 = $l20 cmp 17179869184L;

        $i26 = (int) $b21;

        if $i26 > 0 goto label1;

        $l22 = virtualinvoke r0.<org.tukaani.xz.index.IndexBase: long getStreamSize()>();

        $b23 = $l22 cmp 0L;

        $i27 = (int) $b23;

        if $i27 >= 0 goto label2;

     label1:
        $r1 = r0.<org.tukaani.xz.index.IndexBase: org.tukaani.xz.XZIOException invalidIndexException>;

        throw $r1;

     label2:
        return;
    }
}
