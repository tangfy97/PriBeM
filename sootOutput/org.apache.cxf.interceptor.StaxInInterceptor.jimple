public class org.apache.cxf.interceptor.StaxInInterceptor extends org.apache.cxf.phase.AbstractPhaseInterceptor
{
    private static final java.util.logging.Logger LOG;
    private static java.util.Map factories;

    public void <init>()
    {
        org.apache.cxf.interceptor.StaxInInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.StaxInInterceptor;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>("post-stream");

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.cxf.interceptor.StaxInInterceptor r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.interceptor.StaxInInterceptor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>(r1);

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message)
    {
        org.apache.cxf.interceptor.InterceptorChain $r7;
        javax.xml.stream.XMLInputFactory $r40;
        javax.xml.stream.XMLStreamReader r41, $r42;
        java.util.Map $r11, $r12;
        javax.xml.stream.XMLStreamException $r24;
        org.apache.cxf.interceptor.StaxInEndingInterceptor $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.Reader r35;
        java.util.logging.Logger $r2, $r21, $r28, $r34;
        java.util.List $r13, $r14;
        java.lang.Throwable $r29;
        java.lang.Object[] $r20, $r27, $r33;
        org.apache.cxf.common.i18n.Message $r19, $r26, $r32;
        org.apache.cxf.interceptor.Fault $r18, $r25, $r31;
        int $i0;
        org.apache.cxf.interceptor.StaxInInterceptor r0;
        java.lang.String $r9, $r15, $r17, $r23, $r36, $r37, $r39;
        org.apache.cxf.message.Message r1;
        java.io.IOException $r30;
        java.lang.Object $r3, $r4, $r6, $r10, $r16, $r22, $r38;
        java.io.InputStream r5;

        r0 := @this: org.apache.cxf.interceptor.StaxInInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        $z0 = virtualinvoke r0.<org.apache.cxf.interceptor.StaxInInterceptor: boolean isGET(org.apache.cxf.message.Message)>(r1);

        if $z0 != 0 goto label01;

        $r3 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamReader;");

        if $r3 == null goto label02;

     label01:
        $r2 = <org.apache.cxf.interceptor.StaxInInterceptor: java.util.logging.Logger LOG>;

        virtualinvoke $r2.<java.util.logging.Logger: void fine(java.lang.String)>("StaxInInterceptor skipped.");

        return;

     label02:
        $r4 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/InputStream;");

        r5 = (java.io.InputStream) $r4;

        r35 = null;

        if r5 != null goto label03;

        $r22 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/Reader;");

        r35 = (java.io.Reader) $r22;

        if r35 != null goto label03;

        return;

     label03:
        $r6 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("Content-Type");

        $r23 = (java.lang.String) $r6;

        if $r23 == null goto label11;

        $z4 = virtualinvoke $r23.<java.lang.String: boolean contains(java.lang.CharSequence)>("text/html");

        if $z4 == 0 goto label11;

     label04:
        $r17 = staticinvoke <org.apache.cxf.helpers.IOUtils: java.lang.String toString(java.io.InputStream,int)>(r5, 500);

     label05:
        goto label07;

     label06:
        $r30 := @caughtexception;

        $r31 = new org.apache.cxf.interceptor.Fault;

        $r32 = new org.apache.cxf.common.i18n.Message;

        $r34 = <org.apache.cxf.interceptor.StaxInInterceptor: java.util.logging.Logger LOG>;

        $r33 = newarray (java.lang.Object)[1];

        $r33[0] = "(none)";

        specialinvoke $r32.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("INVALID_HTML_RESPONSETYPE", $r34, $r33);

        specialinvoke $r31.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message)>($r32);

        throw $r31;

     label07:
        $r18 = new org.apache.cxf.interceptor.Fault;

        $r19 = new org.apache.cxf.common.i18n.Message;

        $r21 = <org.apache.cxf.interceptor.StaxInInterceptor: java.util.logging.Logger LOG>;

        $r20 = newarray (java.lang.Object)[1];

        if $r17 == null goto label08;

        $i0 = virtualinvoke $r17.<java.lang.String: int length()>();

        if $i0 != 0 goto label09;

     label08:
        $r36 = "(none)";

        goto label10;

     label09:
        $r36 = $r17;

     label10:
        $r20[0] = $r36;

        specialinvoke $r19.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("INVALID_HTML_RESPONSETYPE", $r21, $r20);

        specialinvoke $r18.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message)>($r19);

        throw $r18;

     label11:
        if $r23 != null goto label13;

        $r9 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r10 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (java.util.Map) $r10;

        $r12 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map)>($r11);

        if $r12 == null goto label13;

        $r13 = staticinvoke <org.apache.cxf.helpers.HttpHeaderHelper: java.util.List getHeader(java.util.Map,java.lang.String)>($r12, "Content-Length");

        $r14 = staticinvoke <org.apache.cxf.helpers.HttpHeaderHelper: java.util.List getHeader(java.util.Map,java.lang.String)>($r12, "Content-Transfer-Encoding");

        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.util.List)>($r13);

        if $z1 != 0 goto label12;

        $r15 = "0";

        $r16 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(0);

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z3 == 0 goto label13;

     label12:
        $z2 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.util.List)>($r14);

        if $z2 == 0 goto label13;

        return;

     label13:
        $r37 = <org.apache.cxf.message.Message: java.lang.String ENCODING>;

        $r38 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r37);

        $r39 = (java.lang.String) $r38;

     label14:
        $r40 = staticinvoke <org.apache.cxf.interceptor.StaxInInterceptor: javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)>(r1);

        if $r40 != null goto label16;

        if r35 == null goto label15;

        r41 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)>(r35);

        goto label23;

     label15:
        r41 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)>(r5, $r39);

        goto label23;

     label16:
        entermonitor $r40;

     label17:
        if r35 == null goto label18;

        r41 = virtualinvoke $r40.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)>(r35);

        goto label19;

     label18:
        r41 = virtualinvoke $r40.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)>(r5, $r39);

     label19:
        exitmonitor $r40;

     label20:
        goto label23;

     label21:
        $r29 := @caughtexception;

        exitmonitor $r40;

     label22:
        throw $r29;

     label23:
        $r42 = specialinvoke r0.<org.apache.cxf.interceptor.StaxInInterceptor: javax.xml.stream.XMLStreamReader configureRestrictions(javax.xml.stream.XMLStreamReader,org.apache.cxf.message.Message)>(r41, r1);

     label24:
        goto label26;

     label25:
        $r24 := @caughtexception;

        $r25 = new org.apache.cxf.interceptor.Fault;

        $r26 = new org.apache.cxf.common.i18n.Message;

        $r28 = <org.apache.cxf.interceptor.StaxInInterceptor: java.util.logging.Logger LOG>;

        $r27 = newarray (java.lang.Object)[1];

        $r27[0] = $r39;

        specialinvoke $r26.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("STREAM_CREATE_EXC", $r28, $r27);

        specialinvoke $r25.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message,java.lang.Throwable)>($r26, $r24);

        throw $r25;

     label26:
        interfaceinvoke r1.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljavax/xml/stream/XMLStreamReader;", $r42);

        $r7 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        $r8 = <org.apache.cxf.interceptor.StaxInEndingInterceptor: org.apache.cxf.interceptor.StaxInEndingInterceptor INSTANCE>;

        interfaceinvoke $r7.<org.apache.cxf.interceptor.InterceptorChain: void add(org.apache.cxf.interceptor.Interceptor)>($r8);

        return;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Throwable from label17 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
        catch javax.xml.stream.XMLStreamException from label14 to label24 with label25;
    }

    private javax.xml.stream.XMLStreamReader configureRestrictions(javax.xml.stream.XMLStreamReader, org.apache.cxf.message.Message) throws javax.xml.stream.XMLStreamException
    {
        org.apache.cxf.message.Message r1;
        java.lang.Integer $r2, $r3, $r4, $r5, $r6;
        java.lang.Long $r7, $r8;
        javax.xml.stream.XMLStreamReader r9, $r10;
        org.apache.cxf.interceptor.StaxInInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.StaxInInterceptor;

        r9 := @parameter0: javax.xml.stream.XMLStreamReader;

        r1 := @parameter1: org.apache.cxf.message.Message;

        $r2 = specialinvoke r0.<org.apache.cxf.interceptor.StaxInInterceptor: java.lang.Integer getInteger(org.apache.cxf.message.Message,java.lang.String)>(r1, "org.apache.cxf.stax.maxChildElements");

        $r3 = specialinvoke r0.<org.apache.cxf.interceptor.StaxInInterceptor: java.lang.Integer getInteger(org.apache.cxf.message.Message,java.lang.String)>(r1, "org.apache.cxf.stax.maxElementDepth");

        $r4 = specialinvoke r0.<org.apache.cxf.interceptor.StaxInInterceptor: java.lang.Integer getInteger(org.apache.cxf.message.Message,java.lang.String)>(r1, "org.apache.cxf.stax.maxAttributeCount");

        $r5 = specialinvoke r0.<org.apache.cxf.interceptor.StaxInInterceptor: java.lang.Integer getInteger(org.apache.cxf.message.Message,java.lang.String)>(r1, "org.apache.cxf.stax.maxAttributeSize");

        $r6 = specialinvoke r0.<org.apache.cxf.interceptor.StaxInInterceptor: java.lang.Integer getInteger(org.apache.cxf.message.Message,java.lang.String)>(r1, "org.apache.cxf.stax.maxTextLength");

        $r7 = specialinvoke r0.<org.apache.cxf.interceptor.StaxInInterceptor: java.lang.Long getLong(org.apache.cxf.message.Message,java.lang.String)>(r1, "org.apache.cxf.stax.maxElementCount");

        $r8 = specialinvoke r0.<org.apache.cxf.interceptor.StaxInInterceptor: java.lang.Long getLong(org.apache.cxf.message.Message,java.lang.String)>(r1, "org.apache.cxf.stax.maxXMLCharacters");

        $r10 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader configureReader(javax.xml.stream.XMLStreamReader,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Long,java.lang.Long)>(r9, $r2, $r3, $r4, $r5, $r6, $r7, $r8);

        return $r10;
    }

    private java.lang.Long getLong(org.apache.cxf.message.Message, java.lang.String)
    {
        org.apache.cxf.message.Message r0;
        long $l0;
        java.lang.Long $r4, $r6, $r7;
        java.lang.Object $r2;
        java.lang.String r1, $r3;
        org.apache.cxf.interceptor.StaxInInterceptor r8;
        java.lang.Number $r5;
        boolean $z0, $z1, $z2;

        r8 := @this: org.apache.cxf.interceptor.StaxInInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>(r1);

        $z0 = $r2 instanceof java.lang.Long;

        if $z0 == 0 goto label1;

        $r7 = (java.lang.Long) $r2;

        return $r7;

     label1:
        $z1 = $r2 instanceof java.lang.Number;

        if $z1 == 0 goto label2;

        $r5 = (java.lang.Number) $r2;

        $l0 = virtualinvoke $r5.<java.lang.Number: long longValue()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r6;

     label2:
        $z2 = $r2 instanceof java.lang.String;

        if $z2 == 0 goto label3;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r3);

        return $r4;

     label3:
        return null;
    }

    private java.lang.Integer getInteger(org.apache.cxf.message.Message, java.lang.String)
    {
        org.apache.cxf.message.Message r0;
        java.lang.Integer $r4, $r6, $r7;
        int $i0;
        java.lang.Object $r2;
        java.lang.String r1, $r3;
        org.apache.cxf.interceptor.StaxInInterceptor r8;
        java.lang.Number $r5;
        boolean $z0, $z1, $z2;

        r8 := @this: org.apache.cxf.interceptor.StaxInInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>(r1);

        $z0 = $r2 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r7 = (java.lang.Integer) $r2;

        return $r7;

     label1:
        $z1 = $r2 instanceof java.lang.Number;

        if $z1 == 0 goto label2;

        $r5 = (java.lang.Number) $r2;

        $i0 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r6;

     label2:
        $z2 = $r2 instanceof java.lang.String;

        if $z2 == 0 goto label3;

        $r3 = (java.lang.String) $r2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r3);

        return $r4;

     label3:
        return null;
    }

    public static javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        java.lang.Object[] $r8;
        javax.xml.stream.XMLInputFactory $r12, $r14, $r15, r22;
        org.apache.cxf.common.i18n.Message $r7;
        org.apache.cxf.interceptor.Fault $r6, $r17, $r19, $r21;
        java.util.Map $r4, $r13;
        java.lang.InstantiationException $r18;
        java.lang.String $r2, $r10;
        boolean $z0, $z1, $z2;
        java.lang.IllegalAccessException $r16;
        org.apache.cxf.message.Message r0;
        java.util.logging.Logger $r9;
        java.lang.Class $r1, r23;
        java.lang.Object $r3, $r5, $r11;
        java.lang.ClassNotFoundException $r20;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = class "Ljavax/xml/stream/XMLInputFactory;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>($r2);

        $z0 = $r3 instanceof javax.xml.stream.XMLInputFactory;

        if $z0 == 0 goto label01;

        $r15 = (javax.xml.stream.XMLInputFactory) $r3;

        return $r15;

     label01:
        if $r3 == null goto label12;

        $r4 = <org.apache.cxf.interceptor.StaxInInterceptor: java.util.Map factories>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r22 = (javax.xml.stream.XMLInputFactory) $r5;

        if r22 != null goto label11;

        $z1 = $r3 instanceof java.lang.Class;

        if $z1 == 0 goto label02;

        r23 = (java.lang.Class) $r3;

        goto label07;

     label02:
        $z2 = $r3 instanceof java.lang.String;

        if $z2 == 0 goto label06;

     label03:
        $r10 = (java.lang.String) $r3;

        r23 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>($r10, class "Lorg/apache/cxf/interceptor/StaxInInterceptor;");

     label04:
        goto label07;

     label05:
        $r20 := @caughtexception;

        $r21 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r21.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r20);

        throw $r21;

     label06:
        $r6 = new org.apache.cxf.interceptor.Fault;

        $r7 = new org.apache.cxf.common.i18n.Message;

        $r9 = <org.apache.cxf.interceptor.StaxInInterceptor: java.util.logging.Logger LOG>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = $r3;

        specialinvoke $r7.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("INVALID_INPUT_FACTORY", $r9, $r8);

        specialinvoke $r6.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message)>($r7);

        throw $r6;

     label07:
        $r11 = virtualinvoke r23.<java.lang.Class: java.lang.Object newInstance()>();

        $r12 = (javax.xml.stream.XMLInputFactory) $r11;

        $r14 = (javax.xml.stream.XMLInputFactory) $r12;

        r22 = $r14;

        $r13 = <org.apache.cxf.interceptor.StaxInInterceptor: java.util.Map factories>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r14);

     label08:
        goto label11;

     label09:
        $r18 := @caughtexception;

        $r19 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r19.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r18);

        throw $r19;

     label10:
        $r16 := @caughtexception;

        $r17 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r17.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r16);

        throw $r17;

     label11:
        return r22;

     label12:
        return null;

        catch java.lang.ClassNotFoundException from label03 to label04 with label05;
        catch java.lang.InstantiationException from label07 to label08 with label09;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
    }

    static void <clinit>()
    {
        java.util.HashMap $r1;
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/interceptor/StaxInInterceptor;");

        <org.apache.cxf.interceptor.StaxInInterceptor: java.util.logging.Logger LOG> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.apache.cxf.interceptor.StaxInInterceptor: java.util.Map factories> = $r1;

        return;
    }
}
