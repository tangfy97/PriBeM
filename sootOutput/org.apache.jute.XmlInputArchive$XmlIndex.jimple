class org.apache.jute.XmlInputArchive$XmlIndex extends java.lang.Object implements org.apache.jute.Index
{
    final org.apache.jute.XmlInputArchive this$0;

    private void <init>(org.apache.jute.XmlInputArchive)
    {
        org.apache.jute.XmlInputArchive$XmlIndex r0;
        org.apache.jute.XmlInputArchive r1;

        r0 := @this: org.apache.jute.XmlInputArchive$XmlIndex;

        r1 := @parameter0: org.apache.jute.XmlInputArchive;

        r0.<org.apache.jute.XmlInputArchive$XmlIndex: org.apache.jute.XmlInputArchive this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean done()
    {
        org.apache.jute.XmlInputArchive$Value r5;
        org.apache.jute.XmlInputArchive $r1, $r3, $r8, $r10, $r11;
        org.apache.jute.XmlInputArchive$XmlIndex r0;
        java.util.ArrayList $r2, $r9;
        int $i0, $i1;
        java.lang.Object $r4;
        java.lang.String $r6, $r7;
        boolean $z0;

        r0 := @this: org.apache.jute.XmlInputArchive$XmlIndex;

        $r1 = r0.<org.apache.jute.XmlInputArchive$XmlIndex: org.apache.jute.XmlInputArchive this$0>;

        $r2 = staticinvoke <org.apache.jute.XmlInputArchive: java.util.ArrayList access$100(org.apache.jute.XmlInputArchive)>($r1);

        $r3 = r0.<org.apache.jute.XmlInputArchive$XmlIndex: org.apache.jute.XmlInputArchive this$0>;

        $i0 = staticinvoke <org.apache.jute.XmlInputArchive: int access$000(org.apache.jute.XmlInputArchive)>($r3);

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r5 = (org.apache.jute.XmlInputArchive$Value) $r4;

        $r6 = "/array";

        $r7 = virtualinvoke r5.<org.apache.jute.XmlInputArchive$Value: java.lang.String getType()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label1;

        $r8 = r0.<org.apache.jute.XmlInputArchive$XmlIndex: org.apache.jute.XmlInputArchive this$0>;

        $r9 = staticinvoke <org.apache.jute.XmlInputArchive: java.util.ArrayList access$100(org.apache.jute.XmlInputArchive)>($r8);

        $r10 = r0.<org.apache.jute.XmlInputArchive$XmlIndex: org.apache.jute.XmlInputArchive this$0>;

        $i1 = staticinvoke <org.apache.jute.XmlInputArchive: int access$000(org.apache.jute.XmlInputArchive)>($r10);

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i1, null);

        $r11 = r0.<org.apache.jute.XmlInputArchive$XmlIndex: org.apache.jute.XmlInputArchive this$0>;

        staticinvoke <org.apache.jute.XmlInputArchive: int access$008(org.apache.jute.XmlInputArchive)>($r11);

        return 1;

     label1:
        return 0;
    }

    public void incr()
    {
        org.apache.jute.XmlInputArchive$XmlIndex r0;

        r0 := @this: org.apache.jute.XmlInputArchive$XmlIndex;

        return;
    }

    void <init>(org.apache.jute.XmlInputArchive, org.apache.jute.XmlInputArchive$1)
    {
        org.apache.jute.XmlInputArchive$XmlIndex r0;
        org.apache.jute.XmlInputArchive$1 r2;
        org.apache.jute.XmlInputArchive r1;

        r0 := @this: org.apache.jute.XmlInputArchive$XmlIndex;

        r1 := @parameter0: org.apache.jute.XmlInputArchive;

        r2 := @parameter1: org.apache.jute.XmlInputArchive$1;

        specialinvoke r0.<org.apache.jute.XmlInputArchive$XmlIndex: void <init>(org.apache.jute.XmlInputArchive)>(r1);

        return;
    }
}
