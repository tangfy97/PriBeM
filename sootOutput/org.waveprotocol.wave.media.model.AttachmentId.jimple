public final class org.waveprotocol.wave.media.model.AttachmentId extends java.lang.Object implements java.lang.Comparable
{
    public static final java.lang.String ATTACHMENT_PART_SEPARATOR;
    private final java.lang.String domain;
    private final java.lang.String id;
    private volatile java.lang.String serialized;

    public static org.waveprotocol.wave.media.model.AttachmentId deserialise(java.lang.String) throws org.waveprotocol.wave.model.id.InvalidIdException
    {
        org.waveprotocol.wave.model.id.InvalidIdException $r2;
        java.lang.String[] $r1;
        int $i0, $i1;
        org.waveprotocol.wave.media.model.AttachmentId $r8, $r10;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String r0, $r7, $r9, $r11, $r12;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "Null attachmentIdString");

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $i0 = lengthof $r1;

        if $i0 != 2 goto label1;

        $r10 = new org.waveprotocol.wave.media.model.AttachmentId;

        $r12 = $r1[0];

        $r11 = $r1[1];

        specialinvoke $r10.<org.waveprotocol.wave.media.model.AttachmentId: void <init>(java.lang.String,java.lang.String)>($r12, $r11);

        return $r10;

     label1:
        $i1 = lengthof $r1;

        if $i1 != 1 goto label2;

        $r8 = new org.waveprotocol.wave.media.model.AttachmentId;

        $r9 = $r1[0];

        specialinvoke $r8.<org.waveprotocol.wave.media.model.AttachmentId: void <init>(java.lang.String,java.lang.String)>("", $r9);

        return $r8;

     label2:
        $r2 = new org.waveprotocol.wave.model.id.InvalidIdException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to deserialise the attachment id: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". The attachment id needs to look like <domain>/<id> or <id>");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.waveprotocol.wave.model.id.InvalidIdException: void <init>(java.lang.String,java.lang.String)>(r0, $r7);

        throw $r2;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.media.model.AttachmentId r0;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r10;
        java.lang.String r1, r2, $r3, $r7, $r11;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.media.model.AttachmentId;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String serialized> = null;

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Null domain");

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "Null id");

        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");

        if $z0 == 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An AttachmentId domain component cannot contain the \'/\' domain separator: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void illegalArgument(java.lang.Object)>($r11);

     label1:
        $z1 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");

        if $z1 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An AttachmentId id component cannot contain the \'/\' id separator: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void illegalArgument(java.lang.Object)>($r7);

     label2:
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();

        r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String domain> = $r3;

        r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String id> = r2;

        return;
    }

    public java.lang.String getDomain()
    {
        org.waveprotocol.wave.media.model.AttachmentId r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.media.model.AttachmentId;

        $r1 = r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String domain>;

        return $r1;
    }

    public java.lang.String getId()
    {
        org.waveprotocol.wave.media.model.AttachmentId r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.media.model.AttachmentId;

        $r1 = r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String id>;

        return $r1;
    }

    public java.lang.String serialise()
    {
        org.waveprotocol.wave.media.model.AttachmentId r0;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r1, $r2, $r4, $r7, $r9, $r10, $r11;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.media.model.AttachmentId;

        $r1 = r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String serialized>;

        if $r1 != null goto label2;

        $r2 = r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String domain>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String id>;

        r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String serialized> = $r10;

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String domain>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String id>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String serialized> = $r9;

     label2:
        $r11 = r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String serialized>;

        return $r11;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2, i3, i4;
        org.waveprotocol.wave.media.model.AttachmentId r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.waveprotocol.wave.media.model.AttachmentId;

        $r1 = r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String domain>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        i3 = 31 + $i0;

        $i1 = 31 * i3;

        $r2 = r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String id>;

        $i2 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.media.model.AttachmentId r0, r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        java.lang.String $r5, $r6, $r7, $r8;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.media.model.AttachmentId;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.waveprotocol.wave.media.model.AttachmentId) r1;

        $r6 = r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String domain>;

        $r5 = r4.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String domain>;

        if $r6 != $r5 goto label4;

        $r8 = r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String id>;

        $r7 = r4.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String id>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.media.model.AttachmentId r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;

        r2 := @this: org.waveprotocol.wave.media.model.AttachmentId;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[AttachmentId:");

        $r3 = virtualinvoke r2.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String serialise()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public int compareTo(org.waveprotocol.wave.media.model.AttachmentId)
    {
        int $i0, $i1;
        org.waveprotocol.wave.media.model.AttachmentId r0, r1;
        java.lang.String $r2, $r3, $r4, $r5;

        r0 := @this: org.waveprotocol.wave.media.model.AttachmentId;

        r1 := @parameter0: org.waveprotocol.wave.media.model.AttachmentId;

        $r3 = r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String domain>;

        $r2 = r1.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String domain>;

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r2);

        if $i0 != 0 goto label1;

        $r5 = r0.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String id>;

        $r4 = r1.<org.waveprotocol.wave.media.model.AttachmentId: java.lang.String id>;

        $i1 = virtualinvoke $r5.<java.lang.String: int compareTo(java.lang.String)>($r4);

        return $i1;

     label1:
        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        org.waveprotocol.wave.media.model.AttachmentId r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.media.model.AttachmentId;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.media.model.AttachmentId) r1;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.media.model.AttachmentId: int compareTo(org.waveprotocol.wave.media.model.AttachmentId)>($r2);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.waveprotocol.wave.media.model.AttachmentId: java.lang.String ATTACHMENT_PART_SEPARATOR> = "/";

        return;
    }
}
