final class org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor extends java.lang.Object implements org.springframework.asm.AnnotationVisitor
{
    private final java.lang.String annotationType;
    private final java.util.Map attributesMap;
    private final java.util.Map metaAnnotationMap;
    private final java.lang.ClassLoader classLoader;
    private final java.util.Map localAttributes;

    public void <init>(java.lang.String, java.util.Map, java.util.Map, java.lang.ClassLoader)
    {
        org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor r0;
        java.util.LinkedHashMap $r1;
        java.util.Map r3, r4;
        java.lang.String r2;
        java.lang.ClassLoader r5;

        r0 := @this: org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Map;

        r4 := @parameter2: java.util.Map;

        r5 := @parameter3: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.util.Map localAttributes> = $r1;

        r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.lang.String annotationType> = r2;

        r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.util.Map attributesMap> = r3;

        r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.util.Map metaAnnotationMap> = r4;

        r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.lang.ClassLoader classLoader> = r5;

        return;
    }

    public void visit(java.lang.String, java.lang.Object)
    {
        org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor r0;
        java.util.Map $r3;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.util.Map localAttributes>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void visitEnum(java.lang.String, java.lang.String, java.lang.String)
    {
        org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor r1;
        java.lang.reflect.Field $r7;
        java.lang.Exception $r9;
        java.util.Map $r11;
        java.lang.Class $r6;
        java.lang.Object r10;
        java.lang.String r0, r2, $r5, r8;
        java.lang.ClassLoader $r3;
        org.springframework.asm.Type $r4;

        r1 := @this: org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor;

        r8 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        r10 = r0;

     label1:
        $r3 = r1.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.lang.ClassLoader classLoader>;

        $r4 = staticinvoke <org.springframework.asm.Type: org.springframework.asm.Type getType(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<org.springframework.asm.Type: java.lang.String getClassName()>();

        $r6 = virtualinvoke $r3.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r5);

        $r7 = staticinvoke <org.springframework.util.ReflectionUtils: java.lang.reflect.Field findField(java.lang.Class,java.lang.String)>($r6, r0);

        if $r7 == null goto label4;

        r10 = virtualinvoke $r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        $r11 = r1.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.util.Map localAttributes>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r10);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public org.springframework.asm.AnnotationVisitor visitAnnotation(java.lang.String, java.lang.String)
    {
        org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor r1;
        org.springframework.asm.commons.EmptyVisitor $r0;
        java.lang.String r2, r3;

        r1 := @this: org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new org.springframework.asm.commons.EmptyVisitor;

        specialinvoke $r0.<org.springframework.asm.commons.EmptyVisitor: void <init>()>();

        return $r0;
    }

    public org.springframework.asm.AnnotationVisitor visitArray(java.lang.String)
    {
        org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor r1;
        java.lang.String r2;
        org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor$1 $r0;

        r1 := @this: org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor$1;

        specialinvoke $r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor$1: void <init>(org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor,java.lang.String)>(r1, r2);

        return $r0;
    }

    public void visitEnd()
    {
        org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor r0;
        java.lang.reflect.Method[] $r7;
        java.util.Map $r1, $r3, $r10, $r11, $r16, $r23, $r26, $r27, $r29;
        java.lang.reflect.Method r31;
        boolean $z0, $z1;
        java.lang.'annotation'.Annotation r32, r33;
        java.lang.ClassLoader $r5;
        java.lang.'annotation'.Annotation[] $r13, $r20;
        int $i0, i1, i2, i3, i4, i5;
        java.lang.String $r2, $r4, $r8, $r15, $r18, $r22, $r25, $r28;
        java.util.LinkedHashSet $r12;
        java.lang.Class $r6, $r14, $r17, $r19, $r21, $r24;
        java.lang.Object $r9;
        java.lang.ClassNotFoundException $r30;

        r0 := @this: org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor;

        $r3 = r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.util.Map attributesMap>;

        $r2 = r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.lang.String annotationType>;

        $r1 = r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.util.Map localAttributes>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

     label01:
        $r5 = r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.lang.ClassLoader classLoader>;

        $r4 = r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.lang.String annotationType>;

        $r6 = virtualinvoke $r5.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i1 = lengthof $r7;

        i2 = 0;

        goto label04;

     label02:
        r31 = $r7[i2];

        $r8 = virtualinvoke r31.<java.lang.reflect.Method: java.lang.String getName()>();

        $r9 = virtualinvoke r31.<java.lang.reflect.Method: java.lang.Object getDefaultValue()>();

        if $r9 == null goto label03;

        $r10 = r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.util.Map localAttributes>;

        $z0 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        if $z0 != 0 goto label03;

        $r11 = r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.util.Map localAttributes>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

     label03:
        i2 = i2 + 1;

     label04:
        if i2 < i1 goto label02;

        $r12 = new java.util.LinkedHashSet;

        specialinvoke $r12.<java.util.LinkedHashSet: void <init>()>();

        $r13 = virtualinvoke $r6.<java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()>();

        i3 = lengthof $r13;

        i4 = 0;

        goto label09;

     label05:
        r32 = $r13[i4];

        $r14 = interfaceinvoke r32.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r15);

        $r16 = r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.util.Map attributesMap>;

        $r17 = interfaceinvoke r32.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $z1 = interfaceinvoke $r16.<java.util.Map: boolean containsKey(java.lang.Object)>($r18);

        if $z1 != 0 goto label06;

        $r23 = r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.util.Map attributesMap>;

        $r24 = interfaceinvoke r32.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.String getName()>();

        $r26 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.util.Map getAnnotationAttributes(java.lang.'annotation'.Annotation,boolean)>(r32, 1);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r26);

     label06:
        $r19 = interfaceinvoke r32.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()>();

        $i0 = lengthof $r20;

        i5 = 0;

        goto label08;

     label07:
        r33 = $r20[i5];

        $r21 = interfaceinvoke r33.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r22);

        i5 = i5 + 1;

     label08:
        if i5 < $i0 goto label07;

        i4 = i4 + 1;

     label09:
        if i4 < i3 goto label05;

        $r27 = r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.util.Map metaAnnotationMap>;

        if $r27 == null goto label12;

        $r29 = r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.util.Map metaAnnotationMap>;

        $r28 = r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.lang.String annotationType>;

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, $r12);

     label10:
        goto label12;

     label11:
        $r30 := @caughtexception;

     label12:
        return;

        catch java.lang.ClassNotFoundException from label01 to label10 with label11;
    }

    static java.util.Map access$0(org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor)
    {
        org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor r0;
        java.util.Map $r1;

        r0 := @parameter0: org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor;

        $r1 = r0.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: java.util.Map localAttributes>;

        return $r1;
    }
}
