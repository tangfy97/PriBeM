public class org.apache.tika.parser.microsoft.ExcelExtractor extends org.apache.tika.parser.microsoft.AbstractPOIFSExtractor
{
    private boolean listenForAllRecords;
    private static final java.lang.String WORKBOOK_ENTRY;

    public void <init>(org.apache.tika.parser.ParseContext)
    {
        org.apache.tika.parser.microsoft.ExcelExtractor r0;
        org.apache.tika.parser.ParseContext r1;

        r0 := @this: org.apache.tika.parser.microsoft.ExcelExtractor;

        r1 := @parameter0: org.apache.tika.parser.ParseContext;

        specialinvoke r0.<org.apache.tika.parser.microsoft.AbstractPOIFSExtractor: void <init>(org.apache.tika.parser.ParseContext)>(r1);

        r0.<org.apache.tika.parser.microsoft.ExcelExtractor: boolean listenForAllRecords> = 0;

        return;
    }

    public boolean isListenForAllRecords()
    {
        org.apache.tika.parser.microsoft.ExcelExtractor r0;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.microsoft.ExcelExtractor;

        $z0 = r0.<org.apache.tika.parser.microsoft.ExcelExtractor: boolean listenForAllRecords>;

        return $z0;
    }

    public void setListenForAllRecords(boolean)
    {
        org.apache.tika.parser.microsoft.ExcelExtractor r0;
        boolean z0;

        r0 := @this: org.apache.tika.parser.microsoft.ExcelExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.tika.parser.microsoft.ExcelExtractor: boolean listenForAllRecords> = z0;

        return;
    }

    protected void parse(org.apache.poi.poifs.filesystem.NPOIFSFileSystem, org.apache.tika.sax.XHTMLContentHandler, java.util.Locale) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.poi.poifs.filesystem.DirectoryNode $r2;
        org.apache.tika.sax.XHTMLContentHandler r3;
        java.util.Locale r4;
        org.apache.poi.poifs.filesystem.NPOIFSFileSystem r1;
        org.apache.tika.parser.microsoft.ExcelExtractor r0;

        r0 := @this: org.apache.tika.parser.microsoft.ExcelExtractor;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.NPOIFSFileSystem;

        r3 := @parameter1: org.apache.tika.sax.XHTMLContentHandler;

        r4 := @parameter2: java.util.Locale;

        $r2 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        virtualinvoke r0.<org.apache.tika.parser.microsoft.ExcelExtractor: void parse(org.apache.poi.poifs.filesystem.DirectoryNode,org.apache.tika.sax.XHTMLContentHandler,java.util.Locale)>($r2, r3, r4);

        return;
    }

    protected void parse(org.apache.poi.poifs.filesystem.DirectoryNode, org.apache.tika.sax.XHTMLContentHandler, java.util.Locale) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.poi.poifs.filesystem.Entry r7;
        org.apache.tika.exception.TikaException $r10;
        java.util.Locale r3;
        java.lang.String $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r5;
        org.apache.tika.sax.XHTMLContentHandler r2;
        org.apache.tika.parser.microsoft.ExcelExtractor$TikaHSSFListener $r1;
        org.apache.poi.poifs.filesystem.DirectoryEntry $r9;
        org.apache.tika.parser.microsoft.ExcelExtractor r4;
        org.apache.poi.poifs.filesystem.DirectoryNode r0;
        java.lang.Object $r6;

        r4 := @this: org.apache.tika.parser.microsoft.ExcelExtractor;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryNode;

        r2 := @parameter1: org.apache.tika.sax.XHTMLContentHandler;

        r3 := @parameter2: java.util.Locale;

        $z0 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryNode: boolean hasEntry(java.lang.String)>("Workbook");

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new org.apache.tika.parser.microsoft.ExcelExtractor$TikaHSSFListener;

        specialinvoke $r1.<org.apache.tika.parser.microsoft.ExcelExtractor$TikaHSSFListener: void <init>(org.apache.tika.sax.XHTMLContentHandler,java.util.Locale,org.apache.tika.parser.microsoft.AbstractPOIFSExtractor,org.apache.tika.parser.microsoft.ExcelExtractor$1)>(r2, r3, r4, null);

        $z1 = virtualinvoke r4.<org.apache.tika.parser.microsoft.ExcelExtractor: boolean isListenForAllRecords()>();

        virtualinvoke $r1.<org.apache.tika.parser.microsoft.ExcelExtractor$TikaHSSFListener: void processFile(org.apache.poi.poifs.filesystem.DirectoryNode,boolean)>(r0, $z1);

        virtualinvoke $r1.<org.apache.tika.parser.microsoft.ExcelExtractor$TikaHSSFListener: void throwStoredException()>();

        $r5 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryNode: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.poi.poifs.filesystem.Entry) $r6;

        $r8 = interfaceinvoke r7.<org.apache.poi.poifs.filesystem.Entry: java.lang.String getName()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("MBD");

        if $z3 == 0 goto label6;

        $z4 = r7 instanceof org.apache.poi.poifs.filesystem.DirectoryEntry;

        if $z4 == 0 goto label6;

     label3:
        $r9 = (org.apache.poi.poifs.filesystem.DirectoryEntry) r7;

        virtualinvoke r4.<org.apache.tika.parser.microsoft.ExcelExtractor: void handleEmbeddedOfficeDoc(org.apache.poi.poifs.filesystem.DirectoryEntry,org.apache.tika.sax.XHTMLContentHandler)>($r9, r2);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

     label6:
        goto label2;

     label7:
        return;

        catch org.apache.tika.exception.TikaException from label3 to label4 with label5;
    }

    public static void <clinit>()
    {
        <org.apache.tika.parser.microsoft.ExcelExtractor: java.lang.String WORKBOOK_ENTRY> = "Workbook";

        return;
    }
}
