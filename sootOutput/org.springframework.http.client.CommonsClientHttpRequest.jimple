final class org.springframework.http.client.CommonsClientHttpRequest extends org.springframework.http.client.AbstractClientHttpRequest
{
    private final org.apache.commons.httpclient.HttpClient httpClient;
    private final org.apache.commons.httpclient.HttpMethodBase httpMethod;

    void <init>(org.apache.commons.httpclient.HttpClient, org.apache.commons.httpclient.HttpMethodBase)
    {
        org.apache.commons.httpclient.HttpClient r1;
        org.apache.commons.httpclient.HttpMethodBase r2;
        org.springframework.http.client.CommonsClientHttpRequest r0;

        r0 := @this: org.springframework.http.client.CommonsClientHttpRequest;

        r1 := @parameter0: org.apache.commons.httpclient.HttpClient;

        r2 := @parameter1: org.apache.commons.httpclient.HttpMethodBase;

        specialinvoke r0.<org.springframework.http.client.AbstractClientHttpRequest: void <init>()>();

        r0.<org.springframework.http.client.CommonsClientHttpRequest: org.apache.commons.httpclient.HttpClient httpClient> = r1;

        r0.<org.springframework.http.client.CommonsClientHttpRequest: org.apache.commons.httpclient.HttpMethodBase httpMethod> = r2;

        return;
    }

    public org.springframework.http.HttpMethod getMethod()
    {
        org.apache.commons.httpclient.HttpMethodBase $r1;
        org.springframework.http.client.CommonsClientHttpRequest r0;
        org.springframework.http.HttpMethod $r3;
        java.lang.String $r2;

        r0 := @this: org.springframework.http.client.CommonsClientHttpRequest;

        $r1 = r0.<org.springframework.http.client.CommonsClientHttpRequest: org.apache.commons.httpclient.HttpMethodBase httpMethod>;

        $r2 = virtualinvoke $r1.<org.apache.commons.httpclient.HttpMethodBase: java.lang.String getName()>();

        $r3 = staticinvoke <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod valueOf(java.lang.String)>($r2);

        return $r3;
    }

    public java.net.URI getURI()
    {
        java.lang.Throwable $r5;
        java.lang.IllegalStateException $r12;
        org.apache.commons.httpclient.HttpMethodBase $r1;
        org.springframework.http.client.CommonsClientHttpRequest r0;
        org.apache.commons.httpclient.URIException $r13;
        java.lang.StringBuilder $r9, $r11;
        java.lang.String $r3, $r8, $r10;
        java.net.URI $r4;
        org.apache.commons.httpclient.URI $r2;

        r0 := @this: org.springframework.http.client.CommonsClientHttpRequest;

     label1:
        $r1 = r0.<org.springframework.http.client.CommonsClientHttpRequest: org.apache.commons.httpclient.HttpMethodBase httpMethod>;

        $r2 = virtualinvoke $r1.<org.apache.commons.httpclient.HttpMethodBase: org.apache.commons.httpclient.URI getURI()>();

        $r3 = virtualinvoke $r2.<org.apache.commons.httpclient.URI: java.lang.String getEscapedURI()>();

        $r4 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r12 = new java.lang.IllegalStateException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not get HttpMethod URI: ");

        $r13 = (org.apache.commons.httpclient.URIException) $r5;

        $r8 = virtualinvoke $r13.<org.apache.commons.httpclient.URIException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r5);

        throw $r12;

        catch org.apache.commons.httpclient.URIException from label1 to label2 with label3;
    }

    public org.springframework.http.client.ClientHttpResponse executeInternal(org.springframework.http.HttpHeaders, byte[]) throws java.io.IOException
    {
        byte[] r20;
        org.springframework.http.client.CommonsClientHttpResponse $r24;
        java.lang.String r5, r10;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r21;
        java.util.Iterator $r2, $r8;
        org.apache.commons.httpclient.HttpMethodBase $r12, $r13, $r14, $r17, $r18;
        org.springframework.http.HttpHeaders r0;
        org.springframework.http.client.CommonsClientHttpRequest r11;
        java.util.Set $r1;
        java.util.List $r7;
        org.apache.commons.httpclient.HttpMethod $r26, $r27;
        org.apache.commons.httpclient.methods.ByteArrayRequestEntity $r23;
        org.apache.commons.httpclient.HttpClient $r15;
        java.lang.Object $r3, $r4, $r6, $r9;
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r22;
        org.apache.commons.httpclient.methods.RequestEntity $r25;

        r11 := @this: org.springframework.http.client.CommonsClientHttpRequest;

        r0 := @parameter0: org.springframework.http.HttpHeaders;

        r20 := @parameter1: byte[];

        $r1 = virtualinvoke r0.<org.springframework.http.HttpHeaders: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        goto label4;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r3;

        $r4 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (java.lang.String) $r4;

        $r6 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.util.List) $r6;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        $r12 = r11.<org.springframework.http.client.CommonsClientHttpRequest: org.apache.commons.httpclient.HttpMethodBase httpMethod>;

        virtualinvoke $r12.<org.apache.commons.httpclient.HttpMethodBase: void addRequestHeader(java.lang.String,java.lang.String)>(r5, r10);

     label3:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label2;

     label4:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r13 = r11.<org.springframework.http.client.CommonsClientHttpRequest: org.apache.commons.httpclient.HttpMethodBase httpMethod>;

        $z2 = $r13 instanceof org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        if $z2 == 0 goto label5;

        $r18 = r11.<org.springframework.http.client.CommonsClientHttpRequest: org.apache.commons.httpclient.HttpMethodBase httpMethod>;

        r22 = (org.apache.commons.httpclient.methods.EntityEnclosingMethod) $r18;

        $r23 = new org.apache.commons.httpclient.methods.ByteArrayRequestEntity;

        specialinvoke $r23.<org.apache.commons.httpclient.methods.ByteArrayRequestEntity: void <init>(byte[])>(r20);

        $r25 = (org.apache.commons.httpclient.methods.RequestEntity) $r23;

        virtualinvoke r22.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: void setRequestEntity(org.apache.commons.httpclient.methods.RequestEntity)>($r25);

     label5:
        $r15 = r11.<org.springframework.http.client.CommonsClientHttpRequest: org.apache.commons.httpclient.HttpClient httpClient>;

        $r14 = r11.<org.springframework.http.client.CommonsClientHttpRequest: org.apache.commons.httpclient.HttpMethodBase httpMethod>;

        $r26 = (org.apache.commons.httpclient.HttpMethod) $r14;

        virtualinvoke $r15.<org.apache.commons.httpclient.HttpClient: int executeMethod(org.apache.commons.httpclient.HttpMethod)>($r26);

        $r24 = new org.springframework.http.client.CommonsClientHttpResponse;

        $r17 = r11.<org.springframework.http.client.CommonsClientHttpRequest: org.apache.commons.httpclient.HttpMethodBase httpMethod>;

        $r27 = (org.apache.commons.httpclient.HttpMethod) $r17;

        specialinvoke $r24.<org.springframework.http.client.CommonsClientHttpResponse: void <init>(org.apache.commons.httpclient.HttpMethod)>($r27);

        return $r24;
    }
}
