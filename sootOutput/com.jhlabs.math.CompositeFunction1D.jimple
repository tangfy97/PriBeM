public class com.jhlabs.math.CompositeFunction1D extends java.lang.Object implements com.jhlabs.math.Function1D
{
    private com.jhlabs.math.Function1D f1;
    private com.jhlabs.math.Function1D f2;

    public void <init>(com.jhlabs.math.Function1D, com.jhlabs.math.Function1D)
    {
        com.jhlabs.math.CompositeFunction1D r0;
        com.jhlabs.math.Function1D r1, r2;

        r0 := @this: com.jhlabs.math.CompositeFunction1D;

        r1 := @parameter0: com.jhlabs.math.Function1D;

        r2 := @parameter1: com.jhlabs.math.Function1D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jhlabs.math.CompositeFunction1D: com.jhlabs.math.Function1D f1> = r1;

        r0.<com.jhlabs.math.CompositeFunction1D: com.jhlabs.math.Function1D f2> = r2;

        return;
    }

    public float evaluate(float)
    {
        com.jhlabs.math.CompositeFunction1D r0;
        com.jhlabs.math.Function1D $r1, $r2;
        float f0, $f1, $f2;

        r0 := @this: com.jhlabs.math.CompositeFunction1D;

        f0 := @parameter0: float;

        $r2 = r0.<com.jhlabs.math.CompositeFunction1D: com.jhlabs.math.Function1D f1>;

        $r1 = r0.<com.jhlabs.math.CompositeFunction1D: com.jhlabs.math.Function1D f2>;

        $f1 = interfaceinvoke $r1.<com.jhlabs.math.Function1D: float evaluate(float)>(f0);

        $f2 = interfaceinvoke $r2.<com.jhlabs.math.Function1D: float evaluate(float)>($f1);

        return $f2;
    }
}
