public class org.apache.http.impl.client.SystemDefaultHttpClient extends org.apache.http.impl.client.DefaultHttpClient
{

    public void <init>(org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.client.SystemDefaultHttpClient r0;
        org.apache.http.params.HttpParams r1;

        r0 := @this: org.apache.http.impl.client.SystemDefaultHttpClient;

        r1 := @parameter0: org.apache.http.params.HttpParams;

        specialinvoke r0.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>(null, r1);

        return;
    }

    public void <init>()
    {
        org.apache.http.impl.client.SystemDefaultHttpClient r0;

        r0 := @this: org.apache.http.impl.client.SystemDefaultHttpClient;

        specialinvoke r0.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>(null, null);

        return;
    }

    protected org.apache.http.conn.ClientConnectionManager createClientConnectionManager()
    {
        org.apache.http.conn.scheme.SchemeRegistry $r1;
        org.apache.http.impl.client.SystemDefaultHttpClient r5;
        int $i0, $i1;
        java.lang.String $r2, $r3, $r4;
        org.apache.http.impl.conn.PoolingClientConnectionManager $r0;
        boolean $z0;

        r5 := @this: org.apache.http.impl.client.SystemDefaultHttpClient;

        $r0 = new org.apache.http.impl.conn.PoolingClientConnectionManager;

        $r1 = staticinvoke <org.apache.http.impl.conn.SchemeRegistryFactory: org.apache.http.conn.scheme.SchemeRegistry createSystemDefault()>();

        specialinvoke $r0.<org.apache.http.impl.conn.PoolingClientConnectionManager: void <init>(org.apache.http.conn.scheme.SchemeRegistry)>($r1);

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("http.keepAlive", "true");

        $r3 = "true";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("http.maxConnections", "5");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        virtualinvoke $r0.<org.apache.http.impl.conn.PoolingClientConnectionManager: void setDefaultMaxPerRoute(int)>($i0);

        $i1 = 2 * $i0;

        virtualinvoke $r0.<org.apache.http.impl.conn.PoolingClientConnectionManager: void setMaxTotal(int)>($i1);

     label1:
        return $r0;
    }

    protected org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner()
    {
        java.net.ProxySelector $r4;
        org.apache.http.conn.scheme.SchemeRegistry $r3;
        org.apache.http.conn.ClientConnectionManager $r2;
        org.apache.http.impl.conn.ProxySelectorRoutePlanner $r0;
        org.apache.http.impl.client.SystemDefaultHttpClient r1;

        r1 := @this: org.apache.http.impl.client.SystemDefaultHttpClient;

        $r0 = new org.apache.http.impl.conn.ProxySelectorRoutePlanner;

        $r2 = virtualinvoke r1.<org.apache.http.impl.client.SystemDefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        $r3 = interfaceinvoke $r2.<org.apache.http.conn.ClientConnectionManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()>();

        $r4 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>();

        specialinvoke $r0.<org.apache.http.impl.conn.ProxySelectorRoutePlanner: void <init>(org.apache.http.conn.scheme.SchemeRegistry,java.net.ProxySelector)>($r3, $r4);

        return $r0;
    }

    protected org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy()
    {
        org.apache.http.impl.NoConnectionReuseStrategy $r2;
        org.apache.http.impl.DefaultConnectionReuseStrategy $r3;
        java.lang.String $r0, $r1;
        boolean $z0;
        org.apache.http.impl.client.SystemDefaultHttpClient r4;

        r4 := @this: org.apache.http.impl.client.SystemDefaultHttpClient;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("http.keepAlive", "true");

        $r1 = "true";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        $r3 = new org.apache.http.impl.DefaultConnectionReuseStrategy;

        specialinvoke $r3.<org.apache.http.impl.DefaultConnectionReuseStrategy: void <init>()>();

        return $r3;

     label1:
        $r2 = new org.apache.http.impl.NoConnectionReuseStrategy;

        specialinvoke $r2.<org.apache.http.impl.NoConnectionReuseStrategy: void <init>()>();

        return $r2;
    }
}
