class org.apache.poi.hpsf.ClipboardData extends java.lang.Object
{
    private static final org.apache.poi.util.POILogger logger;
    private int _format;
    private byte[] _value;

    void <init>(byte[], int)
    {
        byte[] r1, $r2, $r5;
        org.apache.poi.util.POILogger $r3;
        java.lang.Integer $r4;
        org.apache.poi.hpsf.ClipboardData r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.poi.hpsf.ClipboardData;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i0);

        if $i1 >= 4 goto label1;

        $r3 = <org.apache.poi.hpsf.ClipboardData: org.apache.poi.util.POILogger logger>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r3.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object)>(5, "ClipboardData at offset ", $r4, " size less than 4 bytes (doesn\'t even have format field!). Setting to format == 0 and hope for the best");

        r0.<org.apache.poi.hpsf.ClipboardData: int _format> = 0;

        $r5 = newarray (byte)[0];

        r0.<org.apache.poi.hpsf.ClipboardData: byte[] _value> = $r5;

        return;

     label1:
        $i2 = i0 + 4;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, $i2);

        r0.<org.apache.poi.hpsf.ClipboardData: int _format> = $i3;

        $i5 = i0 + 8;

        $i4 = $i1 - 4;

        $r2 = staticinvoke <org.apache.poi.util.LittleEndian: byte[] getByteArray(byte[],int,int)>(r1, $i5, $i4);

        r0.<org.apache.poi.hpsf.ClipboardData: byte[] _value> = $r2;

        return;
    }

    int getSize()
    {
        byte[] $r1;
        org.apache.poi.hpsf.ClipboardData r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.hpsf.ClipboardData;

        $r1 = r0.<org.apache.poi.hpsf.ClipboardData: byte[] _value>;

        $i0 = lengthof $r1;

        $i1 = 8 + $i0;

        return $i1;
    }

    byte[] getValue()
    {
        byte[] $r1;
        org.apache.poi.hpsf.ClipboardData r0;

        r0 := @this: org.apache.poi.hpsf.ClipboardData;

        $r1 = r0.<org.apache.poi.hpsf.ClipboardData: byte[] _value>;

        return $r1;
    }

    byte[] toByteArray()
    {
        byte[] r1, $r2, $r3, $r4;
        org.apache.poi.hpsf.ClipboardData r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.poi.hpsf.ClipboardData;

        $i0 = virtualinvoke r0.<org.apache.poi.hpsf.ClipboardData: int getSize()>();

        r1 = newarray (byte)[$i0];

        $r2 = r0.<org.apache.poi.hpsf.ClipboardData: byte[] _value>;

        $i1 = lengthof $r2;

        $i2 = 4 + $i1;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r1, 0, $i2);

        $i3 = r0.<org.apache.poi.hpsf.ClipboardData: int _format>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r1, 4, $i3);

        $r4 = r0.<org.apache.poi.hpsf.ClipboardData: byte[] _value>;

        $r3 = r0.<org.apache.poi.hpsf.ClipboardData: byte[] _value>;

        $i4 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r1, 8, $i4);

        return r1;
    }

    int write(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] $r1, $r3, $r4;
        org.apache.poi.hpsf.ClipboardData r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.poi.hpsf.ClipboardData;

        r2 := @parameter0: java.io.OutputStream;

        $r1 = r0.<org.apache.poi.hpsf.ClipboardData: byte[] _value>;

        $i0 = lengthof $r1;

        $i1 = 4 + $i0;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(int,java.io.OutputStream)>($i1, r2);

        $i2 = r0.<org.apache.poi.hpsf.ClipboardData: int _format>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(int,java.io.OutputStream)>($i2, r2);

        $r3 = r0.<org.apache.poi.hpsf.ClipboardData: byte[] _value>;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r3);

        $r4 = r0.<org.apache.poi.hpsf.ClipboardData: byte[] _value>;

        $i3 = lengthof $r4;

        $i4 = 8 + $i3;

        return $i4;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hpsf/ClipboardData;");

        <org.apache.poi.hpsf.ClipboardData: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
