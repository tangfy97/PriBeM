public final class facebook4j.internal.http.HttpClientFactory extends java.lang.Object
{
    private static final java.lang.reflect.Constructor HTTP_CLIENT_CONSTRUCTOR;
    private static final java.lang.String HTTP_CLIENT_IMPLEMENTATION;

    public void <init>()
    {
        facebook4j.internal.http.HttpClientFactory r0;

        r0 := @this: facebook4j.internal.http.HttpClientFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static facebook4j.internal.http.HttpClient getInstance(facebook4j.internal.http.HttpClientConfiguration)
    {
        java.lang.IllegalAccessException $r7;
        java.lang.Object[] $r0;
        java.lang.AssertionError $r6, $r8, $r10;
        java.lang.reflect.Constructor $r2;
        java.lang.reflect.InvocationTargetException $r5;
        facebook4j.internal.http.HttpClientConfiguration r1;
        java.lang.InstantiationException $r9;
        java.lang.Object $r3;
        facebook4j.internal.http.HttpClient $r4;

        r1 := @parameter0: facebook4j.internal.http.HttpClientConfiguration;

     label1:
        $r2 = <facebook4j.internal.http.HttpClientFactory: java.lang.reflect.Constructor HTTP_CLIENT_CONSTRUCTOR>;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r0);

        $r4 = (facebook4j.internal.http.HttpClient) $r3;

     label2:
        return $r4;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r10;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r7);

        throw $r8;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw $r6;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    static void <clinit>()
    {
        java.lang.NoSuchMethodException $r3;
        java.lang.Class[] $r1;
        java.lang.AssertionError $r4, $r6;
        java.lang.reflect.Constructor $r2;
        java.lang.ClassNotFoundException $r5, $r7, $r8;
        java.lang.Class r9;
        java.lang.String $r0;

        <facebook4j.internal.http.HttpClientFactory: java.lang.String HTTP_CLIENT_IMPLEMENTATION> = "facebook4j.http.httpClient";

        r9 = null;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("facebook4j.http.httpClient");

        if $r0 == null goto label04;

     label01:
        r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

     label02:
        goto label04;

     label03:
        $r8 := @caughtexception;

     label04:
        if null != r9 goto label08;

     label05:
        r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("facebook4j.internal.http.alternative.HttpClientImpl");

     label06:
        goto label08;

     label07:
        $r7 := @caughtexception;

     label08:
        if null != r9 goto label12;

     label09:
        r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("facebook4j.internal.http.HttpClientImpl");

     label10:
        goto label12;

     label11:
        $r5 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw $r6;

     label12:
        $r1 = newarray (java.lang.Class)[1];

        $r1[0] = class "Lfacebook4j/internal/http/HttpClientConfiguration;";

        $r2 = virtualinvoke r9.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r1);

        <facebook4j.internal.http.HttpClientFactory: java.lang.reflect.Constructor HTTP_CLIENT_CONSTRUCTOR> = $r2;

     label13:
        goto label15;

     label14:
        $r3 := @caughtexception;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r3);

        throw $r4;

     label15:
        return;

        catch java.lang.ClassNotFoundException from label01 to label02 with label03;
        catch java.lang.ClassNotFoundException from label05 to label06 with label07;
        catch java.lang.ClassNotFoundException from label09 to label10 with label11;
        catch java.lang.NoSuchMethodException from label12 to label13 with label14;
    }
}
