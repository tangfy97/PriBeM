abstract class org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty extends java.lang.Object
{
    private java.lang.String key;
    final org.codehaus.jettison.mapped.MappedXMLStreamWriter this$0;

    public void <init>(org.codehaus.jettison.mapped.MappedXMLStreamWriter, java.lang.String)
    {
        org.codehaus.jettison.mapped.MappedXMLStreamWriter r1;
        java.lang.String r2;
        org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty r0;

        r0 := @this: org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty;

        r1 := @parameter0: org.codehaus.jettison.mapped.MappedXMLStreamWriter;

        r2 := @parameter1: java.lang.String;

        r0.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty: org.codehaus.jettison.mapped.MappedXMLStreamWriter this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty: java.lang.String key> = r2;

        return;
    }

    public java.lang.String getKey()
    {
        java.lang.String $r1;
        org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty r0;

        r0 := @this: org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty;

        $r1 = r0.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty: java.lang.String key>;

        return $r1;
    }

    public abstract java.lang.Object getValue();

    public abstract void addText(java.lang.String);

    public abstract org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyObject withProperty(org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty, boolean);

    public org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyObject withProperty(org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty)
    {
        org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty r0, r1;
        org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyObject $r2;

        r0 := @this: org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty;

        r1 := @parameter0: org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty;

        $r2 = virtualinvoke r0.<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty: org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyObject withProperty(org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONProperty,boolean)>(r1, 1);

        return $r2;
    }
}
