public class org.codehaus.groovy.runtime.metaclass.MetaMethodIndex extends java.lang.Object
{
    public org.codehaus.groovy.reflection.SingleKeyHashMap methodHeaders;
    private org.codehaus.groovy.reflection.CachedClass theCachedClass;
    protected org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] table;
    protected static final int DEFAULT_CAPACITY;
    protected static final int MINIMUM_CAPACITY;
    protected static final int MAXIMUM_CAPACITY;
    protected int size;
    protected transient int threshold;
    static java.lang.Class class$java$lang$Object;

    public void <init>(org.codehaus.groovy.reflection.CachedClass)
    {
        boolean $z0;
        org.codehaus.groovy.reflection.CachedClass r2, r14, r15;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header $r6, $r12;
        org.codehaus.groovy.reflection.SingleKeyHashMap $r1, $r4, $r9;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r0;
        java.lang.Class $r3, $r7, $r8, $r10, $r13, $r16, $r17, $r18;
        org.codehaus.groovy.reflection.SingleKeyHashMap$Entry $r5, $r11;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r2 := @parameter0: org.codehaus.groovy.reflection.CachedClass;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.codehaus.groovy.reflection.SingleKeyHashMap;

        specialinvoke $r1.<org.codehaus.groovy.reflection.SingleKeyHashMap: void <init>()>();

        r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.reflection.SingleKeyHashMap methodHeaders> = $r1;

        r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.reflection.CachedClass theCachedClass> = r2;

        virtualinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void init(int)>(32);

        r14 = null;

        $z0 = virtualinvoke r2.<org.codehaus.groovy.reflection.CachedClass: boolean isInterface()>();

        if $z0 != 0 goto label05;

        r15 = r2;

     label01:
        if r15 == null goto label04;

        $r9 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.reflection.SingleKeyHashMap methodHeaders>;

        $r10 = virtualinvoke r15.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r11 = virtualinvoke $r9.<org.codehaus.groovy.reflection.SingleKeyHashMap: org.codehaus.groovy.reflection.SingleKeyHashMap$Entry getOrPut(java.lang.Object)>($r10);

        $r12 = new org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        $r13 = virtualinvoke r15.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        if r14 != null goto label02;

        $r16 = null;

        goto label03;

     label02:
        $r16 = virtualinvoke r14.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

     label03:
        specialinvoke $r12.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header: void <init>(java.lang.Class,java.lang.Class)>($r13, $r16);

        $r11.<org.codehaus.groovy.reflection.SingleKeyHashMap$Entry: java.lang.Object value> = $r12;

        r14 = r15;

        r15 = virtualinvoke r15.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedClass getCachedSuperClass()>();

        goto label01;

     label04:
        goto label10;

     label05:
        $r4 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.reflection.SingleKeyHashMap methodHeaders>;

        $r3 = <org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Class class$java$lang$Object>;

        if $r3 != null goto label06;

        $r17 = staticinvoke <org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Class class$java$lang$Object> = $r17;

        goto label07;

     label06:
        $r17 = <org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Class class$java$lang$Object>;

     label07:
        $r5 = virtualinvoke $r4.<org.codehaus.groovy.reflection.SingleKeyHashMap: org.codehaus.groovy.reflection.SingleKeyHashMap$Entry getOrPut(java.lang.Object)>($r17);

        $r6 = new org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        $r7 = <org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Class class$java$lang$Object>;

        if $r7 != null goto label08;

        $r18 = staticinvoke <org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Class class$java$lang$Object> = $r18;

        goto label09;

     label08:
        $r18 = <org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Class class$java$lang$Object>;

     label09:
        $r8 = virtualinvoke r2.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        specialinvoke $r6.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header: void <init>(java.lang.Class,java.lang.Class)>($r18, $r8);

        $r5.<org.codehaus.groovy.reflection.SingleKeyHashMap$Entry: java.lang.Object value> = $r6;

     label10:
        return;
    }

    public static int hash(int)
    {
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9, $i11;

        i5 := @parameter0: int;

        $i0 = i5 << 9;

        $i11 = (int) -1;

        $i1 = $i0 ^ $i11;

        i6 = i5 + $i1;

        $i2 = i6 >>> 14;

        i7 = i6 ^ $i2;

        $i3 = i7 << 4;

        i8 = i7 + $i3;

        $i4 = i8 >>> 10;

        i9 = i8 ^ $i4;

        return i9;
    }

    public int size()
    {
        int $i0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r0;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        $i0 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: int size>;

        return $i0;
    }

    public boolean isEmpty()
    {
        int $i0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        $i0 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: int size>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clear()
    {
        int $i0, i1;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] table>;

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        r1[i1] = null;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: int size> = 0;

        return;
    }

    public void init(int)
    {
        int i0, $i1, $i2;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] $r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        i0 := @parameter0: int;

        $i1 = i0 * 6;

        $i2 = $i1 / 8;

        r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: int threshold> = $i2;

        $r1 = newarray (org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry)[i0];

        r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] table> = $r1;

        return;
    }

    public void resize(int)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r4, $r5, r6;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] r1, $r2, r3;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        i1 := @parameter0: int;

        r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] table>;

        $r2 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] table>;

        i0 = lengthof $r2;

        r3 = newarray (org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry)[i1];

        i7 = 0;

     label1:
        if i7 >= i0 goto label4;

        r6 = r1[i7];

     label2:
        if r6 == null goto label3;

        r4 = r6.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry nextHashEntry>;

        $i5 = r6.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: int hash>;

        $i4 = i1 - 1;

        i6 = $i5 & $i4;

        $r5 = r3[i6];

        r6.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry nextHashEntry> = $r5;

        r3[i6] = r6;

        r6 = r4;

        goto label2;

     label3:
        i7 = i7 + 1;

        goto label1;

     label4:
        r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] table> = r3;

        $i2 = 6 * i1;

        $i3 = $i2 / 8;

        r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: int threshold> = $i3;

        return;
    }

    public org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] getTable()
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] $r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] table>;

        return $r1;
    }

    public org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$EntryIterator getEntrySetIterator()
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r1;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$1 $r0;

        r1 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        $r0 = new org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$1;

        specialinvoke $r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$1: void <init>(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex)>(r1);

        return $r0;
    }

    public final org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getMethods(java.lang.Class, java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r1, $r6, $r7;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] $r3, $r4;
        boolean $z0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r8;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r2;
        java.lang.Class r0, $r5;

        r2 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i1 = 31 * $i0;

        $i2 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        $i3 = $i1 + $i2;

        $i4 = staticinvoke <org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: int hash(int)>($i3);

        $r4 = r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] table>;

        $r3 = r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] table>;

        $i5 = lengthof $r3;

        $i6 = $i5 - 1;

        $i7 = $i4 & $i6;

        r8 = $r4[$i7];

     label1:
        if r8 == null goto label4;

        $i8 = r8.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: int hash>;

        if $i8 != $i4 goto label3;

        $r5 = r8.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Class 'cls'>;

        if r0 != $r5 goto label3;

        $r6 = r8.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name>;

        if $r6 == r1 goto label2;

        $r7 = r8.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

     label2:
        return r8;

     label3:
        r8 = r8.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry nextHashEntry>;

        goto label1;

     label4:
        return null;
    }

    public org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getOrPutMethods(java.lang.String, org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String r2, $r7, $r10, $r11;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] r4;
        boolean $z0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry $r5, $r6, $r8, r12;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r3;
        java.lang.Class r1, $r9;

        r3 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header: java.lang.Class 'cls'>;

        $i0 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header: int clsHashCode31>;

        $i1 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        $i2 = $i0 + $i1;

        $i3 = staticinvoke <org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: int hash(int)>($i2);

        r4 = r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] table>;

        $i4 = lengthof r4;

        $i5 = $i4 - 1;

        i6 = $i3 & $i5;

        r12 = r4[i6];

     label1:
        if r12 == null goto label4;

        $i12 = r12.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: int hash>;

        if $i12 != $i3 goto label3;

        $r9 = r12.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Class 'cls'>;

        if r1 != $r9 goto label3;

        $r10 = r12.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name>;

        if $r10 == r2 goto label2;

        $r11 = r12.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name>;

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

     label2:
        return r12;

     label3:
        r12 = r12.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry nextHashEntry>;

        goto label1;

     label4:
        $r5 = new org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry;

        specialinvoke $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: void <init>()>();

        $r6 = r4[i6];

        $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry nextHashEntry> = $r6;

        $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: int hash> = $i3;

        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();

        $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name> = $r7;

        $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Class 'cls'> = r1;

        r4[i6] = $r5;

        $r8 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry head>;

        $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry nextClassEntry> = $r8;

        r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry head> = $r5;

        $i7 = r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: int size>;

        $i8 = $i7 + 1;

        r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: int size> = $i8;

        $i9 = r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: int threshold>;

        if $i8 != $i9 goto label5;

        $i10 = lengthof r4;

        $i11 = 2 * $i10;

        virtualinvoke r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void resize(int)>($i11);

     label5:
        return $r5;
    }

    public org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header getHeader(java.lang.Class)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header $r6, $r7;
        org.codehaus.groovy.reflection.SingleKeyHashMap $r2;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r0;
        java.lang.Class r1;
        java.lang.Object $r4, $r5;
        org.codehaus.groovy.reflection.SingleKeyHashMap$Entry $r3;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.reflection.SingleKeyHashMap methodHeaders>;

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.reflection.SingleKeyHashMap: org.codehaus.groovy.reflection.SingleKeyHashMap$Entry getOrPut(java.lang.Object)>(r1);

        $r4 = $r3.<org.codehaus.groovy.reflection.SingleKeyHashMap$Entry: java.lang.Object value>;

        if $r4 != null goto label1;

        $r6 = new org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        specialinvoke $r6.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header: void <init>(java.lang.Class)>(r1);

        $r3.<org.codehaus.groovy.reflection.SingleKeyHashMap$Entry: java.lang.Object value> = $r6;

     label1:
        $r5 = $r3.<org.codehaus.groovy.reflection.SingleKeyHashMap$Entry: java.lang.Object value>;

        $r7 = (org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header) $r5;

        return $r7;
    }

    public void copyNonPrivateMethods(java.lang.Class, java.lang.Class)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header $r2, $r4;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r0;
        java.lang.Class r1, r3;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r1 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header getHeader(java.lang.Class)>(r1);

        $r4 = virtualinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header getHeader(java.lang.Class)>(r3);

        virtualinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void copyNonPrivateMethods(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r2, $r4);

        return;
    }

    public void copyNonPrivateMethods(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header, org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header r0, r2;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r1;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r3;

        r1 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r0 := @parameter0: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        r2 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        r3 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry head>;

     label1:
        if r3 == null goto label2;

        specialinvoke r1.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void copyNonPrivateMethods(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>(r3, r2);

        r3 = r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry nextClassEntry>;

        goto label1;

     label2:
        return;
    }

    public void copyAllMethodsToSuper(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header, org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header r0, r2;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r1;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r3;

        r1 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r0 := @parameter0: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        r2 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        r3 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry head>;

     label1:
        if r3 == null goto label2;

        specialinvoke r1.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void copyAllMethodsToSuper(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>(r3, r2);

        r3 = r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry nextClassEntry>;

        goto label1;

     label2:
        return;
    }

    public void copyNonPrivateMethodsFromSuper(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r1;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r2;

        r1 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r0 := @parameter0: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        r2 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry head>;

     label1:
        if r2 == null goto label2;

        specialinvoke r1.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void copyNonPrivateMethodsFromSuper(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry)>(r2);

        r2 = r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry nextClassEntry>;

        goto label1;

     label2:
        return;
    }

    private void copyNonPrivateMethods(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry, org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)
    {
        java.lang.Object[] $r8;
        int $i0, i1;
        java.lang.String $r4, $r13;
        org.codehaus.groovy.reflection.FastArray r14;
        boolean $z0, $z1, $z2;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r0, $r5, r15;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header r3;
        groovy.lang.MetaMethod r10, r16;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r2;
        java.lang.Object r1, $r6, $r7, $r9, $r11, $r12;

        r2 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r0 := @parameter0: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry;

        r3 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        $z0 = r1 instanceof org.codehaus.groovy.reflection.FastArray;

        if $z0 == 0 goto label6;

        r14 = (org.codehaus.groovy.reflection.FastArray) r1;

        r15 = null;

        $i0 = virtualinvoke r14.<org.codehaus.groovy.reflection.FastArray: int size()>();

        $r8 = virtualinvoke r14.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] getArray()>();

        i1 = 0;

     label1:
        if i1 == $i0 goto label5;

        $r9 = $r8[i1];

        r10 = (groovy.lang.MetaMethod) $r9;

        $z2 = virtualinvoke r10.<groovy.lang.MetaMethod: boolean isPrivate()>();

        if $z2 == 0 goto label2;

        goto label4;

     label2:
        if r15 != null goto label3;

        $r13 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name>;

        r15 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getOrPutMethods(java.lang.String,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r13, r3);

     label3:
        $r11 = r15.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        $r12 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Object addMethodToList(java.lang.Object,groovy.lang.MetaMethod)>($r11, r10);

        r15.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods> = $r12;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        goto label7;

     label6:
        r16 = (groovy.lang.MetaMethod) r1;

        $z1 = virtualinvoke r16.<groovy.lang.MetaMethod: boolean isPrivate()>();

        if $z1 != 0 goto label7;

        $r4 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name>;

        $r5 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getOrPutMethods(java.lang.String,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r4, r3);

        $r6 = $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        $r7 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Object addMethodToList(java.lang.Object,groovy.lang.MetaMethod)>($r6, r16);

        $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods> = $r7;

     label7:
        return;
    }

    private void copyAllMethodsToSuper(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry, org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)
    {
        java.lang.Object[] $r8;
        int $i0, i1;
        java.lang.String $r4, $r13;
        org.codehaus.groovy.reflection.FastArray r14;
        boolean $z0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r0, $r5, r15;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header r3;
        groovy.lang.MetaMethod r10, r16;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r2;
        java.lang.Object r1, $r6, $r7, $r9, $r11, $r12;

        r2 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r0 := @parameter0: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry;

        r3 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        $z0 = r1 instanceof org.codehaus.groovy.reflection.FastArray;

        if $z0 == 0 goto label4;

        r14 = (org.codehaus.groovy.reflection.FastArray) r1;

        r15 = null;

        $i0 = virtualinvoke r14.<org.codehaus.groovy.reflection.FastArray: int size()>();

        $r8 = virtualinvoke r14.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] getArray()>();

        i1 = 0;

     label1:
        if i1 == $i0 goto label3;

        $r9 = $r8[i1];

        r10 = (groovy.lang.MetaMethod) $r9;

        if r15 != null goto label2;

        $r13 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name>;

        r15 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getOrPutMethods(java.lang.String,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r13, r3);

     label2:
        $r11 = r15.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methodsForSuper>;

        $r12 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Object addMethodToList(java.lang.Object,groovy.lang.MetaMethod)>($r11, r10);

        r15.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methodsForSuper> = $r12;

        i1 = i1 + 1;

        goto label1;

     label3:
        goto label5;

     label4:
        r16 = (groovy.lang.MetaMethod) r1;

        $r4 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name>;

        $r5 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getOrPutMethods(java.lang.String,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r4, r3);

        $r6 = $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methodsForSuper>;

        $r7 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Object addMethodToList(java.lang.Object,groovy.lang.MetaMethod)>($r6, r16);

        $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methodsForSuper> = $r7;

     label5:
        return;
    }

    private void copyNonPrivateMethodsFromSuper(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry)
    {
        java.lang.Object[] $r5;
        int $i0, i1;
        org.codehaus.groovy.reflection.FastArray r10;
        boolean $z0, $z1, $z2;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r0;
        groovy.lang.MetaMethod r7, r11;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r2;
        java.lang.Object r1, $r3, $r4, $r6, $r8, $r9;

        r2 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r0 := @parameter0: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry;

        r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methodsForSuper>;

        if r1 != null goto label1;

        return;

     label1:
        $z0 = r1 instanceof org.codehaus.groovy.reflection.FastArray;

        if $z0 == 0 goto label6;

        r10 = (org.codehaus.groovy.reflection.FastArray) r1;

        $i0 = virtualinvoke r10.<org.codehaus.groovy.reflection.FastArray: int size()>();

        $r5 = virtualinvoke r10.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] getArray()>();

        i1 = 0;

     label2:
        if i1 == $i0 goto label5;

        $r6 = $r5[i1];

        r7 = (groovy.lang.MetaMethod) $r6;

        $z2 = virtualinvoke r7.<groovy.lang.MetaMethod: boolean isPrivate()>();

        if $z2 == 0 goto label3;

        goto label4;

     label3:
        $r8 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        $r9 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Object addMethodToList(java.lang.Object,groovy.lang.MetaMethod)>($r8, r7);

        r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods> = $r9;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        goto label7;

     label6:
        r11 = (groovy.lang.MetaMethod) r1;

        $z1 = virtualinvoke r11.<groovy.lang.MetaMethod: boolean isPrivate()>();

        if $z1 != 0 goto label7;

        $r3 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        $r4 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Object addMethodToList(java.lang.Object,groovy.lang.MetaMethod)>($r3, r11);

        r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods> = $r4;

     label7:
        return;
    }

    public void copyNonPrivateMethodsDown(java.lang.Class, java.lang.Class)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header $r2, $r4;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r0;
        java.lang.Class r1, r3;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r1 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header getHeader(java.lang.Class)>(r1);

        $r4 = virtualinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header getHeader(java.lang.Class)>(r3);

        virtualinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void copyNonPrivateNonNewMetaMethods(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r2, $r4);

        return;
    }

    public void copyNonPrivateNonNewMetaMethods(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header, org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header r0, r2;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r1;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r3;

        r1 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r0 := @parameter0: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        r2 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        r3 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry head>;

     label1:
        if r3 == null goto label2;

        specialinvoke r1.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void copyNonPrivateNonNewMetaMethods(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>(r3, r2);

        r3 = r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry nextClassEntry>;

        goto label1;

     label2:
        return;
    }

    private void copyNonPrivateNonNewMetaMethods(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry, org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)
    {
        java.lang.Object[] $r8;
        int $i0, i1;
        java.lang.String $r4, $r13;
        org.codehaus.groovy.reflection.FastArray r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r0, $r5, r15;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header r3;
        groovy.lang.MetaMethod r10, r16;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r2;
        java.lang.Object r1, $r6, $r7, $r9, $r11, $r12;

        r2 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r0 := @parameter0: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry;

        r3 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        if r1 != null goto label01;

        return;

     label01:
        $z0 = r1 instanceof org.codehaus.groovy.reflection.FastArray;

        if $z0 == 0 goto label07;

        r14 = (org.codehaus.groovy.reflection.FastArray) r1;

        r15 = null;

        $i0 = virtualinvoke r14.<org.codehaus.groovy.reflection.FastArray: int size()>();

        $r8 = virtualinvoke r14.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] getArray()>();

        i1 = 0;

     label02:
        if i1 == $i0 goto label06;

        $r9 = $r8[i1];

        r10 = (groovy.lang.MetaMethod) $r9;

        $z3 = r10 instanceof org.codehaus.groovy.runtime.metaclass.NewMetaMethod;

        if $z3 != 0 goto label05;

        $z4 = virtualinvoke r10.<groovy.lang.MetaMethod: boolean isPrivate()>();

        if $z4 == 0 goto label03;

        goto label05;

     label03:
        if r15 != null goto label04;

        $r13 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name>;

        r15 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getOrPutMethods(java.lang.String,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r13, r3);

     label04:
        $r11 = r15.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        $r12 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Object addMethodToList(java.lang.Object,groovy.lang.MetaMethod)>($r11, r10);

        r15.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods> = $r12;

     label05:
        i1 = i1 + 1;

        goto label02;

     label06:
        goto label10;

     label07:
        r16 = (groovy.lang.MetaMethod) r1;

        $z1 = r16 instanceof org.codehaus.groovy.runtime.metaclass.NewMetaMethod;

        if $z1 != 0 goto label08;

        $z2 = virtualinvoke r16.<groovy.lang.MetaMethod: boolean isPrivate()>();

        if $z2 == 0 goto label09;

     label08:
        return;

     label09:
        $r4 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name>;

        $r5 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getOrPutMethods(java.lang.String,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r4, r3);

        $r6 = $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        $r7 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Object addMethodToList(java.lang.Object,groovy.lang.MetaMethod)>($r6, r16);

        $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods> = $r7;

     label10:
        return;
    }

    public java.lang.Object addMethodToList(java.lang.Object, groovy.lang.MetaMethod)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        org.codehaus.groovy.reflection.CachedClass $r5, $r6, $r8, $r9, $r12, $r13, $r16, $r17;
        groovy.lang.MetaMethod r2, r11, r15;
        int $i0, $i2;
        org.codehaus.groovy.reflection.FastArray r14, $r18;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r1;
        java.lang.Object r0, $r3;
        java.lang.Class $r4, $r7;

        r1 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: groovy.lang.MetaMethod;

        if r0 != null goto label01;

        return r2;

     label01:
        $z0 = r0 instanceof groovy.lang.MetaMethod;

        if $z0 == 0 goto label06;

        r11 = (groovy.lang.MetaMethod) r0;

        $z8 = specialinvoke r1.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: boolean isMatchingMethod(groovy.lang.MetaMethod,groovy.lang.MetaMethod)>(r11, r2);

        if $z8 != 0 goto label02;

        $r18 = new org.codehaus.groovy.reflection.FastArray;

        specialinvoke $r18.<org.codehaus.groovy.reflection.FastArray: void <init>(int)>(2);

        virtualinvoke $r18.<org.codehaus.groovy.reflection.FastArray: void add(java.lang.Object)>(r11);

        virtualinvoke $r18.<org.codehaus.groovy.reflection.FastArray: void add(java.lang.Object)>(r2);

        return $r18;

     label02:
        $z9 = virtualinvoke r11.<groovy.lang.MetaMethod: boolean isPrivate()>();

        if $z9 != 0 goto label05;

        $z10 = specialinvoke r1.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: boolean isNonRealMethod(groovy.lang.MetaMethod)>(r11);

        if $z10 != 0 goto label03;

        $r8 = virtualinvoke r11.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        $z13 = virtualinvoke $r8.<org.codehaus.groovy.reflection.CachedClass: boolean isInterface()>();

        if $z13 == 0 goto label03;

        $r9 = virtualinvoke r2.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        $z14 = virtualinvoke $r9.<org.codehaus.groovy.reflection.CachedClass: boolean isInterface()>();

        if $z14 != 0 goto label03;

        goto label05;

     label03:
        $r12 = virtualinvoke r2.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        $r13 = virtualinvoke r11.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        if $r12 != $r13 goto label04;

        $z12 = specialinvoke r1.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: boolean isNonRealMethod(groovy.lang.MetaMethod)>(r2);

        if $z12 == 0 goto label05;

        return r2;

     label04:
        $r7 = virtualinvoke $r13.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $z11 = virtualinvoke $r12.<org.codehaus.groovy.reflection.CachedClass: boolean isAssignableFrom(java.lang.Class)>($r7);

        if $z11 != 0 goto label05;

        return r2;

     label05:
        return r0;

     label06:
        $z1 = r0 instanceof org.codehaus.groovy.reflection.FastArray;

        if $z1 == 0 goto label11;

        r14 = (org.codehaus.groovy.reflection.FastArray) r0;

        $i0 = specialinvoke r1.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: int findMatchingMethod(org.codehaus.groovy.reflection.FastArray,groovy.lang.MetaMethod)>(r14, r2);

        $i2 = (int) -1;

        if $i0 != $i2 goto label07;

        virtualinvoke r14.<org.codehaus.groovy.reflection.FastArray: void add(java.lang.Object)>(r2);

        goto label11;

     label07:
        $r3 = virtualinvoke r14.<org.codehaus.groovy.reflection.FastArray: java.lang.Object get(int)>($i0);

        r15 = (groovy.lang.MetaMethod) $r3;

        if r15 != r2 goto label08;

        return r0;

     label08:
        $z2 = virtualinvoke r15.<groovy.lang.MetaMethod: boolean isPrivate()>();

        if $z2 != 0 goto label11;

        $z3 = specialinvoke r1.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: boolean isNonRealMethod(groovy.lang.MetaMethod)>(r15);

        if $z3 != 0 goto label09;

        $r5 = virtualinvoke r15.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        $z6 = virtualinvoke $r5.<org.codehaus.groovy.reflection.CachedClass: boolean isInterface()>();

        if $z6 == 0 goto label09;

        $r6 = virtualinvoke r2.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        $z7 = virtualinvoke $r6.<org.codehaus.groovy.reflection.CachedClass: boolean isInterface()>();

        if $z7 != 0 goto label09;

        goto label11;

     label09:
        $r16 = virtualinvoke r2.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        $r17 = virtualinvoke r15.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        if $r16 != $r17 goto label10;

        $z5 = specialinvoke r1.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: boolean isNonRealMethod(groovy.lang.MetaMethod)>(r2);

        if $z5 == 0 goto label11;

        virtualinvoke r14.<org.codehaus.groovy.reflection.FastArray: void set(int,java.lang.Object)>($i0, r2);

        goto label11;

     label10:
        $r4 = virtualinvoke $r17.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $z4 = virtualinvoke $r16.<org.codehaus.groovy.reflection.CachedClass: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z4 != 0 goto label11;

        virtualinvoke r14.<org.codehaus.groovy.reflection.FastArray: void set(int,java.lang.Object)>($i0, r2);

     label11:
        return r0;
    }

    private boolean isNonRealMethod(groovy.lang.MetaMethod)
    {
        groovy.lang.MetaMethod r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r0 := @parameter0: groovy.lang.MetaMethod;

        $z0 = r0 instanceof org.codehaus.groovy.runtime.metaclass.NewInstanceMetaMethod;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof org.codehaus.groovy.runtime.metaclass.NewStaticMetaMethod;

        if $z1 != 0 goto label1;

        $z2 = r0 instanceof org.codehaus.groovy.runtime.metaclass.ClosureMetaMethod;

        if $z2 != 0 goto label1;

        $z3 = r0 instanceof org.codehaus.groovy.runtime.metaclass.ClosureStaticMetaMethod;

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    private boolean isMatchingMethod(groovy.lang.MetaMethod, groovy.lang.MetaMethod)
    {
        org.codehaus.groovy.reflection.CachedClass[] $r2, $r3;
        org.codehaus.groovy.reflection.CachedClass $r4, $r5;
        groovy.lang.MetaMethod r0, r1;
        int $i0, $i1, $i2, i3;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r6;
        boolean z0;

        r6 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r0 := @parameter0: groovy.lang.MetaMethod;

        r1 := @parameter1: groovy.lang.MetaMethod;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r0.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r3 = virtualinvoke r1.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i1 = lengthof $r2;

        $i0 = lengthof $r3;

        if $i1 == $i0 goto label2;

        return 0;

     label2:
        z0 = 1;

        i3 = 0;

     label3:
        $i2 = lengthof $r2;

        if i3 >= $i2 goto label5;

        $r5 = $r2[i3];

        $r4 = $r3[i3];

        if $r5 == $r4 goto label4;

        z0 = 0;

        goto label5;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        return z0;
    }

    private int findMatchingMethod(org.codehaus.groovy.reflection.FastArray, groovy.lang.MetaMethod)
    {
        java.lang.Object[] $r1;
        groovy.lang.MetaMethod r3, r5;
        int $i0, i1, $i3;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r4;
        java.lang.Object $r2;
        org.codehaus.groovy.reflection.FastArray r0;
        boolean $z0;

        r4 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r0 := @parameter0: org.codehaus.groovy.reflection.FastArray;

        r5 := @parameter1: groovy.lang.MetaMethod;

        $i0 = virtualinvoke r0.<org.codehaus.groovy.reflection.FastArray: int size()>();

        $r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] getArray()>();

        i1 = 0;

     label1:
        if i1 == $i0 goto label3;

        $r2 = $r1[i1];

        r3 = (groovy.lang.MetaMethod) $r2;

        $z0 = specialinvoke r4.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: boolean isMatchingMethod(groovy.lang.MetaMethod,groovy.lang.MetaMethod)>(r3, r5);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }

    public void copyMethodsToSuper()
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r7;
        int i0, i1;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r0;
        java.lang.Object $r2, $r3, $r4;
        org.codehaus.groovy.reflection.FastArray $r5, $r6;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] table>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r7 = r1[i1];

     label2:
        if r7 == null goto label5;

        $r2 = r7.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        $z0 = $r2 instanceof org.codehaus.groovy.reflection.FastArray;

        if $z0 == 0 goto label3;

        $r4 = r7.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        $r5 = (org.codehaus.groovy.reflection.FastArray) $r4;

        $r6 = virtualinvoke $r5.<org.codehaus.groovy.reflection.FastArray: org.codehaus.groovy.reflection.FastArray copy()>();

        r7.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methodsForSuper> = $r6;

        goto label4;

     label3:
        $r3 = r7.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        r7.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methodsForSuper> = $r3;

     label4:
        r7 = r7.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry nextHashEntry>;

        goto label2;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return;
    }

    public void copy(java.lang.Class, org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header $r2, r3;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r0;
        java.lang.Class r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r1 := @parameter0: java.lang.Class;

        r3 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header getHeader(java.lang.Class)>(r1);

        virtualinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void copy(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r2, r3);

        return;
    }

    public void copy(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header, org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header r0, r2;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r1;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r3;

        r1 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r0 := @parameter0: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        r2 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        r3 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry head>;

     label1:
        if r3 == null goto label2;

        specialinvoke r1.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: void copyAllMethods(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>(r3, r2);

        r3 = r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry nextClassEntry>;

        goto label1;

     label2:
        return;
    }

    private void copyAllMethods(org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry, org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)
    {
        java.lang.Object[] $r8;
        int $i0, i1;
        java.lang.String $r4, $r13;
        org.codehaus.groovy.reflection.FastArray r14;
        boolean $z0, $z1;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r0, $r5, r15;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header r3;
        groovy.lang.MetaMethod r10, r16;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r2;
        java.lang.Object r1, $r6, $r7, $r9, $r11, $r12;

        r2 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r0 := @parameter0: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry;

        r3 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header;

        r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        $z0 = r1 instanceof org.codehaus.groovy.reflection.FastArray;

        if $z0 == 0 goto label4;

        r14 = (org.codehaus.groovy.reflection.FastArray) r1;

        r15 = null;

        $i0 = virtualinvoke r14.<org.codehaus.groovy.reflection.FastArray: int size()>();

        $r8 = virtualinvoke r14.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] getArray()>();

        i1 = 0;

     label1:
        if i1 == $i0 goto label3;

        $r9 = $r8[i1];

        r10 = (groovy.lang.MetaMethod) $r9;

        if r15 != null goto label2;

        $r13 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name>;

        r15 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getOrPutMethods(java.lang.String,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r13, r3);

     label2:
        $r11 = r15.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        $r12 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Object addMethodToList(java.lang.Object,groovy.lang.MetaMethod)>($r11, r10);

        r15.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods> = $r12;

        i1 = i1 + 1;

        goto label1;

     label3:
        goto label5;

     label4:
        r16 = (groovy.lang.MetaMethod) r1;

        $z1 = virtualinvoke r16.<groovy.lang.MetaMethod: boolean isPrivate()>();

        if $z1 != 0 goto label5;

        $r4 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name>;

        $r5 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry getOrPutMethods(java.lang.String,org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Header)>($r4, r3);

        $r6 = $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods>;

        $r7 = virtualinvoke r2.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: java.lang.Object addMethodToList(java.lang.Object,groovy.lang.MetaMethod)>($r6, r16);

        $r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.Object methods> = $r7;

     label5:
        return;
    }

    public void clearCaches()
    {
        int $i0, i1;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r0;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r3;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] $r1, $r2;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        i1 = 0;

     label1:
        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] table>;

        $i0 = lengthof $r1;

        if i1 == $i0 goto label4;

        $r2 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] table>;

        r3 = $r2[i1];

     label2:
        if r3 == null goto label3;

        r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry cachedStaticMethod> = null;

        r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry cachedMethodForSuper> = null;

        r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry cachedMethod> = null;

        r3 = r3.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry nextHashEntry>;

        goto label2;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public void clearCaches(java.lang.String)
    {
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry r5;
        int $i0, i1;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex r0;
        java.lang.String r3, $r4;
        org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] $r1, $r2;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex;

        r3 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] table>;

        $i0 = lengthof $r1;

        if i1 == $i0 goto label5;

        $r2 = r0.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry[] table>;

        r5 = $r2[i1];

     label2:
        if r5 == null goto label4;

        $r4 = r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: java.lang.String name>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label3;

        r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry cachedStaticMethod> = null;

        r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry cachedMethodForSuper> = null;

        r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$CacheEntry cachedMethod> = null;

     label3:
        r5 = r5.<org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry: org.codehaus.groovy.runtime.metaclass.MetaMethodIndex$Entry nextHashEntry>;

        goto label2;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: int MAXIMUM_CAPACITY> = 268435456;

        <org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: int MINIMUM_CAPACITY> = 4;

        <org.codehaus.groovy.runtime.metaclass.MetaMethodIndex: int DEFAULT_CAPACITY> = 32;

        return;
    }
}
