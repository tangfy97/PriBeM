final class org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler extends org.apache.tika.sax.ElementMappingContentHandler
{
    private final org.xml.sax.ContentHandler handler;
    private final java.util.BitSet textNodeStack;
    private int nodeDepth;
    private int completelyFiltered;
    private java.util.Stack headingStack;
    static final boolean $assertionsDisabled;

    private void <init>(org.xml.sax.ContentHandler, java.util.Map)
    {
        java.util.Map r2;
        org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler r0;
        org.xml.sax.ContentHandler r1;
        java.util.BitSet $r3;
        java.util.Stack $r4;

        r0 := @this: org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<org.apache.tika.sax.ElementMappingContentHandler: void <init>(org.xml.sax.ContentHandler,java.util.Map)>(r1, r2);

        $r3 = new java.util.BitSet;

        specialinvoke $r3.<java.util.BitSet: void <init>()>();

        r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: java.util.BitSet textNodeStack> = $r3;

        r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int nodeDepth> = 0;

        r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int completelyFiltered> = 0;

        $r4 = new java.util.Stack;

        specialinvoke $r4.<java.util.Stack: void <init>()>();

        r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: java.util.Stack headingStack> = $r4;

        r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: org.xml.sax.ContentHandler handler> = r1;

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler r0;
        int $i0, $i1, $i2, $i3, i4, i5;
        char[] r2;
        java.util.BitSet $r1;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler;

        r2 := @parameter0: char[];

        i4 := @parameter1: int;

        i5 := @parameter2: int;

        $i0 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int completelyFiltered>;

        if $i0 != 0 goto label1;

        $i1 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int nodeDepth>;

        if $i1 <= 0 goto label1;

        $r1 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: java.util.BitSet textNodeStack>;

        $i2 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int nodeDepth>;

        $i3 = $i2 - 1;

        $z0 = virtualinvoke $r1.<java.util.BitSet: boolean get(int)>($i3);

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.tika.sax.ElementMappingContentHandler: void characters(char[],int,int)>(r2, i4, i5);

     label1:
        return;
    }

    private boolean needsCompleteFiltering(java.lang.String, java.lang.String)
    {
        org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler r5;
        java.lang.String r0, $r1, $r2, r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r5 := @this: org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = "urn:oasis:names:tc:opendocument:xmlns:text:1.0";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label4;

        $z3 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>("-template");

        if $z3 != 0 goto label1;

        $z4 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>("-style");

        if $z4 == 0 goto label2;

     label1:
        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;

     label4:
        $r2 = "urn:oasis:names:tc:opendocument:xmlns:table:1.0";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label5;

        $r4 = "covered-table-cell";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        return $z2;

     label5:
        return 0;
    }

    private java.lang.String getXHTMLHeaderTagName(org.xml.sax.Attributes)
    {
        org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler r6;
        org.xml.sax.Attributes r0;
        int $i0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r1, $r5;

        r6 := @this: org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler;

        r0 := @parameter0: org.xml.sax.Attributes;

        $r1 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String,java.lang.String)>("urn:oasis:names:tc:opendocument:xmlns:text:1.0", "outline-level");

        if $r1 != null goto label1;

        return "h1";

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        if $i0 < 6 goto label2;

        return "h6";

     label2:
        if $i0 > 1 goto label3;

        return "h1";

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("h");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private boolean isTextNode(java.lang.String, java.lang.String)
    {
        org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler r5;
        java.lang.String r0, $r1, r2, $r3, $r4, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r5 := @this: org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = "urn:oasis:names:tc:opendocument:xmlns:text:1.0";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("page-number");

        if $z3 != 0 goto label1;

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("page-count");

        if $z4 != 0 goto label1;

        return 1;

     label1:
        $r6 = "urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0";

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z5 == 0 goto label5;

        $r3 = "title";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label2;

        $r4 = "desc";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label3;

     label2:
        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        return $z6;

     label5:
        return 0;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler r0;
        java.lang.AssertionError $r14, $r15;
        java.util.Stack $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.xml.sax.Attributes r6, $r13;
        java.lang.String r2, r3, $r4, r5, $r7, $r9, r11;
        org.xml.sax.ContentHandler $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r10;
        java.util.BitSet $r1;

        r0 := @this: org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r6 := @parameter3: org.xml.sax.Attributes;

        $z0 = <org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i6 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int nodeDepth>;

        if $i6 >= 0 goto label1;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label1:
        $r1 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: java.util.BitSet textNodeStack>;

        $i0 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int nodeDepth>;

        $i1 = $i0 + 1;

        r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int nodeDepth> = $i1;

        $z1 = specialinvoke r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: boolean isTextNode(java.lang.String,java.lang.String)>(r2, r3);

        virtualinvoke $r1.<java.util.BitSet: void set(int,boolean)>($i0, $z1);

        $z2 = <org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: boolean $assertionsDisabled>;

        if $z2 != 0 goto label2;

        $i5 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int completelyFiltered>;

        if $i5 >= 0 goto label2;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label2:
        $z3 = specialinvoke r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: boolean needsCompleteFiltering(java.lang.String,java.lang.String)>(r2, r3);

        if $z3 == 0 goto label3;

        $i3 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int completelyFiltered>;

        $i4 = $i3 + 1;

        r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int completelyFiltered> = $i4;

     label3:
        $i2 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int completelyFiltered>;

        if $i2 != 0 goto label5;

        $r4 = "urn:oasis:names:tc:opendocument:xmlns:text:1.0";

        $z4 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label4;

        $r7 = "h";

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z5 == 0 goto label4;

        $r8 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: java.util.Stack headingStack>;

        $r9 = specialinvoke r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: java.lang.String getXHTMLHeaderTagName(org.xml.sax.Attributes)>(r6);

        $r10 = virtualinvoke $r8.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r9);

        r11 = (java.lang.String) $r10;

        $r12 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: org.xml.sax.ContentHandler handler>;

        $r13 = staticinvoke <org.apache.tika.parser.odf.OpenDocumentContentParser: org.xml.sax.Attributes access$000()>();

        interfaceinvoke $r12.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>("http://www.w3.org/1999/xhtml", r11, r11, $r13);

        goto label5;

     label4:
        specialinvoke r0.<org.apache.tika.sax.ElementMappingContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r2, r3, r5, r6);

     label5:
        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.AssertionError $r3, $r4;
        java.util.Stack $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r1, r2, $r5, r6, $r7, $r10, $r11, r14, $r16;
        org.xml.sax.ContentHandler $r15;
        char[] $r8, $r9;
        java.lang.Object $r13;

        r0 := @this: org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        $i0 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int completelyFiltered>;

        if $i0 != 0 goto label4;

        $r5 = "urn:oasis:names:tc:opendocument:xmlns:text:1.0";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label1;

        $r11 = "h";

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label1;

        $r12 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: java.util.Stack headingStack>;

        $r13 = virtualinvoke $r12.<java.util.Stack: java.lang.Object pop()>();

        r14 = (java.lang.String) $r13;

        $r15 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: org.xml.sax.ContentHandler handler>;

        interfaceinvoke $r15.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/1999/xhtml", r14, r14);

        goto label2;

     label1:
        specialinvoke r0.<org.apache.tika.sax.ElementMappingContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r6);

     label2:
        $r16 = "urn:oasis:names:tc:opendocument:xmlns:text:1.0";

        $z6 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z6 == 0 goto label4;

        $r7 = "tab-stop";

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 != 0 goto label3;

        $r10 = "tab";

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label4;

     label3:
        $r9 = <org.apache.tika.parser.odf.OpenDocumentContentParser: char[] TAB>;

        $r8 = <org.apache.tika.parser.odf.OpenDocumentContentParser: char[] TAB>;

        $i7 = lengthof $r8;

        virtualinvoke r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: void characters(char[],int,int)>($r9, 0, $i7);

     label4:
        $z7 = specialinvoke r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: boolean needsCompleteFiltering(java.lang.String,java.lang.String)>(r1, r2);

        if $z7 == 0 goto label5;

        $i5 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int completelyFiltered>;

        $i6 = $i5 - 1;

        r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int completelyFiltered> = $i6;

     label5:
        $z0 = <org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: boolean $assertionsDisabled>;

        if $z0 != 0 goto label6;

        $i4 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int completelyFiltered>;

        if $i4 >= 0 goto label6;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label6:
        $i1 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int nodeDepth>;

        $i2 = $i1 - 1;

        r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int nodeDepth> = $i2;

        $z1 = <org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: boolean $assertionsDisabled>;

        if $z1 != 0 goto label7;

        $i3 = r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: int nodeDepth>;

        if $i3 >= 0 goto label7;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label7:
        return;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String)
    {
        org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void endPrefixMapping(java.lang.String)
    {
        org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler r0;
        java.lang.String r1;

        r0 := @this: org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler;

        r1 := @parameter0: java.lang.String;

        return;
    }

    void <init>(org.xml.sax.ContentHandler, java.util.Map, org.apache.tika.parser.odf.OpenDocumentContentParser$1)
    {
        org.apache.tika.parser.odf.OpenDocumentContentParser$1 r3;
        java.util.Map r2;
        org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler r0;
        org.xml.sax.ContentHandler r1;

        r0 := @this: org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: org.apache.tika.parser.odf.OpenDocumentContentParser$1;

        specialinvoke r0.<org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: void <init>(org.xml.sax.ContentHandler,java.util.Map)>(r1, r2);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/tika/parser/odf/OpenDocumentContentParser;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.tika.parser.odf.OpenDocumentContentParser$OpenDocumentElementMappingContentHandler: boolean $assertionsDisabled> = $z1;

        return;
    }
}
