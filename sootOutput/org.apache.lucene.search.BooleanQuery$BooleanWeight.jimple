public class org.apache.lucene.search.BooleanQuery$BooleanWeight extends org.apache.lucene.search.Weight
{
    protected org.apache.lucene.search.similarities.Similarity similarity;
    protected java.util.ArrayList weights;
    protected int maxCoord;
    private final boolean disableCoord;
    final org.apache.lucene.search.BooleanQuery this$0;

    public void <init>(org.apache.lucene.search.BooleanQuery, org.apache.lucene.search.IndexSearcher, boolean) throws java.io.IOException
    {
        org.apache.lucene.search.Query $r10;
        org.apache.lucene.search.Weight $r11;
        java.util.ArrayList $r4, $r5, $r6, $r7, $r12;
        org.apache.lucene.search.similarities.Similarity $r3;
        int $i0, $i1, $i2, $i3, i4;
        boolean z0, $z1;
        org.apache.lucene.search.BooleanClause r9;
        org.apache.lucene.search.BooleanQuery$BooleanWeight r0;
        org.apache.lucene.search.BooleanQuery r1;
        java.lang.Object $r8;
        org.apache.lucene.search.IndexSearcher r2;

        r0 := @this: org.apache.lucene.search.BooleanQuery$BooleanWeight;

        r1 := @parameter0: org.apache.lucene.search.BooleanQuery;

        r2 := @parameter1: org.apache.lucene.search.IndexSearcher;

        z0 := @parameter2: boolean;

        r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.BooleanQuery this$0> = r1;

        specialinvoke r0.<org.apache.lucene.search.Weight: void <init>()>();

        $r3 = virtualinvoke r2.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.similarities.Similarity getSimilarity()>();

        r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.similarities.Similarity similarity> = $r3;

        r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: boolean disableCoord> = z0;

        $r4 = new java.util.ArrayList;

        $r5 = staticinvoke <org.apache.lucene.search.BooleanQuery: java.util.ArrayList access$100(org.apache.lucene.search.BooleanQuery)>(r1);

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: java.util.ArrayList weights> = $r4;

        i4 = 0;

     label1:
        $r6 = staticinvoke <org.apache.lucene.search.BooleanQuery: java.util.ArrayList access$100(org.apache.lucene.search.BooleanQuery)>(r1);

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if i4 >= $i1 goto label3;

        $r7 = staticinvoke <org.apache.lucene.search.BooleanQuery: java.util.ArrayList access$100(org.apache.lucene.search.BooleanQuery)>(r1);

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r9 = (org.apache.lucene.search.BooleanClause) $r8;

        $r10 = virtualinvoke r9.<org.apache.lucene.search.BooleanClause: org.apache.lucene.search.Query getQuery()>();

        $r11 = virtualinvoke $r10.<org.apache.lucene.search.Query: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.IndexSearcher)>(r2);

        $r12 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: java.util.ArrayList weights>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $z1 = virtualinvoke r9.<org.apache.lucene.search.BooleanClause: boolean isProhibited()>();

        if $z1 != 0 goto label2;

        $i2 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: int maxCoord>;

        $i3 = $i2 + 1;

        r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: int maxCoord> = $i3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    public org.apache.lucene.search.Query getQuery()
    {
        org.apache.lucene.search.BooleanQuery$BooleanWeight r0;
        org.apache.lucene.search.BooleanQuery $r1;

        r0 := @this: org.apache.lucene.search.BooleanQuery$BooleanWeight;

        $r1 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.BooleanQuery this$0>;

        return $r1;
    }

    public float getValueForNormalization() throws java.io.IOException
    {
        org.apache.lucene.search.Weight $r6;
        java.util.ArrayList $r1, $r4, $r8;
        int $i0, i1;
        boolean $z0;
        org.apache.lucene.search.BooleanClause $r10;
        org.apache.lucene.search.BooleanQuery$BooleanWeight r0;
        org.apache.lucene.search.BooleanQuery $r2, $r3, $r7;
        float $f0, $f1, $f2, $f3, f4, f5;
        java.lang.Object $r5, $r9;

        r0 := @this: org.apache.lucene.search.BooleanQuery$BooleanWeight;

        f4 = 0.0F;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: java.util.ArrayList weights>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r4 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: java.util.ArrayList weights>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r6 = (org.apache.lucene.search.Weight) $r5;

        $f3 = virtualinvoke $r6.<org.apache.lucene.search.Weight: float getValueForNormalization()>();

        $r7 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.BooleanQuery this$0>;

        $r8 = staticinvoke <org.apache.lucene.search.BooleanQuery: java.util.ArrayList access$100(org.apache.lucene.search.BooleanQuery)>($r7);

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r10 = (org.apache.lucene.search.BooleanClause) $r9;

        $z0 = virtualinvoke $r10.<org.apache.lucene.search.BooleanClause: boolean isProhibited()>();

        if $z0 != 0 goto label2;

        f4 = f4 + $f3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.BooleanQuery this$0>;

        $f0 = virtualinvoke $r2.<org.apache.lucene.search.BooleanQuery: float getBoost()>();

        $r3 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.BooleanQuery this$0>;

        $f1 = virtualinvoke $r3.<org.apache.lucene.search.BooleanQuery: float getBoost()>();

        $f2 = $f0 * $f1;

        f5 = f4 * $f2;

        return f5;
    }

    public float coord(int, int)
    {
        org.apache.lucene.search.BooleanQuery$BooleanWeight r0;
        org.apache.lucene.search.similarities.Similarity $r1;
        int i0, i1;
        float $f0;

        r0 := @this: org.apache.lucene.search.BooleanQuery$BooleanWeight;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        if i0 != 1 goto label1;

        $f0 = 1.0F;

        goto label2;

     label1:
        $r1 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.similarities.Similarity similarity>;

        $f0 = virtualinvoke $r1.<org.apache.lucene.search.similarities.Similarity: float coord(int,int)>(i1, i0);

     label2:
        return $f0;
    }

    public void normalize(float, float)
    {
        java.util.Iterator $r3;
        org.apache.lucene.search.Weight r5;
        java.util.ArrayList $r2;
        org.apache.lucene.search.BooleanQuery$BooleanWeight r0;
        org.apache.lucene.search.BooleanQuery $r1;
        float $f0, f1, f2, f3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.BooleanQuery$BooleanWeight;

        f1 := @parameter0: float;

        f2 := @parameter1: float;

        $r1 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.BooleanQuery this$0>;

        $f0 = virtualinvoke $r1.<org.apache.lucene.search.BooleanQuery: float getBoost()>();

        f3 = f2 * $f0;

        $r2 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: java.util.ArrayList weights>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.lucene.search.Weight) $r4;

        virtualinvoke r5.<org.apache.lucene.search.Weight: void normalize(float,float)>(f1, f3);

        goto label1;

     label2:
        return;
    }

    public org.apache.lucene.search.Explanation explain(org.apache.lucene.index.AtomicReaderContext, int) throws java.io.IOException
    {
        org.apache.lucene.search.Query $r34, $r42, $r52;
        byte $b2;
        org.apache.lucene.search.BooleanClause$Occur $r47, $r48;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r32, $r33, $r36, $r37, $r40, $r41, $r44, $r45, $r50, $r51, $r54, $r55;
        org.apache.lucene.index.AtomicReader $r27;
        java.util.ArrayList $r4, $r6;
        java.lang.String $r16, $r21, $r35, $r38, $r43, $r46, $r53, $r56;
        org.apache.lucene.util.Bits $r28;
        org.apache.lucene.search.BooleanClause r25;
        org.apache.lucene.search.BooleanQuery$BooleanWeight r0;
        org.apache.lucene.search.ComplexExplanation $r2, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7;
        org.apache.lucene.search.Explanation $r9, $r30, $r31, $r39, $r49;
        org.apache.lucene.search.Scorer $r29;
        float $f0, $f1, f2, $f3;
        org.apache.lucene.search.Weight r57;
        int $i0, $i1, $i3, i4, i5, i6;
        java.lang.Boolean $r17, $r22, $r58;
        java.util.Iterator $r5, $r7;
        org.apache.lucene.search.BooleanQuery $r1, $r3;
        java.lang.Object $r23, $r24;
        org.apache.lucene.index.AtomicReaderContext r26;

        r0 := @this: org.apache.lucene.search.BooleanQuery$BooleanWeight;

        r26 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        i4 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.BooleanQuery this$0>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.search.BooleanQuery: int getMinimumNumberShouldMatch()>();

        $r2 = new org.apache.lucene.search.ComplexExplanation;

        specialinvoke $r2.<org.apache.lucene.search.ComplexExplanation: void <init>()>();

        virtualinvoke $r2.<org.apache.lucene.search.ComplexExplanation: void setDescription(java.lang.String)>("sum of:");

        i5 = 0;

        f2 = 0.0F;

        z6 = 0;

        i6 = 0;

        $r3 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.BooleanQuery this$0>;

        $r4 = staticinvoke <org.apache.lucene.search.BooleanQuery: java.util.ArrayList access$100(org.apache.lucene.search.BooleanQuery)>($r3);

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

        $r6 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: java.util.ArrayList weights>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z7 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label07;

        $r23 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r57 = (org.apache.lucene.search.Weight) $r23;

        $r24 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r25 = (org.apache.lucene.search.BooleanClause) $r24;

        $r27 = virtualinvoke r26.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r28 = virtualinvoke $r27.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        $r29 = virtualinvoke r57.<org.apache.lucene.search.Weight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.AtomicReaderContext,boolean,boolean,org.apache.lucene.util.Bits)>(r26, 1, 1, $r28);

        if $r29 != null goto label02;

        $z5 = virtualinvoke r25.<org.apache.lucene.search.BooleanClause: boolean isRequired()>();

        if $z5 == 0 goto label01;

        z6 = 1;

        $r49 = new org.apache.lucene.search.Explanation;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no match on required clause (");

        $r52 = virtualinvoke r25.<org.apache.lucene.search.BooleanClause: org.apache.lucene.search.Query getQuery()>();

        $r53 = virtualinvoke $r52.<org.apache.lucene.search.Query: java.lang.String toString()>();

        $r54 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r49.<org.apache.lucene.search.Explanation: void <init>(float,java.lang.String)>(0.0F, $r56);

        virtualinvoke $r2.<org.apache.lucene.search.ComplexExplanation: void addDetail(org.apache.lucene.search.Explanation)>($r49);

        goto label01;

     label02:
        $r30 = virtualinvoke r57.<org.apache.lucene.search.Weight: org.apache.lucene.search.Explanation explain(org.apache.lucene.index.AtomicReaderContext,int)>(r26, i4);

        $z2 = virtualinvoke $r30.<org.apache.lucene.search.Explanation: boolean isMatch()>();

        if $z2 == 0 goto label05;

        $z4 = virtualinvoke r25.<org.apache.lucene.search.BooleanClause: boolean isProhibited()>();

        if $z4 != 0 goto label03;

        virtualinvoke $r2.<org.apache.lucene.search.ComplexExplanation: void addDetail(org.apache.lucene.search.Explanation)>($r30);

        $f1 = virtualinvoke $r30.<org.apache.lucene.search.Explanation: float getValue()>();

        f2 = f2 + $f1;

        i5 = i5 + 1;

        goto label04;

     label03:
        $r39 = new org.apache.lucene.search.Explanation;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("match on prohibited clause (");

        $r42 = virtualinvoke r25.<org.apache.lucene.search.BooleanClause: org.apache.lucene.search.Query getQuery()>();

        $r43 = virtualinvoke $r42.<org.apache.lucene.search.Query: java.lang.String toString()>();

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<org.apache.lucene.search.Explanation: void <init>(float,java.lang.String)>(0.0F, $r46);

        virtualinvoke $r39.<org.apache.lucene.search.Explanation: void addDetail(org.apache.lucene.search.Explanation)>($r30);

        virtualinvoke $r2.<org.apache.lucene.search.ComplexExplanation: void addDetail(org.apache.lucene.search.Explanation)>($r39);

        z6 = 1;

     label04:
        $r47 = virtualinvoke r25.<org.apache.lucene.search.BooleanClause: org.apache.lucene.search.BooleanClause$Occur getOccur()>();

        $r48 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur SHOULD>;

        if $r47 != $r48 goto label06;

        i6 = i6 + 1;

        goto label06;

     label05:
        $z3 = virtualinvoke r25.<org.apache.lucene.search.BooleanClause: boolean isRequired()>();

        if $z3 == 0 goto label06;

        $r31 = new org.apache.lucene.search.Explanation;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no match on required clause (");

        $r34 = virtualinvoke r25.<org.apache.lucene.search.BooleanClause: org.apache.lucene.search.Query getQuery()>();

        $r35 = virtualinvoke $r34.<org.apache.lucene.search.Query: java.lang.String toString()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<org.apache.lucene.search.Explanation: void <init>(float,java.lang.String)>(0.0F, $r38);

        virtualinvoke $r31.<org.apache.lucene.search.Explanation: void addDetail(org.apache.lucene.search.Explanation)>($r30);

        virtualinvoke $r2.<org.apache.lucene.search.ComplexExplanation: void addDetail(org.apache.lucene.search.Explanation)>($r31);

        z6 = 1;

     label06:
        goto label01;

     label07:
        if z6 == 0 goto label08;

        $r22 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r2.<org.apache.lucene.search.ComplexExplanation: void setMatch(java.lang.Boolean)>($r22);

        virtualinvoke $r2.<org.apache.lucene.search.ComplexExplanation: void setValue(float)>(0.0F);

        virtualinvoke $r2.<org.apache.lucene.search.ComplexExplanation: void setDescription(java.lang.String)>("Failure to meet condition(s) of required/prohibited clause(s)");

        return $r2;

     label08:
        if i6 >= $i0 goto label09;

        $r17 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r2.<org.apache.lucene.search.ComplexExplanation: void setMatch(java.lang.Boolean)>($r17);

        virtualinvoke $r2.<org.apache.lucene.search.ComplexExplanation: void setValue(float)>(0.0F);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure to match minimum number of optional clauses: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<org.apache.lucene.search.ComplexExplanation: void setDescription(java.lang.String)>($r21);

        return $r2;

     label09:
        if 0 >= i5 goto label10;

        $r58 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label11;

     label10:
        $r58 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label11:
        virtualinvoke $r2.<org.apache.lucene.search.ComplexExplanation: void setMatch(java.lang.Boolean)>($r58);

        virtualinvoke $r2.<org.apache.lucene.search.ComplexExplanation: void setValue(float)>(f2);

        $z0 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: boolean disableCoord>;

        if $z0 == 0 goto label12;

        $f3 = 1.0F;

        goto label13;

     label12:
        $i1 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: int maxCoord>;

        $f3 = virtualinvoke r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: float coord(int,int)>(i5, $i1);

     label13:
        $b2 = $f3 cmpl 1.0F;

        if $b2 != 0 goto label14;

        return $r2;

     label14:
        $r8 = new org.apache.lucene.search.ComplexExplanation;

        $z1 = virtualinvoke $r2.<org.apache.lucene.search.ComplexExplanation: boolean isMatch()>();

        $f0 = f2 * $f3;

        specialinvoke $r8.<org.apache.lucene.search.ComplexExplanation: void <init>(boolean,float,java.lang.String)>($z1, $f0, "product of:");

        virtualinvoke $r8.<org.apache.lucene.search.ComplexExplanation: void addDetail(org.apache.lucene.search.Explanation)>($r2);

        $r9 = new org.apache.lucene.search.Explanation;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("coord(");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i3 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: int maxCoord>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.lucene.search.Explanation: void <init>(float,java.lang.String)>($f3, $r16);

        virtualinvoke $r8.<org.apache.lucene.search.ComplexExplanation: void addDetail(org.apache.lucene.search.Explanation)>($r9);

        return $r8;
    }

    public org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.AtomicReaderContext, boolean, boolean, org.apache.lucene.util.Bits) throws java.io.IOException
    {
        org.apache.lucene.search.BooleanScorer $r20;
        org.apache.lucene.search.ConjunctionScorer $r15;
        java.lang.Object[] $r13, $r17;
        float[] r29;
        java.util.ArrayList $r0, $r1, $r2, $r5, $r7;
        org.apache.lucene.util.Bits r26;
        org.apache.lucene.search.BooleanClause r24;
        org.apache.lucene.search.BooleanQuery$BooleanWeight r3;
        org.apache.lucene.search.BooleanScorer2 $r30;
        org.apache.lucene.search.DisjunctionSumScorer $r11;
        boolean $z0, z1, $z2, $z3, z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.lucene.search.Scorer $r27;
        org.apache.lucene.search.Scorer[] $r12, $r14, $r16, $r18;
        float $f0, $f1;
        org.apache.lucene.search.Weight r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, $i24, $i25;
        java.util.Iterator $r6, $r8;
        org.apache.lucene.search.BooleanQuery $r4, $r9, $r10, $r19, $r21, $r31;
        java.lang.Object $r22, $r23;
        org.apache.lucene.index.AtomicReaderContext r25;

        r3 := @this: org.apache.lucene.search.BooleanQuery$BooleanWeight;

        r25 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        z1 := @parameter1: boolean;

        z4 := @parameter2: boolean;

        r26 := @parameter3: org.apache.lucene.util.Bits;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r4 = r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.BooleanQuery this$0>;

        $r5 = staticinvoke <org.apache.lucene.search.BooleanQuery: java.util.ArrayList access$100(org.apache.lucene.search.BooleanQuery)>($r4);

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

        $r7 = r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: java.util.ArrayList weights>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r22 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r28 = (org.apache.lucene.search.Weight) $r22;

        $r23 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r24 = (org.apache.lucene.search.BooleanClause) $r23;

        $r27 = virtualinvoke r28.<org.apache.lucene.search.Weight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.AtomicReaderContext,boolean,boolean,org.apache.lucene.util.Bits)>(r25, 1, 0, r26);

        if $r27 != null goto label02;

        $z8 = virtualinvoke r24.<org.apache.lucene.search.BooleanClause: boolean isRequired()>();

        if $z8 == 0 goto label05;

        return null;

     label02:
        $z6 = virtualinvoke r24.<org.apache.lucene.search.BooleanClause: boolean isRequired()>();

        if $z6 == 0 goto label03;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r27);

        goto label05;

     label03:
        $z7 = virtualinvoke r24.<org.apache.lucene.search.BooleanClause: boolean isProhibited()>();

        if $z7 == 0 goto label04;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r27);

        goto label05;

     label04:
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r27);

     label05:
        goto label01;

     label06:
        if z1 != 0 goto label07;

        if z4 == 0 goto label07;

        $i18 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i18 != 0 goto label07;

        $r19 = r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.BooleanQuery this$0>;

        $i19 = $r19.<org.apache.lucene.search.BooleanQuery: int minNrShouldMatch>;

        if $i19 > 1 goto label07;

        $r20 = new org.apache.lucene.search.BooleanScorer;

        $z5 = r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: boolean disableCoord>;

        $r21 = r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.BooleanQuery this$0>;

        $i21 = $r21.<org.apache.lucene.search.BooleanQuery: int minNrShouldMatch>;

        $i20 = r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: int maxCoord>;

        specialinvoke $r20.<org.apache.lucene.search.BooleanScorer: void <init>(org.apache.lucene.search.BooleanQuery$BooleanWeight,boolean,int,java.util.List,java.util.List,int)>(r3, $z5, $i21, $r2, $r1, $i20);

        return $r20;

     label07:
        $i22 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i22 != 0 goto label08;

        $i17 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i17 != 0 goto label08;

        return null;

     label08:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r9 = r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.BooleanQuery this$0>;

        $i1 = $r9.<org.apache.lucene.search.BooleanQuery: int minNrShouldMatch>;

        if $i0 >= $i1 goto label09;

        return null;

     label09:
        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i2 != 0 goto label12;

        $i13 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i13 != 0 goto label12;

        $z3 = r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: boolean disableCoord>;

        if $z3 == 0 goto label10;

        $f0 = 1.0F;

        goto label11;

     label10:
        $i14 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i15 = r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: int maxCoord>;

        $f0 = virtualinvoke r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: float coord(int,int)>($i14, $i15);

     label11:
        $r15 = new org.apache.lucene.search.ConjunctionScorer;

        $i16 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r16 = newarray (org.apache.lucene.search.Scorer)[$i16];

        $r17 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r16);

        $r18 = (org.apache.lucene.search.Scorer[]) $r17;

        specialinvoke $r15.<org.apache.lucene.search.ConjunctionScorer: void <init>(org.apache.lucene.search.Weight,org.apache.lucene.search.Scorer[],float)>(r3, $r18, $f0);

        return $r15;

     label12:
        $i3 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i3 != 0 goto label17;

        $i4 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i4 != 0 goto label17;

        $r10 = r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.BooleanQuery this$0>;

        $i5 = $r10.<org.apache.lucene.search.BooleanQuery: int minNrShouldMatch>;

        if $i5 > 1 goto label17;

        $i6 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i6 <= 1 goto label17;

        $i7 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i8 = $i7 + 1;

        r29 = newarray (float)[$i8];

        i23 = 0;

     label13:
        $i9 = lengthof r29;

        if i23 >= $i9 goto label16;

        $i12 = i23;

        $z2 = r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: boolean disableCoord>;

        if $z2 == 0 goto label14;

        $f1 = 1.0F;

        goto label15;

     label14:
        $i11 = r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: int maxCoord>;

        $f1 = virtualinvoke r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: float coord(int,int)>(i23, $i11);

     label15:
        r29[$i12] = $f1;

        i23 = i23 + 1;

        goto label13;

     label16:
        $r11 = new org.apache.lucene.search.DisjunctionSumScorer;

        $i10 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r12 = newarray (org.apache.lucene.search.Scorer)[$i10];

        $r13 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        $r14 = (org.apache.lucene.search.Scorer[]) $r13;

        specialinvoke $r11.<org.apache.lucene.search.DisjunctionSumScorer: void <init>(org.apache.lucene.search.Weight,org.apache.lucene.search.Scorer[],float[])>(r3, $r14, r29);

        return $r11;

     label17:
        $r30 = new org.apache.lucene.search.BooleanScorer2;

        $z9 = r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: boolean disableCoord>;

        $r31 = r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.BooleanQuery this$0>;

        $i24 = $r31.<org.apache.lucene.search.BooleanQuery: int minNrShouldMatch>;

        $i25 = r3.<org.apache.lucene.search.BooleanQuery$BooleanWeight: int maxCoord>;

        specialinvoke $r30.<org.apache.lucene.search.BooleanScorer2: void <init>(org.apache.lucene.search.BooleanQuery$BooleanWeight,boolean,int,java.util.List,java.util.List,java.util.List,int)>(r3, $z9, $i24, $r0, $r1, $r2, $i25);

        return $r30;
    }

    public boolean scoresDocsOutOfOrder()
    {
        java.util.Iterator $r3;
        java.util.ArrayList $r2;
        org.apache.lucene.search.BooleanClause r5;
        org.apache.lucene.search.BooleanQuery$BooleanWeight r0;
        org.apache.lucene.search.BooleanQuery $r1;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.search.BooleanQuery$BooleanWeight;

        $r1 = r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.BooleanQuery this$0>;

        $r2 = staticinvoke <org.apache.lucene.search.BooleanQuery: java.util.ArrayList access$100(org.apache.lucene.search.BooleanQuery)>($r1);

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.lucene.search.BooleanClause) $r4;

        $z1 = virtualinvoke r5.<org.apache.lucene.search.BooleanClause: boolean isRequired()>();

        if $z1 == 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }
}
