public class org.bouncycastle.util.IPTest extends junit.framework.TestCase
{
    private static final java.lang.String[] validIP4v;
    private static final java.lang.String[] invalidIP4v;
    private static final java.lang.String[] validIP6v;
    private static final java.lang.String[] invalidIP6v;

    public void <init>()
    {
        org.bouncycastle.util.IPTest r0;

        r0 := @this: org.bouncycastle.util.IPTest;

        specialinvoke r0.<junit.framework.TestCase: void <init>()>();

        return;
    }

    private void testIP(java.lang.String[], java.lang.String[])
    {
        java.lang.String[] r0, r1;
        int $i0, $i1, i2, i3;
        org.bouncycastle.util.IPTest r16;
        java.lang.String $r2, $r5, $r8, $r9, $r12, $r15;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r10, $r11, $r13, $r14;

        r16 := @this: org.bouncycastle.util.IPTest;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String[];

        i2 = 0;

     label1:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label3;

        $r9 = r0[i2];

        $z1 = staticinvoke <org.bouncycastle.util.IPAddress: boolean isValid(java.lang.String)>($r9);

        if $z1 != 0 goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Valid input string not accepted: ");

        $r12 = r0[i2];

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.bouncycastle.util.IPTest: void fail(java.lang.String)>($r15);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        i3 = 0;

     label4:
        $i1 = lengthof r1;

        if i3 >= $i1 goto label6;

        $r2 = r1[i3];

        $z0 = staticinvoke <org.bouncycastle.util.IPAddress: boolean isValid(java.lang.String)>($r2);

        if $z0 == 0 goto label5;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid input string accepted: ");

        $r5 = r1[i3];

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.bouncycastle.util.IPTest: void fail(java.lang.String)>($r8);

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        return;
    }

    public java.lang.String getName()
    {
        org.bouncycastle.util.IPTest r0;

        r0 := @this: org.bouncycastle.util.IPTest;

        return "IPTest";
    }

    public void testIPv4()
    {
        org.bouncycastle.util.IPTest r0;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.bouncycastle.util.IPTest;

        $r2 = <org.bouncycastle.util.IPTest: java.lang.String[] validIP4v>;

        $r1 = <org.bouncycastle.util.IPTest: java.lang.String[] invalidIP4v>;

        specialinvoke r0.<org.bouncycastle.util.IPTest: void testIP(java.lang.String[],java.lang.String[])>($r2, $r1);

        return;
    }

    public void testIPv6()
    {
        org.bouncycastle.util.IPTest r0;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.bouncycastle.util.IPTest;

        $r2 = <org.bouncycastle.util.IPTest: java.lang.String[] validIP6v>;

        $r1 = <org.bouncycastle.util.IPTest: java.lang.String[] invalidIP6v>;

        specialinvoke r0.<org.bouncycastle.util.IPTest: void testIP(java.lang.String[],java.lang.String[])>($r2, $r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1, $r2, $r3;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "0.0.0.0";

        $r0[1] = "255.255.255.255";

        $r0[2] = "192.168.0.0";

        <org.bouncycastle.util.IPTest: java.lang.String[] validIP4v> = $r0;

        $r1 = newarray (java.lang.String)[5];

        $r1[0] = "0.0.0.0.1";

        $r1[1] = "256.255.255.255";

        $r1[2] = "1";

        $r1[3] = "A.B.C";

        $r1[4] = "1:.4.6.5";

        <org.bouncycastle.util.IPTest: java.lang.String[] invalidIP4v> = $r1;

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "0:0:0:0:0:0:0:0";

        $r2[1] = "FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF";

        $r2[2] = "0:1:2:3:FFFF:5:FFFF:1";

        <org.bouncycastle.util.IPTest: java.lang.String[] validIP6v> = $r2;

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "0.0.0.0:1";

        $r3[1] = "FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFFF";

        <org.bouncycastle.util.IPTest: java.lang.String[] invalidIP6v> = $r3;

        return;
    }
}
