class com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet extends com.google.gxp.com.google.common.collect.ImmutableSet
{
    final com.google.gxp.com.google.common.collect.ImmutableMultiset multiset;
    private static final long serialVersionUID;

    public void <init>(com.google.gxp.com.google.common.collect.ImmutableMultiset)
    {
        com.google.gxp.com.google.common.collect.ImmutableMultiset r1;
        com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet r0;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet;

        r1 := @parameter0: com.google.gxp.com.google.common.collect.ImmutableMultiset;

        specialinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSet: void <init>()>();

        r0.<com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet: com.google.gxp.com.google.common.collect.ImmutableMultiset multiset> = r1;

        return;
    }

    public java.util.Iterator iterator()
    {
        com.google.gxp.com.google.common.collect.ImmutableSet $r3;
        java.util.Iterator $r4;
        com.google.gxp.com.google.common.collect.ImmutableMap $r2;
        com.google.gxp.com.google.common.collect.ImmutableMultiset $r1;
        com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet r0;
        com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet$1 $r5;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet;

        $r1 = r0.<com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet: com.google.gxp.com.google.common.collect.ImmutableMultiset multiset>;

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableMultiset: com.google.gxp.com.google.common.collect.ImmutableMap access$100(com.google.gxp.com.google.common.collect.ImmutableMultiset)>($r1);

        $r3 = virtualinvoke $r2.<com.google.gxp.com.google.common.collect.ImmutableMap: com.google.gxp.com.google.common.collect.ImmutableSet entrySet()>();

        $r4 = virtualinvoke $r3.<com.google.gxp.com.google.common.collect.ImmutableSet: java.util.Iterator iterator()>();

        $r5 = new com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet$1;

        specialinvoke $r5.<com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet$1: void <init>(com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet,java.util.Iterator)>(r0, $r4);

        return $r5;
    }

    public int size()
    {
        com.google.gxp.com.google.common.collect.ImmutableMap $r2;
        int $i0;
        com.google.gxp.com.google.common.collect.ImmutableMultiset $r1;
        com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet r0;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet;

        $r1 = r0.<com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet: com.google.gxp.com.google.common.collect.ImmutableMultiset multiset>;

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableMultiset: com.google.gxp.com.google.common.collect.ImmutableMap access$100(com.google.gxp.com.google.common.collect.ImmutableMultiset)>($r1);

        $i0 = virtualinvoke $r2.<com.google.gxp.com.google.common.collect.ImmutableMap: int size()>();

        return $i0;
    }

    public boolean contains(java.lang.Object)
    {
        int $i0, $i1, $i2;
        com.google.gxp.com.google.common.collect.Multiset$Entry r1;
        java.lang.Object r0, $r4;
        com.google.gxp.com.google.common.collect.ImmutableMultiset $r3;
        com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet r2;
        boolean $z0, $z1;

        r2 := @this: com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.google.gxp.com.google.common.collect.Multiset$Entry;

        if $z0 == 0 goto label4;

        r1 = (com.google.gxp.com.google.common.collect.Multiset$Entry) r0;

        $i0 = interfaceinvoke r1.<com.google.gxp.com.google.common.collect.Multiset$Entry: int getCount()>();

        if $i0 > 0 goto label1;

        return 0;

     label1:
        $r3 = r2.<com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet: com.google.gxp.com.google.common.collect.ImmutableMultiset multiset>;

        $r4 = interfaceinvoke r1.<com.google.gxp.com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $i1 = virtualinvoke $r3.<com.google.gxp.com.google.common.collect.ImmutableMultiset: int count(java.lang.Object)>($r4);

        $i2 = interfaceinvoke r1.<com.google.gxp.com.google.common.collect.Multiset$Entry: int getCount()>();

        if $i1 != $i2 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        return 0;
    }

    public int hashCode()
    {
        com.google.gxp.com.google.common.collect.ImmutableMap $r2;
        int $i0;
        com.google.gxp.com.google.common.collect.ImmutableMultiset $r1;
        com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet r0;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet;

        $r1 = r0.<com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet: com.google.gxp.com.google.common.collect.ImmutableMultiset multiset>;

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableMultiset: com.google.gxp.com.google.common.collect.ImmutableMap access$100(com.google.gxp.com.google.common.collect.ImmutableMultiset)>($r1);

        $i0 = virtualinvoke $r2.<com.google.gxp.com.google.common.collect.ImmutableMap: int hashCode()>();

        return $i0;
    }

    java.lang.Object writeReplace()
    {
        com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet r0;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet;

        return r0;
    }

    public static void <clinit>()
    {
        <com.google.gxp.com.google.common.collect.ImmutableMultiset$EntrySet: long serialVersionUID> = 0L;

        return;
    }
}
