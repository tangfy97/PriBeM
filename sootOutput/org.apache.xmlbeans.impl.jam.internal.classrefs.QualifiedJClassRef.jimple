public class org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef extends java.lang.Object implements org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef
{
    private java.lang.String mQualifiedClassname;
    private org.apache.xmlbeans.impl.jam.JamClassLoader mClassLoader;

    public static org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef create(org.apache.xmlbeans.impl.jam.JClass)
    {
        org.apache.xmlbeans.impl.jam.JamClassLoader $r3;
        org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef $r1;
        java.lang.String $r2;
        org.apache.xmlbeans.impl.jam.JClass r0;
        java.lang.IllegalArgumentException $r4;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null clazz");

        throw $r4;

     label1:
        $r1 = new org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef;

        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getFieldDescriptor()>();

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JamClassLoader getClassLoader()>();

        specialinvoke $r1.<org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef: void <init>(java.lang.String,org.apache.xmlbeans.impl.jam.JamClassLoader)>($r2, $r3);

        return $r1;
    }

    public static org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef create(java.lang.String, org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRefContext)
    {
        org.apache.xmlbeans.impl.jam.JamClassLoader $r2;
        org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef $r3;
        java.lang.String r0;
        org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRefContext r1;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRefContext;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null qcname");

        throw $r5;

     label1:
        if r1 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null ctx");

        throw $r4;

     label2:
        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRefContext: org.apache.xmlbeans.impl.jam.JamClassLoader getClassLoader()>();

        $r3 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef create(java.lang.String,org.apache.xmlbeans.impl.jam.JamClassLoader)>(r0, $r2);

        return $r3;
    }

    public static org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef create(java.lang.String, org.apache.xmlbeans.impl.jam.JamClassLoader)
    {
        org.apache.xmlbeans.impl.jam.JamClassLoader r1;
        org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef $r2;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.xmlbeans.impl.jam.JamClassLoader;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null qcname");

        throw $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null classloader");

        throw $r3;

     label2:
        $r2 = new org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef;

        specialinvoke $r2.<org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef: void <init>(java.lang.String,org.apache.xmlbeans.impl.jam.JamClassLoader)>(r0, r1);

        return $r2;
    }

    private void <init>(java.lang.String, org.apache.xmlbeans.impl.jam.JamClassLoader)
    {
        org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef r0;
        java.lang.String r2;
        org.apache.xmlbeans.impl.jam.JamClassLoader r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.xmlbeans.impl.jam.JamClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef: org.apache.xmlbeans.impl.jam.JamClassLoader mClassLoader> = r1;

        r0.<org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef: java.lang.String mQualifiedClassname> = r2;

        return;
    }

    public org.apache.xmlbeans.impl.jam.JClass getRefClass()
    {
        org.apache.xmlbeans.impl.jam.JamClassLoader $r2;
        org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef r0;
        java.lang.String $r1;
        org.apache.xmlbeans.impl.jam.JClass $r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef: org.apache.xmlbeans.impl.jam.JamClassLoader mClassLoader>;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef: java.lang.String mQualifiedClassname>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.jam.JamClassLoader: org.apache.xmlbeans.impl.jam.JClass loadClass(java.lang.String)>($r1);

        return $r3;
    }

    public java.lang.String getQualifiedName()
    {
        org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef: java.lang.String mQualifiedClassname>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r4, $r5;
        org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef r2;
        java.lang.String $r3, $r6;

        r2 := @this: org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(QualifiedJClassRef \'");

        $r3 = r2.<org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef: java.lang.String mQualifiedClassname>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\')");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }
}
