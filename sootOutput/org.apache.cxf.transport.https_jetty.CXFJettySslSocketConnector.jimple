public class org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector extends org.eclipse.jetty.server.ssl.SslSelectChannelConnector
{
    private static final java.util.logging.Logger LOG;
    protected javax.net.ssl.KeyManager[] keyManagers;
    protected javax.net.ssl.TrustManager[] trustManagers;
    protected java.security.SecureRandom secureRandom;
    protected java.util.List cipherSuites;
    protected org.apache.cxf.configuration.security.FiltersType cipherSuitesFilter;

    public void <init>()
    {
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector r0;

        r0 := @this: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector;

        specialinvoke r0.<org.eclipse.jetty.server.ssl.SslSelectChannelConnector: void <init>()>();

        return;
    }

    protected void setCipherSuites(java.util.List)
    {
        java.util.List r1;
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector r0;

        r0 := @this: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: java.util.List cipherSuites> = r1;

        return;
    }

    protected void setCipherSuitesFilter(org.apache.cxf.configuration.security.FiltersType)
    {
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector r0;
        org.apache.cxf.configuration.security.FiltersType r1;

        r0 := @this: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector;

        r1 := @parameter0: org.apache.cxf.configuration.security.FiltersType;

        r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.configuration.security.FiltersType cipherSuitesFilter> = r1;

        return;
    }

    protected void setKeyManagers(javax.net.ssl.KeyManager[])
    {
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector r0;
        javax.net.ssl.KeyManager[] r1;

        r0 := @this: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector;

        r1 := @parameter0: javax.net.ssl.KeyManager[];

        r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: javax.net.ssl.KeyManager[] keyManagers> = r1;

        return;
    }

    protected void setTrustManagers(javax.net.ssl.TrustManager[])
    {
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector r0;
        javax.net.ssl.TrustManager[] r1;

        r0 := @this: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector;

        r1 := @parameter0: javax.net.ssl.TrustManager[];

        r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: javax.net.ssl.TrustManager[] trustManagers> = r1;

        return;
    }

    protected void setSecureRandom(java.security.SecureRandom)
    {
        java.security.SecureRandom r1;
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector r0;

        r0 := @this: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector;

        r1 := @parameter0: java.security.SecureRandom;

        r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: java.security.SecureRandom secureRandom> = r1;

        return;
    }

    protected void setClientAuthentication(org.apache.cxf.configuration.security.ClientAuthentication)
    {
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector r0;
        org.apache.cxf.configuration.security.ClientAuthentication r2;
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory $r1, $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector;

        r2 := @parameter0: org.apache.cxf.configuration.security.ClientAuthentication;

        $r1 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory getCxfSslContextFactory()>();

        interfaceinvoke $r1.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory: void setWantClientAuth(boolean)>(1);

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<org.apache.cxf.configuration.security.ClientAuthentication: boolean isSetWant()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory getCxfSslContextFactory()>();

        $z3 = virtualinvoke r2.<org.apache.cxf.configuration.security.ClientAuthentication: boolean isWant()>();

        interfaceinvoke $r4.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory: void setWantClientAuth(boolean)>($z3);

     label1:
        $z1 = virtualinvoke r2.<org.apache.cxf.configuration.security.ClientAuthentication: boolean isSetRequired()>();

        if $z1 == 0 goto label2;

        $r3 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory getCxfSslContextFactory()>();

        $z2 = virtualinvoke r2.<org.apache.cxf.configuration.security.ClientAuthentication: boolean isRequired()>();

        interfaceinvoke $r3.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory: void setNeedClientAuth(boolean)>($z2);

     label2:
        return;
    }

    protected void doStart() throws java.lang.Exception
    {
        javax.net.ssl.SSLContext $r2;
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector r0;
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory $r1;

        r0 := @this: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector;

        $r1 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory getCxfSslContextFactory()>();

        $r2 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: javax.net.ssl.SSLContext createSSLContext()>();

        interfaceinvoke $r1.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory: void setSslContext(javax.net.ssl.SSLContext)>($r2);

        specialinvoke r0.<org.eclipse.jetty.server.ssl.SslSelectChannelConnector: void doStart()>();

        return;
    }

    protected javax.net.ssl.SSLContext createSSLContext() throws java.lang.Exception
    {
        javax.net.ssl.SSLContext r8, $r21;
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector r0;
        java.lang.String[] $r15, $r18;
        java.security.SecureRandom $r11;
        org.apache.cxf.configuration.security.FiltersType $r17;
        java.lang.String $r2, $r5, $r7, $r10, $r20;
        java.util.logging.Logger $r16;
        java.util.List $r14;
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory $r1, $r3, $r4, $r6, $r9, $r19;
        javax.net.ssl.TrustManager[] $r12;
        javax.net.ssl.KeyManager[] $r13;

        r0 := @this: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector;

        $r1 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory getCxfSslContextFactory()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory: java.lang.String getProtocol()>();

        if $r2 != null goto label1;

        $r20 = "TLS";

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory getCxfSslContextFactory()>();

        $r20 = interfaceinvoke $r3.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory: java.lang.String getProtocol()>();

     label2:
        $r4 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory getCxfSslContextFactory()>();

        $r5 = interfaceinvoke $r4.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory: java.lang.String getProvider()>();

        if $r5 != null goto label3;

        $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r20);

        goto label4;

     label3:
        $r6 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory getCxfSslContextFactory()>();

        $r7 = interfaceinvoke $r6.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory: java.lang.String getProvider()>();

        $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r20, $r7);

     label4:
        r8 = $r21;

        $r9 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory getCxfSslContextFactory()>();

        $r10 = interfaceinvoke $r9.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory: java.lang.String getCertAlias()>();

        if $r10 == null goto label5;

        virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: void getKeyManagersWithCertAlias()>();

     label5:
        $r13 = r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: javax.net.ssl.KeyManager[] keyManagers>;

        $r12 = r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: javax.net.ssl.TrustManager[] trustManagers>;

        $r11 = r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: java.security.SecureRandom secureRandom>;

        virtualinvoke r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, $r12, $r11);

        $r14 = r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: java.util.List cipherSuites>;

        $r15 = staticinvoke <org.apache.cxf.configuration.jsse.SSLUtils: java.lang.String[] getServerSupportedCipherSuites(javax.net.ssl.SSLContext)>(r8);

        $r17 = r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.configuration.security.FiltersType cipherSuitesFilter>;

        $r16 = <org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: java.util.logging.Logger LOG>;

        $r18 = staticinvoke <org.apache.cxf.configuration.jsse.SSLUtils: java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)>($r14, $r15, $r17, $r16, 1);

        $r19 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory getCxfSslContextFactory()>();

        interfaceinvoke $r19.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory: void setExcludeCipherSuites(java.lang.String[])>($r18);

        return r8;
    }

    protected void getKeyManagersWithCertAlias() throws java.lang.Exception
    {
        org.apache.cxf.transport.https.AliasedX509ExtendedKeyManager $r6;
        javax.net.ssl.X509KeyManager $r12;
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector r0;
        int $i0, i1;
        java.lang.String $r2, $r9;
        boolean $z0;
        javax.net.ssl.KeyManager $r5, $r11;
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory $r1, $r8;
        javax.net.ssl.KeyManager[] $r3, $r4, $r7, $r10;

        r0 := @this: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector;

        $r1 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory getCxfSslContextFactory()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory: java.lang.String getCertAlias()>();

        if $r2 == null goto label3;

        i1 = 0;

     label1:
        $r3 = r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: javax.net.ssl.KeyManager[] keyManagers>;

        $i0 = lengthof $r3;

        if i1 >= $i0 goto label3;

        $r4 = r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: javax.net.ssl.KeyManager[] keyManagers>;

        $r5 = $r4[i1];

        $z0 = $r5 instanceof javax.net.ssl.X509KeyManager;

        if $z0 == 0 goto label2;

        $r7 = r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: javax.net.ssl.KeyManager[] keyManagers>;

        $r6 = new org.apache.cxf.transport.https.AliasedX509ExtendedKeyManager;

        $r8 = virtualinvoke r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory getCxfSslContextFactory()>();

        $r9 = interfaceinvoke $r8.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory: java.lang.String getCertAlias()>();

        $r10 = r0.<org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: javax.net.ssl.KeyManager[] keyManagers>;

        $r11 = $r10[i1];

        $r12 = (javax.net.ssl.X509KeyManager) $r11;

        specialinvoke $r6.<org.apache.cxf.transport.https.AliasedX509ExtendedKeyManager: void <init>(java.lang.String,javax.net.ssl.X509KeyManager)>($r9, $r12);

        $r7[i1] = $r6;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory getCxfSslContextFactory()
    {
        java.lang.Object[] $r4;
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector r0;
        java.lang.Class[] $r2;
        java.lang.Exception $r8;
        org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory $r7;
        java.lang.Class $r1;
        java.lang.Object $r5, $r6;
        java.lang.reflect.Method $r3;

        r0 := @this: org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getSslContextFactory", $r2);

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r4);

        $r6 = staticinvoke <org.apache.cxf.common.util.ReflectionInvokationHandler: java.lang.Object createProxyWrapper(java.lang.Object,java.lang.Class)>($r5, class "Lorg/apache/cxf/transport/https_jetty/CXFJettySslSocketConnector$CxfSslContextFactory;");

        $r7 = (org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector$CxfSslContextFactory) $r6;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/transport/https_jetty/CXFJettySslSocketConnector;");

        <org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
