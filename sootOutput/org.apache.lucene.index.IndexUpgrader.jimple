public final class org.apache.lucene.index.IndexUpgrader extends java.lang.Object
{
    private final org.apache.lucene.store.Directory dir;
    private final org.apache.lucene.index.IndexWriterConfig iwc;
    private final boolean deletePriorCommits;

    private static void printUsage()
    {
        java.lang.String $r6, $r9, $r18, $r23, $r26;
        java.io.PrintStream $r0, $r1, $r3, $r10, $r11, $r12, $r13, $r15, $r27;
        java.lang.Package $r22;
        java.lang.StringBuilder $r2, $r4, $r7, $r8, $r14, $r16, $r19, $r20, $r24, $r25;
        java.lang.Class $r5, $r17, $r21;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Upgrades an index so all segments created with a previous Lucene version are rewritten.");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Usage:");

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  java ");

        $r5 = class "Lorg/apache/lucene/index/IndexUpgrader;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [-delete-prior-commits] [-verbose] [-dir-impl X] indexDir");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("This tool keeps only the last commit in an index; for this");

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("reason, if the incoming index has more than one commit, the tool");

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("refuses to run by default. Specify -delete-prior-commits to override");

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("this, allowing the tool to delete all but the last commit.");

        $r15 = <java.lang.System: java.io.PrintStream err>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specify a ");

        $r17 = class "Lorg/apache/lucene/store/FSDirectory;";

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getSimpleName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" implementation through the -dir-impl option to force its use. If no package is specified the ");

        $r21 = class "Lorg/apache/lucene/store/FSDirectory;";

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.Package getPackage()>();

        $r23 = virtualinvoke $r22.<java.lang.Package: java.lang.String getName()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" package will be used.");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r26);

        $r27 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>("WARNING: This tool may reorder document IDs!");

        staticinvoke <java.lang.System: void exit(int)>(1);

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r0;
        int $i0, $i1, $i2, i3;
        java.lang.String $r5, $r6, $r7, r9, r11, r12;
        org.apache.lucene.store.FSDirectory r13;
        boolean $z0, $z1, $z2, z3;
        java.io.PrintStream $r8, r10;
        org.apache.lucene.index.IndexUpgrader $r2;
        org.apache.lucene.util.Version $r3;
        java.io.File $r1, $r4;

        r0 := @parameter0: java.lang.String[];

        r9 = null;

        z3 = 0;

        r10 = null;

        r11 = null;

        i3 = 0;

     label01:
        $i0 = lengthof r0;

        if i3 >= $i0 goto label08;

        r12 = r0[i3];

        $r5 = "-delete-prior-commits";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z0 == 0 goto label02;

        z3 = 1;

        goto label07;

     label02:
        $r6 = "-verbose";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z1 == 0 goto label03;

        r10 = <java.lang.System: java.io.PrintStream out>;

        goto label07;

     label03:
        if r9 != null goto label04;

        r9 = r12;

        goto label07;

     label04:
        $r7 = "-dir-impl";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z2 == 0 goto label06;

        $i1 = lengthof r0;

        $i2 = $i1 - 1;

        if i3 != $i2 goto label05;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("ERROR: missing value for -dir-impl option");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label05:
        i3 = i3 + 1;

        r11 = r0[i3];

        goto label07;

     label06:
        staticinvoke <org.apache.lucene.index.IndexUpgrader: void printUsage()>();

     label07:
        i3 = i3 + 1;

        goto label01;

     label08:
        if r9 != null goto label09;

        staticinvoke <org.apache.lucene.index.IndexUpgrader: void printUsage()>();

     label09:
        if r11 != null goto label10;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(r9);

        r13 = staticinvoke <org.apache.lucene.store.FSDirectory: org.apache.lucene.store.FSDirectory open(java.io.File)>($r4);

        goto label11;

     label10:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r9);

        r13 = staticinvoke <org.apache.lucene.util.CommandLineUtil: org.apache.lucene.store.FSDirectory newFSDirectory(java.lang.String,java.io.File)>(r11, $r1);

     label11:
        $r2 = new org.apache.lucene.index.IndexUpgrader;

        $r3 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_CURRENT>;

        specialinvoke $r2.<org.apache.lucene.index.IndexUpgrader: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.util.Version,java.io.PrintStream,boolean)>(r13, $r3, r10, z3);

        virtualinvoke $r2.<org.apache.lucene.index.IndexUpgrader: void upgrade()>();

        return;
    }

    public void <init>(org.apache.lucene.store.Directory, org.apache.lucene.util.Version)
    {
        org.apache.lucene.index.IndexUpgrader r0;
        org.apache.lucene.store.Directory r1;
        org.apache.lucene.index.IndexWriterConfig $r2;
        org.apache.lucene.util.Version r3;

        r0 := @this: org.apache.lucene.index.IndexUpgrader;

        r1 := @parameter0: org.apache.lucene.store.Directory;

        r3 := @parameter1: org.apache.lucene.util.Version;

        $r2 = new org.apache.lucene.index.IndexWriterConfig;

        specialinvoke $r2.<org.apache.lucene.index.IndexWriterConfig: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.Analyzer)>(r3, null);

        specialinvoke r0.<org.apache.lucene.index.IndexUpgrader: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.index.IndexWriterConfig,boolean)>(r1, $r2, 0);

        return;
    }

    public void <init>(org.apache.lucene.store.Directory, org.apache.lucene.util.Version, java.io.PrintStream, boolean)
    {
        java.io.PrintStream r4;
        org.apache.lucene.index.IndexUpgrader r0;
        org.apache.lucene.store.Directory r1;
        org.apache.lucene.index.IndexWriterConfig $r2, $r5;
        org.apache.lucene.util.Version r3;
        boolean z0;

        r0 := @this: org.apache.lucene.index.IndexUpgrader;

        r1 := @parameter0: org.apache.lucene.store.Directory;

        r3 := @parameter1: org.apache.lucene.util.Version;

        r4 := @parameter2: java.io.PrintStream;

        z0 := @parameter3: boolean;

        $r2 = new org.apache.lucene.index.IndexWriterConfig;

        specialinvoke $r2.<org.apache.lucene.index.IndexWriterConfig: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.Analyzer)>(r3, null);

        $r5 = virtualinvoke $r2.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.index.IndexWriterConfig setInfoStream(java.io.PrintStream)>(r4);

        specialinvoke r0.<org.apache.lucene.index.IndexUpgrader: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.index.IndexWriterConfig,boolean)>(r1, $r5, z0);

        return;
    }

    public void <init>(org.apache.lucene.store.Directory, org.apache.lucene.index.IndexWriterConfig, boolean)
    {
        org.apache.lucene.index.IndexUpgrader r0;
        org.apache.lucene.store.Directory r1;
        org.apache.lucene.index.IndexWriterConfig r2;
        boolean z0;

        r0 := @this: org.apache.lucene.index.IndexUpgrader;

        r1 := @parameter0: org.apache.lucene.store.Directory;

        r2 := @parameter1: org.apache.lucene.index.IndexWriterConfig;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.IndexUpgrader: org.apache.lucene.store.Directory dir> = r1;

        r0.<org.apache.lucene.index.IndexUpgrader: org.apache.lucene.index.IndexWriterConfig iwc> = r2;

        r0.<org.apache.lucene.index.IndexUpgrader: boolean deletePriorCommits> = z0;

        return;
    }

    public void upgrade() throws java.io.IOException
    {
        org.apache.lucene.index.IndexNotFoundException $r34;
        org.apache.lucene.index.MergePolicy $r5;
        org.apache.lucene.store.Directory $r1, $r8, $r20, $r27, $r35;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.index.IndexUpgrader r0;
        org.apache.lucene.index.IndexWriter $r7;
        java.util.List $r28;
        org.apache.lucene.util.InfoStream $r9;
        java.lang.StringBuilder $r10, $r11, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r24, $r25, $r30, $r31, $r32;
        org.apache.lucene.index.UpgradeIndexMergePolicy $r4;
        org.apache.lucene.index.IndexWriterConfig $r2, $r3;
        java.lang.Throwable $r37;
        int $i0;
        java.lang.String $r12, $r14, $r17, $r23, $r26, $r33, $r36;
        java.lang.IllegalArgumentException $r29;
        org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy $r6;

        r0 := @this: org.apache.lucene.index.IndexUpgrader;

        $r1 = r0.<org.apache.lucene.index.IndexUpgrader: org.apache.lucene.store.Directory dir>;

        $z0 = staticinvoke <org.apache.lucene.index.DirectoryReader: boolean indexExists(org.apache.lucene.store.Directory)>($r1);

        if $z0 != 0 goto label1;

        $r34 = new org.apache.lucene.index.IndexNotFoundException;

        $r35 = r0.<org.apache.lucene.index.IndexUpgrader: org.apache.lucene.store.Directory dir>;

        $r36 = virtualinvoke $r35.<org.apache.lucene.store.Directory: java.lang.String toString()>();

        specialinvoke $r34.<org.apache.lucene.index.IndexNotFoundException: void <init>(java.lang.String)>($r36);

        throw $r34;

     label1:
        $z1 = r0.<org.apache.lucene.index.IndexUpgrader: boolean deletePriorCommits>;

        if $z1 != 0 goto label2;

        $r27 = r0.<org.apache.lucene.index.IndexUpgrader: org.apache.lucene.store.Directory dir>;

        $r28 = staticinvoke <org.apache.lucene.index.DirectoryReader: java.util.List listCommits(org.apache.lucene.store.Directory)>($r27);

        $i0 = interfaceinvoke $r28.<java.util.Collection: int size()>();

        if $i0 <= 1 goto label2;

        $r29 = new java.lang.IllegalArgumentException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This tool was invoked to not delete prior commit points, but the following commits were found: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r33);

        throw $r29;

     label2:
        $r2 = r0.<org.apache.lucene.index.IndexUpgrader: org.apache.lucene.index.IndexWriterConfig iwc>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.index.IndexWriterConfig clone()>();

        $r4 = new org.apache.lucene.index.UpgradeIndexMergePolicy;

        $r5 = virtualinvoke $r3.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.index.MergePolicy getMergePolicy()>();

        specialinvoke $r4.<org.apache.lucene.index.UpgradeIndexMergePolicy: void <init>(org.apache.lucene.index.MergePolicy)>($r5);

        virtualinvoke $r3.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.index.IndexWriterConfig setMergePolicy(org.apache.lucene.index.MergePolicy)>($r4);

        $r6 = new org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy;

        specialinvoke $r6.<org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy: void <init>()>();

        virtualinvoke $r3.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.index.IndexWriterConfig setIndexDeletionPolicy(org.apache.lucene.index.IndexDeletionPolicy)>($r6);

        $r7 = new org.apache.lucene.index.IndexWriter;

        $r8 = r0.<org.apache.lucene.index.IndexUpgrader: org.apache.lucene.store.Directory dir>;

        specialinvoke $r7.<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.index.IndexWriterConfig)>($r8, $r3);

     label3:
        $r9 = virtualinvoke $r3.<org.apache.lucene.index.IndexWriterConfig: org.apache.lucene.util.InfoStream getInfoStream()>();

        $z2 = virtualinvoke $r9.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IndexUpgrader");

        if $z2 == 0 goto label4;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrading all pre-");

        $r17 = <org.apache.lucene.util.Constants: java.lang.String LUCENE_MAIN_VERSION>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" segments of index directory \'");

        $r20 = r0.<org.apache.lucene.index.IndexUpgrader: org.apache.lucene.store.Directory dir>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' to version ");

        $r23 = <org.apache.lucene.util.Constants: java.lang.String LUCENE_MAIN_VERSION>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IndexUpgrader", $r26);

     label4:
        virtualinvoke $r7.<org.apache.lucene.index.IndexWriter: void forceMerge(int)>(1);

        $z3 = virtualinvoke $r9.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("IndexUpgrader");

        if $z3 == 0 goto label5;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("All segments upgraded to version ");

        $r12 = <org.apache.lucene.util.Constants: java.lang.String LUCENE_MAIN_VERSION>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("IndexUpgrader", $r14);

     label5:
        virtualinvoke $r7.<org.apache.lucene.index.IndexWriter: void close()>();

        goto label8;

     label6:
        $r37 := @caughtexception;

     label7:
        virtualinvoke $r7.<org.apache.lucene.index.IndexWriter: void close()>();

        throw $r37;

     label8:
        return;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }
}
