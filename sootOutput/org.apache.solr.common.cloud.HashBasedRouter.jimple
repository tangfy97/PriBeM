public abstract class org.apache.solr.common.cloud.HashBasedRouter extends org.apache.solr.common.cloud.DocRouter
{

    public void <init>()
    {
        org.apache.solr.common.cloud.HashBasedRouter r0;

        r0 := @this: org.apache.solr.common.cloud.HashBasedRouter;

        specialinvoke r0.<org.apache.solr.common.cloud.DocRouter: void <init>()>();

        return;
    }

    public org.apache.solr.common.cloud.Slice getTargetSlice(java.lang.String, org.apache.solr.common.SolrInputDocument, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)
    {
        org.apache.solr.common.cloud.Slice $r4;
        org.apache.solr.common.cloud.DocCollection r3;
        int $i0;
        java.lang.String r5;
        org.apache.solr.common.params.SolrParams r2;
        org.apache.solr.common.cloud.HashBasedRouter r0;
        org.apache.solr.common.SolrInputDocument r1;

        r0 := @this: org.apache.solr.common.cloud.HashBasedRouter;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.solr.common.SolrInputDocument;

        r2 := @parameter2: org.apache.solr.common.params.SolrParams;

        r3 := @parameter3: org.apache.solr.common.cloud.DocCollection;

        if r5 != null goto label1;

        r5 = virtualinvoke r0.<org.apache.solr.common.cloud.HashBasedRouter: java.lang.String getId(org.apache.solr.common.SolrInputDocument,org.apache.solr.common.params.SolrParams)>(r1, r2);

     label1:
        $i0 = virtualinvoke r0.<org.apache.solr.common.cloud.HashBasedRouter: int sliceHash(java.lang.String,org.apache.solr.common.SolrInputDocument,org.apache.solr.common.params.SolrParams)>(r5, r1, r2);

        $r4 = virtualinvoke r0.<org.apache.solr.common.cloud.HashBasedRouter: org.apache.solr.common.cloud.Slice hashToSlice(int,org.apache.solr.common.cloud.DocCollection)>($i0, r3);

        return $r4;
    }

    public boolean isTargetSlice(java.lang.String, org.apache.solr.common.SolrInputDocument, org.apache.solr.common.params.SolrParams, java.lang.String, org.apache.solr.common.cloud.DocCollection)
    {
        org.apache.solr.common.cloud.Slice $r5;
        org.apache.solr.common.cloud.DocCollection r3;
        org.apache.solr.common.cloud.DocRouter$Range $r6;
        org.apache.solr.common.params.SolrParams r2;
        org.apache.solr.common.cloud.HashBasedRouter r0;
        int $i0;
        java.lang.String r4, r7;
        org.apache.solr.common.SolrInputDocument r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.solr.common.cloud.HashBasedRouter;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.solr.common.SolrInputDocument;

        r2 := @parameter2: org.apache.solr.common.params.SolrParams;

        r4 := @parameter3: java.lang.String;

        r3 := @parameter4: org.apache.solr.common.cloud.DocCollection;

        if r7 != null goto label1;

        r7 = virtualinvoke r0.<org.apache.solr.common.cloud.HashBasedRouter: java.lang.String getId(org.apache.solr.common.SolrInputDocument,org.apache.solr.common.params.SolrParams)>(r1, r2);

     label1:
        $i0 = virtualinvoke r0.<org.apache.solr.common.cloud.HashBasedRouter: int sliceHash(java.lang.String,org.apache.solr.common.SolrInputDocument,org.apache.solr.common.params.SolrParams)>(r7, r1, r2);

        $r5 = virtualinvoke r3.<org.apache.solr.common.cloud.DocCollection: org.apache.solr.common.cloud.Slice getSlice(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<org.apache.solr.common.cloud.Slice: org.apache.solr.common.cloud.DocRouter$Range getRange()>();

        if $r6 == null goto label2;

        $z0 = virtualinvoke $r6.<org.apache.solr.common.cloud.DocRouter$Range: boolean includes(int)>($i0);

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public int sliceHash(java.lang.String, org.apache.solr.common.SolrInputDocument, org.apache.solr.common.params.SolrParams)
    {
        int $i0, $i1;
        java.lang.String r0;
        org.apache.solr.common.params.SolrParams r3;
        org.apache.solr.common.cloud.HashBasedRouter r1;
        org.apache.solr.common.SolrInputDocument r2;

        r1 := @this: org.apache.solr.common.cloud.HashBasedRouter;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.solr.common.SolrInputDocument;

        r3 := @parameter2: org.apache.solr.common.params.SolrParams;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = staticinvoke <org.apache.solr.common.util.Hash: int murmurhash3_x86_32(java.lang.CharSequence,int,int,int)>(r0, 0, $i0, 0);

        return $i1;
    }

    protected java.lang.String getId(org.apache.solr.common.SolrInputDocument, org.apache.solr.common.params.SolrParams)
    {
        java.lang.Object $r1;
        java.lang.String $r4;
        org.apache.solr.common.params.SolrParams r3;
        org.apache.solr.common.SolrInputDocument r0;
        org.apache.solr.common.cloud.HashBasedRouter r2;

        r2 := @this: org.apache.solr.common.cloud.HashBasedRouter;

        r0 := @parameter0: org.apache.solr.common.SolrInputDocument;

        r3 := @parameter1: org.apache.solr.common.params.SolrParams;

        $r1 = virtualinvoke r0.<org.apache.solr.common.SolrInputDocument: java.lang.Object getFieldValue(java.lang.String)>("id");

        if $r1 == null goto label1;

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        goto label2;

     label1:
        $r4 = "null";

     label2:
        return $r4;
    }

    protected org.apache.solr.common.cloud.Slice hashToSlice(int, org.apache.solr.common.cloud.DocCollection)
    {
        org.apache.solr.common.cloud.DocCollection r0;
        org.apache.solr.common.cloud.DocRouter$Range $r14;
        org.apache.solr.common.cloud.HashBasedRouter r15;
        org.apache.solr.common.SolrException $r3;
        int i0;
        java.lang.String $r7, $r11;
        boolean $z0, $z1;
        org.apache.solr.common.cloud.Slice r13;
        java.util.Iterator $r2;
        java.util.Collection $r1;
        org.apache.solr.common.SolrException$ErrorCode $r5;
        java.lang.StringBuilder $r4, $r6, $r8, $r9, $r10;
        java.lang.Object $r12;

        r15 := @this: org.apache.solr.common.cloud.HashBasedRouter;

        i0 := @parameter0: int;

        r0 := @parameter1: org.apache.solr.common.cloud.DocCollection;

        $r1 = virtualinvoke r0.<org.apache.solr.common.cloud.DocCollection: java.util.Collection getActiveSlices()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.solr.common.cloud.Slice) $r12;

        $r14 = virtualinvoke r13.<org.apache.solr.common.cloud.Slice: org.apache.solr.common.cloud.DocRouter$Range getRange()>();

        if $r14 == null goto label2;

        $z1 = virtualinvoke $r14.<org.apache.solr.common.cloud.DocRouter$Range: boolean includes(int)>(i0);

        if $z1 == 0 goto label2;

        return r13;

     label2:
        goto label1;

     label3:
        $r3 = new org.apache.solr.common.SolrException;

        $r5 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode BAD_REQUEST>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No active slice servicing hash code ");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.solr.common.SolrException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.String)>($r5, $r11);

        throw $r3;
    }

    public java.util.Collection getSearchSlicesSingle(java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)
    {
        java.util.List $r6;
        org.apache.solr.common.cloud.Slice $r4;
        org.apache.solr.common.cloud.DocCollection r3;
        java.util.Collection $r5;
        java.lang.String r0;
        org.apache.solr.common.params.SolrParams r2;
        org.apache.solr.common.cloud.HashBasedRouter r1;

        r1 := @this: org.apache.solr.common.cloud.HashBasedRouter;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.solr.common.params.SolrParams;

        r3 := @parameter2: org.apache.solr.common.cloud.DocCollection;

        if r0 != null goto label1;

        $r5 = virtualinvoke r3.<org.apache.solr.common.cloud.DocCollection: java.util.Collection getActiveSlices()>();

        return $r5;

     label1:
        $r4 = virtualinvoke r1.<org.apache.solr.common.cloud.HashBasedRouter: org.apache.solr.common.cloud.Slice getTargetSlice(java.lang.String,org.apache.solr.common.SolrInputDocument,org.apache.solr.common.params.SolrParams,org.apache.solr.common.cloud.DocCollection)>(r0, null, r2, r3);

        if $r4 != null goto label2;

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label3;

     label2:
        $r6 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r4);

     label3:
        return $r6;
    }
}
