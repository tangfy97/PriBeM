public abstract class org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl extends java.lang.Object implements org.apache.batik.ext.awt.image.codec.util.ImageEncoder
{
    protected java.io.OutputStream output;
    protected org.apache.batik.ext.awt.image.codec.util.ImageEncodeParam param;

    public void <init>(java.io.OutputStream, org.apache.batik.ext.awt.image.codec.util.ImageEncodeParam)
    {
        java.io.OutputStream r1;
        org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl r0;
        org.apache.batik.ext.awt.image.codec.util.ImageEncodeParam r2;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: org.apache.batik.ext.awt.image.codec.util.ImageEncodeParam;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl: java.io.OutputStream output> = r1;

        r0.<org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl: org.apache.batik.ext.awt.image.codec.util.ImageEncodeParam param> = r2;

        return;
    }

    public org.apache.batik.ext.awt.image.codec.util.ImageEncodeParam getParam()
    {
        org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl r0;
        org.apache.batik.ext.awt.image.codec.util.ImageEncodeParam $r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl: org.apache.batik.ext.awt.image.codec.util.ImageEncodeParam param>;

        return $r1;
    }

    public void setParam(org.apache.batik.ext.awt.image.codec.util.ImageEncodeParam)
    {
        org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl r0;
        org.apache.batik.ext.awt.image.codec.util.ImageEncodeParam r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl;

        r1 := @parameter0: org.apache.batik.ext.awt.image.codec.util.ImageEncodeParam;

        r0.<org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl: org.apache.batik.ext.awt.image.codec.util.ImageEncodeParam param> = r1;

        return;
    }

    public java.io.OutputStream getOutputStream()
    {
        java.io.OutputStream $r1;
        org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl: java.io.OutputStream output>;

        return $r1;
    }

    public void encode(java.awt.image.Raster, java.awt.image.ColorModel) throws java.io.IOException
    {
        org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl r3;
        java.awt.image.ColorModel r2;
        java.awt.image.Raster r1;
        org.apache.batik.ext.awt.image.codec.util.SingleTileRenderedImage $r0;

        r3 := @this: org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl;

        r1 := @parameter0: java.awt.image.Raster;

        r2 := @parameter1: java.awt.image.ColorModel;

        $r0 = new org.apache.batik.ext.awt.image.codec.util.SingleTileRenderedImage;

        specialinvoke $r0.<org.apache.batik.ext.awt.image.codec.util.SingleTileRenderedImage: void <init>(java.awt.image.Raster,java.awt.image.ColorModel)>(r1, r2);

        virtualinvoke r3.<org.apache.batik.ext.awt.image.codec.util.ImageEncoderImpl: void encode(java.awt.image.RenderedImage)>($r0);

        return;
    }

    public abstract void encode(java.awt.image.RenderedImage) throws java.io.IOException;
}
