class ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator extends java.lang.Object implements ucar.nc2.dt.DataIterator
{
    int nextRecno;
    int last;
    double startTime;
    double endTime;
    boolean hasDateRange;
    final ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl this$1;

    void <init>(ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl)
    {
        ucar.nc2.dt.point.CFstationObsDataset $r3, $r5;
        ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl r1, $r2, $r4, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator r0;

        r0 := @this: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator;

        r1 := @parameter0: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl;

        r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl this$1>;

        $r3 = $r2.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl: ucar.nc2.dt.point.CFstationObsDataset this$0>;

        $i0 = staticinvoke <ucar.nc2.dt.point.CFstationObsDataset: int access$100(ucar.nc2.dt.point.CFstationObsDataset)>($r3);

        r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: int nextRecno> = $i0;

        $r4 = r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl this$1>;

        $r5 = $r4.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl: ucar.nc2.dt.point.CFstationObsDataset this$0>;

        $i1 = staticinvoke <ucar.nc2.dt.point.CFstationObsDataset: int access$100(ucar.nc2.dt.point.CFstationObsDataset)>($r5);

        $r6 = r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl this$1>;

        $i2 = staticinvoke <ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl: int access$500(ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl)>($r6);

        $i3 = $i1 + $i2;

        $i4 = $i3 - 1;

        r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: int last> = $i4;

        return;
    }

    void <init>(ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl, java.util.Date, java.util.Date)
    {
        java.util.Date r8, r11;
        ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl r1, $r2, $r4, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator r0;
        double $d0, $d1;
        ucar.nc2.dt.point.CFstationObsDataset $r3, $r5, $r7, $r10;
        ucar.nc2.units.DateUnit $r9, $r12;

        r0 := @this: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator;

        r1 := @parameter0: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl;

        r8 := @parameter1: java.util.Date;

        r11 := @parameter2: java.util.Date;

        r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl this$1>;

        $r3 = $r2.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl: ucar.nc2.dt.point.CFstationObsDataset this$0>;

        $i0 = staticinvoke <ucar.nc2.dt.point.CFstationObsDataset: int access$100(ucar.nc2.dt.point.CFstationObsDataset)>($r3);

        r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: int nextRecno> = $i0;

        $r4 = r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl this$1>;

        $r5 = $r4.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl: ucar.nc2.dt.point.CFstationObsDataset this$0>;

        $i1 = staticinvoke <ucar.nc2.dt.point.CFstationObsDataset: int access$100(ucar.nc2.dt.point.CFstationObsDataset)>($r5);

        $r6 = r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl this$1>;

        $i2 = staticinvoke <ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl: int access$500(ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl)>($r6);

        $i3 = $i1 + $i2;

        $i4 = $i3 - 1;

        r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: int last> = $i4;

        $r7 = r1.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl: ucar.nc2.dt.point.CFstationObsDataset this$0>;

        $r9 = $r7.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.units.DateUnit timeUnit>;

        $d0 = virtualinvoke $r9.<ucar.nc2.units.DateUnit: double makeValue(java.util.Date)>(r8);

        r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: double startTime> = $d0;

        $r10 = r1.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl: ucar.nc2.dt.point.CFstationObsDataset this$0>;

        $r12 = $r10.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.units.DateUnit timeUnit>;

        $d1 = virtualinvoke $r12.<ucar.nc2.units.DateUnit: double makeValue(java.util.Date)>(r11);

        r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: double endTime> = $d1;

        r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: boolean hasDateRange> = 1;

        return;
    }

    public boolean hasNext()
    {
        int $i0;
        ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator r0;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator;

        $i0 = r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: int nextRecno>;

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object nextData() throws java.io.IOException
    {
        java.lang.IllegalStateException $r23;
        ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs $r3;
        ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl $r1, $r6, $r18;
        byte $b1, $b2;
        ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator r0;
        boolean $z0, $z1;
        ucar.nc2.dt.point.CFstationObsDataset $r2;
        java.lang.StringBuilder $r11, $r12, $r13, $r16, $r17, $r20, $r22;
        ucar.unidata.geoloc.Station $r4, $r14;
        int $i0, $i3, $i4, $i5;
        java.lang.String $r5, $r7, $r15, $r19, $r21;
        double $d0, $d1, $d2;
        java.lang.Object $r8;

        r0 := @this: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator;

        $r1 = r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl this$1>;

        $r2 = $r1.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl: ucar.nc2.dt.point.CFstationObsDataset this$0>;

        $i0 = r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: int nextRecno>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs makeObs(int,boolean,ucar.ma2.StructureData)>($i0, 1, null);

        $r4 = virtualinvoke $r3.<ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs: ucar.unidata.geoloc.Station getStation()>();

        $r5 = interfaceinvoke $r4.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $r6 = r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl this$1>;

        $r7 = virtualinvoke $r6.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label1;

        $r23 = new java.lang.IllegalStateException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BAD Station link (");

        $i3 = r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: int nextRecno>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") station name=");

        $r14 = virtualinvoke $r3.<ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs: ucar.unidata.geoloc.Station getStation()>();

        $r15 = interfaceinvoke $r14.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be ");

        $r18 = r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl this$1>;

        $r19 = virtualinvoke $r18.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl: java.lang.String getName()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r23;

     label1:
        $z1 = r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: boolean hasDateRange>;

        if $z1 == 0 goto label3;

        $d0 = virtualinvoke $r3.<ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs: double getObservationTime()>();

        $d1 = r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: double startTime>;

        $b1 = $d0 cmpg $d1;

        $i4 = (int) $b1;

        if $i4 < 0 goto label2;

        $d2 = r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: double endTime>;

        $b2 = $d0 cmpl $d2;

        $i5 = (int) $b2;

        if $i5 <= 0 goto label3;

     label2:
        $r8 = virtualinvoke r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: java.lang.Object nextData()>();

        return $r8;

     label3:
        return $r3;
    }

    public java.lang.Object next()
    {
        java.lang.IllegalStateException $r8;
        org.slf4j.Logger $r3;
        java.io.IOException $r2;
        int $i0;
        ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator r0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7, $r9;

        r0 := @this: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator;

     label1:
        $r1 = virtualinvoke r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: java.lang.Object nextData()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <ucar.nc2.dt.point.CFstationObsDataset: org.slf4j.Logger access$300()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CFStationObsDataset.StationIterator.next recno=");

        $i0 = r0.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator: int nextRecno>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r7, $r2);

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke $r2.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator r1;

        r1 := @this: ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl$StationIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
