public final enum class org.apache.poi.ss.usermodel.FontUnderline extends java.lang.Enum
{
    public static final enum org.apache.poi.ss.usermodel.FontUnderline SINGLE;
    public static final enum org.apache.poi.ss.usermodel.FontUnderline DOUBLE;
    public static final enum org.apache.poi.ss.usermodel.FontUnderline SINGLE_ACCOUNTING;
    public static final enum org.apache.poi.ss.usermodel.FontUnderline DOUBLE_ACCOUNTING;
    public static final enum org.apache.poi.ss.usermodel.FontUnderline NONE;
    private int value;
    private static org.apache.poi.ss.usermodel.FontUnderline[] _table;
    private static final org.apache.poi.ss.usermodel.FontUnderline[] $VALUES;

    public static org.apache.poi.ss.usermodel.FontUnderline[] values()
    {
        java.lang.Object $r1;
        org.apache.poi.ss.usermodel.FontUnderline[] $r0, $r2;

        $r0 = <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.poi.ss.usermodel.FontUnderline[]) $r1;

        return $r2;
    }

    public static org.apache.poi.ss.usermodel.FontUnderline valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.poi.ss.usermodel.FontUnderline $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/poi/ss/usermodel/FontUnderline;", r0);

        $r2 = (org.apache.poi.ss.usermodel.FontUnderline) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, int)
    {
        org.apache.poi.ss.usermodel.FontUnderline r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: org.apache.poi.ss.usermodel.FontUnderline;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.apache.poi.ss.usermodel.FontUnderline: int value> = i1;

        return;
    }

    public int getValue()
    {
        int $i0;
        org.apache.poi.ss.usermodel.FontUnderline r0;

        r0 := @this: org.apache.poi.ss.usermodel.FontUnderline;

        $i0 = r0.<org.apache.poi.ss.usermodel.FontUnderline: int value>;

        return $i0;
    }

    public byte getByteValue()
    {
        int[] $r1;
        org.apache.poi.ss.usermodel.FontUnderline r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.ss.usermodel.FontUnderline;

        $r1 = <org.apache.poi.ss.usermodel.FontUnderline$1: int[] $SwitchMap$org$apache$poi$ss$usermodel$FontUnderline>;

        $i0 = virtualinvoke r0.<org.apache.poi.ss.usermodel.FontUnderline: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label1:
        return 2;

     label2:
        return 34;

     label3:
        return 33;

     label4:
        return 0;

     label5:
        return 1;

     label6:
        return 1;
    }

    public static org.apache.poi.ss.usermodel.FontUnderline valueOf(int)
    {
        int i0;
        org.apache.poi.ss.usermodel.FontUnderline[] $r0;
        org.apache.poi.ss.usermodel.FontUnderline $r1;

        i0 := @parameter0: int;

        $r0 = <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline[] _table>;

        $r1 = $r0[i0];

        return $r1;
    }

    public static org.apache.poi.ss.usermodel.FontUnderline valueOf(byte)
    {
        int $i1;
        byte b0;
        org.apache.poi.ss.usermodel.FontUnderline r0;

        b0 := @parameter0: byte;

        $i1 = (int) b0;

        lookupswitch($i1)
        {
            case 1: goto label4;
            case 2: goto label1;
            case 33: goto label3;
            case 34: goto label2;
            default: goto label5;
        };

     label1:
        r0 = <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline DOUBLE>;

        goto label6;

     label2:
        r0 = <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline DOUBLE_ACCOUNTING>;

        goto label6;

     label3:
        r0 = <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline SINGLE_ACCOUNTING>;

        goto label6;

     label4:
        r0 = <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline SINGLE>;

        goto label6;

     label5:
        r0 = <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline NONE>;

     label6:
        return r0;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.usermodel.FontUnderline[] $r5, $r11, $r12, $r14;
        int i0, $i1, i2;
        org.apache.poi.ss.usermodel.FontUnderline $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, r13;

        $r0 = new org.apache.poi.ss.usermodel.FontUnderline;

        specialinvoke $r0.<org.apache.poi.ss.usermodel.FontUnderline: void <init>(java.lang.String,int,int)>("SINGLE", 0, 1);

        <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline SINGLE> = $r0;

        $r1 = new org.apache.poi.ss.usermodel.FontUnderline;

        specialinvoke $r1.<org.apache.poi.ss.usermodel.FontUnderline: void <init>(java.lang.String,int,int)>("DOUBLE", 1, 2);

        <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline DOUBLE> = $r1;

        $r2 = new org.apache.poi.ss.usermodel.FontUnderline;

        specialinvoke $r2.<org.apache.poi.ss.usermodel.FontUnderline: void <init>(java.lang.String,int,int)>("SINGLE_ACCOUNTING", 2, 3);

        <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline SINGLE_ACCOUNTING> = $r2;

        $r3 = new org.apache.poi.ss.usermodel.FontUnderline;

        specialinvoke $r3.<org.apache.poi.ss.usermodel.FontUnderline: void <init>(java.lang.String,int,int)>("DOUBLE_ACCOUNTING", 3, 4);

        <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline DOUBLE_ACCOUNTING> = $r3;

        $r4 = new org.apache.poi.ss.usermodel.FontUnderline;

        specialinvoke $r4.<org.apache.poi.ss.usermodel.FontUnderline: void <init>(java.lang.String,int,int)>("NONE", 4, 5);

        <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline NONE> = $r4;

        $r5 = newarray (org.apache.poi.ss.usermodel.FontUnderline)[5];

        $r6 = <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline SINGLE>;

        $r5[0] = $r6;

        $r7 = <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline DOUBLE>;

        $r5[1] = $r7;

        $r8 = <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline SINGLE_ACCOUNTING>;

        $r5[2] = $r8;

        $r9 = <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline DOUBLE_ACCOUNTING>;

        $r5[3] = $r9;

        $r10 = <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline NONE>;

        $r5[4] = $r10;

        <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline[] $VALUES> = $r5;

        $r11 = newarray (org.apache.poi.ss.usermodel.FontUnderline)[6];

        <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline[] _table> = $r11;

        $r12 = staticinvoke <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline[] values()>();

        i0 = lengthof $r12;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        r13 = $r12[i2];

        $r14 = <org.apache.poi.ss.usermodel.FontUnderline: org.apache.poi.ss.usermodel.FontUnderline[] _table>;

        $i1 = virtualinvoke r13.<org.apache.poi.ss.usermodel.FontUnderline: int getValue()>();

        $r14[$i1] = r13;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }
}
