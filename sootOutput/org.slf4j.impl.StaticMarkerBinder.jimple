public class org.slf4j.impl.StaticMarkerBinder extends java.lang.Object implements org.slf4j.spi.MarkerFactoryBinder
{
    public static final org.slf4j.impl.StaticMarkerBinder SINGLETON;
    final org.slf4j.IMarkerFactory markerFactory;
    static java.lang.Class class$org$slf4j$helpers$BasicMarkerFactory;

    private void <init>()
    {
        org.slf4j.impl.StaticMarkerBinder r0;
        org.slf4j.helpers.BasicMarkerFactory $r1;

        r0 := @this: org.slf4j.impl.StaticMarkerBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.slf4j.helpers.BasicMarkerFactory;

        specialinvoke $r1.<org.slf4j.helpers.BasicMarkerFactory: void <init>()>();

        r0.<org.slf4j.impl.StaticMarkerBinder: org.slf4j.IMarkerFactory markerFactory> = $r1;

        return;
    }

    public org.slf4j.IMarkerFactory getMarkerFactory()
    {
        org.slf4j.impl.StaticMarkerBinder r0;
        org.slf4j.IMarkerFactory $r1;

        r0 := @this: org.slf4j.impl.StaticMarkerBinder;

        $r1 = r0.<org.slf4j.impl.StaticMarkerBinder: org.slf4j.IMarkerFactory markerFactory>;

        return $r1;
    }

    public java.lang.String getMarkerFactoryClassStr()
    {
        java.lang.Class $r0, $r3;
        java.lang.String $r1;
        org.slf4j.impl.StaticMarkerBinder r2;

        r2 := @this: org.slf4j.impl.StaticMarkerBinder;

        $r0 = <org.slf4j.impl.StaticMarkerBinder: java.lang.Class class$org$slf4j$helpers$BasicMarkerFactory>;

        if $r0 != null goto label1;

        $r3 = staticinvoke <org.slf4j.impl.StaticMarkerBinder: java.lang.Class class$(java.lang.String)>("org.slf4j.helpers.BasicMarkerFactory");

        <org.slf4j.impl.StaticMarkerBinder: java.lang.Class class$org$slf4j$helpers$BasicMarkerFactory> = $r3;

        goto label2;

     label1:
        $r3 = <org.slf4j.impl.StaticMarkerBinder: java.lang.Class class$org$slf4j$helpers$BasicMarkerFactory>;

     label2:
        $r1 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.slf4j.impl.StaticMarkerBinder $r0;

        $r0 = new org.slf4j.impl.StaticMarkerBinder;

        specialinvoke $r0.<org.slf4j.impl.StaticMarkerBinder: void <init>()>();

        <org.slf4j.impl.StaticMarkerBinder: org.slf4j.impl.StaticMarkerBinder SINGLETON> = $r0;

        return;
    }
}
