class com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer$1 extends com.mycila.inject.internal.cglib.core.CodeEmitter
{
    private final com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer this$0;

    void <init>(com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer, com.mycila.inject.internal.cglib.core.CodeEmitter)
    {
        com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer r2;
        com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer$1 r0;
        com.mycila.inject.internal.cglib.core.CodeEmitter r1;

        r0 := @this: com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer$1;

        r2 := @parameter0: com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer;

        r1 := @parameter1: com.mycila.inject.internal.cglib.core.CodeEmitter;

        specialinvoke r0.<com.mycila.inject.internal.cglib.core.CodeEmitter: void <init>(com.mycila.inject.internal.cglib.core.CodeEmitter)>(r1);

        r0.<com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer$1: com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer this$0> = r2;

        return;
    }

    public void visitInsn(int)
    {
        com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer$1 r0;
        int i0;
        com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer $r1;
        com.mycila.inject.internal.cglib.core.MethodInfo $r2;

        r0 := @this: com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer$1;

        i0 := @parameter0: int;

        if i0 != 177 goto label1;

        virtualinvoke r0.<com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer$1: void load_this()>();

        $r1 = r0.<com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer$1: com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer this$0>;

        $r2 = staticinvoke <com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer: com.mycila.inject.internal.cglib.core.MethodInfo access$000(com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer)>($r1);

        virtualinvoke r0.<com.mycila.inject.internal.cglib.transform.impl.AddInitTransformer$1: void invoke(com.mycila.inject.internal.cglib.core.MethodInfo)>($r2);

     label1:
        specialinvoke r0.<com.mycila.inject.internal.cglib.core.CodeEmitter: void visitInsn(int)>(i0);

        return;
    }
}
