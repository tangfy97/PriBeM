public class ucar.unidata.geoloc.ogc.WKTParser extends java.lang.Object
{
    private java.lang.String geogcsName;
    private java.lang.String datumName;
    private java.lang.String spheroidName;
    private double majorAxis;
    private double inverseMinor;
    private java.lang.String primeMeridianName;
    private double primeMeridianValue;
    private java.lang.String geogUnitName;
    private double geogUnitValue;
    private boolean isAProjection;
    private java.lang.String projName;
    private java.lang.String projectionType;
    private java.util.HashMap parameters;
    private java.lang.String projUnitName;
    private double projUnitValue;
    private int position;
    java.io.StringReader reader;

    public void <init>(java.lang.String) throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.io.StringReader $r2;
        java.util.HashMap $r1;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        r3 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<ucar.unidata.geoloc.ogc.WKTParser: java.util.HashMap parameters> = $r1;

        r0.<ucar.unidata.geoloc.ogc.WKTParser: int position> = 0;

        $r2 = new java.io.StringReader;

        specialinvoke $r2.<java.io.StringReader: void <init>(java.lang.String)>(r3);

        r0.<ucar.unidata.geoloc.ogc.WKTParser: java.io.StringReader reader> = $r2;

        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("PROJCS");

        if $z0 == 0 goto label1;

        r0.<ucar.unidata.geoloc.ogc.WKTParser: boolean isAProjection> = 1;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void parseProjcs()>();

        goto label2;

     label1:
        r0.<ucar.unidata.geoloc.ogc.WKTParser: boolean isAProjection> = 0;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void parseGeogcs()>();

     label2:
        return;
    }

    private char peek() throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        char $c1;
        java.io.IOException $r4;
        java.io.StringReader $r1, $r2, $r3;
        int $i0, $i2;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        java.text.ParseException $r5;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

     label1:
        $r1 = r0.<ucar.unidata.geoloc.ogc.WKTParser: java.io.StringReader reader>;

        virtualinvoke $r1.<java.io.StringReader: void mark(int)>(10);

        $r2 = r0.<ucar.unidata.geoloc.ogc.WKTParser: java.io.StringReader reader>;

        $i0 = virtualinvoke $r2.<java.io.StringReader: int read()>();

        $r3 = r0.<ucar.unidata.geoloc.ogc.WKTParser: java.io.StringReader reader>;

        virtualinvoke $r3.<java.io.StringReader: void reset()>();

        if $i0 >= 0 goto label3;

     label2:
        return 0;

     label3:
        $c1 = (char) $i0;

     label4:
        return $c1;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.text.ParseException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Strange io error ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = r0.<ucar.unidata.geoloc.ogc.WKTParser: int position>;

        specialinvoke $r5.<java.text.ParseException: void <init>(java.lang.String,int)>($r9, $i2);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    private char getChar() throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        char $c3;
        java.io.IOException $r3;
        java.io.StringReader $r1;
        int $i0, $i1, $i2, $i4, $i5;
        java.lang.String $r5;
        java.text.ParseException $r2, $r4;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

     label1:
        $r1 = r0.<ucar.unidata.geoloc.ogc.WKTParser: java.io.StringReader reader>;

        $i0 = virtualinvoke $r1.<java.io.StringReader: int read()>();

        $i1 = r0.<ucar.unidata.geoloc.ogc.WKTParser: int position>;

        $i2 = $i1 + 1;

        r0.<ucar.unidata.geoloc.ogc.WKTParser: int position> = $i2;

        if $i0 >= 0 goto label2;

        $r2 = new java.text.ParseException;

        $i4 = r0.<ucar.unidata.geoloc.ogc.WKTParser: int position>;

        specialinvoke $r2.<java.text.ParseException: void <init>(java.lang.String,int)>("unexpected eof of srtext", $i4);

        throw $r2;

     label2:
        $c3 = (char) $i0;

     label3:
        return $c3;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.text.ParseException;

        $r5 = virtualinvoke $r3.<java.io.IOException: java.lang.String toString()>();

        $i5 = r0.<ucar.unidata.geoloc.ogc.WKTParser: int position>;

        specialinvoke $r4.<java.text.ParseException: void <init>(java.lang.String,int)>($r5, $i5);

        throw $r4;

        catch java.io.IOException from label1 to label3 with label4;
    }

    private void eatLiteral(java.lang.String) throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r1;
        char $c1, $c2;
        int $i0, $i3, i4, $i5, $i6;
        java.lang.String r0;
        java.text.ParseException $r3;

        r1 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i4 = 0;

     label1:
        if i4 >= $i0 goto label3;

        $c1 = specialinvoke r1.<ucar.unidata.geoloc.ogc.WKTParser: char getChar()>();

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i5 = (int) $c1;

        $i6 = (int) $c2;

        if $i5 == $i6 goto label2;

        $r3 = new java.text.ParseException;

        $i3 = r1.<ucar.unidata.geoloc.ogc.WKTParser: int position>;

        specialinvoke $r3.<java.text.ParseException: void <init>(java.lang.String,int)>("bad srtext", $i3);

        throw $r3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    private double eatReal() throws java.text.ParseException
    {
        int $i1, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r2, $r8;
        java.text.ParseException $r11;
        boolean $z0;
        double $d0;
        ucar.unidata.geoloc.ogc.WKTParser r1;
        char $c0, $c2;
        java.lang.NumberFormatException $r3;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;

        r1 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

     label1:
        $c0 = specialinvoke r1.<ucar.unidata.geoloc.ogc.WKTParser: char peek()>();

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c0);

        if $z0 != 0 goto label2;

        $i3 = (int) $c0;

        if $i3 == 101 goto label2;

        $i4 = (int) $c0;

        if $i4 == 69 goto label2;

        $i5 = (int) $c0;

        if $i5 == 46 goto label2;

        $i6 = (int) $c0;

        if $i6 == 45 goto label2;

        $i7 = (int) $c0;

        if $i7 != 43 goto label3;

     label2:
        $c2 = specialinvoke r1.<ucar.unidata.geoloc.ogc.WKTParser: char getChar()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label1;

     label3:
        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r2);

     label4:
        return $d0;

     label5:
        $r3 := @caughtexception;

        $r11 = new java.text.ParseException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad number");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = r1.<ucar.unidata.geoloc.ogc.WKTParser: int position>;

        specialinvoke $r11.<java.text.ParseException: void <init>(java.lang.String,int)>($r8, $i1);

        throw $r11;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    private java.lang.String eatString() throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r1;
        char $c0, $c1;
        int $i2, $i3, $i4;
        java.lang.StringBuilder $r4;
        java.lang.String $r2;
        java.text.ParseException $r5;

        r1 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $c0 = specialinvoke r1.<ucar.unidata.geoloc.ogc.WKTParser: char getChar()>();

        $i3 = (int) $c0;

        if $i3 == 34 goto label1;

        $r5 = new java.text.ParseException;

        $i2 = r1.<ucar.unidata.geoloc.ogc.WKTParser: int position>;

        specialinvoke $r5.<java.text.ParseException: void <init>(java.lang.String,int)>("expected string", $i2);

        throw $r5;

     label1:
        $c1 = specialinvoke r1.<ucar.unidata.geoloc.ogc.WKTParser: char getChar()>();

        $i4 = (int) $c1;

        if $i4 != 34 goto label2;

        goto label3;

     label2:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label1;

     label3:
        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private java.lang.String eatTerm() throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r1;
        java.lang.StringBuilder $r0;
        char $c0, $c1;
        java.lang.String $r2;
        boolean $z0;

        r1 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

     label1:
        $c0 = specialinvoke r1.<ucar.unidata.geoloc.ogc.WKTParser: char peek()>();

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c0);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $c1 = specialinvoke r1.<ucar.unidata.geoloc.ogc.WKTParser: char getChar()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label1;

     label3:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private void eatComma() throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        int $i1, $i2;
        char $c0;
        java.text.ParseException $r2;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $c0 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: char getChar()>();

        $i2 = (int) $c0;

        if $i2 == 44 goto label1;

        $r2 = new java.text.ParseException;

        $i1 = r0.<ucar.unidata.geoloc.ogc.WKTParser: int position>;

        specialinvoke $r2.<java.text.ParseException: void <init>(java.lang.String,int)>("expected comma", $i1);

        throw $r2;

     label1:
        return;
    }

    private void eatOpenBrace() throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        int $i1, $i2;
        char $c0;
        java.text.ParseException $r2;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $c0 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: char getChar()>();

        $i2 = (int) $c0;

        if $i2 == 91 goto label1;

        $r2 = new java.text.ParseException;

        $i1 = r0.<ucar.unidata.geoloc.ogc.WKTParser: int position>;

        specialinvoke $r2.<java.text.ParseException: void <init>(java.lang.String,int)>("expected [", $i1);

        throw $r2;

     label1:
        return;
    }

    private void eatCloseBrace() throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        int $i1, $i2;
        char $c0;
        java.text.ParseException $r2;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $c0 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: char getChar()>();

        $i2 = (int) $c0;

        if $i2 == 93 goto label1;

        $r2 = new java.text.ParseException;

        $i1 = r0.<ucar.unidata.geoloc.ogc.WKTParser: int position>;

        specialinvoke $r2.<java.text.ParseException: void <init>(java.lang.String,int)>("expected ]", $i1);

        throw $r2;

     label1:
        return;
    }

    private void parseProjcs() throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        char $c0;
        int $i1, $i2, $i3;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        java.text.ParseException $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatLiteral(java.lang.String)>("PROJCS[");

        $r1 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String eatString()>();

        r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String projName> = $r1;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatComma()>();

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void parseGeogcs()>();

     label1:
        $c0 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: char getChar()>();

        $i2 = (int) $c0;

        if $i2 != 93 goto label2;

        goto label7;

     label2:
        $i3 = (int) $c0;

        if $i3 == 44 goto label3;

        $r7 = new java.text.ParseException;

        $i1 = r0.<ucar.unidata.geoloc.ogc.WKTParser: int position>;

        specialinvoke $r7.<java.text.ParseException: void <init>(java.lang.String,int)>("expected , or ]", $i1);

        throw $r7;

     label3:
        $r2 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String eatTerm()>();

        $r3 = "PARAMETER";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatParameter()>();

        goto label6;

     label4:
        $r4 = "UNIT";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label5;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatProjcsUnit()>();

        goto label6;

     label5:
        $r5 = "PROJECTION";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z2 == 0 goto label6;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatProjectionType()>();

     label6:
        goto label1;

     label7:
        return;
    }

    private void eatParameter() throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.lang.Double $r2;
        java.util.HashMap $r3;
        java.lang.String $r1, $r4;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatOpenBrace()>();

        $r1 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String eatString()>();

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatComma()>();

        $r2 = new java.lang.Double;

        $d0 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double eatReal()>();

        specialinvoke $r2.<java.lang.Double: void <init>(double)>($d0);

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatCloseBrace()>();

        $r3 = r0.<ucar.unidata.geoloc.ogc.WKTParser: java.util.HashMap parameters>;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r2);

        return;
    }

    private void eatProjcsUnit() throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.lang.String $r1;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatOpenBrace()>();

        $r1 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String eatString()>();

        r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String projUnitName> = $r1;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatComma()>();

        $d0 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double eatReal()>();

        r0.<ucar.unidata.geoloc.ogc.WKTParser: double projUnitValue> = $d0;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatCloseBrace()>();

        return;
    }

    private void eatProjectionType() throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.lang.String $r1;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatOpenBrace()>();

        $r1 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String eatString()>();

        r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String projectionType> = $r1;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatCloseBrace()>();

        return;
    }

    private void parseGeogcs() throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        char $c0;
        int $i1, $i2, $i3;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        java.text.ParseException $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatLiteral(java.lang.String)>("GEOGCS[");

        $r1 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String eatString()>();

        r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String geogcsName> = $r1;

     label1:
        $c0 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: char getChar()>();

        $i2 = (int) $c0;

        if $i2 != 93 goto label2;

        goto label7;

     label2:
        $i3 = (int) $c0;

        if $i3 == 44 goto label3;

        $r7 = new java.text.ParseException;

        $i1 = r0.<ucar.unidata.geoloc.ogc.WKTParser: int position>;

        specialinvoke $r7.<java.text.ParseException: void <init>(java.lang.String,int)>("expected , or ]", $i1);

        throw $r7;

     label3:
        $r2 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String eatTerm()>();

        $r3 = "DATUM";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatDatum()>();

        goto label6;

     label4:
        $r4 = "PRIMEM";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label5;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatPrimem()>();

        goto label6;

     label5:
        $r5 = "UNIT";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z2 == 0 goto label6;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatUnit()>();

     label6:
        goto label1;

     label7:
        return;
    }

    private void eatDatum() throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.lang.String $r1;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatOpenBrace()>();

        $r1 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String eatString()>();

        r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String datumName> = $r1;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatComma()>();

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatSpheroid()>();

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatCloseBrace()>();

        return;
    }

    private void eatPrimem() throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.lang.String $r1;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatOpenBrace()>();

        $r1 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String eatString()>();

        r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String primeMeridianName> = $r1;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatComma()>();

        $d0 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double eatReal()>();

        r0.<ucar.unidata.geoloc.ogc.WKTParser: double primeMeridianValue> = $d0;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatCloseBrace()>();

        return;
    }

    private void eatSpheroid() throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.lang.String $r1;
        double $d0, $d1;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatLiteral(java.lang.String)>("SPHEROID");

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatOpenBrace()>();

        $r1 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String eatString()>();

        r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String spheroidName> = $r1;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatComma()>();

        $d0 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double eatReal()>();

        r0.<ucar.unidata.geoloc.ogc.WKTParser: double majorAxis> = $d0;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatComma()>();

        $d1 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double eatReal()>();

        r0.<ucar.unidata.geoloc.ogc.WKTParser: double inverseMinor> = $d1;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatCloseBrace()>();

        return;
    }

    private void eatUnit() throws java.text.ParseException
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.lang.String $r1;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatOpenBrace()>();

        $r1 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String eatString()>();

        r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String geogUnitName> = $r1;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatComma()>();

        $d0 = specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double eatReal()>();

        r0.<ucar.unidata.geoloc.ogc.WKTParser: double geogUnitValue> = $d0;

        specialinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: void eatCloseBrace()>();

        return;
    }

    public java.lang.String getGeogcsName()
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.lang.String $r1;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $r1 = r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String geogcsName>;

        return $r1;
    }

    public java.lang.String getDatumName()
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.lang.String $r1;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $r1 = r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String datumName>;

        return $r1;
    }

    public java.lang.String getSpheroidName()
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.lang.String $r1;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $r1 = r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String spheroidName>;

        return $r1;
    }

    public double getMajorAxis()
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $d0 = r0.<ucar.unidata.geoloc.ogc.WKTParser: double majorAxis>;

        return $d0;
    }

    public double getInverseFlattening()
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $d0 = r0.<ucar.unidata.geoloc.ogc.WKTParser: double inverseMinor>;

        return $d0;
    }

    public java.lang.String getPrimeMeridianName()
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.lang.String $r1;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $r1 = r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String primeMeridianName>;

        return $r1;
    }

    public double getPrimeMeridianValue()
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $d0 = r0.<ucar.unidata.geoloc.ogc.WKTParser: double primeMeridianValue>;

        return $d0;
    }

    public java.lang.String getGeogUnitName()
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.lang.String $r1;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $r1 = r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String geogUnitName>;

        return $r1;
    }

    public double getGeogUnitValue()
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $d0 = r0.<ucar.unidata.geoloc.ogc.WKTParser: double geogUnitValue>;

        return $d0;
    }

    public boolean hasParameter(java.lang.String)
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.util.HashMap $r2;
        java.lang.Object $r4;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.unidata.geoloc.ogc.WKTParser: java.util.HashMap parameters>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        if $r4 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public double getParameter(java.lang.String)
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.lang.Double r5;
        java.util.HashMap $r2;
        java.lang.IllegalArgumentException $r6;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String r1, $r3, $r10;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.unidata.geoloc.ogc.WKTParser: java.util.HashMap parameters>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (java.lang.Double) $r4;

        if r5 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no parameter called ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        $d0 = virtualinvoke r5.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

    public boolean isPlanarProjection()
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        boolean $z0;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $z0 = r0.<ucar.unidata.geoloc.ogc.WKTParser: boolean isAProjection>;

        return $z0;
    }

    public java.lang.String getProjName()
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.lang.String $r1;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $r1 = r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String projName>;

        return $r1;
    }

    public java.lang.String getProjectionType()
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.lang.String $r1;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $r1 = r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String projectionType>;

        return $r1;
    }

    public java.lang.String getProjUnitName()
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        java.lang.String $r1;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $r1 = r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String projUnitName>;

        return $r1;
    }

    public double getProjUnitValue()
    {
        ucar.unidata.geoloc.ogc.WKTParser r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.ogc.WKTParser;

        $d0 = r0.<ucar.unidata.geoloc.ogc.WKTParser: double projUnitValue>;

        return $d0;
    }

    public static ucar.unidata.geoloc.ProjectionImpl convertWKTToProjection(ucar.unidata.geoloc.ogc.WKTParser)
    {
        ucar.unidata.geoloc.ProjectionImpl r26;
        byte $b0, $b1;
        ucar.unidata.geoloc.projection.TransverseMercator $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        ucar.unidata.geoloc.ogc.WKTParser r0;
        ucar.unidata.geoloc.projection.Stereographic $r9;
        java.lang.Exception $r17;
        java.lang.StringBuilder $r18, $r20, $r21, $r23, $r24;
        ucar.unidata.geoloc.projection.AlbersEqualArea $r10;
        ucar.unidata.geoloc.projection.Mercator $r8;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r13, $r22, $r25, $r27;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, d17, d18, d19, d20;
        java.io.PrintStream $r19;
        ucar.nc2.units.SimpleUnit $r14, $r15;
        ucar.unidata.geoloc.projection.LambertConformal $r11;
        ucar.unidata.geoloc.projection.LatLonProjection $r16;

        r0 := @parameter0: ucar.unidata.geoloc.ogc.WKTParser;

        $z0 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: boolean isPlanarProjection()>();

        if $z0 != 0 goto label01;

        $r16 = new ucar.unidata.geoloc.projection.LatLonProjection;

        specialinvoke $r16.<ucar.unidata.geoloc.projection.LatLonProjection: void <init>()>();

        return $r16;

     label01:
        $r1 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String getProjectionType()>();

        d16 = 0.0;

        d17 = 0.0;

        r26 = null;

        $z1 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: boolean hasParameter(java.lang.String)>("False_Easting");

        if $z1 == 0 goto label02;

        d16 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("False_Easting");

     label02:
        $z2 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: boolean hasParameter(java.lang.String)>("False_Northing");

        if $z2 == 0 goto label03;

        d17 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("False_Northing");

     label03:
        $b0 = d16 cmpl 0.0;

        if $b0 != 0 goto label04;

        $b1 = d17 cmpl 0.0;

        if $b1 == 0 goto label09;

     label04:
        d18 = 1.0;

        $r2 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String getProjUnitName()>();

        if $r2 == null goto label08;

     label05:
        $r13 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String getProjUnitName()>();

        $r14 = staticinvoke <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit factoryWithExceptions(java.lang.String)>($r13);

        $d14 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getProjUnitValue()>();

        $r15 = <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit kmUnit>;

        d18 = virtualinvoke $r14.<ucar.nc2.units.SimpleUnit: double convertTo(double,ucar.nc2.units.SimpleUnit)>($d14, $r15);

     label06:
        goto label08;

     label07:
        $r17 := @caughtexception;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $d15 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getProjUnitValue()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d15);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r22 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: java.lang.String getProjUnitName()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not convertible to km");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r25);

     label08:
        d16 = d16 * d18;

        d17 = d17 * d18;

     label09:
        $r27 = "Transverse_Mercator";

        $z10 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z10 == 0 goto label10;

        $d11 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("Latitude_Of_Origin");

        $d12 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("Scale_Factor");

        $d13 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("Central_Meridian");

        $r12 = new ucar.unidata.geoloc.projection.TransverseMercator;

        specialinvoke $r12.<ucar.unidata.geoloc.projection.TransverseMercator: void <init>(double,double,double,double,double)>($d11, $d13, $d12, d16, d17);

        r26 = $r12;

        goto label17;

     label10:
        $r3 = "Lambert_Conformal_Conic";

        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z3 == 0 goto label12;

        $d8 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("Central_Meridian");

        $d9 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("Standard_Parallel_1");

        d19 = $d9;

        $z9 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: boolean hasParameter(java.lang.String)>("Standard_Parallel_2");

        if $z9 == 0 goto label11;

        d19 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("Standard_Parallel_2");

     label11:
        $d10 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("Latitude_Of_Origin");

        $r11 = new ucar.unidata.geoloc.projection.LambertConformal;

        specialinvoke $r11.<ucar.unidata.geoloc.projection.LambertConformal: void <init>(double,double,double,double,double,double)>($d10, $d8, $d9, d19, d16, d17);

        return $r11;

     label12:
        $r4 = "Albers";

        $z4 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z4 == 0 goto label14;

        $d5 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("Central_Meridian");

        $d6 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("Standard_Parallel_1");

        d20 = $d6;

        $z8 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: boolean hasParameter(java.lang.String)>("Standard_Parallel_2");

        if $z8 == 0 goto label13;

        d20 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("Standard_Parallel_2");

     label13:
        $d7 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("Latitude_Of_Origin");

        $r10 = new ucar.unidata.geoloc.projection.AlbersEqualArea;

        specialinvoke $r10.<ucar.unidata.geoloc.projection.AlbersEqualArea: void <init>(double,double,double,double,double,double)>($d7, $d5, $d6, d20, d16, d17);

        return $r10;

     label14:
        $r5 = "Stereographic";

        $z5 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z5 == 0 goto label15;

        $d2 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("Central_Meridian");

        $d3 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("Scale_Factor");

        $d4 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("Latitude_Of_Origin");

        $r9 = new ucar.unidata.geoloc.projection.Stereographic;

        specialinvoke $r9.<ucar.unidata.geoloc.projection.Stereographic: void <init>(double,double,double,double,double)>($d4, $d2, $d3, d16, d17);

        return $r9;

     label15:
        $r6 = "Mercator";

        $z6 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z6 == 0 goto label16;

        $d0 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("Latitude_Of_Origin");

        $d1 = virtualinvoke r0.<ucar.unidata.geoloc.ogc.WKTParser: double getParameter(java.lang.String)>("Central_Meridian");

        $r8 = new ucar.unidata.geoloc.projection.Mercator;

        specialinvoke $r8.<ucar.unidata.geoloc.projection.Mercator: void <init>(double,double,double,double)>($d1, $d0, d16, d17);

        r26 = $r8;

        goto label17;

     label16:
        $r7 = "Universal_Transverse_Mercator";

        $z7 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z7 == 0 goto label17;

     label17:
        return r26;

        catch java.lang.Exception from label05 to label06 with label07;
    }
}
