public final class com.ctc.wstx.sw.AsciiXmlWriter extends com.ctc.wstx.sw.EncodingXmlWriter
{

    public void <init>(java.io.OutputStream, com.ctc.wstx.api.WriterConfig, boolean) throws java.io.IOException
    {
        java.io.OutputStream r1;
        com.ctc.wstx.api.WriterConfig r2;
        com.ctc.wstx.sw.AsciiXmlWriter r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.sw.AsciiXmlWriter;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: com.ctc.wstx.api.WriterConfig;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void <init>(java.io.OutputStream,com.ctc.wstx.api.WriterConfig,java.lang.String,boolean)>(r1, r2, "US-ASCII", z0);

        return;
    }

    public void writeRaw(char[], int, int) throws java.io.IOException
    {
        byte[] $r1, $r3, $r4, $r5;
        byte $b4, $b12;
        int $i0, $i1, $i2, i6, i7, i8, i9, i10, $i11, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        com.ctc.wstx.sw.AsciiXmlWriter r0;
        boolean $z0, $z1;
        char $c3, c5;
        char[] r2;

        r0 := @this: com.ctc.wstx.sw.AsciiXmlWriter;

        r2 := @parameter0: char[];

        i6 := @parameter1: int;

        i7 := @parameter2: int;

        $i0 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mSurrogate>;

        if $i0 == 0 goto label01;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void throwUnpairedSurrogate()>();

     label01:
        i8 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

     label02:
        if i7 <= 0 goto label15;

        $r1 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i1 = lengthof $r1;

        i9 = $i1 - i8;

        if i9 >= 1 goto label03;

        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i8;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void flushBuffer()>();

        i8 = 0;

        $r4 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        i9 = lengthof $r4;

     label03:
        if i9 <= i7 goto label04;

        i9 = i7;

     label04:
        $z0 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mCheckContent>;

        if $z0 == 0 goto label12;

        i10 = i6 + i9;

     label05:
        if i6 >= i10 goto label11;

        c5 = r2[i6];

        $i14 = (int) c5;

        if $i14 >= 32 goto label08;

        $i15 = (int) c5;

        if $i15 != 10 goto label06;

        goto label10;

     label06:
        $i16 = (int) c5;

        if $i16 != 13 goto label07;

        goto label10;

     label07:
        $i17 = (int) c5;

        if $i17 == 9 goto label10;

        $i18 = (int) c5;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidChar(int)>($i18);

        goto label10;

     label08:
        $i19 = (int) c5;

        if $i19 <= 126 goto label10;

        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i8;

        $i20 = (int) c5;

        if $i20 <= 127 goto label09;

        $i21 = (int) c5;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidAsciiChar(int)>($i21);

        goto label10;

     label09:
        $z1 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mXml11>;

        if $z1 == 0 goto label10;

        $i22 = (int) c5;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidChar(int)>($i22);

     label10:
        $r5 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i11 = i8;

        i8 = i8 + 1;

        $b12 = (byte) c5;

        $r5[$i11] = $b12;

        i6 = i6 + 1;

        goto label05;

     label11:
        goto label14;

     label12:
        i13 = i6 + i9;

     label13:
        if i6 >= i13 goto label14;

        $r3 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i2 = i8;

        i8 = i8 + 1;

        $c3 = r2[i6];

        $b4 = (byte) $c3;

        $r3[$i2] = $b4;

        i6 = i6 + 1;

        goto label13;

     label14:
        i7 = i7 - i9;

        goto label02;

     label15:
        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i8;

        return;
    }

    public void writeRaw(java.lang.String, int, int) throws java.io.IOException
    {
        byte[] $r1, $r3, $r4, $r5;
        byte $b4, $b12;
        int $i0, $i1, $i2, i6, i7, i8, i9, i10, $i11, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        java.lang.String r2;
        com.ctc.wstx.sw.AsciiXmlWriter r0;
        boolean $z0, $z1;
        char $c3, $c5;

        r0 := @this: com.ctc.wstx.sw.AsciiXmlWriter;

        r2 := @parameter0: java.lang.String;

        i6 := @parameter1: int;

        i7 := @parameter2: int;

        $i0 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mSurrogate>;

        if $i0 == 0 goto label01;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void throwUnpairedSurrogate()>();

     label01:
        i8 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

     label02:
        if i7 <= 0 goto label15;

        $r1 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i1 = lengthof $r1;

        i9 = $i1 - i8;

        if i9 >= 1 goto label03;

        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i8;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void flushBuffer()>();

        i8 = 0;

        $r4 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        i9 = lengthof $r4;

     label03:
        if i9 <= i7 goto label04;

        i9 = i7;

     label04:
        $z0 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mCheckContent>;

        if $z0 == 0 goto label12;

        i10 = i6 + i9;

     label05:
        if i6 >= i10 goto label11;

        $c5 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i6);

        $i14 = (int) $c5;

        if $i14 >= 32 goto label08;

        $i15 = (int) $c5;

        if $i15 != 10 goto label06;

        goto label10;

     label06:
        $i16 = (int) $c5;

        if $i16 != 13 goto label07;

        goto label10;

     label07:
        $i17 = (int) $c5;

        if $i17 == 9 goto label10;

        $i18 = (int) $c5;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidChar(int)>($i18);

        goto label10;

     label08:
        $i19 = (int) $c5;

        if $i19 <= 126 goto label10;

        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i8;

        $i20 = (int) $c5;

        if $i20 <= 127 goto label09;

        $i21 = (int) $c5;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidAsciiChar(int)>($i21);

        goto label10;

     label09:
        $z1 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mXml11>;

        if $z1 == 0 goto label10;

        $i22 = (int) $c5;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidChar(int)>($i22);

     label10:
        $r5 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i11 = i8;

        i8 = i8 + 1;

        $b12 = (byte) $c5;

        $r5[$i11] = $b12;

        i6 = i6 + 1;

        goto label05;

     label11:
        goto label14;

     label12:
        i13 = i6 + i9;

     label13:
        if i6 >= i13 goto label14;

        $r3 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i2 = i8;

        i8 = i8 + 1;

        $c3 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i6);

        $b4 = (byte) $c3;

        $r3[$i2] = $b4;

        i6 = i6 + 1;

        goto label13;

     label14:
        i7 = i7 - i9;

        goto label02;

     label15:
        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i8;

        return;
    }

    protected void writeAttrValue(java.lang.String) throws java.io.IOException
    {
        byte[] $r2, $r3, $r4;
        byte $b7;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i4, $i6, $i8, $i9, $i11, i12, i13, i14, i15, i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i34, $i36, $i37, $i38;
        java.lang.String r0;
        com.ctc.wstx.sw.AsciiXmlWriter r1;
        char $c3, $c5, $c10;

        r1 := @this: com.ctc.wstx.sw.AsciiXmlWriter;

        r0 := @parameter0: java.lang.String;

        i12 = 0;

        i13 = virtualinvoke r0.<java.lang.String: int length()>();

        i14 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

     label01:
        if i13 <= 0 goto label12;

        $r2 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i0 = lengthof $r2;

        i15 = $i0 - i14;

        if i15 >= 1 goto label02;

        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i14;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void flushBuffer()>();

        i14 = 0;

        $r4 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        i15 = lengthof $r4;

     label02:
        $i1 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mSurrogate>;

        if $i1 == 0 goto label03;

        $i9 = i12;

        i12 = i12 + 1;

        $c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i9);

        $i18 = (int) $c10;

        $i11 = virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: int calcSurrogate(int)>($i18);

        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i14;

        i14 = virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: int writeAsEntity(int)>($i11);

        $i20 = (int) -1;

        i13 = i13 + $i20;

        goto label01;

     label03:
        if i15 <= i13 goto label04;

        i15 = i13;

     label04:
        $i8 = i12 + i15;

     label05:
        if i12 >= $i8 goto label11;

        $i2 = i12;

        i12 = i12 + 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i21 = (int) $c3;

        i16 = $i21;

        $i22 = (int) $c3;

        if $i22 >= 32 goto label07;

        $z0 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mCheckContent>;

        if $z0 == 0 goto label10;

        $i23 = (int) $c3;

        if $i23 == 10 goto label10;

        $i24 = (int) $c3;

        if $i24 == 13 goto label10;

        $i25 = (int) $c3;

        if $i25 == 9 goto label10;

        $z1 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mXml11>;

        if $z1 == 0 goto label06;

        if $c3 != 0 goto label10;

     label06:
        $i26 = (int) $c3;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidChar(int)>($i26);

        goto label10;

     label07:
        $i27 = (int) $c3;

        if $i27 >= 127 goto label08;

        $i28 = (int) $c3;

        if $i28 == 60 goto label10;

        $i29 = (int) $c3;

        if $i29 == 38 goto label10;

        $i30 = (int) $c3;

        if $i30 == 34 goto label10;

        $r3 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i6 = i14;

        i14 = i14 + 1;

        $b7 = (byte) $c3;

        $r3[$i6] = $b7;

        goto label05;

     label08:
        $i31 = (int) $c3;

        $i33 = (int) 55296;

        if $i31 < $i33 goto label10;

        $i34 = (int) $c3;

        $i36 = (int) 57343;

        if $i34 > $i36 goto label10;

        $i37 = (int) $c3;

        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mSurrogate> = $i37;

        if i12 != $i8 goto label09;

        goto label11;

     label09:
        $i4 = i12;

        i12 = i12 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $i38 = (int) $c5;

        i16 = virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: int calcSurrogate(int)>($i38);

     label10:
        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i14;

        i14 = virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: int writeAsEntity(int)>(i16);

        $i17 = virtualinvoke r0.<java.lang.String: int length()>();

        i13 = $i17 - i12;

        goto label01;

     label11:
        i13 = i13 - i15;

        goto label01;

     label12:
        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i14;

        return;
    }

    protected void writeAttrValue(char[], int, int) throws java.io.IOException
    {
        byte[] $r1, $r3, $r4;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i5, $i7, $i8, $i9, i10, i11, i12, i13, i15, $i16, $i17, $i19, $i21, $i23, $i24;
        com.ctc.wstx.sw.AsciiXmlWriter r0;
        boolean $z0, $z1;
        char $c4, c14;
        char[] r2;

        r0 := @this: com.ctc.wstx.sw.AsciiXmlWriter;

        r2 := @parameter0: char[];

        i10 := @parameter1: int;

        i11 := @parameter2: int;

        i12 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

     label01:
        if i11 <= 0 goto label12;

        $r1 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i0 = lengthof $r1;

        i13 = $i0 - i12;

        if i13 >= 1 goto label02;

        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i12;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void flushBuffer()>();

        i12 = 0;

        $r4 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        i13 = lengthof $r4;

     label02:
        $i1 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mSurrogate>;

        if $i1 == 0 goto label03;

        $i8 = i10;

        i10 = i10 + 1;

        c14 = r2[$i8];

        $i17 = (int) c14;

        $i9 = virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: int calcSurrogate(int)>($i17);

        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i12;

        i12 = virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: int writeAsEntity(int)>($i9);

        $i19 = (int) -1;

        i11 = i11 + $i19;

        goto label01;

     label03:
        if i13 <= i11 goto label04;

        i13 = i11;

     label04:
        $i7 = i10 + i13;

     label05:
        if i10 >= $i7 goto label11;

        $i2 = i10;

        i10 = i10 + 1;

        i15 = r2[$i2];

        if i15 >= 32 goto label07;

        $z0 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mCheckContent>;

        if $z0 == 0 goto label10;

        if i15 == 10 goto label10;

        if i15 == 13 goto label10;

        if i15 == 9 goto label10;

        $z1 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mXml11>;

        if $z1 == 0 goto label06;

        if i15 != 0 goto label10;

     label06:
        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidChar(int)>(i15);

        goto label10;

     label07:
        if i15 >= 127 goto label08;

        if i15 == 60 goto label10;

        if i15 == 38 goto label10;

        if i15 == 34 goto label10;

        $r3 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i5 = i12;

        i12 = i12 + 1;

        $b6 = (byte) i15;

        $r3[$i5] = $b6;

        goto label05;

     label08:
        $i21 = (int) 55296;

        if i15 < $i21 goto label10;

        $i23 = (int) 57343;

        if i15 > $i23 goto label10;

        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mSurrogate> = i15;

        if i10 != $i7 goto label09;

        goto label11;

     label09:
        $i3 = i10;

        i10 = i10 + 1;

        $c4 = r2[$i3];

        $i24 = (int) $c4;

        i15 = virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: int calcSurrogate(int)>($i24);

     label10:
        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i12;

        i12 = virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: int writeAsEntity(int)>(i15);

        $i16 = $i7 - i10;

        i13 = i13 - $i16;

        goto label11;

     label11:
        i11 = i11 - i13;

        goto label01;

     label12:
        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i12;

        return;
    }

    protected int writeCDataContent(java.lang.String) throws java.io.IOException
    {
        byte[] $r2, $r3, $r4;
        byte $b16;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i4, $i6, $i8, $i9, $i10, i11, i12, i13, i14, $i15, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32;
        java.lang.String r0;
        com.ctc.wstx.sw.AsciiXmlWriter r1;
        char $c3, $c5, $c7;

        r1 := @this: com.ctc.wstx.sw.AsciiXmlWriter;

        r0 := @parameter0: java.lang.String;

        i11 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i12 = $i0;

        $z0 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mCheckContent>;

        if $z0 != 0 goto label01;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void writeRaw(java.lang.String,int,int)>(r0, 0, $i0);

        $i18 = (int) -1;

        return $i18;

     label01:
        i13 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

     label02:
        if i12 <= 0 goto label14;

        $r2 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i1 = lengthof $r2;

        i14 = $i1 - i13;

        if i14 >= 1 goto label03;

        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i13;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void flushBuffer()>();

        i13 = 0;

        $r3 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        i14 = lengthof $r3;

     label03:
        if i14 <= i12 goto label04;

        i14 = i12;

     label04:
        $i10 = i11 + i14;

     label05:
        if i11 >= $i10 goto label13;

        $i2 = i11;

        i11 = i11 + 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i19 = (int) $c3;

        if $i19 >= 32 goto label08;

        $i20 = (int) $c3;

        if $i20 != 10 goto label06;

        goto label12;

     label06:
        $i21 = (int) $c3;

        if $i21 != 13 goto label07;

        goto label12;

     label07:
        $i22 = (int) $c3;

        if $i22 == 9 goto label12;

        $i23 = (int) $c3;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidChar(int)>($i23);

        goto label12;

     label08:
        $i24 = (int) $c3;

        if $i24 <= 126 goto label10;

        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i13;

        $i25 = (int) $c3;

        if $i25 <= 127 goto label09;

        $i26 = (int) $c3;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidAsciiChar(int)>($i26);

        goto label12;

     label09:
        $z2 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mXml11>;

        if $z2 == 0 goto label12;

        $i27 = (int) $c3;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidChar(int)>($i27);

        goto label12;

     label10:
        $i28 = (int) $c3;

        if $i28 != 62 goto label12;

        if i11 <= 2 goto label12;

        $i4 = i11 - 2;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $i29 = (int) $c5;

        if $i29 != 93 goto label12;

        $i6 = i11 - 3;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $i30 = (int) $c7;

        if $i30 != 93 goto label12;

        $z1 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mFixContent>;

        if $z1 != 0 goto label11;

        $i9 = i11 - 3;

        return $i9;

     label11:
        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i13;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void writeCDataEnd()>();

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void writeCDataStart()>();

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void writeAscii(byte)>(62);

        i13 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

        $i8 = virtualinvoke r0.<java.lang.String: int length()>();

        i12 = $i8 - i11;

        goto label02;

     label12:
        $r4 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i15 = i13;

        i13 = i13 + 1;

        $b16 = (byte) $c3;

        $r4[$i15] = $b16;

        goto label05;

     label13:
        i12 = i12 - i14;

        goto label02;

     label14:
        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i13;

        $i32 = (int) -1;

        return $i32;
    }

    protected int writeCDataContent(char[], int, int) throws java.io.IOException
    {
        byte[] $r1, $r3, $r4;
        byte $b17;
        boolean $z0, $z1, $z2;
        int i0, $i1, $i2, $i4, $i5, $i7, $i9, $i10, $i11, i12, i13, i14, i15, $i16, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33;
        com.ctc.wstx.sw.AsciiXmlWriter r0;
        char c3, $c6, $c8;
        char[] r2;

        r0 := @this: com.ctc.wstx.sw.AsciiXmlWriter;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i12 := @parameter2: int;

        $z0 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mCheckContent>;

        if $z0 != 0 goto label01;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void writeRaw(char[],int,int)>(r2, i0, i12);

        $i19 = (int) -1;

        return $i19;

     label01:
        i13 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

        i14 = i0;

     label02:
        if i12 <= 0 goto label14;

        $r1 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i1 = lengthof $r1;

        i15 = $i1 - i13;

        if i15 >= 1 goto label03;

        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i13;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void flushBuffer()>();

        i13 = 0;

        $r3 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        i15 = lengthof $r3;

     label03:
        if i15 <= i12 goto label04;

        i15 = i12;

     label04:
        $i11 = i14 + i15;

     label05:
        if i14 >= $i11 goto label13;

        $i2 = i14;

        i14 = i14 + 1;

        c3 = r2[$i2];

        $i20 = (int) c3;

        if $i20 >= 32 goto label08;

        $i21 = (int) c3;

        if $i21 != 10 goto label06;

        goto label12;

     label06:
        $i22 = (int) c3;

        if $i22 != 13 goto label07;

        goto label12;

     label07:
        $i23 = (int) c3;

        if $i23 == 9 goto label12;

        $i24 = (int) c3;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidChar(int)>($i24);

        goto label12;

     label08:
        $i25 = (int) c3;

        if $i25 <= 126 goto label10;

        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i13;

        $i26 = (int) c3;

        if $i26 <= 127 goto label09;

        $i27 = (int) c3;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidAsciiChar(int)>($i27);

        goto label12;

     label09:
        $z2 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mXml11>;

        if $z2 == 0 goto label12;

        $i28 = (int) c3;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidChar(int)>($i28);

        goto label12;

     label10:
        $i29 = (int) c3;

        if $i29 != 62 goto label12;

        $i4 = i0 + 3;

        if i14 < $i4 goto label12;

        $i5 = i14 - 2;

        $c6 = r2[$i5];

        $i30 = (int) $c6;

        if $i30 != 93 goto label12;

        $i7 = i14 - 3;

        $c8 = r2[$i7];

        $i31 = (int) $c8;

        if $i31 != 93 goto label12;

        $z1 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mFixContent>;

        if $z1 != 0 goto label11;

        $i10 = i14 - 3;

        return $i10;

     label11:
        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i13;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void writeCDataEnd()>();

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void writeCDataStart()>();

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void writeAscii(byte)>(62);

        i13 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

        $i9 = $i11 - i14;

        i15 = i15 - $i9;

        goto label13;

     label12:
        $r4 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i16 = i13;

        i13 = i13 + 1;

        $b17 = (byte) c3;

        $r4[$i16] = $b17;

        goto label05;

     label13:
        i12 = i12 - i15;

        goto label02;

     label14:
        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i13;

        $i33 = (int) -1;

        return $i33;
    }

    protected int writeCommentContent(java.lang.String) throws java.io.IOException
    {
        byte[] $r2, $r3, $r4, $r5, $r6, $r7;
        byte $b16;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i4, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, $i15, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i31;
        java.lang.String r0;
        com.ctc.wstx.sw.AsciiXmlWriter r1;
        char $c3, $c5;

        r1 := @this: com.ctc.wstx.sw.AsciiXmlWriter;

        r0 := @parameter0: java.lang.String;

        i10 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i11 = $i0;

        $z0 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mCheckContent>;

        if $z0 != 0 goto label01;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void writeRaw(java.lang.String,int,int)>(r0, 0, $i0);

        $i18 = (int) -1;

        return $i18;

     label01:
        i12 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

     label02:
        if i11 <= 0 goto label15;

        $r2 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i1 = lengthof $r2;

        i13 = $i1 - i12;

        if i13 >= 1 goto label03;

        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i12;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void flushBuffer()>();

        i12 = 0;

        $r6 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        i13 = lengthof $r6;

     label03:
        if i13 <= i11 goto label04;

        i13 = i11;

     label04:
        $i9 = i10 + i13;

     label05:
        if i10 >= $i9 goto label14;

        $i2 = i10;

        i10 = i10 + 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i19 = (int) $c3;

        if $i19 >= 32 goto label08;

        $i20 = (int) $c3;

        if $i20 != 10 goto label06;

        goto label13;

     label06:
        $i21 = (int) $c3;

        if $i21 != 13 goto label07;

        goto label13;

     label07:
        $i22 = (int) $c3;

        if $i22 == 9 goto label13;

        $i23 = (int) $c3;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidChar(int)>($i23);

        goto label13;

     label08:
        $i24 = (int) $c3;

        if $i24 <= 126 goto label10;

        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i12;

        $i25 = (int) $c3;

        if $i25 <= 127 goto label09;

        $i26 = (int) $c3;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidAsciiChar(int)>($i26);

        goto label13;

     label09:
        $z2 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mXml11>;

        if $z2 == 0 goto label13;

        $i27 = (int) $c3;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidChar(int)>($i27);

        goto label13;

     label10:
        $i28 = (int) $c3;

        if $i28 != 45 goto label13;

        if i10 <= 1 goto label13;

        $i4 = i10 - 2;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $i29 = (int) $c5;

        if $i29 != 45 goto label13;

        $z1 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mFixContent>;

        if $z1 != 0 goto label11;

        $i8 = i10 - 2;

        return $i8;

     label11:
        $r3 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        i14 = i12 + 1;

        $r3[i12] = 32;

        $r4 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i6 = lengthof $r4;

        if i14 < $i6 goto label12;

        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i14;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void flushBuffer()>();

        i14 = 0;

     label12:
        $r5 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        i12 = i14 + 1;

        $r5[i14] = 45;

        $i7 = $i9 - i10;

        i13 = i13 - $i7;

        goto label14;

     label13:
        $r7 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i15 = i12;

        i12 = i12 + 1;

        $b16 = (byte) $c3;

        $r7[$i15] = $b16;

        goto label05;

     label14:
        i11 = i11 - i13;

        goto label02;

     label15:
        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i12;

        $i31 = (int) -1;

        return $i31;
    }

    protected int writePIData(java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        byte[] $r2, $r3, $r4;
        byte $b12;
        boolean $z0, $z1;
        int $i0, $i1, $i3, $i5, $i6, i7, i8, i9, i10, $i11, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27;
        java.lang.String r0;
        com.ctc.wstx.sw.AsciiXmlWriter r1;
        char $c2, $c4;

        r1 := @this: com.ctc.wstx.sw.AsciiXmlWriter;

        r0 := @parameter0: java.lang.String;

        i7 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i8 = $i0;

        $z0 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mCheckContent>;

        if $z0 != 0 goto label01;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void writeRaw(java.lang.String,int,int)>(r0, 0, $i0);

        $i14 = (int) -1;

        return $i14;

     label01:
        i9 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

     label02:
        if i8 <= 0 goto label13;

        $r2 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i1 = lengthof $r2;

        i10 = $i1 - i9;

        if i10 >= 1 goto label03;

        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i9;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void flushBuffer()>();

        i9 = 0;

        $r3 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        i10 = lengthof $r3;

     label03:
        if i10 <= i8 goto label04;

        i10 = i8;

     label04:
        $i6 = i7 + i10;

     label05:
        if i7 >= $i6 goto label12;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $i15 = (int) $c2;

        if $i15 >= 32 goto label08;

        $i16 = (int) $c2;

        if $i16 != 10 goto label06;

        goto label11;

     label06:
        $i17 = (int) $c2;

        if $i17 != 13 goto label07;

        goto label11;

     label07:
        $i18 = (int) $c2;

        if $i18 == 9 goto label11;

        $i19 = (int) $c2;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidChar(int)>($i19);

        goto label11;

     label08:
        $i20 = (int) $c2;

        if $i20 <= 126 goto label10;

        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i9;

        $i21 = (int) $c2;

        if $i21 <= 127 goto label09;

        $i22 = (int) $c2;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidAsciiChar(int)>($i22);

        goto label11;

     label09:
        $z1 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mXml11>;

        if $z1 == 0 goto label11;

        $i23 = (int) $c2;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidChar(int)>($i23);

        goto label11;

     label10:
        $i24 = (int) $c2;

        if $i24 != 62 goto label11;

        if i7 <= 0 goto label11;

        $i3 = i7 - 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $i25 = (int) $c4;

        if $i25 != 63 goto label11;

        $i5 = i7 - 2;

        return $i5;

     label11:
        $r4 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i11 = i9;

        i9 = i9 + 1;

        $b12 = (byte) $c2;

        $r4[$i11] = $b12;

        i7 = i7 + 1;

        goto label05;

     label12:
        i8 = i8 - i10;

        goto label02;

     label13:
        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = i9;

        $i27 = (int) -1;

        return $i27;
    }

    protected void writeTextContent(java.lang.String) throws java.io.IOException
    {
        byte[] $r2, $r3, $r4, $r5, $r6;
        byte $b9, $b14, $b17;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i5, $i7, $i8, $i10, $i12, $i13, $i15, $i16, $i18, $i19, $i21, i22, i23, i24, i25, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i43, $i44, $i46, $i47, $i48;
        java.lang.String r0;
        com.ctc.wstx.sw.AsciiXmlWriter r1;
        char $c4, $c6, $c11, $c20;

        r1 := @this: com.ctc.wstx.sw.AsciiXmlWriter;

        r0 := @parameter0: java.lang.String;

        i22 = 0;

        i23 = virtualinvoke r0.<java.lang.String: int length()>();

     label01:
        if i23 <= 0 goto label16;

        $r2 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i1 = lengthof $r2;

        $i0 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

        i24 = $i1 - $i0;

        if i24 >= 1 goto label02;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void flushBuffer()>();

        $r6 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        i24 = lengthof $r6;

     label02:
        $i2 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mSurrogate>;

        if $i2 == 0 goto label03;

        $i19 = i22;

        i22 = i22 + 1;

        $c20 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i19);

        $i27 = (int) $c20;

        $i21 = virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: int calcSurrogate(int)>($i27);

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: int writeAsEntity(int)>($i21);

        $i29 = (int) -1;

        i23 = i23 + $i29;

        goto label01;

     label03:
        if i24 <= i23 goto label04;

        i24 = i23;

     label04:
        $i18 = i22 + i24;

     label05:
        if i22 >= $i18 goto label15;

        $i3 = i22;

        i22 = i22 + 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $i30 = (int) $c4;

        i25 = $i30;

        $i31 = (int) $c4;

        if $i31 >= 32 goto label10;

        $i32 = (int) $c4;

        if $i32 == 10 goto label06;

        $i33 = (int) $c4;

        if $i33 != 9 goto label07;

     label06:
        $r4 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i12 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

        $i13 = $i12 + 1;

        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = $i13;

        $b14 = (byte) $c4;

        $r4[$i12] = $b14;

        goto label05;

     label07:
        $i34 = (int) $c4;

        if $i34 != 13 goto label08;

        $z2 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mEscapeCR>;

        if $z2 != 0 goto label14;

        $r5 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i15 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

        $i16 = $i15 + 1;

        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = $i16;

        $b17 = (byte) $c4;

        $r5[$i15] = $b17;

        goto label05;

     label08:
        $z0 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mXml11>;

        if $z0 == 0 goto label09;

        if $c4 != 0 goto label14;

     label09:
        $z1 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mCheckContent>;

        if $z1 == 0 goto label14;

        $i35 = (int) $c4;

        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidChar(int)>($i35);

        goto label14;

     label10:
        $i36 = (int) $c4;

        if $i36 >= 127 goto label12;

        $i37 = (int) $c4;

        if $i37 == 60 goto label14;

        $i38 = (int) $c4;

        if $i38 == 38 goto label14;

        $i39 = (int) $c4;

        if $i39 != 62 goto label11;

        if i22 <= 1 goto label14;

        $i10 = i22 - 2;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i10);

        $i40 = (int) $c11;

        if $i40 == 93 goto label14;

     label11:
        $r3 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i7 = r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

        $i8 = $i7 + 1;

        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = $i8;

        $b9 = (byte) $c4;

        $r3[$i7] = $b9;

        goto label05;

     label12:
        $i41 = (int) $c4;

        $i43 = (int) 55296;

        if $i41 < $i43 goto label14;

        $i44 = (int) $c4;

        $i46 = (int) 57343;

        if $i44 > $i46 goto label14;

        $i47 = (int) $c4;

        r1.<com.ctc.wstx.sw.AsciiXmlWriter: int mSurrogate> = $i47;

        if i22 != $i18 goto label13;

        goto label15;

     label13:
        $i5 = i22;

        i22 = i22 + 1;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        $i48 = (int) $c6;

        i25 = virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: int calcSurrogate(int)>($i48);

     label14:
        virtualinvoke r1.<com.ctc.wstx.sw.AsciiXmlWriter: int writeAsEntity(int)>(i25);

        $i26 = virtualinvoke r0.<java.lang.String: int length()>();

        i23 = $i26 - i22;

        goto label01;

     label15:
        i23 = i23 - i24;

        goto label01;

     label16:
        return;
    }

    protected void writeTextContent(char[], int, int) throws java.io.IOException
    {
        byte[] $r1, $r3, $r4, $r5, $r6;
        byte $b8, $b13, $b16;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i9, $i11, $i12, $i14, $i15, $i17, $i18, $i19, i20, i21, i22, i24, $i25, $i26, $i28, $i29, $i31, $i33, $i34;
        com.ctc.wstx.sw.AsciiXmlWriter r0;
        char $c5, $c10, c23;
        char[] r2;

        r0 := @this: com.ctc.wstx.sw.AsciiXmlWriter;

        r2 := @parameter0: char[];

        i20 := @parameter1: int;

        i21 := @parameter2: int;

     label01:
        if i21 <= 0 goto label16;

        $r1 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i1 = lengthof $r1;

        $i0 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

        i22 = $i1 - $i0;

        if i22 >= 1 goto label02;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void flushBuffer()>();

        $r6 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        i22 = lengthof $r6;

     label02:
        $i2 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mSurrogate>;

        if $i2 == 0 goto label03;

        $i18 = i20;

        i20 = i20 + 1;

        c23 = r2[$i18];

        $i26 = (int) c23;

        $i19 = virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: int calcSurrogate(int)>($i26);

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: int writeAsEntity(int)>($i19);

        $i28 = (int) -1;

        i21 = i21 + $i28;

        goto label01;

     label03:
        if i22 <= i21 goto label04;

        i22 = i21;

     label04:
        $i17 = i20 + i22;

     label05:
        if i20 >= $i17 goto label15;

        $i3 = i20;

        i20 = i20 + 1;

        i24 = r2[$i3];

        if i24 >= 32 goto label10;

        if i24 == 10 goto label06;

        if i24 != 9 goto label07;

     label06:
        $r4 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i11 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

        $i12 = $i11 + 1;

        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = $i12;

        $b13 = (byte) i24;

        $r4[$i11] = $b13;

        goto label05;

     label07:
        if i24 != 13 goto label08;

        $z2 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mEscapeCR>;

        if $z2 != 0 goto label14;

        $r5 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i14 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

        $i15 = $i14 + 1;

        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = $i15;

        $b16 = (byte) i24;

        $r5[$i14] = $b16;

        goto label05;

     label08:
        $z0 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mXml11>;

        if $z0 == 0 goto label09;

        if i24 != 0 goto label14;

     label09:
        $z1 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: boolean mCheckContent>;

        if $z1 == 0 goto label14;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void throwInvalidChar(int)>(i24);

        goto label14;

     label10:
        if i24 >= 127 goto label12;

        if i24 == 60 goto label14;

        if i24 == 38 goto label14;

        if i24 != 62 goto label11;

        if i20 <= 1 goto label14;

        $i9 = i20 - 2;

        $c10 = r2[$i9];

        $i29 = (int) $c10;

        if $i29 == 93 goto label14;

     label11:
        $r3 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: byte[] mOutputBuffer>;

        $i6 = r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr>;

        $i7 = $i6 + 1;

        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mOutputPtr> = $i7;

        $b8 = (byte) i24;

        $r3[$i6] = $b8;

        goto label05;

     label12:
        $i31 = (int) 55296;

        if i24 < $i31 goto label14;

        $i33 = (int) 57343;

        if i24 > $i33 goto label14;

        r0.<com.ctc.wstx.sw.AsciiXmlWriter: int mSurrogate> = i24;

        if i20 != $i17 goto label13;

        goto label15;

     label13:
        $i4 = i20;

        i20 = i20 + 1;

        $c5 = r2[$i4];

        $i34 = (int) $c5;

        i24 = virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: int calcSurrogate(int)>($i34);

     label14:
        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: int writeAsEntity(int)>(i24);

        $i25 = $i17 - i20;

        i22 = i22 - $i25;

        goto label15;

     label15:
        i21 = i21 - i22;

        goto label01;

     label16:
        return;
    }

    protected void throwInvalidAsciiChar(int) throws java.io.IOException
    {
        java.io.IOException $r1;
        java.lang.StringBuffer $r2, $r3, $r5, $r6;
        int i0;
        java.lang.String $r4, $r7;
        com.ctc.wstx.sw.AsciiXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.AsciiXmlWriter;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.ctc.wstx.sw.AsciiXmlWriter: void flush()>();

        $r1 = new java.io.IOException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid XML character (0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("); can only be output using character entity when using US-ASCII encoding");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }
}
