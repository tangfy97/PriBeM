final class com.mycila.inject.internal.asm.xml.Processor$SAXWriter extends org.xml.sax.helpers.DefaultHandler implements org.xml.sax.ext.LexicalHandler
{
    private static final char[] OFF;
    private java.io.Writer w;
    private final boolean optimizeEmptyElements;
    private boolean openElement;
    private int ident;

    void <init>(java.io.Writer, boolean)
    {
        java.io.Writer r1;
        com.mycila.inject.internal.asm.xml.Processor$SAXWriter r0;
        boolean z0;

        r0 := @this: com.mycila.inject.internal.asm.xml.Processor$SAXWriter;

        r1 := @parameter0: java.io.Writer;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: boolean openElement> = 0;

        r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: int ident> = 0;

        r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: java.io.Writer w> = r1;

        r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: boolean optimizeEmptyElements> = z0;

        return;
    }

    public final void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.mycila.inject.internal.asm.xml.Processor$SAXWriter r0;
        java.lang.StringBuffer $r1, $r3, $r5;
        org.xml.sax.Attributes r7;
        int $i0, $i1, $i2;
        java.lang.String r4, $r6, r11, r12;
        boolean $z0;
        java.io.IOException $r9;
        org.xml.sax.SAXException $r10;
        java.io.Writer $r2, $r8;

        r0 := @this: com.mycila.inject.internal.asm.xml.Processor$SAXWriter;

        r11 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r7 := @parameter3: org.xml.sax.Attributes;

     label1:
        specialinvoke r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: void closeElement()>();

        specialinvoke r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: void writeIdent()>();

        $r2 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: java.io.Writer w>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(60);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r6);

        if r7 == null goto label2;

        $i2 = interfaceinvoke r7.<org.xml.sax.Attributes: int getLength()>();

        if $i2 <= 0 goto label2;

        specialinvoke r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: void writeAttributes(org.xml.sax.Attributes)>(r7);

     label2:
        $z0 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: boolean optimizeEmptyElements>;

        if $z0 == 0 goto label3;

        r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: boolean openElement> = 1;

        goto label4;

     label3:
        $r8 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: java.io.Writer w>;

        virtualinvoke $r8.<java.io.Writer: void write(java.lang.String)>(">\n");

     label4:
        $i0 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: int ident>;

        $i1 = $i0 + 2;

        r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: int ident> = $i1;

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

        $r10 = new org.xml.sax.SAXException;

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r9);

        throw $r10;

     label7:
        return;

        catch java.io.IOException from label1 to label5 with label6;
    }

    public final void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        com.mycila.inject.internal.asm.xml.Processor$SAXWriter r0;
        java.lang.StringBuffer $r1, $r3, $r5, $r6;
        int $i0, $i1;
        java.lang.String r4, $r7, r11, r12;
        boolean $z0;
        java.io.IOException $r9;
        org.xml.sax.SAXException $r10;
        java.io.Writer $r2, $r8;

        r0 := @this: com.mycila.inject.internal.asm.xml.Processor$SAXWriter;

        r11 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $i0 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: int ident>;

        $i1 = $i0 - 2;

        r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: int ident> = $i1;

     label1:
        $z0 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: boolean openElement>;

        if $z0 == 0 goto label2;

        $r8 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: java.io.Writer w>;

        virtualinvoke $r8.<java.io.Writer: void write(java.lang.String)>("/>\n");

        r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: boolean openElement> = 0;

        goto label3;

     label2:
        specialinvoke r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: void writeIdent()>();

        $r2 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: java.io.Writer w>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">\n");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r7);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        $r10 = new org.xml.sax.SAXException;

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r9);

        throw $r10;

     label5:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public final void endDocument() throws org.xml.sax.SAXException
    {
        com.mycila.inject.internal.asm.xml.Processor$SAXWriter r0;
        org.xml.sax.SAXException $r3;
        java.io.Writer $r1;
        java.io.IOException $r2;

        r0 := @this: com.mycila.inject.internal.asm.xml.Processor$SAXWriter;

     label1:
        $r1 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: java.io.Writer w>;

        virtualinvoke $r1.<java.io.Writer: void flush()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.xml.sax.SAXException;

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r2);

        throw $r3;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public final void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        java.io.IOException $r5;
        com.mycila.inject.internal.asm.xml.Processor$SAXWriter r0;
        org.xml.sax.SAXException $r6;
        java.io.Writer $r1, $r3, $r4;
        int i0, i1;
        char[] r2;

        r0 := @this: com.mycila.inject.internal.asm.xml.Processor$SAXWriter;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        specialinvoke r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: void closeElement()>();

        specialinvoke r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: void writeIdent()>();

        $r1 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: java.io.Writer w>;

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>("<!-- ");

        $r3 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: java.io.Writer w>;

        virtualinvoke $r3.<java.io.Writer: void write(char[],int,int)>(r2, i0, i1);

        $r4 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: java.io.Writer w>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>(" -->\n");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r5);

        throw $r6;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public final void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        com.mycila.inject.internal.asm.xml.Processor$SAXWriter r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.asm.xml.Processor$SAXWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public final void endDTD() throws org.xml.sax.SAXException
    {
        com.mycila.inject.internal.asm.xml.Processor$SAXWriter r0;

        r0 := @this: com.mycila.inject.internal.asm.xml.Processor$SAXWriter;

        return;
    }

    public final void startEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        com.mycila.inject.internal.asm.xml.Processor$SAXWriter r0;
        java.lang.String r1;

        r0 := @this: com.mycila.inject.internal.asm.xml.Processor$SAXWriter;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public final void endEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        com.mycila.inject.internal.asm.xml.Processor$SAXWriter r0;
        java.lang.String r1;

        r0 := @this: com.mycila.inject.internal.asm.xml.Processor$SAXWriter;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public final void startCDATA() throws org.xml.sax.SAXException
    {
        com.mycila.inject.internal.asm.xml.Processor$SAXWriter r0;

        r0 := @this: com.mycila.inject.internal.asm.xml.Processor$SAXWriter;

        return;
    }

    public final void endCDATA() throws org.xml.sax.SAXException
    {
        com.mycila.inject.internal.asm.xml.Processor$SAXWriter r0;

        r0 := @this: com.mycila.inject.internal.asm.xml.Processor$SAXWriter;

        return;
    }

    private final void writeAttributes(org.xml.sax.Attributes) throws java.io.IOException
    {
        com.mycila.inject.internal.asm.xml.Processor$SAXWriter r2;
        java.lang.StringBuffer $r0, $r5, $r7, $r8, $r11;
        org.xml.sax.Attributes r1;
        int $i0, i1;
        java.io.Writer $r3;
        java.lang.String $r4, $r6, $r9, $r10;

        r2 := @this: com.mycila.inject.internal.asm.xml.Processor$SAXWriter;

        r1 := @parameter0: org.xml.sax.Attributes;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i0 = interfaceinvoke r1.<org.xml.sax.Attributes: int getLength()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r6 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $r9 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i1);

        $r10 = staticinvoke <com.mycila.inject.internal.asm.xml.Processor$SAXWriter: java.lang.String esc(java.lang.String)>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r2.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: java.io.Writer w>;

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>($r4);

        return;
    }

    private static final java.lang.String esc(java.lang.String)
    {
        char $c2;
        java.lang.StringBuffer $r3, $r5, $r6;
        int $i0, $i1, i3, $i4, $i5, $i6;
        java.lang.String r1, $r2, $r4;

        r1 := @parameter0: java.lang.String;

        $r6 = new java.lang.StringBuffer;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(int)>($i0);

        i3 = 0;

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i3 >= $i1 goto label9;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c2;

        lookupswitch($i4)
        {
            case 34: goto label5;
            case 38: goto label2;
            case 60: goto label3;
            case 62: goto label4;
            default: goto label6;
        };

     label2:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&amp;");

        goto label8;

     label3:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&lt;");

        goto label8;

     label4:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&gt;");

        goto label8;

     label5:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&quot;");

        goto label8;

     label6:
        $i5 = (int) $c2;

        if $i5 <= 127 goto label7;

        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&#");

        $i6 = (int) $c2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        goto label8;

     label7:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label8:
        i3 = i3 + 1;

        goto label1;

     label9:
        $r2 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private final void writeIdent() throws java.io.IOException
    {
        com.mycila.inject.internal.asm.xml.Processor$SAXWriter r0;
        int $i0, $i1, i2;
        java.io.Writer $r3, $r5;
        char[] $r1, $r2, $r4, $r6;

        r0 := @this: com.mycila.inject.internal.asm.xml.Processor$SAXWriter;

        i2 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: int ident>;

     label1:
        if i2 <= 0 goto label3;

        $r1 = <com.mycila.inject.internal.asm.xml.Processor$SAXWriter: char[] OFF>;

        $i0 = lengthof $r1;

        if i2 <= $i0 goto label2;

        $r5 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: java.io.Writer w>;

        $r4 = <com.mycila.inject.internal.asm.xml.Processor$SAXWriter: char[] OFF>;

        virtualinvoke $r5.<java.io.Writer: void write(char[])>($r4);

        $r6 = <com.mycila.inject.internal.asm.xml.Processor$SAXWriter: char[] OFF>;

        $i1 = lengthof $r6;

        i2 = i2 - $i1;

        goto label1;

     label2:
        $r3 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: java.io.Writer w>;

        $r2 = <com.mycila.inject.internal.asm.xml.Processor$SAXWriter: char[] OFF>;

        virtualinvoke $r3.<java.io.Writer: void write(char[],int,int)>($r2, 0, i2);

        i2 = 0;

        goto label1;

     label3:
        return;
    }

    private final void closeElement() throws java.io.IOException
    {
        java.io.Writer $r1;
        com.mycila.inject.internal.asm.xml.Processor$SAXWriter r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.asm.xml.Processor$SAXWriter;

        $z0 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: boolean openElement>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: java.io.Writer w>;

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>(">\n");

     label1:
        r0.<com.mycila.inject.internal.asm.xml.Processor$SAXWriter: boolean openElement> = 0;

        return;
    }

    static void <clinit>()
    {
        char[] $r1;
        java.lang.String $r0;

        $r0 = "                                                                                                        ";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <com.mycila.inject.internal.asm.xml.Processor$SAXWriter: char[] OFF> = $r1;

        return;
    }
}
