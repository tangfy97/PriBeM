abstract class org.apache.batik.ext.awt.MultipleGradientPaintContext extends java.lang.Object implements java.awt.PaintContext
{
    protected static final boolean DEBUG;
    protected java.awt.image.ColorModel dataModel;
    protected java.awt.image.ColorModel model;
    private static java.awt.image.ColorModel lrgbmodel_NA;
    private static java.awt.image.ColorModel srgbmodel_NA;
    private static java.awt.image.ColorModel lrgbmodel_A;
    private static java.awt.image.ColorModel srgbmodel_A;
    protected static java.awt.image.ColorModel cachedModel;
    protected static java.lang.ref.WeakReference cached;
    protected java.awt.image.WritableRaster saved;
    protected org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum cycleMethod;
    protected org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum colorSpace;
    protected float a00;
    protected float a01;
    protected float a10;
    protected float a11;
    protected float a02;
    protected float a12;
    protected boolean isSimpleLookup;
    protected boolean hasDiscontinuity;
    protected int fastGradientArraySize;
    protected int[] gradient;
    protected int[][] gradients;
    protected int gradientAverage;
    protected int gradientUnderflow;
    protected int gradientOverflow;
    protected int gradientsLength;
    protected float[] normalizedIntervals;
    protected float[] fractions;
    private int transparencyTest;
    private static final int[] SRGBtoLinearRGB;
    private static final int[] LinearRGBtoSRGB;
    protected static final int GRADIENT_SIZE;
    protected static final int GRADIENT_SIZE_INDEX;
    private static final int MAX_GRADIENT_ARRAY_SIZE;

    protected void <init>(java.awt.image.ColorModel, java.awt.Rectangle, java.awt.geom.Rectangle2D, java.awt.geom.AffineTransform, java.awt.RenderingHints, float[], java.awt.Color[], org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum, org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum) throws java.awt.geom.NoninvertibleTransformException
    {
        java.awt.Color $r7, $r8, $r10, $r11, $r13, $r14, $r32, $r37, $r38;
        org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum r18;
        java.awt.geom.Rectangle2D r41;
        byte $b0, $b3, $b5, $b14;
        java.awt.geom.AffineTransform r16, $r17;
        org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum r19;
        double[] $r35;
        float[] r1, $r2, $r5, $r9, $r12, $r15, $r33, $r34, $r36, $r39;
        org.apache.batik.ext.awt.MultipleGradientPaintContext r0;
        java.awt.Color[] r3, r4, r6;
        java.awt.RenderingHints r42;
        boolean $z0, $z1, z2, z3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        java.awt.Rectangle r40;
        java.awt.color.ColorSpace $r21, $r23, $r24, $r26;
        int $i1, $i2, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, $i26, $i27, i28, i29, $i30, $i31, i32, $i34;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.IllegalArgumentException $r43;
        java.awt.image.ColorModel r20, $r22, $r25, $r28, $r29, $r30, $r31;

        r0 := @this: org.apache.batik.ext.awt.MultipleGradientPaintContext;

        r20 := @parameter0: java.awt.image.ColorModel;

        r40 := @parameter1: java.awt.Rectangle;

        r41 := @parameter2: java.awt.geom.Rectangle2D;

        r16 := @parameter3: java.awt.geom.AffineTransform;

        r42 := @parameter4: java.awt.RenderingHints;

        r1 := @parameter5: float[];

        r6 := @parameter6: java.awt.Color[];

        r18 := @parameter7: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum;

        r19 := @parameter8: org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: boolean isSimpleLookup> = 1;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: boolean hasDiscontinuity> = 0;

        z2 = 0;

        z3 = 0;

        i24 = lengthof r1;

        $f0 = r1[0];

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label01;

        z2 = 1;

        i24 = i24 + 1;

     label01:
        $i1 = lengthof r1;

        $i2 = $i1 - 1;

        $f1 = r1[$i2];

        $b3 = $f1 cmpl 1.0F;

        if $b3 == 0 goto label02;

        z3 = 1;

        i24 = i24 + 1;

     label02:
        i25 = 0;

        goto label05;

     label03:
        $f3 = r1[i25];

        $i4 = i25 + 1;

        $f2 = r1[$i4];

        $b5 = $f3 cmpl $f2;

        if $b5 != 0 goto label04;

        $i34 = (int) -1;

        i24 = i24 + $i34;

     label04:
        i25 = i25 + 1;

     label05:
        $i26 = lengthof r1;

        $i27 = $i26 - 1;

        if i25 < $i27 goto label03;

        $r2 = newarray (float)[i24];

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions> = $r2;

        $i6 = i24 - 1;

        r3 = newarray (java.awt.Color)[$i6];

        $i7 = i24 - 1;

        r4 = newarray (java.awt.Color)[$i7];

        $i8 = i24 - 1;

        $r5 = newarray (float)[$i8];

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals> = $r5;

        $r7 = r6[0];

        $i9 = virtualinvoke $r7.<java.awt.Color: int getRGB()>();

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientUnderflow> = $i9;

        $i10 = lengthof r6;

        $i11 = $i10 - 1;

        $r8 = r6[$i11];

        $i12 = virtualinvoke $r8.<java.awt.Color: int getRGB()>();

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientOverflow> = $i12;

        i28 = 0;

        if z2 == 0 goto label06;

        $r36 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $r36[0] = 0.0F;

        $r37 = r6[0];

        r3[0] = $r37;

        $r38 = r6[0];

        r4[0] = $r38;

        $r39 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f19 = r1[0];

        $r39[0] = $f19;

        i28 = 1;

     label06:
        i29 = 0;

        goto label10;

     label07:
        $f5 = r1[i29];

        $i13 = i29 + 1;

        $f4 = r1[$i13];

        $b14 = $f5 cmpl $f4;

        if $b14 != 0 goto label08;

        $r14 = r6[i29];

        $i17 = i29 + 1;

        $r13 = r6[$i17];

        $z0 = virtualinvoke $r14.<java.awt.Color: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label09;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: boolean hasDiscontinuity> = 1;

        goto label09;

     label08:
        $r9 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $f6 = r1[i29];

        $r9[i28] = $f6;

        $r10 = r6[i29];

        r3[i28] = $r10;

        $i15 = i29 + 1;

        $r11 = r6[$i15];

        r4[i28] = $r11;

        $r12 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $i16 = i29 + 1;

        $f8 = r1[$i16];

        $f7 = r1[i29];

        $f9 = $f8 - $f7;

        $r12[i28] = $f9;

        i28 = i28 + 1;

     label09:
        i29 = i29 + 1;

     label10:
        $i30 = lengthof r1;

        $i31 = $i30 - 1;

        if i29 < $i31 goto label07;

        $r15 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $i18 = lengthof r1;

        $i19 = $i18 - 1;

        $f10 = r1[$i19];

        $r15[i28] = $f10;

        if z3 == 0 goto label11;

        $i20 = lengthof r6;

        $i21 = $i20 - 1;

        $r32 = r6[$i21];

        r4[i28] = $r32;

        r3[i28] = $r32;

        $r33 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $i22 = lengthof r1;

        $i23 = $i22 - 1;

        $f17 = r1[$i23];

        $f18 = 1.0F - $f17;

        $r33[i28] = $f18;

        i32 = i28 + 1;

        $r34 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $r34[i32] = 1.0F;

     label11:
        $r17 = virtualinvoke r16.<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>();

        $r35 = newarray (double)[6];

        virtualinvoke $r17.<java.awt.geom.AffineTransform: void getMatrix(double[])>($r35);

        $d0 = $r35[0];

        $f11 = (float) $d0;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float a00> = $f11;

        $d1 = $r35[1];

        $f12 = (float) $d1;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float a10> = $f12;

        $d2 = $r35[2];

        $f13 = (float) $d2;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float a01> = $f13;

        $d3 = $r35[3];

        $f14 = (float) $d3;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float a11> = $f14;

        $d4 = $r35[4];

        $f15 = (float) $d4;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float a02> = $f15;

        $d5 = $r35[5];

        $f16 = (float) $d5;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float a12> = $f16;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum cycleMethod> = r18;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum colorSpace> = r19;

        $r21 = virtualinvoke r20.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();

        $r22 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel lrgbmodel_A>;

        $r23 = virtualinvoke $r22.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();

        if $r21 != $r23 goto label12;

        $r31 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel lrgbmodel_A>;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel dataModel> = $r31;

        goto label14;

     label12:
        $r24 = virtualinvoke r20.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();

        $r25 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel srgbmodel_A>;

        $r26 = virtualinvoke $r25.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();

        if $r24 != $r26 goto label13;

        $r28 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel srgbmodel_A>;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel dataModel> = $r28;

        goto label14;

     label13:
        $r43 = new java.lang.IllegalArgumentException;

        specialinvoke $r43.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported ColorSpace for interpolation");

        throw $r43;

     label14:
        virtualinvoke r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: void calculateGradientFractions(java.awt.Color[],java.awt.Color[])>(r3, r4);

        $r29 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel dataModel>;

        $z1 = virtualinvoke r20.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        $r30 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.image.ColorModel coerceColorModel(java.awt.image.ColorModel,boolean)>($r29, $z1);

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel model> = $r30;

        return;
    }

    protected final void calculateGradientFractions(java.awt.Color[], java.awt.Color[])
    {
        java.awt.Color $r33, $r34, $r35, $r36;
        org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum $r3, $r4, $r11, $r12, $r25, $r26;
        byte $b3, $b4;
        org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum $r1, $r2;
        float[] $r5, $r8, $r32;
        org.apache.batik.ext.awt.MultipleGradientPaintContext r0;
        java.awt.Color[] r9, r10;
        int[][] $r6, $r7, $r27, $r29, $r30;
        int[] $r23, $r24, $r28, $r31, r37;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, $f7;
        java.awt.color.ColorSpace $r14, $r16, $r18, $r20;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, $i25, $i26, $i27;
        java.awt.image.ColorModel $r13, $r15, $r17, $r19, $r21, $r22, $r38;

        r0 := @this: org.apache.batik.ext.awt.MultipleGradientPaintContext;

        r9 := @parameter0: java.awt.Color[];

        r10 := @parameter1: java.awt.Color[];

        $r2 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum colorSpace>;

        $r1 = <org.apache.batik.ext.awt.MultipleGradientPaint: org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum LINEAR_RGB>;

        if $r2 != $r1 goto label03;

        r37 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] SRGBtoLinearRGB>;

        i21 = 0;

        goto label02;

     label01:
        $r33 = r9[i21];

        $r34 = staticinvoke <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.Color interpolateColor(int[],java.awt.Color)>(r37, $r33);

        r9[i21] = $r34;

        $r35 = r10[i21];

        $r36 = staticinvoke <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.Color interpolateColor(int[],java.awt.Color)>(r37, $r35);

        r10[i21] = $r36;

        i21 = i21 + 1;

     label02:
        $i20 = lengthof r9;

        if i21 < $i20 goto label01;

     label03:
        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int transparencyTest> = -16777216;

        $r4 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum cycleMethod>;

        $r3 = <org.apache.batik.ext.awt.MultipleGradientPaint: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum NO_CYCLE>;

        if $r4 != $r3 goto label04;

        $i14 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int transparencyTest>;

        $i13 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientUnderflow>;

        $i15 = $i14 & $i13;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int transparencyTest> = $i15;

        $i17 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int transparencyTest>;

        $i16 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientOverflow>;

        $i18 = $i17 & $i16;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int transparencyTest> = $i18;

     label04:
        $r5 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $i0 = lengthof $r5;

        $i1 = $i0 - 1;

        $r6 = newarray (int[])[$i1];

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients> = $r6;

        $r7 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $i2 = lengthof $r7;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientsLength> = $i2;

        $r8 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $i19 = lengthof $r8;

        f6 = 1.0F;

        $r32 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        i22 = 0;

        goto label08;

     label05:
        $f0 = $r32[i22];

        $b3 = f6 cmpl $f0;

        $i27 = (int) $b3;

        if $i27 <= 0 goto label06;

        $f7 = $r32[i22];

        goto label07;

     label06:
        $f7 = f6;

     label07:
        f6 = $f7;

        i22 = i22 + 1;

     label08:
        if i22 < $i19 goto label05;

        i23 = 0;

        $b4 = f6 cmpl 0.0F;

        if $b4 != 0 goto label09;

        i23 = 2147483647;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: boolean hasDiscontinuity> = 1;

        goto label12;

     label09:
        i24 = 0;

        goto label11;

     label10:
        $f4 = (float) i23;

        $f1 = $r32[i24];

        $f2 = $f1 / f6;

        $f3 = $f2 * 256.0F;

        $f5 = $f4 + $f3;

        i23 = (int) $f5;

        i24 = i24 + 1;

     label11:
        $i5 = lengthof $r32;

        if i24 < $i5 goto label10;

     label12:
        if i23 <= 5000 goto label13;

        specialinvoke r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: void calculateMultipleArrayGradient(java.awt.Color[],java.awt.Color[])>(r9, r10);

        $r26 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum cycleMethod>;

        $r25 = <org.apache.batik.ext.awt.MultipleGradientPaint: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum REPEAT>;

        if $r26 != $r25 goto label14;

        $r27 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r28 = $r27[0];

        $i12 = $r28[0];

        $r30 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r29 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $i9 = lengthof $r29;

        $i10 = $i9 - 1;

        $r31 = $r30[$i10];

        $i11 = $r31[255];

        if $i12 == $i11 goto label14;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: boolean hasDiscontinuity> = 1;

        goto label14;

     label13:
        specialinvoke r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: void calculateSingleArrayGradient(java.awt.Color[],java.awt.Color[],float)>(r9, r10, f6);

        $r12 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum cycleMethod>;

        $r11 = <org.apache.batik.ext.awt.MultipleGradientPaint: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum REPEAT>;

        if $r12 != $r11 goto label14;

        $r23 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $i8 = $r23[0];

        $r24 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $i6 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $i7 = $r24[$i6];

        if $i8 == $i7 goto label14;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: boolean hasDiscontinuity> = 1;

     label14:
        $i25 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int transparencyTest>;

        $i26 = $i25 >>> 24;

        if $i26 != 255 goto label17;

        $r13 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel dataModel>;

        $r14 = virtualinvoke $r13.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();

        $r15 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel lrgbmodel_NA>;

        $r16 = virtualinvoke $r15.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();

        if $r14 != $r16 goto label15;

        $r22 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel lrgbmodel_NA>;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel dataModel> = $r22;

        goto label16;

     label15:
        $r17 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel dataModel>;

        $r18 = virtualinvoke $r17.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();

        $r19 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel srgbmodel_NA>;

        $r20 = virtualinvoke $r19.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();

        if $r18 != $r20 goto label16;

        $r21 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel srgbmodel_NA>;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel dataModel> = $r21;

     label16:
        $r38 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel dataModel>;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel model> = $r38;

     label17:
        return;
    }

    private static java.awt.Color interpolateColor(int[], java.awt.Color)
    {
        java.awt.Color r0, $r2;
        int[] r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21;

        r1 := @parameter0: int[];

        r0 := @parameter1: java.awt.Color;

        $i0 = virtualinvoke r0.<java.awt.Color: int getRGB()>();

        $i1 = $i0 >> 24;

        $i2 = $i1 & 255;

        $i3 = r1[$i2];

        $i4 = $i3 & 255;

        $i10 = $i4 << 24;

        $i5 = $i0 >> 16;

        $i6 = $i5 & 255;

        $i7 = r1[$i6];

        $i8 = $i7 & 255;

        $i9 = $i8 << 16;

        $i16 = $i10 | $i9;

        $i11 = $i0 >> 8;

        $i12 = $i11 & 255;

        $i13 = r1[$i12];

        $i14 = $i13 & 255;

        $i15 = $i14 << 8;

        $i20 = $i16 | $i15;

        $i17 = $i0 & 255;

        $i18 = r1[$i17];

        $i19 = $i18 & 255;

        i21 = $i20 | $i19;

        $r2 = new java.awt.Color;

        specialinvoke $r2.<java.awt.Color: void <init>(int,boolean)>(i21, 1);

        return $r2;
    }

    private void calculateSingleArrayGradient(java.awt.Color[], java.awt.Color[], float)
    {
        java.awt.Color $r6, $r8, $r24;
        org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum $r26, $r27;
        float[] $r2, $r13;
        org.apache.batik.ext.awt.MultipleGradientPaintContext r0;
        java.awt.Color[] r5, r7;
        int[][] $r1, $r4, $r9, $r11, $r15, $r16, $r17, $r21;
        int[] $r3, $r10, $r12, $r14, $r18, $r19, $r20, $r22, $r23, $r25, $r31, $r32, $r33, $r37, $r38, $r39, $r40;
        float f0, $f1, $f2, $f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        java.awt.color.ColorSpace $r29, $r30, $r35, $r36;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, $i57, $i58, $i60, $i62, $i64, $i66;
        java.awt.image.ColorModel $r28, $r34;

        r0 := @this: org.apache.batik.ext.awt.MultipleGradientPaintContext;

        r5 := @parameter0: java.awt.Color[];

        r7 := @parameter1: java.awt.Color[];

        f0 := @parameter2: float;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: boolean isSimpleLookup> = 1;

        i46 = 1;

        $i60 = (int) 32768;

        i47 = $i60;

        $i62 = (int) 32768;

        i48 = $i62;

        $i64 = (int) 32768;

        i49 = $i64;

        $i66 = (int) 32768;

        i50 = $i66;

        i51 = 0;

        goto label02;

     label01:
        $r2 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f1 = $r2[i51];

        $f2 = $f1 / f0;

        $f3 = $f2 * 255.0F;

        i52 = (int) $f3;

        i46 = i46 + i52;

        $r4 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r3 = newarray (int)[i52];

        $r4[i51] = $r3;

        $r6 = r5[i51];

        $i1 = virtualinvoke $r6.<java.awt.Color: int getRGB()>();

        $r8 = r7[i51];

        $i2 = virtualinvoke $r8.<java.awt.Color: int getRGB()>();

        $r9 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r10 = $r9[i51];

        specialinvoke r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: void interpolate(int,int,int[])>($i1, $i2, $r10);

        $r11 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r12 = $r11[i51];

        i3 = $r12[128];

        $r13 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        f4 = $r13[i51];

        $i4 = i3 >> 8;

        $i5 = $i4 & 16711680;

        $f5 = (float) $i5;

        $f6 = $f5 * f4;

        $i6 = (int) $f6;

        i47 = i47 + $i6;

        $i7 = i3 & 16711680;

        $f7 = (float) $i7;

        $f8 = $f7 * f4;

        $i8 = (int) $f8;

        i48 = i48 + $i8;

        $i9 = i3 << 8;

        $i10 = $i9 & 16711680;

        $f9 = (float) $i10;

        $f10 = $f9 * f4;

        $i11 = (int) $f10;

        i49 = i49 + $i11;

        $i12 = i3 << 16;

        $i13 = $i12 & 16711680;

        $f11 = (float) $i13;

        $f12 = $f11 * f4;

        $i14 = (int) $f12;

        i50 = i50 + $i14;

        $i16 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int transparencyTest>;

        $i15 = $i1 & $i2;

        $i17 = $i16 & $i15;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int transparencyTest> = $i17;

        i51 = i51 + 1;

     label02:
        $r1 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $i0 = lengthof $r1;

        if i51 < $i0 goto label01;

        $i18 = i47 & 16711680;

        $i20 = $i18 << 8;

        $i19 = i48 & 16711680;

        $i23 = $i20 | $i19;

        $i21 = i49 & 16711680;

        $i22 = $i21 >> 8;

        $i26 = $i23 | $i22;

        $i24 = i50 & 16711680;

        $i25 = $i24 >> 16;

        $i27 = $i26 | $i25;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage> = $i27;

        $r14 = newarray (int)[i46];

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient> = $r14;

        i53 = 0;

        i54 = 0;

        goto label04;

     label03:
        $r16 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r20 = $r16[i54];

        $r19 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $r17 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r18 = $r17[i54];

        $i29 = lengthof $r18;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r20, 0, $r19, i53, $i29);

        $r21 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r22 = $r21[i54];

        $i30 = lengthof $r22;

        i53 = i53 + $i30;

        i54 = i54 + 1;

     label04:
        $r15 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $i28 = lengthof $r15;

        if i54 < $i28 goto label03;

        $r25 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $r23 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $i31 = lengthof $r23;

        $i34 = $i31 - 1;

        $i32 = lengthof r7;

        $i33 = $i32 - 1;

        $r24 = r7[$i33];

        $i35 = virtualinvoke $r24.<java.awt.Color: int getRGB()>();

        $r25[$i34] = $i35;

        $r27 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum colorSpace>;

        $r26 = <org.apache.batik.ext.awt.MultipleGradientPaint: org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum LINEAR_RGB>;

        if $r27 != $r26 goto label07;

        $r34 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel dataModel>;

        $r35 = virtualinvoke $r34.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();

        $r36 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1000);

        if $r35 != $r36 goto label10;

        i55 = 0;

        goto label06;

     label05:
        $r39 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $r38 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $i42 = $r38[i55];

        $i43 = staticinvoke <org.apache.batik.ext.awt.MultipleGradientPaintContext: int convertEntireColorLinearRGBtoSRGB(int)>($i42);

        $r39[i55] = $i43;

        i55 = i55 + 1;

     label06:
        $r37 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $i41 = lengthof $r37;

        if i55 < $i41 goto label05;

        $i44 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage>;

        $i45 = staticinvoke <org.apache.batik.ext.awt.MultipleGradientPaintContext: int convertEntireColorLinearRGBtoSRGB(int)>($i44);

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage> = $i45;

        goto label10;

     label07:
        $r28 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel dataModel>;

        $r29 = virtualinvoke $r28.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();

        $r30 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1004);

        if $r29 != $r30 goto label10;

        i56 = 0;

        goto label09;

     label08:
        $r33 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $r32 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $i37 = $r32[i56];

        $i38 = staticinvoke <org.apache.batik.ext.awt.MultipleGradientPaintContext: int convertEntireColorSRGBtoLinearRGB(int)>($i37);

        $r33[i56] = $i38;

        i56 = i56 + 1;

     label09:
        $r31 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $i36 = lengthof $r31;

        if i56 < $i36 goto label08;

        $i39 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage>;

        $i40 = staticinvoke <org.apache.batik.ext.awt.MultipleGradientPaintContext: int convertEntireColorSRGBtoLinearRGB(int)>($i39);

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage> = $i40;

     label10:
        $r40 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $i57 = lengthof $r40;

        $i58 = $i57 - 1;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize> = $i58;

        return;
    }

    private void calculateMultipleArrayGradient(java.awt.Color[], java.awt.Color[])
    {
        java.awt.Color $r5, $r7;
        byte $b0;
        org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum $r13, $r14;
        float[] $r1, $r12;
        org.apache.batik.ext.awt.MultipleGradientPaintContext r0;
        java.awt.Color[] r4, r6;
        int[][] $r3, $r8, $r10, $r18, $r19, $r21, $r22, $r28, $r29, $r31, $r32, $r35;
        int[] $r2, $r9, $r11, $r20, $r23, $r24, $r30, $r33, $r34;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, f9;
        java.awt.color.ColorSpace $r16, $r17, $r26, $r27;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, i40, i41, i42, i43, i44, i45, $i46, i47, i48, i49, i50, $i52, $i54, $i56, $i58;
        java.awt.image.ColorModel $r15, $r25;

        r0 := @this: org.apache.batik.ext.awt.MultipleGradientPaintContext;

        r4 := @parameter0: java.awt.Color[];

        r6 := @parameter1: java.awt.Color[];

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: boolean isSimpleLookup> = 0;

        $i52 = (int) 32768;

        i40 = $i52;

        $i54 = (int) 32768;

        i41 = $i54;

        $i56 = (int) 32768;

        i42 = $i56;

        $i58 = (int) 32768;

        i43 = $i58;

        i44 = 0;

        goto label04;

     label01:
        $r1 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f0 = $r1[i44];

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label02;

        goto label03;

     label02:
        $r3 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r2 = newarray (int)[256];

        $r3[i44] = $r2;

        $r5 = r4[i44];

        $i1 = virtualinvoke $r5.<java.awt.Color: int getRGB()>();

        $r7 = r6[i44];

        $i2 = virtualinvoke $r7.<java.awt.Color: int getRGB()>();

        $r8 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r9 = $r8[i44];

        specialinvoke r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: void interpolate(int,int,int[])>($i1, $i2, $r9);

        $r10 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r11 = $r10[i44];

        i45 = $r11[128];

        $r12 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        f9 = $r12[i44];

        $i3 = i45 >> 8;

        $i4 = $i3 & 16711680;

        $f1 = (float) $i4;

        $f2 = $f1 * f9;

        $i5 = (int) $f2;

        i40 = i40 + $i5;

        $i6 = i45 & 16711680;

        $f3 = (float) $i6;

        $f4 = $f3 * f9;

        $i7 = (int) $f4;

        i41 = i41 + $i7;

        $i8 = i45 << 8;

        $i9 = $i8 & 16711680;

        $f5 = (float) $i9;

        $f6 = $f5 * f9;

        $i10 = (int) $f6;

        i42 = i42 + $i10;

        $i11 = i45 << 16;

        $i12 = $i11 & 16711680;

        $f7 = (float) $i12;

        $f8 = $f7 * f9;

        $i13 = (int) $f8;

        i43 = i43 + $i13;

        $i14 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int transparencyTest>;

        $i15 = $i14 & $i1;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int transparencyTest> = $i15;

        $i16 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int transparencyTest>;

        $i17 = $i16 & $i2;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int transparencyTest> = $i17;

     label03:
        i44 = i44 + 1;

     label04:
        $r35 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $i46 = lengthof $r35;

        if i44 < $i46 goto label01;

        $i18 = i40 & 16711680;

        $i20 = $i18 << 8;

        $i19 = i41 & 16711680;

        $i23 = $i20 | $i19;

        $i21 = i42 & 16711680;

        $i22 = $i21 >> 8;

        $i26 = $i23 | $i22;

        $i24 = i43 & 16711680;

        $i25 = $i24 >> 16;

        $i27 = $i26 | $i25;

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage> = $i27;

        $r14 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum colorSpace>;

        $r13 = <org.apache.batik.ext.awt.MultipleGradientPaint: org.apache.batik.ext.awt.MultipleGradientPaint$ColorSpaceEnum LINEAR_RGB>;

        if $r14 != $r13 goto label09;

        $r25 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel dataModel>;

        $r26 = virtualinvoke $r25.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();

        $r27 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1000);

        if $r26 != $r27 goto label14;

        i47 = 0;

        goto label08;

     label05:
        i48 = 0;

        goto label07;

     label06:
        $r31 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r34 = $r31[i47];

        $r32 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r33 = $r32[i47];

        $i36 = $r33[i48];

        $i37 = staticinvoke <org.apache.batik.ext.awt.MultipleGradientPaintContext: int convertEntireColorLinearRGBtoSRGB(int)>($i36);

        $r34[i48] = $i37;

        i48 = i48 + 1;

     label07:
        $r29 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r30 = $r29[i47];

        $i35 = lengthof $r30;

        if i48 < $i35 goto label06;

        i47 = i47 + 1;

     label08:
        $r28 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $i34 = lengthof $r28;

        if i47 < $i34 goto label05;

        $i38 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage>;

        $i39 = staticinvoke <org.apache.batik.ext.awt.MultipleGradientPaintContext: int convertEntireColorLinearRGBtoSRGB(int)>($i38);

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage> = $i39;

        goto label14;

     label09:
        $r15 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel dataModel>;

        $r16 = virtualinvoke $r15.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();

        $r17 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1004);

        if $r16 != $r17 goto label14;

        i49 = 0;

        goto label13;

     label10:
        i50 = 0;

        goto label12;

     label11:
        $r21 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r24 = $r21[i49];

        $r22 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r23 = $r22[i49];

        $i30 = $r23[i50];

        $i31 = staticinvoke <org.apache.batik.ext.awt.MultipleGradientPaintContext: int convertEntireColorSRGBtoLinearRGB(int)>($i30);

        $r24[i50] = $i31;

        i50 = i50 + 1;

     label12:
        $r19 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r20 = $r19[i49];

        $i29 = lengthof $r20;

        if i50 < $i29 goto label11;

        i49 = i49 + 1;

     label13:
        $r18 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $i28 = lengthof $r18;

        if i49 < $i28 goto label10;

        $i32 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage>;

        $i33 = staticinvoke <org.apache.batik.ext.awt.MultipleGradientPaintContext: int convertEntireColorSRGBtoLinearRGB(int)>($i32);

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage> = $i33;

     label14:
        return;
    }

    private void interpolate(int, int, int[])
    {
        org.apache.batik.ext.awt.MultipleGradientPaintContext r1;
        int[] r0;
        float $f0, f1, $f2, $f3, f4, $f5, $f6, f7, $f8, $f9, f10, $f11, $f12, f13, f14, $f15, $f16, $f17, $f18;
        int i0, $i1, i2, $i3, i4, $i5, i6, i7, i8, $i9, $i10, i11, $i12, $i13, i14, $i15, $i16, i17, $i18, i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, i46, i47, i48, $i50;

        r1 := @this: org.apache.batik.ext.awt.MultipleGradientPaintContext;

        i0 := @parameter0: int;

        i8 := @parameter1: int;

        r0 := @parameter2: int[];

        i46 = lengthof r0;

        $f0 = (float) i46;

        f1 = 1.0F / $f0;

        $i1 = i0 >> 24;

        i2 = $i1 & 255;

        $i3 = i0 >> 16;

        i4 = $i3 & 255;

        $i5 = i0 >> 8;

        i6 = $i5 & 255;

        i7 = i0 & 255;

        $i9 = i8 >> 24;

        $i10 = $i9 & 255;

        i11 = $i10 - i2;

        $i12 = i8 >> 16;

        $i13 = $i12 & 255;

        i14 = $i13 - i4;

        $i15 = i8 >> 8;

        $i16 = $i15 & 255;

        i17 = $i16 - i6;

        $i18 = i8 & 255;

        i19 = $i18 - i7;

        $f2 = (float) i11;

        $f3 = 2.0F * $f2;

        f4 = $f3 * f1;

        $f5 = (float) i14;

        $f6 = 2.0F * $f5;

        f7 = $f6 * f1;

        $f8 = (float) i17;

        $f9 = 2.0F * $f8;

        f10 = $f9 * f1;

        $f11 = (float) i19;

        $f12 = 2.0F * $f11;

        f13 = $f12 * f1;

        r0[0] = i0;

        $i50 = (int) -1;

        i47 = i46 + $i50;

        r0[i47] = i8;

        i48 = 1;

        goto label2;

     label1:
        f14 = (float) i48;

        $f15 = f14 * f4;

        $i20 = (int) $f15;

        $i21 = $i20 + 1;

        $i22 = $i21 >> 1;

        $i23 = i2 + $i22;

        $i24 = $i23 & 255;

        $i31 = $i24 << 24;

        $f16 = f14 * f7;

        $i25 = (int) $f16;

        $i26 = $i25 + 1;

        $i27 = $i26 >> 1;

        $i28 = i4 + $i27;

        $i29 = $i28 & 255;

        $i30 = $i29 << 16;

        $i38 = $i31 | $i30;

        $f17 = f14 * f10;

        $i32 = (int) $f17;

        $i33 = $i32 + 1;

        $i34 = $i33 >> 1;

        $i35 = i6 + $i34;

        $i36 = $i35 & 255;

        $i37 = $i36 << 8;

        $i44 = $i38 | $i37;

        $f18 = f14 * f13;

        $i39 = (int) $f18;

        $i40 = $i39 + 1;

        $i41 = $i40 >> 1;

        $i42 = i7 + $i41;

        $i43 = $i42 & 255;

        $i45 = $i44 | $i43;

        r0[i48] = $i45;

        i48 = i48 + 1;

     label2:
        if i48 < i47 goto label1;

        return;
    }

    private static int convertEntireColorLinearRGBtoSRGB(int)
    {
        int[] r0;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16;

        i0 := @parameter0: int;

        $i1 = i0 >> 24;

        i2 = $i1 & 255;

        $i3 = i0 >> 16;

        i11 = $i3 & 255;

        $i4 = i0 >> 8;

        i12 = $i4 & 255;

        i13 = i0 & 255;

        r0 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] LinearRGBtoSRGB>;

        i14 = r0[i11];

        i15 = r0[i12];

        i16 = r0[i13];

        $i6 = i2 << 24;

        $i5 = i14 << 16;

        $i8 = $i6 | $i5;

        $i7 = i15 << 8;

        $i9 = $i8 | $i7;

        $i10 = $i9 | i16;

        return $i10;
    }

    private static int convertEntireColorSRGBtoLinearRGB(int)
    {
        int[] r0;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16;

        i0 := @parameter0: int;

        $i1 = i0 >> 24;

        i2 = $i1 & 255;

        $i3 = i0 >> 16;

        i11 = $i3 & 255;

        $i4 = i0 >> 8;

        i12 = $i4 & 255;

        i13 = i0 & 255;

        r0 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] SRGBtoLinearRGB>;

        i14 = r0[i11];

        i15 = r0[i12];

        i16 = r0[i13];

        $i6 = i2 << 24;

        $i5 = i14 << 16;

        $i8 = $i6 | $i5;

        $i7 = i15 << 8;

        $i9 = $i8 | $i7;

        $i10 = $i9 | i16;

        return $i10;
    }

    protected final int indexIntoGradientsArrays(float)
    {
        byte $b0, $b4, $b12, $b15, $b26, $b27;
        float[] $r5, $r6, $r7, $r11, $r12, $r13;
        org.apache.batik.ext.awt.MultipleGradientPaintContext r0;
        int[] $r9, $r10, $r15, $r17, $r19, $r21, $r22, $r23, $r24, $r25, $r26;
        int $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i28, $i29, i30, i31, i32, i33, i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, i76, i77, $i78, $i79, $i80, $i81, $i82, $i83;
        org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum $r1, $r2, $r3, $r4;
        int[][] $r8, $r14, $r16, $r18, $r20;
        boolean $z0, $z1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, f21, f22, f23, f24, f25, f26;

        r0 := @this: org.apache.batik.ext.awt.MultipleGradientPaintContext;

        f21 := @parameter0: float;

        $r2 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum cycleMethod>;

        $r1 = <org.apache.batik.ext.awt.MultipleGradientPaint: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum NO_CYCLE>;

        if $r2 != $r1 goto label02;

        $b26 = f21 cmpl 1.0F;

        $i78 = (int) $b26;

        if $i78 < 0 goto label01;

        $i29 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientOverflow>;

        return $i29;

     label01:
        $b27 = f21 cmpg 0.0F;

        $i79 = (int) $b27;

        if $i79 > 0 goto label14;

        $i28 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientUnderflow>;

        return $i28;

     label02:
        $r4 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum cycleMethod>;

        $r3 = <org.apache.batik.ext.awt.MultipleGradientPaint: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum REPEAT>;

        if $r4 != $r3 goto label12;

        $i11 = (int) f21;

        $f9 = (float) $i11;

        f22 = f21 - $f9;

        $b12 = f22 cmpg 0.0F;

        $i80 = (int) $b12;

        if $i80 >= 0 goto label03;

        f22 = f22 + 1.0F;

     label03:
        i30 = 0;

        i31 = 0;

        i32 = 0;

        $z0 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: boolean isSimpleLookup>;

        if $z0 == 0 goto label05;

        $r22 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $i22 = lengthof $r22;

        $f17 = (float) $i22;

        f23 = f22 * $f17;

        i33 = (int) f23;

        $i24 = i33 + 1;

        $r23 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $i23 = lengthof $r23;

        if $i24 >= $i23 goto label04;

        $r26 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $i25 = $r26[i33];

        return $i25;

     label04:
        $f18 = (float) i33;

        $f19 = f23 - $f18;

        $f20 = $f19 * 65536.0F;

        i30 = (int) $f20;

        $r24 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        i31 = $r24[i33];

        $r25 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        i32 = $r25[0];

        goto label11;

     label05:
        i34 = 0;

        goto label10;

     label06:
        $r11 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $i14 = i34 + 1;

        $f10 = $r11[$i14];

        $b15 = f22 cmpg $f10;

        $i81 = (int) $b15;

        if $i81 >= 0 goto label09;

        $r12 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $f11 = $r12[i34];

        f24 = f22 - $f11;

        $r13 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f12 = $r13[i34];

        $f13 = f24 / $f12;

        f25 = $f13 * 256.0F;

        i16 = (int) f25;

        $i18 = i16 + 1;

        $r14 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r15 = $r14[i34];

        $i17 = lengthof $r15;

        if $i18 < $i17 goto label07;

        $i21 = i34 + 1;

        $i20 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientsLength>;

        if $i21 >= $i20 goto label08;

     label07:
        $r16 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r17 = $r16[i34];

        $i19 = $r17[i16];

        return $i19;

     label08:
        $f14 = (float) i16;

        $f15 = f25 - $f14;

        $f16 = $f15 * 65536.0F;

        i30 = (int) $f16;

        $r18 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r19 = $r18[i34];

        i31 = $r19[i16];

        $r20 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r21 = $r20[0];

        i32 = $r21[0];

        goto label11;

     label09:
        i34 = i34 + 1;

     label10:
        $i13 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientsLength>;

        if i34 < $i13 goto label06;

     label11:
        $i35 = i31 >> 8;

        $i36 = $i35 & 16711680;

        $i37 = i32 >>> 24;

        $i38 = i31 >>> 24;

        $i39 = $i37 - $i38;

        $i40 = $i39 * i30;

        $i41 = $i36 + $i40;

        $i42 = $i41 & 16711680;

        $i43 = $i42 << 8;

        $i44 = i31 & 16711680;

        $i45 = i32 >> 16;

        $i46 = $i45 & 255;

        $i47 = i31 >> 16;

        $i48 = $i47 & 255;

        $i49 = $i46 - $i48;

        $i50 = $i49 * i30;

        $i51 = $i44 + $i50;

        $i52 = $i51 & 16711680;

        $i53 = $i43 | $i52;

        $i54 = i31 << 8;

        $i55 = $i54 & 16711680;

        $i56 = i32 >> 8;

        $i57 = $i56 & 255;

        $i58 = i31 >> 8;

        $i59 = $i58 & 255;

        $i60 = $i57 - $i59;

        $i61 = $i60 * i30;

        $i62 = $i55 + $i61;

        $i63 = $i62 & 16711680;

        $i64 = $i63 >> 8;

        $i65 = $i53 | $i64;

        $i66 = i31 << 16;

        $i67 = $i66 & 16711680;

        $i68 = i32 & 255;

        $i69 = i31 & 255;

        $i70 = $i68 - $i69;

        $i71 = $i70 * i30;

        $i72 = $i67 + $i71;

        $i73 = $i72 & 16711680;

        $i74 = $i73 >> 16;

        $i75 = $i65 | $i74;

        return $i75;

     label12:
        $b0 = f21 cmpg 0.0F;

        $i82 = (int) $b0;

        if $i82 >= 0 goto label13;

        f21 = neg f21;

     label13:
        $i10 = (int) f21;

        $f0 = (float) $i10;

        $f8 = f21 - $f0;

        f21 = $f8;

        $i1 = $i10 & 1;

        if $i1 != 1 goto label14;

        f21 = 1.0F - $f8;

     label14:
        $z1 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: boolean isSimpleLookup>;

        if $z1 == 0 goto label15;

        $r10 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $i7 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $f6 = (float) $i7;

        $f7 = f21 * $f6;

        $i8 = (int) $f7;

        $i9 = $r10[$i8];

        return $i9;

     label15:
        i76 = 0;

        goto label18;

     label16:
        $r5 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $i3 = i76 + 1;

        $f1 = $r5[$i3];

        $b4 = f21 cmpg $f1;

        $i83 = (int) $b4;

        if $i83 >= 0 goto label17;

        $r6 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $f2 = $r6[i76];

        f26 = f21 - $f2;

        $r7 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f3 = $r7[i76];

        $f4 = f26 / $f3;

        $f5 = $f4 * 255.0F;

        i77 = (int) $f5;

        $r8 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r9 = $r8[i76];

        $i5 = $r9[i77];

        return $i5;

     label17:
        i76 = i76 + 1;

     label18:
        $i2 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientsLength>;

        if i76 < $i2 goto label16;

        $i6 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientOverflow>;

        return $i6;
    }

    protected final int indexGradientAntiAlias(float, float)
    {
        byte $b0, $b1, $b2, $b5, $b6, $b8, $b10, $b11, $b12, $b13, $b15, $b59, $b84, $b94;
        org.apache.batik.ext.awt.MultipleGradientPaintContext r0;
        int $i3, $i4, $i7, $i9, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i60, $i61, i62, $i63, $i64, $i65, $i66, $i67, i68, $i69, $i70, $i71, $i72, i73, $i74, $i75, $i76, $i77, i78, $i79, $i80, $i81, $i82, i83, i85, i86, i87, i88, i89, $i90, $i91, $i92, $i93, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107;
        org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum $r1, $r2, $r3, $r4;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, f16, f17, f18, f19, f20, f21, $f22, $f23, f24, f25, f26, f27, f28, $f29, $f30, $f31, $f32, f33;
        double $d0, $d1;

        r0 := @this: org.apache.batik.ext.awt.MultipleGradientPaintContext;

        f0 := @parameter0: float;

        f16 := @parameter1: float;

        $r2 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum cycleMethod>;

        $r1 = <org.apache.batik.ext.awt.MultipleGradientPaint: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum NO_CYCLE>;

        if $r2 != $r1 goto label09;

        $f8 = f16 / 2.0F;

        f17 = f0 - $f8;

        $f9 = f16 / 2.0F;

        f18 = f0 + $f9;

        $b10 = f17 cmpl 1.0F;

        $i96 = (int) $b10;

        if $i96 < 0 goto label01;

        $i61 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientOverflow>;

        return $i61;

     label01:
        $b11 = f18 cmpg 0.0F;

        $i97 = (int) $b11;

        if $i97 > 0 goto label02;

        $i60 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientUnderflow>;

        return $i60;

     label02:
        f19 = 0.0F;

        f20 = 0.0F;

        $b12 = f18 cmpl 1.0F;

        $i98 = (int) $b12;

        if $i98 < 0 goto label04;

        $f13 = f18 - 1.0F;

        f19 = $f13 / f16;

        $b59 = f17 cmpg 0.0F;

        $i99 = (int) $b59;

        if $i99 > 0 goto label03;

        $f15 = neg f17;

        f20 = $f15 / f16;

        f21 = 1.0F;

        i62 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage>;

        goto label06;

     label03:
        f21 = 1.0F - f17;

        $f14 = 1.0F - f17;

        i62 = specialinvoke r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int getAntiAlias(float,boolean,float,boolean,float,float)>(f17, 1, 1.0F, 0, $f14, 1.0F);

        goto label06;

     label04:
        $b13 = f17 cmpg 0.0F;

        $i100 = (int) $b13;

        if $i100 > 0 goto label05;

        $f10 = neg f17;

        f20 = $f10 / f16;

        f21 = f18;

        i62 = specialinvoke r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int getAntiAlias(float,boolean,float,boolean,float,float)>(0.0F, 1, f18, 0, f18, 1.0F);

        goto label06;

     label05:
        $i14 = specialinvoke r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int getAntiAlias(float,boolean,float,boolean,float,float)>(f17, 1, f18, 0, f16, 1.0F);

        return $i14;

     label06:
        $f22 = 65536.0F * f21;

        $f23 = $f22 / f16;

        $i63 = (int) $f23;

        $i64 = i62 >>> 20;

        $i65 = $i64 & 4080;

        $i66 = $i65 * $i63;

        $i67 = $i66 >> 16;

        i68 = $i67;

        $i69 = i62 >> 12;

        $i70 = $i69 & 4080;

        $i71 = $i70 * $i63;

        $i72 = $i71 >> 16;

        i73 = $i72;

        $i74 = i62 >> 4;

        $i75 = $i74 & 4080;

        $i76 = $i75 * $i63;

        $i77 = $i76 >> 16;

        i78 = $i77;

        $i79 = i62 << 4;

        $i80 = $i79 & 4080;

        $i81 = $i80 * $i63;

        $i82 = $i81 >> 16;

        i83 = $i82;

        $b84 = f20 cmpl 0.0F;

        if $b84 == 0 goto label07;

        i85 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientUnderflow>;

        $f12 = 65536.0F * f20;

        i86 = (int) $f12;

        $i43 = i85 >>> 20;

        $i44 = $i43 & 4080;

        $i45 = $i44 * i86;

        $i46 = $i45 >> 16;

        i68 = $i67 + $i46;

        $i47 = i85 >> 12;

        $i48 = $i47 & 4080;

        $i49 = $i48 * i86;

        $i50 = $i49 >> 16;

        i73 = $i72 + $i50;

        $i51 = i85 >> 4;

        $i52 = $i51 & 4080;

        $i53 = $i52 * i86;

        $i54 = $i53 >> 16;

        i78 = $i77 + $i54;

        $i55 = i85 << 4;

        $i56 = $i55 & 4080;

        $i57 = $i56 * i86;

        $i58 = $i57 >> 16;

        i83 = $i82 + $i58;

     label07:
        $b15 = f19 cmpl 0.0F;

        if $b15 == 0 goto label08;

        i87 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientOverflow>;

        $f11 = 65536.0F * f19;

        i88 = (int) $f11;

        $i27 = i87 >>> 20;

        $i28 = $i27 & 4080;

        $i29 = $i28 * i88;

        $i30 = $i29 >> 16;

        i68 = i68 + $i30;

        $i31 = i87 >> 12;

        $i32 = $i31 & 4080;

        $i33 = $i32 * i88;

        $i34 = $i33 >> 16;

        i73 = i73 + $i34;

        $i35 = i87 >> 4;

        $i36 = $i35 & 4080;

        $i37 = $i36 * i88;

        $i38 = $i37 >> 16;

        i78 = i78 + $i38;

        $i39 = i87 << 4;

        $i40 = $i39 & 4080;

        $i41 = $i40 * i88;

        $i42 = $i41 >> 16;

        i83 = i83 + $i42;

     label08:
        $i16 = i68 & 4080;

        $i19 = $i16 << 20;

        $i17 = i73 & 4080;

        $i18 = $i17 << 12;

        $i22 = $i19 | $i18;

        $i20 = i78 & 4080;

        $i21 = $i20 << 4;

        $i25 = $i22 | $i21;

        $i23 = i83 & 4080;

        $i24 = $i23 >> 4;

        $i26 = $i25 | $i24;

        return $i26;

     label09:
        i89 = (int) f16;

        f24 = 1.0F;

        if i89 == 0 goto label10;

        $f5 = (float) i89;

        f16 = f16 - $f5;

        $f6 = (float) i89;

        $f7 = $f6 + f16;

        f24 = f16 / $f7;

        $d1 = (double) f24;

        $b8 = $d1 cmpg 0.1;

        $i101 = (int) $b8;

        if $i101 >= 0 goto label10;

        $i9 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage>;

        return $i9;

     label10:
        $d0 = (double) f16;

        $b0 = $d0 cmpl 0.99;

        $i102 = (int) $b0;

        if $i102 <= 0 goto label11;

        $i7 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage>;

        return $i7;

     label11:
        $f1 = f16 / 2.0F;

        f25 = f0 - $f1;

        $f2 = f16 / 2.0F;

        f26 = f0 + $f2;

        z0 = 1;

        z1 = 0;

        $r4 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum cycleMethod>;

        $r3 = <org.apache.batik.ext.awt.MultipleGradientPaint: org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum REPEAT>;

        if $r4 != $r3 goto label13;

        $i3 = (int) f25;

        $f3 = (float) $i3;

        f27 = f25 - $f3;

        $i4 = (int) f26;

        $f4 = (float) $i4;

        f28 = f26 - $f4;

        $b5 = f27 cmpg 0.0F;

        $i103 = (int) $b5;

        if $i103 >= 0 goto label12;

        f27 = f27 + 1.0F;

     label12:
        $b6 = f28 cmpg 0.0F;

        $i104 = (int) $b6;

        if $i104 >= 0 goto label28;

        f28 = f28 + 1.0F;

        goto label28;

     label13:
        $b1 = f26 cmpg 0.0F;

        $i105 = (int) $b1;

        if $i105 >= 0 goto label18;

        f25 = neg f25;

        if 1 != 0 goto label14;

        $z2 = 1;

        goto label15;

     label14:
        $z2 = 0;

     label15:
        z0 = $z2;

        f26 = neg f26;

        if 0 != 0 goto label16;

        $z3 = 1;

        goto label17;

     label16:
        $z3 = 0;

     label17:
        z1 = $z3;

        goto label21;

     label18:
        $b2 = f25 cmpg 0.0F;

        $i106 = (int) $b2;

        if $i106 >= 0 goto label21;

        f25 = neg f25;

        if 1 != 0 goto label19;

        $z4 = 1;

        goto label20;

     label19:
        $z4 = 0;

     label20:
        z0 = $z4;

     label21:
        $i90 = (int) f25;

        $f29 = (float) $i90;

        $f30 = f25 - $f29;

        f27 = $f30;

        $i91 = (int) f26;

        $f31 = (float) $i91;

        $f32 = f26 - $f31;

        f28 = $f32;

        $i92 = $i90 & 1;

        if $i92 != 1 goto label24;

        f27 = 1.0F - $f30;

        if z0 != 0 goto label22;

        $z5 = 1;

        goto label23;

     label22:
        $z5 = 0;

     label23:
        z0 = $z5;

     label24:
        $i93 = $i91 & 1;

        if $i93 != 1 goto label27;

        f28 = 1.0F - $f32;

        if z1 != 0 goto label25;

        $z6 = 1;

        goto label26;

     label25:
        $z6 = 0;

     label26:
        z1 = $z6;

     label27:
        $b94 = f27 cmpl f28;

        $i107 = (int) $b94;

        if $i107 <= 0 goto label28;

        if z0 != 0 goto label28;

        if z1 == 0 goto label28;

        f33 = f27;

        f27 = f28;

        f28 = f33;

        z0 = 1;

        z1 = 0;

     label28:
        $i95 = specialinvoke r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int getAntiAlias(float,boolean,float,boolean,float,float)>(f27, z0, f28, z1, f16, f24);

        return $i95;
    }

    private final int getAntiAlias(float, boolean, float, boolean, float, float)
    {
        float[] $r1, $r2, $r3, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r35, $r36, $r43;
        org.apache.batik.ext.awt.MultipleGradientPaintContext r0;
        int[] $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r32, $r37, $r38, $r39, $r40, $r41, $r42;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $i241, $i242, $i243, $i244, $i245, $i246, $i247, i248, i249, i250, i251, i252, i253, i254, i255, i256, i257, i258, i259, i260, i261, i262, i263, i264, i265, i266, i267, i268, i269, i270, i271, i272, i273, i274, $i275, $i277, $i278, i279, i280, i281, i282, i283, i284, i285, i286, i287, i288, i289, i290, i291, i292, i293, i294, i295, i296, i297, i298, i299, i300, i301, i302, i303, i304, i305, i306, i307, i309, i310, i311, i312, i313, i314, $i316, $i318, $i319, $i321, $i323, $i324, $i326, $i328, $i330, $i332;
        boolean $z0, z1, z2;
        byte $b1, $b276, $b308;
        int[][] $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r31, $r33, $r34;
        float $f0, $f1, $f2, $f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, f77, f78, f79, f80, f81, f82, f83, $f84, f85, $f86;

        r0 := @this: org.apache.batik.ext.awt.MultipleGradientPaintContext;

        f77 := @parameter0: float;

        z1 := @parameter1: boolean;

        f78 := @parameter2: float;

        z2 := @parameter3: boolean;

        f4 := @parameter4: float;

        f21 := @parameter5: float;

        i248 = 0;

        i249 = 0;

        i250 = 0;

        i251 = 0;

        $z0 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: boolean isSimpleLookup>;

        if $z0 == 0 goto label18;

        $i165 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $f54 = (float) $i165;

        f79 = f77 * $f54;

        $i166 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $f55 = (float) $i166;

        f80 = f78 * $f55;

        i252 = (int) f79;

        i253 = (int) f80;

        if z1 == 0 goto label04;

        if z2 != 0 goto label04;

        if i252 > i253 goto label04;

        if i252 != i253 goto label01;

        $r42 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $i247 = $r42[i252];

        return $i247;

     label01:
        i254 = i252 + 1;

        goto label03;

     label02:
        $r41 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        i255 = $r41[i254];

        $i234 = i255 >>> 20;

        $i235 = $i234 & 4080;

        i248 = i248 + $i235;

        $i236 = i255 >>> 12;

        $i237 = $i236 & 4080;

        i249 = i249 + $i237;

        $i238 = i255 >>> 4;

        $i239 = $i238 & 4080;

        i250 = i250 + $i239;

        $i240 = i255 << 4;

        $i241 = $i240 & 4080;

        i251 = i251 + $i241;

        i254 = i254 + 1;

     label03:
        if i254 < i253 goto label02;

        goto label13;

     label04:
        if z1 == 0 goto label05;

        i256 = i252 + 1;

        i257 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        goto label06;

     label05:
        i256 = 0;

        i257 = i252;

     label06:
        i258 = i256;

        goto label08;

     label07:
        $r37 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        i259 = $r37[i258];

        $i167 = i259 >>> 20;

        $i168 = $i167 & 4080;

        i248 = i248 + $i168;

        $i169 = i259 >>> 12;

        $i170 = $i169 & 4080;

        i249 = i249 + $i170;

        $i171 = i259 >>> 4;

        $i172 = $i171 & 4080;

        i250 = i250 + $i172;

        $i173 = i259 << 4;

        $i174 = $i173 & 4080;

        i251 = i251 + $i174;

        i258 = i258 + 1;

     label08:
        if i258 < i257 goto label07;

        if z2 == 0 goto label09;

        i260 = i253 + 1;

        i261 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        goto label10;

     label09:
        i260 = 0;

        i261 = i253;

     label10:
        i262 = i260;

        goto label12;

     label11:
        $r38 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        i263 = $r38[i262];

        $i175 = i263 >>> 20;

        $i176 = $i175 & 4080;

        i248 = i248 + $i176;

        $i177 = i263 >>> 12;

        $i178 = $i177 & 4080;

        i249 = i249 + $i178;

        $i179 = i263 >>> 4;

        $i180 = $i179 & 4080;

        i250 = i250 + $i180;

        $i181 = i263 << 4;

        $i182 = $i181 & 4080;

        i251 = i251 + $i182;

        i262 = i262 + 1;

     label12:
        if i262 < i261 goto label11;

     label13:
        $i183 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int fastGradientArraySize>;

        $f56 = (float) $i183;

        $f57 = f4 * $f56;

        $f58 = 65536.0F / $f57;

        $i242 = (int) $f58;

        $i184 = i248 * $i242;

        $i243 = $i184 >> 16;

        $i185 = i249 * $i242;

        $i244 = $i185 >> 16;

        $i186 = i250 * $i242;

        $i245 = $i186 >> 16;

        $i187 = i251 * $i242;

        $i246 = $i187 >> 16;

        if z1 == 0 goto label14;

        $f72 = (float) i252;

        $f73 = f79 - $f72;

        $f75 = 1.0F - $f73;

        $f74 = (float) $i242;

        $f76 = $f75 * $f74;

        i264 = (int) $f76;

        goto label15;

     label14:
        $f59 = (float) i252;

        $f61 = f79 - $f59;

        $f60 = (float) $i242;

        $f62 = $f61 * $f60;

        i264 = (int) $f62;

     label15:
        $r39 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $i229 = $r39[i252];

        $i188 = $i229 >>> 20;

        $i189 = $i188 & 4080;

        $i190 = $i189 * i264;

        $i191 = $i190 >> 16;

        $i230 = $i243 + $i191;

        $i192 = $i229 >>> 12;

        $i193 = $i192 & 4080;

        $i194 = $i193 * i264;

        $i195 = $i194 >> 16;

        $i231 = $i244 + $i195;

        $i196 = $i229 >>> 4;

        $i197 = $i196 & 4080;

        $i198 = $i197 * i264;

        $i199 = $i198 >> 16;

        $i232 = $i245 + $i199;

        $i200 = $i229 << 4;

        $i201 = $i200 & 4080;

        $i202 = $i201 * i264;

        $i203 = $i202 >> 16;

        $i233 = $i246 + $i203;

        if z2 == 0 goto label16;

        $f67 = (float) i253;

        $f68 = f80 - $f67;

        $f70 = 1.0F - $f68;

        $f69 = (float) $i242;

        $f71 = $f70 * $f69;

        i265 = (int) $f71;

        goto label17;

     label16:
        $f63 = (float) i253;

        $f65 = f80 - $f63;

        $f64 = (float) $i242;

        $f66 = $f65 * $f64;

        i265 = (int) $f66;

     label17:
        $r40 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] gradient>;

        $i224 = $r40[i253];

        $i204 = $i224 >>> 20;

        $i205 = $i204 & 4080;

        $i206 = $i205 * i265;

        $i207 = $i206 >> 16;

        $i225 = $i230 + $i207;

        $i208 = $i224 >>> 12;

        $i209 = $i208 & 4080;

        $i210 = $i209 * i265;

        $i211 = $i210 >> 16;

        $i226 = $i231 + $i211;

        $i212 = $i224 >>> 4;

        $i213 = $i212 & 4080;

        $i214 = $i213 * i265;

        $i215 = $i214 >> 16;

        $i227 = $i232 + $i215;

        $i216 = $i224 << 4;

        $i217 = $i216 & 4080;

        $i218 = $i217 * i265;

        $i219 = $i218 >> 16;

        $i228 = $i233 + $i219;

        $i220 = $i225 + 8;

        i266 = $i220 >> 4;

        $i221 = $i226 + 8;

        i267 = $i221 >> 4;

        $i222 = $i227 + 8;

        i268 = $i222 >> 4;

        $i223 = $i228 + 8;

        i269 = $i223 >> 4;

        goto label43;

     label18:
        i270 = 0;

        i271 = 0;

        $i316 = (int) -1;

        i272 = $i316;

        $i318 = (int) -1;

        i273 = $i318;

        f81 = 0.0F;

        f82 = 0.0F;

        i274 = 0;

        goto label22;

     label19:
        $r1 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $i0 = i274 + 1;

        $f0 = $r1[$i0];

        $b1 = f77 cmpg $f0;

        $i319 = (int) $b1;

        if $i319 >= 0 goto label20;

        $i321 = (int) -1;

        if i272 != $i321 goto label20;

        i272 = i274;

        $r35 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $f51 = $r35[i274];

        f83 = f77 - $f51;

        $r36 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f52 = $r36[i274];

        $f53 = f83 / $f52;

        f81 = $f53 * 255.0F;

        i270 = (int) f81;

        $i323 = (int) -1;

        if i273 == $i323 goto label20;

        goto label23;

     label20:
        $r43 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $i275 = i274 + 1;

        $f84 = $r43[$i275];

        $b276 = f78 cmpg $f84;

        $i324 = (int) $b276;

        if $i324 >= 0 goto label21;

        $i326 = (int) -1;

        if i273 != $i326 goto label21;

        i273 = i274;

        $r2 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] fractions>;

        $f1 = $r2[i274];

        f85 = f78 - $f1;

        $r3 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f2 = $r3[i274];

        $f3 = f85 / $f2;

        f82 = $f3 * 255.0F;

        i271 = (int) f82;

        $i328 = (int) -1;

        if i272 == $i328 goto label21;

        goto label23;

     label21:
        i274 = i274 + 1;

     label22:
        $i277 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientsLength>;

        if i274 < $i277 goto label19;

     label23:
        $i330 = (int) -1;

        if i272 != $i330 goto label24;

        $r34 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $i164 = lengthof $r34;

        i272 = $i164 - 1;

        i270 = 255;

        f81 = (float) 255;

     label24:
        $i332 = (int) -1;

        if i273 != $i332 goto label25;

        $r33 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $i163 = lengthof $r33;

        i273 = $i163 - 1;

        i271 = 255;

        f82 = (float) 255;

     label25:
        if i272 != i273 goto label26;

        if i270 > i271 goto label26;

        if z1 == 0 goto label26;

        if z2 != 0 goto label26;

        $r31 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r32 = $r31[i272];

        $i159 = i270 + i271;

        $i160 = $i159 + 1;

        $i161 = $i160 >> 1;

        $i162 = $r32[$i161];

        return $i162;

     label26:
        $f86 = 65536.0F / f4;

        $i278 = (int) $f86;

        if i272 >= i273 goto label29;

        if z1 == 0 goto label29;

        if z2 != 0 goto label29;

        $f38 = (float) $i278;

        $r22 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f37 = $r22[i272];

        $f40 = $f38 * $f37;

        $f39 = 255.0F - f81;

        $f41 = $f40 * $f39;

        $f42 = $f41 / 255.0F;

        i279 = (int) $f42;

        $r23 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r24 = $r23[i272];

        $i107 = i270 + 256;

        $i108 = $i107 >> 1;

        i280 = $r24[$i108];

        $i109 = i280 >>> 20;

        $i110 = $i109 & 4080;

        $i111 = $i110 * i279;

        $i112 = $i111 >> 16;

        i281 = 0 + $i112;

        $i113 = i280 >>> 12;

        $i114 = $i113 & 4080;

        $i115 = $i114 * i279;

        $i116 = $i115 >> 16;

        i282 = 0 + $i116;

        $i117 = i280 >>> 4;

        $i118 = $i117 & 4080;

        $i119 = $i118 * i279;

        $i120 = $i119 >> 16;

        i283 = 0 + $i120;

        $i121 = i280 << 4;

        $i122 = $i121 & 4080;

        $i123 = $i122 * i279;

        $i124 = $i123 >> 16;

        i284 = 0 + $i124;

        i285 = i272 + 1;

        goto label28;

     label27:
        $f44 = (float) $i278;

        $r25 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f43 = $r25[i285];

        $f45 = $f44 * $f43;

        i286 = (int) $f45;

        $r26 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r27 = $r26[i285];

        i287 = $r27[128];

        $i125 = i287 >>> 20;

        $i126 = $i125 & 4080;

        $i127 = $i126 * i286;

        $i128 = $i127 >> 16;

        i281 = i281 + $i128;

        $i129 = i287 >>> 12;

        $i130 = $i129 & 4080;

        $i131 = $i130 * i286;

        $i132 = $i131 >> 16;

        i282 = i282 + $i132;

        $i133 = i287 >>> 4;

        $i134 = $i133 & 4080;

        $i135 = $i134 * i286;

        $i136 = $i135 >> 16;

        i283 = i283 + $i136;

        $i137 = i287 << 4;

        $i138 = $i137 & 4080;

        $i139 = $i138 * i286;

        $i140 = $i139 >> 16;

        i284 = i284 + $i140;

        i285 = i285 + 1;

     label28:
        if i285 < i273 goto label27;

        $f47 = (float) $i278;

        $r28 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f46 = $r28[i273];

        $f48 = $f47 * $f46;

        $f49 = $f48 * f82;

        $f50 = $f49 / 255.0F;

        i288 = (int) $f50;

        $r29 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r30 = $r29[i273];

        $i141 = i271 + 1;

        $i142 = $i141 >> 1;

        i289 = $r30[$i142];

        $i143 = i289 >>> 20;

        $i144 = $i143 & 4080;

        $i145 = $i144 * i288;

        $i146 = $i145 >> 16;

        i290 = i281 + $i146;

        $i147 = i289 >>> 12;

        $i148 = $i147 & 4080;

        $i149 = $i148 * i288;

        $i150 = $i149 >> 16;

        i291 = i282 + $i150;

        $i151 = i289 >>> 4;

        $i152 = $i151 & 4080;

        $i153 = $i152 * i288;

        $i154 = $i153 >> 16;

        i292 = i283 + $i154;

        $i155 = i289 << 4;

        $i156 = $i155 & 4080;

        $i157 = $i156 * i288;

        $i158 = $i157 >> 16;

        i293 = i284 + $i158;

        goto label42;

     label29:
        if z1 == 0 goto label30;

        $f32 = (float) $i278;

        $r19 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f31 = $r19[i272];

        $f34 = $f32 * $f31;

        $f33 = 255.0F - f81;

        $f35 = $f34 * $f33;

        $f36 = $f35 / 255.0F;

        i294 = (int) $f36;

        $r20 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r21 = $r20[i272];

        $i101 = i270 + 256;

        $i102 = $i101 >> 1;

        i295 = $r21[$i102];

        goto label31;

     label30:
        $f6 = (float) $i278;

        $r4 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f5 = $r4[i272];

        $f7 = $f6 * $f5;

        $f8 = $f7 * f81;

        $f9 = $f8 / 255.0F;

        i294 = (int) $f9;

        $r5 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r6 = $r5[i272];

        $i2 = i270 + 1;

        $i3 = $i2 >> 1;

        i295 = $r6[$i3];

     label31:
        $i4 = i295 >>> 20;

        $i5 = $i4 & 4080;

        $i6 = $i5 * i294;

        $i7 = $i6 >> 16;

        $i103 = 0 + $i7;

        $i8 = i295 >>> 12;

        $i9 = $i8 & 4080;

        $i10 = $i9 * i294;

        $i11 = $i10 >> 16;

        $i104 = 0 + $i11;

        $i12 = i295 >>> 4;

        $i13 = $i12 & 4080;

        $i14 = $i13 * i294;

        $i15 = $i14 >> 16;

        $i105 = 0 + $i15;

        $i16 = i295 << 4;

        $i17 = $i16 & 4080;

        $i18 = $i17 * i294;

        $i19 = $i18 >> 16;

        $i106 = 0 + $i19;

        if z2 == 0 goto label32;

        $f26 = (float) $i278;

        $r16 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f25 = $r16[i273];

        $f28 = $f26 * $f25;

        $f27 = 255.0F - f82;

        $f29 = $f28 * $f27;

        $f30 = $f29 / 255.0F;

        i296 = (int) $f30;

        $r17 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r18 = $r17[i273];

        $i99 = i271 + 256;

        $i100 = $i99 >> 1;

        i297 = $r18[$i100];

        goto label33;

     label32:
        $f11 = (float) $i278;

        $r7 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f10 = $r7[i273];

        $f12 = $f11 * $f10;

        $f13 = $f12 * f82;

        $f14 = $f13 / 255.0F;

        i296 = (int) $f14;

        $r8 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r9 = $r8[i273];

        $i20 = i271 + 1;

        $i21 = $i20 >> 1;

        i297 = $r9[$i21];

     label33:
        $i22 = i297 >>> 20;

        $i23 = $i22 & 4080;

        $i24 = $i23 * i296;

        $i25 = $i24 >> 16;

        i290 = $i103 + $i25;

        $i26 = i297 >>> 12;

        $i27 = $i26 & 4080;

        $i28 = $i27 * i296;

        $i29 = $i28 >> 16;

        i291 = $i104 + $i29;

        $i30 = i297 >>> 4;

        $i31 = $i30 & 4080;

        $i32 = $i31 * i296;

        $i33 = $i32 >> 16;

        i292 = $i105 + $i33;

        $i34 = i297 << 4;

        $i35 = $i34 & 4080;

        $i36 = $i35 * i296;

        $i37 = $i36 >> 16;

        i293 = $i106 + $i37;

        if z1 == 0 goto label34;

        i298 = i272 + 1;

        i299 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientsLength>;

        goto label35;

     label34:
        i298 = 0;

        i299 = i272;

     label35:
        i300 = i298;

        goto label37;

     label36:
        $f16 = (float) $i278;

        $r10 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f15 = $r10[i300];

        $f17 = $f16 * $f15;

        i301 = (int) $f17;

        $r11 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r12 = $r11[i300];

        i302 = $r12[128];

        $i38 = i302 >>> 20;

        $i39 = $i38 & 4080;

        $i40 = $i39 * i301;

        $i41 = $i40 >> 16;

        i290 = i290 + $i41;

        $i42 = i302 >>> 12;

        $i43 = $i42 & 4080;

        $i44 = $i43 * i301;

        $i45 = $i44 >> 16;

        i291 = i291 + $i45;

        $i46 = i302 >>> 4;

        $i47 = $i46 & 4080;

        $i48 = $i47 * i301;

        $i49 = $i48 >> 16;

        i292 = i292 + $i49;

        $i50 = i302 << 4;

        $i51 = $i50 & 4080;

        $i52 = $i51 * i301;

        $i53 = $i52 >> 16;

        i293 = i293 + $i53;

        i300 = i300 + 1;

     label37:
        if i300 < i299 goto label36;

        if z2 == 0 goto label38;

        i303 = i273 + 1;

        i304 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientsLength>;

        goto label39;

     label38:
        i303 = 0;

        i304 = i273;

     label39:
        i305 = i303;

        goto label41;

     label40:
        $f19 = (float) $i278;

        $r13 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: float[] normalizedIntervals>;

        $f18 = $r13[i305];

        $f20 = $f19 * $f18;

        i306 = (int) $f20;

        $r14 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int[][] gradients>;

        $r15 = $r14[i305];

        i307 = $r15[128];

        $i54 = i307 >>> 20;

        $i55 = $i54 & 4080;

        $i56 = $i55 * i306;

        $i57 = $i56 >> 16;

        i290 = i290 + $i57;

        $i58 = i307 >>> 12;

        $i59 = $i58 & 4080;

        $i60 = $i59 * i306;

        $i61 = $i60 >> 16;

        i291 = i291 + $i61;

        $i62 = i307 >>> 4;

        $i63 = $i62 & 4080;

        $i64 = $i63 * i306;

        $i65 = $i64 >> 16;

        i292 = i292 + $i65;

        $i66 = i307 << 4;

        $i67 = $i66 & 4080;

        $i68 = $i67 * i306;

        $i69 = $i68 >> 16;

        i293 = i293 + $i69;

        i305 = i305 + 1;

     label41:
        if i305 < i304 goto label40;

     label42:
        $i70 = i290 + 8;

        i266 = $i70 >> 4;

        $i71 = i291 + 8;

        i267 = $i71 >> 4;

        $i72 = i292 + 8;

        i268 = $i72 >> 4;

        $i73 = i293 + 8;

        i269 = $i73 >> 4;

     label43:
        $b308 = f21 cmpl 1.0F;

        if $b308 == 0 goto label44;

        $f22 = 1.0F - f21;

        $f23 = 65536.0F * $f22;

        i309 = (int) $f23;

        $i80 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage>;

        $i81 = $i80 >>> 24;

        $i82 = $i81 & 255;

        i310 = $i82 * i309;

        $i83 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage>;

        $i84 = $i83 >> 16;

        $i85 = $i84 & 255;

        i311 = $i85 * i309;

        $i86 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage>;

        $i87 = $i86 >> 8;

        $i88 = $i87 & 255;

        i312 = $i88 * i309;

        $i89 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: int gradientAverage>;

        $i90 = $i89 & 255;

        i313 = $i90 * i309;

        $f24 = f21 * 65536.0F;

        i314 = (int) $f24;

        $i91 = i266 * i314;

        $i92 = $i91 + i310;

        i266 = $i92 >> 16;

        $i93 = i267 * i314;

        $i94 = $i93 + i311;

        i267 = $i94 >> 16;

        $i95 = i268 * i314;

        $i96 = $i95 + i312;

        i268 = $i96 >> 16;

        $i97 = i269 * i314;

        $i98 = $i97 + i313;

        i269 = $i98 >> 16;

     label44:
        $i75 = i266 << 24;

        $i74 = i267 << 16;

        $i77 = $i75 | $i74;

        $i76 = i268 << 8;

        $i78 = $i77 | $i76;

        $i79 = $i78 | i269;

        return $i79;
    }

    private static int convertSRGBtoLinearRGB(int)
    {
        byte $b1;
        int i0, $i2, $i3;
        float $f0, f1, $f2, f3;
        double $d0, $d1, $d2, $d3;

        i0 := @parameter0: int;

        $f0 = (float) i0;

        f1 = $f0 / 255.0F;

        $b1 = f1 cmpg 0.04045F;

        $i3 = (int) $b1;

        if $i3 > 0 goto label1;

        f3 = f1 / 12.92F;

        goto label2;

     label1:
        $d0 = (double) f1;

        $d1 = $d0 + 0.055;

        $d2 = $d1 / 1.055;

        $d3 = staticinvoke <java.lang.Math: double pow(double,double)>($d2, 2.4);

        f3 = (float) $d3;

     label2:
        $f2 = f3 * 255.0F;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f2);

        return $i2;
    }

    private static int convertLinearRGBtoSRGB(int)
    {
        byte $b1;
        int i0, $i2, $i3;
        float $f0, f1, $f2, $f3, $f4, f5;
        double $d0, $d1;

        i0 := @parameter0: int;

        $f0 = (float) i0;

        f1 = $f0 / 255.0F;

        $b1 = f1 cmpg 0.0031308F;

        $i3 = (int) $b1;

        if $i3 > 0 goto label1;

        f5 = f1 * 12.92F;

        goto label2;

     label1:
        $d0 = (double) f1;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 0.4166666666666667);

        $f2 = (float) $d1;

        $f3 = 1.055F * $f2;

        f5 = $f3 - 0.055F;

     label2:
        $f4 = f5 * 255.0F;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f4);

        return $i2;
    }

    public final java.awt.image.Raster getRaster(int, int, int, int)
    {
        int[][] $r6;
        org.apache.batik.ext.awt.MultipleGradientPaintContext r0;
        java.awt.image.SampleModel $r8;
        java.awt.image.DataBufferInt $r5;
        int[] $r7;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.awt.image.SinglePixelPackedSampleModel $r9;
        boolean $z0;
        java.awt.image.ColorModel $r2, $r10, $r11;
        java.awt.image.WritableRaster r1, $r3;
        java.awt.image.DataBuffer $r4;

        r0 := @this: org.apache.batik.ext.awt.MultipleGradientPaintContext;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        if i0 == 0 goto label1;

        if i1 != 0 goto label2;

     label1:
        return null;

     label2:
        r1 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.WritableRaster saved>;

        if r1 == null goto label3;

        $i4 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();

        if $i4 < i0 goto label3;

        $i5 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();

        if $i5 >= i1 goto label4;

     label3:
        $r2 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel dataModel>;

        $r3 = staticinvoke <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.WritableRaster getCachedRaster(java.awt.image.ColorModel,int,int)>($r2, i0, i1);

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.WritableRaster saved> = $r3;

        $i6 = virtualinvoke $r3.<java.awt.image.Raster: int getMinX()>();

        $i7 = virtualinvoke $r3.<java.awt.image.Raster: int getMinY()>();

        r1 = virtualinvoke $r3.<java.awt.image.WritableRaster: java.awt.image.WritableRaster createWritableChild(int,int,int,int,int,int,int[])>($i6, $i7, i0, i1, 0, 0, null);

     label4:
        $r4 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r5 = (java.awt.image.DataBufferInt) $r4;

        $r6 = virtualinvoke $r5.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        $r7 = $r6[0];

        $i8 = virtualinvoke $r5.<java.awt.image.DataBuffer: int getOffset()>();

        $r8 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        $r9 = (java.awt.image.SinglePixelPackedSampleModel) $r8;

        $i9 = virtualinvoke $r9.<java.awt.image.SinglePixelPackedSampleModel: int getScanlineStride()>();

        $i10 = $i9 - i0;

        virtualinvoke r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: void fillRaster(int[],int,int,int,int,int,int)>($r7, $i8, $i10, i2, i3, i0, i1);

        $r10 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel dataModel>;

        $r11 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel model>;

        $z0 = virtualinvoke $r11.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.image.ColorModel coerceData(java.awt.image.WritableRaster,java.awt.image.ColorModel,boolean)>(r1, $r10, $z0);

        return r1;
    }

    protected abstract void fillRaster(int[], int, int, int, int, int, int);

    protected static final synchronized java.awt.image.WritableRaster getCachedRaster(java.awt.image.ColorModel, int, int)
    {
        java.awt.image.ColorModel r0, $r1;
        int $i0, $i1, i2, i3;
        java.awt.image.WritableRaster $r2, r6;
        java.lang.Object $r5;
        java.lang.ref.WeakReference $r3, $r4;

        r0 := @parameter0: java.awt.image.ColorModel;

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        $r1 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel cachedModel>;

        if r0 != $r1 goto label1;

        $r3 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.lang.ref.WeakReference cached>;

        if $r3 == null goto label1;

        $r4 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.lang.ref.WeakReference cached>;

        $r5 = virtualinvoke $r4.<java.lang.ref.Reference: java.lang.Object get()>();

        r6 = (java.awt.image.WritableRaster) $r5;

        if r6 == null goto label1;

        $i0 = virtualinvoke r6.<java.awt.image.Raster: int getWidth()>();

        if $i0 < i2 goto label1;

        $i1 = virtualinvoke r6.<java.awt.image.Raster: int getHeight()>();

        if $i1 < i3 goto label1;

        <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.lang.ref.WeakReference cached> = null;

        return r6;

     label1:
        if i2 >= 32 goto label2;

        i2 = 32;

     label2:
        if i3 >= 32 goto label3;

        i3 = 32;

     label3:
        $r2 = virtualinvoke r0.<java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>(i2, i3);

        return $r2;
    }

    protected static final synchronized void putCachedRaster(java.awt.image.ColorModel, java.awt.image.WritableRaster)
    {
        java.awt.image.ColorModel r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.awt.image.WritableRaster r2, r5;
        java.lang.Object $r4;
        java.lang.ref.WeakReference $r0, $r3, $r6;

        r1 := @parameter0: java.awt.image.ColorModel;

        r2 := @parameter1: java.awt.image.WritableRaster;

        $r0 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.lang.ref.WeakReference cached>;

        if $r0 == null goto label2;

        $r3 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.lang.ref.WeakReference cached>;

        $r4 = virtualinvoke $r3.<java.lang.ref.Reference: java.lang.Object get()>();

        r5 = (java.awt.image.WritableRaster) $r4;

        if r5 == null goto label2;

        $i0 = virtualinvoke r5.<java.awt.image.Raster: int getWidth()>();

        $i1 = virtualinvoke r5.<java.awt.image.Raster: int getHeight()>();

        $i2 = virtualinvoke r2.<java.awt.image.Raster: int getWidth()>();

        $i3 = virtualinvoke r2.<java.awt.image.Raster: int getHeight()>();

        if $i0 < $i2 goto label1;

        if $i1 < $i3 goto label1;

        return;

     label1:
        $i5 = $i0 * $i1;

        $i4 = $i2 * $i3;

        if $i5 < $i4 goto label2;

        return;

     label2:
        <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel cachedModel> = r1;

        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.lang.ref.WeakReference cached> = $r6;

        return;
    }

    public final void dispose()
    {
        java.awt.image.ColorModel $r3;
        java.awt.image.WritableRaster $r1, $r2;
        org.apache.batik.ext.awt.MultipleGradientPaintContext r0;

        r0 := @this: org.apache.batik.ext.awt.MultipleGradientPaintContext;

        $r1 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.WritableRaster saved>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel model>;

        $r2 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.WritableRaster saved>;

        staticinvoke <org.apache.batik.ext.awt.MultipleGradientPaintContext: void putCachedRaster(java.awt.image.ColorModel,java.awt.image.WritableRaster)>($r3, $r2);

        r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.WritableRaster saved> = null;

     label1:
        return;
    }

    public final java.awt.image.ColorModel getColorModel()
    {
        java.awt.image.ColorModel $r1;
        org.apache.batik.ext.awt.MultipleGradientPaintContext r0;

        r0 := @this: org.apache.batik.ext.awt.MultipleGradientPaintContext;

        $r1 = r0.<org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel model>;

        return $r1;
    }

    static void <clinit>()
    {
        java.awt.color.ColorSpace $r1, $r3, $r5, $r7;
        int[] $r8, $r9, $r10, $r11;
        int $i0, $i1, i2, $i4, $i6, $i8, $i10;
        java.awt.image.DirectColorModel $r12, $r13, $r14, $r15;

        <org.apache.batik.ext.awt.MultipleGradientPaintContext: int MAX_GRADIENT_ARRAY_SIZE> = 5000;

        <org.apache.batik.ext.awt.MultipleGradientPaintContext: int GRADIENT_SIZE_INDEX> = 255;

        <org.apache.batik.ext.awt.MultipleGradientPaintContext: int GRADIENT_SIZE> = 256;

        <org.apache.batik.ext.awt.MultipleGradientPaintContext: boolean DEBUG> = 0;

        $r12 = new java.awt.image.DirectColorModel;

        $r1 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1004);

        $i4 = (int) 65280;

        specialinvoke $r12.<java.awt.image.DirectColorModel: void <init>(java.awt.color.ColorSpace,int,int,int,int,int,boolean,int)>($r1, 24, 16711680, $i4, 255, 0, 0, 3);

        <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel lrgbmodel_NA> = $r12;

        $r13 = new java.awt.image.DirectColorModel;

        $r3 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1000);

        $i6 = (int) 65280;

        specialinvoke $r13.<java.awt.image.DirectColorModel: void <init>(java.awt.color.ColorSpace,int,int,int,int,int,boolean,int)>($r3, 24, 16711680, $i6, 255, 0, 0, 3);

        <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel srgbmodel_NA> = $r13;

        $r14 = new java.awt.image.DirectColorModel;

        $r5 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1004);

        $i8 = (int) 65280;

        specialinvoke $r14.<java.awt.image.DirectColorModel: void <init>(java.awt.color.ColorSpace,int,int,int,int,int,boolean,int)>($r5, 32, 16711680, $i8, 255, -16777216, 0, 3);

        <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel lrgbmodel_A> = $r14;

        $r15 = new java.awt.image.DirectColorModel;

        $r7 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1000);

        $i10 = (int) 65280;

        specialinvoke $r15.<java.awt.image.DirectColorModel: void <init>(java.awt.color.ColorSpace,int,int,int,int,int,boolean,int)>($r7, 32, 16711680, $i10, 255, -16777216, 0, 3);

        <org.apache.batik.ext.awt.MultipleGradientPaintContext: java.awt.image.ColorModel srgbmodel_A> = $r15;

        $r8 = newarray (int)[256];

        <org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] SRGBtoLinearRGB> = $r8;

        $r9 = newarray (int)[256];

        <org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] LinearRGBtoSRGB> = $r9;

        i2 = 0;

        goto label2;

     label1:
        $r10 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] SRGBtoLinearRGB>;

        $i0 = staticinvoke <org.apache.batik.ext.awt.MultipleGradientPaintContext: int convertSRGBtoLinearRGB(int)>(i2);

        $r10[i2] = $i0;

        $r11 = <org.apache.batik.ext.awt.MultipleGradientPaintContext: int[] LinearRGBtoSRGB>;

        $i1 = staticinvoke <org.apache.batik.ext.awt.MultipleGradientPaintContext: int convertLinearRGBtoSRGB(int)>(i2);

        $r11[i2] = $i1;

        i2 = i2 + 1;

     label2:
        if i2 < 256 goto label1;

        return;
    }
}
