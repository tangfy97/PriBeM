public abstract class com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl extends java.lang.Object implements com.sun.xml.bind.v2.runtime.output.XmlOutput
{
    protected int[] nsUriIndex2prefixIndex;
    protected com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext;
    protected com.sun.xml.bind.v2.runtime.XMLSerializer serializer;

    public void <init>()
    {
        com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void startDocument(com.sun.xml.bind.v2.runtime.XMLSerializer, boolean, int[], com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r3;
        int[] r1;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl r2;
        com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl r0;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl;

        r3 := @parameter0: com.sun.xml.bind.v2.runtime.XMLSerializer;

        z0 := @parameter1: boolean;

        r1 := @parameter2: int[];

        r2 := @parameter3: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl;

        r0.<com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl: int[] nsUriIndex2prefixIndex> = r1;

        r0.<com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext> = r2;

        r0.<com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer> = r3;

        return;
    }

    public void endDocument(boolean) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl r0;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl;

        z0 := @parameter0: boolean;

        r0.<com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl: com.sun.xml.bind.v2.runtime.XMLSerializer serializer> = null;

        return;
    }

    public void beginStartTag(com.sun.xml.bind.v2.runtime.Name) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        short $s0;
        com.sun.xml.bind.v2.runtime.Name r1;
        int[] $r2;
        int $i1, $i2;
        com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl r0;
        java.lang.String $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.Name;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl: int[] nsUriIndex2prefixIndex>;

        $s0 = r1.<com.sun.xml.bind.v2.runtime.Name: short nsUriIndex>;

        $i2 = (int) $s0;

        $i1 = $r2[$i2];

        $r3 = r1.<com.sun.xml.bind.v2.runtime.Name: java.lang.String localName>;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl: void beginStartTag(int,java.lang.String)>($i1, $r3);

        return;
    }

    public abstract void beginStartTag(int, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException;

    public void attribute(com.sun.xml.bind.v2.runtime.Name, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.Name r0;
        com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl r1;
        short s0;
        int[] $r2;
        int $i1, $i2, $i4, $i6, $i7;
        java.lang.String r3, $r4, $r5;

        r1 := @this: com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.Name;

        r3 := @parameter1: java.lang.String;

        s0 = r0.<com.sun.xml.bind.v2.runtime.Name: short nsUriIndex>;

        $i2 = (int) s0;

        $i4 = (int) -1;

        if $i2 != $i4 goto label1;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.Name: java.lang.String localName>;

        $i6 = (int) -1;

        virtualinvoke r1.<com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl: void attribute(int,java.lang.String,java.lang.String)>($i6, $r5, r3);

        goto label2;

     label1:
        $r2 = r1.<com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl: int[] nsUriIndex2prefixIndex>;

        $i7 = (int) s0;

        $i1 = $r2[$i7];

        $r4 = r0.<com.sun.xml.bind.v2.runtime.Name: java.lang.String localName>;

        virtualinvoke r1.<com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl: void attribute(int,java.lang.String,java.lang.String)>($i1, $r4, r3);

     label2:
        return;
    }

    public abstract void attribute(int, java.lang.String, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException;

    public abstract void endStartTag() throws java.io.IOException, org.xml.sax.SAXException;

    public void endTag(com.sun.xml.bind.v2.runtime.Name) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException
    {
        short $s0;
        com.sun.xml.bind.v2.runtime.Name r1;
        int[] $r2;
        int $i1, $i2;
        com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl r0;
        java.lang.String $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.Name;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl: int[] nsUriIndex2prefixIndex>;

        $s0 = r1.<com.sun.xml.bind.v2.runtime.Name: short nsUriIndex>;

        $i2 = (int) $s0;

        $i1 = $r2[$i2];

        $r3 = r1.<com.sun.xml.bind.v2.runtime.Name: java.lang.String localName>;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl: void endTag(int,java.lang.String)>($i1, $r3);

        return;
    }

    public abstract void endTag(int, java.lang.String) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException;
}
