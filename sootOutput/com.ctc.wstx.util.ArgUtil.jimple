public final class com.ctc.wstx.util.ArgUtil extends java.lang.Object
{

    private void <init>()
    {
        com.ctc.wstx.util.ArgUtil r0;

        r0 := @this: com.ctc.wstx.util.ArgUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean convertToBoolean(java.lang.String, java.lang.Object)
    {
        java.lang.StringBuffer $r2, $r3, $r5, $r6, $r8, $r9, $r13, $r14, $r15, $r16;
        java.lang.Boolean $r18;
        java.lang.String r7, $r10, r11, $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalArgumentException $r1, $r12;
        java.lang.Object r0;
        java.lang.Class $r4;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = r0 instanceof java.lang.Boolean;

        if $z0 == 0 goto label2;

        $r18 = (java.lang.Boolean) r0;

        $z4 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>();

        return $z4;

     label2:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label5;

        r11 = (java.lang.String) r0;

        $z2 = virtualinvoke r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z2 == 0 goto label3;

        return 0;

     label3:
        $z3 = virtualinvoke r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z3 == 0 goto label4;

        return 1;

     label4:
        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid String value for property \'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': expected Boolean value.");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid value type (");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") for property \'");

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': expected Boolean value.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r1;
    }

    public static int convertToInt(java.lang.String, java.lang.Object, int)
    {
        boolean $z0, $z1;
        java.lang.StringBuffer $r2, $r3, $r5, $r6, $r8, $r9, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r25, $r26, $r27, $r28;
        int i0, i1;
        java.lang.String r7, $r10, $r11, $r21, $r29;
        java.lang.Number $r22;
        java.lang.NumberFormatException $r23;
        java.lang.IllegalArgumentException $r1, $r12, $r24;
        java.lang.Object r0;
        java.lang.Class $r4;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        if r0 != null goto label1;

        i1 = 0;

        goto label7;

     label1:
        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label2;

        $r22 = (java.lang.Number) r0;

        i1 = virtualinvoke $r22.<java.lang.Number: int intValue()>();

        goto label7;

     label2:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label6;

     label3:
        $r11 = (java.lang.String) r0;

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

     label4:
        goto label7;

     label5:
        $r23 := @caughtexception;

        $r24 = new java.lang.IllegalArgumentException;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid String value for property \'");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': expected a number (Integer).");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29);

        throw $r24;

     label6:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid value type (");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") for property \'");

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': expected Integer value.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r1;

     label7:
        if i1 >= i0 goto label8;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid numeric value (");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") for property \'");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': minimum is ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r12;

     label8:
        return i1;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }
}
