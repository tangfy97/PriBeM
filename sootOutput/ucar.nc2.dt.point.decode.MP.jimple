public class ucar.nc2.dt.point.decode.MP extends java.lang.Object
{
    public static final java.util.regex.Pattern N9999;
    public static final java.util.regex.Pattern ACFT;
    public static final java.util.regex.Pattern AUTOS;
    public static final java.util.regex.Pattern automatic_report;
    public static final java.util.regex.Pattern B_CR;
    public static final java.util.regex.Pattern B_metar;
    public static final java.util.regex.Pattern FIRST;
    public static final java.util.regex.Pattern FZRANO;
    public static final java.util.regex.Pattern LAST;
    public static final java.util.regex.Pattern NOSPECI;
    public static final java.util.regex.Pattern PNO;
    public static final java.util.regex.Pattern station;
    public static final java.util.regex.Pattern ddhhmmZ;
    public static final java.util.regex.Pattern CAVOKS;
    public static final java.util.regex.Pattern altimeter;
    public static final java.util.regex.Pattern CIG;
    public static final java.util.regex.Pattern CIG_EST;
    public static final java.util.regex.Pattern CIGNO;
    public static final java.util.regex.Pattern CIG_RY;
    public static final java.util.regex.Pattern CLR_or_SKC;
    public static final java.util.regex.Pattern min_max_wind_dir;
    public static final java.util.regex.Pattern visibility_direction;
    public static final java.util.regex.Pattern visibility2;
    public static final java.util.regex.Pattern visibility3;
    public static final java.util.regex.Pattern visibility1;
    public static final java.util.regex.Pattern hourly_precip;
    public static final java.util.regex.Pattern wind_direction_speed;
    static final java.util.regex.Pattern Temperature;
    static final java.util.regex.Pattern Temperature_tenths;
    public static final java.util.regex.Pattern COR;
    public static final java.util.regex.Pattern cloud_cover;
    public static final java.util.regex.Pattern cloud_height;
    static final java.util.regex.Pattern WeatherObs;
    static final java.util.regex.Pattern WeatherOther;
    static final java.util.regex.Pattern WeatherPrecip;
    public static final java.util.regex.Pattern GR;
    public static final java.util.regex.Pattern GR1;
    public static final java.util.regex.Pattern GR2;
    public static final java.util.regex.Pattern GR3;
    public static final java.util.regex.Pattern GR4;
    public static final java.util.regex.Pattern Lightning;
    public static final java.util.regex.Pattern NIL;
    public static final java.util.regex.Pattern variableSky;
    public static final java.util.regex.Pattern Visibility2ndSite1;
    public static final java.util.regex.Pattern Visibility2ndSite2;
    public static final java.util.regex.Pattern Visibility2ndSite3;
    public static final java.util.regex.Pattern sectorVisibility1;
    public static final java.util.regex.Pattern sectorVisibility2;
    public static final java.util.regex.Pattern sectorVisibility3;
    public static final java.util.regex.Pattern surfaceVisibility1;
    public static final java.util.regex.Pattern surfaceVisibility2;
    public static final java.util.regex.Pattern surfaceVisibility3;
    public static final java.util.regex.Pattern towerVisibility1;
    public static final java.util.regex.Pattern towerVisibility2;
    public static final java.util.regex.Pattern towerVisibility3;
    public static final java.util.regex.Pattern variableVisibility1;
    public static final java.util.regex.Pattern variableVisibility2;
    public static final java.util.regex.Pattern variableVisibility3;
    public static final java.util.regex.Pattern variableVisibility4;
    public static final java.util.regex.Pattern variableVisibility5;
    public static final java.util.regex.Pattern variableVisibility6;
    public static final java.util.regex.Pattern visibilityKM;
    public static final java.util.regex.Pattern visibilitySM;
    public static final java.util.regex.Pattern visibilitySMKM;
    public static final java.util.regex.Pattern FROPA;
    public static final java.util.regex.Pattern NOSIG;
    public static final java.util.regex.Pattern PWINO;
    public static final java.util.regex.Pattern PRESFR;
    public static final java.util.regex.Pattern PRESRR;
    public static final java.util.regex.Pattern SLPNO;
    public static final java.util.regex.Pattern SLP;
    public static final java.util.regex.Pattern TSNO;
    public static final java.util.regex.Pattern peak_wind_speed;
    public static final java.util.regex.Pattern runway;
    public static final java.util.regex.Pattern REMARKS;
    public static final java.util.regex.Pattern RVRNO;
    public static final java.util.regex.Pattern spaces;
    public static final java.util.regex.Pattern surface_visibility1;
    public static final java.util.regex.Pattern surface_visibility2;
    public static final java.util.regex.Pattern surface_visibility3;
    public static final java.util.regex.Pattern SNINCR;
    public static final java.util.regex.Pattern snowDepth;
    public static final java.util.regex.Pattern vertical_VIS;
    public static final java.util.regex.Pattern maintenace;
    public static final java.util.regex.Pattern maxTemperature;
    public static final java.util.regex.Pattern minTemperature;
    public static final java.util.regex.Pattern maxMinTemp24;
    public static final java.util.regex.Pattern peakWind;
    public static final java.util.regex.Pattern precipitation;
    public static final java.util.regex.Pattern precipitation24;
    public static final java.util.regex.Pattern pressureTendency;
    public static final java.util.regex.Pattern sunShine;
    public static final java.util.regex.Pattern tornado;
    public static final java.util.regex.Pattern tornadoTime;
    public static final java.util.regex.Pattern tornadoLocation;
    public static final java.util.regex.Pattern tornadoDirection;
    public static final java.util.regex.Pattern VIRGA;
    public static final java.util.regex.Pattern waterEquiv;
    public static final java.util.regex.Pattern windShift;

    public void <init>()
    {
        ucar.nc2.dt.point.decode.MP r0;

        r0 := @this: ucar.nc2.dt.point.decode.MP;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" 9999\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern N9999> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" \\(?ACFT( |_)?MSHP\\)?\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern ACFT> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" AUTO\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern AUTOS> = $r2;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (A01|A01A|A02|A02A|AO1|AO1A|AO2|AO2A|AOA)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern automatic_report> = $r3;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^\\n");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern B_CR> = $r4;

        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(METAR|SPECI|TESTM|TESTS) ");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern B_metar> = $r5;

        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" FIRST\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern FIRST> = $r6;

        $r7 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" FZRANO\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern FZRANO> = $r7;

        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" LAST\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern LAST> = $r8;

        $r9 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" NOSPECI\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern NOSPECI> = $r9;

        $r10 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" PNO\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern PNO> = $r10;

        $r11 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(\\w{4})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern station> = $r11;

        $r12 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (\\d{2})(\\d{2})(\\d{2})Z\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern ddhhmmZ> = $r12;

        $r13 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" CAVOK\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern CAVOKS> = $r13;

        $r14 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (A|Q)(\\d{4}\\.?\\d?)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern altimeter> = $r14;

        $r15 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" CIG (\\d{1,4})V(\\d{1,4})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern CIG> = $r15;

        $r16 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" CIG(E)? (\\d{3})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern CIG_EST> = $r16;

        $r17 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" CIGNO\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern CIGNO> = $r17;

        $r18 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" CIG (\\d{3}) (RY\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern CIG_RY> = $r18;

        $r19 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (CLR|SKC)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern CLR_or_SKC> = $r19;

        $r20 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (\\d{3})V(\\d{3})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern min_max_wind_dir> = $r20;

        $r21 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (\\d{4})((NE)|(NW)|(SE)|(SW)|(N)|(S)|(E)|(W))\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern visibility_direction> = $r21;

        $r22 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (\\d{1,3})/(\\d{1,3})(KM|SM)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern visibility2> = $r22;

        $r23 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" P?(\\d{1,4})(KM|SM)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern visibility3> = $r23;

        $r24 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (\\d{1,4}) (\\d{1,3})/(\\d{1,3})(SM|KM)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern visibility1> = $r24;

        $r25 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" P ?(\\d{1,5})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern hourly_precip> = $r25;

        $r26 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (E|W|N|S)?(\\d{3}|VRB)(\\d{2,3})(G)?(\\d{2,3})?(KMH|KT|MPS|MPH)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern wind_direction_speed> = $r26;

        $r27 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(M|-)?(\\d{2})/(M|-)?(\\d{2})?\\s*");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern Temperature> = $r27;

        $r28 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("T(0|1)(\\d{3})(0|1)?(\\d{3})?\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern Temperature_tenths> = $r28;

        $r29 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" COR\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern COR> = $r29;

        $r30 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (\\+|-)?(OVC|SCT|FEW|BKN)(\\d{3})(\\w{1,3})?\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern cloud_cover> = $r30;

        $r31 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" 8/(\\d|/)(\\d|/)(\\d|/)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern cloud_height> = $r31;

        $r32 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\+|-|VC|PR| )(MI|BC|DR|BL|SH|TS|FZ)?(BR|FG|FU|VA|DU|SA|HZ|PY)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern WeatherObs> = $r32;

        $r33 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\+|-|VC|PR| )(MI|BC|DR|BL|SH|TS|FZ)?(PO|SQ|FC|SS|DS)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern WeatherOther> = $r33;

        $r34 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\+|-|VC|PR| )(MI|BC|DR|BL|SH|TS|FZ)?(DZ|RA|SN|SG|IC|PE|PL|GR|GS|UP)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern WeatherPrecip> = $r34;

        $r35 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" GS\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern GR> = $r35;

        $r36 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" GR M1/4\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern GR1> = $r36;

        $r37 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" GR (\\d{1,3}) (\\d{1,2})/(\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern GR2> = $r37;

        $r38 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" GR (\\d{1,2})/(\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern GR3> = $r38;

        $r39 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" GR (\\d{1,3})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern GR4> = $r39;

        $r40 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (((OCNL|FRQ|CNS) )?LTG\\s?(CG|IC|CC|CA)?\\s?(DSNT|AP|VCY STN|VCNTY STN)?\\s?(NE|NW|SE|SW|N|S|E|W)?)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern Lightning> = $r40;

        $r41 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("NIL\\s*");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern NIL> = $r41;

        $r42 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (FEW|SCT|BKN|OVC)(\\d{3})? V (FEW|SCT|BKN|OVC)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern variableSky> = $r42;

        $r43 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (VIS|VSBY) (\\d{1,3}) (\\d{1,2})/(\\d{1,2}) (RY\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern Visibility2ndSite1> = $r43;

        $r44 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (VIS|VSBY) (\\d{1,3}) (RY\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern Visibility2ndSite2> = $r44;

        $r45 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (VIS|VSBY) (\\d{1,2})/(\\d{1,2}) (RY\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern Visibility2ndSite3> = $r45;

        $r46 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (VIS|VSBY) (NE|NW|SE|SW|N|S|E|W) (\\d{1,3}) (\\d{1,2})/(\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern sectorVisibility1> = $r46;

        $r47 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (VIS|VSBY) (NE|NW|SE|SW|N|S|E|W) (\\d{1,2})/(\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern sectorVisibility2> = $r47;

        $r48 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (VIS|VSBY) (NE|NW|SE|SW|N|S|E|W) (\\d{1,3})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern sectorVisibility3> = $r48;

        $r49 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" SFC (VIS|VSBY) (\\d{1,3}) (\\d{1,2})/(\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern surfaceVisibility1> = $r49;

        $r50 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" SFC (VIS|VSBY) (\\d{1,2})/(\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern surfaceVisibility2> = $r50;

        $r51 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" SFC (VIS|VSBY) (\\d{1,3})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern surfaceVisibility3> = $r51;

        $r52 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" TWR (VIS|VSBY) (\\d{1,3}) (\\d{1,2})/(\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern towerVisibility1> = $r52;

        $r53 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" TWR (VIS|VSBY) (\\d{1,2})/(\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern towerVisibility2> = $r53;

        $r54 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" TWR (VIS|VSBY) (\\d{1,3})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern towerVisibility3> = $r54;

        $r55 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (VIS|VSBY) (\\d{1,3}) (\\d{1,2})/(\\d{1,2})V(\\d{1,3}) (\\d{1,2})/(\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern variableVisibility1> = $r55;

        $r56 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (VIS|VSBY) (\\d{1,3})V(\\d{1,3}) (\\d{1,2})/(\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern variableVisibility2> = $r56;

        $r57 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (VIS|VSBY) (\\d{1,2})/(\\d{1,2})V(\\d{1,3}) (\\d{1,2})/(\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern variableVisibility3> = $r57;

        $r58 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (VIS|VSBY) (\\d{1,3}) (\\d{1,2})/(\\d{1,2})V(\\d{1,3})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern variableVisibility4> = $r58;

        $r59 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (VIS|VSBY) (\\d{1,3})V(\\d{1,3})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern variableVisibility5> = $r59;

        $r60 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (VIS|VSBY) (\\d{1,2})/(\\d{1,2})V(\\d{1,3})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern variableVisibility6> = $r60;

        $r61 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" M1/4KM\\s+|<1/4KM\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern visibilityKM> = $r61;

        $r62 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" M1/4SM\\s+|<1/4SM\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern visibilitySM> = $r62;

        $r63 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (\\d{1,4}) (\\d{1,3})/(\\d{1,3})(SM|KM)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern visibilitySMKM> = $r63;

        $r64 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" FROPA\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern FROPA> = $r64;

        $r65 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" NOSIG\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern NOSIG> = $r65;

        $r66 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" PWINO\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern PWINO> = $r66;

        $r67 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" PRESFR/?\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern PRESFR> = $r67;

        $r68 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" PRESRR/?\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern PRESRR> = $r68;

        $r69 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" SLPNO\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern SLPNO> = $r69;

        $r70 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" SLP\\s?(\\d{3})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern SLP> = $r70;

        $r71 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" TSNO\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern TSNO> = $r71;

        $r72 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" PK WND\\s+(\\d{3})(\\d{1,3})/(\\d\\d)?(\\d\\d)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern peak_wind_speed> = $r72;

        $r73 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (R(\\d{2})(R|RR|L|LL|C)?/(M|P)?(\\d{1,4})V?(M|P)?(\\d{1,4})?(FT|N|D)?)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern runway> = $r73;

        $r74 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(RMK|REMARKS)");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern REMARKS> = $r74;

        $r75 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" RVRNO\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern RVRNO> = $r75;

        $r76 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern spaces> = $r76;

        $r77 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" SFC (VIS|VSBY) (\\d{1,2})/(\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern surface_visibility1> = $r77;

        $r78 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" SFC (VIS|VSBY) (\\d{1,3}) (\\d{1,2})/(\\d{1,2})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern surface_visibility2> = $r78;

        $r79 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" SFC (VIS|VSBY) (\\d{1,3})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern surface_visibility3> = $r79;

        $r80 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" SNINCR (\\d{1,3})/(\\d{1,3})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern SNINCR> = $r80;

        $r81 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" 4/(\\d{1,3})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern snowDepth> = $r81;

        $r82 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" VV(\\d{3})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern vertical_VIS> = $r82;

        $r83 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" \\$\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern maintenace> = $r83;

        $r84 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" 1(0|1|/)(\\d{3}|///)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern maxTemperature> = $r84;

        $r85 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" 2(0|1|/)(\\d{3}|///)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern minTemperature> = $r85;

        $r86 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" 4(0|1|/)(\\d{3}|///)(0|1|/)(\\d{3}|///)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern maxMinTemp24> = $r86;

        $r87 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" PK WND (\\d{3})(\\d{1,3})/(\\d\\d)?(\\d\\d)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern peakWind> = $r87;

        $r88 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" 6(\\d{4}|////)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern precipitation> = $r88;

        $r89 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" 7(\\d{4}|////)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern precipitation24> = $r89;

        $r90 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" 5(0|1|2|3|4|5|6|7|8)(\\d{3}|///)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern pressureTendency> = $r90;

        $r91 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" 98(\\d{1,3}|///)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern sunShine> = $r91;

        $r92 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (TORNADO\\w{0,2}|WATERSPOUTS.*|FUNNEL CLOUDS.*)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern tornado> = $r92;

        $r93 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (B|E)(\\d\\d)?(\\d\\d)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern tornadoTime> = $r93;

        $r94 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (DSNT|VCY STN|VC STN|VCY|VC)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern tornadoLocation> = $r94;

        $r95 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" (NE|NW|SE|SW|N|S|E|W)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern tornadoDirection> = $r95;

        $r96 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" VIRGA( DSNT)?( NE| NW| SE| SW| N| S| E| W)?\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern VIRGA> = $r96;

        $r97 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" 933(\\d{3})\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern waterEquiv> = $r97;

        $r98 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(" WSHFT (\\d\\d)?(\\d\\d)\\s+");

        <ucar.nc2.dt.point.decode.MP: java.util.regex.Pattern windShift> = $r98;

        return;
    }
}
