public class org.apache.xmlbeans.impl.jam.internal.JamServiceImpl extends java.lang.Object implements org.apache.xmlbeans.impl.jam.JamService
{
    private org.apache.xmlbeans.impl.jam.internal.elements.ElementContext mContext;
    private java.lang.String[] mClassNames;

    public void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext, java.lang.String[])
    {
        org.apache.xmlbeans.impl.jam.internal.JamServiceImpl r0;
        java.lang.String[] r2;
        java.lang.IllegalArgumentException $r3, $r4;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamServiceImpl;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext;

        r2 := @parameter1: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null jcl");

        throw $r4;

     label1:
        if r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null classes");

        throw $r3;

     label2:
        r0.<org.apache.xmlbeans.impl.jam.internal.JamServiceImpl: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext mContext> = r1;

        r0.<org.apache.xmlbeans.impl.jam.internal.JamServiceImpl: java.lang.String[] mClassNames> = r2;

        return;
    }

    public org.apache.xmlbeans.impl.jam.JamClassLoader getClassLoader()
    {
        org.apache.xmlbeans.impl.jam.JamClassLoader $r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext $r1;
        org.apache.xmlbeans.impl.jam.internal.JamServiceImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamServiceImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.JamServiceImpl: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext mContext>;

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.jam.internal.elements.ElementContext: org.apache.xmlbeans.impl.jam.JamClassLoader getClassLoader()>();

        return $r2;
    }

    public java.lang.String[] getClassNames()
    {
        java.lang.String[] $r1;
        org.apache.xmlbeans.impl.jam.internal.JamServiceImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamServiceImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.JamServiceImpl: java.lang.String[] mClassNames>;

        return $r1;
    }

    public org.apache.xmlbeans.impl.jam.JamClassIterator getClasses()
    {
        org.apache.xmlbeans.impl.jam.JamClassIterator $r0;
        org.apache.xmlbeans.impl.jam.JamClassLoader $r2;
        org.apache.xmlbeans.impl.jam.internal.JamServiceImpl r1;
        java.lang.String[] $r3;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.JamServiceImpl;

        $r0 = new org.apache.xmlbeans.impl.jam.JamClassIterator;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.JamServiceImpl: org.apache.xmlbeans.impl.jam.JamClassLoader getClassLoader()>();

        $r3 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.JamServiceImpl: java.lang.String[] getClassNames()>();

        specialinvoke $r0.<org.apache.xmlbeans.impl.jam.JamClassIterator: void <init>(org.apache.xmlbeans.impl.jam.JamClassLoader,java.lang.String[])>($r2, $r3);

        return $r0;
    }

    public org.apache.xmlbeans.impl.jam.JClass[] getAllClasses()
    {
        org.apache.xmlbeans.impl.jam.internal.JamServiceImpl r0;
        java.lang.String[] $r1, $r4;
        org.apache.xmlbeans.impl.jam.JClass $r6;
        org.apache.xmlbeans.impl.jam.JamClassLoader $r3;
        int $i0, $i1, i2;
        org.apache.xmlbeans.impl.jam.JClass[] r2;
        java.lang.String $r5;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamServiceImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.JamServiceImpl: java.lang.String[] mClassNames>;

        $i0 = lengthof $r1;

        r2 = newarray (org.apache.xmlbeans.impl.jam.JClass)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label2;

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.JamServiceImpl: org.apache.xmlbeans.impl.jam.JamClassLoader getClassLoader()>();

        $r4 = r0.<org.apache.xmlbeans.impl.jam.internal.JamServiceImpl: java.lang.String[] mClassNames>;

        $r5 = $r4[i2];

        $r6 = interfaceinvoke $r3.<org.apache.xmlbeans.impl.jam.JamClassLoader: org.apache.xmlbeans.impl.jam.JClass loadClass(java.lang.String)>($r5);

        r2[i2] = $r6;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r2;
    }

    public void setClassNames(java.lang.String[])
    {
        java.lang.String[] r1;
        org.apache.xmlbeans.impl.jam.internal.JamServiceImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamServiceImpl;

        r1 := @parameter0: java.lang.String[];

        r0.<org.apache.xmlbeans.impl.jam.internal.JamServiceImpl: java.lang.String[] mClassNames> = r1;

        return;
    }
}
