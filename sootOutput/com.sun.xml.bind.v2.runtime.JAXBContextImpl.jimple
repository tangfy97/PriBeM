public final class com.sun.xml.bind.v2.runtime.JAXBContextImpl extends com.sun.xml.bind.api.JAXBRIContext
{
    private final java.util.Map bridges;
    private static volatile javax.xml.transform.sax.SAXTransformerFactory tf;
    private static javax.xml.parsers.DocumentBuilder db;
    private final com.sun.xml.bind.v2.util.QNameMap rootMap;
    private final java.util.HashMap typeMap;
    private final java.util.Map beanInfoMap;
    protected java.util.Map beanInfos;
    private final java.util.Map elements;
    public final com.sun.istack.Pool marshallerPool;
    public final com.sun.istack.Pool unmarshallerPool;
    public com.sun.xml.bind.v2.runtime.NameBuilder nameBuilder;
    public final com.sun.xml.bind.v2.runtime.NameList nameList;
    private final java.lang.String defaultNsUri;
    private final java.lang.Class[] classes;
    protected final boolean c14nSupport;
    public final boolean xmlAccessorFactorySupport;
    public final boolean allNillable;
    public final boolean retainPropertyInfo;
    public final boolean supressAccessorWarnings;
    public final boolean improvedXsiTypeHandling;
    public final boolean disableSecurityProcessing;
    private java.lang.ref.WeakReference typeInfoSetCache;
    private com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader annotationReader;
    private boolean hasSwaRef;
    private final java.util.Map subclassReplacements;
    public final boolean fastBoot;
    private java.util.Set xmlNsSet;
    private com.sun.xml.bind.v2.runtime.output.Encoded[] utf8nameTable;
    private static final java.util.Comparator QNAME_COMPARATOR;
    static final boolean $assertionsDisabled;

    public java.util.Set getXmlNsSet()
    {
        java.util.Set $r1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Set xmlNsSet>;

        return $r1;
    }

    private void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder) throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.runtime.InternalBridge r162;
        com.sun.xml.bind.v2.runtime.CompositeStructureBeanInfo $r40;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader $r12, $r102;
        java.util.Map $r13, $r24, $r27, $r30, $r33, $r39, $r41, $r43, $r46, $r53, $r67, $r79, $r81, $r90, $r94, $r95, $r136, r154;
        java.lang.StringBuilder $r16, $r19, $r20;
        javax.xml.bind.'annotation'.XmlSchema r150;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl$1 $r7;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl$2 $r8;
        com.sun.xml.bind.v2.runtime.Name $r64;
        java.util.LinkedHashMap $r1, $r4, $r5, $r6, $r23, $r93;
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet $r22;
        java.lang.Class[] $r14;
        com.sun.xml.bind.v2.model.core.Adapter $r75, $r76, r159;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r72, $r121, $r127, r155, r163;
        com.sun.xml.bind.v2.runtime.LeafBeanInfoImpl $r135;
        com.sun.xml.bind.v2.model.runtime.RuntimeEnumLeafInfo r145;
        java.lang.SecurityException $r142;
        com.sun.xml.bind.v2.runtime.ValueListBeanInfoImpl $r66;
        java.util.Collection $r15, $r28, $r31, $r44, $r54, $r105, $r122, $r128, $r138;
        java.lang.'annotation'.Annotation $r58, $r59, $r61, $r104;
        javax.xml.bind.'annotation'.XmlNs[] $r113, $r114, $r117;
        java.util.HashSet $r119;
        int $i0;
        com.sun.xml.bind.v2.model.nav.ReflectionNavigator $r49;
        com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl $r38, $r86;
        java.lang.Class $r17, $r70, $r77, $r137, $r153, r161;
        java.lang.Object $r56, $r57, $r69, $r73, $r78, $r80, $r82, $r83, $r84, $r85, $r89, $r91, $r98, $r99, $r103, $r107, $r110, $r120, $r124, $r126, $r132, $r134, $r140;
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl $r101;
        com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo r152;
        java.util.Set $r34, $r47, $r115, $r116;
        com.sun.xml.bind.v2.model.runtime.RuntimeNonElement $r42;
        javax.xml.namespace.QName $r62, $r92, $r97, $r112, $r131, r144, r146, r148, r151;
        com.sun.xml.bind.api.TypeReference r157;
        com.sun.xml.bind.v2.runtime.BridgeAdapter $r68;
        java.lang.String $r11, $r18, $r21;
        java.util.Map$Entry r149, r156;
        com.sun.xml.bind.v2.runtime.NameBuilder $r9, $r51, $r63;
        com.sun.xml.bind.v2.runtime.NameList $r52;
        javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter r158;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, z19, $z20, $z21, $z22;
        com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl r143;
        java.util.List $r25, $r118;
        java.lang.reflect.Type $r60, $r74;
        java.util.HashMap $r3, $r108, $r125, $r133, $r141;
        java.lang.Iterable $r36;
        com.sun.xml.bind.v2.util.QNameMap $r2, $r96, $r109, $r130;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;
        com.sun.xml.bind.v2.model.runtime.RuntimeArrayInfo r147;
        java.util.Iterator $r26, $r29, $r32, $r35, $r37, $r45, $r48, $r50, $r55, $r106, $r123, $r129, $r139;
        com.sun.xml.bind.v2.runtime.BridgeImpl $r65, $r71;
        javax.xml.bind.'annotation'.XmlList r160;
        com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo $r87, $r88, $r100, $r111;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder r10;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r10 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder;

        specialinvoke r0.<com.sun.xml.bind.api.JAXBRIContext: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map bridges> = $r1;

        $r2 = new com.sun.xml.bind.v2.util.QNameMap;

        specialinvoke $r2.<com.sun.xml.bind.v2.util.QNameMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.util.QNameMap rootMap> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.HashMap typeMap> = $r3;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfoMap> = $r4;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfos> = $r5;

        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map elements> = $r6;

        $r7 = new com.sun.xml.bind.v2.runtime.JAXBContextImpl$1;

        specialinvoke $r7.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$1: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r0);

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.istack.Pool marshallerPool> = $r7;

        $r8 = new com.sun.xml.bind.v2.runtime.JAXBContextImpl$2;

        specialinvoke $r8.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$2: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r0);

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.istack.Pool unmarshallerPool> = $r8;

        $r9 = new com.sun.xml.bind.v2.runtime.NameBuilder;

        specialinvoke $r9.<com.sun.xml.bind.v2.runtime.NameBuilder: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameBuilder nameBuilder> = $r9;

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Set xmlNsSet> = null;

        $r11 = staticinvoke <com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: java.lang.String access$000(com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder)>(r10);

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.lang.String defaultNsUri> = $r11;

        $z0 = staticinvoke <com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: boolean access$100(com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder)>(r10);

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean retainPropertyInfo> = $z0;

        $r12 = staticinvoke <com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader access$200(com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder)>(r10);

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader annotationReader> = $r12;

        $r13 = staticinvoke <com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: java.util.Map access$300(com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder)>(r10);

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map subclassReplacements> = $r13;

        $z1 = staticinvoke <com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: boolean access$400(com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder)>(r10);

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean c14nSupport> = $z1;

        $r14 = staticinvoke <com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: java.lang.Class[] access$500(com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder)>(r10);

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.lang.Class[] classes> = $r14;

        $z2 = staticinvoke <com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: boolean access$600(com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder)>(r10);

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean xmlAccessorFactorySupport> = $z2;

        $z3 = staticinvoke <com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: boolean access$700(com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder)>(r10);

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean allNillable> = $z3;

        $z4 = staticinvoke <com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: boolean access$800(com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder)>(r10);

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean supressAccessorWarnings> = $z4;

        $z5 = staticinvoke <com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: boolean access$900(com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder)>(r10);

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean improvedXsiTypeHandling> = $z5;

        $z6 = staticinvoke <com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: boolean access$1000(com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder)>(r10);

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean disableSecurityProcessing> = $z6;

        $r15 = staticinvoke <com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: java.util.Collection access$1100(com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder)>(r10);

     label01:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = class "Lcom/sun/xml/bind/v2/runtime/JAXBContextImpl;";

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".fastBoot");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        z19 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>($r21);

     label02:
        goto label04;

     label03:
        $r142 := @caughtexception;

        z19 = 0;

     label04:
        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean fastBoot> = z19;

        $r22 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet getTypeInfoSet()>();

        $r24 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map elements>;

        $r23 = new java.util.LinkedHashMap;

        specialinvoke $r23.<java.util.LinkedHashMap: void <init>()>();

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r23);

        $r25 = <com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl: java.util.List builtinBeanInfos>;

        $r26 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z20 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z20 == 0 goto label08;

        $r134 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        r143 = (com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl) $r134;

        $r135 = new com.sun.xml.bind.v2.runtime.LeafBeanInfoImpl;

        specialinvoke $r135.<com.sun.xml.bind.v2.runtime.LeafBeanInfoImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.runtime.RuntimeLeafInfo)>(r0, r143);

        $r136 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfoMap>;

        $r137 = interfaceinvoke r143.<com.sun.xml.bind.v2.model.runtime.RuntimeBuiltinLeafInfo: java.lang.Class getClazz()>();

        interfaceinvoke $r136.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r137, $r135);

        $r138 = virtualinvoke $r135.<com.sun.xml.bind.v2.runtime.LeafBeanInfoImpl: java.util.Collection getTypeNames()>();

        $r139 = interfaceinvoke $r138.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z18 = interfaceinvoke $r139.<java.util.Iterator: boolean hasNext()>();

        if $z18 == 0 goto label07;

        $r140 = interfaceinvoke $r139.<java.util.Iterator: java.lang.Object next()>();

        r144 = (javax.xml.namespace.QName) $r140;

        $r141 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.HashMap typeMap>;

        virtualinvoke $r141.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r144, $r135);

        goto label06;

     label07:
        goto label05;

     label08:
        $r27 = interfaceinvoke $r22.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet: java.util.Map enums()>();

        $r28 = interfaceinvoke $r27.<java.util.Map: java.util.Collection values()>();

        $r29 = interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z7 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label13;

        $r126 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r145 = (com.sun.xml.bind.v2.model.runtime.RuntimeEnumLeafInfo) $r126;

        $r127 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeEnumLeafInfo)>(r145);

        $r128 = virtualinvoke $r127.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.util.Collection getTypeNames()>();

        $r129 = interfaceinvoke $r128.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z16 = interfaceinvoke $r129.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label11;

        $r132 = interfaceinvoke $r129.<java.util.Iterator: java.lang.Object next()>();

        r146 = (javax.xml.namespace.QName) $r132;

        $r133 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.HashMap typeMap>;

        virtualinvoke $r133.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r146, $r127);

        goto label10;

     label11:
        $z17 = interfaceinvoke r145.<com.sun.xml.bind.v2.model.runtime.RuntimeEnumLeafInfo: boolean isElement()>();

        if $z17 == 0 goto label12;

        $r130 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.util.QNameMap rootMap>;

        $r131 = interfaceinvoke r145.<com.sun.xml.bind.v2.model.runtime.RuntimeEnumLeafInfo: javax.xml.namespace.QName getElementName()>();

        virtualinvoke $r130.<com.sun.xml.bind.v2.util.QNameMap: void put(javax.xml.namespace.QName,java.lang.Object)>($r131, $r127);

     label12:
        goto label09;

     label13:
        $r30 = interfaceinvoke $r22.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet: java.util.Map arrays()>();

        $r31 = interfaceinvoke $r30.<java.util.Map: java.util.Collection values()>();

        $r32 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>();

     label14:
        $z8 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label17;

        $r120 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r147 = (com.sun.xml.bind.v2.model.runtime.RuntimeArrayInfo) $r120;

        $r121 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeArrayInfo)>(r147);

        $r122 = virtualinvoke $r121.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.util.Collection getTypeNames()>();

        $r123 = interfaceinvoke $r122.<java.util.Collection: java.util.Iterator iterator()>();

     label15:
        $z15 = interfaceinvoke $r123.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label16;

        $r124 = interfaceinvoke $r123.<java.util.Iterator: java.lang.Object next()>();

        r148 = (javax.xml.namespace.QName) $r124;

        $r125 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.HashMap typeMap>;

        virtualinvoke $r125.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r148, $r121);

        goto label15;

     label16:
        goto label14;

     label17:
        $r33 = interfaceinvoke $r22.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet: java.util.Map beans()>();

        $r34 = interfaceinvoke $r33.<java.util.Map: java.util.Set entrySet()>();

        $r35 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>();

     label18:
        $z9 = interfaceinvoke $r35.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label24;

        $r98 = interfaceinvoke $r35.<java.util.Iterator: java.lang.Object next()>();

        r149 = (java.util.Map$Entry) $r98;

        $r99 = interfaceinvoke r149.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r100 = (com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo) $r99;

        $r101 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo)>($r100);

        $r102 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader annotationReader>;

        $r103 = interfaceinvoke r149.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r104 = interfaceinvoke $r102.<com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader: java.lang.'annotation'.Annotation getPackageAnnotation(java.lang.Class,java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(class "Ljavax/xml/bind/annotation/XmlSchema;", $r103, null);

        r150 = (javax.xml.bind.'annotation'.XmlSchema) $r104;

        if r150 == null goto label20;

        $r113 = interfaceinvoke r150.<javax.xml.bind.'annotation'.XmlSchema: javax.xml.bind.'annotation'.XmlNs[] xmlns()>();

        if $r113 == null goto label20;

        $r114 = interfaceinvoke r150.<javax.xml.bind.'annotation'.XmlSchema: javax.xml.bind.'annotation'.XmlNs[] xmlns()>();

        $i0 = lengthof $r114;

        if $i0 <= 0 goto label20;

        $r115 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Set xmlNsSet>;

        if $r115 != null goto label19;

        $r119 = new java.util.HashSet;

        specialinvoke $r119.<java.util.HashSet: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Set xmlNsSet> = $r119;

     label19:
        $r116 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Set xmlNsSet>;

        $r117 = interfaceinvoke r150.<javax.xml.bind.'annotation'.XmlSchema: javax.xml.bind.'annotation'.XmlNs[] xmlns()>();

        $r118 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r117);

        interfaceinvoke $r116.<java.util.Set: boolean addAll(java.util.Collection)>($r118);

     label20:
        $z21 = virtualinvoke $r101.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: boolean isElement()>();

        if $z21 == 0 goto label21;

        $r109 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.util.QNameMap rootMap>;

        $r110 = interfaceinvoke r149.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r111 = (com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo) $r110;

        $r112 = interfaceinvoke $r111.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: javax.xml.namespace.QName getElementName()>();

        virtualinvoke $r109.<com.sun.xml.bind.v2.util.QNameMap: void put(javax.xml.namespace.QName,java.lang.Object)>($r112, $r101);

     label21:
        $r105 = virtualinvoke $r101.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: java.util.Collection getTypeNames()>();

        $r106 = interfaceinvoke $r105.<java.util.Collection: java.util.Iterator iterator()>();

     label22:
        $z22 = interfaceinvoke $r106.<java.util.Iterator: boolean hasNext()>();

        if $z22 == 0 goto label23;

        $r107 = interfaceinvoke $r106.<java.util.Iterator: java.lang.Object next()>();

        r151 = (javax.xml.namespace.QName) $r107;

        $r108 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.HashMap typeMap>;

        virtualinvoke $r108.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r151, $r101);

        goto label22;

     label23:
        goto label18;

     label24:
        $r36 = interfaceinvoke $r22.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet: java.lang.Iterable getAllElements()>();

        $r37 = interfaceinvoke $r36.<java.lang.Iterable: java.util.Iterator iterator()>();

     label25:
        $z10 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label30;

        $r85 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        r152 = (com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo) $r85;

        $r86 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo)>(r152);

        $r87 = interfaceinvoke r152.<com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo: com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo getScope()>();

        if $r87 != null goto label26;

        $r96 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.util.QNameMap rootMap>;

        $r97 = interfaceinvoke r152.<com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo: javax.xml.namespace.QName getElementName()>();

        virtualinvoke $r96.<com.sun.xml.bind.v2.util.QNameMap: void put(javax.xml.namespace.QName,java.lang.Object)>($r97, $r86);

     label26:
        $r88 = interfaceinvoke r152.<com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo: com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo getScope()>();

        if $r88 != null goto label27;

        $r153 = null;

        goto label28;

     label27:
        $r89 = interfaceinvoke $r88.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: java.lang.Object getClazz()>();

        $r153 = (java.lang.Class) $r89;

     label28:
        $r90 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map elements>;

        $r91 = interfaceinvoke $r90.<java.util.Map: java.lang.Object get(java.lang.Object)>($r153);

        $r95 = (java.util.Map) $r91;

        r154 = $r95;

        if $r95 != null goto label29;

        $r93 = new java.util.LinkedHashMap;

        specialinvoke $r93.<java.util.LinkedHashMap: void <init>()>();

        r154 = $r93;

        $r94 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map elements>;

        interfaceinvoke $r94.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r153, $r93);

     label29:
        $r92 = interfaceinvoke r152.<com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo: javax.xml.namespace.QName getElementName()>();

        interfaceinvoke r154.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r92, $r86);

        goto label25;

     label30:
        $r39 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfoMap>;

        $r38 = new com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl;

        specialinvoke $r38.<com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r0);

        interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljavax/xml/bind/JAXBElement;", $r38);

        $r41 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfoMap>;

        $r40 = new com.sun.xml.bind.v2.runtime.CompositeStructureBeanInfo;

        specialinvoke $r40.<com.sun.xml.bind.v2.runtime.CompositeStructureBeanInfo: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r0);

        interfaceinvoke $r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Lcom/sun/xml/bind/api/CompositeStructure;", $r40);

        $r42 = interfaceinvoke $r22.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet: com.sun.xml.bind.v2.model.runtime.RuntimeNonElement getAnyTypeInfo()>();

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo)>($r42);

        $r43 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfos>;

        $r44 = interfaceinvoke $r43.<java.util.Map: java.util.Collection values()>();

        $r45 = interfaceinvoke $r44.<java.util.Collection: java.util.Iterator iterator()>();

     label31:
        $z11 = interfaceinvoke $r45.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label32;

        $r84 = interfaceinvoke $r45.<java.util.Iterator: java.lang.Object next()>();

        r155 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r84;

        virtualinvoke r155.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: void link(com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r0);

        goto label31;

     label32:
        $r46 = <com.sun.xml.bind.v2.runtime.RuntimeUtil: java.util.Map primitiveToBox>;

        $r47 = interfaceinvoke $r46.<java.util.Map: java.util.Set entrySet()>();

        $r48 = interfaceinvoke $r47.<java.util.Set: java.util.Iterator iterator()>();

     label33:
        $z12 = interfaceinvoke $r48.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label34;

        $r78 = interfaceinvoke $r48.<java.util.Iterator: java.lang.Object next()>();

        r156 = (java.util.Map$Entry) $r78;

        $r79 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfoMap>;

        $r80 = interfaceinvoke r156.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r81 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfoMap>;

        $r82 = interfaceinvoke r156.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r83 = interfaceinvoke $r81.<java.util.Map: java.lang.Object get(java.lang.Object)>($r82);

        interfaceinvoke $r79.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r80, $r83);

        goto label33;

     label34:
        $r49 = interfaceinvoke $r22.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet: com.sun.xml.bind.v2.model.nav.ReflectionNavigator getNavigator()>();

        $r50 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();

     label35:
        $z13 = interfaceinvoke $r50.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label42;

        $r57 = interfaceinvoke $r50.<java.util.Iterator: java.lang.Object next()>();

        r157 = (com.sun.xml.bind.api.TypeReference) $r57;

        $r58 = virtualinvoke r157.<com.sun.xml.bind.api.TypeReference: java.lang.'annotation'.Annotation get(java.lang.Class)>(class "Ljavax/xml/bind/annotation/adapters/XmlJavaTypeAdapter;");

        r158 = (javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter) $r58;

        r159 = null;

        $r59 = virtualinvoke r157.<com.sun.xml.bind.api.TypeReference: java.lang.'annotation'.Annotation get(java.lang.Class)>(class "Ljavax/xml/bind/annotation/XmlList;");

        r160 = (javax.xml.bind.'annotation'.XmlList) $r59;

        $r60 = r157.<com.sun.xml.bind.api.TypeReference: java.lang.reflect.Type type>;

        r161 = virtualinvoke $r49.<com.sun.xml.bind.v2.model.nav.ReflectionNavigator: java.lang.Class erasure(java.lang.reflect.Type)>($r60);

        if r158 == null goto label36;

        $r76 = new com.sun.xml.bind.v2.model.core.Adapter;

        $r77 = interfaceinvoke r158.<javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter: java.lang.Class value()>();

        specialinvoke $r76.<com.sun.xml.bind.v2.model.core.Adapter: void <init>(java.lang.Object,com.sun.xml.bind.v2.model.nav.Navigator)>($r77, $r49);

        r159 = $r76;

     label36:
        $r61 = virtualinvoke r157.<com.sun.xml.bind.api.TypeReference: java.lang.'annotation'.Annotation get(java.lang.Class)>(class "Ljavax/xml/bind/annotation/XmlAttachmentRef;");

        if $r61 == null goto label37;

        $r75 = new com.sun.xml.bind.v2.model.core.Adapter;

        specialinvoke $r75.<com.sun.xml.bind.v2.model.core.Adapter: void <init>(java.lang.Object,com.sun.xml.bind.v2.model.nav.Navigator)>(class "Lcom/sun/xml/bind/v2/runtime/SwaRefAdapter;", $r49);

        r159 = $r75;

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean hasSwaRef> = 1;

     label37:
        if r159 == null goto label38;

        $r73 = r159.<com.sun.xml.bind.v2.model.core.Adapter: java.lang.Object defaultType>;

        $r74 = (java.lang.reflect.Type) $r73;

        r161 = virtualinvoke $r49.<com.sun.xml.bind.v2.model.nav.ReflectionNavigator: java.lang.Class erasure(java.lang.reflect.Type)>($r74);

     label38:
        $r63 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameBuilder nameBuilder>;

        $r62 = r157.<com.sun.xml.bind.api.TypeReference: javax.xml.namespace.QName tagName>;

        $r64 = virtualinvoke $r63.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.runtime.Name createElementName(javax.xml.namespace.QName)>($r62);

        if r160 != null goto label39;

        $r71 = new com.sun.xml.bind.v2.runtime.BridgeImpl;

        $r72 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class,boolean)>(r161, 1);

        specialinvoke $r71.<com.sun.xml.bind.v2.runtime.BridgeImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.runtime.Name,com.sun.xml.bind.v2.runtime.JaxBeanInfo,com.sun.xml.bind.api.TypeReference)>(r0, $r64, $r72, r157);

        r162 = $r71;

        goto label40;

     label39:
        $r65 = new com.sun.xml.bind.v2.runtime.BridgeImpl;

        $r66 = new com.sun.xml.bind.v2.runtime.ValueListBeanInfoImpl;

        specialinvoke $r66.<com.sun.xml.bind.v2.runtime.ValueListBeanInfoImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,java.lang.Class)>(r0, r161);

        specialinvoke $r65.<com.sun.xml.bind.v2.runtime.BridgeImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.runtime.Name,com.sun.xml.bind.v2.runtime.JaxBeanInfo,com.sun.xml.bind.api.TypeReference)>(r0, $r64, $r66, r157);

        r162 = $r65;

     label40:
        if r159 == null goto label41;

        $r68 = new com.sun.xml.bind.v2.runtime.BridgeAdapter;

        $r69 = r159.<com.sun.xml.bind.v2.model.core.Adapter: java.lang.Object adapterType>;

        $r70 = (java.lang.Class) $r69;

        specialinvoke $r68.<com.sun.xml.bind.v2.runtime.BridgeAdapter: void <init>(com.sun.xml.bind.v2.runtime.InternalBridge,java.lang.Class)>(r162, $r70);

        r162 = $r68;

     label41:
        $r67 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map bridges>;

        interfaceinvoke $r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r157, r162);

        goto label35;

     label42:
        $r51 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameBuilder nameBuilder>;

        $r52 = virtualinvoke $r51.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.runtime.NameList conclude()>();

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameList nameList> = $r52;

        $r53 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfos>;

        $r54 = interfaceinvoke $r53.<java.util.Map: java.util.Collection values()>();

        $r55 = interfaceinvoke $r54.<java.util.Collection: java.util.Iterator iterator()>();

     label43:
        $z14 = interfaceinvoke $r55.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label44;

        $r56 = interfaceinvoke $r55.<java.util.Iterator: java.lang.Object next()>();

        r163 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r56;

        virtualinvoke r163.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: void wrapUp()>();

        goto label43;

     label44:
        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameBuilder nameBuilder> = null;

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfos> = null;

        return;

        catch java.lang.SecurityException from label01 to label02 with label03;
    }

    public boolean hasSwaRef()
    {
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean hasSwaRef>;

        return $z0;
    }

    public com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet getRuntimeTypeInfoSet()
    {
        java.lang.AssertionError $r3;
        com.sun.xml.bind.v2.runtime.IllegalAnnotationsException $r2;
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet $r1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

     label1:
        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet getTypeInfoSet()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r2);

        throw $r3;

        catch com.sun.xml.bind.v2.runtime.IllegalAnnotationsException from label1 to label2 with label3;
    }

    public com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet getTypeInfoSet() throws com.sun.xml.bind.v2.runtime.IllegalAnnotationsException
    {
        com.sun.xml.bind.v2.runtime.IllegalAnnotationsException$Builder $r6;
        java.lang.AssertionError $r9;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader $r5;
        java.util.Map $r4;
        int $i0, i1;
        java.lang.String $r3;
        java.lang.ref.WeakReference $r1, $r8, $r12;
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet $r7, r15;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class[] $r14;
        com.sun.xml.bind.v2.model.core.Ref $r11;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder $r2;
        java.lang.Class r10;
        java.lang.Object $r13;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.lang.ref.WeakReference typeInfoSetCache>;

        if $r1 == null goto label1;

        $r12 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.lang.ref.WeakReference typeInfoSetCache>;

        $r13 = virtualinvoke $r12.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r15 = (com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet) $r13;

        if r15 == null goto label1;

        return r15;

     label1:
        $r2 = new com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader annotationReader>;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map subclassReplacements>;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.lang.String defaultNsUri>;

        specialinvoke $r2.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader,java.util.Map,java.lang.String)>(r0, $r5, $r4, $r3);

        $r6 = new com.sun.xml.bind.v2.runtime.IllegalAnnotationsException$Builder;

        specialinvoke $r6.<com.sun.xml.bind.v2.runtime.IllegalAnnotationsException$Builder: void <init>()>();

        virtualinvoke $r2.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: void setErrorHandler(com.sun.xml.bind.v2.model.core.ErrorHandler)>($r6);

        $r14 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.lang.Class[] classes>;

        $i0 = lengthof $r14;

        i1 = 0;

     label2:
        if i1 >= $i0 goto label5;

        r10 = $r14[i1];

        if r10 != class "Lcom/sun/xml/bind/api/CompositeStructure;" goto label3;

        goto label4;

     label3:
        $r11 = new com.sun.xml.bind.v2.model.core.Ref;

        specialinvoke $r11.<com.sun.xml.bind.v2.model.core.Ref: void <init>(java.lang.Object)>(r10);

        virtualinvoke $r2.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: com.sun.xml.bind.v2.model.core.NonElement getTypeInfo(com.sun.xml.bind.v2.model.core.Ref)>($r11);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        $z1 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean hasSwaRef>;

        $z0 = $r2.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: boolean hasSwaRef>;

        $z2 = $z1 | $z0;

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean hasSwaRef> = $z2;

        $r7 = virtualinvoke $r2.<com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet link()>();

        virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.IllegalAnnotationsException$Builder: void check()>();

        $z3 = <com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean $assertionsDisabled>;

        if $z3 != 0 goto label6;

        if $r7 != null goto label6;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>("if no error was reported, the link must be a success");

        throw $r9;

     label6:
        $r8 = new java.lang.ref.WeakReference;

        specialinvoke $r8.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r7);

        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.lang.ref.WeakReference typeInfoSetCache> = $r8;

        return $r7;
    }

    public com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl getElement(java.lang.Class, javax.xml.namespace.QName)
    {
        java.util.Map $r2, $r4, $r11, r12;
        com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl $r8, r10;
        java.lang.Class r1;
        java.lang.Object $r3, $r5, $r7, $r9;
        javax.xml.namespace.QName r6;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r1 := @parameter0: java.lang.Class;

        r6 := @parameter1: javax.xml.namespace.QName;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map elements>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r12 = (java.util.Map) $r3;

        if r12 == null goto label1;

        $r9 = interfaceinvoke r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r10 = (com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl) $r9;

        if r10 == null goto label1;

        return r10;

     label1:
        $r4 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map elements>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(null);

        $r11 = (java.util.Map) $r5;

        $r7 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        $r8 = (com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl) $r7;

        return $r8;
    }

    private com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo)
    {
        com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo r1;
        java.util.Map $r2;
        com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl $r5, $r6;
        java.lang.Object $r3;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r4;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfos>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r3;

        if r4 == null goto label1;

        $r6 = (com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl) r4;

        return $r6;

     label1:
        $r5 = new com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl;

        specialinvoke $r5.<com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo)>(r0, r1);

        return $r5;
    }

    protected com.sun.xml.bind.v2.runtime.JaxBeanInfo getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeEnumLeafInfo)
    {
        java.util.Map $r2, $r6;
        com.sun.xml.bind.v2.model.runtime.RuntimeEnumLeafInfo r1;
        java.lang.Object $r3;
        java.lang.Class $r5;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r7;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;
        com.sun.xml.bind.v2.runtime.LeafBeanInfoImpl $r4;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.model.runtime.RuntimeEnumLeafInfo;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfos>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r3;

        if r7 == null goto label1;

        return r7;

     label1:
        $r4 = new com.sun.xml.bind.v2.runtime.LeafBeanInfoImpl;

        specialinvoke $r4.<com.sun.xml.bind.v2.runtime.LeafBeanInfoImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.runtime.RuntimeLeafInfo)>(r0, r1);

        $r6 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfoMap>;

        $r5 = $r4.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Class jaxbType>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        return $r4;
    }

    protected com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo)
    {
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl $r4, r7;
        java.util.Map $r2, $r6;
        java.lang.Object $r3;
        java.lang.Class $r5;
        com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo r1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfos>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl) $r3;

        if r7 == null goto label1;

        return r7;

     label1:
        $r4 = new com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        specialinvoke $r4.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo)>(r0, r1);

        $r6 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfoMap>;

        $r5 = $r4.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: java.lang.Class jaxbType>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        return $r4;
    }

    protected com.sun.xml.bind.v2.runtime.JaxBeanInfo getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeArrayInfo)
    {
        com.sun.xml.bind.v2.model.runtime.RuntimeArrayInfo r1;
        com.sun.xml.bind.v2.runtime.ArrayBeanInfoImpl $r4;
        java.util.Map $r2, $r5;
        java.lang.Object $r3;
        java.lang.Class $r6;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r7;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.model.runtime.RuntimeArrayInfo;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfos>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r3;

        if r7 == null goto label1;

        return r7;

     label1:
        $r4 = new com.sun.xml.bind.v2.runtime.ArrayBeanInfoImpl;

        specialinvoke $r4.<com.sun.xml.bind.v2.runtime.ArrayBeanInfoImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.runtime.RuntimeArrayInfo)>(r0, r1);

        $r5 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfoMap>;

        $r6 = interfaceinvoke r1.<com.sun.xml.bind.v2.model.runtime.RuntimeArrayInfo: java.lang.Class getType()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r4);

        return $r4;
    }

    public com.sun.xml.bind.v2.runtime.JaxBeanInfo getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo)
    {
        com.sun.xml.bind.v2.runtime.AnyTypeBeanInfo $r6;
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl $r14;
        java.lang.AssertionError $r12;
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo r0;
        java.util.Map $r4, $r7, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r3;
        com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo $r15;
        com.sun.xml.bind.v2.model.runtime.RuntimeArrayInfo $r8;
        java.lang.IllegalArgumentException $r2;
        com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl $r16;
        java.lang.Object $r1, $r5, $r11;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r9, r17, r18;
        com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo $r13;

        r3 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r0 := @parameter0: com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo;

        $z0 = r0 instanceof com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo;

        if $z0 == 0 goto label1;

        $r15 = (com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo) r0;

        $r16 = specialinvoke r3.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo)>($r15);

        return $r16;

     label1:
        $z1 = r0 instanceof com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo;

        if $z1 == 0 goto label2;

        $r13 = (com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo) r0;

        $r14 = virtualinvoke r3.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo)>($r13);

        return $r14;

     label2:
        $z2 = r0 instanceof com.sun.xml.bind.v2.model.runtime.RuntimeLeafInfo;

        if $z2 == 0 goto label4;

        $r10 = r3.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfos>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r17 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r11;

        $z4 = <com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean $assertionsDisabled>;

        if $z4 != 0 goto label3;

        if r17 != null goto label3;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label3:
        return r17;

     label4:
        $z3 = r0 instanceof com.sun.xml.bind.v2.model.runtime.RuntimeArrayInfo;

        if $z3 == 0 goto label5;

        $r8 = (com.sun.xml.bind.v2.model.runtime.RuntimeArrayInfo) r0;

        $r9 = virtualinvoke r3.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeArrayInfo)>($r8);

        return $r9;

     label5:
        $r1 = interfaceinvoke r0.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo: java.lang.Object getType()>();

        if $r1 != class "Ljava/lang/Object;" goto label7;

        $r4 = r3.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfoMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(class "Ljava/lang/Object;");

        r18 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r5;

        if r18 != null goto label6;

        $r6 = new com.sun.xml.bind.v2.runtime.AnyTypeBeanInfo;

        specialinvoke $r6.<com.sun.xml.bind.v2.runtime.AnyTypeBeanInfo: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo)>(r3, r0);

        r18 = $r6;

        $r7 = r3.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfoMap>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Object;", $r6);

     label6:
        return r18;

     label7:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;
    }

    public final com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Object)
    {
        java.util.Map $r5, $r8, $r11;
        int i0, i1;
        boolean $z0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r4;
        java.lang.Class[] $r2;
        java.lang.Object r0, $r6, $r9, $r12;
        java.lang.Class $r1, r3, r13;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r7, $r10, r14;

        r4 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r0 := @parameter0: java.lang.Object;

        r13 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label1:
        if r13 == class "Ljava/lang/Object;" goto label3;

        $r11 = r4.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfoMap>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13);

        r14 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r12;

        if r14 == null goto label2;

        return r14;

     label2:
        r13 = virtualinvoke r13.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label3:
        $z0 = r0 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label4;

        $r8 = r4.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfoMap>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(class "Ljava/lang/Object;");

        $r10 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r9;

        return $r10;

     label4:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i0 = lengthof $r2;

        i1 = 0;

     label5:
        if i1 >= i0 goto label7;

        r3 = $r2[i1];

        $r5 = r4.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfoMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r7 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r6;

        if r7 == null goto label6;

        return r7;

     label6:
        i1 = i1 + 1;

        goto label5;

     label7:
        return null;
    }

    public final com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Object, boolean) throws javax.xml.bind.JAXBException
    {
        java.lang.Object[] $r4, $r9;
        javax.xml.bind.JAXBException $r3, $r8;
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.Messages $r5, $r10;
        java.lang.Class $r6, $r11;
        java.lang.String $r7, $r12;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r2;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;
        boolean z0, $z1;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Object)>(r1);

        if $r2 == null goto label1;

        return $r2;

     label1:
        if z0 == 0 goto label3;

        $z1 = r1 instanceof org.w3c.dom.Document;

        if $z1 == 0 goto label2;

        $r8 = new javax.xml.bind.JAXBException;

        $r10 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages ELEMENT_NEEDED_BUT_FOUND_DOCUMENT>;

        $r9 = newarray (java.lang.Object)[1];

        $r11 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r9[0] = $r11;

        $r12 = virtualinvoke $r10.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r9);

        specialinvoke $r8.<javax.xml.bind.JAXBException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label2:
        $r3 = new javax.xml.bind.JAXBException;

        $r5 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages UNKNOWN_CLASS>;

        $r4 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4[0] = $r6;

        $r7 = virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r4);

        specialinvoke $r3.<javax.xml.bind.JAXBException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label3:
        return null;
    }

    public final com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class)
    {
        java.util.Map $r2;
        java.lang.Class r1;
        java.lang.Object $r3;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r4;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfoMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r3;

        return $r4;
    }

    public final com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class, boolean) throws javax.xml.bind.JAXBException
    {
        javax.xml.bind.JAXBException $r3;
        java.lang.Class r1;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String $r5, $r8;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r2;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r1 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class)>(r1);

        if $r2 == null goto label1;

        return $r2;

     label1:
        if z0 == 0 goto label2;

        $r3 = new javax.xml.bind.JAXBException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not known to this context");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<javax.xml.bind.JAXBException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        return null;
    }

    public final com.sun.xml.bind.v2.runtime.unmarshaller.Loader selectRootLoader(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State, com.sun.xml.bind.v2.runtime.unmarshaller.TagName)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r7;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r8;
        com.sun.xml.bind.v2.util.QNameMap $r4;
        java.lang.Object $r5;
        java.lang.String $r2, $r3;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r6;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r8 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        r1 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.TagName;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.util.QNameMap rootMap>;

        $r3 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: java.lang.String uri>;

        $r2 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: java.lang.String local>;

        $r5 = virtualinvoke $r4.<com.sun.xml.bind.v2.util.QNameMap: java.lang.Object get(java.lang.String,java.lang.String)>($r3, $r2);

        r6 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r5;

        if r6 != null goto label1;

        return null;

     label1:
        $r7 = virtualinvoke r6.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: com.sun.xml.bind.v2.runtime.unmarshaller.Loader getLoader(com.sun.xml.bind.v2.runtime.JAXBContextImpl,boolean)>(r0, 1);

        return $r7;
    }

    public com.sun.xml.bind.v2.runtime.JaxBeanInfo getGlobalType(javax.xml.namespace.QName)
    {
        java.util.HashMap $r2;
        java.lang.Object $r3;
        javax.xml.namespace.QName r1;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r4;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.HashMap typeMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r3;

        return $r4;
    }

    public java.lang.String getNearestTypeName(javax.xml.namespace.QName)
    {
        java.util.HashMap $r1, $r3;
        java.lang.String[] r2;
        int $i0, $i1, $i2, i3;
        java.lang.String $r7, $r8, $r9, $r12, $r13, $r14, $r15;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;
        boolean $z0, $z1;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Object $r10;
        javax.xml.namespace.QName r6, r11;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r6 := @parameter0: javax.xml.namespace.QName;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.HashMap typeMap>;

        $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>();

        r2 = newarray (java.lang.String)[$i0];

        i3 = 0;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.HashMap typeMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r11 = (javax.xml.namespace.QName) $r10;

        $r12 = virtualinvoke r11.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r13 = virtualinvoke r6.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label2;

        $r15 = virtualinvoke r11.<javax.xml.namespace.QName: java.lang.String toString()>();

        return $r15;

     label2:
        $i2 = i3;

        i3 = i3 + 1;

        $r14 = virtualinvoke r11.<javax.xml.namespace.QName: java.lang.String toString()>();

        r2[$i2] = $r14;

        goto label1;

     label3:
        $r7 = virtualinvoke r6.<javax.xml.namespace.QName: java.lang.String toString()>();

        $r8 = staticinvoke <com.sun.xml.bind.v2.util.EditDistance: java.lang.String findNearest(java.lang.String,java.lang.String[])>($r7, r2);

        $r9 = virtualinvoke r6.<javax.xml.namespace.QName: java.lang.String toString()>();

        $i1 = staticinvoke <com.sun.xml.bind.v2.util.EditDistance: int editDistance(java.lang.String,java.lang.String)>($r8, $r9);

        if $i1 <= 10 goto label4;

        return null;

     label4:
        return $r8;
    }

    public java.util.Set getValidRootNames()
    {
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.util.TreeSet $r0;
        com.sun.xml.bind.v2.util.QNameMap$Entry r7;
        com.sun.xml.bind.v2.util.QNameMap $r3;
        java.lang.Object $r6;
        javax.xml.namespace.QName $r8;
        java.util.Comparator $r1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r2;
        boolean $z0;

        r2 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r0 = new java.util.TreeSet;

        $r1 = <com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Comparator QNAME_COMPARATOR>;

        specialinvoke $r0.<java.util.TreeSet: void <init>(java.util.Comparator)>($r1);

        $r3 = r2.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.util.QNameMap rootMap>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.util.QNameMap: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.sun.xml.bind.v2.util.QNameMap$Entry) $r6;

        $r8 = virtualinvoke r7.<com.sun.xml.bind.v2.util.QNameMap$Entry: javax.xml.namespace.QName createQName()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return $r0;
    }

    public synchronized com.sun.xml.bind.v2.runtime.output.Encoded[] getUTF8NameTable()
    {
        java.lang.String[] $r4, $r8;
        com.sun.xml.bind.v2.runtime.output.Encoded[] $r1, $r2, r5;
        com.sun.xml.bind.v2.runtime.NameList $r3, $r7;
        int $i0, $i1, i2;
        java.lang.String $r9;
        com.sun.xml.bind.v2.runtime.output.Encoded $r6;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.output.Encoded[] utf8nameTable>;

        if $r1 != null goto label3;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameList nameList>;

        $r4 = $r3.<com.sun.xml.bind.v2.runtime.NameList: java.lang.String[] localNames>;

        $i0 = lengthof $r4;

        r5 = newarray (com.sun.xml.bind.v2.runtime.output.Encoded)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r5;

        if i2 >= $i1 goto label2;

        $r6 = new com.sun.xml.bind.v2.runtime.output.Encoded;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameList nameList>;

        $r8 = $r7.<com.sun.xml.bind.v2.runtime.NameList: java.lang.String[] localNames>;

        $r9 = $r8[i2];

        specialinvoke $r6.<com.sun.xml.bind.v2.runtime.output.Encoded: void <init>(java.lang.String)>($r9);

        virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.output.Encoded: void compact()>();

        r5[i2] = $r6;

        i2 = i2 + 1;

        goto label1;

     label2:
        r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.output.Encoded[] utf8nameTable> = r5;

     label3:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.output.Encoded[] utf8nameTable>;

        return $r2;
    }

    public int getNumberOfLocalNames()
    {
        com.sun.xml.bind.v2.runtime.NameList $r1;
        int $i0;
        java.lang.String[] $r2;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameList nameList>;

        $r2 = $r1.<com.sun.xml.bind.v2.runtime.NameList: java.lang.String[] localNames>;

        $i0 = lengthof $r2;

        return $i0;
    }

    public int getNumberOfElementNames()
    {
        int $i0;
        com.sun.xml.bind.v2.runtime.NameList $r1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameList nameList>;

        $i0 = $r1.<com.sun.xml.bind.v2.runtime.NameList: int numberOfElementNames>;

        return $i0;
    }

    public int getNumberOfAttributeNames()
    {
        int $i0;
        com.sun.xml.bind.v2.runtime.NameList $r1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameList nameList>;

        $i0 = $r1.<com.sun.xml.bind.v2.runtime.NameList: int numberOfAttributeNames>;

        return $i0;
    }

    static javax.xml.transform.Transformer createTransformer(boolean)
    {
        java.lang.Throwable $r8;
        javax.xml.transform.Transformer $r2;
        javax.xml.transform.TransformerConfigurationException $r6;
        java.lang.Error $r7;
        javax.xml.transform.sax.SAXTransformerFactory $r0, $r1, $r3, $r5;
        javax.xml.transform.TransformerFactory $r4;
        boolean z0;

        z0 := @parameter0: boolean;

     label1:
        $r0 = <com.sun.xml.bind.v2.runtime.JAXBContextImpl: javax.xml.transform.sax.SAXTransformerFactory tf>;

        if $r0 != null goto label7;

        entermonitor class "Lcom/sun/xml/bind/v2/runtime/JAXBContextImpl;";

     label2:
        $r3 = <com.sun.xml.bind.v2.runtime.JAXBContextImpl: javax.xml.transform.sax.SAXTransformerFactory tf>;

        if $r3 != null goto label3;

        $r4 = staticinvoke <com.sun.xml.bind.v2.util.XmlFactory: javax.xml.transform.TransformerFactory createTransformerFactory(boolean)>(z0);

        $r5 = (javax.xml.transform.sax.SAXTransformerFactory) $r4;

        <com.sun.xml.bind.v2.runtime.JAXBContextImpl: javax.xml.transform.sax.SAXTransformerFactory tf> = $r5;

     label3:
        exitmonitor class "Lcom/sun/xml/bind/v2/runtime/JAXBContextImpl;";

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        exitmonitor class "Lcom/sun/xml/bind/v2/runtime/JAXBContextImpl;";

     label6:
        throw $r8;

     label7:
        $r1 = <com.sun.xml.bind.v2.runtime.JAXBContextImpl: javax.xml.transform.sax.SAXTransformerFactory tf>;

        $r2 = virtualinvoke $r1.<javax.xml.transform.sax.SAXTransformerFactory: javax.xml.transform.Transformer newTransformer()>();

     label8:
        return $r2;

     label9:
        $r6 := @caughtexception;

        $r7 = new java.lang.Error;

        specialinvoke $r7.<java.lang.Error: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch javax.xml.transform.TransformerConfigurationException from label1 to label8 with label9;
    }

    public static javax.xml.transform.sax.TransformerHandler createTransformerHandler(boolean)
    {
        java.lang.Throwable $r8;
        javax.xml.transform.TransformerConfigurationException $r6;
        java.lang.Error $r7;
        javax.xml.transform.sax.SAXTransformerFactory $r0, $r1, $r3, $r5;
        javax.xml.transform.TransformerFactory $r4;
        javax.xml.transform.sax.TransformerHandler $r2;
        boolean z0;

        z0 := @parameter0: boolean;

     label1:
        $r0 = <com.sun.xml.bind.v2.runtime.JAXBContextImpl: javax.xml.transform.sax.SAXTransformerFactory tf>;

        if $r0 != null goto label7;

        entermonitor class "Lcom/sun/xml/bind/v2/runtime/JAXBContextImpl;";

     label2:
        $r3 = <com.sun.xml.bind.v2.runtime.JAXBContextImpl: javax.xml.transform.sax.SAXTransformerFactory tf>;

        if $r3 != null goto label3;

        $r4 = staticinvoke <com.sun.xml.bind.v2.util.XmlFactory: javax.xml.transform.TransformerFactory createTransformerFactory(boolean)>(z0);

        $r5 = (javax.xml.transform.sax.SAXTransformerFactory) $r4;

        <com.sun.xml.bind.v2.runtime.JAXBContextImpl: javax.xml.transform.sax.SAXTransformerFactory tf> = $r5;

     label3:
        exitmonitor class "Lcom/sun/xml/bind/v2/runtime/JAXBContextImpl;";

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        exitmonitor class "Lcom/sun/xml/bind/v2/runtime/JAXBContextImpl;";

     label6:
        throw $r8;

     label7:
        $r1 = <com.sun.xml.bind.v2.runtime.JAXBContextImpl: javax.xml.transform.sax.SAXTransformerFactory tf>;

        $r2 = virtualinvoke $r1.<javax.xml.transform.sax.SAXTransformerFactory: javax.xml.transform.sax.TransformerHandler newTransformerHandler()>();

     label8:
        return $r2;

     label9:
        $r6 := @caughtexception;

        $r7 = new java.lang.Error;

        specialinvoke $r7.<java.lang.Error: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch javax.xml.transform.TransformerConfigurationException from label1 to label8 with label9;
    }

    static org.w3c.dom.Document createDom(boolean)
    {
        java.lang.Throwable $r5;
        javax.xml.parsers.FactoryConfigurationError $r7;
        javax.xml.parsers.ParserConfigurationException $r6;
        org.w3c.dom.Document $r2;
        javax.xml.parsers.DocumentBuilder $r0, $r1, $r4;
        javax.xml.parsers.DocumentBuilderFactory $r3;
        boolean z0;

        z0 := @parameter0: boolean;

        entermonitor class "Lcom/sun/xml/bind/v2/runtime/JAXBContextImpl;";

     label1:
        $r0 = <com.sun.xml.bind.v2.runtime.JAXBContextImpl: javax.xml.parsers.DocumentBuilder db>;

        if $r0 != null goto label5;

     label2:
        $r3 = staticinvoke <com.sun.xml.bind.v2.util.XmlFactory: javax.xml.parsers.DocumentBuilderFactory createDocumentBuilderFactory(boolean)>(z0);

        $r4 = virtualinvoke $r3.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        <com.sun.xml.bind.v2.runtime.JAXBContextImpl: javax.xml.parsers.DocumentBuilder db> = $r4;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = new javax.xml.parsers.FactoryConfigurationError;

        specialinvoke $r7.<javax.xml.parsers.FactoryConfigurationError: void <init>(java.lang.Exception)>($r6);

        throw $r7;

     label5:
        $r1 = <com.sun.xml.bind.v2.runtime.JAXBContextImpl: javax.xml.parsers.DocumentBuilder db>;

        $r2 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        exitmonitor class "Lcom/sun/xml/bind/v2/runtime/JAXBContextImpl;";

     label6:
        return $r2;

     label7:
        $r5 := @caughtexception;

        exitmonitor class "Lcom/sun/xml/bind/v2/runtime/JAXBContextImpl;";

     label8:
        throw $r5;

        catch javax.xml.parsers.ParserConfigurationException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public com.sun.xml.bind.v2.runtime.MarshallerImpl createMarshaller()
    {
        com.sun.xml.bind.v2.runtime.MarshallerImpl $r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r0 = new com.sun.xml.bind.v2.runtime.MarshallerImpl;

        specialinvoke $r0.<com.sun.xml.bind.v2.runtime.MarshallerImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.runtime.AssociationMap)>(r1, null);

        return $r0;
    }

    public com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl createUnmarshaller()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl $r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r0 = new com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl;

        specialinvoke $r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.runtime.AssociationMap)>(r1, null);

        return $r0;
    }

    public javax.xml.bind.Validator createValidator()
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object[] $r1;
        com.sun.xml.bind.v2.runtime.Messages $r2;
        java.lang.String $r3;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r4;

        r4 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r0 = new java.lang.UnsupportedOperationException;

        $r2 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages NOT_IMPLEMENTED_IN_2_0>;

        $r1 = newarray (java.lang.Object)[0];

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r1);

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r3);

        throw $r0;
    }

    public javax.xml.bind.JAXBIntrospector createJAXBIntrospector()
    {
        com.sun.xml.bind.v2.runtime.JAXBContextImpl$3 $r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r0 = new com.sun.xml.bind.v2.runtime.JAXBContextImpl$3;

        specialinvoke $r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$3: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r1);

        return $r0;
    }

    private com.sun.xml.bind.v2.model.core.NonElement getXmlType(com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet, com.sun.xml.bind.api.TypeReference)
    {
        com.sun.xml.bind.v2.model.core.NonElement $r11;
        com.sun.xml.bind.v2.model.core.Ref $r5;
        com.sun.xml.bind.api.TypeReference r0;
        java.lang.IllegalArgumentException $r12;
        java.lang.reflect.Type $r10;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader $r8;
        java.lang.'annotation'.Annotation $r1, $r3;
        javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter r2;
        javax.xml.bind.'annotation'.XmlList r4;
        com.sun.xml.bind.v2.model.nav.ReflectionNavigator $r9;
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet r7;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r6;

        r6 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r7 := @parameter0: com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet;

        r0 := @parameter1: com.sun.xml.bind.api.TypeReference;

        if r0 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r12;

     label1:
        $r1 = virtualinvoke r0.<com.sun.xml.bind.api.TypeReference: java.lang.'annotation'.Annotation get(java.lang.Class)>(class "Ljavax/xml/bind/annotation/adapters/XmlJavaTypeAdapter;");

        r2 = (javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter) $r1;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.api.TypeReference: java.lang.'annotation'.Annotation get(java.lang.Class)>(class "Ljavax/xml/bind/annotation/XmlList;");

        r4 = (javax.xml.bind.'annotation'.XmlList) $r3;

        $r5 = new com.sun.xml.bind.v2.model.core.Ref;

        $r8 = r6.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader annotationReader>;

        $r9 = interfaceinvoke r7.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet: com.sun.xml.bind.v2.model.nav.ReflectionNavigator getNavigator()>();

        $r10 = r0.<com.sun.xml.bind.api.TypeReference: java.lang.reflect.Type type>;

        specialinvoke $r5.<com.sun.xml.bind.v2.model.core.Ref: void <init>(com.sun.xml.bind.v2.model.'annotation'.AnnotationReader,com.sun.xml.bind.v2.model.nav.Navigator,java.lang.Object,javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter,javax.xml.bind.'annotation'.XmlList)>($r8, $r9, $r10, r2, r4);

        $r11 = interfaceinvoke r7.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet: com.sun.xml.bind.v2.model.core.NonElement getTypeInfo(com.sun.xml.bind.v2.model.core.Ref)>($r5);

        return $r11;
    }

    public void generateEpisode(javax.xml.transform.Result)
    {
        javax.xml.transform.Result r0;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator $r2;
        com.sun.xml.txw2.output.XmlSerializer $r3;
        java.lang.IllegalArgumentException $r4;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r0 := @parameter0: javax.xml.transform.Result;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        $r2 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator createSchemaGenerator()>();

        $r3 = staticinvoke <com.sun.xml.txw2.output.ResultFactory: com.sun.xml.txw2.output.XmlSerializer createSerializer(javax.xml.transform.Result)>(r0);

        virtualinvoke $r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator: void writeEpisodeFile(com.sun.xml.txw2.output.XmlSerializer)>($r3);

        return;
    }

    public void generateSchema(javax.xml.bind.SchemaOutputResolver) throws java.io.IOException
    {
        com.sun.xml.bind.v2.runtime.JAXBContextImpl$4 $r5;
        java.lang.Object[] $r9, $r14, $r19;
        com.sun.xml.bind.v2.runtime.Messages $r10, $r15, $r20;
        java.lang.String $r11, $r16, $r21;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r3;
        org.xml.sax.SAXParseException[] r1, r2;
        java.io.IOException $r8, $r13, $r18;
        org.xml.sax.SAXParseException $r6, $r7, $r12, $r17;
        javax.xml.bind.SchemaOutputResolver r0;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator $r4;

        r3 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r0 := @parameter0: javax.xml.bind.SchemaOutputResolver;

        if r0 != null goto label1;

        $r18 = new java.io.IOException;

        $r20 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages NULL_OUTPUT_RESOLVER>;

        $r19 = newarray (java.lang.Object)[0];

        $r21 = virtualinvoke $r20.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r19);

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r21);

        throw $r18;

     label1:
        r1 = newarray (org.xml.sax.SAXParseException)[1];

        r2 = newarray (org.xml.sax.SAXParseException)[1];

        $r4 = specialinvoke r3.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator createSchemaGenerator()>();

        $r5 = new com.sun.xml.bind.v2.runtime.JAXBContextImpl$4;

        specialinvoke $r5.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$4: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,org.xml.sax.SAXParseException[],org.xml.sax.SAXParseException[])>(r3, r1, r2);

        virtualinvoke $r4.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator: void write(javax.xml.bind.SchemaOutputResolver,com.sun.xml.bind.api.ErrorListener)>(r0, $r5);

        $r6 = r1[0];

        if $r6 == null goto label2;

        $r13 = new java.io.IOException;

        $r15 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages FAILED_TO_GENERATE_SCHEMA>;

        $r14 = newarray (java.lang.Object)[0];

        $r16 = virtualinvoke $r15.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r14);

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>($r16);

        $r17 = r1[0];

        virtualinvoke $r13.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>($r17);

        throw $r13;

     label2:
        $r7 = r2[0];

        if $r7 == null goto label3;

        $r8 = new java.io.IOException;

        $r10 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages ERROR_PROCESSING_SCHEMA>;

        $r9 = newarray (java.lang.Object)[0];

        $r11 = virtualinvoke $r10.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r9);

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r11);

        $r12 = r2[0];

        virtualinvoke $r8.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>($r12);

        throw $r8;

     label3:
        return;
    }

    private com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator createSchemaGenerator()
    {
        com.sun.xml.bind.v2.model.core.Element $r25;
        java.util.Map $r7, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo r31;
        java.util.Collection $r8;
        com.sun.xml.bind.v2.model.core.NonElement $r20;
        java.util.Set $r11;
        java.lang.reflect.Type $r16, $r18, $r19, $r21;
        javax.xml.namespace.QName $r14, $r17, $r23, $r26, $r28;
        java.lang.AssertionError $r30;
        com.sun.xml.bind.api.TypeReference r33;
        java.lang.Iterable $r5;
        java.util.HashSet $r4;
        com.sun.xml.bind.v2.model.nav.ReflectionNavigator $r3, $r22;
        com.sun.xml.bind.v2.runtime.IllegalAnnotationsException $r29;
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet $r1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;
        java.util.Iterator $r6, $r9, $r12;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator $r2;
        java.lang.Object $r13, $r24, $r27;
        java.lang.Class $r15;
        com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo r32;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

     label01:
        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet getTypeInfoSet()>();

     label02:
        goto label04;

     label03:
        $r29 := @caughtexception;

        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>(java.lang.Object)>($r29);

        throw $r30;

     label04:
        $r2 = new com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator;

        $r3 = interfaceinvoke $r1.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet: com.sun.xml.bind.v2.model.nav.ReflectionNavigator getNavigator()>();

        specialinvoke $r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator: void <init>(com.sun.xml.bind.v2.model.nav.Navigator,com.sun.xml.bind.v2.model.core.TypeInfoSet)>($r3, $r1);

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        $r5 = interfaceinvoke $r1.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet: java.lang.Iterable getAllElements()>();

        $r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r27 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r31 = (com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo) $r27;

        $r28 = interfaceinvoke r31.<com.sun.xml.bind.v2.model.runtime.RuntimeElementInfo: javax.xml.namespace.QName getElementName()>();

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r28);

        goto label05;

     label06:
        $r7 = interfaceinvoke $r1.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet: java.util.Map beans()>();

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r24 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r32 = (com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo) $r24;

        $z4 = interfaceinvoke r32.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: boolean isElement()>();

        if $z4 == 0 goto label08;

        $r25 = interfaceinvoke r32.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: com.sun.xml.bind.v2.model.core.Element asElement()>();

        $r26 = interfaceinvoke $r25.<com.sun.xml.bind.v2.model.core.Element: javax.xml.namespace.QName getElementName()>();

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r26);

     label08:
        goto label07;

     label09:
        $r10 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map bridges>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z5 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label18;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r33 = (com.sun.xml.bind.api.TypeReference) $r13;

        $r14 = r33.<com.sun.xml.bind.api.TypeReference: javax.xml.namespace.QName tagName>;

        $z2 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r14);

        if $z2 == 0 goto label11;

        goto label10;

     label11:
        $r16 = r33.<com.sun.xml.bind.api.TypeReference: java.lang.reflect.Type type>;

        $r15 = <java.lang.Void: java.lang.Class TYPE>;

        if $r16 == $r15 goto label12;

        $r18 = r33.<com.sun.xml.bind.api.TypeReference: java.lang.reflect.Type type>;

        if $r18 != class "Ljava/lang/Void;" goto label13;

     label12:
        $r17 = r33.<com.sun.xml.bind.api.TypeReference: javax.xml.namespace.QName tagName>;

        virtualinvoke $r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator: void add(javax.xml.namespace.QName,boolean,com.sun.xml.bind.v2.model.core.NonElement)>($r17, 0, null);

        goto label17;

     label13:
        $r19 = r33.<com.sun.xml.bind.api.TypeReference: java.lang.reflect.Type type>;

        if $r19 != class "Lcom/sun/xml/bind/api/CompositeStructure;" goto label14;

        goto label17;

     label14:
        $r20 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.model.core.NonElement getXmlType(com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet,com.sun.xml.bind.api.TypeReference)>($r1, r33);

        $r23 = r33.<com.sun.xml.bind.api.TypeReference: javax.xml.namespace.QName tagName>;

        $r22 = <com.sun.xml.bind.v2.model.nav.Navigator: com.sun.xml.bind.v2.model.nav.ReflectionNavigator REFLECTION>;

        $r21 = r33.<com.sun.xml.bind.api.TypeReference: java.lang.reflect.Type type>;

        $z3 = virtualinvoke $r22.<com.sun.xml.bind.v2.model.nav.ReflectionNavigator: boolean isPrimitive(java.lang.reflect.Type)>($r21);

        if $z3 != 0 goto label15;

        $z6 = 1;

        goto label16;

     label15:
        $z6 = 0;

     label16:
        virtualinvoke $r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator: void add(javax.xml.namespace.QName,boolean,com.sun.xml.bind.v2.model.core.NonElement)>($r23, $z6, $r20);

     label17:
        goto label10;

     label18:
        return $r2;

        catch com.sun.xml.bind.v2.runtime.IllegalAnnotationsException from label01 to label02 with label03;
    }

    public javax.xml.namespace.QName getTypeName(com.sun.xml.bind.api.TypeReference)
    {
        com.sun.xml.bind.v2.model.core.NonElement $r3;
        com.sun.xml.bind.api.TypeReference r2;
        java.lang.AssertionError $r7;
        java.lang.IllegalArgumentException $r5;
        javax.xml.namespace.QName $r4;
        com.sun.xml.bind.v2.runtime.IllegalAnnotationsException $r6;
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet $r1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r2 := @parameter0: com.sun.xml.bind.api.TypeReference;

     label1:
        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet getTypeInfoSet()>();

        $r3 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.model.core.NonElement getXmlType(com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet,com.sun.xml.bind.api.TypeReference)>($r1, r2);

        if $r3 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label2:
        $r4 = interfaceinvoke $r3.<com.sun.xml.bind.v2.model.core.NonElement: javax.xml.namespace.QName getTypeName()>();

     label3:
        return $r4;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw $r7;

        catch com.sun.xml.bind.v2.runtime.IllegalAnnotationsException from label1 to label3 with label4;
    }

    public javax.xml.bind.SchemaOutputResolver createTestResolver()
    {
        com.sun.xml.bind.v2.runtime.JAXBContextImpl$5 $r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r0 = new com.sun.xml.bind.v2.runtime.JAXBContextImpl$5;

        specialinvoke $r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$5: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r1);

        return $r0;
    }

    public javax.xml.bind.Binder createBinder(java.lang.Class)
    {
        javax.xml.bind.Binder $r2, $r3;
        java.lang.Class r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r0 := @parameter0: java.lang.Class;

        if r0 != class "Lorg/w3c/dom/Node;" goto label1;

        $r3 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: javax.xml.bind.Binder createBinder()>();

        return $r3;

     label1:
        $r2 = specialinvoke r1.<com.sun.xml.bind.api.JAXBRIContext: javax.xml.bind.Binder createBinder(java.lang.Class)>(r0);

        return $r2;
    }

    public javax.xml.bind.Binder createBinder()
    {
        com.sun.xml.bind.unmarshaller.DOMScanner $r2;
        com.sun.xml.bind.v2.runtime.BinderImpl $r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r0 = new com.sun.xml.bind.v2.runtime.BinderImpl;

        $r2 = new com.sun.xml.bind.unmarshaller.DOMScanner;

        specialinvoke $r2.<com.sun.xml.bind.unmarshaller.DOMScanner: void <init>()>();

        specialinvoke $r0.<com.sun.xml.bind.v2.runtime.BinderImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.unmarshaller.InfosetScanner)>(r1, $r2);

        return $r0;
    }

    public javax.xml.namespace.QName getElementName(java.lang.Object) throws javax.xml.bind.JAXBException
    {
        java.lang.Object r1;
        javax.xml.namespace.QName $r3;
        java.lang.String $r4, $r5;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r2;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Object,boolean)>(r1, 1);

        $z0 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: boolean isElement()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = new javax.xml.namespace.QName;

        $r4 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.String getElementNamespaceURI(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.String getElementLocalName(java.lang.Object)>(r1);

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r4, $r5);

        return $r3;
    }

    public javax.xml.namespace.QName getElementName(java.lang.Class) throws javax.xml.bind.JAXBException
    {
        java.lang.Class r1;
        javax.xml.namespace.QName $r3;
        java.lang.String $r4, $r5;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r2;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class,boolean)>(r1, 1);

        $z0 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: boolean isElement()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = new javax.xml.namespace.QName;

        $r4 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.String getElementNamespaceURI(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.String getElementLocalName(java.lang.Object)>(r1);

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r4, $r5);

        return $r3;
    }

    public com.sun.xml.bind.api.Bridge createBridge(com.sun.xml.bind.api.TypeReference)
    {
        java.util.Map $r2;
        com.sun.xml.bind.api.Bridge $r4;
        java.lang.Object $r3;
        com.sun.xml.bind.api.TypeReference r1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r1 := @parameter0: com.sun.xml.bind.api.TypeReference;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map bridges>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.sun.xml.bind.api.Bridge) $r3;

        return $r4;
    }

    public com.sun.xml.bind.api.BridgeContext createBridgeContext()
    {
        com.sun.xml.bind.v2.runtime.BridgeContextImpl $r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r0 = new com.sun.xml.bind.v2.runtime.BridgeContextImpl;

        specialinvoke $r0.<com.sun.xml.bind.v2.runtime.BridgeContextImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r1);

        return $r0;
    }

    public com.sun.xml.bind.api.RawAccessor getElementPropertyAccessor(java.lang.Class, java.lang.String, java.lang.String) throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.runtime.JAXBContextImpl$6 $r15;
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r21;
        int i0, i1;
        com.sun.xml.bind.v2.runtime.property.Property r13;
        java.lang.String r6, r7, $r11, $r20;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;
        boolean $z0;
        com.sun.xml.bind.v2.runtime.property.Property[] r12;
        javax.xml.bind.JAXBException $r3, $r16;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r14;
        java.lang.Class r1;
        java.lang.StringBuilder $r4, $r8, $r9, $r10, $r17, $r18, $r19;
        javax.xml.namespace.QName $r5;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r1 := @parameter0: java.lang.Class;

        r6 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class,boolean)>(r1, 1);

        $z0 = $r2 instanceof com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        if $z0 != 0 goto label1;

        $r16 = new javax.xml.bind.JAXBException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a bean");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<javax.xml.bind.JAXBException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label1:
        r21 = (com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl) $r2;

     label2:
        if r21 == null goto label6;

        r12 = r21.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] properties>;

        i0 = lengthof r12;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r13 = r12[i1];

        $r14 = interfaceinvoke r13.<com.sun.xml.bind.v2.runtime.property.Property: com.sun.xml.bind.v2.runtime.reflect.Accessor getElementPropertyAccessor(java.lang.String,java.lang.String)>(r6, r7);

        if $r14 == null goto label4;

        $r15 = new com.sun.xml.bind.v2.runtime.JAXBContextImpl$6;

        specialinvoke $r15.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$6: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.runtime.reflect.Accessor)>(r0, $r14);

        return $r15;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        r21 = r21.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl superClazz>;

        goto label2;

     label6:
        $r3 = new javax.xml.bind.JAXBException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = new javax.xml.namespace.QName;

        specialinvoke $r5.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>(r6, r7);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid property on ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<javax.xml.bind.JAXBException: void <init>(java.lang.String)>($r11);

        throw $r3;
    }

    public java.util.List getKnownNamespaceURIs()
    {
        java.util.List $r3;
        com.sun.xml.bind.v2.runtime.NameList $r1;
        java.lang.String[] $r2;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameList nameList>;

        $r2 = $r1.<com.sun.xml.bind.v2.runtime.NameList: java.lang.String[] namespaceURIs>;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        return $r3;
    }

    public java.lang.String getBuildId()
    {
        java.lang.Package $r2;
        java.lang.Class $r1;
        java.lang.String $r3;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Package getPackage()>();

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.Package: java.lang.String getImplementationVersion()>();

        return $r3;
    }

    public java.lang.String toString()
    {
        java.util.TreeSet $r10;
        java.util.Map $r11;
        java.lang.String $r4, $r7, $r9, $r15, $r20, r22;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r2;
        boolean $z0, $z1;
        java.util.Iterator $r13, $r14;
        java.util.Set $r12;
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r8, $r17, $r18;
        java.lang.Class $r3, r21;
        java.lang.Object $r16, $r19;

        r2 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r0 = new java.lang.StringBuilder;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <com.sun.xml.bind.util.Which: java.lang.String which(java.lang.Class)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Build-Id: ");

        $r7 = virtualinvoke r2.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.lang.String getBuildId()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nClasses known to this context:\n");

        $r10 = new java.util.TreeSet;

        specialinvoke $r10.<java.util.TreeSet: void <init>()>();

        $r11 = r2.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map beanInfoMap>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set keySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r19 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.lang.Class) $r19;

        $r20 = virtualinvoke r21.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>($r20);

        goto label1;

     label2:
        $r14 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r16 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.lang.String) $r16;

        $r17 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        goto label3;

     label4:
        $r15 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public java.lang.String getXMIMEContentType(java.lang.Object)
    {
        com.sun.xml.bind.v2.runtime.Name $r7;
        com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl r3;
        java.lang.ClassCastException $r11;
        int i0, i1;
        com.sun.xml.bind.v2.runtime.property.Property r5;
        java.lang.String $r10;
        com.sun.xml.bind.api.AccessorException $r13;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;
        boolean $z0, $z1, $z2;
        com.sun.xml.bind.v2.runtime.property.Property[] r4;
        java.lang.CharSequence $r9;
        com.sun.xml.bind.v2.runtime.property.AttributeProperty r6;
        org.xml.sax.SAXException $r12;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor $r8;
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Object)>(r1);

        $z0 = $r2 instanceof com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl;

        if $z0 != 0 goto label1;

        return null;

     label1:
        r3 = (com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl) $r2;

        r4 = r3.<com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl: com.sun.xml.bind.v2.runtime.property.Property[] properties>;

        i0 = lengthof r4;

        i1 = 0;

     label2:
        if i1 >= i0 goto label9;

        r5 = r4[i1];

        $z1 = r5 instanceof com.sun.xml.bind.v2.runtime.property.AttributeProperty;

        if $z1 == 0 goto label8;

        r6 = (com.sun.xml.bind.v2.runtime.property.AttributeProperty) r5;

        $r7 = r6.<com.sun.xml.bind.v2.runtime.property.AttributeProperty: com.sun.xml.bind.v2.runtime.Name attName>;

        $z2 = virtualinvoke $r7.<com.sun.xml.bind.v2.runtime.Name: boolean equals(java.lang.String,java.lang.String)>("http://www.w3.org/2005/05/xmlmime", "contentType");

        if $z2 == 0 goto label8;

     label3:
        $r8 = r6.<com.sun.xml.bind.v2.runtime.property.AttributeProperty: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        $r9 = virtualinvoke $r8.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor: java.lang.CharSequence print(java.lang.Object)>(r1);

        $r10 = (java.lang.String) $r9;

     label4:
        return $r10;

     label5:
        $r13 := @caughtexception;

        return null;

     label6:
        $r12 := @caughtexception;

        return null;

     label7:
        $r11 := @caughtexception;

        return null;

     label8:
        i1 = i1 + 1;

        goto label2;

     label9:
        return null;

        catch com.sun.xml.bind.api.AccessorException from label3 to label4 with label5;
        catch org.xml.sax.SAXException from label3 to label4 with label6;
        catch java.lang.ClassCastException from label3 to label4 with label7;
    }

    public com.sun.xml.bind.v2.runtime.JAXBContextImpl createAugmented(java.lang.Class) throws javax.xml.bind.JAXBException
    {
        java.lang.Class[] $r1, r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.Class r6;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder $r7;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0, $r8;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r6 := @parameter0: java.lang.Class;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.lang.Class[] classes>;

        $i0 = lengthof $r1;

        $i1 = $i0 + 1;

        r2 = newarray (java.lang.Class)[$i1];

        $r4 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.lang.Class[] classes>;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.lang.Class[] classes>;

        $i2 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i2);

        $r5 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.lang.Class[] classes>;

        $i3 = lengthof $r5;

        r2[$i3] = r6;

        $r7 = new com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder;

        specialinvoke $r7.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r0);

        virtualinvoke $r7.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setClasses(java.lang.Class[])>(r2);

        $r8 = virtualinvoke $r7.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl build()>();

        return $r8;
    }

    public volatile javax.xml.bind.Marshaller createMarshaller() throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;
        com.sun.xml.bind.v2.runtime.MarshallerImpl $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.MarshallerImpl createMarshaller()>();

        return $r1;
    }

    public volatile javax.xml.bind.Unmarshaller createUnmarshaller() throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl $r1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl createUnmarshaller()>();

        return $r1;
    }

    static java.lang.String access$1200(com.sun.xml.bind.v2.runtime.JAXBContextImpl)
    {
        java.lang.String $r1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.lang.String defaultNsUri>;

        return $r1;
    }

    static com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader access$1300(com.sun.xml.bind.v2.runtime.JAXBContextImpl)
    {
        com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader $r1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader annotationReader>;

        return $r1;
    }

    static java.util.Map access$1400(com.sun.xml.bind.v2.runtime.JAXBContextImpl)
    {
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;
        java.util.Map $r1;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map subclassReplacements>;

        return $r1;
    }

    static java.lang.Class[] access$1500(com.sun.xml.bind.v2.runtime.JAXBContextImpl)
    {
        java.lang.Class[] $r1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.lang.Class[] classes>;

        return $r1;
    }

    static java.util.Map access$1600(com.sun.xml.bind.v2.runtime.JAXBContextImpl)
    {
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;
        java.util.Map $r1;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Map bridges>;

        return $r1;
    }

    void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder, com.sun.xml.bind.v2.runtime.JAXBContextImpl$1) throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder r1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl$1 r2;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.JAXBContextImpl$1;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder)>(r1);

        return;
    }

    static void <clinit>()
    {
        com.sun.xml.bind.v2.runtime.JAXBContextImpl$7 $r1;
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/bind/v2/runtime/JAXBContextImpl;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean $assertionsDisabled> = $z1;

        $r1 = new com.sun.xml.bind.v2.runtime.JAXBContextImpl$7;

        specialinvoke $r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$7: void <init>()>();

        <com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Comparator QNAME_COMPARATOR> = $r1;

        return;
    }
}
