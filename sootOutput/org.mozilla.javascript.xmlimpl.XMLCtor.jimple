class org.mozilla.javascript.xmlimpl.XMLCtor extends org.mozilla.javascript.IdFunctionObject
{
    static final long serialVersionUID;
    private static final java.lang.Object XMLCTOR_TAG;
    private org.mozilla.javascript.xmlimpl.XMLLibImpl lib;
    private static final int Id_ignoreComments;
    private static final int Id_ignoreProcessingInstructions;
    private static final int Id_ignoreWhitespace;
    private static final int Id_prettyIndent;
    private static final int Id_prettyPrinting;
    private static final int MAX_INSTANCE_ID;
    private static final int Id_defaultSettings;
    private static final int Id_settings;
    private static final int Id_setSettings;
    private static final int MAX_FUNCTION_ID;

    void <init>(org.mozilla.javascript.xmlimpl.XML, java.lang.Object, int, int)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r3;
        int i0, i1;
        org.mozilla.javascript.xmlimpl.XMLCtor r0;
        java.lang.Object r2;
        org.mozilla.javascript.xmlimpl.XML r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLCtor;

        r1 := @parameter0: org.mozilla.javascript.xmlimpl.XML;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.mozilla.javascript.IdFunctionObject: void <init>(org.mozilla.javascript.IdFunctionCall,java.lang.Object,int,int)>(r1, r2, i0, i1);

        $r3 = r1.<org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        r0.<org.mozilla.javascript.xmlimpl.XMLCtor: org.mozilla.javascript.xmlimpl.XMLLibImpl lib> = $r3;

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLCtor: void activatePrototypeMap(int)>(3);

        return;
    }

    private void writeSetting(org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r3;
        int $i0, i1, i2;
        org.mozilla.javascript.xmlimpl.XMLCtor r0;
        java.lang.Object $r2;
        java.lang.String $r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLCtor;

        r3 := @parameter0: org.mozilla.javascript.Scriptable;

        i2 = 1;

     label1:
        if i2 > 5 goto label2;

        $i0 = specialinvoke r0.<org.mozilla.javascript.IdFunctionObject: int getMaxInstanceId()>();

        i1 = $i0 + i2;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLCtor: java.lang.String getInstanceIdName(int)>(i1);

        $r2 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLCtor: java.lang.Object getInstanceIdValue(int)>(i1);

        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object)>(r3, $r1, $r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private void readSettings(org.mozilla.javascript.Scriptable)
    {
        java.lang.IllegalStateException $r5;
        org.mozilla.javascript.Scriptable r2;
        int $i0, i1, i2;
        org.mozilla.javascript.xmlimpl.XMLCtor r0;
        java.lang.Object $r3, $r4;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLCtor;

        r2 := @parameter0: org.mozilla.javascript.Scriptable;

        i2 = 1;

     label1:
        if i2 > 5 goto label8;

        $i0 = specialinvoke r0.<org.mozilla.javascript.IdFunctionObject: int getMaxInstanceId()>();

        i1 = $i0 + i2;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLCtor: java.lang.String getInstanceIdName(int)>(i1);

        $r3 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r2, $r1);

        $r4 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r3 != $r4 goto label2;

        goto label7;

     label2:
        tableswitch(i2)
        {
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label3;
            default: goto label5;
        };

     label3:
        $z1 = $r3 instanceof java.lang.Boolean;

        if $z1 != 0 goto label6;

        goto label7;

     label4:
        $z0 = $r3 instanceof java.lang.Number;

        if $z0 != 0 goto label6;

        goto label7;

     label5:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label6:
        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLCtor: void setInstanceIdValue(int,java.lang.Object)>(i1, $r3);

     label7:
        i2 = i2 + 1;

        goto label1;

     label8:
        return;
    }

    protected int getMaxInstanceId()
    {
        int $i0, $i1;
        org.mozilla.javascript.xmlimpl.XMLCtor r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLCtor;

        $i0 = specialinvoke r0.<org.mozilla.javascript.IdFunctionObject: int getMaxInstanceId()>();

        $i1 = $i0 + 5;

        return $i1;
    }

    protected int findInstanceIdInfo(java.lang.String)
    {
        java.lang.IllegalStateException $r7;
        byte b6, b7, b8, b9;
        int $i0, $i1, $i2, $i3, $i4, $i10, $i11;
        org.mozilla.javascript.xmlimpl.XMLCtor r1;
        java.lang.String r0, r3, r4, r5, r6;
        boolean $z0;
        char $c5;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLCtor;

        r0 := @parameter0: java.lang.String;

        b6 = 0;

        b9 = 0;

        b8 = 0;

        b7 = 0;

        r3 = null;

        r6 = null;

        r5 = null;

        r4 = null;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        lookupswitch($i0)
        {
            case 12: goto label01;
            case 14: goto label02;
            case 16: goto label04;
            case 28: goto label05;
            default: goto label06;
        };

     label01:
        r3 = "prettyIndent";

        r6 = "prettyIndent";

        r5 = "prettyIndent";

        r4 = "prettyIndent";

        b6 = 4;

        b9 = 4;

        b8 = 4;

        b7 = 4;

        goto label06;

     label02:
        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i10 = (int) $c5;

        if $i10 != 105 goto label03;

        r3 = "ignoreComments";

        r6 = "ignoreComments";

        r5 = "ignoreComments";

        r4 = "ignoreComments";

        b6 = 1;

        b9 = 1;

        b8 = 1;

        b7 = 1;

        goto label06;

     label03:
        $i11 = (int) $c5;

        if $i11 != 112 goto label06;

        r3 = "prettyPrinting";

        r6 = "prettyPrinting";

        r5 = "prettyPrinting";

        r4 = "prettyPrinting";

        b6 = 5;

        b9 = 5;

        b8 = 5;

        b7 = 5;

        goto label06;

     label04:
        r3 = "ignoreWhitespace";

        r6 = "ignoreWhitespace";

        r5 = "ignoreWhitespace";

        r4 = "ignoreWhitespace";

        b6 = 3;

        b9 = 3;

        b8 = 3;

        b7 = 3;

        goto label06;

     label05:
        r3 = "ignoreProcessingInstructions";

        r6 = "ignoreProcessingInstructions";

        r5 = "ignoreProcessingInstructions";

        r4 = "ignoreProcessingInstructions";

        b6 = 2;

        b9 = 2;

        b8 = 2;

        b7 = 2;

        goto label06;

     label06:
        if r5 == null goto label07;

        if r6 == r0 goto label07;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label07;

        b6 = 0;

        b9 = 0;

        b8 = 0;

        b7 = 0;

     label07:
        if b7 != 0 goto label08;

        $i4 = specialinvoke r1.<org.mozilla.javascript.IdFunctionObject: int findInstanceIdInfo(java.lang.String)>(r0);

        return $i4;

     label08:
        tableswitch(b8)
        {
            case 1: goto label09;
            case 2: goto label09;
            case 3: goto label09;
            case 4: goto label09;
            case 5: goto label09;
            default: goto label10;
        };

     label09:
        goto label11;

     label10:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>()>();

        throw $r7;

     label11:
        $i1 = specialinvoke r1.<org.mozilla.javascript.IdFunctionObject: int getMaxInstanceId()>();

        $i2 = $i1 + b9;

        $i3 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLCtor: int instanceIdInfo(int,int)>(6, $i2);

        return $i3;
    }

    protected java.lang.String getInstanceIdName(int)
    {
        int i0, $i1, $i2;
        org.mozilla.javascript.xmlimpl.XMLCtor r0;
        java.lang.String $r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLCtor;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<org.mozilla.javascript.IdFunctionObject: int getMaxInstanceId()>();

        $i2 = i0 - $i1;

        tableswitch($i2)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label1:
        return "ignoreComments";

     label2:
        return "ignoreProcessingInstructions";

     label3:
        return "ignoreWhitespace";

     label4:
        return "prettyIndent";

     label5:
        return "prettyPrinting";

     label6:
        $r1 = specialinvoke r0.<org.mozilla.javascript.IdFunctionObject: java.lang.String getInstanceIdName(int)>(i0);

        return $r1;
    }

    protected java.lang.Object getInstanceIdValue(int)
    {
        java.lang.Integer $r4;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r1, $r3, $r5, $r7, $r9;
        int i0, $i1, $i2, $i3;
        org.mozilla.javascript.xmlimpl.XMLCtor r0;
        java.lang.Boolean $r2, $r6, $r8, $r10;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r11;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLCtor;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<org.mozilla.javascript.IdFunctionObject: int getMaxInstanceId()>();

        $i2 = i0 - $i1;

        tableswitch($i2)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label1:
        $r9 = r0.<org.mozilla.javascript.xmlimpl.XMLCtor: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $z3 = $r9.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean ignoreComments>;

        $r10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>($z3);

        return $r10;

     label2:
        $r7 = r0.<org.mozilla.javascript.xmlimpl.XMLCtor: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $z2 = $r7.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean ignoreProcessingInstructions>;

        $r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>($z2);

        return $r8;

     label3:
        $r5 = r0.<org.mozilla.javascript.xmlimpl.XMLCtor: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $z1 = $r5.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean ignoreWhitespace>;

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>($z1);

        return $r6;

     label4:
        $r3 = r0.<org.mozilla.javascript.xmlimpl.XMLCtor: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $i3 = $r3.<org.mozilla.javascript.xmlimpl.XMLLibImpl: int prettyIndent>;

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Integer wrapInt(int)>($i3);

        return $r4;

     label5:
        $r1 = r0.<org.mozilla.javascript.xmlimpl.XMLCtor: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $z0 = $r1.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean prettyPrinting>;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>($z0);

        return $r2;

     label6:
        $r11 = specialinvoke r0.<org.mozilla.javascript.IdFunctionObject: java.lang.Object getInstanceIdValue(int)>(i0);

        return $r11;
    }

    protected void setInstanceIdValue(int, java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r2, $r3, $r4, $r5, $r6;
        int i0, $i1, $i2, $i3;
        org.mozilla.javascript.xmlimpl.XMLCtor r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLCtor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $i1 = specialinvoke r0.<org.mozilla.javascript.IdFunctionObject: int getMaxInstanceId()>();

        $i2 = i0 - $i1;

        tableswitch($i2)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label1:
        $r6 = r0.<org.mozilla.javascript.xmlimpl.XMLCtor: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $z3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean toBoolean(java.lang.Object)>(r1);

        $r6.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean ignoreComments> = $z3;

        return;

     label2:
        $r5 = r0.<org.mozilla.javascript.xmlimpl.XMLCtor: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $z2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean toBoolean(java.lang.Object)>(r1);

        $r5.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean ignoreProcessingInstructions> = $z2;

        return;

     label3:
        $r4 = r0.<org.mozilla.javascript.xmlimpl.XMLCtor: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $z1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean toBoolean(java.lang.Object)>(r1);

        $r4.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean ignoreWhitespace> = $z1;

        return;

     label4:
        $r3 = r0.<org.mozilla.javascript.xmlimpl.XMLCtor: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $i3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: int toInt32(java.lang.Object)>(r1);

        $r3.<org.mozilla.javascript.xmlimpl.XMLLibImpl: int prettyIndent> = $i3;

        return;

     label5:
        $r2 = r0.<org.mozilla.javascript.xmlimpl.XMLCtor: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        $z0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean toBoolean(java.lang.Object)>(r1);

        $r2.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean prettyPrinting> = $z0;

        return;

     label6:
        specialinvoke r0.<org.mozilla.javascript.IdFunctionObject: void setInstanceIdValue(int,java.lang.Object)>(i0, r1);

        return;
    }

    protected int findPrototypeId(java.lang.String)
    {
        byte b1;
        int $i0;
        org.mozilla.javascript.xmlimpl.XMLCtor r1;
        java.lang.String r0, r2, r3, r4, r5;
        boolean $z0;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLCtor;

        r0 := @parameter0: java.lang.String;

        b1 = 0;

        r2 = null;

        r5 = null;

        r4 = null;

        r3 = null;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 8 goto label1;

        r2 = "settings";

        r5 = "settings";

        r4 = "settings";

        r3 = "settings";

        b1 = 2;

        goto label3;

     label1:
        if $i0 != 11 goto label2;

        r2 = "setSettings";

        r5 = "setSettings";

        r4 = "setSettings";

        r3 = "setSettings";

        b1 = 3;

        goto label3;

     label2:
        if $i0 != 15 goto label3;

        r2 = "defaultSettings";

        r5 = "defaultSettings";

        r4 = "defaultSettings";

        r3 = "defaultSettings";

        b1 = 1;

     label3:
        if r3 == null goto label4;

        if r5 == r0 goto label4;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label4;

        b1 = 0;

     label4:
        return b1;
    }

    protected void initPrototypeId(int)
    {
        byte b1;
        int i0;
        org.mozilla.javascript.xmlimpl.XMLCtor r0;
        java.lang.Object $r4;
        java.lang.String $r2, r3;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLCtor;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        b1 = 0;

        r3 = "defaultSettings";

        goto label5;

     label2:
        b1 = 0;

        r3 = "settings";

        goto label5;

     label3:
        b1 = 1;

        r3 = "setSettings";

        goto label5;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label5:
        $r4 = <org.mozilla.javascript.xmlimpl.XMLCtor: java.lang.Object XMLCTOR_TAG>;

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLCtor: void initPrototypeMethod(java.lang.Object,int,java.lang.String,int)>($r4, i0, r3, b1);

        return;
    }

    public java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r2;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r13, $r19;
        org.mozilla.javascript.IdFunctionObject r0;
        int $i0, $i1;
        org.mozilla.javascript.xmlimpl.XMLCtor r3;
        java.lang.String $r16;
        boolean $z0, $z1;
        org.mozilla.javascript.Context r10;
        java.lang.IllegalArgumentException $r15;
        org.mozilla.javascript.Scriptable $r9, r11, $r12, $r14, r17;
        java.lang.Object $r1, $r4, $r5, $r6, $r7, $r8, $r18, $r20;

        r3 := @this: org.mozilla.javascript.xmlimpl.XMLCtor;

        r0 := @parameter0: org.mozilla.javascript.IdFunctionObject;

        r10 := @parameter1: org.mozilla.javascript.Context;

        r11 := @parameter2: org.mozilla.javascript.Scriptable;

        r17 := @parameter3: org.mozilla.javascript.Scriptable;

        r2 := @parameter4: java.lang.Object[];

        $r1 = <org.mozilla.javascript.xmlimpl.XMLCtor: java.lang.Object XMLCTOR_TAG>;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: boolean hasTag(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r18 = specialinvoke r3.<org.mozilla.javascript.IdFunctionObject: java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r0, r10, r11, r17, r2);

        return $r18;

     label1:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: int methodId()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label8;
        };

     label2:
        $r13 = r3.<org.mozilla.javascript.xmlimpl.XMLCtor: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        virtualinvoke $r13.<org.mozilla.javascript.xmlimpl.XMLLibImpl: void defaultSettings()>();

        $r14 = virtualinvoke r10.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Scriptable)>(r11);

        specialinvoke r3.<org.mozilla.javascript.xmlimpl.XMLCtor: void writeSetting(org.mozilla.javascript.Scriptable)>($r14);

        return $r14;

     label3:
        $r12 = virtualinvoke r10.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Scriptable)>(r11);

        specialinvoke r3.<org.mozilla.javascript.xmlimpl.XMLCtor: void writeSetting(org.mozilla.javascript.Scriptable)>($r12);

        return $r12;

     label4:
        $i1 = lengthof r2;

        if $i1 == 0 goto label5;

        $r4 = r2[0];

        if $r4 == null goto label5;

        $r6 = r2[0];

        $r5 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if $r6 != $r5 goto label6;

     label5:
        $r19 = r3.<org.mozilla.javascript.xmlimpl.XMLCtor: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        virtualinvoke $r19.<org.mozilla.javascript.xmlimpl.XMLLibImpl: void defaultSettings()>();

        goto label7;

     label6:
        $r7 = r2[0];

        $z1 = $r7 instanceof org.mozilla.javascript.Scriptable;

        if $z1 == 0 goto label7;

        $r8 = r2[0];

        $r9 = (org.mozilla.javascript.Scriptable) $r8;

        specialinvoke r3.<org.mozilla.javascript.xmlimpl.XMLCtor: void readSettings(org.mozilla.javascript.Scriptable)>($r9);

     label7:
        $r20 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        return $r20;

     label8:
        $r15 = new java.lang.IllegalArgumentException;

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <org.mozilla.javascript.xmlimpl.XMLCtor: int MAX_FUNCTION_ID> = 3;

        <org.mozilla.javascript.xmlimpl.XMLCtor: int Id_setSettings> = 3;

        <org.mozilla.javascript.xmlimpl.XMLCtor: int Id_settings> = 2;

        <org.mozilla.javascript.xmlimpl.XMLCtor: int Id_defaultSettings> = 1;

        <org.mozilla.javascript.xmlimpl.XMLCtor: int MAX_INSTANCE_ID> = 5;

        <org.mozilla.javascript.xmlimpl.XMLCtor: int Id_prettyPrinting> = 5;

        <org.mozilla.javascript.xmlimpl.XMLCtor: int Id_prettyIndent> = 4;

        <org.mozilla.javascript.xmlimpl.XMLCtor: int Id_ignoreWhitespace> = 3;

        <org.mozilla.javascript.xmlimpl.XMLCtor: int Id_ignoreProcessingInstructions> = 2;

        <org.mozilla.javascript.xmlimpl.XMLCtor: int Id_ignoreComments> = 1;

        <org.mozilla.javascript.xmlimpl.XMLCtor: long serialVersionUID> = -8708195078359817341L;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.mozilla.javascript.xmlimpl.XMLCtor: java.lang.Object XMLCTOR_TAG> = $r0;

        return;
    }
}
