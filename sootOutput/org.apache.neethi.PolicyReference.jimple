public class org.apache.neethi.PolicyReference extends java.lang.Object implements org.apache.neethi.PolicyComponent
{
    private java.lang.String uri;
    private org.apache.neethi.PolicyBuilder engine;

    public void <init>()
    {
        org.apache.neethi.PolicyReference r0;

        r0 := @this: org.apache.neethi.PolicyReference;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.apache.neethi.PolicyBuilder)
    {
        org.apache.neethi.PolicyBuilder r1;
        org.apache.neethi.PolicyReference r0;

        r0 := @this: org.apache.neethi.PolicyReference;

        r1 := @parameter0: org.apache.neethi.PolicyBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.neethi.PolicyReference: org.apache.neethi.PolicyBuilder engine> = r1;

        return;
    }

    public void setURI(java.lang.String)
    {
        java.lang.String r1;
        org.apache.neethi.PolicyReference r0;

        r0 := @this: org.apache.neethi.PolicyReference;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.neethi.PolicyReference: java.lang.String uri> = r1;

        return;
    }

    public java.lang.String getURI()
    {
        java.lang.String $r1;
        org.apache.neethi.PolicyReference r0;

        r0 := @this: org.apache.neethi.PolicyReference;

        $r1 = r0.<org.apache.neethi.PolicyReference: java.lang.String uri>;

        return $r1;
    }

    public boolean equal(org.apache.neethi.PolicyComponent)
    {
        org.apache.neethi.PolicyReference $r1, r3;
        short $s0;
        org.apache.neethi.PolicyComponent r0;
        int $i1, $i2;
        java.lang.String $r2, $r4;
        boolean $z0, $z1;

        r3 := @this: org.apache.neethi.PolicyReference;

        r0 := @parameter0: org.apache.neethi.PolicyComponent;

        $s0 = interfaceinvoke r0.<org.apache.neethi.PolicyComponent: short getType()>();

        $i2 = (int) $s0;

        if 4 == $i2 goto label1;

        return 0;

     label1:
        $r1 = (org.apache.neethi.PolicyReference) r0;

        $r2 = virtualinvoke $r1.<org.apache.neethi.PolicyReference: java.lang.String getURI()>();

        if $r2 == null goto label2;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 == 0 goto label2;

        $r4 = r3.<org.apache.neethi.PolicyReference: java.lang.String uri>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public short getType()
    {
        org.apache.neethi.PolicyReference r0;

        r0 := @this: org.apache.neethi.PolicyReference;

        return 4;
    }

    public org.apache.neethi.PolicyComponent normalize()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.neethi.PolicyReference r1;

        r1 := @this: org.apache.neethi.PolicyReference;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("PolicyReference.normalize() is meaningless");

        throw $r0;
    }

    public org.apache.neethi.PolicyComponent normalize(org.apache.neethi.PolicyRegistry, boolean)
    {
        org.apache.neethi.PolicyReference r0;
        java.lang.RuntimeException $r5;
        org.apache.neethi.Policy $r3, $r4, $r11, r12;
        org.apache.neethi.PolicyRegistry r2;
        int $i0;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r1, $r9, r10;
        boolean z0;

        r0 := @this: org.apache.neethi.PolicyReference;

        r2 := @parameter0: org.apache.neethi.PolicyRegistry;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<org.apache.neethi.PolicyReference: java.lang.String getURI()>();

        r10 = $r1;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("#");

        if $i0 != 0 goto label1;

        r10 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        goto label2;

     label1:
        if $i0 <= 0 goto label2;

        r10 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        $r11 = interfaceinvoke r2.<org.apache.neethi.PolicyRegistry: org.apache.neethi.Policy lookup(java.lang.String)>(r10);

        r12 = $r11;

        if $r11 != null goto label4;

        $r4 = virtualinvoke r0.<org.apache.neethi.PolicyReference: org.apache.neethi.Policy getRemoteReferencedPolicy(java.lang.String)>(r10);

        r12 = $r4;

        if $r4 != null goto label3;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can\'t be resolved");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label3:
        interfaceinvoke r2.<org.apache.neethi.PolicyRegistry: void register(java.lang.String,org.apache.neethi.Policy)>(r10, $r4);

     label4:
        $r3 = virtualinvoke r12.<org.apache.neethi.Policy: org.apache.neethi.Policy normalize(org.apache.neethi.PolicyRegistry,boolean)>(r2, z0);

        return $r3;
    }

    public void serialize(javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException
    {
        org.apache.neethi.PolicyReference r3;
        javax.xml.stream.XMLStreamWriter r0;
        java.lang.String $r1, $r2, $r4, r5;

        r3 := @this: org.apache.neethi.PolicyReference;

        r0 := @parameter0: javax.xml.stream.XMLStreamWriter;

        $r1 = staticinvoke <org.apache.neethi.Constants: java.lang.String findPolicyNamespace(javax.xml.stream.XMLStreamWriter)>(r0);

        $r2 = interfaceinvoke r0.<javax.xml.stream.XMLStreamWriter: java.lang.String getPrefix(java.lang.String)>($r1);

        r5 = $r2;

        if $r2 != null goto label1;

        r5 = "wsp";

        interfaceinvoke r0.<javax.xml.stream.XMLStreamWriter: void setPrefix(java.lang.String,java.lang.String)>("wsp", $r1);

     label1:
        interfaceinvoke r0.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>(r5, "PolicyReference", $r1);

        interfaceinvoke r0.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>("wsp", $r1);

        $r4 = virtualinvoke r3.<org.apache.neethi.PolicyReference: java.lang.String getURI()>();

        interfaceinvoke r0.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>("URI", $r4);

        interfaceinvoke r0.<javax.xml.stream.XMLStreamWriter: void writeEndElement()>();

        return;
    }

    public org.apache.neethi.Policy getRemoteReferencedPolicy(java.lang.String)
    {
        java.lang.Throwable $r20;
        org.apache.neethi.PolicyBuilder $r7, r21;
        java.net.URL $r0;
        org.apache.neethi.PolicyReference r4;
        java.net.URLConnection $r2;
        java.lang.String r1, $r13, $r19;
        java.net.MalformedURLException $r14;
        java.io.IOException $r8;
        java.lang.RuntimeException $r9, $r15;
        org.apache.neethi.Policy $r6;
        java.lang.StringBuilder $r10, $r11, $r12, $r16, $r17, $r18;
        java.io.InputStream $r3, $r5;

        r4 := @this: org.apache.neethi.PolicyReference;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = new java.net.URL;

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r2.<java.net.URLConnection: void setDoInput(boolean)>(1);

        $r3 = virtualinvoke $r2.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label2:
        r21 = r4.<org.apache.neethi.PolicyReference: org.apache.neethi.PolicyBuilder engine>;

        if r21 != null goto label3;

        $r7 = new org.apache.neethi.PolicyBuilder;

        specialinvoke $r7.<org.apache.neethi.PolicyBuilder: void <init>()>();

        r21 = $r7;

     label3:
        $r5 = virtualinvoke $r2.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        $r6 = virtualinvoke r21.<org.apache.neethi.PolicyBuilder: org.apache.neethi.Policy getPolicy(java.io.InputStream)>($r5);

     label4:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label5:
        return $r6;

     label6:
        $r20 := @caughtexception;

     label7:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

        throw $r20;

     label8:
        $r14 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed uri: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label9:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot reach remote resource: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r9;

        catch java.lang.Throwable from label2 to label4 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
        catch java.net.MalformedURLException from label1 to label5 with label8;
        catch java.net.MalformedURLException from label6 to label8 with label8;
        catch java.io.IOException from label1 to label5 with label9;
        catch java.io.IOException from label6 to label8 with label9;
    }
}
