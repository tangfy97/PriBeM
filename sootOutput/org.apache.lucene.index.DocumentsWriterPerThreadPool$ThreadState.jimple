final class org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState extends java.util.concurrent.locks.ReentrantLock
{
    org.apache.lucene.index.DocumentsWriterPerThread dwpt;
    volatile boolean flushPending;
    long bytesUsed;
    private boolean isActive;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.lucene.index.DocumentsWriterPerThread)
    {
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r0;
        org.apache.lucene.index.DocumentsWriterPerThread r1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        r1 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThread;

        specialinvoke r0.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean flushPending> = 0;

        r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: long bytesUsed> = 0L;

        r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isActive> = 1;

        r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt> = r1;

        return;
    }

    private void resetWriter(org.apache.lucene.index.DocumentsWriterPerThread)
    {
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r1;
        java.lang.AssertionError $r2;
        org.apache.lucene.index.DocumentsWriterPerThread r0;
        boolean $z0, $z1;

        r1 := @this: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        r0 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThread;

        $z0 = <org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isHeldByCurrentThread()>();

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        if r0 != null goto label2;

        r1.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isActive> = 0;

     label2:
        r1.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt> = r0;

        r1.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: long bytesUsed> = 0L;

        r1.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean flushPending> = 0;

        return;
    }

    boolean isActive()
    {
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r0;
        java.lang.AssertionError $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        $z0 = <org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isHeldByCurrentThread()>();

        if $z2 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $z1 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isActive>;

        return $z1;
    }

    public long getBytesUsedPerThread()
    {
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r0;
        long $l0;
        java.lang.AssertionError $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        $z0 = <org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isHeldByCurrentThread()>();

        if $z1 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $l0 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: long bytesUsed>;

        return $l0;
    }

    public org.apache.lucene.index.DocumentsWriterPerThread getDocumentsWriterPerThread()
    {
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r0;
        java.lang.AssertionError $r2;
        org.apache.lucene.index.DocumentsWriterPerThread $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        $z0 = <org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isHeldByCurrentThread()>();

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        return $r1;
    }

    public boolean isFlushPending()
    {
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        $z0 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean flushPending>;

        return $z0;
    }

    static void access$000(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState, org.apache.lucene.index.DocumentsWriterPerThread)
    {
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r0;
        org.apache.lucene.index.DocumentsWriterPerThread r1;

        r0 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        r1 := @parameter1: org.apache.lucene.index.DocumentsWriterPerThread;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void resetWriter(org.apache.lucene.index.DocumentsWriterPerThread)>(r1);

        return;
    }

    static boolean access$100(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)
    {
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r0;
        boolean $z0;

        r0 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        $z0 = r0.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isActive>;

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/DocumentsWriterPerThreadPool;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean $assertionsDisabled> = $z1;

        return;
    }
}
