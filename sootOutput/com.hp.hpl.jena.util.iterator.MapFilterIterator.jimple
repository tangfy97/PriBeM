public class com.hp.hpl.jena.util.iterator.MapFilterIterator extends com.hp.hpl.jena.util.iterator.NiceIterator implements com.hp.hpl.jena.util.iterator.ExtendedIterator
{
    com.hp.hpl.jena.util.iterator.MapFilter f;
    java.lang.Object current;
    boolean dead;
    com.hp.hpl.jena.util.iterator.ClosableIterator underlying;

    public void <init>(com.hp.hpl.jena.util.iterator.MapFilter, com.hp.hpl.jena.util.iterator.ExtendedIterator)
    {
        com.hp.hpl.jena.util.iterator.MapFilter r1;
        com.hp.hpl.jena.util.iterator.ExtendedIterator r2;
        com.hp.hpl.jena.util.iterator.MapFilterIterator r0;

        r0 := @this: com.hp.hpl.jena.util.iterator.MapFilterIterator;

        r1 := @parameter0: com.hp.hpl.jena.util.iterator.MapFilter;

        r2 := @parameter1: com.hp.hpl.jena.util.iterator.ExtendedIterator;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.NiceIterator: void <init>()>();

        r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: com.hp.hpl.jena.util.iterator.MapFilter f> = r1;

        r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: java.lang.Object current> = null;

        r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: boolean dead> = 0;

        r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: com.hp.hpl.jena.util.iterator.ClosableIterator underlying> = r2;

        return;
    }

    public synchronized boolean hasNext()
    {
        com.hp.hpl.jena.util.iterator.MapFilterIterator r0;
        com.hp.hpl.jena.util.iterator.ClosableIterator $r2, $r3;
        com.hp.hpl.jena.util.iterator.MapFilter $r4;
        java.lang.Object $r1, $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.util.iterator.MapFilterIterator;

        $r1 = r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: java.lang.Object current>;

        if $r1 == null goto label1;

        return 1;

     label1:
        $r2 = r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: com.hp.hpl.jena.util.iterator.ClosableIterator underlying>;

        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.util.iterator.ClosableIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: com.hp.hpl.jena.util.iterator.MapFilter f>;

        $r3 = r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: com.hp.hpl.jena.util.iterator.ClosableIterator underlying>;

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.util.iterator.ClosableIterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r4.<com.hp.hpl.jena.util.iterator.MapFilter: java.lang.Object accept(java.lang.Object)>($r5);

        r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: java.lang.Object current> = $r6;

        $r7 = r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: java.lang.Object current>;

        if $r7 == null goto label1;

        return 1;

     label2:
        r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: java.lang.Object current> = null;

        r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: boolean dead> = 1;

        return 0;
    }

    public void close()
    {
        com.hp.hpl.jena.util.iterator.MapFilterIterator r0;
        com.hp.hpl.jena.util.iterator.ClosableIterator $r1;

        r0 := @this: com.hp.hpl.jena.util.iterator.MapFilterIterator;

        $r1 = r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: com.hp.hpl.jena.util.iterator.ClosableIterator underlying>;

        interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ClosableIterator: void close()>();

        return;
    }

    public synchronized void remove()
    {
        java.lang.IllegalStateException $r2;
        com.hp.hpl.jena.util.iterator.MapFilterIterator r0;
        java.lang.Object $r1;
        com.hp.hpl.jena.util.iterator.ClosableIterator $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.util.iterator.MapFilterIterator;

        $r1 = r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: java.lang.Object current>;

        if $r1 != null goto label1;

        $z0 = r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: boolean dead>;

        if $z0 == 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("FilterIterator does not permit calls to hasNext between calls to next and remove.");

        throw $r2;

     label2:
        $r3 = r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: com.hp.hpl.jena.util.iterator.ClosableIterator underlying>;

        interfaceinvoke $r3.<com.hp.hpl.jena.util.iterator.ClosableIterator: void remove()>();

        return;
    }

    public synchronized java.lang.Object next()
    {
        com.hp.hpl.jena.util.iterator.MapFilterIterator r0;
        java.lang.Object r2;
        java.util.NoSuchElementException $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.util.iterator.MapFilterIterator;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        r2 = r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: java.lang.Object current>;

        r0.<com.hp.hpl.jena.util.iterator.MapFilterIterator: java.lang.Object current> = null;

        return r2;

     label1:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;
    }
}
