public abstract class com.mycila.inject.internal.cglib.beans.BeanMap extends java.lang.Object implements java.util.Map
{
    public static final int REQUIRE_GETTER;
    public static final int REQUIRE_SETTER;
    protected java.lang.Object bean;
    static java.lang.Class class$net$sf$cglib$beans$BeanMap;
    static java.lang.Class class$net$sf$cglib$beans$BeanMap$Generator$BeanMapKey;

    public static com.mycila.inject.internal.cglib.beans.BeanMap create(java.lang.Object)
    {
        java.lang.Object r1;
        com.mycila.inject.internal.cglib.beans.BeanMap $r2;
        com.mycila.inject.internal.cglib.beans.BeanMap$Generator $r0;

        r1 := @parameter0: java.lang.Object;

        $r0 = new com.mycila.inject.internal.cglib.beans.BeanMap$Generator;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.beans.BeanMap$Generator: void <init>()>();

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.beans.BeanMap$Generator: void setBean(java.lang.Object)>(r1);

        $r2 = virtualinvoke $r0.<com.mycila.inject.internal.cglib.beans.BeanMap$Generator: com.mycila.inject.internal.cglib.beans.BeanMap create()>();

        return $r2;
    }

    public abstract com.mycila.inject.internal.cglib.beans.BeanMap newInstance(java.lang.Object);

    public abstract java.lang.Class getPropertyType(java.lang.String);

    protected void <init>()
    {
        com.mycila.inject.internal.cglib.beans.BeanMap r0;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void <init>(java.lang.Object)
    {
        com.mycila.inject.internal.cglib.beans.BeanMap r0;
        java.lang.Object r1;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<com.mycila.inject.internal.cglib.beans.BeanMap: void setBean(java.lang.Object)>(r1);

        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        com.mycila.inject.internal.cglib.beans.BeanMap r0;
        java.lang.Object r1, $r2, $r3;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.cglib.beans.BeanMap: java.lang.Object bean>;

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.cglib.beans.BeanMap: java.lang.Object get(java.lang.Object,java.lang.Object)>($r2, r1);

        return $r3;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        com.mycila.inject.internal.cglib.beans.BeanMap r0;
        java.lang.Object r1, r2, $r3, $r4;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.mycila.inject.internal.cglib.beans.BeanMap: java.lang.Object bean>;

        $r4 = virtualinvoke r0.<com.mycila.inject.internal.cglib.beans.BeanMap: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, r1, r2);

        return $r4;
    }

    public abstract java.lang.Object get(java.lang.Object, java.lang.Object);

    public abstract java.lang.Object put(java.lang.Object, java.lang.Object, java.lang.Object);

    public void setBean(java.lang.Object)
    {
        com.mycila.inject.internal.cglib.beans.BeanMap r0;
        java.lang.Object r1;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        r1 := @parameter0: java.lang.Object;

        r0.<com.mycila.inject.internal.cglib.beans.BeanMap: java.lang.Object bean> = r1;

        return;
    }

    public java.lang.Object getBean()
    {
        com.mycila.inject.internal.cglib.beans.BeanMap r0;
        java.lang.Object $r1;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        $r1 = r0.<com.mycila.inject.internal.cglib.beans.BeanMap: java.lang.Object bean>;

        return $r1;
    }

    public void clear()
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.cglib.beans.BeanMap r1;

        r1 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.util.Set $r1;
        com.mycila.inject.internal.cglib.beans.BeanMap r0;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.cglib.beans.BeanMap: java.util.Set keySet()>();

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.util.Iterator $r2;
        java.util.Set $r1;
        com.mycila.inject.internal.cglib.beans.BeanMap r0;
        java.lang.Object $r3, $r4, r5;
        boolean $z0, $z1;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        r5 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.cglib.beans.BeanMap: java.util.Set keySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = virtualinvoke r0.<com.mycila.inject.internal.cglib.beans.BeanMap: java.lang.Object get(java.lang.Object)>($r3);

        if r5 != null goto label2;

        if $r4 == null goto label3;

     label2:
        $z1 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label4;

     label3:
        return 1;

     label4:
        goto label1;

     label5:
        return 0;
    }

    public int size()
    {
        int $i0;
        java.util.Set $r1;
        com.mycila.inject.internal.cglib.beans.BeanMap r0;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.cglib.beans.BeanMap: java.util.Set keySet()>();

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        int $i0;
        com.mycila.inject.internal.cglib.beans.BeanMap r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        $i0 = virtualinvoke r0.<com.mycila.inject.internal.cglib.beans.BeanMap: int size()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.cglib.beans.BeanMap r1;
        java.lang.Object r2;

        r1 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void putAll(java.util.Map)
    {
        java.util.Iterator $r2;
        java.util.Map r0;
        java.util.Set $r1;
        java.lang.Object $r3, $r5;
        com.mycila.inject.internal.cglib.beans.BeanMap r4;
        boolean $z0;

        r4 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        r0 := @parameter0: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set keySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        virtualinvoke r4.<com.mycila.inject.internal.cglib.beans.BeanMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        goto label1;

     label2:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Iterator $r4;
        java.util.Set $r3;
        com.mycila.inject.internal.cglib.beans.BeanMap r2;
        java.util.Map r1;
        int $i0, $i1;
        java.lang.Object r0, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof java.util.Map;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r1 = (java.util.Map) r0;

        $i0 = virtualinvoke r2.<com.mycila.inject.internal.cglib.beans.BeanMap: int size()>();

        $i1 = interfaceinvoke r1.<java.util.Map: int size()>();

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        $r3 = virtualinvoke r2.<com.mycila.inject.internal.cglib.beans.BeanMap: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label9;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        $r6 = virtualinvoke r2.<com.mycila.inject.internal.cglib.beans.BeanMap: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        if $r6 != null goto label6;

        if $r7 != null goto label7;

        goto label8;

     label6:
        $z3 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z3 != 0 goto label8;

     label7:
        return 0;

     label8:
        goto label4;

     label9:
        return 1;
    }

    public int hashCode()
    {
        java.util.Iterator $r2;
        java.util.Set $r1;
        com.mycila.inject.internal.cglib.beans.BeanMap r0;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r3, $r4;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        i0 = 0;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.cglib.beans.BeanMap: java.util.Set keySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = virtualinvoke r0.<com.mycila.inject.internal.cglib.beans.BeanMap: java.lang.Object get(java.lang.Object)>($r3);

        $i1 = i0;

        if $r3 != null goto label2;

        $i2 = 0;

        goto label3;

     label2:
        $i2 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

     label3:
        if $r4 != null goto label4;

        $i3 = 0;

        goto label5;

     label4:
        $i3 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

     label5:
        $i4 = $i2 ^ $i3;

        i0 = $i1 + $i4;

        goto label1;

     label6:
        return i0;
    }

    public java.util.Set entrySet()
    {
        java.util.Iterator $r3;
        java.util.Set $r2, $r5;
        java.util.HashMap $r0;
        com.mycila.inject.internal.cglib.beans.BeanMap r1;
        java.util.Map $r4;
        java.lang.Object $r6, $r7;
        boolean $z0;

        r1 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke r1.<com.mycila.inject.internal.cglib.beans.BeanMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = virtualinvoke r1.<com.mycila.inject.internal.cglib.beans.BeanMap: java.lang.Object get(java.lang.Object)>($r6);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label1;

     label2:
        $r4 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r0);

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        return $r5;
    }

    public java.util.Collection values()
    {
        java.util.Iterator $r3;
        java.util.Collection $r4;
        java.util.Set $r1;
        com.mycila.inject.internal.cglib.beans.BeanMap r0;
        java.util.ArrayList $r2;
        int $i0;
        java.lang.Object $r5, $r6;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.cglib.beans.BeanMap: java.util.Set keySet()>();

        $r2 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = virtualinvoke r0.<com.mycila.inject.internal.cglib.beans.BeanMap: java.lang.Object get(java.lang.Object)>($r5);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        $r4 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r2);

        return $r4;
    }

    public java.lang.String toString()
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        com.mycila.inject.internal.cglib.beans.BeanMap r1;
        java.lang.StringBuffer $r0;
        java.lang.Object $r5, $r6;
        java.lang.String $r4;
        boolean $z0, $z1;

        r1 := @this: com.mycila.inject.internal.cglib.beans.BeanMap;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

        $r2 = virtualinvoke r1.<com.mycila.inject.internal.cglib.beans.BeanMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

        $r6 = virtualinvoke r1.<com.mycila.inject.internal.cglib.beans.BeanMap: java.lang.Object get(java.lang.Object)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.cglib.beans.BeanMap: int REQUIRE_SETTER> = 2;

        <com.mycila.inject.internal.cglib.beans.BeanMap: int REQUIRE_GETTER> = 1;

        return;
    }
}
