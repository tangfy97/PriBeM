public final class org.apache.cxf.transport.https.CertConstraintsInterceptor extends org.apache.cxf.phase.AbstractPhaseInterceptor
{
    public static final org.apache.cxf.transport.https.CertConstraintsInterceptor INSTANCE;
    static final java.util.logging.Logger LOG;

    private void <init>()
    {
        org.apache.cxf.transport.https.CertConstraintsInterceptor r0;

        r0 := @this: org.apache.cxf.transport.https.CertConstraintsInterceptor;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>("pre-stream");

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        java.security.cert.X509Certificate $r10;
        org.apache.cxf.transport.https.CertConstraintsInterceptor r5;
        org.apache.cxf.security.transport.TLSSessionInfo r23;
        org.apache.cxf.transport.https.HttpsMessageTrustDecider $r16;
        org.apache.cxf.interceptor.Fault $r18, $r20;
        int $i0;
        java.lang.String $r2, $r13, r21;
        boolean $z0, $z1, $z2;
        org.apache.cxf.transport.http.MessageTrustDecider r22;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.transport.https.CertConstraints r4;
        org.apache.cxf.transport.http.UntrustedURLConnectionIOException $r8, $r11, $r14, $r17, $r19;
        java.lang.Class $r1;
        java.lang.Object $r3, $r6, $r12, $r15;
        java.security.cert.Certificate[] $r7;
        java.security.cert.X509Certificate[] $r9, r24;

        r5 := @this: org.apache.cxf.transport.https.CertConstraintsInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = class "Lorg/apache/cxf/transport/https/CertConstraints;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>($r2);

        r4 = (org.apache.cxf.transport.https.CertConstraints) $r3;

        if r4 != null goto label01;

        return;

     label01:
        $z0 = virtualinvoke r5.<org.apache.cxf.transport.https.CertConstraintsInterceptor: boolean isRequestor(org.apache.cxf.message.Message)>(r0);

        if $z0 == 0 goto label06;

     label02:
        $r12 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("http.scheme");

        r21 = (java.lang.String) $r12;

        $r13 = "https";

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r21);

        if $z2 == 0 goto label03;

        $r15 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/transport/http/MessageTrustDecider;");

        r22 = (org.apache.cxf.transport.http.MessageTrustDecider) $r15;

        $r16 = new org.apache.cxf.transport.https.HttpsMessageTrustDecider;

        specialinvoke $r16.<org.apache.cxf.transport.https.HttpsMessageTrustDecider: void <init>(org.apache.cxf.transport.https.CertConstraints,org.apache.cxf.transport.http.MessageTrustDecider)>(r4, r22);

        interfaceinvoke r0.<org.apache.cxf.message.Message: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/transport/http/MessageTrustDecider;", $r16);

        goto label04;

     label03:
        $r14 = new org.apache.cxf.transport.http.UntrustedURLConnectionIOException;

        specialinvoke $r14.<org.apache.cxf.transport.http.UntrustedURLConnectionIOException: void <init>(java.lang.String)>("TLS is not in use");

        throw $r14;

     label04:
        goto label11;

     label05:
        $r19 := @caughtexception;

        $r20 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r20.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r19);

        throw $r20;

     label06:
        $r6 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/security/transport/TLSSessionInfo;");

        r23 = (org.apache.cxf.security.transport.TLSSessionInfo) $r6;

        $r7 = virtualinvoke r23.<org.apache.cxf.security.transport.TLSSessionInfo: java.security.cert.Certificate[] getPeerCertificates()>();

        if $r7 == null goto label07;

        $i0 = lengthof $r7;

        if $i0 != 0 goto label08;

     label07:
        $r8 = new org.apache.cxf.transport.http.UntrustedURLConnectionIOException;

        specialinvoke $r8.<org.apache.cxf.transport.http.UntrustedURLConnectionIOException: void <init>(java.lang.String)>("No client certificates were found");

        throw $r8;

     label08:
        $r9 = (java.security.cert.X509Certificate[]) $r7;

        r24 = (java.security.cert.X509Certificate[]) $r9;

        $r10 = r24[0];

        $z1 = virtualinvoke r4.<org.apache.cxf.transport.https.CertConstraints: boolean matches(java.security.cert.X509Certificate)>($r10);

        if $z1 != 0 goto label09;

        $r11 = new org.apache.cxf.transport.http.UntrustedURLConnectionIOException;

        specialinvoke $r11.<org.apache.cxf.transport.http.UntrustedURLConnectionIOException: void <init>(java.lang.String)>("The client certificate does not match the defined cert constraints");

        throw $r11;

     label09:
        goto label11;

     label10:
        $r17 := @caughtexception;

        $r18 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r18.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r17);

        throw $r18;

     label11:
        return;

        catch org.apache.cxf.transport.http.UntrustedURLConnectionIOException from label02 to label04 with label05;
        catch org.apache.cxf.transport.http.UntrustedURLConnectionIOException from label06 to label09 with label10;
    }

    static void <clinit>()
    {
        org.apache.cxf.transport.https.CertConstraintsInterceptor $r0;
        java.util.logging.Logger $r1;

        $r0 = new org.apache.cxf.transport.https.CertConstraintsInterceptor;

        specialinvoke $r0.<org.apache.cxf.transport.https.CertConstraintsInterceptor: void <init>()>();

        <org.apache.cxf.transport.https.CertConstraintsInterceptor: org.apache.cxf.transport.https.CertConstraintsInterceptor INSTANCE> = $r0;

        $r1 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/transport/https/CertConstraintsInterceptor;");

        <org.apache.cxf.transport.https.CertConstraintsInterceptor: java.util.logging.Logger LOG> = $r1;

        return;
    }
}
