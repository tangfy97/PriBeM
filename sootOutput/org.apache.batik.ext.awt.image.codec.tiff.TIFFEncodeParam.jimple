public class org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam extends java.lang.Object implements org.apache.batik.ext.awt.image.codec.util.ImageEncodeParam
{
    public static final int COMPRESSION_NONE;
    public static final int COMPRESSION_GROUP3_1D;
    public static final int COMPRESSION_GROUP3_2D;
    public static final int COMPRESSION_GROUP4;
    public static final int COMPRESSION_LZW;
    public static final int COMPRESSION_JPEG_BROKEN;
    public static final int COMPRESSION_JPEG_TTN2;
    public static final int COMPRESSION_PACKBITS;
    public static final int COMPRESSION_DEFLATE;
    private int compression;
    private boolean writeTiled;
    private int tileWidth;
    private int tileHeight;
    private java.util.Iterator extraImages;
    private org.apache.batik.ext.awt.image.codec.tiff.TIFFField[] extraFields;
    private boolean convertJPEGRGBToYCbCr;
    private com.sun.image.codec.jpeg.JPEGEncodeParam jpegEncodeParam;
    private int deflateLevel;

    public void <init>()
    {
        int $i1;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int compression> = 1;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: boolean writeTiled> = 0;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: boolean convertJPEGRGBToYCbCr> = 1;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: com.sun.image.codec.jpeg.JPEGEncodeParam jpegEncodeParam> = null;

        $i1 = (int) -1;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int deflateLevel> = $i1;

        return;
    }

    public int getCompression()
    {
        int $i0;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        $i0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int compression>;

        return $i0;
    }

    public void setCompression(int)
    {
        int i0;
        java.lang.Error $r1;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 1: goto label1;
            case 7: goto label1;
            case 32773: goto label1;
            case 32946: goto label1;
            default: goto label2;
        };

     label1:
        goto label3;

     label2:
        $r1 = new java.lang.Error;

        specialinvoke $r1.<java.lang.Error: void <init>(java.lang.String)>("TIFFEncodeParam0");

        throw $r1;

     label3:
        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int compression> = i0;

        return;
    }

    public boolean getWriteTiled()
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        $z0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: boolean writeTiled>;

        return $z0;
    }

    public void setWriteTiled(boolean)
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;
        boolean z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: boolean writeTiled> = z0;

        return;
    }

    public void setTileSize(int, int)
    {
        int i0, i1;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int tileWidth> = i0;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int tileHeight> = i1;

        return;
    }

    public int getTileWidth()
    {
        int $i0;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        $i0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int tileWidth>;

        return $i0;
    }

    public int getTileHeight()
    {
        int $i0;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        $i0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int tileHeight>;

        return $i0;
    }

    public synchronized void setExtraImages(java.util.Iterator)
    {
        java.util.Iterator r1;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        r1 := @parameter0: java.util.Iterator;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: java.util.Iterator extraImages> = r1;

        return;
    }

    public synchronized java.util.Iterator getExtraImages()
    {
        java.util.Iterator $r1;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: java.util.Iterator extraImages>;

        return $r1;
    }

    public void setDeflateLevel(int)
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;
        int i0, $i2;
        java.lang.Error $r2;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        i0 := @parameter0: int;

        if i0 >= 1 goto label1;

        if i0 <= 9 goto label1;

        $i2 = (int) -1;

        if i0 == $i2 goto label1;

        $r2 = new java.lang.Error;

        specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>("TIFFEncodeParam1");

        throw $r2;

     label1:
        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int deflateLevel> = i0;

        return;
    }

    public int getDeflateLevel()
    {
        int $i0;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        $i0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int deflateLevel>;

        return $i0;
    }

    public void setJPEGCompressRGBToYCbCr(boolean)
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;
        boolean z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: boolean convertJPEGRGBToYCbCr> = z0;

        return;
    }

    public boolean getJPEGCompressRGBToYCbCr()
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        $z0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: boolean convertJPEGRGBToYCbCr>;

        return $z0;
    }

    public void setJPEGEncodeParam(com.sun.image.codec.jpeg.JPEGEncodeParam)
    {
        java.lang.Object $r1;
        com.sun.image.codec.jpeg.JPEGEncodeParam r2;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        r2 := @parameter0: com.sun.image.codec.jpeg.JPEGEncodeParam;

        if r2 == null goto label1;

        $r1 = interfaceinvoke r2.<com.sun.image.codec.jpeg.JPEGEncodeParam: java.lang.Object clone()>();

        r2 = (com.sun.image.codec.jpeg.JPEGEncodeParam) $r1;

        interfaceinvoke r2.<com.sun.image.codec.jpeg.JPEGEncodeParam: void setTableInfoValid(boolean)>(0);

        interfaceinvoke r2.<com.sun.image.codec.jpeg.JPEGEncodeParam: void setImageInfoValid(boolean)>(1);

     label1:
        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: com.sun.image.codec.jpeg.JPEGEncodeParam jpegEncodeParam> = r2;

        return;
    }

    public com.sun.image.codec.jpeg.JPEGEncodeParam getJPEGEncodeParam()
    {
        com.sun.image.codec.jpeg.JPEGEncodeParam $r1;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: com.sun.image.codec.jpeg.JPEGEncodeParam jpegEncodeParam>;

        return $r1;
    }

    public void setExtraFields(org.apache.batik.ext.awt.image.codec.tiff.TIFFField[])
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField[] r1;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        r1 := @parameter0: org.apache.batik.ext.awt.image.codec.tiff.TIFFField[];

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: org.apache.batik.ext.awt.image.codec.tiff.TIFFField[] extraFields> = r1;

        return;
    }

    public org.apache.batik.ext.awt.image.codec.tiff.TIFFField[] getExtraFields()
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField[] $r1;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: org.apache.batik.ext.awt.image.codec.tiff.TIFFField[] extraFields>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int COMPRESSION_DEFLATE> = 32946;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int COMPRESSION_PACKBITS> = 32773;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int COMPRESSION_JPEG_TTN2> = 7;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int COMPRESSION_JPEG_BROKEN> = 6;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int COMPRESSION_LZW> = 5;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int COMPRESSION_GROUP4> = 4;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int COMPRESSION_GROUP3_2D> = 3;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int COMPRESSION_GROUP3_1D> = 2;

        <org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: int COMPRESSION_NONE> = 1;

        return;
    }
}
