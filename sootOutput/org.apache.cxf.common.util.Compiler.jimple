public class org.apache.cxf.common.util.Compiler extends java.lang.Object
{
    private long maxMemory;
    private boolean verbose;
    private java.lang.String target;
    private java.lang.String outputDir;
    private java.lang.String classPath;
    private java.lang.String encoding;
    private boolean forceFork;
    private java.io.File classpathTmpFile;
    private java.util.List errors;
    private java.util.List warnings;

    public void <init>()
    {
        java.lang.Runtime $r1;
        long $l0;
        org.apache.cxf.common.util.Compiler r0;
        java.lang.StringBuilder $r2, $r5, $r6;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;
        java.util.LinkedList $r8, $r9;
        boolean $z0;

        r0 := @this: org.apache.cxf.common.util.Compiler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l0 = virtualinvoke $r1.<java.lang.Runtime: long maxMemory()>();

        r0.<org.apache.cxf.common.util.Compiler: long maxMemory> = $l0;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = class "Lorg/apache/cxf/common/util/Compiler;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-fork");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>($r7);

        r0.<org.apache.cxf.common.util.Compiler: boolean forceFork> = $z0;

        $r8 = new java.util.LinkedList;

        specialinvoke $r8.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.cxf.common.util.Compiler: java.util.List errors> = $r8;

        $r9 = new java.util.LinkedList;

        specialinvoke $r9.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.cxf.common.util.Compiler: java.util.List warnings> = $r9;

        return;
    }

    public java.util.List getErrors()
    {
        java.util.List $r1;
        org.apache.cxf.common.util.Compiler r0;

        r0 := @this: org.apache.cxf.common.util.Compiler;

        $r1 = r0.<org.apache.cxf.common.util.Compiler: java.util.List errors>;

        return $r1;
    }

    public java.util.List getWarnings()
    {
        java.util.List $r1;
        org.apache.cxf.common.util.Compiler r0;

        r0 := @this: org.apache.cxf.common.util.Compiler;

        $r1 = r0.<org.apache.cxf.common.util.Compiler: java.util.List warnings>;

        return $r1;
    }

    public void setMaxMemory(long)
    {
        long l0;
        org.apache.cxf.common.util.Compiler r0;

        r0 := @this: org.apache.cxf.common.util.Compiler;

        l0 := @parameter0: long;

        r0.<org.apache.cxf.common.util.Compiler: long maxMemory> = l0;

        return;
    }

    public void setVerbose(boolean)
    {
        org.apache.cxf.common.util.Compiler r0;
        boolean z0;

        r0 := @this: org.apache.cxf.common.util.Compiler;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.common.util.Compiler: boolean verbose> = z0;

        return;
    }

    public void setTarget(java.lang.String)
    {
        org.apache.cxf.common.util.Compiler r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.common.util.Compiler;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.common.util.Compiler: java.lang.String target> = r1;

        return;
    }

    public void setOutputDir(java.io.File)
    {
        org.apache.cxf.common.util.Compiler r1;
        char $c0;
        java.lang.String $r2, $r3;
        java.io.File r0;

        r1 := @this: org.apache.cxf.common.util.Compiler;

        r0 := @parameter0: java.io.File;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $c0 = <java.io.File: char pathSeparatorChar>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>($c0, 47);

        r1.<org.apache.cxf.common.util.Compiler: java.lang.String outputDir> = $r3;

        goto label2;

     label1:
        r1.<org.apache.cxf.common.util.Compiler: java.lang.String outputDir> = null;

     label2:
        return;
    }

    public void setOutputDir(java.lang.String)
    {
        org.apache.cxf.common.util.Compiler r0;
        char $c0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.cxf.common.util.Compiler;

        r1 := @parameter0: java.lang.String;

        $c0 = <java.io.File: char pathSeparatorChar>;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>($c0, 47);

        r0.<org.apache.cxf.common.util.Compiler: java.lang.String outputDir> = $r2;

        return;
    }

    public void setClassPath(java.lang.String)
    {
        org.apache.cxf.common.util.Compiler r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.cxf.common.util.Compiler;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        r0.<org.apache.cxf.common.util.Compiler: java.lang.String classPath> = $r2;

        return;
    }

    protected void addArgs(java.util.List)
    {
        java.net.URL $r11;
        java.lang.String $r1, $r2, $r3, $r4, $r6, $r7, $r12, $r14, $r15, $r16, $r17, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.io.File $r8, $r13;
        java.util.List r5;
        org.apache.cxf.common.util.Compiler r0;
        java.lang.Class $r9;
        java.lang.ClassLoader $r10;

        r0 := @this: org.apache.cxf.common.util.Compiler;

        r5 := @parameter0: java.util.List;

        $z0 = r0.<org.apache.cxf.common.util.Compiler: boolean verbose>;

        if $z0 == 0 goto label01;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>("-verbose");

     label01:
        $r1 = r0.<org.apache.cxf.common.util.Compiler: java.lang.String encoding>;

        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z1 != 0 goto label02;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>("-encoding");

        $r18 = r0.<org.apache.cxf.common.util.Compiler: java.lang.String encoding>;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r18);

     label02:
        $r2 = r0.<org.apache.cxf.common.util.Compiler: java.lang.String target>;

        $z2 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r2);

        if $z2 != 0 goto label03;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>("-target");

        $r16 = r0.<org.apache.cxf.common.util.Compiler: java.lang.String target>;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r16);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>("-source");

        $r17 = r0.<org.apache.cxf.common.util.Compiler: java.lang.String target>;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r17);

     label03:
        $r3 = r0.<org.apache.cxf.common.util.Compiler: java.lang.String outputDir>;

        $z3 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r3);

        if $z3 != 0 goto label04;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>("-d");

        $r15 = r0.<org.apache.cxf.common.util.Compiler: java.lang.String outputDir>;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r15);

     label04:
        $r4 = r0.<org.apache.cxf.common.util.Compiler: java.lang.String classPath>;

        $z4 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r4);

        if $z4 == 0 goto label10;

        $r7 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getProperty(java.lang.String)>("java.class.path");

        if $r7 == null goto label05;

        $z7 = 1;

        goto label06;

     label05:
        $z7 = 0;

     label06:
        if $z7 != 0 goto label08;

        $r8 = new java.io.File;

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r11 = virtualinvoke $r10.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(".");

        $r12 = virtualinvoke $r11.<java.net.URL: java.lang.String getFile()>();

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r12);

        $r13 = new java.io.File;

        specialinvoke $r13.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, "../lib");

        $z5 = virtualinvoke $r13.<java.io.File: boolean exists()>();

        if $z5 == 0 goto label07;

        $z6 = virtualinvoke $r13.<java.io.File: boolean isDirectory()>();

        if $z6 == 0 goto label07;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>("-extdirs");

        $r14 = virtualinvoke $r13.<java.io.File: java.lang.String toString()>();

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r14);

     label07:
        goto label09;

     label08:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>("-classpath");

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r7);

     label09:
        goto label11;

     label10:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>("-classpath");

        $r6 = r0.<org.apache.cxf.common.util.Compiler: java.lang.String classPath>;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r6);

     label11:
        return;
    }

    public boolean compileFiles(java.io.File[])
    {
        java.lang.Object[] $r4;
        java.lang.String[] $r3, $r5;
        java.io.File r6;
        java.util.ArrayList $r0;
        org.apache.cxf.common.util.Compiler r2;
        int $i0, i1, $i2, i3;
        java.lang.String $r7;
        java.io.File[] r1;
        boolean $z0;

        r2 := @this: org.apache.cxf.common.util.Compiler;

        r1 := @parameter0: java.io.File[];

        $r0 = new java.util.ArrayList;

        $i0 = lengthof r1;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        i1 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        r6 = r1[i3];

        $r7 = virtualinvoke r6.<java.io.File: java.lang.String getAbsolutePath()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        i3 = i3 + 1;

        goto label1;

     label2:
        $i2 = lengthof r1;

        $r3 = newarray (java.lang.String)[$i2];

        $r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        $z0 = virtualinvoke r2.<org.apache.cxf.common.util.Compiler: boolean compileFiles(java.lang.String[])>($r5);

        return $z0;
    }

    public boolean compileFiles(java.util.List)
    {
        java.lang.Object[] $r5;
        java.util.Iterator $r2;
        java.lang.String[] $r4, $r6;
        java.io.File r8;
        java.util.ArrayList $r0;
        java.util.List r1;
        org.apache.cxf.common.util.Compiler r3;
        int $i0, $i1;
        java.lang.Object $r7;
        java.lang.String $r9;
        boolean $z0, $z1;

        r3 := @this: org.apache.cxf.common.util.Compiler;

        r1 := @parameter0: java.util.List;

        $r0 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.io.File) $r7;

        $r9 = virtualinvoke r8.<java.io.File: java.lang.String getAbsolutePath()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $r4 = newarray (java.lang.String)[$i1];

        $r5 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        $z1 = virtualinvoke r3.<org.apache.cxf.common.util.Compiler: boolean compileFiles(java.lang.String[])>($r6);

        return $z1;
    }

    public boolean compileFiles(java.lang.String[])
    {
        java.lang.StringBuilder $r9, $r10, $r11, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r25, $r26, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r46, $r47, $r48, $r56, $r58, $r59, $r61, $r62;
        java.lang.Object[] $r32;
        long $l1;
        java.util.ArrayList $r55;
        java.lang.String $r0, r3, $r4, $r5, $r8, $r12, $r15, $r23, $r27, $r34, $r36, $r45, r49, r50, r51, r52, r53, r54;
        java.io.File $r57, $r60;
        org.apache.cxf.common.util.Compiler r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.List $r30;
        java.lang.String[] r29, $r31, $r33;
        int $i0, $i2, $i3, $i4, $i5, $i7;
        java.lang.Object $r28;

        r1 := @this: org.apache.cxf.common.util.Compiler;

        r29 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getProperty(java.lang.String)>("java.endorsed.dirs");

        $z0 = r1.<org.apache.cxf.common.util.Compiler: boolean forceFork>;

        if $z0 != 0 goto label1;

        $z4 = virtualinvoke r1.<org.apache.cxf.common.util.Compiler: boolean useJava6Compiler(java.lang.String[])>(r29);

        return $z4;

     label1:
        $r55 = new java.util.ArrayList;

        specialinvoke $r55.<java.util.ArrayList: void <init>()>();

        r3 = <java.io.File: java.lang.String separator>;

        r49 = "javac";

        r50 = "javac";

        r54 = "javac";

        r53 = "javac";

        r52 = "javac";

        r51 = "javac";

        $r4 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getProperty(java.lang.String)>("os.name");

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(java.lang.String)>("windows");

        $i7 = (int) -1;

        if $i0 <= $i7 goto label2;

        r50 = "javac.exe";

        r54 = "javac.exe";

        r53 = "javac.exe";

        r52 = "javac.exe";

        r51 = "javac.exe";

     label2:
        $r57 = new java.io.File;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r8 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getProperty(java.lang.String)>("java.home");

        $r9 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r57.<java.io.File: void <init>(java.lang.String)>($r12);

        $z1 = virtualinvoke $r57.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label3;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r45 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getProperty(java.lang.String)>("java.home");

        $r46 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        $r60 = new java.io.File;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r15 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getProperty(java.lang.String)>("java.home");

        $r16 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("..");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bin");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r60.<java.io.File: void <init>(java.lang.String)>($r23);

        $z2 = virtualinvoke $r60.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label4;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r36 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getProperty(java.lang.String)>("java.home");

        $r37 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("..");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bin");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        r49 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        interfaceinvoke $r55.<java.util.List: boolean add(java.lang.Object)>(r49);

        $z5 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z5 != 0 goto label5;

        interfaceinvoke $r55.<java.util.List: boolean add(java.lang.Object)>("-endorseddirs");

        interfaceinvoke $r55.<java.util.List: boolean add(java.lang.Object)>($r0);

     label5:
        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-J-Xmx");

        $l1 = r1.<org.apache.cxf.common.util.Compiler: long maxMemory>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r55.<java.util.List: boolean add(java.lang.Object)>($r27);

        virtualinvoke r1.<org.apache.cxf.common.util.Compiler: void addArgs(java.util.List)>($r55);

        $i2 = interfaceinvoke $r55.<java.util.List: int indexOf(java.lang.Object)>("-classpath");

        $i3 = $i2 + 1;

        $r28 = interfaceinvoke $r55.<java.util.List: java.lang.Object get(int)>($i3);

        $r34 = (java.lang.String) $r28;

        specialinvoke r1.<org.apache.cxf.common.util.Compiler: void checkLongClasspath(java.lang.String,java.util.List,int)>($r34, $r55, $i2);

        $i4 = interfaceinvoke $r55.<java.util.List: int size()>();

        $r30 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r29);

        interfaceinvoke $r55.<java.util.List: boolean addAll(java.util.Collection)>($r30);

        $i5 = interfaceinvoke $r55.<java.util.List: int size()>();

        $r31 = newarray (java.lang.String)[$i5];

        $r32 = interfaceinvoke $r55.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r31);

        $r33 = (java.lang.String[]) $r32;

        $z3 = virtualinvoke r1.<org.apache.cxf.common.util.Compiler: boolean internalCompile(java.lang.String[],int)>($r33, $i4);

        return $z3;
    }

    protected boolean useJava6Compiler(java.lang.String[])
    {
        javax.tools.JavaCompiler $r0;
        javax.tools.JavaFileManager $r6;
        java.lang.String[] r2;
        java.lang.Iterable $r4;
        javax.tools.StandardJavaFileManager $r1;
        java.util.List $r3;
        org.apache.cxf.common.util.Compiler r5;
        javax.tools.DiagnosticListener $r7;
        boolean $z0;

        r5 := @this: org.apache.cxf.common.util.Compiler;

        r2 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <javax.tools.ToolProvider: javax.tools.JavaCompiler getSystemJavaCompiler()>();

        $r1 = interfaceinvoke $r0.<javax.tools.JavaCompiler: javax.tools.StandardJavaFileManager getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)>(null, null, null);

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        $r4 = interfaceinvoke $r1.<javax.tools.StandardJavaFileManager: java.lang.Iterable getJavaFileObjectsFromStrings(java.lang.Iterable)>($r3);

        $r6 = virtualinvoke r5.<org.apache.cxf.common.util.Compiler: javax.tools.JavaFileManager wrapJavaFileManager(javax.tools.StandardJavaFileManager)>($r1);

        $r7 = virtualinvoke r5.<org.apache.cxf.common.util.Compiler: javax.tools.DiagnosticListener setupDiagnosticListener()>();

        $z0 = virtualinvoke r5.<org.apache.cxf.common.util.Compiler: boolean internalJava6Compile(javax.tools.JavaCompiler,javax.tools.JavaFileManager,javax.tools.DiagnosticListener,java.lang.Iterable)>($r0, $r6, $r7, $r4);

        return $z0;
    }

    protected javax.tools.JavaFileManager wrapJavaFileManager(javax.tools.StandardJavaFileManager)
    {
        javax.tools.StandardJavaFileManager r0;
        org.apache.cxf.common.util.Compiler r1;

        r1 := @this: org.apache.cxf.common.util.Compiler;

        r0 := @parameter0: javax.tools.StandardJavaFileManager;

        return r0;
    }

    protected javax.tools.DiagnosticListener setupDiagnosticListener()
    {
        org.apache.cxf.common.util.Compiler r1;
        org.apache.cxf.common.util.Compiler$1 $r0;

        r1 := @this: org.apache.cxf.common.util.Compiler;

        $r0 = new org.apache.cxf.common.util.Compiler$1;

        specialinvoke $r0.<org.apache.cxf.common.util.Compiler$1: void <init>(org.apache.cxf.common.util.Compiler)>(r1);

        return $r0;
    }

    protected boolean internalJava6Compile(javax.tools.JavaCompiler, javax.tools.JavaFileManager, javax.tools.DiagnosticListener, java.lang.Iterable)
    {
        java.io.PrintStream $r9;
        javax.tools.JavaCompiler r2;
        javax.tools.JavaFileManager r3;
        java.io.IOException $r8;
        java.lang.Iterable r5;
        java.util.ArrayList $r0;
        javax.tools.JavaCompiler$CompilationTask $r6;
        org.apache.cxf.common.util.Compiler r1;
        java.lang.Boolean $r7;
        javax.tools.DiagnosticListener r4;
        boolean $z0;

        r1 := @this: org.apache.cxf.common.util.Compiler;

        r2 := @parameter0: javax.tools.JavaCompiler;

        r3 := @parameter1: javax.tools.JavaFileManager;

        r4 := @parameter2: javax.tools.DiagnosticListener;

        r5 := @parameter3: java.lang.Iterable;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        virtualinvoke r1.<org.apache.cxf.common.util.Compiler: void addArgs(java.util.List)>($r0);

        $r6 = interfaceinvoke r2.<javax.tools.JavaCompiler: javax.tools.JavaCompiler$CompilationTask getTask(java.io.Writer,javax.tools.JavaFileManager,javax.tools.DiagnosticListener,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)>(null, r3, r4, $r0, null, r5);

        $r7 = interfaceinvoke $r6.<javax.tools.JavaCompiler$CompilationTask: java.lang.Boolean call()>();

     label1:
        interfaceinvoke r3.<javax.tools.JavaFileManager: void close()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void print(java.lang.String)>("[ERROR] IOException during compiling.");

        virtualinvoke $r8.<java.io.IOException: void printStackTrace()>();

     label4:
        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean internalCompile(java.lang.String[], int)
    {
        java.io.PrintWriter $r82;
        java.lang.Runtime $r2;
        java.lang.StringBuilder $r22, $r23, $r31, $r33, $r34, $r39, $r42, $r43, $r51, $r53, $r54, $r65, $r67, $r68, $r83, $r84, $r85, $r88, $r89;
        java.lang.Throwable $r45;
        java.lang.String $r14, $r15, $r16, $r24, $r25, $r26, $r27, $r28, $r29, $r32, $r35, $r36, $r37, $r40, $r41, $r44, $r52, $r55, $r66, $r69, $r74, $r75;
        java.io.IOException $r48;
        java.io.File $r6, $r7, $r18, $r46, $r47, $r57, $r58, $r60, $r61, $r70, $r71, r72, $r76, $r77, $r78, $r79, $r80;
        org.apache.cxf.common.util.Compiler r0;
        java.lang.SecurityException $r62;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12;
        java.lang.Process $r3;
        org.apache.cxf.common.util.StreamPrinter $r86, $r87;
        java.lang.String[] r1, $r17, r73;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i10, $i11, i12, $i13, i14, $i16, $i18, $i20, $i22, $i24;
        java.io.PrintStream $r10, $r13, $r50, $r56, $r64;
        java.io.FileWriter $r81;
        char $c9;
        java.lang.InterruptedException $r59;
        java.io.InputStream $r4, $r5, $r9, $r12;

        r0 := @this: org.apache.cxf.common.util.Compiler;

        r1 := @parameter0: java.lang.String[];

        i5 := @parameter1: int;

        r72 = null;

     label01:
        $z0 = specialinvoke r0.<org.apache.cxf.common.util.Compiler: boolean isLongCommandLines(java.lang.String[])>(r1);

        if $z0 == 0 goto label07;

        if i5 < 0 goto label07;

        $r18 = staticinvoke <org.apache.cxf.helpers.FileUtils: java.io.File createTempFile(java.lang.String,java.lang.String)>("cxf-compiler", null);

        r72 = $r18;

        $r82 = new java.io.PrintWriter;

        $r81 = new java.io.FileWriter;

        specialinvoke $r81.<java.io.FileWriter: void <init>(java.io.File)>($r18);

        specialinvoke $r82.<java.io.PrintWriter: void <init>(java.io.Writer)>($r81);

        i12 = i5;

     label02:
        $i6 = lengthof r1;

        if i12 >= $i6 goto label06;

        $r25 = r1[i12];

        $i8 = virtualinvoke $r25.<java.lang.String: int indexOf(java.lang.String)>(" ");

        $i16 = (int) -1;

        if $i8 <= $i16 goto label04;

        $r27 = r1[i12];

        $c9 = <java.io.File: char separatorChar>;

        $r28 = virtualinvoke $r27.<java.lang.String: java.lang.String replace(char,char)>($c9, 47);

        r1[i12] = $r28;

        $r29 = r1[i12];

        $i10 = virtualinvoke $r29.<java.lang.String: int indexOf(java.lang.String)>("package-info.java");

        $i18 = (int) -1;

        if $i10 <= $i18 goto label03;

        $r36 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getProperty(java.lang.String)>("os.name");

        $r37 = virtualinvoke $r36.<java.lang.String: java.lang.String toLowerCase()>();

        $i11 = virtualinvoke $r37.<java.lang.String: int indexOf(java.lang.String)>("windows");

        $i20 = (int) -1;

        if $i11 <= $i20 goto label03;

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r40 = r1[i12];

        $r41 = virtualinvoke $r40.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("/", "\\\\\\\\");

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r82.<java.io.PrintWriter: void println(java.lang.String)>($r44);

        goto label05;

     label03:
        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r32 = r1[i12];

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r82.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        goto label05;

     label04:
        $r26 = r1[i12];

        virtualinvoke $r82.<java.io.PrintWriter: void println(java.lang.String)>($r26);

     label05:
        i12 = i12 + 1;

        goto label02;

     label06:
        virtualinvoke $r82.<java.io.PrintWriter: void flush()>();

        virtualinvoke $r82.<java.io.PrintWriter: void close()>();

        $i7 = i5 + 1;

        r73 = newarray (java.lang.String)[$i7];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r73, 0, i5);

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        r73[i5] = $r24;

        goto label08;

     label07:
        $i0 = lengthof r1;

        $r17 = newarray (java.lang.String)[$i0];

        r73 = $r17;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r17, 0, $i1);

     label08:
        $r74 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getProperty(java.lang.String)>("os.name");

        $r75 = virtualinvoke $r74.<java.lang.String: java.lang.String toLowerCase()>();

        $i13 = virtualinvoke $r75.<java.lang.String: int indexOf(java.lang.String)>("windows");

        $i22 = (int) -1;

        if $i13 <= $i22 goto label11;

        i14 = 0;

     label09:
        $i3 = lengthof r73;

        if i14 >= $i3 goto label11;

        $r14 = r73[i14];

        $i4 = virtualinvoke $r14.<java.lang.String: int indexOf(java.lang.String)>("package-info");

        $i24 = (int) -1;

        if $i4 != $i24 goto label10;

        $r15 = r73[i14];

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String replace(char,char)>(92, 47);

        r73[i14] = $r16;

     label10:
        i14 = i14 + 1;

        goto label09;

     label11:
        $r2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r3 = virtualinvoke $r2.<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>(r73);

        $r4 = virtualinvoke $r3.<java.lang.Process: java.io.InputStream getErrorStream()>();

        if $r4 == null goto label12;

        $r86 = new org.apache.cxf.common.util.StreamPrinter;

        $r12 = virtualinvoke $r3.<java.lang.Process: java.io.InputStream getErrorStream()>();

        $r13 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r86.<org.apache.cxf.common.util.StreamPrinter: void <init>(java.io.InputStream,java.lang.String,java.io.OutputStream)>($r12, "", $r13);

        virtualinvoke $r86.<org.apache.cxf.common.util.StreamPrinter: void start()>();

     label12:
        $r5 = virtualinvoke $r3.<java.lang.Process: java.io.InputStream getInputStream()>();

        if $r5 == null goto label13;

        $r87 = new org.apache.cxf.common.util.StreamPrinter;

        $r9 = virtualinvoke $r3.<java.lang.Process: java.io.InputStream getInputStream()>();

        $r10 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r87.<org.apache.cxf.common.util.StreamPrinter: void <init>(java.io.InputStream,java.lang.String,java.io.OutputStream)>($r9, "[INFO]", $r10);

        virtualinvoke $r87.<org.apache.cxf.common.util.StreamPrinter: void start()>();

     label13:
        $i2 = virtualinvoke $r3.<java.lang.Process: int waitFor()>();

        if $i2 != 0 goto label14;

        $z11 = 1;

        goto label15;

     label14:
        $z11 = 0;

     label15:
        z12 = $z11;

     label16:
        if r72 == null goto label17;

        $z2 = virtualinvoke r72.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label17;

        staticinvoke <org.apache.cxf.helpers.FileUtils: void delete(java.io.File)>(r72);

     label17:
        $r76 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        if $r76 == null goto label18;

        $r6 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        $z1 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label18;

        $r7 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        staticinvoke <org.apache.cxf.helpers.FileUtils: void delete(java.io.File)>($r7);

     label18:
        return z12;

     label19:
        $r62 := @caughtexception;

        $r64 = <java.lang.System: java.io.PrintStream err>;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ERROR] SecurityException during exec() of compiler \"");

        $r66 = r1[0];

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\".");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>($r69);

     label20:
        if r72 == null goto label21;

        $z10 = virtualinvoke r72.<java.io.File: boolean exists()>();

        if $z10 == 0 goto label21;

        staticinvoke <org.apache.cxf.helpers.FileUtils: void delete(java.io.File)>(r72);

     label21:
        $r77 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        if $r77 == null goto label32;

        $r70 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        $z9 = virtualinvoke $r70.<java.io.File: boolean exists()>();

        if $z9 == 0 goto label32;

        $r71 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        staticinvoke <org.apache.cxf.helpers.FileUtils: void delete(java.io.File)>($r71);

        goto label32;

     label22:
        $r59 := @caughtexception;

     label23:
        if r72 == null goto label24;

        $z8 = virtualinvoke r72.<java.io.File: boolean exists()>();

        if $z8 == 0 goto label24;

        staticinvoke <org.apache.cxf.helpers.FileUtils: void delete(java.io.File)>(r72);

     label24:
        $r78 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        if $r78 == null goto label32;

        $r60 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        $z7 = virtualinvoke $r60.<java.io.File: boolean exists()>();

        if $z7 == 0 goto label32;

        $r61 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        staticinvoke <org.apache.cxf.helpers.FileUtils: void delete(java.io.File)>($r61);

        goto label32;

     label25:
        $r48 := @caughtexception;

        $r50 = <java.lang.System: java.io.PrintStream err>;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ERROR] IOException during exec() of compiler \"");

        $r52 = r1[0];

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r50.<java.io.PrintStream: void print(java.lang.String)>($r55);

        $r56 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>(". Check your path environment variable.");

     label26:
        if r72 == null goto label27;

        $z6 = virtualinvoke r72.<java.io.File: boolean exists()>();

        if $z6 == 0 goto label27;

        staticinvoke <org.apache.cxf.helpers.FileUtils: void delete(java.io.File)>(r72);

     label27:
        $r79 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        if $r79 == null goto label32;

        $r57 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        $z5 = virtualinvoke $r57.<java.io.File: boolean exists()>();

        if $z5 == 0 goto label32;

        $r58 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        staticinvoke <org.apache.cxf.helpers.FileUtils: void delete(java.io.File)>($r58);

        goto label32;

     label28:
        $r45 := @caughtexception;

     label29:
        if r72 == null goto label30;

        $z4 = virtualinvoke r72.<java.io.File: boolean exists()>();

        if $z4 == 0 goto label30;

        staticinvoke <org.apache.cxf.helpers.FileUtils: void delete(java.io.File)>(r72);

     label30:
        $r80 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        if $r80 == null goto label31;

        $r46 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        $z3 = virtualinvoke $r46.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label31;

        $r47 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        staticinvoke <org.apache.cxf.helpers.FileUtils: void delete(java.io.File)>($r47);

     label31:
        throw $r45;

     label32:
        return 0;

        catch java.lang.SecurityException from label01 to label16 with label19;
        catch java.lang.InterruptedException from label01 to label16 with label22;
        catch java.io.IOException from label01 to label16 with label25;
        catch java.lang.Throwable from label01 to label16 with label28;
        catch java.lang.Throwable from label19 to label20 with label28;
        catch java.lang.Throwable from label22 to label23 with label28;
        catch java.lang.Throwable from label25 to label26 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
    }

    private boolean isLongCommandLines(java.lang.String[])
    {
        java.lang.String[] r1;
        org.apache.cxf.common.util.Compiler r4;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r3;
        boolean $z0;

        r4 := @this: org.apache.cxf.common.util.Compiler;

        r1 := @parameter0: java.lang.String[];

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label1:
        $i0 = lengthof r1;

        if i2 >= $i0 goto label2;

        $r3 = r1[i2];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 <= 4096 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private boolean isLongClasspath(java.lang.String)
    {
        org.apache.cxf.common.util.Compiler r1;
        int $i0;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.apache.cxf.common.util.Compiler;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 2048 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void checkLongClasspath(java.lang.String, java.util.List, int)
    {
        int i0, $i1;
        java.lang.String r1, $r11;
        boolean $z0;
        java.io.PrintWriter $r3;
        java.io.PrintStream $r13;
        java.io.FileWriter $r4;
        java.io.IOException $r12;
        java.io.File $r2, $r5, $r9;
        java.util.List r6;
        org.apache.cxf.common.util.Compiler r0;
        java.lang.StringBuilder $r7, $r8, $r10;

        r0 := @this: org.apache.cxf.common.util.Compiler;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<org.apache.cxf.common.util.Compiler: boolean isLongClasspath(java.lang.String)>(r1);

        if $z0 == 0 goto label4;

     label1:
        $r2 = staticinvoke <org.apache.cxf.helpers.FileUtils: java.io.File createTempFile(java.lang.String,java.lang.String)>("cxf-compiler-classpath", null);

        r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile> = $r2;

        $r3 = new java.io.PrintWriter;

        $r4 = new java.io.FileWriter;

        $r5 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        specialinvoke $r4.<java.io.FileWriter: void <init>(java.io.File)>($r5);

        specialinvoke $r3.<java.io.PrintWriter: void <init>(java.io.Writer)>($r4);

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>(r1);

        virtualinvoke $r3.<java.io.PrintWriter: void flush()>();

        virtualinvoke $r3.<java.io.PrintWriter: void close()>();

        $i1 = i0 + 1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r9 = r0.<org.apache.cxf.common.util.Compiler: java.io.File classpathTmpFile>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r6.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i1, $r11);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void print(java.lang.String)>("[ERROR] can\'t write long classpath to @argfile");

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void setEncoding(java.lang.String)
    {
        org.apache.cxf.common.util.Compiler r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.common.util.Compiler;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.common.util.Compiler: java.lang.String encoding> = r1;

        return;
    }

    static java.util.List access$000(org.apache.cxf.common.util.Compiler)
    {
        java.util.List $r1;
        org.apache.cxf.common.util.Compiler r0;

        r0 := @parameter0: org.apache.cxf.common.util.Compiler;

        $r1 = r0.<org.apache.cxf.common.util.Compiler: java.util.List errors>;

        return $r1;
    }

    static boolean access$100(org.apache.cxf.common.util.Compiler)
    {
        org.apache.cxf.common.util.Compiler r0;
        boolean $z0;

        r0 := @parameter0: org.apache.cxf.common.util.Compiler;

        $z0 = r0.<org.apache.cxf.common.util.Compiler: boolean verbose>;

        return $z0;
    }

    static java.util.List access$200(org.apache.cxf.common.util.Compiler)
    {
        java.util.List $r1;
        org.apache.cxf.common.util.Compiler r0;

        r0 := @parameter0: org.apache.cxf.common.util.Compiler;

        $r1 = r0.<org.apache.cxf.common.util.Compiler: java.util.List warnings>;

        return $r1;
    }
}
