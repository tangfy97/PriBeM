class org.apache.lucene.index.SegmentTermPositionVector extends org.apache.lucene.index.SegmentTermVector implements org.apache.lucene.index.TermPositionVector
{
    protected int[][] positions;
    protected org.apache.lucene.index.TermVectorOffsetInfo[][] offsets;
    public static final int[] EMPTY_TERM_POS;

    public void <init>(java.lang.String, java.lang.String[], int[], int[][], org.apache.lucene.index.TermVectorOffsetInfo[][])
    {
        org.apache.lucene.index.SegmentTermPositionVector r0;
        int[][] r5;
        int[] r3;
        org.apache.lucene.index.TermVectorOffsetInfo[][] r4;
        java.lang.String[] r2;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.index.SegmentTermPositionVector;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: int[];

        r5 := @parameter3: int[][];

        r4 := @parameter4: org.apache.lucene.index.TermVectorOffsetInfo[][];

        specialinvoke r0.<org.apache.lucene.index.SegmentTermVector: void <init>(java.lang.String,java.lang.String[],int[])>(r1, r2, r3);

        r0.<org.apache.lucene.index.SegmentTermPositionVector: org.apache.lucene.index.TermVectorOffsetInfo[][] offsets> = r4;

        r0.<org.apache.lucene.index.SegmentTermPositionVector: int[][] positions> = r5;

        return;
    }

    public org.apache.lucene.index.TermVectorOffsetInfo[] getOffsets(int)
    {
        org.apache.lucene.index.SegmentTermPositionVector r0;
        org.apache.lucene.index.TermVectorOffsetInfo[] r4;
        org.apache.lucene.index.TermVectorOffsetInfo[][] $r1, $r2, $r3;
        int i0, $i1;

        r0 := @this: org.apache.lucene.index.SegmentTermPositionVector;

        i0 := @parameter0: int;

        r4 = <org.apache.lucene.index.TermVectorOffsetInfo: org.apache.lucene.index.TermVectorOffsetInfo[] EMPTY_OFFSET_INFO>;

        $r1 = r0.<org.apache.lucene.index.SegmentTermPositionVector: org.apache.lucene.index.TermVectorOffsetInfo[][] offsets>;

        if $r1 != null goto label1;

        return null;

     label1:
        if i0 < 0 goto label2;

        $r2 = r0.<org.apache.lucene.index.SegmentTermPositionVector: org.apache.lucene.index.TermVectorOffsetInfo[][] offsets>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label2;

        $r3 = r0.<org.apache.lucene.index.SegmentTermPositionVector: org.apache.lucene.index.TermVectorOffsetInfo[][] offsets>;

        r4 = $r3[i0];

     label2:
        return r4;
    }

    public int[] getTermPositions(int)
    {
        org.apache.lucene.index.SegmentTermPositionVector r0;
        int[][] $r1, $r2, $r3;
        int[] r4;
        int i0, $i1;

        r0 := @this: org.apache.lucene.index.SegmentTermPositionVector;

        i0 := @parameter0: int;

        r4 = <org.apache.lucene.index.SegmentTermPositionVector: int[] EMPTY_TERM_POS>;

        $r1 = r0.<org.apache.lucene.index.SegmentTermPositionVector: int[][] positions>;

        if $r1 != null goto label1;

        return null;

     label1:
        if i0 < 0 goto label2;

        $r2 = r0.<org.apache.lucene.index.SegmentTermPositionVector: int[][] positions>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label2;

        $r3 = r0.<org.apache.lucene.index.SegmentTermPositionVector: int[][] positions>;

        r4 = $r3[i0];

     label2:
        return r4;
    }

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[0];

        <org.apache.lucene.index.SegmentTermPositionVector: int[] EMPTY_TERM_POS> = $r0;

        return;
    }
}
