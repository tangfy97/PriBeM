class bsh.BSHThrowStatement extends bsh.SimpleNode
{

    void <init>(int)
    {
        int i0;
        bsh.BSHThrowStatement r0;

        r0 := @this: bsh.BSHThrowStatement;

        i0 := @parameter0: int;

        specialinvoke r0.<bsh.SimpleNode: void <init>(int)>(i0);

        return;
    }

    public java.lang.Object eval(bsh.CallStack, bsh.Interpreter) throws bsh.EvalError
    {
        bsh.TargetError $r6;
        bsh.EvalError $r8;
        bsh.Interpreter r3;
        bsh.BSHThrowStatement r0;
        bsh.SimpleNode $r4;
        bsh.CallStack r2;
        java.lang.Exception $r7;
        java.lang.Object $r5;
        bsh.Node $r1;
        boolean $z0;

        r0 := @this: bsh.BSHThrowStatement;

        r2 := @parameter0: bsh.CallStack;

        r3 := @parameter1: bsh.Interpreter;

        $r1 = virtualinvoke r0.<bsh.BSHThrowStatement: bsh.Node jjtGetChild(int)>(0);

        $r4 = (bsh.SimpleNode) $r1;

        $r5 = virtualinvoke $r4.<bsh.SimpleNode: java.lang.Object eval(bsh.CallStack,bsh.Interpreter)>(r2, r3);

        $z0 = $r5 instanceof java.lang.Exception;

        if $z0 != 0 goto label1;

        $r8 = new bsh.EvalError;

        specialinvoke $r8.<bsh.EvalError: void <init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)>("Expression in \'throw\' must be Exception type", r0, r2);

        throw $r8;

     label1:
        $r6 = new bsh.TargetError;

        $r7 = (java.lang.Exception) $r5;

        specialinvoke $r6.<bsh.TargetError: void <init>(java.lang.Throwable,bsh.SimpleNode,bsh.CallStack)>($r7, r0, r2);

        throw $r6;
    }
}
