public class org.apache.commons.compress.utils.BoundedInputStream extends java.io.InputStream
{
    private final java.io.InputStream in;
    private long bytesRemaining;

    public void <init>(java.io.InputStream, long)
    {
        long l0;
        org.apache.commons.compress.utils.BoundedInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.compress.utils.BoundedInputStream;

        r1 := @parameter0: java.io.InputStream;

        l0 := @parameter1: long;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.apache.commons.compress.utils.BoundedInputStream: java.io.InputStream in> = r1;

        r0.<org.apache.commons.compress.utils.BoundedInputStream: long bytesRemaining> = l0;

        return;
    }

    public int read() throws java.io.IOException
    {
        org.apache.commons.compress.utils.BoundedInputStream r0;
        long $l0, $l2, $l3;
        byte $b1;
        int $i4, $i5, $i7;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.compress.utils.BoundedInputStream;

        $l0 = r0.<org.apache.commons.compress.utils.BoundedInputStream: long bytesRemaining>;

        $b1 = $l0 cmp 0L;

        $i5 = (int) $b1;

        if $i5 <= 0 goto label1;

        $l2 = r0.<org.apache.commons.compress.utils.BoundedInputStream: long bytesRemaining>;

        $l3 = $l2 - 1L;

        r0.<org.apache.commons.compress.utils.BoundedInputStream: long bytesRemaining> = $l3;

        $r1 = r0.<org.apache.commons.compress.utils.BoundedInputStream: java.io.InputStream in>;

        $i4 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        return $i4;

     label1:
        $i7 = (int) -1;

        return $i7;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        long $l0, $l3, $l4, $l8, $l9, $l10, $l11;
        byte $b1, $b5;
        int i2, i6, $i7, i12, $i14, $i15;
        org.apache.commons.compress.utils.BoundedInputStream r0;
        java.io.InputStream $r2;

        r0 := @this: org.apache.commons.compress.utils.BoundedInputStream;

        r1 := @parameter0: byte[];

        i6 := @parameter1: int;

        i2 := @parameter2: int;

        $l0 = r0.<org.apache.commons.compress.utils.BoundedInputStream: long bytesRemaining>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $i14 = (int) -1;

        return $i14;

     label1:
        i12 = i2;

        $l4 = (long) i2;

        $l3 = r0.<org.apache.commons.compress.utils.BoundedInputStream: long bytesRemaining>;

        $b5 = $l4 cmp $l3;

        $i15 = (int) $b5;

        if $i15 <= 0 goto label2;

        $l11 = r0.<org.apache.commons.compress.utils.BoundedInputStream: long bytesRemaining>;

        i12 = (int) $l11;

     label2:
        $r2 = r0.<org.apache.commons.compress.utils.BoundedInputStream: java.io.InputStream in>;

        $i7 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i6, i12);

        if $i7 < 0 goto label3;

        $l9 = r0.<org.apache.commons.compress.utils.BoundedInputStream: long bytesRemaining>;

        $l8 = (long) $i7;

        $l10 = $l9 - $l8;

        r0.<org.apache.commons.compress.utils.BoundedInputStream: long bytesRemaining> = $l10;

     label3:
        return $i7;
    }

    public void close()
    {
        org.apache.commons.compress.utils.BoundedInputStream r0;

        r0 := @this: org.apache.commons.compress.utils.BoundedInputStream;

        return;
    }
}
