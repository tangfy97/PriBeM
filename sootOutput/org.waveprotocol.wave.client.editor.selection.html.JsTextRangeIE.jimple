public class org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE extends com.google.gwt.core.client.JavaScriptObject
{

    protected void <init>()
    {
        org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE r0;

        r0 := @this: org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE;

        specialinvoke r0.<com.google.gwt.core.client.JavaScriptObject: void <init>()>();

        return;
    }

    public static native org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE create();

    public final native org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE moveToElementText(com.google.gwt.dom.client.Element);

    public final native org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE collapse(boolean);

    public final native int move(org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE$MoveUnit, int);

    public final native int moveEnd(org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE$MoveUnit, int);

    public final native org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE setEndPoint(org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE$CompareMode, org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE);

    public final native int compareEndPoints(org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE$CompareMode, org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE);

    public final native java.lang.String getHtmlText();

    public final native java.lang.String getText();

    public final native org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE select();

    public final native org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE pasteHTML(java.lang.String);

    public final native org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE duplicate();

    public final native com.google.gwt.dom.client.Element parentElement();

    public final native org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE execCommand(java.lang.String);

    public final native boolean isEqual(org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE);

    public final native int getOffsetLeft();

    public final native int getOffsetTop();

    public static boolean equivalent(org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE, org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE)
    {
        org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE$CompareMode $r2, $r3;
        int $i0, $i1;
        org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE r0, r1;
        boolean $z0;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE;

        r1 := @parameter1: org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE;

        $r2 = <org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE$CompareMode: org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE$CompareMode StartToStart>;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE: int compareEndPoints(org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE$CompareMode,org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE)>($r2, r1);

        if $i0 != 0 goto label1;

        $r3 = <org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE$CompareMode: org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE$CompareMode EndToEnd>;

        $i1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE: int compareEndPoints(org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE$CompareMode,org.waveprotocol.wave.client.editor.selection.html.JsTextRangeIE)>($r3, r1);

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final native java.lang.String getBookmark();

    public final native void moveToBookmark(java.lang.String);
}
