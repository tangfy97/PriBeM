public class org.apache.cxf.transport.http.ProxyFactory extends java.lang.Object
{
    private static final java.lang.String HTTP_PROXY_HOST;
    private static final java.lang.String HTTP_PROXY_PORT;
    private static final java.lang.String HTTP_NON_PROXY_HOSTS;
    private org.apache.cxf.transports.http.configuration.HTTPClientPolicy systemProxyConfiguration;

    public void <init>()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy $r1;
        org.apache.cxf.transport.http.ProxyFactory r0;

        r0 := @this: org.apache.cxf.transport.http.ProxyFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.apache.cxf.transport.http.ProxyFactory: org.apache.cxf.transports.http.configuration.HTTPClientPolicy createSystemProxyConfiguration()>();

        r0.<org.apache.cxf.transport.http.ProxyFactory: org.apache.cxf.transports.http.configuration.HTTPClientPolicy systemProxyConfiguration> = $r1;

        return;
    }

    private static org.apache.cxf.transports.http.configuration.HTTPClientPolicy createSystemProxyConfiguration()
    {
        org.apache.cxf.transports.http.configuration.ProxyServerType $r2;
        java.lang.Integer $r4;
        int $i0;
        java.lang.String $r0, $r3, $r5, r7, r8;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy $r1, r6;
        boolean $z0, $z1, $z2;

        r6 = null;

        $r0 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getPropertyOrNull(java.lang.String)>("http.proxyHost");

        r7 = $r0;

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        r7 = null;

     label1:
        if r7 == null goto label3;

        $r1 = new org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        specialinvoke $r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void <init>()>();

        r6 = $r1;

        virtualinvoke $r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setProxyServer(java.lang.String)>(r7);

        $r2 = <org.apache.cxf.transports.http.configuration.ProxyServerType: org.apache.cxf.transports.http.configuration.ProxyServerType HTTP>;

        virtualinvoke $r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setProxyServerType(org.apache.cxf.transports.http.configuration.ProxyServerType)>($r2);

        $r3 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getProperty(java.lang.String,java.lang.String)>("http.proxyPort", "8080");

        r8 = $r3;

        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r3);

        if $z1 == 0 goto label2;

        r8 = null;

     label2:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r8);

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setProxyServerPort(int)>($i0);

        $r5 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getPropertyOrNull(java.lang.String)>("http.nonProxyHosts");

        $z2 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r5);

        if $z2 != 0 goto label3;

        virtualinvoke $r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setNonProxyHosts(java.lang.String)>($r5);

     label3:
        return r6;
    }

    public java.net.Proxy createProxy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy, java.net.URI)
    {
        org.apache.cxf.transport.http.ProxyFactory r1;
        java.net.Proxy $r4, $r6, $r9;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.net.URI r2;
        java.lang.String $r3, $r5, $r7, $r8;
        boolean $z0, $z1;

        r1 := @this: org.apache.cxf.transport.http.ProxyFactory;

        r0 := @parameter0: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r2 := @parameter1: java.net.URI;

        if r0 == null goto label2;

        $z0 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetProxyServer()>();

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getProxyServer()>();

        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r7);

        if $z1 != 0 goto label1;

        $r8 = virtualinvoke r2.<java.net.URI: java.lang.String getHost()>();

        $r9 = specialinvoke r1.<org.apache.cxf.transport.http.ProxyFactory: java.net.Proxy getProxy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,java.lang.String)>(r0, $r8);

        return $r9;

     label1:
        $r5 = virtualinvoke r2.<java.net.URI: java.lang.String getHost()>();

        $r6 = specialinvoke r1.<org.apache.cxf.transport.http.ProxyFactory: java.net.Proxy getSystemProxy(java.lang.String)>($r5);

        return $r6;

     label2:
        $r3 = virtualinvoke r2.<java.net.URI: java.lang.String getHost()>();

        $r4 = specialinvoke r1.<org.apache.cxf.transport.http.ProxyFactory: java.net.Proxy getSystemProxy(java.lang.String)>($r3);

        return $r4;
    }

    private java.net.Proxy getSystemProxy(java.lang.String)
    {
        org.apache.cxf.transport.http.ProxyFactory r0;
        java.net.Proxy $r4;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy $r1, $r3;
        java.lang.String r2;

        r0 := @this: org.apache.cxf.transport.http.ProxyFactory;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.cxf.transport.http.ProxyFactory: org.apache.cxf.transports.http.configuration.HTTPClientPolicy systemProxyConfiguration>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.cxf.transport.http.ProxyFactory: org.apache.cxf.transports.http.configuration.HTTPClientPolicy systemProxyConfiguration>;

        $r4 = specialinvoke r0.<org.apache.cxf.transport.http.ProxyFactory: java.net.Proxy getProxy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,java.lang.String)>($r3, r2);

        return $r4;

     label1:
        return null;
    }

    private java.net.Proxy getProxy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy, java.lang.String)
    {
        java.util.regex.Matcher $r6;
        org.apache.cxf.transport.http.ProxyFactory r1;
        java.net.Proxy $r2, $r7;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r3, r5;
        java.util.regex.Pattern $r4;
        boolean $z0, $z1;

        r1 := @this: org.apache.cxf.transport.http.ProxyFactory;

        r0 := @parameter0: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r5 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: boolean isSetNonProxyHosts()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getNonProxyHosts()>();

        $r4 = staticinvoke <org.apache.cxf.transport.http.PatternBuilder: java.util.regex.Pattern build(java.lang.String)>($r3);

        $r6 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r5);

        $z1 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label1;

        $r7 = <java.net.Proxy: java.net.Proxy NO_PROXY>;

        return $r7;

     label1:
        $r2 = specialinvoke r1.<org.apache.cxf.transport.http.ProxyFactory: java.net.Proxy createProxy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)>(r0);

        return $r2;
    }

    private java.net.Proxy createProxy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)
    {
        org.apache.cxf.transports.http.configuration.ProxyServerType $r2;
        java.net.InetSocketAddress $r5;
        java.net.Proxy$Type $r4;
        java.net.Proxy $r0;
        org.apache.cxf.transport.http.ProxyFactory r7;
        int $i0;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r1;
        java.lang.String $r3, $r6;

        r7 := @this: org.apache.cxf.transport.http.ProxyFactory;

        r1 := @parameter0: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r0 = new java.net.Proxy;

        $r2 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ProxyServerType getProxyServerType()>();

        $r3 = virtualinvoke $r2.<org.apache.cxf.transports.http.configuration.ProxyServerType: java.lang.String toString()>();

        $r4 = staticinvoke <java.net.Proxy$Type: java.net.Proxy$Type valueOf(java.lang.String)>($r3);

        $r5 = new java.net.InetSocketAddress;

        $r6 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String getProxyServer()>();

        $i0 = virtualinvoke r1.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: int getProxyServerPort()>();

        specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r6, $i0);

        specialinvoke $r0.<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>($r4, $r5);

        return $r0;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.transport.http.ProxyFactory: java.lang.String HTTP_NON_PROXY_HOSTS> = "http.nonProxyHosts";

        <org.apache.cxf.transport.http.ProxyFactory: java.lang.String HTTP_PROXY_PORT> = "http.proxyPort";

        <org.apache.cxf.transport.http.ProxyFactory: java.lang.String HTTP_PROXY_HOST> = "http.proxyHost";

        return;
    }
}
