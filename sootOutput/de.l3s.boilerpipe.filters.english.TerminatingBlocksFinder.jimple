public class de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder extends java.lang.Object implements de.l3s.boilerpipe.BoilerpipeFilter
{
    public static final de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder INSTANCE;
    private static final java.util.regex.Pattern N_COMMENTS;

    public void <init>()
    {
        de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder r0;

        r0 := @this: de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder getInstance()
    {
        de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder $r0;

        $r0 = <de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder: de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder INSTANCE>;

        return $r0;
    }

    public boolean process(de.l3s.boilerpipe.document.TextDocument) throws de.l3s.boilerpipe.BoilerpipeProcessingException
    {
        de.l3s.boilerpipe.document.TextDocument r0;
        java.util.regex.Matcher $r8;
        int $i0;
        java.lang.String $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15;
        java.util.Iterator $r2;
        de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder r9;
        java.util.List $r1;
        de.l3s.boilerpipe.document.TextBlock r4;
        java.lang.Object $r3;
        java.util.regex.Pattern $r7;

        r9 := @this: de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder;

        r0 := @parameter0: de.l3s.boilerpipe.document.TextDocument;

        z15 = 0;

        $r1 = virtualinvoke r0.<de.l3s.boilerpipe.document.TextDocument: java.util.List getTextBlocks()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (de.l3s.boilerpipe.document.TextBlock) $r3;

        $i0 = virtualinvoke r4.<de.l3s.boilerpipe.document.TextBlock: int getNumWords()>();

        if $i0 >= 20 goto label3;

        $r5 = virtualinvoke r4.<de.l3s.boilerpipe.document.TextBlock: java.lang.String getText()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("Comments");

        if $z1 != 0 goto label2;

        $r7 = <de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder: java.util.regex.Pattern N_COMMENTS>;

        $r8 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r6);

        $z2 = virtualinvoke $r8.<java.util.regex.Matcher: boolean find()>();

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("What you think...");

        if $z3 != 0 goto label2;

        $z4 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("add your comment");

        if $z4 != 0 goto label2;

        $z5 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("Add your comment");

        if $z5 != 0 goto label2;

        $z6 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("Add Your Comment");

        if $z6 != 0 goto label2;

        $z7 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("Add Comment");

        if $z7 != 0 goto label2;

        $z8 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("Reader views");

        if $z8 != 0 goto label2;

        $z9 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("Have your say");

        if $z9 != 0 goto label2;

        $z10 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("Have Your Say");

        if $z10 != 0 goto label2;

        $z11 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("Reader Comments");

        if $z11 != 0 goto label2;

        $z12 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("Thanks for your comments - this feedback is now closed");

        if $z12 != 0 goto label2;

        $z13 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("\u00a9 Reuters");

        if $z13 != 0 goto label2;

        $z14 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("Please rate this");

        if $z14 == 0 goto label3;

     label2:
        virtualinvoke r4.<de.l3s.boilerpipe.document.TextBlock: void addLabel(java.lang.String)>("de.l3s.boilerpipe/INDICATES_END_OF_TEXT");

        z15 = 1;

     label3:
        goto label1;

     label4:
        return z15;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r1;
        de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder $r0;

        $r0 = new de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder;

        specialinvoke $r0.<de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder: void <init>()>();

        <de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder: de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder INSTANCE> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?msi)^[0-9]+ (Comments|users responded in)");

        <de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder: java.util.regex.Pattern N_COMMENTS> = $r1;

        return;
    }
}
