public class groovy.util.slurpersupport.FilteredNodeChildren extends groovy.util.slurpersupport.NodeChildren
{
    private final groovy.lang.Closure closure;

    public void <init>(groovy.util.slurpersupport.GPathResult, groovy.lang.Closure, java.util.Map)
    {
        groovy.util.slurpersupport.FilteredNodeChildren r0;
        java.util.Map r2;
        groovy.lang.Closure r4;
        java.lang.String $r3;
        groovy.util.slurpersupport.GPathResult r1;

        r0 := @this: groovy.util.slurpersupport.FilteredNodeChildren;

        r1 := @parameter0: groovy.util.slurpersupport.GPathResult;

        r4 := @parameter1: groovy.lang.Closure;

        r2 := @parameter2: java.util.Map;

        $r3 = r1.<groovy.util.slurpersupport.GPathResult: java.lang.String name>;

        specialinvoke r0.<groovy.util.slurpersupport.NodeChildren: void <init>(groovy.util.slurpersupport.GPathResult,java.lang.String,java.util.Map)>(r1, $r3, r2);

        r0.<groovy.util.slurpersupport.FilteredNodeChildren: groovy.lang.Closure closure> = r4;

        return;
    }

    public java.util.Iterator iterator()
    {
        groovy.util.slurpersupport.FilteredNodeChildren$1 $r0;
        groovy.util.slurpersupport.FilteredNodeChildren r1;

        r1 := @this: groovy.util.slurpersupport.FilteredNodeChildren;

        $r0 = new groovy.util.slurpersupport.FilteredNodeChildren$1;

        specialinvoke $r0.<groovy.util.slurpersupport.FilteredNodeChildren$1: void <init>(groovy.util.slurpersupport.FilteredNodeChildren)>(r1);

        return $r0;
    }

    public java.util.Iterator nodeIterator()
    {
        groovy.util.slurpersupport.FilteredNodeChildren r1;
        java.util.Iterator $r3;
        groovy.util.slurpersupport.FilteredNodeChildren$2 $r0;
        groovy.util.slurpersupport.GPathResult $r2;

        r1 := @this: groovy.util.slurpersupport.FilteredNodeChildren;

        $r0 = new groovy.util.slurpersupport.FilteredNodeChildren$2;

        $r2 = r1.<groovy.util.slurpersupport.FilteredNodeChildren: groovy.util.slurpersupport.GPathResult parent>;

        $r3 = virtualinvoke $r2.<groovy.util.slurpersupport.GPathResult: java.util.Iterator nodeIterator()>();

        specialinvoke $r0.<groovy.util.slurpersupport.FilteredNodeChildren$2: void <init>(groovy.util.slurpersupport.FilteredNodeChildren,java.util.Iterator)>(r1, $r3);

        return $r0;
    }

    private boolean closureYieldsTrueForNode(java.lang.Object)
    {
        java.lang.Object[] $r1;
        groovy.util.slurpersupport.FilteredNodeChildren r0;
        groovy.lang.Closure $r3;
        java.lang.Object r2, $r4;
        boolean $z0;

        r0 := @this: groovy.util.slurpersupport.FilteredNodeChildren;

        r2 := @parameter0: java.lang.Object;

        $r3 = r0.<groovy.util.slurpersupport.FilteredNodeChildren: groovy.lang.Closure closure>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        $r4 = virtualinvoke $r3.<groovy.lang.Closure: java.lang.Object call(java.lang.Object[])>($r1);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean castToBoolean(java.lang.Object)>($r4);

        return $z0;
    }

    static boolean access$000(groovy.util.slurpersupport.FilteredNodeChildren, java.lang.Object)
    {
        java.lang.Object r1;
        groovy.util.slurpersupport.FilteredNodeChildren r0;
        boolean $z0;

        r0 := @parameter0: groovy.util.slurpersupport.FilteredNodeChildren;

        r1 := @parameter1: java.lang.Object;

        $z0 = specialinvoke r0.<groovy.util.slurpersupport.FilteredNodeChildren: boolean closureYieldsTrueForNode(java.lang.Object)>(r1);

        return $z0;
    }
}
