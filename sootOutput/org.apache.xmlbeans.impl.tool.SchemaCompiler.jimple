public class org.apache.xmlbeans.impl.tool.SchemaCompiler extends java.lang.Object
{
    private static final java.lang.String CONFIG_URI;
    private static final java.lang.String COMPATIBILITY_CONFIG_URI;
    private static final java.util.Map MAP_COMPATIBILITY_CONFIG_URIS;
    static java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdschema$SchemaDocument;
    static java.lang.Class class$org$apache$xmlbeans$SchemaTypeSystem;

    public void <init>()
    {
        org.apache.xmlbeans.impl.tool.SchemaCompiler r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.SchemaCompiler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void printUsage()
    {
        java.lang.StringBuffer $r16, $r18, $r20, $r21, $r23, $r25, $r27, $r28;
        java.lang.String $r19, $r22, $r26, $r29;
        java.io.PrintStream $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r24, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Compiles a schema into XML Bean classes and metadata.");

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Usage: scomp [opts] [dirs]* [schema.xsd]* [service.wsdl]* [config.xsdconfig]*");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Options include:");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("    -cp [a;b;c] - classpath");

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("    -d [dir] - target binary directory for .class and .xsb files");

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("    -src [dir] - target directory for generated .java files");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("    -srconly - do not compile .java files or jar the output.");

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("    -out [xmltypes.jar] - the name of the output jar");

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("    -dl - permit network downloads for imports and includes (default is off)");

        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("    -noupa - do not enforce the unique particle attribution rule");

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("    -nopvr - do not enforce the particle valid (restriction) rule");

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("    -noann - ignore annotations");

        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("    -novdoc - do not validate contents of <documentation>");

        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("    -noext - ignore all extension (Pre/Post and Interface) found in .xsdconfig files");

        $r14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("    -compiler - path to external java compiler");

        $r15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("    -javasource [version] - generate java source compatible for a Java version (1.4 or 1.5)");

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    -ms - initial memory for external java compiler (default \'");

        $r19 = <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String DEFAULT_MEM_START>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\')");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r22);

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    -mx - maximum memory for external java compiler (default \'");

        $r26 = <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String DEFAULT_MEM_MAX>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\')");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);

        $r30 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("    -debug - compile with debug symbols");

        $r31 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>("    -quiet - print fewer informational messages");

        $r32 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>("    -verbose - print more informational messages");

        $r33 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>("    -version - prints version information");

        $r34 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>("    -license - prints license information");

        $r35 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>("    -allowmdef \"[ns] [ns] [ns]\" - ignores multiple defs in given namespaces (use ##local for no-namespace)");

        $r36 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>("    -catalog [file] -  catalog file for org.apache.xml.resolver.tools.CatalogResolver. (Note: needs resolver.jar from http://xml.apache.org/commons/components/resolver/index.html)");

        $r37 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r37.<java.io.PrintStream: void println()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.Thread $r60;
        java.lang.ClassLoader $r61;
        java.lang.Object[] $r42;
        java.lang.StringBuffer $r67, $r69, $r74, $r75, $r80, $r82, $r83, $r88, $r89, $r90, $r116, $r117, $r121, $r125;
        java.util.StringTokenizer $r122;
        java.io.IOException $r71;
        org.apache.xmlbeans.impl.tool.Extension$Param $r56;
        org.apache.xmlbeans.SchemaCodePrinter r94;
        org.apache.xmlbeans.impl.tool.Extension r98, $r120;
        org.apache.xmlbeans.impl.tool.CommandLine $r115;
        org.apache.xmlbeans.impl.common.XmlErrorPrinter $r129;
        java.util.HashSet $r113, $r114, $r118;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, i9, $i10, $i11, $i12, $i13, $i14;
        java.io.PrintStream $r36, $r37, $r57, $r66, $r73, $r79, $r87;
        java.lang.Object $r50, $r64;
        java.lang.Class $r62, $r63;
        java.io.File[] $r41, $r43, r104, $r107, $r108, $r109, $r110;
        java.util.Set r24, $r97;
        java.lang.Exception $r85;
        java.util.ArrayList $r119, $r127;
        java.lang.String $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r26, $r27, $r28, $r29, $r30, $r31, $r34, $r38, $r45, $r49, $r52, $r53, $r54, $r55, $r59, $r68, $r70, $r76, $r81, $r84, $r91, r93, $r95, $r96, $r99, $r105, $r106;
        java.io.File $r32, r100, r101, r102, r103, $r123, $r124, $r126, $r128;
        java.lang.ClassNotFoundException $r77;
        java.net.URL[] $r111;
        java.net.URI $r112;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, $z8, $z9, $z10, z11, $z12, z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        java.util.List $r23;
        org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters $r130;
        java.lang.String[] $r6, $r22, $r39, r92;

        r92 := @parameter0: java.lang.String[];

        $i0 = lengthof r92;

        if $i0 != 0 goto label01;

        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCompiler: void printUsage()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label01:
        $r113 = new java.util.HashSet;

        specialinvoke $r113.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("h");

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("help");

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("usage");

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("license");

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("quiet");

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("verbose");

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("version");

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("dl");

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("noupa");

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("nopvr");

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("noann");

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("novdoc");

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("noext");

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("srconly");

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("debug");

        $r114 = new java.util.HashSet;

        specialinvoke $r114.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("out");

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("name");

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("src");

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("d");

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("cp");

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("compiler");

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("javasource");

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("jar");

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("ms");

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("mx");

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("repackage");

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("schemaCodePrinter");

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("extension");

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("extensionParms");

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("allowmdef");

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("catalog");

        $r115 = new org.apache.xmlbeans.impl.tool.CommandLine;

        specialinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: void <init>(java.lang.String[],java.util.Collection,java.util.Collection)>(r92, $r113, $r114);

        $r3 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("h");

        if $r3 != null goto label02;

        $r4 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("help");

        if $r4 != null goto label02;

        $r5 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("usage");

        if $r5 == null goto label03;

     label02:
        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCompiler: void printUsage()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label03:
        $r6 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String[] getBadOpts()>();

        $i1 = lengthof $r6;

        if $i1 <= 0 goto label06;

        i7 = 0;

     label04:
        $i6 = lengthof $r6;

        if i7 >= $i6 goto label05;

        $r66 = <java.lang.System: java.io.PrintStream out>;

        $r116 = new java.lang.StringBuffer;

        specialinvoke $r116.<java.lang.StringBuffer: void <init>()>();

        $r67 = virtualinvoke $r116.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized option: ");

        $r68 = $r6[i7];

        $r69 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r68);

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r66.<java.io.PrintStream: void println(java.lang.String)>($r70);

        i7 = i7 + 1;

        goto label04;

     label05:
        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCompiler: void printUsage()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label06:
        $r7 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("license");

        if $r7 == null goto label07;

        staticinvoke <org.apache.xmlbeans.impl.tool.CommandLine: void printLicense()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label07:
        $r8 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("version");

        if $r8 == null goto label08;

        staticinvoke <org.apache.xmlbeans.impl.tool.CommandLine: void printVersion()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label08:
        virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String[] args()>();

        $r9 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("verbose");

        if $r9 == null goto label09;

        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        z11 = $z10;

        $r10 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("quiet");

        if $r10 == null goto label11;

        $z12 = 1;

        goto label12;

     label11:
        $z12 = 0;

     label12:
        z13 = $z12;

        if z11 == 0 goto label13;

        z13 = 0;

     label13:
        if z11 == 0 goto label14;

        staticinvoke <org.apache.xmlbeans.impl.tool.CommandLine: void printVersion()>();

     label14:
        $r11 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("out");

        r93 = $r11;

        $r12 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("repackage");

        $r13 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("schemaCodePrinter");

        r94 = null;

        if $r13 == null goto label18;

     label15:
        $r63 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r13);

        $r64 = virtualinvoke $r63.<java.lang.Class: java.lang.Object newInstance()>();

        r94 = (org.apache.xmlbeans.SchemaCodePrinter) $r64;

     label16:
        goto label18;

     label17:
        $r85 := @caughtexception;

        $r87 = <java.lang.System: java.io.PrintStream err>;

        $r117 = new java.lang.StringBuffer;

        specialinvoke $r117.<java.lang.StringBuffer: void <init>()>();

        $r88 = virtualinvoke $r117.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Failed to load SchemaCodePrinter class ");

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r90 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; proceeding with default printer");

        $r91 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r87.<java.io.PrintStream: void println(java.lang.String)>($r91);

     label18:
        $r95 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("name");

        $r96 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("dl");

        if $r96 == null goto label19;

        $z14 = 1;

        goto label20;

     label19:
        $z14 = 0;

     label20:
        z0 = $z14;

        $r14 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("noupa");

        if $r14 == null goto label21;

        $z15 = 1;

        goto label22;

     label21:
        $z15 = 0;

     label22:
        z1 = $z15;

        $r15 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("nopvr");

        if $r15 == null goto label23;

        $z16 = 1;

        goto label24;

     label23:
        $z16 = 0;

     label24:
        z2 = $z16;

        $r16 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("noann");

        if $r16 == null goto label25;

        $z17 = 1;

        goto label26;

     label25:
        $z17 = 0;

     label26:
        z3 = $z17;

        $r17 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("novdoc");

        if $r17 == null goto label27;

        $z18 = 1;

        goto label28;

     label27:
        $z18 = 0;

     label28:
        z4 = $z18;

        $r18 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("noext");

        if $r18 == null goto label29;

        $z19 = 1;

        goto label30;

     label29:
        $z19 = 0;

     label30:
        z5 = $z19;

        $r19 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("srconly");

        if $r19 == null goto label31;

        $z20 = 1;

        goto label32;

     label31:
        $z20 = 0;

     label32:
        z6 = $z20;

        $r20 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("debug");

        if $r20 == null goto label33;

        $z21 = 1;

        goto label34;

     label33:
        $z21 = 0;

     label34:
        z7 = $z21;

        $r21 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("allowmdef");

        if $r21 != null goto label35;

        $r97 = <java.util.Collections: java.util.Set EMPTY_SET>;

        goto label36;

     label35:
        $r118 = new java.util.HashSet;

        $r97 = $r118;

        $r22 = staticinvoke <org.apache.xmlbeans.impl.values.XmlListImpl: java.lang.String[] split_list(java.lang.String)>($r21);

        $r23 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r22);

        specialinvoke $r118.<java.util.HashSet: void <init>(java.util.Collection)>($r23);

     label36:
        r24 = $r97;

        $r119 = new java.util.ArrayList;

        specialinvoke $r119.<java.util.ArrayList: void <init>()>();

        $r26 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("extension");

        if $r26 == null goto label40;

     label37:
        $r120 = new org.apache.xmlbeans.impl.tool.Extension;

        specialinvoke $r120.<org.apache.xmlbeans.impl.tool.Extension: void <init>()>();

        $r59 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("extension");

        $r60 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r61 = virtualinvoke $r60.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r62 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r59, 0, $r61);

        virtualinvoke $r120.<org.apache.xmlbeans.impl.tool.Extension: void setClassName(java.lang.Class)>($r62);

        interfaceinvoke $r119.<java.util.List: boolean add(java.lang.Object)>($r120);

     label38:
        goto label40;

     label39:
        $r77 := @caughtexception;

        $r79 = <java.lang.System: java.io.PrintStream err>;

        $r121 = new java.lang.StringBuffer;

        specialinvoke $r121.<java.lang.StringBuffer: void <init>()>();

        $r80 = virtualinvoke $r121.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not find extension class: ");

        $r81 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("extension");

        $r82 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  Is it on your classpath?");

        $r84 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r79.<java.io.PrintStream: void println(java.lang.String)>($r84);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label40:
        $i8 = interfaceinvoke $r119.<java.util.List: int size()>();

        if $i8 <= 0 goto label43;

        $r49 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("extensionParms");

        if $r49 == null goto label43;

        $r50 = interfaceinvoke $r119.<java.util.List: java.lang.Object get(int)>(0);

        r98 = (org.apache.xmlbeans.impl.tool.Extension) $r50;

        $r122 = new java.util.StringTokenizer;

        $r52 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("extensionParms");

        specialinvoke $r122.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r52, ";");

     label41:
        $z9 = virtualinvoke $r122.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z9 == 0 goto label43;

        $r53 = virtualinvoke $r122.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i4 = virtualinvoke $r53.<java.lang.String: int indexOf(int)>(61);

        if $i4 >= 0 goto label42;

        $r57 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>("extensionParms should be name=value;name=value");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label42:
        $r54 = virtualinvoke $r53.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        $i5 = $i4 + 1;

        $r55 = virtualinvoke $r53.<java.lang.String: java.lang.String substring(int)>($i5);

        $r56 = virtualinvoke r98.<org.apache.xmlbeans.impl.tool.Extension: org.apache.xmlbeans.impl.tool.Extension$Param createParam()>();

        virtualinvoke $r56.<org.apache.xmlbeans.impl.tool.Extension$Param: void setName(java.lang.String)>($r54);

        virtualinvoke $r56.<org.apache.xmlbeans.impl.tool.Extension$Param: void setValue(java.lang.String)>($r55);

        goto label41;

     label43:
        $r99 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("d");

        r100 = null;

        if $r99 == null goto label44;

        $r123 = new java.io.File;

        specialinvoke $r123.<java.io.File: void <init>(java.lang.String)>($r99);

        r100 = $r123;

     label44:
        $r27 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("src");

        r101 = null;

        if $r27 == null goto label45;

        $r124 = new java.io.File;

        specialinvoke $r124.<java.io.File: void <init>(java.lang.String)>($r27);

        r101 = $r124;

     label45:
        if z6 == 0 goto label46;

        if $r27 != null goto label46;

        if r100 == null goto label46;

        r101 = r100;

     label46:
        r102 = null;

        if r101 == null goto label47;

        if r100 != null goto label50;

     label47:
        r102 = staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCodeGenerator: java.io.File createTempDir()>();

     label48:
        goto label50;

     label49:
        $r71 := @caughtexception;

        $r73 = <java.lang.System: java.io.PrintStream err>;

        $r125 = new java.lang.StringBuffer;

        specialinvoke $r125.<java.lang.StringBuffer: void <init>()>();

        $r74 = virtualinvoke $r125.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error creating temp dir ");

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r71);

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r73.<java.io.PrintStream: void println(java.lang.String)>($r76);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label50:
        r103 = null;

        if $r11 != null goto label51;

        if r100 != null goto label51;

        if z6 != 0 goto label51;

        r93 = "xmltypes.jar";

     label51:
        if r93 == null goto label52;

        $r126 = new java.io.File;

        specialinvoke $r126.<java.io.File: void <init>(java.lang.String)>(r93);

        r103 = $r126;

     label52:
        if r101 != null goto label53;

        r101 = staticinvoke <org.apache.xmlbeans.impl.common.IOUtil: java.io.File createDir(java.io.File,java.lang.String)>(r102, "src");

     label53:
        if r100 != null goto label54;

        r100 = staticinvoke <org.apache.xmlbeans.impl.common.IOUtil: java.io.File createDir(java.io.File,java.lang.String)>(r102, "classes");

     label54:
        $r28 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("cp");

        if $r28 == null goto label57;

        $r38 = <java.io.File: java.lang.String pathSeparator>;

        $r39 = virtualinvoke $r28.<java.lang.String: java.lang.String[] split(java.lang.String)>($r38);

        $r127 = new java.util.ArrayList;

        specialinvoke $r127.<java.util.ArrayList: void <init>()>();

        i9 = 0;

     label55:
        $i2 = lengthof $r39;

        if i9 >= $i2 goto label56;

        $r128 = new java.io.File;

        $r45 = $r39[i9];

        specialinvoke $r128.<java.io.File: void <init>(java.lang.String)>($r45);

        interfaceinvoke $r127.<java.util.List: boolean add(java.lang.Object)>($r128);

        i9 = i9 + 1;

        goto label55;

     label56:
        $i3 = interfaceinvoke $r127.<java.util.List: int size()>();

        $r41 = newarray (java.io.File)[$i3];

        $r42 = interfaceinvoke $r127.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r41);

        $r43 = (java.io.File[]) $r42;

        r104 = (java.io.File[]) $r43;

        goto label58;

     label57:
        r104 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.io.File[] systemClasspath()>();

     label58:
        $r29 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("javasource");

        $r30 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("compiler");

        $r31 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("jar");

        if z11 == 0 goto label59;

        if $r31 == null goto label59;

        $r37 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>("The \'jar\' option is no longer supported.");

     label59:
        $r105 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("ms");

        $r106 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("mx");

        $r107 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.io.File[] filesEndingWith(java.lang.String)>(".xsd");

        $r108 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.io.File[] filesEndingWith(java.lang.String)>(".wsdl");

        $r109 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.io.File[] filesEndingWith(java.lang.String)>(".java");

        $r110 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.io.File[] filesEndingWith(java.lang.String)>(".xsdconfig");

        $r111 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.net.URL[] getURLs()>();

        $i10 = lengthof $r107;

        $i11 = lengthof $r108;

        $i12 = $i10 + $i11;

        $i13 = lengthof $r111;

        $i14 = $i12 + $i13;

        if $i14 != 0 goto label60;

        $r36 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>("Could not find any xsd or wsdl files to process.");

        staticinvoke <java.lang.System: void exit(int)>(0);

     label60:
        $r32 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.io.File getBaseDir()>();

        if $r32 != null goto label61;

        $r112 = null;

        goto label62;

     label61:
        $r112 = virtualinvoke $r32.<java.io.File: java.net.URI toURI()>();

     label62:
        $r129 = new org.apache.xmlbeans.impl.common.XmlErrorPrinter;

        specialinvoke $r129.<org.apache.xmlbeans.impl.common.XmlErrorPrinter: void <init>(boolean,java.net.URI)>(z11, $r112);

        $r34 = virtualinvoke $r115.<org.apache.xmlbeans.impl.tool.CommandLine: java.lang.String getOpt(java.lang.String)>("catalog");

        $r130 = new org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters;

        specialinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void <init>()>();

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setBaseDir(java.io.File)>($r32);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setXsdFiles(java.io.File[])>($r107);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setWsdlFiles(java.io.File[])>($r108);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setJavaFiles(java.io.File[])>($r109);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setConfigFiles(java.io.File[])>($r110);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setUrlFiles(java.net.URL[])>($r111);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setClasspath(java.io.File[])>(r104);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setOutputJar(java.io.File)>(r103);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setName(java.lang.String)>($r95);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setSrcDir(java.io.File)>(r101);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setClassesDir(java.io.File)>(r100);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setCompiler(java.lang.String)>($r30);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setJavaSource(java.lang.String)>($r29);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setMemoryInitialSize(java.lang.String)>($r105);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setMemoryMaximumSize(java.lang.String)>($r106);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setNojavac(boolean)>(z6);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setQuiet(boolean)>(z13);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setVerbose(boolean)>(z11);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setDownload(boolean)>(z0);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setNoUpa(boolean)>(z1);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setNoPvr(boolean)>(z2);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setNoAnn(boolean)>(z3);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setNoVDoc(boolean)>(z4);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setNoExt(boolean)>(z5);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setDebug(boolean)>(z7);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setErrorListener(java.util.Collection)>($r129);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setRepackage(java.lang.String)>($r12);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setExtensions(java.util.List)>($r119);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setMdefNamespaces(java.util.Set)>(r24);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setCatalogFile(java.lang.String)>($r34);

        virtualinvoke $r130.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: void setSchemaCodePrinter(org.apache.xmlbeans.SchemaCodePrinter)>(r94);

        $z8 = staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCompiler: boolean compile(org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters)>($r130);

        if r102 == null goto label63;

        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCodeGenerator: void tryHardToDelete(java.io.File)>(r102);

     label63:
        if $z8 != 0 goto label64;

        staticinvoke <java.lang.System: void exit(int)>(1);

     label64:
        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.ClassNotFoundException from label37 to label38 with label39;
        catch java.io.IOException from label47 to label48 with label49;
    }

    private static org.apache.xmlbeans.SchemaTypeSystem loadTypeSystem(java.lang.String, java.io.File[], java.io.File[], java.net.URL[], java.io.File[], java.io.File[], org.apache.xmlbeans.ResourceLoader, boolean, boolean, boolean, boolean, boolean, boolean, java.util.Set, java.io.File, java.util.Map, java.util.Collection, java.io.File, org.xml.sax.EntityResolver, java.io.File[], java.lang.String)
    {
        java.util.Map r30, $r35, $r53, $r65;
        org.xml.sax.EntityResolver r23;
        java.lang.ClassLoader $r4;
        java.lang.Object[] $r11, $r16, $r48, $r56, $r71, $r79, $r82, $r89, $r96, $r103;
        org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument $r63, $r70;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[] $r10, $r12, $r51;
        java.lang.StringBuffer $r38, $r39, $r41;
        org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument$Config $r46;
        org.apache.xmlbeans.XmlException $r86, $r93, $r100, $r107;
        java.util.Collection r1;
        org.apache.xmlbeans.ResourceLoader r18;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, $i9;
        org.apache.xmlbeans.XmlObject $r37, $r55, $r67, $r75;
        java.io.PrintStream $r50;
        org.apache.xmlbeans.BindingConfig $r29;
        org.apache.xmlbeans.XmlOptions $r21, $r34, $r43, $r44, $r52, $r64, $r73;
        org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument$Config[] $r15, $r17, $r33;
        java.lang.Class $r3, $r109;
        java.io.File[] r7, r8, r14, r27, r28;
        java.util.Set r22;
        java.lang.Exception $r81, $r88, $r95, $r102;
        java.util.ArrayList $r6, $r13;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument $r60, $r78;
        java.lang.String r24, r26, $r42, $r59, $r62, $r69, $r77, $r84, $r91, $r98, $r105;
        org.apache.xmlbeans.impl.xb.xmlconfig.Extensionconfig[] $r47;
        org.apache.xmlbeans.SchemaTypeLoader $r5, $r19;
        java.io.File r20, r31, $r36, $r40, $r49, $r66, $r68, $r72, $r74, $r76, $r80, $r83, $r85, $r97, $r99, $r104, $r106;
        java.net.URL $r54, $r57, $r58, $r61, $r90, $r92;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters $r25;
        org.apache.xmlbeans.impl.common.XmlErrorWatcher $r0;
        java.net.URL[] r9;
        org.apache.xmlbeans.impl.schema.StscState $r2;
        java.net.URI r110;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, z9, $z10, $z11;
        org.apache.xmlbeans.SchemaTypeSystem $r32;
        org.apache.xmlbeans.XmlError $r87, $r94, $r101, $r108;
        org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument $r45;

        r26 := @parameter0: java.lang.String;

        r7 := @parameter1: java.io.File[];

        r8 := @parameter2: java.io.File[];

        r9 := @parameter3: java.net.URL[];

        r14 := @parameter4: java.io.File[];

        r27 := @parameter5: java.io.File[];

        r18 := @parameter6: org.apache.xmlbeans.ResourceLoader;

        z0 := @parameter7: boolean;

        z1 := @parameter8: boolean;

        z2 := @parameter9: boolean;

        z3 := @parameter10: boolean;

        z9 := @parameter11: boolean;

        z4 := @parameter12: boolean;

        r22 := @parameter13: java.util.Set;

        r20 := @parameter14: java.io.File;

        r30 := @parameter15: java.util.Map;

        r1 := @parameter16: java.util.Collection;

        r31 := @parameter17: java.io.File;

        r23 := @parameter18: org.xml.sax.EntityResolver;

        r28 := @parameter19: java.io.File[];

        r24 := @parameter20: java.lang.String;

        $r0 = new org.apache.xmlbeans.impl.common.XmlErrorWatcher;

        specialinvoke $r0.<org.apache.xmlbeans.impl.common.XmlErrorWatcher: void <init>(java.util.Collection)>(r1);

        $r2 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState start()>();

        virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.StscState: void setErrorListener(java.util.Collection)>($r0);

        $r3 = <org.apache.xmlbeans.impl.tool.SchemaCompiler: java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdschema$SchemaDocument>;

        if $r3 != null goto label01;

        $r109 = staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCompiler: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument");

        <org.apache.xmlbeans.impl.tool.SchemaCompiler: java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdschema$SchemaDocument> = $r109;

        goto label02;

     label01:
        $r109 = <org.apache.xmlbeans.impl.tool.SchemaCompiler: java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdschema$SchemaDocument>;

     label02:
        $r4 = virtualinvoke $r109.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeLoader typeLoaderForClassLoader(java.lang.ClassLoader)>($r4);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        if r7 == null goto label10;

        i5 = 0;

     label03:
        $i4 = lengthof r7;

        if i5 >= $i4 goto label10;

     label04:
        $r73 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r73.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        virtualinvoke $r73.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadLineNumbers()>();

        virtualinvoke $r73.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadMessageDigest()>();

        virtualinvoke $r73.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setEntityResolver(org.xml.sax.EntityResolver)>(r23);

        $r74 = r7[i5];

        $r75 = interfaceinvoke $r5.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.XmlObject parse(java.io.File,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>($r74, null, $r73);

        $z11 = $r75 instanceof org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument;

        if $z11 != 0 goto label05;

        $r79 = newarray (java.lang.Object)[2];

        $r80 = r7[i5];

        $r79[0] = $r80;

        $r79[1] = "schema";

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addError(java.util.Collection,java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>($r0, "invalid.document.type", $r79, $r75);

        goto label06;

     label05:
        $r76 = r7[i5];

        $r77 = virtualinvoke $r76.<java.io.File: java.lang.String toString()>();

        $r78 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument) $r75;

        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCompiler: void addSchema(java.lang.String,org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument,org.apache.xmlbeans.impl.common.XmlErrorWatcher,boolean,java.util.List)>($r77, $r78, $r0, z9, $r6);

     label06:
        goto label09;

     label07:
        $r107 := @caughtexception;

        $r108 = virtualinvoke $r107.<org.apache.xmlbeans.XmlException: org.apache.xmlbeans.XmlError getError()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.common.XmlErrorWatcher: boolean add(java.lang.Object)>($r108);

        goto label09;

     label08:
        $r102 := @caughtexception;

        $r103 = newarray (java.lang.Object)[3];

        $r103[0] = "xsd";

        $r104 = r7[i5];

        $r103[1] = $r104;

        $r105 = virtualinvoke $r102.<java.lang.Exception: java.lang.String getMessage()>();

        $r103[2] = $r105;

        $r106 = r7[i5];

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addError(java.util.Collection,java.lang.String,java.lang.Object[],java.io.File)>($r0, "cannot.load.file", $r103, $r106);

     label09:
        i5 = i5 + 1;

        goto label03;

     label10:
        if r8 == null goto label18;

        i6 = 0;

     label11:
        $i3 = lengthof r8;

        if i6 >= $i3 goto label18;

     label12:
        $r64 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r64.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        virtualinvoke $r64.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadLineNumbers()>();

        $r65 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("http://schemas.xmlsoap.org/wsdl/", "http://www.apache.org/internal/xmlbeans/wsdlsubst");

        virtualinvoke $r64.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadSubstituteNamespaces(java.util.Map)>($r65);

        virtualinvoke $r64.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setEntityResolver(org.xml.sax.EntityResolver)>(r23);

        $r66 = r8[i6];

        $r67 = interfaceinvoke $r5.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.XmlObject parse(java.io.File,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>($r66, null, $r64);

        $z10 = $r67 instanceof org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument;

        if $z10 != 0 goto label13;

        $r71 = newarray (java.lang.Object)[2];

        $r72 = r8[i6];

        $r71[0] = $r72;

        $r71[1] = "wsdl";

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addError(java.util.Collection,java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>($r0, "invalid.document.type", $r71, $r67);

        goto label14;

     label13:
        $r68 = r8[i6];

        $r69 = virtualinvoke $r68.<java.io.File: java.lang.String toString()>();

        $r70 = (org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument) $r67;

        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCompiler: void addWsdlSchemas(java.lang.String,org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument,org.apache.xmlbeans.impl.common.XmlErrorWatcher,boolean,java.util.List)>($r69, $r70, $r0, z9, $r6);

     label14:
        goto label17;

     label15:
        $r100 := @caughtexception;

        $r101 = virtualinvoke $r100.<org.apache.xmlbeans.XmlException: org.apache.xmlbeans.XmlError getError()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.common.XmlErrorWatcher: boolean add(java.lang.Object)>($r101);

        goto label17;

     label16:
        $r95 := @caughtexception;

        $r96 = newarray (java.lang.Object)[3];

        $r96[0] = "wsdl";

        $r97 = r8[i6];

        $r96[1] = $r97;

        $r98 = virtualinvoke $r95.<java.lang.Exception: java.lang.String getMessage()>();

        $r96[2] = $r98;

        $r99 = r8[i6];

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addError(java.util.Collection,java.lang.String,java.lang.Object[],java.io.File)>($r0, "cannot.load.file", $r96, $r99);

     label17:
        i6 = i6 + 1;

        goto label11;

     label18:
        if r9 == null goto label27;

        i7 = 0;

     label19:
        $i2 = lengthof r9;

        if i7 >= $i2 goto label27;

     label20:
        $r52 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r52.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        virtualinvoke $r52.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadLineNumbers()>();

        $r53 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("http://schemas.xmlsoap.org/wsdl/", "http://www.apache.org/internal/xmlbeans/wsdlsubst");

        virtualinvoke $r52.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadSubstituteNamespaces(java.util.Map)>($r53);

        virtualinvoke $r52.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setEntityResolver(org.xml.sax.EntityResolver)>(r23);

        $r54 = r9[i7];

        $r55 = interfaceinvoke $r5.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.XmlObject parse(java.net.URL,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>($r54, null, $r52);

        $z7 = $r55 instanceof org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument;

        if $z7 == 0 goto label21;

        $r61 = r9[i7];

        $r62 = virtualinvoke $r61.<java.net.URL: java.lang.String toString()>();

        $r63 = (org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument) $r55;

        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCompiler: void addWsdlSchemas(java.lang.String,org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument,org.apache.xmlbeans.impl.common.XmlErrorWatcher,boolean,java.util.List)>($r62, $r63, $r0, z9, $r6);

        goto label23;

     label21:
        $z8 = $r55 instanceof org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument;

        if $z8 == 0 goto label22;

        $r58 = r9[i7];

        $r59 = virtualinvoke $r58.<java.net.URL: java.lang.String toString()>();

        $r60 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument) $r55;

        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCompiler: void addSchema(java.lang.String,org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument,org.apache.xmlbeans.impl.common.XmlErrorWatcher,boolean,java.util.List)>($r59, $r60, $r0, z9, $r6);

        goto label23;

     label22:
        $r56 = newarray (java.lang.Object)[2];

        $r57 = r9[i7];

        $r56[0] = $r57;

        $r56[1] = "wsdl or schema";

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addError(java.util.Collection,java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>($r0, "invalid.document.type", $r56, $r55);

     label23:
        goto label26;

     label24:
        $r93 := @caughtexception;

        $r94 = virtualinvoke $r93.<org.apache.xmlbeans.XmlException: org.apache.xmlbeans.XmlError getError()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.common.XmlErrorWatcher: boolean add(java.lang.Object)>($r94);

        goto label26;

     label25:
        $r88 := @caughtexception;

        $r89 = newarray (java.lang.Object)[3];

        $r89[0] = "url";

        $r90 = r9[i7];

        $r89[1] = $r90;

        $r91 = virtualinvoke $r88.<java.lang.Exception: java.lang.String getMessage()>();

        $r89[2] = $r91;

        $r92 = r9[i7];

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addError(java.util.Collection,java.lang.String,java.lang.Object[],java.net.URL)>($r0, "cannot.load.file", $r89, $r92);

     label26:
        i7 = i7 + 1;

        goto label19;

     label27:
        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $r10 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema)[$i0];

        $r11 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r12 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[]) $r11;

        $r51 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[]) $r12;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        if r14 == null goto label36;

        if z4 == 0 goto label28;

        $r50 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r50.<java.io.PrintStream: void println(java.lang.String)>("Pre/Post and Interface extensions will be ignored.");

     label28:
        i8 = 0;

     label29:
        $i9 = lengthof r14;

        if i8 >= $i9 goto label36;

     label30:
        $r34 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r34.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        virtualinvoke $r34.<org.apache.xmlbeans.XmlOptions: void put(java.lang.Object)>("LOAD_LINE_NUMBERS");

        virtualinvoke $r34.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setEntityResolver(org.xml.sax.EntityResolver)>(r23);

        $r35 = <org.apache.xmlbeans.impl.tool.SchemaCompiler: java.util.Map MAP_COMPATIBILITY_CONFIG_URIS>;

        virtualinvoke $r34.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadSubstituteNamespaces(java.util.Map)>($r35);

        $r36 = r14[i8];

        $r37 = interfaceinvoke $r5.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.XmlObject parse(java.io.File,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>($r36, null, $r34);

        $z5 = $r37 instanceof org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument;

        if $z5 != 0 goto label31;

        $r48 = newarray (java.lang.Object)[2];

        $r49 = r14[i8];

        $r48[0] = $r49;

        $r48[1] = "xsd config";

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addError(java.util.Collection,java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>($r0, "invalid.document.type", $r48, $r37);

        goto label32;

     label31:
        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Loading config file ");

        $r40 = r14[i8];

        $r41 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addInfo(java.util.Collection,java.lang.String)>($r0, $r42);

        $r43 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r43.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r44 = virtualinvoke $r43.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setErrorListener(java.util.Collection)>($r0);

        $z6 = interfaceinvoke $r37.<org.apache.xmlbeans.XmlObject: boolean validate(org.apache.xmlbeans.XmlOptions)>($r44);

        if $z6 == 0 goto label32;

        $r45 = (org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument) $r37;

        $r46 = interfaceinvoke $r45.<org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument: org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument$Config getConfig()>();

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r46);

        if z4 == 0 goto label32;

        $r47 = newarray (org.apache.xmlbeans.impl.xb.xmlconfig.Extensionconfig)[0];

        interfaceinvoke $r46.<org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument$Config: void setExtensionArray(org.apache.xmlbeans.impl.xb.xmlconfig.Extensionconfig[])>($r47);

     label32:
        goto label35;

     label33:
        $r86 := @caughtexception;

        $r87 = virtualinvoke $r86.<org.apache.xmlbeans.XmlException: org.apache.xmlbeans.XmlError getError()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.common.XmlErrorWatcher: boolean add(java.lang.Object)>($r87);

        goto label35;

     label34:
        $r81 := @caughtexception;

        $r82 = newarray (java.lang.Object)[3];

        $r82[0] = "xsd config";

        $r83 = r14[i8];

        $r82[1] = $r83;

        $r84 = virtualinvoke $r81.<java.lang.Exception: java.lang.String getMessage()>();

        $r82[2] = $r84;

        $r85 = r14[i8];

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addError(java.util.Collection,java.lang.String,java.lang.Object[],java.io.File)>($r0, "cannot.load.file", $r82, $r85);

     label35:
        i8 = i8 + 1;

        goto label29;

     label36:
        $i1 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        $r15 = newarray (org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument$Config)[$i1];

        $r16 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r15);

        $r17 = (org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument$Config[]) $r16;

        $r33 = (org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument$Config[]) $r17;

        $r19 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader build(org.apache.xmlbeans.SchemaTypeLoader[],org.apache.xmlbeans.ResourceLoader,java.lang.ClassLoader)>(null, r18, null);

        r110 = null;

        if r20 == null goto label37;

        r110 = virtualinvoke r20.<java.io.File: java.net.URI toURI()>();

     label37:
        $r21 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r21.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        if z0 == 0 goto label38;

        virtualinvoke $r21.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setCompileDownloadUrls()>();

     label38:
        if z1 == 0 goto label39;

        virtualinvoke $r21.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setCompileNoUpaRule()>();

     label39:
        if z2 == 0 goto label40;

        virtualinvoke $r21.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setCompileNoPvrRule()>();

     label40:
        if z3 == 0 goto label41;

        virtualinvoke $r21.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setCompileNoAnnotations()>();

     label41:
        if r22 == null goto label42;

        virtualinvoke $r21.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setCompileMdefNamespaces(java.util.Set)>(r22);

     label42:
        virtualinvoke $r21.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setCompileNoValidation()>();

        virtualinvoke $r21.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setEntityResolver(org.xml.sax.EntityResolver)>(r23);

        if r24 == null goto label43;

        virtualinvoke $r21.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setGenerateJavaVersion(java.lang.String)>(r24);

     label43:
        $r25 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters;

        specialinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: void <init>()>();

        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: void setName(java.lang.String)>(r26);

        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: void setSchemas(org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[])>($r51);

        $r29 = staticinvoke <org.apache.xmlbeans.impl.config.BindingConfigImpl: org.apache.xmlbeans.BindingConfig forConfigDocuments(org.apache.xmlbeans.impl.xb.xmlconfig.ConfigDocument$Config[],java.io.File[],java.io.File[])>($r33, r27, r28);

        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: void setConfig(org.apache.xmlbeans.BindingConfig)>($r29);

        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: void setLinkTo(org.apache.xmlbeans.SchemaTypeLoader)>($r19);

        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: void setOptions(org.apache.xmlbeans.XmlOptions)>($r21);

        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: void setErrorListener(java.util.Collection)>($r0);

        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: void setJavaize(boolean)>(1);

        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: void setBaseURI(java.net.URI)>(r110);

        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: void setSourcesToCopyMap(java.util.Map)>(r30);

        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: void setSchemasDir(java.io.File)>(r31);

        $r32 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler: org.apache.xmlbeans.SchemaTypeSystem compile(org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters)>($r25);

        return $r32;

        catch org.apache.xmlbeans.XmlException from label04 to label06 with label07;
        catch java.lang.Exception from label04 to label06 with label08;
        catch org.apache.xmlbeans.XmlException from label12 to label14 with label15;
        catch java.lang.Exception from label12 to label14 with label16;
        catch org.apache.xmlbeans.XmlException from label20 to label23 with label24;
        catch java.lang.Exception from label20 to label23 with label25;
        catch org.apache.xmlbeans.XmlException from label30 to label32 with label33;
        catch java.lang.Exception from label30 to label32 with label34;
    }

    private static void addSchema(java.lang.String, org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument, org.apache.xmlbeans.impl.common.XmlErrorWatcher, boolean, java.util.List)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema $r10;
        org.apache.xmlbeans.impl.common.XmlErrorWatcher r0;
        java.util.List r9;
        org.apache.xmlbeans.XmlOptions $r6, $r7;
        java.lang.StringBuffer $r1, $r2, $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument r8;
        java.lang.String r3, $r5;
        boolean z0, $z1;

        r3 := @parameter0: java.lang.String;

        r8 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument;

        r0 := @parameter2: org.apache.xmlbeans.impl.common.XmlErrorWatcher;

        z0 := @parameter3: boolean;

        r9 := @parameter4: java.util.List;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Loading schema file ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addInfo(java.util.Collection,java.lang.String)>(r0, $r5);

        $r6 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r6.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r7 = virtualinvoke $r6.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setErrorListener(java.util.Collection)>(r0);

        if z0 == 0 goto label1;

        virtualinvoke $r7.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setValidateTreatLaxAsSkip()>();

     label1:
        $z1 = interfaceinvoke r8.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument: boolean validate(org.apache.xmlbeans.XmlOptions)>($r7);

        if $z1 == 0 goto label2;

        $r10 = interfaceinvoke r8.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema getSchema()>();

        interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r10);

     label2:
        return;
    }

    private static void addWsdlSchemas(java.lang.String, org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument, org.apache.xmlbeans.impl.common.XmlErrorWatcher, boolean, java.util.List)
    {
        org.apache.xmlbeans.impl.common.XmlErrorWatcher r1;
        org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument$Definitions $r9;
        boolean $z0, z1, $z2, $z3;
        java.util.List r21;
        org.apache.xmlbeans.XmlObject[] $r10, $r18;
        org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument r0;
        java.lang.StringBuffer $r2, $r3, $r5, $r11, $r12, $r13, $r14, $r15, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r31;
        int $i0, $i1, i2, i3, $i4, i5;
        java.lang.String r4, $r6, $r16, $r27, $r32;
        org.apache.xmlbeans.XmlObject $r17, $r19, $r20, $r22;
        org.apache.xmlbeans.XmlOptions $r7, $r8;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument;

        r1 := @parameter2: org.apache.xmlbeans.impl.common.XmlErrorWatcher;

        z1 := @parameter3: boolean;

        r21 := @parameter4: java.util.List;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCompiler: boolean wsdlContainsEncoded(org.apache.xmlbeans.XmlObject)>(r0);

        if $z0 == 0 goto label1;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The WSDL ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" uses SOAP encoding. SOAP encoding is not compatible with literal XML Schema.");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addWarning(java.util.Collection,java.lang.String,int,org.apache.xmlbeans.XmlObject)>(r1, $r32, 60, r0);

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Loading wsdl file ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addInfo(java.util.Collection,java.lang.String)>(r1, $r6);

        $r7 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r7.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r8 = virtualinvoke $r7.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setErrorListener(java.util.Collection)>(r1);

        if z1 == 0 goto label2;

        virtualinvoke $r8.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setValidateTreatLaxAsSkip()>();

     label2:
        $r9 = interfaceinvoke r0.<org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument: org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument$Definitions getDefinitions()>();

        $r10 = interfaceinvoke $r9.<org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument$Definitions: org.apache.xmlbeans.XmlObject[] getTypesArray()>();

        i2 = 0;

        i3 = 0;

     label3:
        $i4 = lengthof $r10;

        if i3 >= $i4 goto label8;

        $r17 = $r10[i3];

        $r18 = interfaceinvoke $r17.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlObject[] selectPath(java.lang.String)>("declare namespace xs=\"http://www.w3.org/2001/XMLSchema\" xs:schema");

        $i0 = lengthof $r18;

        if $i0 != 0 goto label4;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The WSDL ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" did not have any schema documents in namespace \'http://www.w3.org/2001/XMLSchema\'");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addWarning(java.util.Collection,java.lang.String,int,org.apache.xmlbeans.XmlObject)>(r1, $r27, 60, r0);

        goto label7;

     label4:
        i5 = 0;

     label5:
        $i1 = lengthof $r18;

        if i5 >= $i1 goto label7;

        $r19 = $r18[i5];

        $z2 = $r19 instanceof org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema;

        if $z2 == 0 goto label6;

        $r20 = $r18[i5];

        $z3 = interfaceinvoke $r20.<org.apache.xmlbeans.XmlObject: boolean validate(org.apache.xmlbeans.XmlOptions)>($r8);

        if $z3 == 0 goto label6;

        i2 = i2 + 1;

        $r22 = $r18[i5];

        interfaceinvoke r21.<java.util.List: boolean add(java.lang.Object)>($r22);

     label6:
        i5 = i5 + 1;

        goto label5;

     label7:
        i3 = i3 + 1;

        goto label3;

     label8:
        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Processing ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" schema(s) in ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addInfo(java.util.Collection,java.lang.String)>(r1, $r16);

        return;
    }

    public static boolean compile(org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters)
    {
        org.xml.sax.EntityResolver r18, $r96, $r97;
        org.apache.xmlbeans.impl.common.JarHelper $r34;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8;
        java.lang.StringBuffer $r21, $r22, $r24, $r25, $r35, $r37, $r38, $r40, $r42, $r43, $r44, $r47, $r49, $r50, $r51, $r55, $r57, $r58, $r59, $r70, $r71, $r74, $r76, $r77, $r78, $r80, $r81, $r83, $r86, $r88, $r89;
        java.io.IOException $r85;
        org.apache.xmlbeans.impl.util.FilerImpl $r31;
        org.apache.xmlbeans.SchemaCodePrinter $r93;
        java.util.Collection $r16;
        java.util.HashSet $r53;
        org.apache.xmlbeans.impl.schema.PathResourceLoader $r61, r98;
        java.io.PrintStream $r30, $r36, $r41, $r48, $r56, $r75, $r87;
        java.lang.Package $r67;
        org.apache.xmlbeans.XmlOptions $r32;
        java.lang.Class $r66, $r92;
        java.io.File[] $r2, $r3, $r5, $r6, $r7;
        java.util.Set $r95;
        java.lang.String $r9, $r12, $r13, $r14, $r15, $r17, $r23, $r26, $r39, $r45, $r52, $r60, $r63, $r64, $r65, $r68, $r72, $r73, $r79, $r82, $r84, $r90;
        java.io.File $r1, $r8, $r10, $r11, $r27, $r62, r91;
        org.apache.xmlbeans.impl.common.XmlErrorWatcher $r28;
        java.net.URL[] $r4;
        repackage.Repackager $r69, $r99;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17, z18, z19;
        java.util.List $r33, $r46, $r54, $r94;
        org.apache.xmlbeans.SchemaTypeSystem $r29;
        org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters r0;
        java.util.HashMap $r20;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.IllegalArgumentException $r19;

        r0 := @parameter0: org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.io.File getBaseDir()>();

        r91 = $r1;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.io.File[] getXsdFiles()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.io.File[] getWsdlFiles()>();

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.net.URL[] getUrlFiles()>();

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.io.File[] getJavaFiles()>();

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.io.File[] getConfigFiles()>();

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.io.File[] getClasspath()>();

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.io.File getOutputJar()>();

        $r9 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.lang.String getName()>();

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.io.File getSrcDir()>();

        $r11 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.io.File getClassesDir()>();

        $r12 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.lang.String getCompiler()>();

        $r13 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.lang.String getJavaSource()>();

        $r14 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.lang.String getMemoryInitialSize()>();

        $r15 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.lang.String getMemoryMaximumSize()>();

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: boolean isNojavac()>();

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: boolean isDebug()>();

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: boolean isVerbose()>();

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: boolean isQuiet()>();

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: boolean isDownload()>();

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: boolean isNoUpa()>();

        $z6 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: boolean isNoPvr()>();

        $z7 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: boolean isNoAnn()>();

        $z8 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: boolean isNoVDoc()>();

        $z9 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: boolean isNoExt()>();

        $z10 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: boolean isIncrementalSrcGen()>();

        $r16 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.util.Collection getErrorListener()>();

        $r17 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.lang.String getRepackage()>();

        if $r17 == null goto label03;

        $r65 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String METADATA_PACKAGE_LOAD> = $r65;

        $r66 = <org.apache.xmlbeans.impl.tool.SchemaCompiler: java.lang.Class class$org$apache$xmlbeans$SchemaTypeSystem>;

        if $r66 != null goto label01;

        $r92 = staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCompiler: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.SchemaTypeSystem");

        <org.apache.xmlbeans.impl.tool.SchemaCompiler: java.lang.Class class$org$apache$xmlbeans$SchemaTypeSystem> = $r92;

        goto label02;

     label01:
        $r92 = <org.apache.xmlbeans.impl.tool.SchemaCompiler: java.lang.Class class$org$apache$xmlbeans$SchemaTypeSystem>;

     label02:
        $r67 = virtualinvoke $r92.<java.lang.Class: java.lang.Package getPackage()>();

        $r68 = virtualinvoke $r67.<java.lang.Package: java.lang.String getName()>();

        $r69 = new repackage.Repackager;

        specialinvoke $r69.<repackage.Repackager: void <init>(java.lang.String)>($r17);

        $r70 = new java.lang.StringBuffer;

        specialinvoke $r70.<java.lang.StringBuffer: void <init>(java.lang.String)>($r68);

        $r71 = virtualinvoke $r69.<repackage.Repackager: java.lang.StringBuffer repackage(java.lang.StringBuffer)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.String toString()>();

        $r73 = virtualinvoke $r72.<java.lang.String: java.lang.String replace(char,char)>(46, 95);

        <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN> = $r73;

        $r75 = <java.lang.System: java.io.PrintStream out>;

        $r74 = new java.lang.StringBuffer;

        specialinvoke $r74.<java.lang.StringBuffer: void <init>()>();

        $r76 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\n\n");

        $r77 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r68);

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".SchemaCompiler  Metadata LOAD:");

        $r79 = <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: java.lang.String METADATA_PACKAGE_LOAD>;

        $r80 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r79);

        $r81 = virtualinvoke $r80.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" GEN:");

        $r82 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r83 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r82);

        $r84 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r75.<java.io.PrintStream: void println(java.lang.String)>($r84);

     label03:
        $r93 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: org.apache.xmlbeans.SchemaCodePrinter getSchemaCodePrinter()>();

        $r94 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.util.List getExtensions()>();

        $r95 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.util.Set getMdefNamespaces()>();

        $r96 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: org.xml.sax.EntityResolver getEntityResolver()>();

        if $r96 != null goto label04;

        $r64 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: java.lang.String getCatalogFile()>();

        $r97 = staticinvoke <org.apache.xmlbeans.impl.common.ResolverUtil: org.xml.sax.EntityResolver resolverForCatalog(java.lang.String)>($r64);

        goto label05;

     label04:
        $r97 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: org.xml.sax.EntityResolver getEntityResolver()>();

     label05:
        r18 = $r97;

        if $r10 == null goto label06;

        if $r11 != null goto label07;

     label06:
        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("src and class gen directories may not be null.");

        throw $r19;

     label07:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if $r1 != null goto label08;

        $r62 = new java.io.File;

        $r63 = staticinvoke <org.apache.xmlbeans.SystemProperties: java.lang.String getProperty(java.lang.String)>("user.dir");

        specialinvoke $r62.<java.io.File: void <init>(java.lang.String)>($r63);

        r91 = $r62;

     label08:
        r98 = null;

        $r20 = new java.util.HashMap;

        specialinvoke $r20.<java.util.HashMap: void <init>()>();

        if $r7 == null goto label09;

        $r61 = new org.apache.xmlbeans.impl.schema.PathResourceLoader;

        specialinvoke $r61.<org.apache.xmlbeans.impl.schema.PathResourceLoader: void <init>(java.io.File[])>($r7);

        r98 = $r61;

     label09:
        z17 = 1;

        z19 = 1;

        z18 = 1;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r23 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/src");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        $r27 = staticinvoke <org.apache.xmlbeans.impl.common.IOUtil: java.io.File createDir(java.io.File,java.lang.String)>($r11, $r26);

        $r28 = new org.apache.xmlbeans.impl.common.XmlErrorWatcher;

        specialinvoke $r28.<org.apache.xmlbeans.impl.common.XmlErrorWatcher: void <init>(java.util.Collection)>($r16);

        $r29 = staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCompiler: org.apache.xmlbeans.SchemaTypeSystem loadTypeSystem(java.lang.String,java.io.File[],java.io.File[],java.net.URL[],java.io.File[],java.io.File[],org.apache.xmlbeans.ResourceLoader,boolean,boolean,boolean,boolean,boolean,boolean,java.util.Set,java.io.File,java.util.Map,java.util.Collection,java.io.File,org.xml.sax.EntityResolver,java.io.File[],java.lang.String)>($r9, $r2, $r3, $r4, $r6, $r5, r98, $z4, $z5, $z6, $z7, $z8, $z9, $r95, r91, $r20, $r28, $r27, r18, $r7, $r13);

        $z11 = virtualinvoke $r28.<org.apache.xmlbeans.impl.common.XmlErrorWatcher: boolean hasError()>();

        if $z11 == 0 goto label10;

        z17 = 0;

        z19 = 0;

        z18 = 0;

     label10:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if $z3 != 0 goto label11;

        $r56 = <java.lang.System: java.io.PrintStream out>;

        $r55 = new java.lang.StringBuffer;

        specialinvoke $r55.<java.lang.StringBuffer: void <init>()>();

        $r57 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Time to build schema type system: ");

        $l8 = $l1 - $l0;

        $d4 = (double) $l8;

        $d5 = $d4 / 1000.0;

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d5);

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" seconds");

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>($r60);

     label11:
        if z19 == 0 goto label25;

        if $r29 == null goto label25;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if $r17 != null goto label12;

        $r99 = null;

        goto label13;

     label12:
        $r99 = new repackage.Repackager;

        specialinvoke $r99.<repackage.Repackager: void <init>(java.lang.String)>($r17);

     label13:
        $r31 = new org.apache.xmlbeans.impl.util.FilerImpl;

        specialinvoke $r31.<org.apache.xmlbeans.impl.util.FilerImpl: void <init>(java.io.File,java.io.File,repackage.Repackager,boolean,boolean)>($r11, $r10, $r99, $z2, $z10);

        $r32 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r32.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        if $r93 == null goto label14;

        virtualinvoke $r32.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSchemaCodePrinter(org.apache.xmlbeans.SchemaCodePrinter)>($r93);

     label14:
        if $r13 == null goto label15;

        virtualinvoke $r32.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setGenerateJavaVersion(java.lang.String)>($r13);

     label15:
        interfaceinvoke $r29.<org.apache.xmlbeans.SchemaTypeSystem: void save(org.apache.xmlbeans.Filer)>($r31);

        $z12 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler: boolean generateTypes(org.apache.xmlbeans.SchemaTypeSystem,org.apache.xmlbeans.Filer,org.apache.xmlbeans.XmlOptions)>($r29, $r31, $r32);

        $z16 = z18 & $z12;

        z17 = $z16;

        if $z10 == 0 goto label16;

        $r53 = new java.util.HashSet;

        $r54 = virtualinvoke $r31.<org.apache.xmlbeans.impl.util.FilerImpl: java.util.List getSourceFiles()>();

        specialinvoke $r53.<java.util.HashSet: void <init>(java.util.Collection)>($r54);

        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCodeGenerator: void deleteObsoleteFiles(java.io.File,java.io.File,java.util.Set)>($r10, $r10, $r53);

     label16:
        if $z16 == 0 goto label17;

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if $z3 != 0 goto label17;

        $r48 = <java.lang.System: java.io.PrintStream out>;

        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Time to generate code: ");

        $l7 = $l6 - $l2;

        $d2 = (double) $l7;

        $d3 = $d2 / 1000.0;

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d3);

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" seconds");

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>($r52);

     label17:
        if $z16 == 0 goto label25;

        if $z0 != 0 goto label25;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r33 = virtualinvoke $r31.<org.apache.xmlbeans.impl.util.FilerImpl: java.util.List getSourceFiles()>();

        if $r5 == null goto label18;

        $r46 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        interfaceinvoke $r33.<java.util.List: boolean addAll(java.util.Collection)>($r46);

     label18:
        $z13 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: boolean externalCompile(java.util.List,java.io.File,java.io.File[],boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>($r33, $r11, $r7, $z1, $r12, $r13, $r14, $r15, $z3, $z2);

        if $z13 != 0 goto label19;

        z17 = 0;

     label19:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if z17 == 0 goto label20;

        $z15 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: boolean isQuiet()>();

        if $z15 != 0 goto label20;

        $r41 = <java.lang.System: java.io.PrintStream out>;

        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Time to compile code: ");

        $l5 = $l4 - $l3;

        $d0 = (double) $l5;

        $d1 = $d0 / 1000.0;

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d1);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" seconds");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r45);

     label20:
        if z17 == 0 goto label25;

        if $r8 == null goto label25;

     label21:
        $r34 = new org.apache.xmlbeans.impl.common.JarHelper;

        specialinvoke $r34.<org.apache.xmlbeans.impl.common.JarHelper: void <init>()>();

        virtualinvoke $r34.<org.apache.xmlbeans.impl.common.JarHelper: void jarDir(java.io.File,java.io.File)>($r11, $r8);

     label22:
        goto label24;

     label23:
        $r85 := @caughtexception;

        $r87 = <java.lang.System: java.io.PrintStream err>;

        $r86 = new java.lang.StringBuffer;

        specialinvoke $r86.<java.lang.StringBuffer: void <init>()>();

        $r88 = virtualinvoke $r86.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("IO Error ");

        $r89 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r85);

        $r90 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r87.<java.io.PrintStream: void println(java.lang.String)>($r90);

        z17 = 0;

     label24:
        if z17 == 0 goto label25;

        $z14 = virtualinvoke r0.<org.apache.xmlbeans.impl.tool.SchemaCompiler$Parameters: boolean isQuiet()>();

        if $z14 != 0 goto label25;

        $r36 = <java.lang.System: java.io.PrintStream out>;

        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Compiled types to: ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r39);

     label25:
        if z17 != 0 goto label26;

        if $z3 != 0 goto label26;

        $r30 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("BUILD FAILED");

        goto label27;

     label26:
        staticinvoke <org.apache.xmlbeans.impl.tool.SchemaCompiler: void runExtensions(java.util.List,org.apache.xmlbeans.SchemaTypeSystem,java.io.File)>($r94, $r29, $r11);

     label27:
        if r98 == null goto label28;

        interfaceinvoke r98.<org.apache.xmlbeans.ResourceLoader: void close()>();

     label28:
        return z17;

        catch java.io.IOException from label21 to label22 with label23;
    }

    private static void runExtensions(java.util.List, org.apache.xmlbeans.SchemaTypeSystem, java.io.File)
    {
        java.lang.InstantiationException $r29;
        boolean $z0, $z1;
        java.lang.IllegalAccessException $r20;
        org.apache.xmlbeans.impl.tool.Extension r41;
        java.util.List r0, $r13;
        org.apache.xmlbeans.SchemaTypeSystem r15;
        org.apache.xmlbeans.impl.tool.SchemaCompilerExtension r42;
        java.util.HashMap $r12;
        java.lang.StringBuffer $r6, $r8, $r10, $r21, $r23, $r26, $r30, $r32, $r35;
        int $i0;
        java.lang.String $r9, $r11, $r18, $r19, $r25, $r27, $r34, $r36, r40;
        java.io.PrintStream $r7, $r22, $r28, $r31, $r37, $r39;
        java.util.Iterator $r1, $r14;
        java.io.IOException $r38;
        java.io.File r2;
        java.lang.Object $r3, $r5, $r16;
        java.lang.Class $r4, $r24, $r33;
        org.apache.xmlbeans.impl.tool.Extension$Param r17;

        r0 := @parameter0: java.util.List;

        r15 := @parameter1: org.apache.xmlbeans.SchemaTypeSystem;

        r2 := @parameter2: java.io.File;

        if r0 == null goto label12;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 <= 0 goto label12;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label01:
        r40 = virtualinvoke r2.<java.io.File: java.lang.String getCanonicalPath()>();

     label02:
        goto label04;

     label03:
        $r38 := @caughtexception;

        $r39 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>("WARNING: Unable to get the path for schema jar file");

        r40 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

     label04:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r41 = (org.apache.xmlbeans.impl.tool.Extension) $r3;

     label05:
        $r4 = virtualinvoke r41.<org.apache.xmlbeans.impl.tool.Extension: java.lang.Class getClassName()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>();

        r42 = (org.apache.xmlbeans.impl.tool.SchemaCompilerExtension) $r5;

     label06:
        goto label09;

     label07:
        $r29 := @caughtexception;

        $r31 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("UNABLE to instantiate schema compiler extension:");

        $r33 = virtualinvoke r41.<org.apache.xmlbeans.impl.tool.Extension: java.lang.Class getClassName()>();

        $r34 = virtualinvoke $r33.<java.lang.Class: java.lang.String getName()>();

        $r35 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r36);

        $r37 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>("EXTENSION Class was not run");

        goto label12;

     label08:
        $r20 := @caughtexception;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ILLEGAL ACCESS Exception when attempting to instantiate schema compiler extension: ");

        $r24 = virtualinvoke r41.<org.apache.xmlbeans.impl.tool.Extension: java.lang.Class getClassName()>();

        $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.String getName()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r27);

        $r28 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>("EXTENSION Class was not run");

        goto label12;

     label09:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Running Extension: ");

        $r9 = interfaceinvoke r42.<org.apache.xmlbeans.impl.tool.SchemaCompilerExtension: java.lang.String getExtensionName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        $r13 = virtualinvoke r41.<org.apache.xmlbeans.impl.tool.Extension: java.util.List getParams()>();

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r16 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.apache.xmlbeans.impl.tool.Extension$Param) $r16;

        $r18 = virtualinvoke r17.<org.apache.xmlbeans.impl.tool.Extension$Param: java.lang.String getName()>();

        $r19 = virtualinvoke r17.<org.apache.xmlbeans.impl.tool.Extension$Param: java.lang.String getValue()>();

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19);

        goto label10;

     label11:
        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("classesDir", r40);

        interfaceinvoke r42.<org.apache.xmlbeans.impl.tool.SchemaCompilerExtension: void schemaCompilerExtension(org.apache.xmlbeans.SchemaTypeSystem,java.util.Map)>(r15, $r12);

        goto label04;

     label12:
        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.InstantiationException from label05 to label06 with label07;
        catch java.lang.IllegalAccessException from label05 to label06 with label08;
    }

    private static boolean wsdlContainsEncoded(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.XmlObject[] $r1;
        int $i0, i1;
        org.apache.xmlbeans.XmlObject r0, $r2;
        java.lang.String $r4, $r5;
        org.apache.xmlbeans.SimpleValue $r3;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.XmlObject;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlObject[] selectPath(java.lang.String)>("declare namespace soap=\'http://schemas.xmlsoap.org/wsdl/soap/\' .//soap:body/@use|.//soap:header/@use|.//soap:fault/@use");

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        $r4 = "encoded";

        $r2 = $r1[i1];

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $r5 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: java.lang.String getStringValue()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.Map $r1;

        <org.apache.xmlbeans.impl.tool.SchemaCompiler: java.lang.String COMPATIBILITY_CONFIG_URI> = "http://www.bea.com/2002/09/xbean/config";

        <org.apache.xmlbeans.impl.tool.SchemaCompiler: java.lang.String CONFIG_URI> = "http://xml.apache.org/xmlbeans/2004/02/xbean/config";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.xmlbeans.impl.tool.SchemaCompiler: java.util.Map MAP_COMPATIBILITY_CONFIG_URIS> = $r0;

        $r1 = <org.apache.xmlbeans.impl.tool.SchemaCompiler: java.util.Map MAP_COMPATIBILITY_CONFIG_URIS>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.bea.com/2002/09/xbean/config", "http://xml.apache.org/xmlbeans/2004/02/xbean/config");

        return;
    }
}
