public class org.gagravarr.flac.FlacInfo extends org.gagravarr.flac.FlacMetadataBlock
{
    private int minimumBlockSize;
    private int maximumBlockSize;
    private int minimumFrameSize;
    private int maximumFrameSize;
    private int sampleRate;
    private int numChannels;
    private int bitsPerSample;
    private long numberOfSamples;
    private byte[] signature;

    public void <init>()
    {
        byte[] $r1;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        specialinvoke r0.<org.gagravarr.flac.FlacMetadataBlock: void <init>(byte)>(0);

        $r1 = newarray (byte)[16];

        r0.<org.gagravarr.flac.FlacInfo: byte[] signature> = $r1;

        return;
    }

    public void <init>(byte[], int)
    {
        byte[] r1, $r3, $r4;
        byte $b0, $b2, $b5, $b7, $b10, $b12, $b14, $b18, $b20, $b22, $b63;
        long $l16, $l24, $l61;
        org.gagravarr.flac.FlacInfo r0;
        int[] r2;
        int $i1, $i3, $i4, $i6, $i8, $i9, $i11, $i13, $i15, $i17, $i19, $i21, $i23, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i62, $i64, i65, i66, i67, i68, i69, i70, i71, i72, i73, i74, i75, i76, i77;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        r1 := @parameter0: byte[];

        i65 := @parameter1: int;

        specialinvoke r0.<org.gagravarr.flac.FlacMetadataBlock: void <init>(byte)>(0);

        i66 = i65 + 1;

        $b0 = r1[i65];

        $i1 = staticinvoke <org.gagravarr.ogg.IOUtils: int toInt(byte)>($b0);

        i67 = i66 + 1;

        $b2 = r1[i66];

        $i3 = staticinvoke <org.gagravarr.ogg.IOUtils: int toInt(byte)>($b2);

        $i4 = staticinvoke <org.gagravarr.ogg.IOUtils: int getIntBE(int,int)>($i1, $i3);

        r0.<org.gagravarr.flac.FlacInfo: int minimumBlockSize> = $i4;

        i68 = i67 + 1;

        $b5 = r1[i67];

        $i6 = staticinvoke <org.gagravarr.ogg.IOUtils: int toInt(byte)>($b5);

        i69 = i68 + 1;

        $b7 = r1[i68];

        $i8 = staticinvoke <org.gagravarr.ogg.IOUtils: int toInt(byte)>($b7);

        $i9 = staticinvoke <org.gagravarr.ogg.IOUtils: int getIntBE(int,int)>($i6, $i8);

        r0.<org.gagravarr.flac.FlacInfo: int maximumBlockSize> = $i9;

        i70 = i69 + 1;

        $b10 = r1[i69];

        $i11 = staticinvoke <org.gagravarr.ogg.IOUtils: int toInt(byte)>($b10);

        i71 = i70 + 1;

        $b12 = r1[i70];

        $i13 = staticinvoke <org.gagravarr.ogg.IOUtils: int toInt(byte)>($b12);

        i72 = i71 + 1;

        $b14 = r1[i71];

        $i15 = staticinvoke <org.gagravarr.ogg.IOUtils: int toInt(byte)>($b14);

        $l16 = staticinvoke <org.gagravarr.ogg.IOUtils: long getIntBE(int,int,int)>($i11, $i13, $i15);

        $i17 = (int) $l16;

        r0.<org.gagravarr.flac.FlacInfo: int minimumFrameSize> = $i17;

        i73 = i72 + 1;

        $b18 = r1[i72];

        $i19 = staticinvoke <org.gagravarr.ogg.IOUtils: int toInt(byte)>($b18);

        i74 = i73 + 1;

        $b20 = r1[i73];

        $i21 = staticinvoke <org.gagravarr.ogg.IOUtils: int toInt(byte)>($b20);

        i75 = i74 + 1;

        $b22 = r1[i74];

        $i23 = staticinvoke <org.gagravarr.ogg.IOUtils: int toInt(byte)>($b22);

        $l24 = staticinvoke <org.gagravarr.ogg.IOUtils: long getIntBE(int,int,int)>($i19, $i21, $i23);

        $i25 = (int) $l24;

        r0.<org.gagravarr.flac.FlacInfo: int maximumFrameSize> = $i25;

        r2 = newarray (int)[8];

        i76 = 0;

     label1:
        if i76 >= 8 goto label2;

        $i62 = i76 + i75;

        $b63 = r1[$i62];

        $i64 = staticinvoke <org.gagravarr.ogg.IOUtils: int toInt(byte)>($b63);

        r2[i76] = $i64;

        i76 = i76 + 1;

        goto label1;

     label2:
        i77 = i75 + 8;

        $i26 = r2[0];

        $i29 = $i26 << 12;

        $i27 = r2[1];

        $i28 = $i27 << 4;

        $i33 = $i29 + $i28;

        $i30 = r2[2];

        $i31 = $i30 & 240;

        $i32 = $i31 >> 4;

        $i34 = $i33 + $i32;

        r0.<org.gagravarr.flac.FlacInfo: int sampleRate> = $i34;

        $i35 = r2[2];

        $i36 = $i35 & 14;

        $i37 = $i36 >> 1;

        $i38 = $i37 + 1;

        r0.<org.gagravarr.flac.FlacInfo: int numChannels> = $i38;

        $i39 = r2[2];

        $i40 = $i39 & 1;

        $i44 = $i40 << 4;

        $i41 = r2[3];

        $i42 = $i41 & 240;

        $i43 = $i42 >> 4;

        $i45 = $i44 + $i43;

        $i46 = $i45 + 1;

        r0.<org.gagravarr.flac.FlacInfo: int bitsPerSample> = $i46;

        $i47 = r2[3];

        $i48 = $i47 & 15;

        $i51 = $i48 << 30;

        $i49 = r2[4];

        $i50 = $i49 << 24;

        $i54 = $i51 + $i50;

        $i52 = r2[5];

        $i53 = $i52 << 16;

        $i57 = $i54 + $i53;

        $i55 = r2[6];

        $i56 = $i55 << 8;

        $i59 = $i57 + $i56;

        $i58 = r2[7];

        $i60 = $i59 + $i58;

        $l61 = (long) $i60;

        r0.<org.gagravarr.flac.FlacInfo: long numberOfSamples> = $l61;

        $r3 = newarray (byte)[16];

        r0.<org.gagravarr.flac.FlacInfo: byte[] signature> = $r3;

        $r4 = r0.<org.gagravarr.flac.FlacInfo: byte[] signature>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i77, $r4, 0, 16);

        return;
    }

    protected void write(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] $r2, $r3;
        long $l3, $l5;
        org.gagravarr.flac.FlacInfo r1;
        int $i0, $i1, $i2, $i4;

        r1 := @this: org.gagravarr.flac.FlacInfo;

        r0 := @parameter0: java.io.OutputStream;

        $i0 = r1.<org.gagravarr.flac.FlacInfo: int minimumBlockSize>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void writeInt2BE(java.io.OutputStream,int)>(r0, $i0);

        $i1 = r1.<org.gagravarr.flac.FlacInfo: int maximumBlockSize>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void writeInt2BE(java.io.OutputStream,int)>(r0, $i1);

        $i2 = r1.<org.gagravarr.flac.FlacInfo: int minimumFrameSize>;

        $l3 = (long) $i2;

        staticinvoke <org.gagravarr.ogg.IOUtils: void writeInt3BE(java.io.OutputStream,long)>(r0, $l3);

        $i4 = r1.<org.gagravarr.flac.FlacInfo: int maximumFrameSize>;

        $l5 = (long) $i4;

        staticinvoke <org.gagravarr.ogg.IOUtils: void writeInt3BE(java.io.OutputStream,long)>(r0, $l5);

        $r2 = newarray (byte)[8];

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        $r3 = r1.<org.gagravarr.flac.FlacInfo: byte[] signature>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r3);

        return;
    }

    public int getMinimumBlockSize()
    {
        int $i0;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        $i0 = r0.<org.gagravarr.flac.FlacInfo: int minimumBlockSize>;

        return $i0;
    }

    public void setMinimumBlockSize(int)
    {
        int i0;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        i0 := @parameter0: int;

        r0.<org.gagravarr.flac.FlacInfo: int minimumBlockSize> = i0;

        return;
    }

    public int getMaximumBlockSize()
    {
        int $i0;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        $i0 = r0.<org.gagravarr.flac.FlacInfo: int maximumBlockSize>;

        return $i0;
    }

    public void setMaximumBlockSize(int)
    {
        int i0;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        i0 := @parameter0: int;

        r0.<org.gagravarr.flac.FlacInfo: int maximumBlockSize> = i0;

        return;
    }

    public int getMinimumFrameSize()
    {
        int $i0;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        $i0 = r0.<org.gagravarr.flac.FlacInfo: int minimumFrameSize>;

        return $i0;
    }

    public void setMinimumFrameSize(int)
    {
        int i0;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        i0 := @parameter0: int;

        r0.<org.gagravarr.flac.FlacInfo: int minimumFrameSize> = i0;

        return;
    }

    public int getMaximumFrameSize()
    {
        int $i0;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        $i0 = r0.<org.gagravarr.flac.FlacInfo: int maximumFrameSize>;

        return $i0;
    }

    public void setMaximumFrameSize(int)
    {
        int i0;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        i0 := @parameter0: int;

        r0.<org.gagravarr.flac.FlacInfo: int maximumFrameSize> = i0;

        return;
    }

    public int getSampleRate()
    {
        int $i0;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        $i0 = r0.<org.gagravarr.flac.FlacInfo: int sampleRate>;

        return $i0;
    }

    public void setSampleRate(int)
    {
        int i0;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        i0 := @parameter0: int;

        r0.<org.gagravarr.flac.FlacInfo: int sampleRate> = i0;

        return;
    }

    public int getNumChannels()
    {
        int $i0;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        $i0 = r0.<org.gagravarr.flac.FlacInfo: int numChannels>;

        return $i0;
    }

    public void setNumChannels(int)
    {
        int i0;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        i0 := @parameter0: int;

        r0.<org.gagravarr.flac.FlacInfo: int numChannels> = i0;

        return;
    }

    public int getBitsPerSample()
    {
        int $i0;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        $i0 = r0.<org.gagravarr.flac.FlacInfo: int bitsPerSample>;

        return $i0;
    }

    public void setBitsPerSample(int)
    {
        int i0;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        i0 := @parameter0: int;

        r0.<org.gagravarr.flac.FlacInfo: int bitsPerSample> = i0;

        return;
    }

    public long getNumberOfSamples()
    {
        long $l0;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        $l0 = r0.<org.gagravarr.flac.FlacInfo: long numberOfSamples>;

        return $l0;
    }

    public void setNumberOfSamples(long)
    {
        long l0;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        l0 := @parameter0: long;

        r0.<org.gagravarr.flac.FlacInfo: long numberOfSamples> = l0;

        return;
    }

    public byte[] getSignature()
    {
        byte[] $r1;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        $r1 = r0.<org.gagravarr.flac.FlacInfo: byte[] signature>;

        return $r1;
    }

    public void setSignature(byte[])
    {
        byte[] r1;
        org.gagravarr.flac.FlacInfo r0;

        r0 := @this: org.gagravarr.flac.FlacInfo;

        r1 := @parameter0: byte[];

        r0.<org.gagravarr.flac.FlacInfo: byte[] signature> = r1;

        return;
    }
}
