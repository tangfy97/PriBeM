public class org.springframework.remoting.jaxws.LocalJaxWsServiceFactory extends java.lang.Object
{
    private java.net.URL wsdlDocumentUrl;
    private java.lang.String namespaceUri;
    private java.lang.String serviceName;
    private java.util.concurrent.Executor executor;
    private javax.xml.ws.handler.HandlerResolver handlerResolver;

    public void <init>()
    {
        org.springframework.remoting.jaxws.LocalJaxWsServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxws.LocalJaxWsServiceFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setWsdlDocumentUrl(java.net.URL)
    {
        org.springframework.remoting.jaxws.LocalJaxWsServiceFactory r0;
        java.net.URL r1;

        r0 := @this: org.springframework.remoting.jaxws.LocalJaxWsServiceFactory;

        r1 := @parameter0: java.net.URL;

        r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.net.URL wsdlDocumentUrl> = r1;

        return;
    }

    public java.net.URL getWsdlDocumentUrl()
    {
        org.springframework.remoting.jaxws.LocalJaxWsServiceFactory r0;
        java.net.URL $r1;

        r0 := @this: org.springframework.remoting.jaxws.LocalJaxWsServiceFactory;

        $r1 = r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.net.URL wsdlDocumentUrl>;

        return $r1;
    }

    public void setNamespaceUri(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.springframework.remoting.jaxws.LocalJaxWsServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxws.LocalJaxWsServiceFactory;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.lang.String namespaceUri> = $r2;

        return;
    }

    public java.lang.String getNamespaceUri()
    {
        java.lang.String $r1;
        org.springframework.remoting.jaxws.LocalJaxWsServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxws.LocalJaxWsServiceFactory;

        $r1 = r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.lang.String namespaceUri>;

        return $r1;
    }

    public void setServiceName(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.remoting.jaxws.LocalJaxWsServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxws.LocalJaxWsServiceFactory;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.lang.String serviceName> = r1;

        return;
    }

    public java.lang.String getServiceName()
    {
        java.lang.String $r1;
        org.springframework.remoting.jaxws.LocalJaxWsServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxws.LocalJaxWsServiceFactory;

        $r1 = r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.lang.String serviceName>;

        return $r1;
    }

    public void setExecutor(java.util.concurrent.Executor)
    {
        org.springframework.remoting.jaxws.LocalJaxWsServiceFactory r0;
        java.util.concurrent.Executor r1;

        r0 := @this: org.springframework.remoting.jaxws.LocalJaxWsServiceFactory;

        r1 := @parameter0: java.util.concurrent.Executor;

        r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.util.concurrent.Executor executor> = r1;

        return;
    }

    public void setHandlerResolver(javax.xml.ws.handler.HandlerResolver)
    {
        javax.xml.ws.handler.HandlerResolver r1;
        org.springframework.remoting.jaxws.LocalJaxWsServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxws.LocalJaxWsServiceFactory;

        r1 := @parameter0: javax.xml.ws.handler.HandlerResolver;

        r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: javax.xml.ws.handler.HandlerResolver handlerResolver> = r1;

        return;
    }

    public javax.xml.ws.Service createJaxWsService()
    {
        java.util.concurrent.Executor $r6, $r9;
        java.net.URL $r2, $r11;
        javax.xml.ws.Service r5, $r13;
        javax.xml.ws.handler.HandlerResolver $r7, $r8;
        org.springframework.remoting.jaxws.LocalJaxWsServiceFactory r0;
        java.lang.String $r1, $r3, $r10;
        javax.xml.namespace.QName $r4, $r12;

        r0 := @this: org.springframework.remoting.jaxws.LocalJaxWsServiceFactory;

        $r1 = r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.lang.String serviceName>;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>($r1, "No service name specified");

        $r2 = r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.net.URL wsdlDocumentUrl>;

        if $r2 == null goto label1;

        $r11 = r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.net.URL wsdlDocumentUrl>;

        $r10 = r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.lang.String serviceName>;

        $r12 = virtualinvoke r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: javax.xml.namespace.QName getQName(java.lang.String)>($r10);

        $r13 = staticinvoke <javax.xml.ws.Service: javax.xml.ws.Service create(java.net.URL,javax.xml.namespace.QName)>($r11, $r12);

        goto label2;

     label1:
        $r3 = r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.lang.String serviceName>;

        $r4 = virtualinvoke r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: javax.xml.namespace.QName getQName(java.lang.String)>($r3);

        $r13 = staticinvoke <javax.xml.ws.Service: javax.xml.ws.Service create(javax.xml.namespace.QName)>($r4);

     label2:
        r5 = $r13;

        $r6 = r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.util.concurrent.Executor executor>;

        if $r6 == null goto label3;

        $r9 = r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.util.concurrent.Executor executor>;

        virtualinvoke $r13.<javax.xml.ws.Service: void setExecutor(java.util.concurrent.Executor)>($r9);

     label3:
        $r7 = r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: javax.xml.ws.handler.HandlerResolver handlerResolver>;

        if $r7 == null goto label4;

        $r8 = r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: javax.xml.ws.handler.HandlerResolver handlerResolver>;

        virtualinvoke r5.<javax.xml.ws.Service: void setHandlerResolver(javax.xml.ws.handler.HandlerResolver)>($r8);

     label4:
        return r5;
    }

    protected javax.xml.namespace.QName getQName(java.lang.String)
    {
        java.lang.String $r1, r2, $r3;
        javax.xml.namespace.QName $r4;
        org.springframework.remoting.jaxws.LocalJaxWsServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxws.LocalJaxWsServiceFactory;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.lang.String getNamespaceUri()>();

        if $r1 == null goto label1;

        $r4 = new javax.xml.namespace.QName;

        $r3 = virtualinvoke r0.<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.lang.String getNamespaceUri()>();

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r3, r2);

        goto label2;

     label1:
        $r4 = new javax.xml.namespace.QName;

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String)>(r2);

     label2:
        return $r4;
    }
}
