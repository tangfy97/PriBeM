public class javax.activation.CommandInfo extends java.lang.Object
{
    private final java.lang.String commandName;
    private final java.lang.String commandClass;

    public void <init>(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        javax.activation.CommandInfo r0;

        r0 := @this: javax.activation.CommandInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javax.activation.CommandInfo: java.lang.String commandName> = r1;

        r0.<javax.activation.CommandInfo: java.lang.String commandClass> = r2;

        return;
    }

    public java.lang.String getCommandName()
    {
        java.lang.String $r1;
        javax.activation.CommandInfo r0;

        r0 := @this: javax.activation.CommandInfo;

        $r1 = r0.<javax.activation.CommandInfo: java.lang.String commandName>;

        return $r1;
    }

    public java.lang.String getCommandClass()
    {
        java.lang.String $r1;
        javax.activation.CommandInfo r0;

        r0 := @this: javax.activation.CommandInfo;

        $r1 = r0.<javax.activation.CommandInfo: java.lang.String commandClass>;

        return $r1;
    }

    public java.lang.Object getCommandObject(javax.activation.DataHandler, java.lang.ClassLoader) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.Externalizable $r6;
        java.io.ObjectInputStream $r5;
        javax.activation.DataHandler r4;
        javax.activation.CommandObject $r9;
        javax.activation.CommandInfo r1;
        java.lang.Object $r3;
        java.lang.ClassLoader r0;
        java.lang.String $r2, $r8;
        boolean $z0, $z1;
        java.io.InputStream $r7;

        r1 := @this: javax.activation.CommandInfo;

        r4 := @parameter0: javax.activation.DataHandler;

        r0 := @parameter1: java.lang.ClassLoader;

        $r2 = r1.<javax.activation.CommandInfo: java.lang.String commandClass>;

        $r3 = staticinvoke <java.beans.Beans: java.lang.Object instantiate(java.lang.ClassLoader,java.lang.String)>(r0, $r2);

        $z0 = $r3 instanceof javax.activation.CommandObject;

        if $z0 == 0 goto label1;

        $r9 = (javax.activation.CommandObject) $r3;

        $r8 = r1.<javax.activation.CommandInfo: java.lang.String commandName>;

        interfaceinvoke $r9.<javax.activation.CommandObject: void setCommandContext(java.lang.String,javax.activation.DataHandler)>($r8, r4);

        goto label2;

     label1:
        $z1 = $r3 instanceof java.io.Externalizable;

        if $z1 == 0 goto label2;

        if r4 == null goto label2;

        $r6 = (java.io.Externalizable) $r3;

        $r5 = new java.io.ObjectInputStream;

        $r7 = virtualinvoke r4.<javax.activation.DataHandler: java.io.InputStream getInputStream()>();

        specialinvoke $r5.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r7);

        interfaceinvoke $r6.<java.io.Externalizable: void readExternal(java.io.ObjectInput)>($r5);

     label2:
        return $r3;
    }
}
