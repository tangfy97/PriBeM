class groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document$3 extends groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document$OutputSink
{
    private final groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document this$0;

    void <init>(groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document, java.lang.String)
    {
        java.lang.String r2;
        groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document r1;
        groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document$3 r0;

        r0 := @this: groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document$3;

        r1 := @parameter0: groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document;

        r2 := @parameter1: java.lang.String;

        r0.<groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document$3: groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document this$0> = r1;

        specialinvoke r0.<groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document$OutputSink: void <init>(groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document,java.lang.String)>(r1, r2);

        return;
    }

    public java.lang.Object leftShift(java.lang.Object)
    {
        java.lang.Object r1, $r2;
        groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document$3 r0;

        r0 := @this: groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<groovy.xml.streamingmarkupsupport.BaseMarkupBuilder$Document$3: java.lang.Object leftShift(java.lang.String,java.lang.Object)>("declareNamespace", r1);

        return $r2;
    }
}
