public class org.codehaus.groovy.ast.stmt.SwitchStatement extends org.codehaus.groovy.ast.stmt.Statement
{
    private org.codehaus.groovy.ast.expr.Expression expression;
    private java.util.List caseStatements;
    private org.codehaus.groovy.ast.stmt.Statement defaultStatement;

    public void <init>(org.codehaus.groovy.ast.expr.Expression)
    {
        org.codehaus.groovy.ast.stmt.EmptyStatement $r2;
        org.codehaus.groovy.ast.stmt.SwitchStatement r0;
        org.codehaus.groovy.ast.expr.Expression r1;

        r0 := @this: org.codehaus.groovy.ast.stmt.SwitchStatement;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        $r2 = <org.codehaus.groovy.ast.stmt.EmptyStatement: org.codehaus.groovy.ast.stmt.EmptyStatement INSTANCE>;

        specialinvoke r0.<org.codehaus.groovy.ast.stmt.SwitchStatement: void <init>(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.stmt.Statement)>(r1, $r2);

        return;
    }

    public void <init>(org.codehaus.groovy.ast.expr.Expression, org.codehaus.groovy.ast.stmt.Statement)
    {
        org.codehaus.groovy.ast.stmt.Statement r3;
        org.codehaus.groovy.ast.stmt.SwitchStatement r0;
        org.codehaus.groovy.ast.expr.Expression r2;
        java.util.ArrayList $r1;

        r0 := @this: org.codehaus.groovy.ast.stmt.SwitchStatement;

        r2 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        r3 := @parameter1: org.codehaus.groovy.ast.stmt.Statement;

        specialinvoke r0.<org.codehaus.groovy.ast.stmt.Statement: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.ast.stmt.SwitchStatement: java.util.List caseStatements> = $r1;

        r0.<org.codehaus.groovy.ast.stmt.SwitchStatement: org.codehaus.groovy.ast.expr.Expression expression> = r2;

        r0.<org.codehaus.groovy.ast.stmt.SwitchStatement: org.codehaus.groovy.ast.stmt.Statement defaultStatement> = r3;

        return;
    }

    public void <init>(org.codehaus.groovy.ast.expr.Expression, java.util.List, org.codehaus.groovy.ast.stmt.Statement)
    {
        org.codehaus.groovy.ast.stmt.Statement r4;
        org.codehaus.groovy.ast.stmt.SwitchStatement r0;
        java.util.List r3;
        org.codehaus.groovy.ast.expr.Expression r2;
        java.util.ArrayList $r1;

        r0 := @this: org.codehaus.groovy.ast.stmt.SwitchStatement;

        r2 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: org.codehaus.groovy.ast.stmt.Statement;

        specialinvoke r0.<org.codehaus.groovy.ast.stmt.Statement: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.ast.stmt.SwitchStatement: java.util.List caseStatements> = $r1;

        r0.<org.codehaus.groovy.ast.stmt.SwitchStatement: org.codehaus.groovy.ast.expr.Expression expression> = r2;

        r0.<org.codehaus.groovy.ast.stmt.SwitchStatement: java.util.List caseStatements> = r3;

        r0.<org.codehaus.groovy.ast.stmt.SwitchStatement: org.codehaus.groovy.ast.stmt.Statement defaultStatement> = r4;

        return;
    }

    public void visit(org.codehaus.groovy.ast.GroovyCodeVisitor)
    {
        org.codehaus.groovy.ast.stmt.SwitchStatement r1;
        org.codehaus.groovy.ast.GroovyCodeVisitor r0;

        r1 := @this: org.codehaus.groovy.ast.stmt.SwitchStatement;

        r0 := @parameter0: org.codehaus.groovy.ast.GroovyCodeVisitor;

        interfaceinvoke r0.<org.codehaus.groovy.ast.GroovyCodeVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>(r1);

        return;
    }

    public java.util.List getCaseStatements()
    {
        org.codehaus.groovy.ast.stmt.SwitchStatement r0;
        java.util.List $r1;

        r0 := @this: org.codehaus.groovy.ast.stmt.SwitchStatement;

        $r1 = r0.<org.codehaus.groovy.ast.stmt.SwitchStatement: java.util.List caseStatements>;

        return $r1;
    }

    public org.codehaus.groovy.ast.expr.Expression getExpression()
    {
        org.codehaus.groovy.ast.stmt.SwitchStatement r0;
        org.codehaus.groovy.ast.expr.Expression $r1;

        r0 := @this: org.codehaus.groovy.ast.stmt.SwitchStatement;

        $r1 = r0.<org.codehaus.groovy.ast.stmt.SwitchStatement: org.codehaus.groovy.ast.expr.Expression expression>;

        return $r1;
    }

    public void setExpression(org.codehaus.groovy.ast.expr.Expression)
    {
        org.codehaus.groovy.ast.stmt.SwitchStatement r0;
        org.codehaus.groovy.ast.expr.Expression r1;

        r0 := @this: org.codehaus.groovy.ast.stmt.SwitchStatement;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        r0.<org.codehaus.groovy.ast.stmt.SwitchStatement: org.codehaus.groovy.ast.expr.Expression expression> = r1;

        return;
    }

    public org.codehaus.groovy.ast.stmt.Statement getDefaultStatement()
    {
        org.codehaus.groovy.ast.stmt.Statement $r1;
        org.codehaus.groovy.ast.stmt.SwitchStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.SwitchStatement;

        $r1 = r0.<org.codehaus.groovy.ast.stmt.SwitchStatement: org.codehaus.groovy.ast.stmt.Statement defaultStatement>;

        return $r1;
    }

    public void setDefaultStatement(org.codehaus.groovy.ast.stmt.Statement)
    {
        org.codehaus.groovy.ast.stmt.Statement r1;
        org.codehaus.groovy.ast.stmt.SwitchStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.SwitchStatement;

        r1 := @parameter0: org.codehaus.groovy.ast.stmt.Statement;

        r0.<org.codehaus.groovy.ast.stmt.SwitchStatement: org.codehaus.groovy.ast.stmt.Statement defaultStatement> = r1;

        return;
    }

    public void addCase(org.codehaus.groovy.ast.stmt.CaseStatement)
    {
        org.codehaus.groovy.ast.stmt.SwitchStatement r0;
        org.codehaus.groovy.ast.stmt.CaseStatement r1;
        java.util.List $r2;

        r0 := @this: org.codehaus.groovy.ast.stmt.SwitchStatement;

        r1 := @parameter0: org.codehaus.groovy.ast.stmt.CaseStatement;

        $r2 = r0.<org.codehaus.groovy.ast.stmt.SwitchStatement: java.util.List caseStatements>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public org.codehaus.groovy.ast.stmt.CaseStatement getCaseStatement(int)
    {
        org.codehaus.groovy.ast.stmt.SwitchStatement r0;
        java.util.List $r1, $r2;
        int i0, $i1;
        org.codehaus.groovy.ast.stmt.CaseStatement $r4;
        java.lang.Object $r3;

        r0 := @this: org.codehaus.groovy.ast.stmt.SwitchStatement;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.codehaus.groovy.ast.stmt.SwitchStatement: java.util.List caseStatements>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label1;

        $r2 = r0.<org.codehaus.groovy.ast.stmt.SwitchStatement: java.util.List caseStatements>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (org.codehaus.groovy.ast.stmt.CaseStatement) $r3;

        return $r4;

     label1:
        return null;
    }
}
