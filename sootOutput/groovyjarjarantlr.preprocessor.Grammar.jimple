class groovyjarjarantlr.preprocessor.Grammar extends java.lang.Object
{
    protected java.lang.String name;
    protected java.lang.String fileName;
    protected java.lang.String superGrammar;
    protected java.lang.String type;
    protected groovyjarjarantlr.collections.impl.IndexedVector rules;
    protected groovyjarjarantlr.collections.impl.IndexedVector options;
    protected java.lang.String tokenSection;
    protected java.lang.String preambleAction;
    protected java.lang.String memberAction;
    protected groovyjarjarantlr.preprocessor.Hierarchy hier;
    protected boolean predefined;
    protected boolean alreadyExpanded;
    protected boolean specifiedVocabulary;
    protected java.lang.String superClass;
    protected java.lang.String importVocab;
    protected java.lang.String exportVocab;
    protected groovyjarjarantlr.Tool antlrTool;

    public void <init>(groovyjarjarantlr.Tool, java.lang.String, java.lang.String, groovyjarjarantlr.collections.impl.IndexedVector)
    {
        groovyjarjarantlr.Tool r4;
        groovyjarjarantlr.collections.impl.IndexedVector r3;
        groovyjarjarantlr.preprocessor.Grammar r0;
        java.lang.String r1, r2;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        r4 := @parameter0: groovyjarjarantlr.Tool;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: groovyjarjarantlr.collections.impl.IndexedVector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovyjarjarantlr.preprocessor.Grammar: boolean predefined> = 0;

        r0.<groovyjarjarantlr.preprocessor.Grammar: boolean alreadyExpanded> = 0;

        r0.<groovyjarjarantlr.preprocessor.Grammar: boolean specifiedVocabulary> = 0;

        r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String superClass> = null;

        r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String importVocab> = null;

        r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String exportVocab> = null;

        r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String name> = r1;

        r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String superGrammar> = r2;

        r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector rules> = r3;

        r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.Tool antlrTool> = r4;

        return;
    }

    public void addOption(groovyjarjarantlr.preprocessor.Option)
    {
        groovyjarjarantlr.preprocessor.Option r2;
        groovyjarjarantlr.collections.impl.IndexedVector $r1, $r3, $r5;
        groovyjarjarantlr.preprocessor.Grammar r0;
        java.lang.String $r4;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        r2 := @parameter0: groovyjarjarantlr.preprocessor.Option;

        $r1 = r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector options>;

        if $r1 != null goto label1;

        $r5 = new groovyjarjarantlr.collections.impl.IndexedVector;

        specialinvoke $r5.<groovyjarjarantlr.collections.impl.IndexedVector: void <init>()>();

        r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector options> = $r5;

     label1:
        $r3 = r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector options>;

        $r4 = virtualinvoke r2.<groovyjarjarantlr.preprocessor.Option: java.lang.String getName()>();

        virtualinvoke $r3.<groovyjarjarantlr.collections.impl.IndexedVector: void appendElement(java.lang.Object,java.lang.Object)>($r4, r2);

        return;
    }

    public void addRule(groovyjarjarantlr.preprocessor.Rule)
    {
        groovyjarjarantlr.preprocessor.Rule r1;
        groovyjarjarantlr.collections.impl.IndexedVector $r2;
        groovyjarjarantlr.preprocessor.Grammar r0;
        java.lang.String $r3;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        r1 := @parameter0: groovyjarjarantlr.preprocessor.Rule;

        $r2 = r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector rules>;

        $r3 = virtualinvoke r1.<groovyjarjarantlr.preprocessor.Rule: java.lang.String getName()>();

        virtualinvoke $r2.<groovyjarjarantlr.collections.impl.IndexedVector: void appendElement(java.lang.Object,java.lang.Object)>($r3, r1);

        return;
    }

    public void expandInPlace()
    {
        java.util.Enumeration $r7, $r39;
        boolean $z0, $z1, $z2, $z3, $z4;
        groovyjarjarantlr.preprocessor.GrammarFile $r5;
        groovyjarjarantlr.preprocessor.Option $r11, r50;
        groovyjarjarantlr.collections.impl.IndexedVector $r6, $r8, $r9, $r10, $r37;
        groovyjarjarantlr.preprocessor.Grammar r0, $r1;
        groovyjarjarantlr.Tool $r18, $r29, $r36, $r45;
        java.lang.StringBuffer $r12, $r14, $r15, $r20, $r21, $r23, $r25, $r27, $r31, $r32, $r34, $r44, $r46, $r47;
        java.lang.String $r2, $r4, $r13, $r16, $r17, $r19, $r22, $r24, $r26, $r28, $r30, $r33, $r35, $r42, $r48, $r51;
        groovyjarjarantlr.preprocessor.Hierarchy $r3;
        java.io.IOException $r43;
        groovyjarjarantlr.preprocessor.Rule r49;
        java.lang.Object $r38, $r40, $r41;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        $z0 = r0.<groovyjarjarantlr.preprocessor.Grammar: boolean alreadyExpanded>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.preprocessor.Grammar getSuperGrammar()>();

        if $r1 != null goto label02;

        return;

     label02:
        $r2 = r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String exportVocab>;

        if $r2 != null goto label03;

        $r42 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getName()>();

        r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String exportVocab> = $r42;

     label03:
        $z1 = virtualinvoke $r1.<groovyjarjarantlr.preprocessor.Grammar: boolean isPredefined()>();

        if $z1 == 0 goto label04;

        return;

     label04:
        virtualinvoke $r1.<groovyjarjarantlr.preprocessor.Grammar: void expandInPlace()>();

        r0.<groovyjarjarantlr.preprocessor.Grammar: boolean alreadyExpanded> = 1;

        $r3 = r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.preprocessor.Hierarchy hier>;

        $r4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getFileName()>();

        $r5 = virtualinvoke $r3.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.GrammarFile getFile(java.lang.String)>($r4);

        virtualinvoke $r5.<groovyjarjarantlr.preprocessor.GrammarFile: void setExpanded(boolean)>(1);

        $r6 = virtualinvoke $r1.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector getRules()>();

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.collections.impl.IndexedVector: java.util.Enumeration elements()>();

     label05:
        $z2 = interfaceinvoke $r7.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 == 0 goto label06;

        $r41 = interfaceinvoke $r7.<java.util.Enumeration: java.lang.Object nextElement()>();

        r49 = (groovyjarjarantlr.preprocessor.Rule) $r41;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.Grammar: void inherit(groovyjarjarantlr.preprocessor.Rule,groovyjarjarantlr.preprocessor.Grammar)>(r49, $r1);

        goto label05;

     label06:
        $r8 = virtualinvoke $r1.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector getOptions()>();

        if $r8 == null goto label08;

        $r39 = virtualinvoke $r8.<groovyjarjarantlr.collections.impl.IndexedVector: java.util.Enumeration elements()>();

     label07:
        $z4 = interfaceinvoke $r39.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z4 == 0 goto label08;

        $r40 = interfaceinvoke $r39.<java.util.Enumeration: java.lang.Object nextElement()>();

        r50 = (groovyjarjarantlr.preprocessor.Option) $r40;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.Grammar: void inherit(groovyjarjarantlr.preprocessor.Option,groovyjarjarantlr.preprocessor.Grammar)>(r50, $r1);

        goto label07;

     label08:
        $r9 = r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector options>;

        if $r9 == null goto label09;

        $r37 = r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector options>;

        $r38 = virtualinvoke $r37.<groovyjarjarantlr.collections.impl.IndexedVector: java.lang.Object getElement(java.lang.Object)>("importVocab");

        if $r38 == null goto label10;

     label09:
        $r10 = r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector options>;

        if $r10 != null goto label14;

     label10:
        $r11 = new groovyjarjarantlr.preprocessor.Option;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = $r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String exportVocab>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<groovyjarjarantlr.preprocessor.Option: void <init>(java.lang.String,java.lang.String,groovyjarjarantlr.preprocessor.Grammar)>("importVocab", $r16, r0);

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.Grammar: void addOption(groovyjarjarantlr.preprocessor.Option)>($r11);

        $r17 = virtualinvoke $r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getFileName()>();

        $r18 = r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.Tool antlrTool>;

        $r19 = virtualinvoke $r18.<groovyjarjarantlr.Tool: java.lang.String pathToFile(java.lang.String)>($r17);

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r22 = $r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String exportVocab>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = <groovyjarjarantlr.CodeGenerator: java.lang.String TokenTypesFileSuffix>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = <groovyjarjarantlr.CodeGenerator: java.lang.String TokenTypesFileExt>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        $r29 = r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.Tool antlrTool>;

        $r30 = virtualinvoke $r29.<groovyjarjarantlr.Tool: java.lang.String fileMinusPath(java.lang.String)>($r28);

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r33 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.separator");

        $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        $z3 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z3 == 0 goto label11;

        goto label14;

     label11:
        $r36 = r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r36.<groovyjarjarantlr.Tool: void copyFile(java.lang.String,java.lang.String)>($r28, $r30);

     label12:
        goto label14;

     label13:
        $r43 := @caughtexception;

        $r45 = r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.Tool antlrTool>;

        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cannot find/copy importVocab file ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r45.<groovyjarjarantlr.Tool: void toolError(java.lang.String)>($r48);

        return;

     label14:
        $r51 = $r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String memberAction>;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.Grammar: void inherit(java.lang.String,groovyjarjarantlr.preprocessor.Grammar)>($r51, $r1);

        return;

        catch java.io.IOException from label11 to label12 with label13;
    }

    public java.lang.String getFileName()
    {
        groovyjarjarantlr.preprocessor.Grammar r0;
        java.lang.String $r1;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        $r1 = r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String fileName>;

        return $r1;
    }

    public java.lang.String getName()
    {
        groovyjarjarantlr.preprocessor.Grammar r0;
        java.lang.String $r1;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        $r1 = r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String name>;

        return $r1;
    }

    public groovyjarjarantlr.collections.impl.IndexedVector getOptions()
    {
        groovyjarjarantlr.collections.impl.IndexedVector $r1;
        groovyjarjarantlr.preprocessor.Grammar r0;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        $r1 = r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector options>;

        return $r1;
    }

    public groovyjarjarantlr.collections.impl.IndexedVector getRules()
    {
        groovyjarjarantlr.collections.impl.IndexedVector $r1;
        groovyjarjarantlr.preprocessor.Grammar r0;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        $r1 = r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector rules>;

        return $r1;
    }

    public groovyjarjarantlr.preprocessor.Grammar getSuperGrammar()
    {
        groovyjarjarantlr.preprocessor.Grammar r0, $r4;
        java.lang.String $r1, $r2;
        groovyjarjarantlr.preprocessor.Hierarchy $r3;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        $r1 = r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String superGrammar>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.preprocessor.Hierarchy hier>;

        $r2 = r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String superGrammar>;

        $r4 = virtualinvoke $r3.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar getGrammar(java.lang.String)>($r2);

        return $r4;
    }

    public java.lang.String getSuperGrammarName()
    {
        groovyjarjarantlr.preprocessor.Grammar r0;
        java.lang.String $r1;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        $r1 = r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String superGrammar>;

        return $r1;
    }

    public java.lang.String getType()
    {
        groovyjarjarantlr.preprocessor.Grammar r0;
        java.lang.String $r1;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        $r1 = r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String type>;

        return $r1;
    }

    public void inherit(groovyjarjarantlr.preprocessor.Option, groovyjarjarantlr.preprocessor.Grammar)
    {
        groovyjarjarantlr.preprocessor.Option r0, r9;
        groovyjarjarantlr.collections.impl.IndexedVector $r4, $r5;
        java.lang.Object $r7;
        java.lang.String $r1, $r2, $r6;
        groovyjarjarantlr.preprocessor.Grammar r3, r8;
        boolean $z0, $z1;

        r3 := @this: groovyjarjarantlr.preprocessor.Grammar;

        r0 := @parameter0: groovyjarjarantlr.preprocessor.Option;

        r8 := @parameter1: groovyjarjarantlr.preprocessor.Grammar;

        $r1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.Option: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("importVocab");

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.Option: java.lang.String getName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("exportVocab");

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        r9 = null;

        $r4 = r3.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector options>;

        if $r4 == null goto label3;

        $r5 = r3.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector options>;

        $r6 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.Option: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<groovyjarjarantlr.collections.impl.IndexedVector: java.lang.Object getElement(java.lang.Object)>($r6);

        r9 = (groovyjarjarantlr.preprocessor.Option) $r7;

     label3:
        if r9 != null goto label4;

        virtualinvoke r3.<groovyjarjarantlr.preprocessor.Grammar: void addOption(groovyjarjarantlr.preprocessor.Option)>(r0);

     label4:
        return;
    }

    public void inherit(groovyjarjarantlr.preprocessor.Rule, groovyjarjarantlr.preprocessor.Grammar)
    {
        groovyjarjarantlr.Tool $r7;
        java.lang.StringBuffer $r6, $r8, $r10, $r11, $r13, $r14, $r17, $r18, $r20;
        java.lang.String $r3, $r9, $r12, $r16, $r19, $r21;
        boolean $z0;
        groovyjarjarantlr.preprocessor.Rule r1, r5;
        groovyjarjarantlr.collections.impl.IndexedVector $r2;
        java.lang.Object $r4;
        groovyjarjarantlr.preprocessor.Grammar r0, r15;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        r1 := @parameter0: groovyjarjarantlr.preprocessor.Rule;

        r15 := @parameter1: groovyjarjarantlr.preprocessor.Grammar;

        $r2 = r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector rules>;

        $r3 = virtualinvoke r1.<groovyjarjarantlr.preprocessor.Rule: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.IndexedVector: java.lang.Object getElement(java.lang.Object)>($r3);

        r5 = (groovyjarjarantlr.preprocessor.Rule) $r4;

        if r5 == null goto label1;

        $z0 = virtualinvoke r5.<groovyjarjarantlr.preprocessor.Rule: boolean sameSignature(groovyjarjarantlr.preprocessor.Rule)>(r1);

        if $z0 != 0 goto label2;

        $r7 = r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.Tool antlrTool>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rule ");

        $r9 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r12 = virtualinvoke r5.<groovyjarjarantlr.preprocessor.Rule: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" has different signature than ");

        $r16 = virtualinvoke r15.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getName()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r19 = virtualinvoke r5.<groovyjarjarantlr.preprocessor.Rule: java.lang.String getName()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r7.<groovyjarjarantlr.Tool: void warning(java.lang.String)>($r21);

        goto label2;

     label1:
        virtualinvoke r0.<groovyjarjarantlr.preprocessor.Grammar: void addRule(groovyjarjarantlr.preprocessor.Rule)>(r1);

     label2:
        return;
    }

    public void inherit(java.lang.String, groovyjarjarantlr.preprocessor.Grammar)
    {
        groovyjarjarantlr.preprocessor.Grammar r0, r3;
        java.lang.String $r1, r2;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: groovyjarjarantlr.preprocessor.Grammar;

        $r1 = r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String memberAction>;

        if $r1 == null goto label1;

        return;

     label1:
        if r2 == null goto label2;

        r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String memberAction> = r2;

     label2:
        return;
    }

    public boolean isPredefined()
    {
        groovyjarjarantlr.preprocessor.Grammar r0;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        $z0 = r0.<groovyjarjarantlr.preprocessor.Grammar: boolean predefined>;

        return $z0;
    }

    public void setFileName(java.lang.String)
    {
        groovyjarjarantlr.preprocessor.Grammar r0;
        java.lang.String r1;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        r1 := @parameter0: java.lang.String;

        r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String fileName> = r1;

        return;
    }

    public void setHierarchy(groovyjarjarantlr.preprocessor.Hierarchy)
    {
        groovyjarjarantlr.preprocessor.Grammar r0;
        groovyjarjarantlr.preprocessor.Hierarchy r1;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        r1 := @parameter0: groovyjarjarantlr.preprocessor.Hierarchy;

        r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.preprocessor.Hierarchy hier> = r1;

        return;
    }

    public void setMemberAction(java.lang.String)
    {
        groovyjarjarantlr.preprocessor.Grammar r0;
        java.lang.String r1;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        r1 := @parameter0: java.lang.String;

        r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String memberAction> = r1;

        return;
    }

    public void setOptions(groovyjarjarantlr.collections.impl.IndexedVector)
    {
        groovyjarjarantlr.collections.impl.IndexedVector r1;
        groovyjarjarantlr.preprocessor.Grammar r0;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        r1 := @parameter0: groovyjarjarantlr.collections.impl.IndexedVector;

        r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector options> = r1;

        return;
    }

    public void setPreambleAction(java.lang.String)
    {
        groovyjarjarantlr.preprocessor.Grammar r0;
        java.lang.String r1;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        r1 := @parameter0: java.lang.String;

        r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String preambleAction> = r1;

        return;
    }

    public void setPredefined(boolean)
    {
        groovyjarjarantlr.preprocessor.Grammar r0;
        boolean z0;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        z0 := @parameter0: boolean;

        r0.<groovyjarjarantlr.preprocessor.Grammar: boolean predefined> = z0;

        return;
    }

    public void setTokenSection(java.lang.String)
    {
        groovyjarjarantlr.preprocessor.Grammar r0;
        java.lang.String r1;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        r1 := @parameter0: java.lang.String;

        r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String tokenSection> = r1;

        return;
    }

    public void setType(java.lang.String)
    {
        groovyjarjarantlr.preprocessor.Grammar r0;
        java.lang.String r1;

        r0 := @this: groovyjarjarantlr.preprocessor.Grammar;

        r1 := @parameter0: java.lang.String;

        r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String type> = r1;

        return;
    }

    public java.lang.String toString()
    {
        groovyjarjarantlr.preprocessor.Grammar r1, $r28, $r39;
        java.lang.StringBuffer $r0, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r16, $r18, $r30, $r31, $r33, $r35, $r37, $r38, $r41, $r43, $r45, $r47, $r49, $r51, $r53, $r54, $r58, $r59, $r61, $r62, $r64, $r65, $r67, $r68, $r70, $r71;
        java.lang.String $r2, $r3, $r4, $r7, $r10, $r13, $r15, $r17, $r19, $r21, $r22, $r23, $r27, $r29, $r32, $r34, $r36, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r55, $r57, $r60, $r63, $r66, $r69, $r72, $r73;
        groovyjarjarantlr.preprocessor.Rule r26;
        boolean $z0;
        groovyjarjarantlr.collections.impl.IndexedVector $r20, $r24, $r56, $r74;
        int i0, $i1;
        java.lang.Object $r25;

        r1 := @this: groovyjarjarantlr.preprocessor.Grammar;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(10000);

        $r2 = r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String preambleAction>;

        if $r2 == null goto label01;

        $r73 = r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String preambleAction>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r73);

     label01:
        $r3 = r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String superGrammar>;

        if $r3 != null goto label02;

        $r67 = new java.lang.StringBuffer;

        specialinvoke $r67.<java.lang.StringBuffer: void <init>()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("class ");

        $r69 = r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String name>;

        $r70 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r72;

     label02:
        $r4 = r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String superClass>;

        if $r4 == null goto label03;

        $r58 = new java.lang.StringBuffer;

        specialinvoke $r58.<java.lang.StringBuffer: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("class ");

        $r60 = r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String name>;

        $r61 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" extends ");

        $r63 = r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String superClass>;

        $r64 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r66);

        goto label04;

     label03:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("class ");

        $r7 = r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String name>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" extends ");

        $r10 = r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String type>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

     label04:
        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r20 = r1.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector options>;

        if $r20 == null goto label05;

        $r56 = r1.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector options>;

        $r57 = staticinvoke <groovyjarjarantlr.preprocessor.Hierarchy: java.lang.String optionsToString(groovyjarjarantlr.collections.impl.IndexedVector)>($r56);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r57);

     label05:
        $r21 = r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String tokenSection>;

        if $r21 == null goto label06;

        $r51 = new java.lang.StringBuffer;

        specialinvoke $r51.<java.lang.StringBuffer: void <init>()>();

        $r52 = r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String tokenSection>;

        $r53 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r55);

     label06:
        $r22 = r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String memberAction>;

        if $r22 == null goto label07;

        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r46 = r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String memberAction>;

        $r47 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);

        $r48 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r49 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

     label07:
        i0 = 0;

     label08:
        $r74 = r1.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector rules>;

        $i1 = virtualinvoke $r74.<groovyjarjarantlr.collections.impl.IndexedVector: int size()>();

        if i0 >= $i1 goto label10;

        $r24 = r1.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.collections.impl.IndexedVector rules>;

        $r25 = virtualinvoke $r24.<groovyjarjarantlr.collections.impl.IndexedVector: java.lang.Object elementAt(int)>(i0);

        r26 = (groovyjarjarantlr.preprocessor.Rule) $r25;

        $r27 = virtualinvoke r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getName()>();

        $r28 = r26.<groovyjarjarantlr.preprocessor.Rule: groovyjarjarantlr.preprocessor.Grammar enclosingGrammar>;

        $r29 = virtualinvoke $r28.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getName()>();

        $z0 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z0 != 0 goto label09;

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("// inherited from grammar ");

        $r39 = r26.<groovyjarjarantlr.preprocessor.Rule: groovyjarjarantlr.preprocessor.Grammar enclosingGrammar>;

        $r40 = virtualinvoke $r39.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getName()>();

        $r41 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r42 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r43 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

     label09:
        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r26);

        $r32 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r34 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        i0 = i0 + 1;

        goto label08;

     label10:
        $r23 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r23;
    }
}
