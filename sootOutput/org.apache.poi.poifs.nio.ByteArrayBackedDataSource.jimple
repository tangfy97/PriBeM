public class org.apache.poi.poifs.nio.ByteArrayBackedDataSource extends org.apache.poi.poifs.nio.DataSource
{
    private byte[] buffer;
    private long size;

    public void <init>(byte[], int)
    {
        org.apache.poi.poifs.nio.ByteArrayBackedDataSource r0;
        byte[] r1;
        int i0;
        long $l1;

        r0 := @this: org.apache.poi.poifs.nio.ByteArrayBackedDataSource;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.poi.poifs.nio.DataSource: void <init>()>();

        r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: byte[] buffer> = r1;

        $l1 = (long) i0;

        r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: long size> = $l1;

        return;
    }

    public void <init>(byte[])
    {
        int $i0;
        org.apache.poi.poifs.nio.ByteArrayBackedDataSource r0;
        byte[] r1;

        r0 := @this: org.apache.poi.poifs.nio.ByteArrayBackedDataSource;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        specialinvoke r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: void <init>(byte[],int)>(r1, $i0);

        return;
    }

    public java.nio.ByteBuffer read(int, long)
    {
        byte[] $r1;
        java.lang.IndexOutOfBoundsException $r13;
        long l0, $l1, $l4, $l5, $l6, $l7, $l10;
        java.nio.ByteBuffer $r2;
        org.apache.poi.poifs.nio.ByteArrayBackedDataSource r0;
        byte $b2;
        int i3, i8, $i9, $i11;
        java.lang.String $r11;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r12;

        r0 := @this: org.apache.poi.poifs.nio.ByteArrayBackedDataSource;

        i3 := @parameter0: int;

        l0 := @parameter1: long;

        $l1 = r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: long size>;

        $b2 = l0 cmp $l1;

        $i11 = (int) $b2;

        if $i11 < 0 goto label1;

        $r13 = new java.lang.IndexOutOfBoundsException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes from ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in stream of length ");

        $l10 = r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: long size>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r11);

        throw $r13;

     label1:
        $l6 = (long) i3;

        $l4 = r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: long size>;

        $l5 = $l4 - l0;

        $l7 = staticinvoke <java.lang.Math: long min(long,long)>($l6, $l5);

        i8 = (int) $l7;

        $r1 = r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: byte[] buffer>;

        $i9 = (int) l0;

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r1, $i9, i8);

        return $r2;
    }

    public void write(java.nio.ByteBuffer, long)
    {
        byte[] $r2, $r3;
        long l0, $l2, l3, $l5, $l9;
        java.nio.ByteBuffer r0;
        org.apache.poi.poifs.nio.ByteArrayBackedDataSource r1;
        byte $b6, $b10;
        int $i1, $i4, $i7, $i8, $i11, $i12;

        r1 := @this: org.apache.poi.poifs.nio.ByteArrayBackedDataSource;

        r0 := @parameter0: java.nio.ByteBuffer;

        l0 := @parameter1: long;

        $i1 = virtualinvoke r0.<java.nio.ByteBuffer: int capacity()>();

        $l2 = (long) $i1;

        l3 = l0 + $l2;

        $r2 = r1.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: byte[] buffer>;

        $i4 = lengthof $r2;

        $l5 = (long) $i4;

        $b6 = l3 cmp $l5;

        $i11 = (int) $b6;

        if $i11 <= 0 goto label1;

        specialinvoke r1.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: void extend(long)>(l3);

     label1:
        $r3 = r1.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: byte[] buffer>;

        $i7 = (int) l0;

        $i8 = virtualinvoke r0.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r3, $i7, $i8);

        $l9 = r1.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: long size>;

        $b10 = l3 cmp $l9;

        $i12 = (int) $b10;

        if $i12 <= 0 goto label2;

        r1.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: long size> = l3;

     label2:
        return;
    }

    private void extend(long)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        long l0, $l2, $l7, $l8, $l10, l13;
        org.apache.poi.poifs.nio.ByteArrayBackedDataSource r0;
        byte $b4, $b5;
        int $i1, $i3, $i6, $i9, $i11, $i12, $i14, $i15;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: org.apache.poi.poifs.nio.ByteArrayBackedDataSource;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: byte[] buffer>;

        $i1 = lengthof $r1;

        $l2 = (long) $i1;

        l13 = l0 - $l2;

        $d2 = (double) l13;

        $r2 = r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: byte[] buffer>;

        $i3 = lengthof $r2;

        $d0 = (double) $i3;

        $d1 = $d0 * 0.25;

        $b4 = $d2 cmpg $d1;

        $i14 = (int) $b4;

        if $i14 >= 0 goto label1;

        $r6 = r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: byte[] buffer>;

        $i12 = lengthof $r6;

        $d3 = (double) $i12;

        $d4 = $d3 * 0.25;

        l13 = (long) $d4;

     label1:
        $b5 = l13 cmp 4096L;

        $i15 = (int) $b5;

        if $i15 >= 0 goto label2;

        l13 = 4096L;

     label2:
        $r3 = r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: byte[] buffer>;

        $i6 = lengthof $r3;

        $l7 = (long) $i6;

        $l8 = l13 + $l7;

        $i9 = (int) $l8;

        $r5 = newarray (byte)[$i9];

        $r4 = r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: byte[] buffer>;

        $l10 = r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: long size>;

        $i11 = (int) $l10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, 0, $i11);

        r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: byte[] buffer> = $r5;

        return;
    }

    public void copyTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        org.apache.poi.poifs.nio.ByteArrayBackedDataSource r1;
        byte[] $r2;
        int $i1;
        long $l0;

        r1 := @this: org.apache.poi.poifs.nio.ByteArrayBackedDataSource;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: byte[] buffer>;

        $l0 = r1.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: long size>;

        $i1 = (int) $l0;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i1);

        return;
    }

    public long size()
    {
        org.apache.poi.poifs.nio.ByteArrayBackedDataSource r0;
        long $l0;

        r0 := @this: org.apache.poi.poifs.nio.ByteArrayBackedDataSource;

        $l0 = r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: long size>;

        return $l0;
    }

    public void close()
    {
        org.apache.poi.poifs.nio.ByteArrayBackedDataSource r0;

        r0 := @this: org.apache.poi.poifs.nio.ByteArrayBackedDataSource;

        r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: byte[] buffer> = null;

        r0.<org.apache.poi.poifs.nio.ByteArrayBackedDataSource: long size> = -1L;

        return;
    }
}
