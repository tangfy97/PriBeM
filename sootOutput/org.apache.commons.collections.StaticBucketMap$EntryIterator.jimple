class org.apache.commons.collections.StaticBucketMap$EntryIterator extends java.lang.Object implements java.util.Iterator
{
    private java.util.ArrayList current;
    private int bucket;
    private java.util.Map$Entry last;
    private final org.apache.commons.collections.StaticBucketMap this$0;

    private void <init>(org.apache.commons.collections.StaticBucketMap)
    {
        org.apache.commons.collections.StaticBucketMap$EntryIterator r0;
        org.apache.commons.collections.StaticBucketMap r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.collections.StaticBucketMap$EntryIterator;

        r1 := @parameter0: org.apache.commons.collections.StaticBucketMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: org.apache.commons.collections.StaticBucketMap this$0> = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: java.util.ArrayList current> = $r2;

        return;
    }

    public boolean hasNext()
    {
        java.lang.Throwable $r11;
        org.apache.commons.collections.StaticBucketMap$Lock[] $r5;
        java.util.ArrayList $r1, $r9, $r10;
        org.apache.commons.collections.StaticBucketMap $r2, $r4, $r7;
        org.apache.commons.collections.StaticBucketMap$Node[] $r3, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.commons.collections.StaticBucketMap$Lock $r6;
        org.apache.commons.collections.StaticBucketMap$Node r12;
        org.apache.commons.collections.StaticBucketMap$EntryIterator r0;

        r0 := @this: org.apache.commons.collections.StaticBucketMap$EntryIterator;

        $r1 = r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: java.util.ArrayList current>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label01;

        return 1;

     label01:
        $i1 = r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: int bucket>;

        $r2 = r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: org.apache.commons.collections.StaticBucketMap this$0>;

        $r3 = staticinvoke <org.apache.commons.collections.StaticBucketMap: org.apache.commons.collections.StaticBucketMap$Node[] access$500(org.apache.commons.collections.StaticBucketMap)>($r2);

        $i2 = lengthof $r3;

        if $i1 >= $i2 goto label11;

        $r4 = r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: org.apache.commons.collections.StaticBucketMap this$0>;

        $r5 = staticinvoke <org.apache.commons.collections.StaticBucketMap: org.apache.commons.collections.StaticBucketMap$Lock[] access$600(org.apache.commons.collections.StaticBucketMap)>($r4);

        $i3 = r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: int bucket>;

        $r6 = $r5[$i3];

        entermonitor $r6;

     label02:
        $r7 = r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: org.apache.commons.collections.StaticBucketMap this$0>;

        $r8 = staticinvoke <org.apache.commons.collections.StaticBucketMap: org.apache.commons.collections.StaticBucketMap$Node[] access$500(org.apache.commons.collections.StaticBucketMap)>($r7);

        $i4 = r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: int bucket>;

        r12 = $r8[$i4];

     label03:
        if r12 == null goto label04;

        $r10 = r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: java.util.ArrayList current>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

        r12 = r12.<org.apache.commons.collections.StaticBucketMap$Node: org.apache.commons.collections.StaticBucketMap$Node next>;

        goto label03;

     label04:
        $i5 = r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: int bucket>;

        $i6 = $i5 + 1;

        r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: int bucket> = $i6;

        $r9 = r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: java.util.ArrayList current>;

        $i7 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if $i7 <= 0 goto label06;

        exitmonitor $r6;

     label05:
        return 1;

     label06:
        exitmonitor $r6;

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

        exitmonitor $r6;

     label09:
        throw $r11;

     label10:
        goto label01;

     label11:
        return 0;

        catch java.lang.Throwable from label02 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected java.util.Map$Entry nextEntry()
    {
        java.util.Map$Entry $r4, $r5;
        java.util.ArrayList $r1, $r2;
        int $i0, $i1;
        org.apache.commons.collections.StaticBucketMap$EntryIterator r0;
        java.lang.Object $r3;
        java.util.NoSuchElementException $r6;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.StaticBucketMap$EntryIterator;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        throw $r6;

     label1:
        $r2 = r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: java.util.ArrayList current>;

        $r1 = r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: java.util.ArrayList current>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = $i0 - 1;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>($i1);

        $r4 = (java.util.Map$Entry) $r3;

        r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: java.util.Map$Entry last> = $r4;

        $r5 = r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: java.util.Map$Entry last>;

        return $r5;
    }

    public java.lang.Object next()
    {
        org.apache.commons.collections.StaticBucketMap$EntryIterator r0;
        java.util.Map$Entry $r1;

        r0 := @this: org.apache.commons.collections.StaticBucketMap$EntryIterator;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: java.util.Map$Entry nextEntry()>();

        return $r1;
    }

    public void remove()
    {
        java.lang.IllegalStateException $r5;
        java.util.Map$Entry $r1, $r2;
        org.apache.commons.collections.StaticBucketMap $r3;
        org.apache.commons.collections.StaticBucketMap$EntryIterator r0;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.collections.StaticBucketMap$EntryIterator;

        $r1 = r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: java.util.Map$Entry last>;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label1:
        $r3 = r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: org.apache.commons.collections.StaticBucketMap this$0>;

        $r2 = r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: java.util.Map$Entry last>;

        $r4 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r3.<org.apache.commons.collections.StaticBucketMap: java.lang.Object remove(java.lang.Object)>($r4);

        r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: java.util.Map$Entry last> = null;

        return;
    }

    void <init>(org.apache.commons.collections.StaticBucketMap, org.apache.commons.collections.StaticBucketMap$1)
    {
        org.apache.commons.collections.StaticBucketMap$EntryIterator r0;
        org.apache.commons.collections.StaticBucketMap$1 r2;
        org.apache.commons.collections.StaticBucketMap r1;

        r0 := @this: org.apache.commons.collections.StaticBucketMap$EntryIterator;

        r1 := @parameter0: org.apache.commons.collections.StaticBucketMap;

        r2 := @parameter1: org.apache.commons.collections.StaticBucketMap$1;

        specialinvoke r0.<org.apache.commons.collections.StaticBucketMap$EntryIterator: void <init>(org.apache.commons.collections.StaticBucketMap)>(r1);

        return;
    }
}
