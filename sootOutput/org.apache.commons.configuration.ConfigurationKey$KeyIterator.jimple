public class org.apache.commons.configuration.ConfigurationKey$KeyIterator extends java.lang.Object implements java.util.Iterator, java.lang.Cloneable
{
    private java.lang.String current;
    private int startIndex;
    private int endIndex;
    private int indexValue;
    private boolean hasIndex;
    private boolean attribute;
    private final org.apache.commons.configuration.ConfigurationKey this$0;

    public void <init>(org.apache.commons.configuration.ConfigurationKey)
    {
        org.apache.commons.configuration.ConfigurationKey r1;
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r0;

        r0 := @this: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        r1 := @parameter0: org.apache.commons.configuration.ConfigurationKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: org.apache.commons.configuration.ConfigurationKey this$0> = r1;

        return;
    }

    private java.lang.String findNextIndices()
    {
        org.apache.commons.configuration.ConfigurationKey $r1, $r3, $r6, $r8, $r11;
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r0;
        java.lang.StringBuffer $r2, $r4, $r7, $r9, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14;
        java.lang.String $r5, $r10;
        char $c11;

        r0 := @this: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        $i0 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int endIndex>;

        r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int startIndex> = $i0;

     label1:
        $i1 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int startIndex>;

        $r1 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: org.apache.commons.configuration.ConfigurationKey this$0>;

        $r2 = staticinvoke <org.apache.commons.configuration.ConfigurationKey: java.lang.StringBuffer access$100(org.apache.commons.configuration.ConfigurationKey)>($r1);

        $i2 = virtualinvoke $r2.<java.lang.StringBuffer: int length()>();

        if $i1 >= $i2 goto label2;

        $r11 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: org.apache.commons.configuration.ConfigurationKey this$0>;

        $r12 = staticinvoke <org.apache.commons.configuration.ConfigurationKey: java.lang.StringBuffer access$100(org.apache.commons.configuration.ConfigurationKey)>($r11);

        $i10 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int startIndex>;

        $c11 = virtualinvoke $r12.<java.lang.StringBuffer: char charAt(int)>($i10);

        $i14 = (int) $c11;

        if $i14 != 46 goto label2;

        $i12 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int startIndex>;

        $i13 = $i12 + 1;

        r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int startIndex> = $i13;

        goto label1;

     label2:
        $i3 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int startIndex>;

        $r3 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: org.apache.commons.configuration.ConfigurationKey this$0>;

        $r4 = staticinvoke <org.apache.commons.configuration.ConfigurationKey: java.lang.StringBuffer access$100(org.apache.commons.configuration.ConfigurationKey)>($r3);

        $i4 = virtualinvoke $r4.<java.lang.StringBuffer: int length()>();

        if $i3 < $i4 goto label3;

        $r6 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: org.apache.commons.configuration.ConfigurationKey this$0>;

        $r7 = staticinvoke <org.apache.commons.configuration.ConfigurationKey: java.lang.StringBuffer access$100(org.apache.commons.configuration.ConfigurationKey)>($r6);

        $i5 = virtualinvoke $r7.<java.lang.StringBuffer: int length()>();

        r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int endIndex> = $i5;

        $i6 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int endIndex>;

        $i7 = $i6 - 1;

        r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int startIndex> = $i7;

        $r8 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: org.apache.commons.configuration.ConfigurationKey this$0>;

        $r9 = staticinvoke <org.apache.commons.configuration.ConfigurationKey: java.lang.StringBuffer access$100(org.apache.commons.configuration.ConfigurationKey)>($r8);

        $i9 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int startIndex>;

        $i8 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int endIndex>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String substring(int,int)>($i9, $i8);

        return $r10;

     label3:
        $r5 = specialinvoke r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: java.lang.String nextKeyPart()>();

        return $r5;
    }

    private java.lang.String nextKeyPart()
    {
        org.apache.commons.configuration.ConfigurationKey $r2, $r5, $r8, $r10;
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r1;
        java.lang.StringBuffer $r3, $r6, $r9, $r11, $r12;
        int $i0, $i1, $i3, $i4, $i6, i7, i8, $i9, $i10;
        java.lang.String $r4, $r7;
        boolean z0, z1, z2;
        char $c2, $c5;

        r1 := @this: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>(int)>(32);

        i7 = r1.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int startIndex>;

        $r2 = r1.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: org.apache.commons.configuration.ConfigurationKey this$0>;

        $r3 = staticinvoke <org.apache.commons.configuration.ConfigurationKey: java.lang.StringBuffer access$100(org.apache.commons.configuration.ConfigurationKey)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $i0 = r1.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int startIndex>;

        $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String,int)>("[@", $i0);

        i8 = $i1;

        if $i1 < 0 goto label1;

        $i6 = r1.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int startIndex>;

        if $i1 != $i6 goto label2;

     label1:
        $r5 = r1.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: org.apache.commons.configuration.ConfigurationKey this$0>;

        $r6 = staticinvoke <org.apache.commons.configuration.ConfigurationKey: java.lang.StringBuffer access$100(org.apache.commons.configuration.ConfigurationKey)>($r5);

        i8 = virtualinvoke $r6.<java.lang.StringBuffer: int length()>();

     label2:
        z0 = 0;

        z2 = 0;

        z1 = 0;

     label3:
        if z1 != 0 goto label8;

        if i7 >= i8 goto label8;

        $r8 = r1.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: org.apache.commons.configuration.ConfigurationKey this$0>;

        $r9 = staticinvoke <org.apache.commons.configuration.ConfigurationKey: java.lang.StringBuffer access$100(org.apache.commons.configuration.ConfigurationKey)>($r8);

        $c2 = virtualinvoke $r9.<java.lang.StringBuffer: char charAt(int)>(i7);

        $i9 = (int) $c2;

        if $i9 != 46 goto label6;

        $i3 = i8 - 1;

        if i7 == $i3 goto label4;

        $r10 = r1.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: org.apache.commons.configuration.ConfigurationKey this$0>;

        $r11 = staticinvoke <org.apache.commons.configuration.ConfigurationKey: java.lang.StringBuffer access$100(org.apache.commons.configuration.ConfigurationKey)>($r10);

        $i4 = i7 + 1;

        $c5 = virtualinvoke $r11.<java.lang.StringBuffer: char charAt(int)>($i4);

        $i10 = (int) $c5;

        if $i10 == 46 goto label5;

     label4:
        z0 = 1;

        z2 = 1;

        z1 = 1;

        goto label6;

     label5:
        i7 = i7 + 1;

     label6:
        if z2 != 0 goto label7;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        i7 = i7 + 1;

     label7:
        goto label3;

     label8:
        r1.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int endIndex> = i7;

        $r7 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String nextKey()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r0;

        r0 := @this: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: java.lang.String nextKey(boolean)>(0);

        return $r1;
    }

    public java.lang.String nextKey(boolean)
    {
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r0;
        int $i1;
        java.lang.String $r1, $r2, $r3;
        java.util.NoSuchElementException $r5;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        z3 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("No more key parts!");

        throw $r5;

     label1:
        r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: boolean hasIndex> = 0;

        $i1 = (int) -1;

        r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int indexValue> = $i1;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: java.lang.String findNextIndices()>();

        r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: java.lang.String current> = $r1;

        $z1 = specialinvoke r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: boolean checkIndex(java.lang.String)>($r1);

        r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: boolean hasIndex> = $z1;

        $r2 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: java.lang.String current>;

        $z2 = specialinvoke r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: boolean checkAttribute(java.lang.String)>($r2);

        r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: boolean attribute> = $z2;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: java.lang.String currentKey(boolean)>(z3);

        return $r3;
    }

    private boolean checkAttribute(java.lang.String)
    {
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r1;
        java.lang.String r0, $r2;
        boolean $z0;

        r1 := @this: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.configuration.ConfigurationKey: boolean isAttributeKey(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <org.apache.commons.configuration.ConfigurationKey: java.lang.String removeAttributeMarkers(java.lang.String)>(r0);

        r1.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: java.lang.String current> = $r2;

        return 1;

     label1:
        return 0;
    }

    private boolean checkIndex(java.lang.String)
    {
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String r0, $r2, $r3;
        boolean z0;

        r1 := @this: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        r0 := @parameter0: java.lang.String;

        z0 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(40);

        if $i0 <= 0 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(41, $i0);

        $i2 = $i0 + 1;

        if $i1 <= $i2 goto label1;

        $i3 = $i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i3, $i1);

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r1.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int indexValue> = $i4;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r1.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: java.lang.String current> = $r3;

        z0 = 1;

     label1:
        return z0;
    }

    public boolean hasNext()
    {
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r0;
        java.lang.StringBuffer $r2;
        org.apache.commons.configuration.ConfigurationKey $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        $i0 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int endIndex>;

        $r1 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: org.apache.commons.configuration.ConfigurationKey this$0>;

        $r2 = staticinvoke <org.apache.commons.configuration.ConfigurationKey: java.lang.StringBuffer access$100(org.apache.commons.configuration.ConfigurationKey)>($r1);

        $i1 = virtualinvoke $r2.<java.lang.StringBuffer: int length()>();

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r0;

        r0 := @this: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: java.lang.String nextKey()>();

        return $r1;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r1;

        r1 := @this: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Remove not supported!");

        throw $r0;
    }

    public java.lang.String currentKey()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r0;

        r0 := @this: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: java.lang.String currentKey(boolean)>(0);

        return $r1;
    }

    public java.lang.String currentKey(boolean)
    {
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r0;
        java.lang.String $r1, $r2;
        boolean z0, $z1;

        r0 := @this: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: boolean isAttribute()>();

        if $z1 == 0 goto label1;

        $r1 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: java.lang.String current>;

        $r2 = staticinvoke <org.apache.commons.configuration.ConfigurationKey: java.lang.String constructAttributeKey(java.lang.String)>($r1);

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: java.lang.String current>;

     label2:
        return $r2;
    }

    public boolean isAttribute()
    {
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        $z0 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: boolean attribute>;

        return $z0;
    }

    public int getIndex()
    {
        int $i0;
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r0;

        r0 := @this: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        $i0 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: int indexValue>;

        return $i0;
    }

    public boolean hasIndex()
    {
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        $z0 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: boolean hasIndex>;

        return $z0;
    }

    public java.lang.Object clone()
    {
        java.lang.Object $r1;
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r0;
        java.lang.CloneNotSupportedException $r2;

        r0 := @this: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    static boolean access$000(org.apache.commons.configuration.ConfigurationKey$KeyIterator)
    {
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r0;
        boolean $z0;

        r0 := @parameter0: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        $z0 = r0.<org.apache.commons.configuration.ConfigurationKey$KeyIterator: boolean hasIndex>;

        return $z0;
    }
}
