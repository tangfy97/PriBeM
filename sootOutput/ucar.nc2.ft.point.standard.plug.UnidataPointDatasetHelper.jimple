public class ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper extends java.lang.Object
{

    public void <init>()
    {
        ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper r0;

        r0 := @this: ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Date getStartDate(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.units.DateUnit)
    {
        ucar.nc2.units.DateUnit r1;
        ucar.nc2.dataset.NetcdfDataset r0;
        java.util.Date $r2;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.units.DateUnit;

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: java.util.Date getDate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.units.DateUnit,java.lang.String)>(r0, r1, "time_coverage_start");

        return $r2;
    }

    public static java.util.Date getEndDate(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.units.DateUnit)
    {
        ucar.nc2.units.DateUnit r1;
        ucar.nc2.dataset.NetcdfDataset r0;
        java.util.Date $r2;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.units.DateUnit;

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: java.util.Date getDate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.units.DateUnit,java.lang.String)>(r0, r1, "time_coverage_end");

        return $r2;
    }

    private static java.util.Date getDate(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.units.DateUnit, java.lang.String)
    {
        java.util.Date $r13, r20;
        java.lang.String r1, $r10, $r12, $r14, $r19;
        java.lang.Number $r11;
        double $d0, $d1;
        ucar.ma2.DataType $r3, $r4;
        ucar.nc2.units.DateUnit r5;
        java.lang.IllegalArgumentException $r6, $r15;
        ucar.nc2.Attribute $r2;
        java.lang.StringBuilder $r7, $r8, $r9, $r16, $r17, $r18;
        ucar.nc2.dataset.NetcdfDataset r0;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r5 := @parameter1: ucar.nc2.units.DateUnit;

        r1 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>(r1);

        if null != $r2 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must have a global attribute named ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label1:
        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: ucar.ma2.DataType getDataType()>();

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r3 != $r4 goto label2;

        $r12 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $r13 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardOrISO(java.lang.String)>($r12);

        r20 = $r13;

        if $r13 != null goto label4;

        $r14 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r14);

        r20 = virtualinvoke r5.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d1);

        goto label4;

     label2:
        if r5 == null goto label3;

        $r11 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d0 = virtualinvoke $r11.<java.lang.Number: double doubleValue()>();

        r20 = virtualinvoke r5.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d0);

        goto label4;

     label3:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be a ISO or udunit date string");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label4:
        return r20;
    }

    public static ucar.unidata.geoloc.LatLonRect getBoundingBox(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.unidata.geoloc.LatLonRect $r1;
        ucar.unidata.geoloc.LatLonPointImpl $r2;
        ucar.nc2.dataset.NetcdfDataset r0;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $d0 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: double getAttAsDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "geospatial_lat_max");

        $d1 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: double getAttAsDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "geospatial_lat_min");

        $d2 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: double getAttAsDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "geospatial_lon_max");

        $d3 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: double getAttAsDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "geospatial_lon_min");

        $r1 = new ucar.unidata.geoloc.LatLonRect;

        $r2 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r2.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d1, $d3);

        $d5 = $d0 - $d1;

        $d4 = $d2 - $d3;

        specialinvoke $r1.<ucar.unidata.geoloc.LatLonRect: void <init>(ucar.unidata.geoloc.LatLonPoint,double,double)>($r2, $d5, $d4);

        return $r1;
    }

    private static double getAttAsDouble(ucar.nc2.dataset.NetcdfDataset, java.lang.String)
    {
        ucar.ma2.DataType $r3, $r4;
        java.lang.IllegalArgumentException $r7;
        ucar.nc2.Attribute $r2;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        java.lang.String r1, $r6, $r12;
        java.lang.Number $r5;
        ucar.nc2.dataset.NetcdfDataset r0;
        double $d0, $d1;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>(r1);

        if null != $r2 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must have a ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" global attribute");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label1:
        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: ucar.ma2.DataType getDataType()>();

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r3 != $r4 goto label2;

        $r6 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r6);

        return $d1;

     label2:
        $r5 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d0 = virtualinvoke $r5.<java.lang.Number: double doubleValue()>();

        return $d0;
    }

    public static java.lang.String getCoordinateName(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.AxisType)
    {
        ucar.nc2.constants.AxisType r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r1, $r19;
        ucar.nc2.Structure $r18;
        ucar.nc2.Variable $r8, r14, r22, r26;
        java.lang.String $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r23, $r24, $r25;
        java.util.Iterator $r2, $r20;
        java.lang.Object $r13, $r21;
        ucar.nc2.dataset.NetcdfDataset r0;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.constants.AxisType;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r13 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r14 = (ucar.nc2.Variable) $r13;

        $z1 = r14 instanceof ucar.nc2.Structure;

        if $z1 == 0 goto label05;

        $r18 = (ucar.nc2.Structure) r14;

        $r19 = virtualinvoke $r18.<ucar.nc2.Structure: java.util.List getVariables()>();

        $r20 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label04;

        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r22 = (ucar.nc2.Variable) $r21;

        $r23 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r22, "_CoordinateAxisType", null);

        if $r23 == null goto label03;

        $r24 = virtualinvoke r3.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        $z4 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z4 == 0 goto label03;

        $r25 = virtualinvoke r22.<ucar.nc2.Variable: java.lang.String getShortName()>();

        return $r25;

     label03:
        goto label02;

     label04:
        goto label06;

     label05:
        $r15 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r14, "_CoordinateAxisType", null);

        if $r15 == null goto label06;

        $r16 = virtualinvoke r3.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        $z2 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z2 == 0 goto label06;

        $r17 = virtualinvoke r14.<ucar.nc2.Variable: java.lang.String getShortName()>();

        return $r17;

     label06:
        goto label01;

     label07:
        $r4 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        if r3 != $r4 goto label08;

        $r12 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: java.lang.String findVariableName(ucar.nc2.NetcdfFile,java.lang.String)>(r0, "latitude");

        return $r12;

     label08:
        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        if r3 != $r5 goto label09;

        $r11 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: java.lang.String findVariableName(ucar.nc2.NetcdfFile,java.lang.String)>(r0, "longitude");

        return $r11;

     label09:
        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        if r3 != $r6 goto label10;

        $r10 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: java.lang.String findVariableName(ucar.nc2.NetcdfFile,java.lang.String)>(r0, "time");

        return $r10;

     label10:
        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        if r3 != $r7 goto label12;

        $r8 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r0, "altitude");

        r26 = $r8;

        if null != $r8 goto label11;

        r26 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r0, "depth");

     label11:
        if r26 == null goto label12;

        $r9 = virtualinvoke r26.<ucar.nc2.Variable: java.lang.String getShortName()>();

        return $r9;

     label12:
        return null;
    }

    public static java.lang.String getCoordinateName(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.AxisType, ucar.nc2.Dimension)
    {
        ucar.nc2.constants.AxisType r1;
        ucar.nc2.Variable $r3;
        ucar.nc2.Dimension $r4, r5;
        java.lang.String $r2;
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0, $z1;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.constants.AxisType;

        r5 := @parameter2: ucar.nc2.Dimension;

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: java.lang.String getCoordinateName(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r2);

        if $r3 != null goto label2;

        return null;

     label2:
        $z0 = virtualinvoke $r3.<ucar.nc2.Variable: boolean isScalar()>();

        if $z0 == 0 goto label3;

        return null;

     label3:
        $r4 = virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $z1 = virtualinvoke $r4.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>(r5);

        if $z1 != 0 goto label4;

        return null;

     label4:
        return $r2;
    }

    public static ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.AxisType)
    {
        ucar.nc2.Structure $r16;
        ucar.nc2.constants.AxisType r3, $r4, $r5, $r6, $r7;
        ucar.nc2.Variable $r8, $r9, $r10, $r11, r13, r20, r23;
        java.lang.String $r14, $r15, $r21, $r22;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r2, $r18;
        java.util.List $r1, $r17;
        java.lang.Object $r12, $r19;
        ucar.nc2.dataset.NetcdfDataset r0;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.constants.AxisType;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r12 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r13 = (ucar.nc2.Variable) $r12;

        $z1 = r13 instanceof ucar.nc2.Structure;

        if $z1 == 0 goto label05;

        $r16 = (ucar.nc2.Structure) r13;

        $r17 = virtualinvoke $r16.<ucar.nc2.Structure: java.util.List getVariables()>();

        $r18 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label04;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r20 = (ucar.nc2.Variable) $r19;

        $r21 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r20, "_CoordinateAxisType", null);

        if $r21 == null goto label03;

        $r22 = virtualinvoke r3.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        $z4 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z4 == 0 goto label03;

        return r20;

     label03:
        goto label02;

     label04:
        goto label06;

     label05:
        $r14 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r13, "_CoordinateAxisType", null);

        if $r14 == null goto label06;

        $r15 = virtualinvoke r3.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z2 == 0 goto label06;

        return r13;

     label06:
        goto label01;

     label07:
        $r4 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        if r3 != $r4 goto label08;

        $r11 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r0, "latitude");

        return $r11;

     label08:
        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        if r3 != $r5 goto label09;

        $r10 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r0, "longitude");

        return $r10;

     label09:
        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        if r3 != $r6 goto label10;

        $r9 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r0, "time");

        return $r9;

     label10:
        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        if r3 != $r7 goto label12;

        $r8 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r0, "altitude");

        r23 = $r8;

        if null != $r8 goto label11;

        r23 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r0, "depth");

     label11:
        if r23 == null goto label12;

        return r23;

     label12:
        return null;
    }

    public static java.lang.String findVariableName(ucar.nc2.NetcdfFile, java.lang.String)
    {
        ucar.nc2.Variable $r2;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r1, $r3;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.plug.UnidataPointDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r0, r1);

        if $r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke $r2.<ucar.nc2.Variable: java.lang.String getShortName()>();

     label2:
        return $r3;
    }

    public static ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile, java.lang.String)
    {
        ucar.nc2.Variable $r2, r13;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r1, $r6, $r7, $r11, $r12;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>(r1);

        r13 = $r2;

        if $r2 != null goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_coordinate");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, $r6, null);

        if $r7 == null goto label1;

        r13 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r7);

        goto label2;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_variable");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, $r11, null);

        if $r12 == null goto label2;

        r13 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r12);

     label2:
        return r13;
    }

    public static ucar.nc2.Dimension findDimension(ucar.nc2.NetcdfFile, java.lang.String)
    {
        ucar.nc2.Dimension $r2, r8;
        java.lang.StringBuilder $r3, $r4, $r5;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r1, $r6, $r7;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>(r1);

        r8 = $r2;

        if $r2 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dimension");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, $r6, null);

        if $r7 == null goto label1;

        r8 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>($r7);

     label1:
        return r8;
    }

    public static ucar.nc2.Dimension findObsDimension(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Dimension r2;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r1;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r2 = null;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "observationDimension", null);

        if $r1 == null goto label1;

        r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>($r1);

     label1:
        if r2 != null goto label2;

        r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension getUnlimitedDimension()>();

     label2:
        return r2;
    }
}
