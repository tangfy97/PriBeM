public final class org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl extends org.apache.xmlbeans.impl.jam.internal.elements.InvokableImpl implements org.apache.xmlbeans.impl.jam.mutable.MMethod
{
    private org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mReturnTypeRef;

    void <init>(java.lang.String, org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl r0;
        java.lang.String r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.InvokableImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl)>(r1);

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mReturnTypeRef> = null;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: void setSimpleName(java.lang.String)>(r2);

        return;
    }

    public void setReturnType(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl r0;
        org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef $r4;
        java.lang.String r1;
        org.apache.xmlbeans.impl.jam.JClass $r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl $r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: org.apache.xmlbeans.impl.jam.JClass getContainingClass()>();

        $r3 = (org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl) $r2;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef create(java.lang.String,org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRefContext)>(r1, $r3);

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mReturnTypeRef> = $r4;

        return;
    }

    public void setUnqualifiedReturnType(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl r0;
        org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef $r4;
        java.lang.String r1;
        org.apache.xmlbeans.impl.jam.JClass $r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl $r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: org.apache.xmlbeans.impl.jam.JClass getContainingClass()>();

        $r3 = (org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl) $r2;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.classrefs.UnqualifiedJClassRef: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef create(java.lang.String,org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRefContext)>(r1, $r3);

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mReturnTypeRef> = $r4;

        return;
    }

    public void setReturnType(org.apache.xmlbeans.impl.jam.JClass)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl r0;
        org.apache.xmlbeans.impl.jam.JClass r1;
        org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef $r2;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.classrefs.DirectJClassRef: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef create(org.apache.xmlbeans.impl.jam.JClass)>(r1);

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mReturnTypeRef> = $r2;

        return;
    }

    public org.apache.xmlbeans.impl.jam.JClass getReturnType()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl r0;
        org.apache.xmlbeans.impl.jam.JamClassLoader $r4;
        org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef $r1, $r2;
        org.apache.xmlbeans.impl.jam.JClass $r3, $r5;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mReturnTypeRef>;

        if $r1 != null goto label1;

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: org.apache.xmlbeans.impl.jam.JamClassLoader getClassLoader()>();

        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.jam.JamClassLoader: org.apache.xmlbeans.impl.jam.JClass loadClass(java.lang.String)>("void");

        return $r5;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mReturnTypeRef>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef: org.apache.xmlbeans.impl.jam.JClass getRefClass()>();

        return $r3;
    }

    public boolean isFinal()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i0);

        return $z0;
    }

    public boolean isStatic()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        return $z0;
    }

    public boolean isAbstract()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i0);

        return $z0;
    }

    public boolean isNative()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isNative(int)>($i0);

        return $z0;
    }

    public boolean isSynchronized()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isSynchronized(int)>($i0);

        return $z0;
    }

    public void accept(org.apache.xmlbeans.impl.jam.visitor.MVisitor)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl r1;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor r0;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.visitor.MVisitor;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.visitor.MVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MMethod)>(r1);

        return;
    }

    public void accept(org.apache.xmlbeans.impl.jam.visitor.JVisitor)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl r1;
        org.apache.xmlbeans.impl.jam.visitor.JVisitor r0;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.visitor.JVisitor;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.visitor.JVisitor: void visit(org.apache.xmlbeans.impl.jam.JMethod)>(r1);

        return;
    }

    public java.lang.String getQualifiedName()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl r1;
        org.apache.xmlbeans.impl.jam.JParameter $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        java.lang.String $r2, $r4, $r5, $r8, $r11, $r13;
        org.apache.xmlbeans.impl.jam.JClass[] $r12;
        java.io.StringWriter $r0;
        org.apache.xmlbeans.impl.jam.JParameter[] $r6;
        org.apache.xmlbeans.impl.jam.JClass $r3, $r7, $r10;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: int getModifiers()>();

        $r2 = staticinvoke <java.lang.reflect.Modifier: java.lang.String toString(int)>($i0);

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>($r2);

        virtualinvoke $r0.<java.io.StringWriter: void write(int)>(32);

        $r3 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: org.apache.xmlbeans.impl.jam.JClass getReturnType()>();

        if $r3 != null goto label1;

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>("void ");

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getQualifiedName()>();

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>($r4);

        virtualinvoke $r0.<java.io.StringWriter: void write(int)>(32);

     label2:
        $r5 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: java.lang.String getSimpleName()>();

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>($r5);

        virtualinvoke $r0.<java.io.StringWriter: void write(int)>(40);

        $r6 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: org.apache.xmlbeans.impl.jam.JParameter[] getParameters()>();

        if $r6 == null goto label5;

        $i5 = lengthof $r6;

        if $i5 <= 0 goto label5;

        i9 = 0;

     label3:
        $i6 = lengthof $r6;

        if i9 >= $i6 goto label5;

        $r9 = $r6[i9];

        $r10 = interfaceinvoke $r9.<org.apache.xmlbeans.impl.jam.JParameter: org.apache.xmlbeans.impl.jam.JClass getType()>();

        $r11 = interfaceinvoke $r10.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getQualifiedName()>();

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>($r11);

        $i7 = lengthof $r6;

        $i8 = $i7 - 1;

        if i9 >= $i8 goto label4;

        virtualinvoke $r0.<java.io.StringWriter: void write(int)>(44);

     label4:
        i9 = i9 + 1;

        goto label3;

     label5:
        virtualinvoke $r0.<java.io.StringWriter: void write(int)>(41);

        $r12 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: org.apache.xmlbeans.impl.jam.JClass[] getExceptionTypes()>();

        if $r12 == null goto label8;

        $i1 = lengthof $r12;

        if $i1 <= 0 goto label8;

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>(" throws ");

        i10 = 0;

     label6:
        $i2 = lengthof $r12;

        if i10 >= $i2 goto label8;

        $r7 = $r12[i10];

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getQualifiedName()>();

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>($r8);

        $i3 = lengthof $r12;

        $i4 = $i3 - 1;

        if i10 >= $i4 goto label7;

        virtualinvoke $r0.<java.io.StringWriter: void write(int)>(44);

     label7:
        i10 = i10 + 1;

        goto label6;

     label8:
        $r13 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r13;
    }
}
