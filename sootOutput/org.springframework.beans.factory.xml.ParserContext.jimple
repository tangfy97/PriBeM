public final class org.springframework.beans.factory.xml.ParserContext extends java.lang.Object
{
    private final org.springframework.beans.factory.xml.XmlReaderContext readerContext;
    private final org.springframework.beans.factory.xml.BeanDefinitionParserDelegate delegate;
    private org.springframework.beans.factory.config.BeanDefinition containingBeanDefinition;
    private final java.util.Stack containingComponents;

    public void <init>(org.springframework.beans.factory.xml.XmlReaderContext, org.springframework.beans.factory.xml.BeanDefinitionParserDelegate)
    {
        org.springframework.beans.factory.xml.ParserContext r0;
        org.springframework.beans.factory.xml.XmlReaderContext r2;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r3;
        java.util.Stack $r1;

        r0 := @this: org.springframework.beans.factory.xml.ParserContext;

        r2 := @parameter0: org.springframework.beans.factory.xml.XmlReaderContext;

        r3 := @parameter1: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<org.springframework.beans.factory.xml.ParserContext: java.util.Stack containingComponents> = $r1;

        r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext readerContext> = r2;

        r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate delegate> = r3;

        return;
    }

    public void <init>(org.springframework.beans.factory.xml.XmlReaderContext, org.springframework.beans.factory.xml.BeanDefinitionParserDelegate, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.springframework.beans.factory.xml.ParserContext r0;
        org.springframework.beans.factory.xml.XmlReaderContext r2;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate r3;
        org.springframework.beans.factory.config.BeanDefinition r4;
        java.util.Stack $r1;

        r0 := @this: org.springframework.beans.factory.xml.ParserContext;

        r2 := @parameter0: org.springframework.beans.factory.xml.XmlReaderContext;

        r3 := @parameter1: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate;

        r4 := @parameter2: org.springframework.beans.factory.config.BeanDefinition;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<org.springframework.beans.factory.xml.ParserContext: java.util.Stack containingComponents> = $r1;

        r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext readerContext> = r2;

        r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate delegate> = r3;

        r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.config.BeanDefinition containingBeanDefinition> = r4;

        return;
    }

    public final org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()
    {
        org.springframework.beans.factory.xml.XmlReaderContext $r1;
        org.springframework.beans.factory.xml.ParserContext r0;

        r0 := @this: org.springframework.beans.factory.xml.ParserContext;

        $r1 = r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        return $r1;
    }

    public final org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()
    {
        org.springframework.beans.factory.xml.XmlReaderContext $r1;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r2;
        org.springframework.beans.factory.xml.ParserContext r0;

        r0 := @this: org.springframework.beans.factory.xml.ParserContext;

        $r1 = r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        $r2 = virtualinvoke $r1.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        return $r2;
    }

    public final org.springframework.beans.factory.xml.BeanDefinitionParserDelegate getDelegate()
    {
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate $r1;
        org.springframework.beans.factory.xml.ParserContext r0;

        r0 := @this: org.springframework.beans.factory.xml.ParserContext;

        $r1 = r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate delegate>;

        return $r1;
    }

    public final org.springframework.beans.factory.config.BeanDefinition getContainingBeanDefinition()
    {
        org.springframework.beans.factory.config.BeanDefinition $r1;
        org.springframework.beans.factory.xml.ParserContext r0;

        r0 := @this: org.springframework.beans.factory.xml.ParserContext;

        $r1 = r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.config.BeanDefinition containingBeanDefinition>;

        return $r1;
    }

    public final boolean isNested()
    {
        org.springframework.beans.factory.config.BeanDefinition $r1;
        org.springframework.beans.factory.xml.ParserContext r0;

        r0 := @this: org.springframework.beans.factory.xml.ParserContext;

        $r1 = r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.config.BeanDefinition containingBeanDefinition>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isDefaultLazyInit()
    {
        org.springframework.beans.factory.xml.ParserContext r0;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate $r1;
        java.lang.String $r2, $r4;
        org.springframework.beans.factory.xml.DocumentDefaultsDefinition $r3;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.xml.ParserContext;

        $r2 = "true";

        $r1 = r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate delegate>;

        $r3 = virtualinvoke $r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition getDefaults()>();

        $r4 = virtualinvoke $r3.<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getLazyInit()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z0;
    }

    public java.lang.Object extractSource(java.lang.Object)
    {
        org.springframework.beans.factory.xml.ParserContext r0;
        org.springframework.beans.factory.xml.XmlReaderContext $r2;
        java.lang.Object r1, $r3;

        r0 := @this: org.springframework.beans.factory.xml.ParserContext;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        $r3 = virtualinvoke $r2.<org.springframework.beans.factory.xml.XmlReaderContext: java.lang.Object extractSource(java.lang.Object)>(r1);

        return $r3;
    }

    public org.springframework.beans.factory.parsing.CompositeComponentDefinition getContainingComponent()
    {
        org.springframework.beans.factory.xml.ParserContext r0;
        java.lang.Object $r3;
        org.springframework.beans.factory.parsing.CompositeComponentDefinition $r4;
        java.util.Stack $r1, $r2;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.xml.ParserContext;

        $r1 = r0.<org.springframework.beans.factory.xml.ParserContext: java.util.Stack containingComponents>;

        $z0 = virtualinvoke $r1.<java.util.Stack: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<org.springframework.beans.factory.xml.ParserContext: java.util.Stack containingComponents>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object lastElement()>();

        $r4 = (org.springframework.beans.factory.parsing.CompositeComponentDefinition) $r3;

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public void pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)
    {
        org.springframework.beans.factory.parsing.CompositeComponentDefinition r1;
        java.util.Stack $r2;
        org.springframework.beans.factory.xml.ParserContext r0;

        r0 := @this: org.springframework.beans.factory.xml.ParserContext;

        r1 := @parameter0: org.springframework.beans.factory.parsing.CompositeComponentDefinition;

        $r2 = r0.<org.springframework.beans.factory.xml.ParserContext: java.util.Stack containingComponents>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public org.springframework.beans.factory.parsing.CompositeComponentDefinition popContainingComponent()
    {
        org.springframework.beans.factory.xml.ParserContext r0;
        java.lang.Object $r2;
        org.springframework.beans.factory.parsing.CompositeComponentDefinition $r3;
        java.util.Stack $r1;

        r0 := @this: org.springframework.beans.factory.xml.ParserContext;

        $r1 = r0.<org.springframework.beans.factory.xml.ParserContext: java.util.Stack containingComponents>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r3 = (org.springframework.beans.factory.parsing.CompositeComponentDefinition) $r2;

        return $r3;
    }

    public void popAndRegisterContainingComponent()
    {
        org.springframework.beans.factory.parsing.CompositeComponentDefinition $r1;
        org.springframework.beans.factory.xml.ParserContext r0;

        r0 := @this: org.springframework.beans.factory.xml.ParserContext;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.parsing.CompositeComponentDefinition popContainingComponent()>();

        virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: void registerComponent(org.springframework.beans.factory.parsing.ComponentDefinition)>($r1);

        return;
    }

    public void registerComponent(org.springframework.beans.factory.parsing.ComponentDefinition)
    {
        org.springframework.beans.factory.parsing.ComponentDefinition r2;
        org.springframework.beans.factory.xml.ParserContext r0;
        org.springframework.beans.factory.xml.XmlReaderContext $r3;
        org.springframework.beans.factory.parsing.CompositeComponentDefinition $r1;

        r0 := @this: org.springframework.beans.factory.xml.ParserContext;

        r2 := @parameter0: org.springframework.beans.factory.parsing.ComponentDefinition;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.parsing.CompositeComponentDefinition getContainingComponent()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<org.springframework.beans.factory.parsing.CompositeComponentDefinition: void addNestedComponent(org.springframework.beans.factory.parsing.ComponentDefinition)>(r2);

        goto label2;

     label1:
        $r3 = r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext readerContext>;

        virtualinvoke $r3.<org.springframework.beans.factory.xml.XmlReaderContext: void fireComponentRegistered(org.springframework.beans.factory.parsing.ComponentDefinition)>(r2);

     label2:
        return;
    }

    public void registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
    {
        org.springframework.beans.factory.parsing.BeanComponentDefinition r0;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r2;
        org.springframework.beans.factory.xml.ParserContext r1;

        r1 := @this: org.springframework.beans.factory.xml.ParserContext;

        r0 := @parameter0: org.springframework.beans.factory.parsing.BeanComponentDefinition;

        $r2 = virtualinvoke r1.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        staticinvoke <org.springframework.beans.factory.support.BeanDefinitionReaderUtils: void registerBeanDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.support.BeanDefinitionRegistry)>(r0, $r2);

        virtualinvoke r1.<org.springframework.beans.factory.xml.ParserContext: void registerComponent(org.springframework.beans.factory.parsing.ComponentDefinition)>(r0);

        return;
    }
}
