public class org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont extends org.apache.pdfbox.pdmodel.font.PDType1Font
{
    private static final int BUFFERSIZE;
    private org.apache.fontbox.afm.FontMetric metric;

    public void <init>(org.apache.pdfbox.pdmodel.PDDocument, java.lang.String) throws java.io.IOException
    {
        java.io.BufferedInputStream $r14, $r17;
        org.apache.pdfbox.pdmodel.PDDocument r12;
        java.io.FileInputStream $r13, $r16;
        org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont r0;
        int $i1, $i3;
        java.lang.StringBuilder $r7, $r8, $r15;
        java.lang.String r3, $r5, $r6, $r9;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont;

        r12 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: void <init>()>();

        $r14 = new java.io.BufferedInputStream;

        $r13 = new java.io.FileInputStream;

        specialinvoke $r13.<java.io.FileInputStream: void <init>(java.lang.String)>(r3);

        $i1 = (int) 65535;

        specialinvoke $r14.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r13, $i1);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(".AFM", "");

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(".afm", "");

        $r7 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".pfb");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new java.io.BufferedInputStream;

        $r16 = new java.io.FileInputStream;

        specialinvoke $r16.<java.io.FileInputStream: void <init>(java.lang.String)>($r9);

        $i3 = (int) 65535;

        specialinvoke $r17.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r16, $i3);

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: void load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)>(r12, $r14, $r17);

        return;
    }

    public void <init>(org.apache.pdfbox.pdmodel.PDDocument, java.io.InputStream, java.io.InputStream) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocument r1;
        org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont r0;
        java.io.InputStream r2, r3;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: java.io.InputStream;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: void <init>()>();

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: void load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)>(r1, r2, r3);

        return;
    }

    private void load(org.apache.pdfbox.pdmodel.PDDocument, java.io.InputStream, java.io.InputStream) throws java.io.IOException
    {
        java.lang.Float $r50, $r52, $r53;
        org.apache.fontbox.pfb.PfbParser $r62;
        byte $b9;
        org.apache.fontbox.afm.FontMetric $r11, $r13, $r15, $r17, $r19, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r32;
        org.apache.pdfbox.pdmodel.PDDocument r5;
        java.lang.StringBuilder $r56, $r57, $r64;
        org.apache.fontbox.util.BoundingBox $r23;
        java.util.ArrayList $r68;
        org.apache.fontbox.afm.AFMParser $r65;
        java.lang.String $r16, $r18, $r20, $r31, $r38, $r39, $r40, $r41, $r42, $r43, $r51, $r58;
        org.apache.pdfbox.pdmodel.common.PDStream $r63;
        org.apache.pdfbox.encoding.Encoding $r34;
        int[] $r8, $r59;
        org.apache.pdfbox.encoding.AFMEncoding $r66;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary $r61;
        java.util.List $r33;
        org.apache.fontbox.afm.CharMetric r60;
        org.apache.pdfbox.encoding.DictionaryEncoding $r14;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, i13, i14, i15, i16, $i17;
        org.apache.pdfbox.cos.COSStream $r7, $r54;
        java.util.Iterator $r36;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r67;
        java.lang.Object $r37, $r44, $r45, $r46, $r47, $r48, $r49;
        java.io.InputStream r3, $r6, r10;

        r1 := @this: org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont;

        r5 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r10 := @parameter1: java.io.InputStream;

        r3 := @parameter2: java.io.InputStream;

        $r61 = new org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary;

        specialinvoke $r61.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary: void <init>()>();

        virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: void setFontDescriptor(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary)>($r61);

        $r62 = new org.apache.fontbox.pfb.PfbParser;

        specialinvoke $r62.<org.apache.fontbox.pfb.PfbParser: void <init>(java.io.InputStream)>(r3);

        virtualinvoke r3.<java.io.InputStream: void close()>();

        $r63 = new org.apache.pdfbox.pdmodel.common.PDStream;

        $r6 = virtualinvoke $r62.<org.apache.fontbox.pfb.PfbParser: java.io.InputStream getInputStream()>();

        specialinvoke $r63.<org.apache.pdfbox.pdmodel.common.PDStream: void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)>(r5, $r6, 0);

        $r7 = virtualinvoke $r63.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getStream()>();

        $i0 = virtualinvoke $r62.<org.apache.fontbox.pfb.PfbParser: int size()>();

        virtualinvoke $r7.<org.apache.pdfbox.cos.COSStream: void setInt(java.lang.String,int)>("Length", $i0);

        i13 = 0;

     label01:
        $r8 = virtualinvoke $r62.<org.apache.fontbox.pfb.PfbParser: int[] getLengths()>();

        $i1 = lengthof $r8;

        if i13 >= $i1 goto label02;

        $r54 = virtualinvoke $r63.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getStream()>();

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Length");

        $i11 = i13 + 1;

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        $r59 = virtualinvoke $r62.<org.apache.fontbox.pfb.PfbParser: int[] getLengths()>();

        $i12 = $r59[i13];

        virtualinvoke $r54.<org.apache.pdfbox.cos.COSStream: void setInt(java.lang.String,int)>($r58, $i12);

        i13 = i13 + 1;

        goto label01;

     label02:
        virtualinvoke $r63.<org.apache.pdfbox.pdmodel.common.PDStream: void addCompression()>();

        virtualinvoke $r61.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary: void setFontFile(org.apache.pdfbox.pdmodel.common.PDStream)>($r63);

        $r65 = new org.apache.fontbox.afm.AFMParser;

        specialinvoke $r65.<org.apache.fontbox.afm.AFMParser: void <init>(java.io.InputStream)>(r10);

        virtualinvoke $r65.<org.apache.fontbox.afm.AFMParser: void parse()>();

        $r11 = virtualinvoke $r65.<org.apache.fontbox.afm.AFMParser: org.apache.fontbox.afm.FontMetric getResult()>();

        r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.fontbox.afm.FontMetric metric> = $r11;

        $r66 = new org.apache.pdfbox.encoding.AFMEncoding;

        $r13 = r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.fontbox.afm.FontMetric metric>;

        specialinvoke $r66.<org.apache.pdfbox.encoding.AFMEncoding: void <init>(org.apache.fontbox.afm.FontMetric)>($r13);

        $r14 = specialinvoke r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.pdfbox.encoding.DictionaryEncoding afmToDictionary(org.apache.pdfbox.encoding.AFMEncoding)>($r66);

        virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: void setFontEncoding(org.apache.pdfbox.encoding.Encoding)>($r14);

        $r15 = r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.fontbox.afm.FontMetric metric>;

        $r16 = virtualinvoke $r15.<org.apache.fontbox.afm.FontMetric: java.lang.String getFontName()>();

        virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: void setBaseFont(java.lang.String)>($r16);

        $r17 = r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.fontbox.afm.FontMetric metric>;

        $r18 = virtualinvoke $r17.<org.apache.fontbox.afm.FontMetric: java.lang.String getFontName()>();

        virtualinvoke $r61.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary: void setFontName(java.lang.String)>($r18);

        $r19 = r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.fontbox.afm.FontMetric metric>;

        $r20 = virtualinvoke $r19.<org.apache.fontbox.afm.FontMetric: java.lang.String getFamilyName()>();

        virtualinvoke $r61.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary: void setFontFamily(java.lang.String)>($r20);

        virtualinvoke $r61.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary: void setNonSymbolic(boolean)>(1);

        $r67 = new org.apache.pdfbox.pdmodel.common.PDRectangle;

        $r22 = r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.fontbox.afm.FontMetric metric>;

        $r23 = virtualinvoke $r22.<org.apache.fontbox.afm.FontMetric: org.apache.fontbox.util.BoundingBox getFontBBox()>();

        specialinvoke $r67.<org.apache.pdfbox.pdmodel.common.PDRectangle: void <init>(org.apache.fontbox.util.BoundingBox)>($r23);

        virtualinvoke $r61.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary: void setFontBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle)>($r67);

        $r24 = r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.fontbox.afm.FontMetric metric>;

        $f0 = virtualinvoke $r24.<org.apache.fontbox.afm.FontMetric: float getItalicAngle()>();

        virtualinvoke $r61.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary: void setItalicAngle(float)>($f0);

        $r25 = r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.fontbox.afm.FontMetric metric>;

        $f1 = virtualinvoke $r25.<org.apache.fontbox.afm.FontMetric: float getAscender()>();

        virtualinvoke $r61.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary: void setAscent(float)>($f1);

        $r26 = r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.fontbox.afm.FontMetric metric>;

        $f2 = virtualinvoke $r26.<org.apache.fontbox.afm.FontMetric: float getDescender()>();

        virtualinvoke $r61.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary: void setDescent(float)>($f2);

        $r27 = r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.fontbox.afm.FontMetric metric>;

        $f3 = virtualinvoke $r27.<org.apache.fontbox.afm.FontMetric: float getCapHeight()>();

        virtualinvoke $r61.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary: void setCapHeight(float)>($f3);

        $r28 = r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.fontbox.afm.FontMetric metric>;

        $f4 = virtualinvoke $r28.<org.apache.fontbox.afm.FontMetric: float getXHeight()>();

        virtualinvoke $r61.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary: void setXHeight(float)>($f4);

        $r29 = r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.fontbox.afm.FontMetric metric>;

        $f5 = virtualinvoke $r29.<org.apache.fontbox.afm.FontMetric: float getAverageCharacterWidth()>();

        virtualinvoke $r61.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary: void setAverageWidth(float)>($f5);

        $r30 = r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.fontbox.afm.FontMetric metric>;

        $r31 = virtualinvoke $r30.<org.apache.fontbox.afm.FontMetric: java.lang.String getCharacterSet()>();

        virtualinvoke $r61.<org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary: void setCharacterSet(java.lang.String)>($r31);

        i14 = 255;

        i15 = 0;

        $r32 = r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.fontbox.afm.FontMetric metric>;

        $r33 = virtualinvoke $r32.<org.apache.fontbox.afm.FontMetric: java.util.List getCharMetrics()>();

        $r34 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.pdfbox.encoding.Encoding getFontEncoding()>();

        $r68 = new java.util.ArrayList;

        specialinvoke $r68.<java.util.ArrayList: void <init>(int)>(256);

        $r36 = interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>();

        i16 = 0;

     label03:
        if i16 >= 256 goto label04;

        $f10 = (float) 250;

        $r53 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f10);

        interfaceinvoke $r68.<java.util.List: boolean add(java.lang.Object)>($r53);

        i16 = i16 + 1;

        goto label03;

     label04:
        $z0 = interfaceinvoke $r36.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r37 = interfaceinvoke $r36.<java.util.Iterator: java.lang.Object next()>();

        r60 = (org.apache.fontbox.afm.CharMetric) $r37;

        $i2 = virtualinvoke r60.<org.apache.fontbox.afm.CharMetric: int getCharacterCode()>();

        if $i2 <= 0 goto label06;

        i14 = staticinvoke <java.lang.Math: int min(int,int)>(i14, $i2);

        i15 = staticinvoke <java.lang.Math: int max(int,int)>(i15, $i2);

        $f6 = virtualinvoke r60.<org.apache.fontbox.afm.CharMetric: float getWx()>();

        $b9 = $f6 cmpl 0.0F;

        $i17 = (int) $b9;

        if $i17 <= 0 goto label12;

        $f7 = virtualinvoke r60.<org.apache.fontbox.afm.CharMetric: float getWx()>();

        $i10 = staticinvoke <java.lang.Math: int round(float)>($f7);

        $f8 = (float) $i10;

        $r50 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f8);

        interfaceinvoke $r68.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i2, $r50);

        $r51 = virtualinvoke r60.<org.apache.fontbox.afm.CharMetric: java.lang.String getName()>();

        $z7 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>("germandbls");

        if $z7 == 0 goto label05;

        if $i2 == 223 goto label05;

        $f9 = (float) $i10;

        $r52 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f9);

        interfaceinvoke $r68.<java.util.List: java.lang.Object set(int,java.lang.Object)>(223, $r52);

     label05:
        goto label12;

     label06:
        $r38 = virtualinvoke r60.<org.apache.fontbox.afm.CharMetric: java.lang.String getName()>();

        $z1 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>("adieresis");

        if $z1 == 0 goto label07;

        $i8 = virtualinvoke $r34.<org.apache.pdfbox.encoding.Encoding: int getCode(java.lang.String)>("a");

        $r49 = interfaceinvoke $r68.<java.util.List: java.lang.Object get(int)>($i8);

        interfaceinvoke $r68.<java.util.List: java.lang.Object set(int,java.lang.Object)>(228, $r49);

        goto label12;

     label07:
        $r39 = virtualinvoke r60.<org.apache.fontbox.afm.CharMetric: java.lang.String getName()>();

        $z2 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>("odieresis");

        if $z2 == 0 goto label08;

        $i7 = virtualinvoke $r34.<org.apache.pdfbox.encoding.Encoding: int getCode(java.lang.String)>("o");

        $r48 = interfaceinvoke $r68.<java.util.List: java.lang.Object get(int)>($i7);

        interfaceinvoke $r68.<java.util.List: java.lang.Object set(int,java.lang.Object)>(246, $r48);

        goto label12;

     label08:
        $r40 = virtualinvoke r60.<org.apache.fontbox.afm.CharMetric: java.lang.String getName()>();

        $z3 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>("udieresis");

        if $z3 == 0 goto label09;

        $i6 = virtualinvoke $r34.<org.apache.pdfbox.encoding.Encoding: int getCode(java.lang.String)>("u");

        $r47 = interfaceinvoke $r68.<java.util.List: java.lang.Object get(int)>($i6);

        interfaceinvoke $r68.<java.util.List: java.lang.Object set(int,java.lang.Object)>(252, $r47);

        goto label12;

     label09:
        $r41 = virtualinvoke r60.<org.apache.fontbox.afm.CharMetric: java.lang.String getName()>();

        $z4 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>("Adieresis");

        if $z4 == 0 goto label10;

        $i5 = virtualinvoke $r34.<org.apache.pdfbox.encoding.Encoding: int getCode(java.lang.String)>("A");

        $r46 = interfaceinvoke $r68.<java.util.List: java.lang.Object get(int)>($i5);

        interfaceinvoke $r68.<java.util.List: java.lang.Object set(int,java.lang.Object)>(196, $r46);

        goto label12;

     label10:
        $r42 = virtualinvoke r60.<org.apache.fontbox.afm.CharMetric: java.lang.String getName()>();

        $z5 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>("Odieresis");

        if $z5 == 0 goto label11;

        $i4 = virtualinvoke $r34.<org.apache.pdfbox.encoding.Encoding: int getCode(java.lang.String)>("O");

        $r45 = interfaceinvoke $r68.<java.util.List: java.lang.Object get(int)>($i4);

        interfaceinvoke $r68.<java.util.List: java.lang.Object set(int,java.lang.Object)>(214, $r45);

        goto label12;

     label11:
        $r43 = virtualinvoke r60.<org.apache.fontbox.afm.CharMetric: java.lang.String getName()>();

        $z6 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>("Udieresis");

        if $z6 == 0 goto label12;

        $i3 = virtualinvoke $r34.<org.apache.pdfbox.encoding.Encoding: int getCode(java.lang.String)>("U");

        $r44 = interfaceinvoke $r68.<java.util.List: java.lang.Object get(int)>($i3);

        interfaceinvoke $r68.<java.util.List: java.lang.Object set(int,java.lang.Object)>(220, $r44);

     label12:
        goto label04;

     label13:
        virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: void setFirstChar(int)>(0);

        virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: void setLastChar(int)>(255);

        virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: void setWidths(java.util.List)>($r68);

        return;
    }

    private org.apache.pdfbox.encoding.DictionaryEncoding afmToDictionary(org.apache.pdfbox.encoding.AFMEncoding) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSArray $r0;
        org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont r19;
        org.apache.pdfbox.cos.COSInteger $r1;
        int i0;
        java.lang.String $r17;
        org.apache.pdfbox.encoding.AFMEncoding r16;
        org.apache.pdfbox.cos.COSName $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r18;
        org.apache.pdfbox.cos.COSDictionary $r9;
        org.apache.pdfbox.encoding.DictionaryEncoding $r15;

        r19 := @this: org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont;

        r16 := @parameter0: org.apache.pdfbox.encoding.AFMEncoding;

        $r0 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r0.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ZERO>;

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r1);

        i0 = 0;

     label1:
        if i0 >= 256 goto label2;

        $r17 = virtualinvoke r16.<org.apache.pdfbox.encoding.AFMEncoding: java.lang.String getName(int)>(i0);

        $r18 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>($r17);

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r18);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("germandbls");

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(224, $r2);

        $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("adieresis");

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(229, $r3);

        $r4 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("odieresis");

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(247, $r4);

        $r5 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("udieresis");

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(253, $r5);

        $r6 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("Adieresis");

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(197, $r6);

        $r7 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("Odieresis");

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(215, $r7);

        $r8 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("Udieresis");

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(221, $r8);

        $r9 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r9.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME>;

        $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ENCODING>;

        virtualinvoke $r9.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r11, $r10);

        $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DIFFERENCES>;

        virtualinvoke $r9.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r12, $r0);

        $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BASE_ENCODING>;

        $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName STANDARD_ENCODING>;

        virtualinvoke $r9.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r14, $r13);

        $r15 = new org.apache.pdfbox.encoding.DictionaryEncoding;

        specialinvoke $r15.<org.apache.pdfbox.encoding.DictionaryEncoding: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r9);

        return $r15;
    }

    public void clear()
    {
        org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont r0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: void clear()>();

        r0.<org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: org.apache.fontbox.afm.FontMetric metric> = null;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.pdfbox.pdmodel.font.PDType1AfmPfbFont: int BUFFERSIZE> = 65535;

        return;
    }
}
