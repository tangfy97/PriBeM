public class org.apache.http.impl.client.ProxyClient extends java.lang.Object
{
    private final org.apache.http.protocol.HttpProcessor httpProcessor;
    private final org.apache.http.protocol.HttpRequestExecutor requestExec;
    private final org.apache.http.impl.client.ProxyAuthenticationStrategy proxyAuthStrategy;
    private final org.apache.http.impl.client.HttpAuthenticator authenticator;
    private final org.apache.http.auth.AuthState proxyAuthState;
    private final org.apache.http.auth.AuthSchemeRegistry authSchemeRegistry;
    private final org.apache.http.ConnectionReuseStrategy reuseStrategy;
    private final org.apache.http.params.HttpParams params;

    public void <init>(org.apache.http.params.HttpParams)
    {
        org.apache.http.protocol.RequestTargetHost $r5;
        org.apache.http.client.protocol.RequestProxyAuthentication $r8;
        org.apache.http.protocol.HttpRequestExecutor $r9;
        org.apache.http.impl.client.ProxyAuthenticationStrategy $r10;
        org.apache.http.impl.auth.BasicSchemeFactory $r14;
        org.apache.http.client.protocol.RequestClientConnControl $r6;
        org.apache.http.protocol.RequestContent $r4;
        org.apache.http.protocol.ImmutableHttpProcessor $r2;
        org.apache.http.impl.auth.SPNegoSchemeFactory $r20;
        org.apache.http.impl.auth.KerberosSchemeFactory $r22;
        org.apache.http.impl.client.ProxyClient r0;
        org.apache.http.protocol.RequestUserAgent $r7;
        org.apache.http.impl.DefaultConnectionReuseStrategy $r24;
        java.lang.IllegalArgumentException $r25;
        org.apache.http.auth.AuthSchemeRegistry $r13, $r15, $r17, $r19, $r21, $r23;
        org.apache.http.impl.auth.DigestSchemeFactory $r16;
        org.apache.http.impl.auth.NTLMSchemeFactory $r18;
        org.apache.http.impl.client.HttpAuthenticator $r11;
        org.apache.http.HttpRequestInterceptor[] $r3;
        org.apache.http.params.HttpParams r1;
        org.apache.http.auth.AuthState $r12;

        r0 := @this: org.apache.http.impl.client.ProxyClient;

        r1 := @parameter0: org.apache.http.params.HttpParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r25;

     label1:
        $r2 = new org.apache.http.protocol.ImmutableHttpProcessor;

        $r3 = newarray (org.apache.http.HttpRequestInterceptor)[5];

        $r4 = new org.apache.http.protocol.RequestContent;

        specialinvoke $r4.<org.apache.http.protocol.RequestContent: void <init>()>();

        $r3[0] = $r4;

        $r5 = new org.apache.http.protocol.RequestTargetHost;

        specialinvoke $r5.<org.apache.http.protocol.RequestTargetHost: void <init>()>();

        $r3[1] = $r5;

        $r6 = new org.apache.http.client.protocol.RequestClientConnControl;

        specialinvoke $r6.<org.apache.http.client.protocol.RequestClientConnControl: void <init>()>();

        $r3[2] = $r6;

        $r7 = new org.apache.http.protocol.RequestUserAgent;

        specialinvoke $r7.<org.apache.http.protocol.RequestUserAgent: void <init>()>();

        $r3[3] = $r7;

        $r8 = new org.apache.http.client.protocol.RequestProxyAuthentication;

        specialinvoke $r8.<org.apache.http.client.protocol.RequestProxyAuthentication: void <init>()>();

        $r3[4] = $r8;

        specialinvoke $r2.<org.apache.http.protocol.ImmutableHttpProcessor: void <init>(org.apache.http.HttpRequestInterceptor[])>($r3);

        r0.<org.apache.http.impl.client.ProxyClient: org.apache.http.protocol.HttpProcessor httpProcessor> = $r2;

        $r9 = new org.apache.http.protocol.HttpRequestExecutor;

        specialinvoke $r9.<org.apache.http.protocol.HttpRequestExecutor: void <init>()>();

        r0.<org.apache.http.impl.client.ProxyClient: org.apache.http.protocol.HttpRequestExecutor requestExec> = $r9;

        $r10 = new org.apache.http.impl.client.ProxyAuthenticationStrategy;

        specialinvoke $r10.<org.apache.http.impl.client.ProxyAuthenticationStrategy: void <init>()>();

        r0.<org.apache.http.impl.client.ProxyClient: org.apache.http.impl.client.ProxyAuthenticationStrategy proxyAuthStrategy> = $r10;

        $r11 = new org.apache.http.impl.client.HttpAuthenticator;

        specialinvoke $r11.<org.apache.http.impl.client.HttpAuthenticator: void <init>()>();

        r0.<org.apache.http.impl.client.ProxyClient: org.apache.http.impl.client.HttpAuthenticator authenticator> = $r11;

        $r12 = new org.apache.http.auth.AuthState;

        specialinvoke $r12.<org.apache.http.auth.AuthState: void <init>()>();

        r0.<org.apache.http.impl.client.ProxyClient: org.apache.http.auth.AuthState proxyAuthState> = $r12;

        $r13 = new org.apache.http.auth.AuthSchemeRegistry;

        specialinvoke $r13.<org.apache.http.auth.AuthSchemeRegistry: void <init>()>();

        r0.<org.apache.http.impl.client.ProxyClient: org.apache.http.auth.AuthSchemeRegistry authSchemeRegistry> = $r13;

        $r15 = r0.<org.apache.http.impl.client.ProxyClient: org.apache.http.auth.AuthSchemeRegistry authSchemeRegistry>;

        $r14 = new org.apache.http.impl.auth.BasicSchemeFactory;

        specialinvoke $r14.<org.apache.http.impl.auth.BasicSchemeFactory: void <init>()>();

        virtualinvoke $r15.<org.apache.http.auth.AuthSchemeRegistry: void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory)>("Basic", $r14);

        $r17 = r0.<org.apache.http.impl.client.ProxyClient: org.apache.http.auth.AuthSchemeRegistry authSchemeRegistry>;

        $r16 = new org.apache.http.impl.auth.DigestSchemeFactory;

        specialinvoke $r16.<org.apache.http.impl.auth.DigestSchemeFactory: void <init>()>();

        virtualinvoke $r17.<org.apache.http.auth.AuthSchemeRegistry: void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory)>("Digest", $r16);

        $r19 = r0.<org.apache.http.impl.client.ProxyClient: org.apache.http.auth.AuthSchemeRegistry authSchemeRegistry>;

        $r18 = new org.apache.http.impl.auth.NTLMSchemeFactory;

        specialinvoke $r18.<org.apache.http.impl.auth.NTLMSchemeFactory: void <init>()>();

        virtualinvoke $r19.<org.apache.http.auth.AuthSchemeRegistry: void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory)>("NTLM", $r18);

        $r21 = r0.<org.apache.http.impl.client.ProxyClient: org.apache.http.auth.AuthSchemeRegistry authSchemeRegistry>;

        $r20 = new org.apache.http.impl.auth.SPNegoSchemeFactory;

        specialinvoke $r20.<org.apache.http.impl.auth.SPNegoSchemeFactory: void <init>()>();

        virtualinvoke $r21.<org.apache.http.auth.AuthSchemeRegistry: void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory)>("negotiate", $r20);

        $r23 = r0.<org.apache.http.impl.client.ProxyClient: org.apache.http.auth.AuthSchemeRegistry authSchemeRegistry>;

        $r22 = new org.apache.http.impl.auth.KerberosSchemeFactory;

        specialinvoke $r22.<org.apache.http.impl.auth.KerberosSchemeFactory: void <init>()>();

        virtualinvoke $r23.<org.apache.http.auth.AuthSchemeRegistry: void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory)>("Kerberos", $r22);

        $r24 = new org.apache.http.impl.DefaultConnectionReuseStrategy;

        specialinvoke $r24.<org.apache.http.impl.DefaultConnectionReuseStrategy: void <init>()>();

        r0.<org.apache.http.impl.client.ProxyClient: org.apache.http.ConnectionReuseStrategy reuseStrategy> = $r24;

        r0.<org.apache.http.impl.client.ProxyClient: org.apache.http.params.HttpParams params> = r1;

        return;
    }

    public void <init>()
    {
        org.apache.http.impl.client.ProxyClient r0;
        org.apache.http.params.BasicHttpParams $r1;

        r0 := @this: org.apache.http.impl.client.ProxyClient;

        $r1 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r1.<org.apache.http.params.BasicHttpParams: void <init>()>();

        specialinvoke r0.<org.apache.http.impl.client.ProxyClient: void <init>(org.apache.http.params.HttpParams)>($r1);

        return;
    }

    public org.apache.http.params.HttpParams getParams()
    {
        org.apache.http.impl.client.ProxyClient r0;
        org.apache.http.params.HttpParams $r1;

        r0 := @this: org.apache.http.impl.client.ProxyClient;

        $r1 = r0.<org.apache.http.impl.client.ProxyClient: org.apache.http.params.HttpParams params>;

        return $r1;
    }

    public org.apache.http.auth.AuthSchemeRegistry getAuthSchemeRegistry()
    {
        org.apache.http.impl.client.ProxyClient r0;
        org.apache.http.auth.AuthSchemeRegistry $r1;

        r0 := @this: org.apache.http.impl.client.ProxyClient;

        $r1 = r0.<org.apache.http.impl.client.ProxyClient: org.apache.http.auth.AuthSchemeRegistry authSchemeRegistry>;

        return $r1;
    }

    public java.net.Socket tunnel(org.apache.http.HttpHost, org.apache.http.HttpHost, org.apache.http.auth.Credentials) throws java.io.IOException, org.apache.http.HttpException
    {
        org.apache.http.StatusLine $r26, $r31, $r37, $r49;
        org.apache.http.impl.client.ProxyClient r9;
        org.apache.http.HttpException $r46;
        java.lang.StringBuilder $r6, $r35, $r36, $r38, $r47, $r48, $r50;
        org.apache.http.protocol.HttpRequestExecutor $r20, $r21, $r25;
        org.apache.http.message.BasicHttpRequest $r12;
        org.apache.http.auth.Credentials r16;
        java.lang.String $r5, $r7, $r8, $r39, $r51, $r53;
        org.apache.http.impl.client.TunnelRefusedException $r34;
        org.apache.http.protocol.HttpProcessor $r19, $r24;
        org.apache.http.impl.client.ProxyClient$ProxyConnection $r0;
        org.apache.http.ProtocolVersion $r11;
        org.apache.http.auth.AuthScope $r15;
        org.apache.http.params.HttpParams $r10, $r13, $r23, $r27, $r54;
        org.apache.http.HttpResponse $r22;
        org.apache.http.HttpHost r2, r4;
        org.apache.http.impl.client.ProxyAuthenticationStrategy $r29, $r42;
        org.apache.http.impl.client.BasicCredentialsProvider $r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.http.HttpEntity $r33, $r45;
        org.apache.http.auth.AuthSchemeRegistry $r18;
        org.apache.http.protocol.BasicHttpContext $r3;
        org.apache.http.auth.AuthState $r17, $r28, $r41;
        org.apache.http.entity.BufferedHttpEntity $r40;
        java.net.Socket $r32, $r52;
        org.apache.http.conn.routing.HttpRoute $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        org.apache.http.impl.client.HttpAuthenticator $r30, $r43;
        org.apache.http.ConnectionReuseStrategy $r44;

        r9 := @this: org.apache.http.impl.client.ProxyClient;

        r2 := @parameter0: org.apache.http.HttpHost;

        r4 := @parameter1: org.apache.http.HttpHost;

        r16 := @parameter2: org.apache.http.auth.Credentials;

        $r0 = new org.apache.http.impl.client.ProxyClient$ProxyConnection;

        $r1 = new org.apache.http.conn.routing.HttpRoute;

        specialinvoke $r1.<org.apache.http.conn.routing.HttpRoute: void <init>(org.apache.http.HttpHost)>(r2);

        specialinvoke $r0.<org.apache.http.impl.client.ProxyClient$ProxyConnection: void <init>(org.apache.http.conn.routing.HttpRoute)>($r1);

        $r3 = new org.apache.http.protocol.BasicHttpContext;

        specialinvoke $r3.<org.apache.http.protocol.BasicHttpContext: void <init>()>();

     label1:
        $z0 = virtualinvoke $r0.<org.apache.http.impl.client.ProxyClient$ProxyConnection: boolean isOpen()>();

        if $z0 != 0 goto label2;

        $r52 = new java.net.Socket;

        $r53 = virtualinvoke r2.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $i5 = virtualinvoke r2.<org.apache.http.HttpHost: int getPort()>();

        specialinvoke $r52.<java.net.Socket: void <init>(java.lang.String,int)>($r53, $i5);

        $r54 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.params.HttpParams params>;

        virtualinvoke $r0.<org.apache.http.impl.client.ProxyClient$ProxyConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>($r52, $r54);

     label2:
        $r5 = virtualinvoke r4.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $i0 = virtualinvoke r4.<org.apache.http.HttpHost: int getPort()>();

        i6 = $i0;

        if $i0 >= 0 goto label3;

        i6 = 80;

     label3:
        $r6 = new java.lang.StringBuilder;

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i2 = $i1 + 6;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>($i2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i6);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.params.HttpParams params>;

        $r11 = staticinvoke <org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>($r10);

        $r12 = new org.apache.http.message.BasicHttpRequest;

        specialinvoke $r12.<org.apache.http.message.BasicHttpRequest: void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)>("CONNECT", $r8, $r11);

        $r13 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r12.<org.apache.http.HttpRequest: void setParams(org.apache.http.params.HttpParams)>($r13);

        $r14 = new org.apache.http.impl.client.BasicCredentialsProvider;

        specialinvoke $r14.<org.apache.http.impl.client.BasicCredentialsProvider: void <init>()>();

        $r15 = new org.apache.http.auth.AuthScope;

        specialinvoke $r15.<org.apache.http.auth.AuthScope: void <init>(org.apache.http.HttpHost)>(r2);

        virtualinvoke $r14.<org.apache.http.impl.client.BasicCredentialsProvider: void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials)>($r15, r16);

        interfaceinvoke $r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.target_host", r4);

        interfaceinvoke $r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.proxy_host", r2);

        interfaceinvoke $r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.connection", $r0);

        interfaceinvoke $r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.request", $r12);

        $r17 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.auth.AuthState proxyAuthState>;

        interfaceinvoke $r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.auth.proxy-scope", $r17);

        interfaceinvoke $r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.auth.credentials-provider", $r14);

        $r18 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.auth.AuthSchemeRegistry authSchemeRegistry>;

        interfaceinvoke $r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.authscheme-registry", $r18);

        $r20 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r19 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.protocol.HttpProcessor httpProcessor>;

        virtualinvoke $r20.<org.apache.http.protocol.HttpRequestExecutor: void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext)>($r12, $r19, $r3);

        $r21 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r22 = virtualinvoke $r21.<org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>($r12, $r0, $r3);

        $r23 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r22.<org.apache.http.HttpResponse: void setParams(org.apache.http.params.HttpParams)>($r23);

        $r25 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r24 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.protocol.HttpProcessor httpProcessor>;

        virtualinvoke $r25.<org.apache.http.protocol.HttpRequestExecutor: void postProcess(org.apache.http.HttpResponse,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext)>($r22, $r24, $r3);

        $r26 = interfaceinvoke $r22.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i3 = interfaceinvoke $r26.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i3 >= 200 goto label4;

        $r46 = new org.apache.http.HttpException;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected response to CONNECT request: ");

        $r49 = interfaceinvoke $r22.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<org.apache.http.HttpException: void <init>(java.lang.String)>($r51);

        throw $r46;

     label4:
        $r27 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.params.HttpParams params>;

        $z1 = staticinvoke <org.apache.http.client.params.HttpClientParams: boolean isAuthenticating(org.apache.http.params.HttpParams)>($r27);

        if $z1 == 0 goto label6;

        $r30 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.impl.client.HttpAuthenticator authenticator>;

        $r29 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.impl.client.ProxyAuthenticationStrategy proxyAuthStrategy>;

        $r28 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.auth.AuthState proxyAuthState>;

        $z2 = virtualinvoke $r30.<org.apache.http.impl.client.HttpAuthenticator: boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext)>(r2, $r22, $r29, $r28, $r3);

        if $z2 == 0 goto label7;

        $r43 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.impl.client.HttpAuthenticator authenticator>;

        $r42 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.impl.client.ProxyAuthenticationStrategy proxyAuthStrategy>;

        $r41 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.auth.AuthState proxyAuthState>;

        $z3 = virtualinvoke $r43.<org.apache.http.impl.client.HttpAuthenticator: boolean authenticate(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext)>(r2, $r22, $r42, $r41, $r3);

        if $z3 == 0 goto label7;

        $r44 = r9.<org.apache.http.impl.client.ProxyClient: org.apache.http.ConnectionReuseStrategy reuseStrategy>;

        $z4 = interfaceinvoke $r44.<org.apache.http.ConnectionReuseStrategy: boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>($r22, $r3);

        if $z4 == 0 goto label5;

        $r45 = interfaceinvoke $r22.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        staticinvoke <org.apache.http.util.EntityUtils: void consume(org.apache.http.HttpEntity)>($r45);

        goto label6;

     label5:
        virtualinvoke $r0.<org.apache.http.impl.client.ProxyClient$ProxyConnection: void close()>();

     label6:
        goto label1;

     label7:
        $r31 = interfaceinvoke $r22.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i4 = interfaceinvoke $r31.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i4 <= 299 goto label9;

        $r33 = interfaceinvoke $r22.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if $r33 == null goto label8;

        $r40 = new org.apache.http.entity.BufferedHttpEntity;

        specialinvoke $r40.<org.apache.http.entity.BufferedHttpEntity: void <init>(org.apache.http.HttpEntity)>($r33);

        interfaceinvoke $r22.<org.apache.http.HttpResponse: void setEntity(org.apache.http.HttpEntity)>($r40);

     label8:
        virtualinvoke $r0.<org.apache.http.impl.client.ProxyClient$ProxyConnection: void close()>();

        $r34 = new org.apache.http.impl.client.TunnelRefusedException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CONNECT refused by proxy: ");

        $r37 = interfaceinvoke $r22.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<org.apache.http.impl.client.TunnelRefusedException: void <init>(java.lang.String,org.apache.http.HttpResponse)>($r39, $r22);

        throw $r34;

     label9:
        $r32 = virtualinvoke $r0.<org.apache.http.impl.client.ProxyClient$ProxyConnection: java.net.Socket getSocket()>();

        return $r32;
    }
}
