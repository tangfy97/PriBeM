public class ucar.unidata.util.Format extends java.lang.Object
{

    public void <init>()
    {
        ucar.unidata.util.Format r0;

        r0 := @this: ucar.unidata.util.Format;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void tab(java.lang.StringBuffer, int, boolean)
    {
        java.lang.StringBuffer r0;
        int $i0, i1, $i2, i3;
        boolean z0;

        r0 := @parameter0: java.lang.StringBuffer;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        if i1 <= $i0 goto label3;

        virtualinvoke r0.<java.lang.StringBuffer: void setLength(int)>(i1);

        i3 = $i0;

     label1:
        if i3 >= i1 goto label2;

        virtualinvoke r0.<java.lang.StringBuffer: void setCharAt(int,char)>(i3, 32);

        i3 = i3 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        if z0 == 0 goto label4;

        $i2 = $i0 + 1;

        virtualinvoke r0.<java.lang.StringBuffer: void setLength(int)>($i2);

        virtualinvoke r0.<java.lang.StringBuffer: void setCharAt(int,char)>($i0, 32);

     label4:
        return;
    }

    public static void tab(java.lang.StringBuilder, int, boolean)
    {
        int $i0, i1, $i2, i3;
        java.lang.StringBuilder r0;
        boolean z0;

        r0 := @parameter0: java.lang.StringBuilder;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i0 = virtualinvoke r0.<java.lang.StringBuilder: int length()>();

        if i1 <= $i0 goto label3;

        virtualinvoke r0.<java.lang.StringBuilder: void setLength(int)>(i1);

        i3 = $i0;

     label1:
        if i3 >= i1 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: void setCharAt(int,char)>(i3, 32);

        i3 = i3 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        if z0 == 0 goto label4;

        $i2 = $i0 + 1;

        virtualinvoke r0.<java.lang.StringBuilder: void setLength(int)>($i2);

        virtualinvoke r0.<java.lang.StringBuilder: void setCharAt(int,char)>($i0, 32);

     label4:
        return;
    }

    public static java.lang.String s(java.lang.String, int)
    {
        int i0;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = staticinvoke <ucar.unidata.util.Format: java.lang.String pad(java.lang.String,int,boolean)>(r0, i0, 0);

        return $r1;
    }

    public static java.lang.String pad(java.lang.String, int, boolean)
    {
        int $i0, i1, $i2, i3, i4;
        java.lang.StringBuilder $r1;
        java.lang.String r0, $r2;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 < i1 goto label1;

        return r0;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(i1);

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        i3 = i1 - $i2;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(i3);

        i4 = 0;

     label2:
        if i4 >= i3 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: void setCharAt(int,char)>(i4, 32);

        i4 = i4 + 1;

        goto label2;

     label3:
        if z0 == 0 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        goto label5;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, r0);

     label5:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String i(int, int)
    {
        int i0, i1;
        java.lang.String $r0, $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r1 = staticinvoke <ucar.unidata.util.Format: java.lang.String pad(java.lang.String,int,boolean)>($r0, i1, 1);

        return $r1;
    }

    public static java.lang.String l(long, int)
    {
        int i1;
        long l0;
        java.lang.String $r0, $r1;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r0 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r1 = staticinvoke <ucar.unidata.util.Format: java.lang.String pad(java.lang.String,int,boolean)>($r0, i1, 1);

        return $r1;
    }

    public static java.lang.String d(double, int)
    {
        int i0, $i2;
        java.lang.String $r0, $r1;
        double d0;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        $i2 = (int) -1;

        $r0 = staticinvoke <ucar.unidata.util.Format: java.lang.String formatDouble(double,int,int)>(d0, i0, $i2);

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        return $r1;
    }

    public static java.lang.String d(double, int, int)
    {
        int i0, i1;
        java.lang.String $r0, $r1;
        double d0;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = staticinvoke <ucar.unidata.util.Format: java.lang.String d(double,int)>(d0, i0);

        $r1 = staticinvoke <ucar.unidata.util.Format: java.lang.String pad(java.lang.String,int,boolean)>($r0, i1, 1);

        return $r1;
    }

    public static java.lang.String dfrac(double, int)
    {
        int i0;
        java.lang.String $r0, $r1;
        double d0;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        $r0 = staticinvoke <ucar.unidata.util.Format: java.lang.String formatDouble(double,int,int)>(d0, 100, i0);

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        return $r1;
    }

    public static java.lang.String formatDouble(double, int, int)
    {
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15, r25, r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;
        java.lang.String $r0, $r2, $r4, $r11, $r16, $r18, r21, r22, r23, r24;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, $i16, i17, i18, i19, i20, i21, i22, i23, i24, $i25, $i26, $i28, $i30, $i32, $i34, $i35, $i37, $i38, $i40, $i42;
        double d0;
        char $c12, $c14;

        d0 := @parameter0: double;

        i6 := @parameter1: int;

        i5 := @parameter2: int;

        $r0 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(d0);

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 != 0 goto label01;

        $z2 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("+");

        if $z2 == 0 goto label02;

     label01:
        r21 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        r22 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

        goto label03;

     label02:
        r21 = "";

        r22 = $r0;

     label03:
        $i0 = virtualinvoke r22.<java.lang.String: int indexOf(int)>(69);

        i17 = $i0;

        $i28 = (int) -1;

        if $i0 != $i28 goto label04;

        i17 = virtualinvoke r22.<java.lang.String: int indexOf(int)>(101);

     label04:
        $i30 = (int) -1;

        if i17 != $i30 goto label05;

        r23 = r22;

        r24 = "";

        goto label06;

     label05:
        r23 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int,int)>(0, i17);

        r24 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int)>(i17);

     label06:
        $i1 = virtualinvoke r23.<java.lang.String: int indexOf(int)>(46);

        $i32 = (int) -1;

        if $i1 != $i32 goto label07;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>(r23);

        r25 = $r27;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

        r26 = $r28;

        goto label08;

     label07:
        $r29 = new java.lang.StringBuilder;

        $r2 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        r25 = $r29;

        $r30 = new java.lang.StringBuilder;

        $i2 = $i1 + 1;

        $r4 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int)>($i2);

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        r26 = $r30;

     label08:
        $i3 = virtualinvoke r25.<java.lang.StringBuilder: int length()>();

        i18 = $i3;

        $i4 = virtualinvoke r26.<java.lang.StringBuilder: int length()>();

        i19 = $i4;

        $i34 = (int) -1;

        if i5 == $i34 goto label14;

        if i5 != 0 goto label09;

        virtualinvoke r26.<java.lang.StringBuilder: void setLength(int)>(0);

        goto label13;

     label09:
        if i5 <= $i4 goto label12;

        i20 = i5 - $i4;

        i21 = 0;

     label10:
        if i21 >= i20 goto label11;

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        i21 = i21 + 1;

        goto label10;

     label11:
        goto label13;

     label12:
        if i5 >= $i4 goto label13;

        i22 = $i4 - i5;

        $i15 = virtualinvoke r26.<java.lang.StringBuilder: int length()>();

        $i16 = $i15 - i22;

        virtualinvoke r26.<java.lang.StringBuilder: void setLength(int)>($i16);

     label13:
        goto label22;

     label14:
        if $i3 == 0 goto label15;

        $r18 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("0");

        if $z1 == 0 goto label18;

     label15:
        if $i4 <= 0 goto label18;

        i18 = 0;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

        r25 = $r31;

        i23 = 0;

     label16:
        $i13 = virtualinvoke r26.<java.lang.StringBuilder: int length()>();

        if i23 >= $i13 goto label18;

        $c14 = virtualinvoke r26.<java.lang.StringBuilder: char charAt(int)>(i23);

        $i35 = (int) $c14;

        if $i35 == 48 goto label17;

        goto label18;

     label17:
        $i37 = (int) -1;

        i19 = i19 + $i37;

        i23 = i23 + 1;

        goto label16;

     label18:
        if i19 != 0 goto label21;

        if i18 <= 0 goto label21;

        $i11 = virtualinvoke r25.<java.lang.StringBuilder: int length()>();

        i24 = $i11 - 1;

     label19:
        if i24 <= 0 goto label21;

        $c12 = virtualinvoke r25.<java.lang.StringBuilder: char charAt(int)>(i24);

        $i38 = (int) $c12;

        if $i38 == 48 goto label20;

        goto label21;

     label20:
        $i40 = (int) -1;

        i18 = i18 + $i40;

        $i42 = (int) -1;

        i24 = i24 + $i42;

        goto label19;

     label21:
        $i25 = i18 + i19;

        if $i25 <= i6 goto label22;

        $i7 = $i25 - i6;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i7, i19);

        $i9 = virtualinvoke r26.<java.lang.StringBuilder: int length()>();

        $i10 = $i9 - $i8;

        virtualinvoke r26.<java.lang.StringBuilder: void setLength(int)>($i10);

     label22:
        $i26 = virtualinvoke r26.<java.lang.StringBuilder: int length()>();

        if $i26 != 0 goto label23;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;

     label23:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public static java.lang.String formatByteSize(double)
    {
        byte $b0, $b1, $b2, $b3, $b4;
        int $i5, $i6, $i7, $i8, $i9;
        java.lang.String r0, $r2, $r6;
        double d0;
        java.lang.StringBuilder $r3, $r4, $r5, $r7;

        d0 := @parameter0: double;

        $b0 = d0 cmpl 1.0E15;

        $i5 = (int) $b0;

        if $i5 <= 0 goto label1;

        r0 = "Pbytes";

        d0 = d0 * 1.0E-15;

        goto label6;

     label1:
        $b1 = d0 cmpl 1.0E12;

        $i6 = (int) $b1;

        if $i6 <= 0 goto label2;

        r0 = "Tbytes";

        d0 = d0 * 1.0E-12;

        goto label6;

     label2:
        $b2 = d0 cmpl 1.0E9;

        $i7 = (int) $b2;

        if $i7 <= 0 goto label3;

        r0 = "Gbytes";

        d0 = d0 * 1.0E-9;

        goto label6;

     label3:
        $b3 = d0 cmpl 1000000.0;

        $i8 = (int) $b3;

        if $i8 <= 0 goto label4;

        r0 = "Mbytes";

        d0 = d0 * 1.0E-6;

        goto label6;

     label4:
        $b4 = d0 cmpl 1000.0;

        $i9 = (int) $b4;

        if $i9 <= 0 goto label5;

        r0 = "Kbytes";

        d0 = d0 * 0.001;

        goto label6;

     label5:
        r0 = "bytes";

     label6:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <ucar.unidata.util.Format: java.lang.String d(double,int)>(d0, 4);

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static void show(double, int)
    {
        java.io.PrintStream $r1;
        int i0;
        java.lang.StringBuilder $r0, $r2, $r3, $r4, $r5, $r6, $r8;
        java.lang.String $r7, $r9;
        double d0;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Format.d(");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") == ");

        $r7 = staticinvoke <ucar.unidata.util.Format: java.lang.String d(double,int)>(d0, i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r9);

        return;
    }

    private static void show2(double, int)
    {
        java.io.PrintStream $r1;
        int i0;
        java.lang.StringBuilder $r0, $r2, $r3, $r4, $r5, $r6, $r8;
        java.lang.String $r7, $r9;
        double d0;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Format.dfrac(");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") == ");

        $r7 = staticinvoke <ucar.unidata.util.Format: java.lang.String dfrac(double,int)>(d0, i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r9);

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <ucar.unidata.util.Format: void show(double,int)>(1.2345678E-6, 3);

        return;
    }
}
