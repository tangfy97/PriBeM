public class org.eclipse.jdt.internal.core.util.PublicScanner extends java.lang.Object implements org.eclipse.jdt.core.compiler.IScanner, org.eclipse.jdt.core.compiler.ITerminalSymbols
{
    public long sourceLevel;
    public long complianceLevel;
    public boolean useAssertAsAnIndentifier;
    public boolean containsAssertKeyword;
    public boolean useEnumAsAnIndentifier;
    public boolean recordLineSeparator;
    public char currentCharacter;
    public int startPosition;
    public int currentPosition;
    public int initialPosition;
    public int eofPosition;
    public boolean skipComments;
    public boolean tokenizeComments;
    public boolean tokenizeWhiteSpace;
    public char[] source;
    public char[] withoutUnicodeBuffer;
    public int withoutUnicodePtr;
    public boolean unicodeAsBackSlash;
    public boolean scanningFloatLiteral;
    public static final int COMMENT_ARRAYS_SIZE;
    public int[] commentStops;
    public int[] commentStarts;
    public int[] commentTagStarts;
    public int commentPtr;
    protected int lastCommentLinePosition;
    public char[][] foundTaskTags;
    public char[][] foundTaskMessages;
    public char[][] foundTaskPriorities;
    public int[][] foundTaskPositions;
    public int foundTaskCount;
    public char[][] taskTags;
    public char[][] taskPriorities;
    public boolean isTaskCaseSensitive;
    public boolean diet;
    public int[] lineEnds;
    public int linePtr;
    public boolean wasAcr;
    public static final java.lang.String END_OF_SOURCE;
    public static final java.lang.String INVALID_HEXA;
    public static final java.lang.String INVALID_OCTAL;
    public static final java.lang.String INVALID_CHARACTER_CONSTANT;
    public static final java.lang.String INVALID_ESCAPE;
    public static final java.lang.String INVALID_INPUT;
    public static final java.lang.String INVALID_UNICODE_ESCAPE;
    public static final java.lang.String INVALID_FLOAT;
    public static final java.lang.String INVALID_LOW_SURROGATE;
    public static final java.lang.String INVALID_HIGH_SURROGATE;
    public static final java.lang.String NULL_SOURCE_STRING;
    public static final java.lang.String UNTERMINATED_STRING;
    public static final java.lang.String UNTERMINATED_COMMENT;
    public static final java.lang.String INVALID_CHAR_IN_STRING;
    public static final java.lang.String INVALID_DIGIT;
    private static final int[] EMPTY_LINE_ENDS;
    static final char[] charArray_a;
    static final char[] charArray_b;
    static final char[] charArray_c;
    static final char[] charArray_d;
    static final char[] charArray_e;
    static final char[] charArray_f;
    static final char[] charArray_g;
    static final char[] charArray_h;
    static final char[] charArray_i;
    static final char[] charArray_j;
    static final char[] charArray_k;
    static final char[] charArray_l;
    static final char[] charArray_m;
    static final char[] charArray_n;
    static final char[] charArray_o;
    static final char[] charArray_p;
    static final char[] charArray_q;
    static final char[] charArray_r;
    static final char[] charArray_s;
    static final char[] charArray_t;
    static final char[] charArray_u;
    static final char[] charArray_v;
    static final char[] charArray_w;
    static final char[] charArray_x;
    static final char[] charArray_y;
    static final char[] charArray_z;
    static final char[] initCharArray;
    static final int TableSize;
    static final int InternalTableSize;
    public static final int OptimizedLength;
    public final char[][][][] charArray_length;
    public static final char[] TAG_PREFIX;
    public static final int TAG_PREFIX_LENGTH;
    public static final char TAG_POSTFIX;
    public static final int TAG_POSTFIX_LENGTH;
    private org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags;
    protected int nlsTagsPtr;
    public boolean checkNonExternalizedStringLiterals;
    protected int lastPosition;
    public boolean returnOnlyGreater;
    int newEntry2;
    int newEntry3;
    int newEntry4;
    int newEntry5;
    int newEntry6;
    public boolean insideRecovery;
    public static final int RoundBracket;
    public static final int SquareBracket;
    public static final int CurlyBracket;
    public static final int BracketKinds;
    public static final int LOW_SURROGATE_MIN_VALUE;
    public static final int HIGH_SURROGATE_MIN_VALUE;
    public static final int HIGH_SURROGATE_MAX_VALUE;
    public static final int LOW_SURROGATE_MAX_VALUE;

    static void <clinit>()
    {
        int[] $r0;
        int $i0;
        java.lang.String $r28;
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r29, $r30;

        <org.eclipse.jdt.internal.core.util.PublicScanner: int LOW_SURROGATE_MAX_VALUE> = 57343;

        <org.eclipse.jdt.internal.core.util.PublicScanner: int HIGH_SURROGATE_MAX_VALUE> = 56319;

        <org.eclipse.jdt.internal.core.util.PublicScanner: int HIGH_SURROGATE_MIN_VALUE> = 55296;

        <org.eclipse.jdt.internal.core.util.PublicScanner: int LOW_SURROGATE_MIN_VALUE> = 56320;

        <org.eclipse.jdt.internal.core.util.PublicScanner: int BracketKinds> = 3;

        <org.eclipse.jdt.internal.core.util.PublicScanner: int CurlyBracket> = 2;

        <org.eclipse.jdt.internal.core.util.PublicScanner: int SquareBracket> = 1;

        <org.eclipse.jdt.internal.core.util.PublicScanner: int RoundBracket> = 0;

        <org.eclipse.jdt.internal.core.util.PublicScanner: int TAG_POSTFIX_LENGTH> = 1;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char TAG_POSTFIX> = 36;

        <org.eclipse.jdt.internal.core.util.PublicScanner: int OptimizedLength> = 7;

        <org.eclipse.jdt.internal.core.util.PublicScanner: int InternalTableSize> = 6;

        <org.eclipse.jdt.internal.core.util.PublicScanner: int TableSize> = 30;

        <org.eclipse.jdt.internal.core.util.PublicScanner: java.lang.String INVALID_DIGIT> = "Invalid_Digit";

        <org.eclipse.jdt.internal.core.util.PublicScanner: java.lang.String INVALID_CHAR_IN_STRING> = "Invalid_Char_In_String";

        <org.eclipse.jdt.internal.core.util.PublicScanner: java.lang.String UNTERMINATED_COMMENT> = "Unterminated_Comment";

        <org.eclipse.jdt.internal.core.util.PublicScanner: java.lang.String UNTERMINATED_STRING> = "Unterminated_String";

        <org.eclipse.jdt.internal.core.util.PublicScanner: java.lang.String NULL_SOURCE_STRING> = "Null_Source_String";

        <org.eclipse.jdt.internal.core.util.PublicScanner: java.lang.String INVALID_HIGH_SURROGATE> = "Invalid_High_Surrogate";

        <org.eclipse.jdt.internal.core.util.PublicScanner: java.lang.String INVALID_LOW_SURROGATE> = "Invalid_Low_Surrogate";

        <org.eclipse.jdt.internal.core.util.PublicScanner: java.lang.String INVALID_FLOAT> = "Invalid_Float_Literal";

        <org.eclipse.jdt.internal.core.util.PublicScanner: java.lang.String INVALID_UNICODE_ESCAPE> = "Invalid_Unicode_Escape";

        <org.eclipse.jdt.internal.core.util.PublicScanner: java.lang.String INVALID_INPUT> = "Invalid_Input";

        <org.eclipse.jdt.internal.core.util.PublicScanner: java.lang.String INVALID_ESCAPE> = "Invalid_Escape";

        <org.eclipse.jdt.internal.core.util.PublicScanner: java.lang.String INVALID_CHARACTER_CONSTANT> = "Invalid_Character_Constant";

        <org.eclipse.jdt.internal.core.util.PublicScanner: java.lang.String INVALID_OCTAL> = "Invalid_Octal_Literal";

        <org.eclipse.jdt.internal.core.util.PublicScanner: java.lang.String INVALID_HEXA> = "Invalid_Hexa_Literal";

        <org.eclipse.jdt.internal.core.util.PublicScanner: java.lang.String END_OF_SOURCE> = "End_Of_Source";

        <org.eclipse.jdt.internal.core.util.PublicScanner: int COMMENT_ARRAYS_SIZE> = 30;

        $r0 = <org.eclipse.jdt.internal.compiler.util.Util: int[] EMPTY_INT_ARRAY>;

        <org.eclipse.jdt.internal.core.util.PublicScanner: int[] EMPTY_LINE_ENDS> = $r0;

        $r1 = newarray (char)[1];

        $r1[0] = 97;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_a> = $r1;

        $r2 = newarray (char)[1];

        $r2[0] = 98;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_b> = $r2;

        $r3 = newarray (char)[1];

        $r3[0] = 99;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_c> = $r3;

        $r4 = newarray (char)[1];

        $r4[0] = 100;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_d> = $r4;

        $r5 = newarray (char)[1];

        $r5[0] = 101;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_e> = $r5;

        $r6 = newarray (char)[1];

        $r6[0] = 102;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_f> = $r6;

        $r7 = newarray (char)[1];

        $r7[0] = 103;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_g> = $r7;

        $r8 = newarray (char)[1];

        $r8[0] = 104;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_h> = $r8;

        $r9 = newarray (char)[1];

        $r9[0] = 105;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_i> = $r9;

        $r10 = newarray (char)[1];

        $r10[0] = 106;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_j> = $r10;

        $r11 = newarray (char)[1];

        $r11[0] = 107;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_k> = $r11;

        $r12 = newarray (char)[1];

        $r12[0] = 108;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_l> = $r12;

        $r13 = newarray (char)[1];

        $r13[0] = 109;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_m> = $r13;

        $r14 = newarray (char)[1];

        $r14[0] = 110;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_n> = $r14;

        $r15 = newarray (char)[1];

        $r15[0] = 111;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_o> = $r15;

        $r16 = newarray (char)[1];

        $r16[0] = 112;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_p> = $r16;

        $r17 = newarray (char)[1];

        $r17[0] = 113;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_q> = $r17;

        $r18 = newarray (char)[1];

        $r18[0] = 114;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_r> = $r18;

        $r19 = newarray (char)[1];

        $r19[0] = 115;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_s> = $r19;

        $r20 = newarray (char)[1];

        $r20[0] = 116;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_t> = $r20;

        $r21 = newarray (char)[1];

        $r21[0] = 117;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_u> = $r21;

        $r22 = newarray (char)[1];

        $r22[0] = 118;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_v> = $r22;

        $r23 = newarray (char)[1];

        $r23[0] = 119;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_w> = $r23;

        $r24 = newarray (char)[1];

        $r24[0] = 120;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_x> = $r24;

        $r25 = newarray (char)[1];

        $r25[0] = 121;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_y> = $r25;

        $r26 = newarray (char)[1];

        $r26[0] = 122;

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_z> = $r26;

        $r27 = newarray (char)[6];

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] initCharArray> = $r27;

        $r28 = "//$NON-NLS-";

        $r29 = virtualinvoke $r28.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.core.util.PublicScanner: char[] TAG_PREFIX> = $r29;

        $r30 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] TAG_PREFIX>;

        $i0 = lengthof $r30;

        <org.eclipse.jdt.internal.core.util.PublicScanner: int TAG_PREFIX_LENGTH> = $i0;

        return;
    }

    public void <init>()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void <init>(boolean,boolean,boolean,long,char[][],char[][],boolean)>(0, 0, 0, 3080192L, null, null, 1);

        return;
    }

    public void <init>(boolean, boolean, boolean, long, long, char[][], char[][], boolean)
    {
        char[][] $r9, r10, r11, r14;
        int[] $r1, $r2, $r3, $r4, r13;
        char[][][] $r7;
        boolean z0, z1, z2, z3;
        char[][][][] $r5, $r6;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        long l0, l1;
        int $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, $i14, $i16, $i18;
        char[] $r8, $r12;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        l0 := @parameter3: long;

        l1 := @parameter4: long;

        r10 := @parameter5: char[][];

        r11 := @parameter6: char[][];

        z3 := @parameter7: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean useAssertAsAnIndentifier> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean containsAssertKeyword> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean useEnumAsAnIndentifier> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean recordLineSeparator> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean skipComments> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean tokenizeComments> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean tokenizeWhiteSpace> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean scanningFloatLiteral> = 0;

        $r1 = newarray (int)[30];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] commentStops> = $r1;

        $r2 = newarray (int)[30];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] commentStarts> = $r2;

        $r3 = newarray (int)[30];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] commentTagStarts> = $r3;

        $i14 = (int) -1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int commentPtr> = $i14;

        $i16 = (int) -1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int lastCommentLinePosition> = $i16;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskTags> = null;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskPriorities> = null;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] taskTags> = null;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] taskPriorities> = null;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean isTaskCaseSensitive> = 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean diet> = 0;

        $r4 = newarray (int)[250];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds> = $r4;

        $i18 = (int) -1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr> = $i18;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean wasAcr> = 0;

        $r5 = newmultiarray (char)[7][30][6][];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][][][] charArray_length> = $r5;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags> = null;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean returnOnlyGreater> = 0;

        i7 = 0;

        goto label06;

     label01:
        i8 = 0;

        goto label05;

     label02:
        i9 = 0;

        goto label04;

     label03:
        $r6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][][][] charArray_length>;

        $r7 = $r6[i7];

        $r9 = $r7[i8];

        $r8 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] initCharArray>;

        $r9[i9] = $r8;

        i9 = i9 + 1;

     label04:
        if i9 < 6 goto label03;

        i8 = i8 + 1;

     label05:
        if i8 < 30 goto label02;

        i7 = i7 + 1;

     label06:
        if i7 < 6 goto label01;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry2> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry3> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry4> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry5> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry6> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean insideRecovery> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition> = 2147483647;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean tokenizeComments> = z0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean tokenizeWhiteSpace> = z1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: long sourceLevel> = l0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: long complianceLevel> = l1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean checkNonExternalizedStringLiterals> = z2;

        if r10 == null goto label13;

        i10 = lengthof r10;

        if r11 == null goto label11;

        r13 = newarray (int)[i10];

        i11 = 0;

        goto label08;

     label07:
        r13[i11] = i11;

        i11 = i11 + 1;

     label08:
        if i11 < i10 goto label07;

        $i4 = lengthof r10;

        $i5 = $i4 - 1;

        staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: void reverseQuickSort(char[][],int,int,int[])>(r10, 0, $i5, r13);

        r14 = newarray (char[])[i10];

        i12 = 0;

        goto label10;

     label09:
        $i6 = r13[i12];

        $r12 = r11[$i6];

        r14[i12] = $r12;

        i12 = i12 + 1;

     label10:
        if i12 < i10 goto label09;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] taskPriorities> = r14;

        goto label12;

     label11:
        $i2 = lengthof r10;

        $i3 = $i2 - 1;

        staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: void reverseQuickSort(char[][],int,int)>(r10, 0, $i3);

     label12:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] taskTags> = r10;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean isTaskCaseSensitive> = z3;

     label13:
        return;
    }

    public void <init>(boolean, boolean, boolean, long, char[][], char[][], boolean)
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        long l0;
        char[][] r1, r2;
        boolean z0, z1, z2, z3;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        l0 := @parameter3: long;

        r1 := @parameter4: char[][];

        r2 := @parameter5: char[][];

        z3 := @parameter6: boolean;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void <init>(boolean,boolean,boolean,long,long,char[][],char[][],boolean)>(z0, z1, z2, l0, l0, r1, r2, z3);

        return;
    }

    public final boolean atEnd()
    {
        int $i0, $i1;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        if $i1 > $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void checkTaskTag(int, int) throws org.eclipse.jdt.core.compiler.InvalidInputException
    {
        int[] $r3, $r7, $r11, $r21, $r22, $r40, $r48;
        int $i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, i20, $i21, $i22, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i46, $i48, $i49, $i50, $i51, i53, i54, i55, i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, i67, i68, $i69, i70, i71, i72, i73, $i75, i76, i77, i78, $i79, $i80, $i81, $i82, $i83, $i85, $i86, $i87, $i89, $i90, $i92, $i94, $i96;
        char[][] $r4, $r8, $r12, $r14, $r16, $r18, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r35, $r36, $r37, $r42, $r43, $r45, $r46, $r49, $r51;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        char[] r1, $r5, $r9, $r13, $r15, $r17, r41, $r44, $r50;
        int[][] $r2, $r6, $r10, $r19, $r20, $r33, $r34, $r38, $r39, $r47;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7;
        char $c8, $c9, $c12, $c19, $c23, $c24, $c25, $c26, $c45, $c47, c52, $c74;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        i1 := @parameter0: int;

        i3 := @parameter1: int;

        r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        if $i0 <= 0 goto label01;

        $r39 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[][] foundTaskPositions>;

        $i48 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        $i49 = $i48 - 1;

        $r40 = $r39[$i49];

        $i50 = $r40[0];

        if $i50 < i1 goto label01;

        return;

     label01:
        $i51 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        $i2 = i1 + 1;

        c52 = r1[$i2];

        i53 = i1 + 2;

        goto label18;

     label02:
        $i79 = (int) c52;

        if $i79 == 64 goto label17;

        i54 = 0;

        goto label16;

     label03:
        $r23 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] taskTags>;

        r41 = $r23[i54];

        i55 = lengthof r41;

        if i55 != 0 goto label04;

        goto label15;

     label04:
        $c19 = r41[0];

        $z1 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isJavaIdentifierStart(char)>($c19);

        if $z1 == 0 goto label05;

        $z5 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isJavaIdentifierPart(char)>(c52);

        if $z5 == 0 goto label05;

        goto label15;

     label05:
        i56 = 0;

        goto label09;

     label06:
        i20 = i53 + i56;

        $i21 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if i20 >= $i21 goto label15;

        if i20 < i3 goto label07;

        goto label15;

     label07:
        $i22 = i53 + i56;

        $c23 = r1[$i22];

        $c24 = r41[i56];

        $i80 = (int) $c23;

        $i81 = (int) $c24;

        if $i80 == $i81 goto label08;

        $z2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean isTaskCaseSensitive>;

        if $z2 != 0 goto label15;

        $c25 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: char toLowerCase(char)>($c23);

        $c26 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: char toLowerCase(char)>($c24);

        $i82 = (int) $c25;

        $i83 = (int) $c26;

        if $i82 == $i83 goto label08;

        goto label15;

     label08:
        i56 = i56 + 1;

     label09:
        if i56 < i55 goto label06;

        $i27 = i53 + i55;

        if $i27 >= i3 goto label10;

        $i43 = i53 + i55;

        $i44 = $i43 - 1;

        $c45 = r1[$i44];

        $z3 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isJavaIdentifierPart(char)>($c45);

        if $z3 == 0 goto label10;

        $i46 = i53 + i55;

        $c47 = r1[$i46];

        $z4 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isJavaIdentifierPart(char)>($c47);

        if $z4 == 0 goto label10;

        goto label15;

     label10:
        $r42 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskTags>;

        if $r42 != null goto label11;

        $r35 = newarray (char[])[5];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskTags> = $r35;

        $r36 = newarray (char[])[5];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskMessages> = $r36;

        $r37 = newarray (char[])[5];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskPriorities> = $r37;

        $r38 = newarray (int[])[5];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[][] foundTaskPositions> = $r38;

        goto label12;

     label11:
        $i29 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        $r24 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskTags>;

        $i28 = lengthof $r24;

        if $i29 != $i28 goto label12;

        $r28 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskTags>;

        $i31 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        $i32 = $i31 * 2;

        $r27 = newarray (char[])[$i32];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskTags> = $r27;

        $i33 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r28, 0, $r27, 0, $i33);

        $r30 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskMessages>;

        $i34 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        $i35 = $i34 * 2;

        $r29 = newarray (char[])[$i35];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskMessages> = $r29;

        $i36 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r30, 0, $r29, 0, $i36);

        $r32 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskPriorities>;

        $i37 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        $i38 = $i37 * 2;

        $r31 = newarray (char[])[$i38];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskPriorities> = $r31;

        $i39 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r32, 0, $r31, 0, $i39);

        $r34 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[][] foundTaskPositions>;

        $i40 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        $i41 = $i40 * 2;

        $r33 = newarray (int[])[$i41];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[][] foundTaskPositions> = $r33;

        $i42 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r34, 0, $r33, 0, $i42);

     label12:
        $r43 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] taskPriorities>;

        if $r43 == null goto label13;

        $r25 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] taskPriorities>;

        $i30 = lengthof $r25;

        if i54 >= $i30 goto label13;

        $r26 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] taskPriorities>;

        $r44 = $r26[i54];

        goto label14;

     label13:
        $r44 = null;

     label14:
        $r45 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskTags>;

        $i57 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        $r45[$i57] = r41;

        $r46 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskPriorities>;

        $i58 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        $r46[$i58] = $r44;

        $r47 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[][] foundTaskPositions>;

        $i59 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        $r48 = newarray (int)[2];

        $r48[0] = i53;

        $i60 = i53 + i55;

        $i61 = $i60 - 1;

        $r48[1] = $i61;

        $r47[$i59] = $r48;

        $r49 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskMessages>;

        $i62 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        $r50 = <org.eclipse.jdt.core.compiler.CharOperation: char[] NO_CHAR>;

        $r49[$i62] = $r50;

        $i63 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        $i64 = $i63 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount> = $i64;

        $i65 = i55 - 1;

        i53 = i53 + $i65;

        goto label17;

     label15:
        i54 = i54 + 1;

     label16:
        $r51 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] taskTags>;

        $i66 = lengthof $r51;

        if i54 < $i66 goto label03;

     label17:
        c52 = r1[i53];

        i53 = i53 + 1;

     label18:
        if i53 >= i3 goto label19;

        $i18 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if i53 < $i18 goto label02;

     label19:
        z6 = 0;

        i67 = $i51;

        goto label40;

     label20:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[][] foundTaskPositions>;

        $r3 = $r2[i67];

        $i5 = $r3[0];

        $r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskTags>;

        $r5 = $r4[i67];

        $i4 = lengthof $r5;

        i68 = $i5 + $i4;

        $i7 = i67 + 1;

        $i6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        if $i7 >= $i6 goto label21;

        $r10 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[][] foundTaskPositions>;

        $i13 = i67 + 1;

        $r11 = $r10[$i13];

        $i14 = $r11[0];

        $i69 = $i14 - 1;

        goto label22;

     label21:
        $i69 = i3 - 1;

     label22:
        i70 = $i69;

        if $i69 >= i68 goto label23;

        i70 = i68;

     label23:
        $i85 = (int) -1;

        i71 = $i85;

        i72 = i68;

        goto label27;

     label24:
        $c8 = r1[i72];

        $i86 = (int) $c8;

        if $i86 == 10 goto label25;

        $i87 = (int) $c8;

        if $i87 != 13 goto label26;

     label25:
        i71 = i72 - 1;

        goto label28;

     label26:
        i72 = i72 + 1;

     label27:
        if i72 < i70 goto label24;

     label28:
        $i89 = (int) -1;

        if i71 != $i89 goto label33;

        i73 = i70;

        goto label31;

     label29:
        $c12 = r1[i73];

        $i90 = (int) $c12;

        if $i90 != 42 goto label30;

        i71 = i73 - 1;

        goto label32;

     label30:
        $i92 = (int) -1;

        i73 = i73 + $i92;

     label31:
        if i73 > i68 goto label29;

     label32:
        $i94 = (int) -1;

        if i71 != $i94 goto label33;

        i71 = i70;

     label33:
        if i68 != i71 goto label35;

        z6 = 1;

        goto label39;

     label34:
        $i96 = (int) -1;

        i71 = i71 + $i96;

     label35:
        $c9 = r1[i71];

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean isWhitespace(char)>($c9);

        if $z0 == 0 goto label37;

        if i68 <= i71 goto label34;

        goto label37;

     label36:
        i68 = i68 + 1;

     label37:
        $c74 = r1[i68];

        $z7 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean isWhitespace(char)>($c74);

        if $z7 == 0 goto label38;

        if i68 <= i71 goto label36;

     label38:
        $r6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[][] foundTaskPositions>;

        $r7 = $r6[i67];

        $r7[1] = i71;

        $i10 = i71 - i68;

        $i11 = $i10 + 1;

        $r9 = newarray (char)[$i11];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i68, $r9, 0, $i11);

        $r8 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskMessages>;

        $r8[i67] = $r9;

     label39:
        i67 = i67 + 1;

     label40:
        $i75 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        if i67 < $i75 goto label20;

        if z6 == 0 goto label47;

        i76 = $i51;

        i77 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount>;

        goto label46;

     label41:
        $r12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskMessages>;

        $r13 = $r12[i76];

        $i15 = lengthof $r13;

        if $i15 != 0 goto label45;

        i78 = i76 + 1;

        goto label44;

     label42:
        $r14 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskMessages>;

        $r15 = $r14[i78];

        $i16 = lengthof $r15;

        if $i16 == 0 goto label43;

        $r18 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskMessages>;

        $r16 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] foundTaskMessages>;

        $r17 = $r16[i78];

        $r18[i76] = $r17;

        $r19 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[][] foundTaskPositions>;

        $r22 = $r19[i76];

        $r20 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[][] foundTaskPositions>;

        $r21 = $r20[i78];

        $i17 = $r21[1];

        $r22[1] = $i17;

        goto label45;

     label43:
        i78 = i78 + 1;

     label44:
        if i78 < i77 goto label42;

     label45:
        i76 = i76 + 1;

     label46:
        if i76 < i77 goto label41;

     label47:
        return;
    }

    public char[] getCurrentIdentifierSource()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7;
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, r12;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i0 == 0 goto label01;

        $r11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer>;

        $i6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        $r10 = newarray (char)[$i6];

        r12 = $r10;

        $i7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 1, $r10, 0, $i7);

        goto label10;

     label01:
        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        i3 = $i2 - $i1;

        $i4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if i3 != $i4 goto label02;

        $r9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        return $r9;

     label02:
        tableswitch(i3)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            default: goto label09;
        };

     label03:
        $r6 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] optimizedCurrentTokenSource1()>();

        return $r6;

     label04:
        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] optimizedCurrentTokenSource2()>();

        return $r5;

     label05:
        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] optimizedCurrentTokenSource3()>();

        return $r4;

     label06:
        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] optimizedCurrentTokenSource4()>();

        return $r3;

     label07:
        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] optimizedCurrentTokenSource5()>();

        return $r2;

     label08:
        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] optimizedCurrentTokenSource6()>();

        return $r1;

     label09:
        $r8 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i5 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $r7 = newarray (char)[i3];

        r12 = $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i5, $r7, 0, i3);

     label10:
        return r12;
    }

    public int getCurrentTokenEndPosition()
    {
        int $i0, $i1;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i1 = $i0 - 1;

        return $i1;
    }

    public char[] getCurrentTokenSource()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        char[] $r1, $r2, $r3, $r4, r5;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i0 == 0 goto label1;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer>;

        $i5 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        $r3 = newarray (char)[$i5];

        r5 = $r3;

        $i6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 1, $r3, 0, $i6);

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i3 = $i2 - $i1;

        $r1 = newarray (char)[$i3];

        r5 = $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i4, $r1, 0, $i3);

     label2:
        return r5;
    }

    public final java.lang.String getCurrentTokenString()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        char[] $r2, $r4;
        java.lang.String $r1, $r3;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i0 == 0 goto label1;

        $r3 = new java.lang.String;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer>;

        $i5 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>($r4, 1, $i5);

        return $r3;

     label1:
        $r1 = new java.lang.String;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i3 = $i2 - $i1;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>($r2, $i4, $i3);

        return $r1;
    }

    public char[] getCurrentTokenSourceString()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        char[] $r1, $r2, $r3, $r4, r5;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i0 == 0 goto label1;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer>;

        $i7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        $i8 = $i7 - 2;

        $r3 = newarray (char)[$i8];

        r5 = $r3;

        $i9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        $i10 = $i9 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 2, $r3, 0, $i10);

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i6 = $i1 + 1;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i4 = $i3 - $i2;

        $i5 = $i4 - 2;

        $r1 = newarray (char)[$i5];

        r5 = $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i6, $r1, 0, $i5);

     label2:
        return r5;
    }

    public final java.lang.String getCurrentStringLiteral()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        char[] $r2, $r4;
        java.lang.String $r1, $r3;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i0 == 0 goto label1;

        $r3 = new java.lang.String;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer>;

        $i7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        $i8 = $i7 - 2;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>($r4, 2, $i8);

        return $r3;

     label1:
        $r1 = new java.lang.String;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i6 = $i1 + 1;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i4 = $i3 - $i2;

        $i5 = $i4 - 2;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>($r2, $i6, $i5);

        return $r1;
    }

    public final char[] getRawTokenSource()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int $i0, $i1, i2, $i3;
        char[] r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        i2 = $i1 - $i0;

        r1 = newarray (char)[i2];

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i3, r1, 0, i2);

        return r1;
    }

    public final char[] getRawTokenSourceEnd()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int $i0, $i1, $i2, i3, $i4;
        char[] r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i2 = $i1 - $i0;

        i3 = $i2 - 1;

        r1 = newarray (char)[i3];

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i4, r1, 0, i3);

        return r1;
    }

    public int getCurrentTokenStartPosition()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        return $i0;
    }

    public final int getLineEnd(int)
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int[] $r1, $r2, $r3, $r4;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12, $i14, $i16;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        i1 := @parameter0: int;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        if $r1 == null goto label1;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        $i10 = (int) -1;

        if $i0 != $i10 goto label2;

     label1:
        $i12 = (int) -1;

        return $i12;

     label2:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i2 = lengthof $r2;

        $i3 = $i2 + 1;

        if i1 <= $i3 goto label3;

        $i14 = (int) -1;

        return $i14;

     label3:
        if i1 > 0 goto label4;

        $i16 = (int) -1;

        return $i16;

     label4:
        $r3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i4 = lengthof $r3;

        $i5 = $i4 + 1;

        if i1 != $i5 goto label5;

        $i8 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        return $i8;

     label5:
        $r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i6 = i1 - 1;

        $i7 = $r4[$i6];

        return $i7;
    }

    public final int[] getLineEnds()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int[] $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i6;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        $r3 = <org.eclipse.jdt.internal.core.util.PublicScanner: int[] EMPTY_LINE_ENDS>;

        return $r3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        $i2 = $i1 + 1;

        $r1 = newarray (int)[$i2];

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        $i4 = $i3 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i4);

        return $r1;
    }

    public final int getLineStart(int)
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int[] $r1, $r2, $r3;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i13, $i15;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        i1 := @parameter0: int;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        if $r1 == null goto label1;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        $i9 = (int) -1;

        if $i0 != $i9 goto label2;

     label1:
        $i11 = (int) -1;

        return $i11;

     label2:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i2 = lengthof $r2;

        $i3 = $i2 + 1;

        if i1 <= $i3 goto label3;

        $i13 = (int) -1;

        return $i13;

     label3:
        if i1 > 0 goto label4;

        $i15 = (int) -1;

        return $i15;

     label4:
        if i1 != 1 goto label5;

        $i7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int initialPosition>;

        return $i7;

     label5:
        $r3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i4 = i1 - 2;

        $i5 = $r3[$i4];

        $i6 = $i5 + 1;

        return $i6;
    }

    public final int getNextChar()
    {
        java.lang.IndexOutOfBoundsException $r4;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int $i0, $i1, $i3, $i4, $i7, $i8, $i9, $i11, $i13;
        char $c2, $c5, $c6;
        org.eclipse.jdt.core.compiler.InvalidInputException $r3;
        char[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i1;

        $c2 = $r1[$i0];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c2;

        $i7 = (int) $c2;

        if $i7 != 92 goto label2;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c5 = $r2[$i4];

        $i8 = (int) $c5;

        if $i8 != 117 goto label2;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label3;

     label2:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i3 == 0 goto label3;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label3:
        $c6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

     label4:
        $i9 = (int) $c6;

        return $i9;

     label5:
        $r4 := @caughtexception;

        $i11 = (int) -1;

        return $i11;

     label6:
        $r3 := @caughtexception;

        $i13 = (int) -1;

        return $i13;

        catch java.lang.IndexOutOfBoundsException from label1 to label4 with label5;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label1 to label4 with label6;
    }

    public final int getNextCharWithBoundChecks()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i8, $i9, $i11, $i15, $i16, $i17, $i18, $i20, $i21;
        char $c4, $c7, $c10, $c12, $c13;
        org.eclipse.jdt.core.compiler.InvalidInputException $r3;
        char[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i1 < $i0 goto label1;

        $i15 = (int) -1;

        return $i15;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i3;

        $c4 = $r1[$i2];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c4;

        $i6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i5 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i6 < $i5 goto label3;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $i11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i11 == 0 goto label2;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label2:
        $c12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i16 = (int) $c12;

        return $i16;

     label3:
        $c7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i17 = (int) $c7;

        if $i17 != 92 goto label7;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c10 = $r2[$i9];

        $i18 = (int) $c10;

        if $i18 != 117 goto label7;

     label4:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

     label5:
        goto label8;

     label6:
        $r3 := @caughtexception;

        $i20 = (int) -1;

        return $i20;

     label7:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $i8 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i8 == 0 goto label8;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label8:
        $c13 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i21 = (int) $c13;

        return $i21;

        catch org.eclipse.jdt.core.compiler.InvalidInputException from label4 to label5 with label6;
    }

    public final boolean getNextChar(char)
    {
        java.lang.IndexOutOfBoundsException $r4;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int $i0, $i1, i2, $i3, $i4, $i8, $i9, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        char $c5, c6, $c7, $c10, $c11;
        org.eclipse.jdt.core.compiler.InvalidInputException $r3;
        char[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        c6 := @parameter0: char;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i1 < $i0 goto label01;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        return 0;

     label01:
        i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

     label02:
        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i4;

        $c5 = $r1[$i3];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c5;

        $i14 = (int) $c5;

        if $i14 != 92 goto label05;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c10 = $r2[$i9];

        $i15 = (int) $c10;

        if $i15 != 117 goto label05;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        $c11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i16 = (int) $c11;

        $i17 = (int) c6;

        if $i16 == $i17 goto label04;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i2;

        $i12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        $i13 = $i12 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = $i13;

     label03:
        return 0;

     label04:
        return 1;

     label05:
        $c7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i18 = (int) $c7;

        $i19 = (int) c6;

        if $i18 == $i19 goto label07;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i2;

     label06:
        return 0;

     label07:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $i8 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i8 == 0 goto label08;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label08:
        return 1;

     label09:
        $r4 := @caughtexception;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i2;

        return 0;

     label10:
        $r3 := @caughtexception;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i2;

        return 0;

        catch java.lang.IndexOutOfBoundsException from label02 to label03 with label09;
        catch java.lang.IndexOutOfBoundsException from label05 to label06 with label09;
        catch java.lang.IndexOutOfBoundsException from label07 to label08 with label09;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label02 to label03 with label10;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label05 to label06 with label10;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label07 to label08 with label10;
    }

    public final int getNextChar(char, char)
    {
        java.lang.IndexOutOfBoundsException $r4;
        byte b17, b18;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int $i0, $i1, i2, $i3, $i4, $i10, $i11, $i15, $i16, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i34, $i36;
        char $c5, c6, $c7, c8, $c9, $c12, $c13, $c14;
        org.eclipse.jdt.core.compiler.InvalidInputException $r3;
        char[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        c6 := @parameter0: char;

        c8 := @parameter1: char;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i1 < $i0 goto label01;

        $i20 = (int) -1;

        return $i20;

     label01:
        i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

     label02:
        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i4;

        $c5 = $r1[$i3];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c5;

        $i21 = (int) $c5;

        if $i21 != 92 goto label06;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c12 = $r2[$i11];

        $i22 = (int) $c12;

        if $i22 != 117 goto label06;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        $c13 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i23 = (int) $c13;

        $i24 = (int) c6;

        if $i23 != $i24 goto label03;

        b17 = 0;

        goto label05;

     label03:
        $c14 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i25 = (int) $c14;

        $i26 = (int) c8;

        if $i25 != $i26 goto label04;

        b17 = 1;

        goto label05;

     label04:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i2;

        $i15 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        $i16 = $i15 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = $i16;

        b17 = -1;

     label05:
        return b17;

     label06:
        $c7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i27 = (int) $c7;

        $i28 = (int) c6;

        if $i27 != $i28 goto label07;

        b18 = 0;

        goto label10;

     label07:
        $c9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i29 = (int) $c9;

        $i30 = (int) c8;

        if $i29 != $i30 goto label08;

        b18 = 1;

        goto label10;

     label08:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i2;

     label09:
        $i32 = (int) -1;

        return $i32;

     label10:
        $i10 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i10 == 0 goto label11;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label11:
        return b18;

     label12:
        $r4 := @caughtexception;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i2;

        $i34 = (int) -1;

        return $i34;

     label13:
        $r3 := @caughtexception;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i2;

        $i36 = (int) -1;

        return $i36;

        catch java.lang.IndexOutOfBoundsException from label02 to label05 with label12;
        catch java.lang.IndexOutOfBoundsException from label06 to label09 with label12;
        catch java.lang.IndexOutOfBoundsException from label10 to label11 with label12;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label02 to label05 with label13;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label06 to label09 with label13;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label10 to label11 with label13;
    }

    public final boolean getNextCharAsDigit() throws org.eclipse.jdt.core.compiler.InvalidInputException
    {
        java.lang.IndexOutOfBoundsException $r4;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int $i0, $i1, i2, $i3, $i4, $i7, $i8, $i11, $i12, $i13, $i14;
        boolean $z0, $z1;
        char $c5, $c6, $c9, $c10;
        org.eclipse.jdt.core.compiler.InvalidInputException $r3;
        char[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i1 < $i0 goto label01;

        return 0;

     label01:
        i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

     label02:
        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i4;

        $c5 = $r1[$i3];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c5;

        $i13 = (int) $c5;

        if $i13 != 92 goto label05;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i8 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c9 = $r2[$i8];

        $i14 = (int) $c9;

        if $i14 != 117 goto label05;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        $c10 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $z1 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isDigit(char)>($c10);

        if $z1 != 0 goto label04;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i2;

        $i11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        $i12 = $i11 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = $i12;

     label03:
        return 0;

     label04:
        return 1;

     label05:
        $c6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $z0 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isDigit(char)>($c6);

        if $z0 != 0 goto label07;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i2;

     label06:
        return 0;

     label07:
        $i7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i7 == 0 goto label08;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label08:
        return 1;

     label09:
        $r4 := @caughtexception;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i2;

        return 0;

     label10:
        $r3 := @caughtexception;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i2;

        return 0;

        catch java.lang.IndexOutOfBoundsException from label02 to label03 with label09;
        catch java.lang.IndexOutOfBoundsException from label05 to label06 with label09;
        catch java.lang.IndexOutOfBoundsException from label07 to label08 with label09;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label02 to label03 with label10;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label05 to label06 with label10;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label07 to label08 with label10;
    }

    public final boolean getNextCharAsDigit(int)
    {
        java.lang.IndexOutOfBoundsException $r4;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int $i0, $i1, i2, $i3, $i4, i6, $i8, $i9, $i10, $i13, $i14, $i15, $i16, $i17, $i19, $i21;
        char $c5, $c7, $c11, $c12;
        org.eclipse.jdt.core.compiler.InvalidInputException $r3;
        char[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        i6 := @parameter0: int;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i1 < $i0 goto label01;

        return 0;

     label01:
        i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

     label02:
        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i4;

        $c5 = $r1[$i3];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c5;

        $i16 = (int) $c5;

        if $i16 != 92 goto label05;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i10 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c11 = $r2[$i10];

        $i17 = (int) $c11;

        if $i17 != 117 goto label05;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        $c12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i13 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int digit(char,int)>($c12, i6);

        $i19 = (int) -1;

        if $i13 != $i19 goto label04;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i2;

        $i14 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        $i15 = $i14 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = $i15;

     label03:
        return 0;

     label04:
        return 1;

     label05:
        $c7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i8 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int digit(char,int)>($c7, i6);

        $i21 = (int) -1;

        if $i8 != $i21 goto label07;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i2;

     label06:
        return 0;

     label07:
        $i9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i9 == 0 goto label08;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label08:
        return 1;

     label09:
        $r4 := @caughtexception;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i2;

        return 0;

     label10:
        $r3 := @caughtexception;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i2;

        return 0;

        catch java.lang.IndexOutOfBoundsException from label02 to label03 with label09;
        catch java.lang.IndexOutOfBoundsException from label05 to label06 with label09;
        catch java.lang.IndexOutOfBoundsException from label07 to label08 with label09;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label02 to label03 with label10;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label05 to label06 with label10;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label07 to label08 with label10;
    }

    public boolean getNextCharAsJavaIdentifierPartWithBoundCheck()
    {
        byte $b10;
        boolean z0, z1;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        long $l9;
        int i0, $i1, i2, $i3, $i4, $i6, $i7, $i8, $i11, $i14, $i17, $i18, $i19, $i21, $i22, $i24, $i25, $i26, $i28, $i29, $i31, $i32, $i34, $i35, $i37;
        char $c5, c12, $c13, $c15, $c16;
        org.eclipse.jdt.core.compiler.InvalidInputException $r3;
        char[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if i0 < $i1 goto label01;

        return 0;

     label01:
        i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

     label02:
        z0 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i4;

        $c5 = $r1[$i3];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c5;

        $i7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i7 >= $i6 goto label03;

        $c13 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i17 = (int) $c13;

        if $i17 != 92 goto label03;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i14 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c15 = $r2[$i14];

        $i18 = (int) $c15;

        if $i18 != 117 goto label03;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        z0 = 1;

     label03:
        $c16 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i19 = (int) $c16;

        $i21 = (int) 55296;

        if $i19 < $i21 goto label09;

        $i22 = (int) $c16;

        $i24 = (int) 56319;

        if $i22 > $i24 goto label09;

        $l9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: long complianceLevel>;

        $b10 = $l9 cmp 3211264L;

        $i25 = (int) $b10;

        if $i25 >= 0 goto label05;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = i2;

     label04:
        return 0;

     label05:
        $i11 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextCharWithBoundChecks()>();

        c12 = (char) $i11;

        $i26 = (int) c12;

        $i28 = (int) 56320;

        if $i26 < $i28 goto label06;

        $i29 = (int) c12;

        $i31 = (int) 57343;

        if $i29 <= $i31 goto label08;

     label06:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = i2;

     label07:
        return 0;

     label08:
        z1 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isJavaIdentifierPart(char,char)>($c16, c12);

        goto label12;

     label09:
        $i32 = (int) $c16;

        $i34 = (int) 56320;

        if $i32 < $i34 goto label11;

        $i35 = (int) $c16;

        $i37 = (int) 57343;

        if $i35 > $i37 goto label11;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = i2;

     label10:
        return 0;

     label11:
        z1 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isJavaIdentifierPart(char)>($c16);

     label12:
        if z0 == 0 goto label15;

        if z1 != 0 goto label14;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = i2;

     label13:
        return 0;

     label14:
        return 1;

     label15:
        if z1 != 0 goto label17;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i0;

     label16:
        return 0;

     label17:
        $i8 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i8 == 0 goto label18;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label18:
        return 1;

     label19:
        $r3 := @caughtexception;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = i2;

        return 0;

        catch org.eclipse.jdt.core.compiler.InvalidInputException from label02 to label04 with label19;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label05 to label07 with label19;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label08 to label10 with label19;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label11 to label13 with label19;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label15 to label16 with label19;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label17 to label18 with label19;
    }

    public boolean getNextCharAsJavaIdentifierPart()
    {
        java.lang.IndexOutOfBoundsException $r4;
        byte $b8;
        boolean z0, z1;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        long $l7;
        int $i0, $i1, i2, $i3, $i4, $i6, $i9, $i11, $i14, $i15, $i16, $i18, $i19, $i21, $i22, $i23, $i25, $i26, $i28, $i29, $i31, $i32, $i34;
        char $c5, c10, $c12, $c13;
        org.eclipse.jdt.core.compiler.InvalidInputException $r3;
        char[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i0 < $i1 goto label01;

        return 0;

     label01:
        i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

     label02:
        z0 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i4;

        $c5 = $r1[$i3];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c5;

        $i14 = (int) $c5;

        if $i14 != 92 goto label03;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c12 = $r2[$i11];

        $i15 = (int) $c12;

        if $i15 != 117 goto label03;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        z0 = 1;

     label03:
        $c13 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i16 = (int) $c13;

        $i18 = (int) 55296;

        if $i16 < $i18 goto label09;

        $i19 = (int) $c13;

        $i21 = (int) 56319;

        if $i19 > $i21 goto label09;

        $l7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: long complianceLevel>;

        $b8 = $l7 cmp 3211264L;

        $i22 = (int) $b8;

        if $i22 >= 0 goto label05;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = i2;

     label04:
        return 0;

     label05:
        $i9 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar()>();

        c10 = (char) $i9;

        $i23 = (int) c10;

        $i25 = (int) 56320;

        if $i23 < $i25 goto label06;

        $i26 = (int) c10;

        $i28 = (int) 57343;

        if $i26 <= $i28 goto label08;

     label06:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = i2;

     label07:
        return 0;

     label08:
        z1 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isJavaIdentifierPart(char,char)>($c13, c10);

        goto label12;

     label09:
        $i29 = (int) $c13;

        $i31 = (int) 56320;

        if $i29 < $i31 goto label11;

        $i32 = (int) $c13;

        $i34 = (int) 57343;

        if $i32 > $i34 goto label11;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = i2;

     label10:
        return 0;

     label11:
        z1 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isJavaIdentifierPart(char)>($c13);

     label12:
        if z0 == 0 goto label15;

        if z1 != 0 goto label14;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = i2;

     label13:
        return 0;

     label14:
        return 1;

     label15:
        if z1 != 0 goto label17;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i0;

     label16:
        return 0;

     label17:
        $i6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i6 == 0 goto label18;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label18:
        return 1;

     label19:
        $r4 := @caughtexception;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = i2;

        return 0;

     label20:
        $r3 := @caughtexception;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = i2;

        return 0;

        catch java.lang.IndexOutOfBoundsException from label02 to label04 with label19;
        catch java.lang.IndexOutOfBoundsException from label05 to label07 with label19;
        catch java.lang.IndexOutOfBoundsException from label08 to label10 with label19;
        catch java.lang.IndexOutOfBoundsException from label11 to label13 with label19;
        catch java.lang.IndexOutOfBoundsException from label15 to label16 with label19;
        catch java.lang.IndexOutOfBoundsException from label17 to label18 with label19;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label02 to label04 with label20;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label05 to label07 with label20;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label08 to label10 with label20;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label11 to label13 with label20;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label15 to label16 with label20;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label17 to label18 with label20;
    }

    public int scanIdentifier() throws org.eclipse.jdt.core.compiler.InvalidInputException
    {
        byte $b18, $b20;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        long $l17, $l19;
        org.eclipse.jdt.core.compiler.InvalidInputException $r8, $r9, $r10, $r11;
        char[] $r1, $r7;
        int[] $r6;
        boolean $z0, $z1, z2, z4, z5, z6, $z7, $z8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i14, $i15, $i16, $i21, $i23, $i24, $i25, $i26, $i27, $i28, $i30, i32, i33, $i35, $i36, $i37, $i38, $i39, $i40, $i42, $i43, $i45, $i46, $i47, $i49, $i50, $i52, $i53, $i55, $i56, $i58, $i59;
        char $c9, $c13, c22, $c29, $c31, $c34;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = 0;

        i32 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        z2 = 0;

     label01:
        $i14 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        $i15 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition> = $i0;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i2 >= $i1 goto label04;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i8;

        $c9 = $r1[$i7];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c9;

        $i11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i10 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i11 >= $i10 goto label02;

        $c29 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i35 = (int) $c29;

        if $i35 != 92 goto label02;

        $r7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i30 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c31 = $r7[$i30];

        $i36 = (int) $c31;

        if $i36 != 117 goto label02;

        $z8 = 1;

        $z7 = 1;

        goto label03;

     label02:
        $z8 = 0;

        $z7 = 0;

     label03:
        z4 = $z8;

        goto label06;

     label04:
        $z0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean tokenizeWhiteSpace>;

        if $z0 == 0 goto label05;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i4 = $i3 - 1;

        if i32 == $i4 goto label05;

        $i5 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i6 = $i5 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i6;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition> = i32;

        return 1000;

     label05:
        return 158;

     label06:
        if $z7 == 0 goto label07;

        z5 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean jumpOverUnicodeWhiteSpace()>();

        $i28 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        i33 = $i28 - $i15;

        goto label10;

     label07:
        $i12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        i33 = $i12 - $i15;

        $c13 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i37 = (int) $c13;

        lookupswitch($i37)
        {
            case 9: goto label08;
            case 10: goto label08;
            case 12: goto label08;
            case 13: goto label08;
            case 32: goto label08;
            default: goto label09;
        };

     label08:
        z5 = 1;

        goto label10;

     label09:
        z5 = 0;

     label10:
        if z5 == 0 goto label11;

        z2 = 1;

     label11:
        if z5 != 0 goto label01;

        if z2 == 0 goto label15;

        $z1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean tokenizeWhiteSpace>;

        if $z1 == 0 goto label13;

        $i26 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i27 = $i26 - i33;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i27;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition> = i32;

        if z4 == 0 goto label12;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = $i14;

     label12:
        return 1000;

     label13:
        if z4 == 0 goto label14;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = 0;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

        goto label15;

     label14:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = 0;

     label15:
        $c34 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i38 = (int) $c34;

        if $i38 >= 128 goto label17;

        $r6 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i39 = (int) $c34;

        $i23 = $r6[$i39];

        $i24 = $i23 & 64;

        if $i24 == 0 goto label16;

        $i25 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int scanIdentifierOrKeywordWithBoundCheck()>();

        return $i25;

     label16:
        return 309;

     label17:
        $i40 = (int) $c34;

        $i42 = (int) 55296;

        if $i40 < $i42 goto label21;

        $i43 = (int) $c34;

        $i45 = (int) 56319;

        if $i43 > $i45 goto label21;

        $l19 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: long complianceLevel>;

        $b20 = $l19 cmp 3211264L;

        $i46 = (int) $b20;

        if $i46 >= 0 goto label18;

        $r8 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r8.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Unicode_Escape");

        throw $r8;

     label18:
        $i21 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextCharWithBoundChecks()>();

        c22 = (char) $i21;

        $i47 = (int) c22;

        $i49 = (int) 56320;

        if $i47 < $i49 goto label19;

        $i50 = (int) c22;

        $i52 = (int) 57343;

        if $i50 <= $i52 goto label20;

     label19:
        $r9 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r9.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Low_Surrogate");

        throw $r9;

     label20:
        z6 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isJavaIdentifierStart(char,char)>($c34, c22);

        goto label24;

     label21:
        $i53 = (int) $c34;

        $i55 = (int) 56320;

        if $i53 < $i55 goto label23;

        $i56 = (int) $c34;

        $i58 = (int) 57343;

        if $i56 > $i58 goto label23;

        $l17 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: long complianceLevel>;

        $b18 = $l17 cmp 3211264L;

        $i59 = (int) $b18;

        if $i59 >= 0 goto label22;

        $r10 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r10.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Unicode_Escape");

        throw $r10;

     label22:
        $r11 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r11.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_High_Surrogate");

        throw $r11;

     label23:
        z6 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>($c34);

     label24:
        if z6 == 0 goto label25;

        $i16 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int scanIdentifierOrKeywordWithBoundCheck()>();

        return $i16;

     label25:
        return 309;
    }

    public int getNextToken() throws org.eclipse.jdt.core.compiler.InvalidInputException
    {
        int[] $r4, $r44, $r45;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i15, $i17, $i18, $i19, $i23, $i24, $i25, $i26, $i28, $i29, $i30, $i33, $i35, $i36, $i37, $i41, $i42, $i44, $i45, $i46, $i47, $i48, $i50, $i52, $i53, $i55, $i56, $i58, $i59, $i60, $i62, $i64, $i65, $i66, $i68, $i70, $i71, $i72, i74, $i75, $i76, $i77, $i78, $i79, $i80, $i82, $i83, $i84, $i85, $i86, $i87, $i89, $i90, $i92, $i93, $i94, $i95, $i97, $i98, $i100, $i101, $i103, $i104, $i106, $i107, $i108, $i109, $i110, $i112, $i113, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i124, $i125, $i127, $i128, $i129, $i130, $i131, $i132, $i134, $i136, $i137, $i138, $i139, $i140, $i141, $i145, $i146, $i147, $i151, $i152, $i154, $i155, $i156, $i157, $i158, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i168, $i170, $i171, $i172, $i175, $i176, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i191, $i192, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i216, $i217, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i233, $i234, $i235, $i236, $i237, $i238, i240, i243, i244, i245, i246, i247, $i248, $i249, $i250, i253, i258, $i259, $i260, i264, $i266, $i267, $i276, $i277, $i278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $i299, $i300, $i301, $i302, $i303, $i304, $i305, $i306, $i307, $i308, $i309, $i310, $i311, $i312, $i313, $i314, $i315, $i316, $i317, $i318, $i319, $i320, $i321, $i322, $i323, $i324, $i325, $i326, $i327, $i328, $i329, $i330, $i331, $i332, $i333, $i334, $i335, $i336, $i337, $i338, $i339, $i340, $i341, $i342, $i343, $i344, $i345, $i347, $i348, $i350, $i351, $i352, $i354, $i355, $i357, $i358, $i360, $i361, $i363, $i364;
        java.lang.String $r53;
        char[] $r1, $r2, $r3, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r30, $r31, $r33, $r34, $r35, $r36, $r37, $r38, $r46, $r54, $r55, $r61, $r66, $r68, $r69;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, z30, z31, $z32, z33, $z34, $z35, z36, z37, z38, $z39, $z40, $z41, z42, z43, z44, z45, z46;
        java.lang.IndexOutOfBoundsException $r47, $r48, $r50, $r56, $r58, $r60;
        byte $b178, $b180;
        long $l177, $l179;
        short s22, $s232, $s274, $s275;
        char[][] $r5, $r51, $r67;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        org.eclipse.jdt.core.compiler.InvalidInputException $r52, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83;
        char $c3, $c11, $c13, $c14, $c16, $c20, $c21, $c27, $c31, $c32, $c34, $c38, $c39, $c40, $c43, $c49, $c51, $c54, $c57, $c61, $c63, $c67, $c69, $c73, $c81, $c88, $c91, $c96, $c99, $c102, $c105, $c111, $c114, $c123, $c126, $c133, $c135, $c142, $c143, $c144, $c148, $c149, $c150, $c153, $c159, $c167, $c169, $c173, $c174, $c190, $c193, $c215, $c218, $c239, $c241, $c242, $c251, $c252, $c254, $c255, $c256, $c257, $c261, $c262, $c263, $c265, $c268, $c269, $c270, c272, c273;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean wasAcr> = 0;

        $z0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean diet>;

        if $z0 == 0 goto label003;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void jumpOverMethodBody()>();

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean diet> = 0;

        $i195 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i194 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i195 <= $i194 goto label001;

        $s232 = 158;

        goto label002;

     label001:
        $s232 = 95;

     label002:
        return $s232;

     label003:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = 0;

        $i233 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        z30 = 0;

        z31 = 0;

     label004:
        $i234 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        $i235 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i236 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition> = $i236;

     label005:
        $r61 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i237 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i238 = $i237 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i238;

        $c239 = $r61[$i237];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c239;

        $i276 = (int) $c239;

        if $i276 != 92 goto label006;

        $r46 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i192 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c193 = $r46[$i192];

        $i277 = (int) $c193;

        if $i277 != 117 goto label006;

        $z32 = 1;

        goto label007;

     label006:
        $z32 = 0;

     label007:
        z31 = $z32;

     label008:
        goto label013;

     label009:
        $r60 := @caughtexception;

        $z29 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean tokenizeWhiteSpace>;

        if $z29 == 0 goto label011;

        $i228 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i229 = $i228 - 1;

        if $i233 == $i229 goto label011;

        $i230 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i231 = $i230 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i231;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition> = $i233;

     label010:
        return 1000;

     label011:
        $i227 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i226 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i227 <= $i226 goto label013;

     label012:
        return 158;

     label013:
        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i1 <= $i0 goto label015;

     label014:
        return 158;

     label015:
        if z31 == 0 goto label016;

        z33 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean jumpOverUnicodeWhiteSpace()>();

        $i191 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        i240 = $i191 - $i235;

        goto label021;

     label016:
        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        i240 = $i2 - $i235;

        $c3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i278 = (int) $c3;

        if $i278 == 13 goto label017;

        $c190 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i279 = (int) $c190;

        if $i279 != 10 goto label018;

     label017:
        $z1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean recordLineSeparator>;

        if $z1 == 0 goto label018;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void pushLineSeparator()>();

     label018:
        $c241 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i280 = (int) $c241;

        lookupswitch($i280)
        {
            case 9: goto label019;
            case 10: goto label019;
            case 12: goto label019;
            case 13: goto label019;
            case 32: goto label019;
            default: goto label020;
        };

     label019:
        z33 = 1;

        goto label021;

     label020:
        z33 = 0;

     label021:
        if z33 == 0 goto label022;

        z30 = 1;

     label022:
        if z33 != 0 goto label004;

        if z30 == 0 goto label026;

        $z25 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean tokenizeWhiteSpace>;

        if $z25 == 0 goto label024;

        $i188 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i189 = $i188 - i240;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i189;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition> = $i233;

        if z31 == 0 goto label023;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = $i234;

     label023:
        return 1000;

     label024:
        if z31 == 0 goto label025;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = 0;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

        goto label026;

     label025:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = 0;

     label026:
        $c242 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i281 = (int) $c242;

        lookupswitch($i281)
        {
            case 26: goto label217;
            case 33: goto label055;
            case 34: goto label134;
            case 37: goto label061;
            case 38: goto label084;
            case 39: goto label099;
            case 40: goto label028;
            case 41: goto label029;
            case 42: goto label058;
            case 43: goto label044;
            case 44: goto label035;
            case 45: goto label049;
            case 46: goto label036;
            case 47: goto label165;
            case 58: goto label098;
            case 59: goto label034;
            case 60: goto label064;
            case 61: goto label081;
            case 62: goto label070;
            case 63: goto label097;
            case 64: goto label027;
            case 91: goto label032;
            case 93: goto label033;
            case 94: goto label094;
            case 123: goto label030;
            case 124: goto label089;
            case 125: goto label031;
            case 126: goto label054;
            default: goto label220;
        };

     label027:
        return 401;

     label028:
        return 7;

     label029:
        return 86;

     label030:
        return 110;

     label031:
        return 95;

     label032:
        return 15;

     label033:
        return 166;

     label034:
        return 64;

     label035:
        return 90;

     label036:
        $z13 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextCharAsDigit()>();

        if $z13 == 0 goto label038;

        $i75 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int scanNumber(boolean)>(1);

     label037:
        return $i75;

     label038:
        i74 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $z14 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(46);

        if $z14 == 0 goto label042;

        $z15 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(46);

        if $z15 == 0 goto label040;

     label039:
        return 402;

     label040:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i74;

     label041:
        return 6;

     label042:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i74;

     label043:
        return 6;

     label044:
        $i77 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(43, 61);

        if $i77 != 0 goto label046;

     label045:
        return 1;

     label046:
        if $i77 <= 0 goto label048;

     label047:
        return 168;

     label048:
        return 3;

     label049:
        $i76 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(45, 61);

        if $i76 != 0 goto label051;

     label050:
        return 2;

     label051:
        if $i76 <= 0 goto label053;

     label052:
        return 169;

     label053:
        return 4;

     label054:
        return 72;

     label055:
        $z22 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(61);

        if $z22 == 0 goto label057;

     label056:
        return 36;

     label057:
        return 71;

     label058:
        $z16 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(61);

        if $z16 == 0 goto label060;

     label059:
        return 170;

     label060:
        return 8;

     label061:
        $z20 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(61);

        if $z20 == 0 goto label063;

     label062:
        return 175;

     label063:
        return 9;

     label064:
        $i7 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(61, 60);

        if $i7 != 0 goto label066;

     label065:
        return 66;

     label066:
        if $i7 <= 0 goto label069;

        $z6 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(61);

        if $z6 == 0 goto label068;

     label067:
        return 176;

     label068:
        return 14;

     label069:
        return 69;

     label070:
        $z3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean returnOnlyGreater>;

        if $z3 == 0 goto label072;

     label071:
        return 68;

     label072:
        $i5 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(61, 62);

        if $i5 != 0 goto label074;

     label073:
        return 67;

     label074:
        if $i5 <= 0 goto label080;

        $i6 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(61, 62);

        if $i6 != 0 goto label076;

     label075:
        return 177;

     label076:
        if $i6 <= 0 goto label079;

        $z4 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(61);

        if $z4 == 0 goto label078;

     label077:
        return 178;

     label078:
        return 12;

     label079:
        return 11;

     label080:
        return 68;

     label081:
        $z5 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(61);

        if $z5 == 0 goto label083;

     label082:
        return 35;

     label083:
        return 167;

     label084:
        $i130 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(38, 61);

        if $i130 != 0 goto label086;

     label085:
        return 79;

     label086:
        if $i130 <= 0 goto label088;

     label087:
        return 172;

     label088:
        return 62;

     label089:
        $i4 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(124, 61);

        if $i4 != 0 goto label091;

     label090:
        return 80;

     label091:
        if $i4 <= 0 goto label093;

     label092:
        return 173;

     label093:
        return 70;

     label094:
        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(61);

        if $z2 == 0 goto label096;

     label095:
        return 174;

     label096:
        return 63;

     label097:
        return 81;

     label098:
        return 154;

     label099:
        $i78 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(10, 13);

        if $i78 != 0 goto label100;

        $r70 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r70.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Character_Constant");

        throw $r70;

     label100:
        if $i78 <= 0 goto label107;

        i243 = 0;

        goto label105;

     label101:
        $i118 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i120 = $i118 + i243;

        $i119 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i120 != $i119 goto label102;

        goto label106;

     label102:
        $r27 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i121 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i122 = $i121 + i243;

        $c123 = $r27[$i122];

        $i282 = (int) $c123;

        if $i282 != 10 goto label103;

        goto label106;

     label103:
        $r28 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i124 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i125 = $i124 + i243;

        $c126 = $r28[$i125];

        $i283 = (int) $c126;

        if $i283 != 39 goto label104;

        $i128 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i127 = i243 + 1;

        $i129 = $i128 + $i127;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i129;

        goto label106;

     label104:
        i243 = i243 + 1;

     label105:
        if i243 < 3 goto label101;

     label106:
        $r71 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r71.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Character_Constant");

        throw $r71;

     label107:
        $z17 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(39);

        if $z17 == 0 goto label114;

        i244 = 0;

        goto label112;

     label108:
        $i106 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i108 = $i106 + i244;

        $i107 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i108 != $i107 goto label109;

        goto label113;

     label109:
        $r25 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i109 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i110 = $i109 + i244;

        $c111 = $r25[$i110];

        $i284 = (int) $c111;

        if $i284 != 10 goto label110;

        goto label113;

     label110:
        $r26 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i112 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i113 = $i112 + i244;

        $c114 = $r26[$i113];

        $i285 = (int) $c114;

        if $i285 != 39 goto label111;

        $i116 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i115 = i244 + 1;

        $i117 = $i116 + $i115;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i117;

        goto label113;

     label111:
        i244 = i244 + 1;

     label112:
        if i244 < 3 goto label108;

     label113:
        $r72 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r72.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Character_Constant");

        throw $r72;

     label114:
        $z18 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(92);

        if $z18 == 0 goto label118;

        $z19 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash>;

        if $z19 == 0 goto label116;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r23 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i100 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i101 = $i100 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i101;

        $c102 = $r23[$i100];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c102;

        $i286 = (int) $c102;

        if $i286 != 92 goto label115;

        $r24 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i104 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c105 = $r24[$i104];

        $i287 = (int) $c105;

        if $i287 != 117 goto label115;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label117;

     label115:
        $i103 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i103 == 0 goto label117;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

        goto label117;

     label116:
        $r22 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i97 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i98 = $i97 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i98;

        $c99 = $r22[$i97];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c99;

     label117:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void scanEscapeCharacter()>();

        goto label125;

     label118:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

     label119:
        $r18 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i79 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i80 = $i79 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i80;

        $c81 = $r18[$i79];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c81;

        $i288 = (int) $c81;

        if $i288 != 92 goto label120;

        $r21 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i95 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c96 = $r21[$i95];

        $i289 = (int) $c96;

        if $i289 != 117 goto label120;

        $z34 = 1;

        goto label121;

     label120:
        $z34 = 0;

     label121:
        goto label123;

     label122:
        $r58 := @caughtexception;

        $i224 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i225 = $i224 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i225;

        $r73 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r73.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Character_Constant");

        throw $r73;

     label123:
        if $z34 == 0 goto label124;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label125;

     label124:
        $i82 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i82 == 0 goto label125;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label125:
        $z35 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(39);

        if $z35 == 0 goto label127;

     label126:
        return 44;

     label127:
        i245 = 0;

        goto label132;

     label128:
        $i83 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i85 = $i83 + i245;

        $i84 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i85 != $i84 goto label129;

        goto label133;

     label129:
        $r19 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i86 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i87 = $i86 + i245;

        $c88 = $r19[$i87];

        $i290 = (int) $c88;

        if $i290 != 10 goto label130;

        goto label133;

     label130:
        $r20 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i89 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i90 = $i89 + i245;

        $c91 = $r20[$i90];

        $i291 = (int) $c91;

        if $i291 != 39 goto label131;

        $i93 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i92 = i245 + 1;

        $i94 = $i93 + $i92;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i94;

        goto label133;

     label131:
        i245 = i245 + 1;

     label132:
        if i245 < 20 goto label128;

     label133:
        $r74 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r74.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Character_Constant");

        throw $r74;

     label134:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        z36 = 0;

        $r30 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i131 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i132 = $i131 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i132;

        $c133 = $r30[$i131];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c133;

        $i292 = (int) $c133;

        if $i292 != 92 goto label135;

        $r38 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i172 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c173 = $r38[$i172];

        $i293 = (int) $c173;

        if $i293 != 117 goto label135;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        z36 = 1;

        goto label154;

     label135:
        $i134 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i134 == 0 goto label154;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

        goto label154;

     label136:
        $c135 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i294 = (int) $c135;

        if $i294 == 10 goto label137;

        $c149 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i295 = (int) $c149;

        if $i295 != 13 goto label147;

     label137:
        if z36 == 0 goto label145;

        i246 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        i247 = 0;

        goto label144;

     label138:
        $i139 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i138 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i139 < $i138 goto label139;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i246;

        goto label146;

     label139:
        $r31 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i140 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i141 = $i140 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i141;

        $c142 = $r31[$i140];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c142;

        $i296 = (int) $c142;

        if $i296 != 92 goto label140;

        $r33 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i147 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c148 = $r33[$i147];

        $i297 = (int) $c148;

        if $i297 != 117 goto label140;

        z37 = 1;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label141;

     label140:
        z37 = 0;

     label141:
        if z37 != 0 goto label142;

        $c144 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i298 = (int) $c144;

        if $i298 != 10 goto label142;

        $i145 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i146 = $i145 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i146;

        goto label146;

     label142:
        $c143 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i299 = (int) $c143;

        if $i299 != 34 goto label143;

        $r75 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r75.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Char_In_String");

        throw $r75;

     label143:
        i247 = i247 + 1;

     label144:
        if i247 < 50 goto label138;

        goto label146;

     label145:
        $i136 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i137 = $i136 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i137;

     label146:
        $r76 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r76.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Char_In_String");

        throw $r76;

     label147:
        $c150 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i300 = (int) $c150;

        if $i300 != 92 goto label152;

        $z21 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash>;

        if $z21 == 0 goto label149;

        $i163 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        $i164 = $i163 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = $i164;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r36 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i165 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i166 = $i165 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i166;

        $c167 = $r36[$i165];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c167;

        $i301 = (int) $c167;

        if $i301 != 92 goto label148;

        $r37 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i168 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c169 = $r37[$i168];

        $i302 = (int) $c169;

        if $i302 != 117 goto label148;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        $i170 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        $i171 = $i170 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = $i171;

        goto label151;

     label148:
        goto label151;

     label149:
        $i154 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i154 != 0 goto label150;

        $i161 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i160 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i162 = $i161 - $i160;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeInitializeBuffer(int)>($i162);

     label150:
        $i155 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        $i156 = $i155 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = $i156;

        $r35 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i157 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i158 = $i157 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i158;

        $c159 = $r35[$i157];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c159;

     label151:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void scanEscapeCharacter()>();

        $i248 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i248 == 0 goto label152;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label152:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r66 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i249 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i250 = $i249 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i250;

        $c251 = $r66[$i249];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c251;

        $i303 = (int) $c251;

        if $i303 != 92 goto label153;

        $r34 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i152 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c153 = $r34[$i152];

        $i304 = (int) $c153;

        if $i304 != 117 goto label153;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        z36 = 1;

        goto label154;

     label153:
        z36 = 0;

        $i151 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i151 == 0 goto label154;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label154:
        $c252 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i305 = (int) $c252;

        if $i305 != 34 goto label136;

     label155:
        goto label164;

     label156:
        $r56 := @caughtexception;

        $i222 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i223 = $i222 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i223;

        $r77 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r77.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Unterminated_String");

        throw $r77;

     label157:
        $r52 := @caughtexception;

        $r53 = virtualinvoke $r52.<org.eclipse.jdt.core.compiler.InvalidInputException: java.lang.String getMessage()>();

        $z28 = virtualinvoke $r53.<java.lang.String: boolean equals(java.lang.Object)>("Invalid_Escape");

        if $z28 == 0 goto label163;

        i253 = 0;

        goto label162;

     label158:
        $i210 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i212 = $i210 + i253;

        $i211 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i212 != $i211 goto label159;

        goto label163;

     label159:
        $r54 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i213 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i214 = $i213 + i253;

        $c215 = $r54[$i214];

        $i306 = (int) $c215;

        if $i306 != 10 goto label160;

        goto label163;

     label160:
        $r55 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i216 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i217 = $i216 + i253;

        $c218 = $r55[$i217];

        $i307 = (int) $c218;

        if $i307 != 34 goto label161;

        $i220 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i219 = i253 + 1;

        $i221 = $i220 + $i219;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i221;

        goto label163;

     label161:
        i253 = i253 + 1;

     label162:
        if i253 < 50 goto label158;

     label163:
        throw $r52;

     label164:
        return 45;

     label165:
        $z7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean skipComments>;

        if $z7 != 0 goto label214;

        $i8 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(47, 42);

        if $i8 != 0 goto label186;

        $i35 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int lastCommentLinePosition> = $i35;

     label166:
        $r9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i36 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i37 = $i36 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i37;

        $c38 = $r9[$i36];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c38;

        $i308 = (int) $c38;

        if $i308 != 92 goto label167;

        $r17 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i72 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c73 = $r17[$i72];

        $i309 = (int) $c73;

        if $i309 != 117 goto label167;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

     label167:
        $c254 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i310 = (int) $c254;

        if $i310 != 92 goto label168;

        $r16 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i68 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c69 = $r16[$i68];

        $i311 = (int) $c69;

        if $i311 != 92 goto label168;

        $i70 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i71 = $i70 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i71;

     label168:
        z38 = 0;

        goto label171;

     label169:
        $i58 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int lastCommentLinePosition> = $i58;

        z38 = 0;

        $r13 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i59 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i60 = $i59 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i60;

        $c61 = $r13[$i59];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c61;

        $i312 = (int) $c61;

        if $i312 != 92 goto label170;

        $r15 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i66 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c67 = $r15[$i66];

        $i313 = (int) $c67;

        if $i313 != 117 goto label170;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        z38 = 1;

     label170:
        $c255 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i314 = (int) $c255;

        if $i314 != 92 goto label171;

        $r14 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i62 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c63 = $r14[$i62];

        $i315 = (int) $c63;

        if $i315 != 92 goto label171;

        $i64 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i65 = $i64 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i65;

     label171:
        $c256 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i316 = (int) $c256;

        if $i316 == 13 goto label172;

        $c57 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i317 = (int) $c57;

        if $i317 != 10 goto label169;

     label172:
        $c39 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i318 = (int) $c39;

        if $i318 != 13 goto label174;

        $i47 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        $i46 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        if $i47 <= $i46 goto label174;

        $r10 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i48 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c49 = $r10[$i48];

        $i319 = (int) $c49;

        if $i319 != 10 goto label173;

        $i55 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i56 = $i55 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i56;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = 10;

        goto label174;

     label173:
        $r11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i50 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c51 = $r11[$i50];

        $i320 = (int) $c51;

        if $i320 != 92 goto label174;

        $r12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i52 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i53 = $i52 + 1;

        $c54 = $r12[$i53];

        $i321 = (int) $c54;

        if $i321 != 117 goto label174;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        z38 = 1;

     label174:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void recordComment(int)>(1001);

        $r67 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] taskTags>;

        if $r67 == null goto label175;

        $i45 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i44 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void checkTaskTag(int,int)>($i45, $i44);

     label175:
        $c40 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i322 = (int) $c40;

        if $i322 == 13 goto label176;

        $c43 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i323 = (int) $c43;

        if $i323 != 10 goto label179;

     label176:
        $z12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean checkNonExternalizedStringLiterals>;

        if $z12 == 0 goto label177;

        $i42 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int lastPosition>;

        $i41 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        if $i42 >= $i41 goto label177;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void parseTags()>();

     label177:
        $z39 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean recordLineSeparator>;

        if $z39 == 0 goto label179;

        if z38 == 0 goto label178;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void pushUnicodeLineSeparator()>();

        goto label179;

     label178:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void pushLineSeparator()>();

     label179:
        $z40 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean tokenizeComments>;

        if $z40 == 0 goto label003;

     label180:
        return 1001;

     label181:
        $r50 := @caughtexception;

        $i202 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i203 = $i202 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i203;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void recordComment(int)>(1001);

        $r51 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] taskTags>;

        if $r51 == null goto label182;

        $i209 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i208 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void checkTaskTag(int,int)>($i209, $i208);

     label182:
        $z27 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean checkNonExternalizedStringLiterals>;

        if $z27 == 0 goto label183;

        $i207 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int lastPosition>;

        $i206 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        if $i207 >= $i206 goto label183;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void parseTags()>();

     label183:
        $z41 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean tokenizeComments>;

        if $z41 == 0 goto label185;

     label184:
        return 1001;

     label185:
        $i204 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i205 = $i204 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i205;

        goto label003;

     label186:
        if $i8 <= 0 goto label214;

     label187:
        z42 = 0;

        z43 = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i10;

        $c11 = $r1[$i9];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c11;

        $i324 = (int) $c11;

        if $i324 != 92 goto label188;

        $r8 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i33 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c34 = $r8[$i33];

        $i325 = (int) $c34;

        if $i325 != 117 goto label188;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        z44 = 1;

        goto label189;

     label188:
        z44 = 0;

        $i12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i12 == 0 goto label189;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label189:
        $c257 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i326 = (int) $c257;

        if $i326 != 42 goto label190;

        z42 = 1;

        z43 = 1;

     label190:
        $c13 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i327 = (int) $c13;

        if $i327 == 13 goto label191;

        $c32 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i328 = (int) $c32;

        if $i328 != 10 goto label193;

     label191:
        $z9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean recordLineSeparator>;

        if $z9 == 0 goto label193;

        if z44 == 0 goto label192;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void pushUnicodeLineSeparator()>();

        goto label193;

     label192:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void pushLineSeparator()>();

     label193:
        i258 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $r68 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i259 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i260 = $i259 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i260;

        $c261 = $r68[$i259];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c261;

        $i329 = (int) $c261;

        if $i329 != 92 goto label194;

        $r7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i30 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c31 = $r7[$i30];

        $i330 = (int) $c31;

        if $i330 != 117 goto label194;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        z45 = 1;

        goto label195;

     label194:
        z45 = 0;

     label195:
        $c262 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i331 = (int) $c262;

        if $i331 != 92 goto label196;

        $r6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i26 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c27 = $r6[$i26];

        $i332 = (int) $c27;

        if $i332 != 92 goto label196;

        $i28 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i29 = $i28 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i29;

     label196:
        $c263 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i333 = (int) $c263;

        if $i333 != 47 goto label197;

        z42 = 0;

     label197:
        i264 = 0;

        goto label208;

     label198:
        $c14 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i334 = (int) $c14;

        if $i334 == 13 goto label199;

        $c21 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i335 = (int) $c21;

        if $i335 != 10 goto label201;

     label199:
        $z10 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean recordLineSeparator>;

        if $z10 == 0 goto label201;

        if z45 == 0 goto label200;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void pushUnicodeLineSeparator()>();

        goto label201;

     label200:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void pushLineSeparator()>();

     label201:
        $c265 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i336 = (int) $c265;

        lookupswitch($i336)
        {
            case 42: goto label202;
            case 64: goto label203;
            default: goto label204;
        };

     label202:
        z43 = 1;

        goto label205;

     label203:
        if i264 != 0 goto label204;

        i264 = i258;

     label204:
        z43 = 0;

     label205:
        i258 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $r69 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i266 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i267 = $i266 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i267;

        $c268 = $r69[$i266];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c268;

        $i337 = (int) $c268;

        if $i337 != 92 goto label206;

        $r3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i19 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c20 = $r3[$i19];

        $i338 = (int) $c20;

        if $i338 != 117 goto label206;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        z45 = 1;

        goto label207;

     label206:
        z45 = 0;

     label207:
        $c269 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i339 = (int) $c269;

        if $i339 != 92 goto label208;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i15 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c16 = $r2[$i15];

        $i340 = (int) $c16;

        if $i340 != 92 goto label208;

        $i17 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i18 = $i17 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i18;

     label208:
        $c270 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i341 = (int) $c270;

        if $i341 != 47 goto label198;

        if z43 == 0 goto label198;

        if z42 == 0 goto label209;

        $s275 = 1003;

        $s274 = 1003;

        goto label210;

     label209:
        $s275 = 1002;

        $s274 = 1002;

     label210:
        s22 = $s274;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void recordComment(int)>($s275);

        $r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] commentTagStarts>;

        $i23 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int commentPtr>;

        $r4[$i23] = i264;

        $r5 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][] taskTags>;

        if $r5 == null goto label211;

        $i25 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i24 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void checkTaskTag(int,int)>($i25, $i24);

     label211:
        $z11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean tokenizeComments>;

        if $z11 == 0 goto label003;

     label212:
        return s22;

     label213:
        $r48 := @caughtexception;

        $i200 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i201 = $i200 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i201;

        $r78 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r78.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Unterminated_Comment");

        throw $r78;

     label214:
        $z8 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(61);

        if $z8 == 0 goto label216;

     label215:
        return 171;

     label216:
        return 10;

     label217:
        $z23 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean atEnd()>();

        if $z23 == 0 goto label219;

     label218:
        return 158;

     label219:
        $r79 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r79.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Ctrl-Z");

        throw $r79;

     label220:
        c272 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i342 = (int) c272;

        if $i342 >= 128 goto label225;

        $r44 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i343 = (int) c272;

        $i182 = $r44[$i343];

        $i183 = $i182 & 64;

        if $i183 == 0 goto label222;

        $i187 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int scanIdentifierOrKeyword()>();

     label221:
        return $i187;

     label222:
        $r45 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i344 = (int) c272;

        $i184 = $r45[$i344];

        $i185 = $i184 & 4;

        if $i185 == 0 goto label224;

        $i186 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int scanNumber(boolean)>(0);

     label223:
        return $i186;

     label224:
        return 309;

     label225:
        $i345 = (int) c272;

        $i347 = (int) 55296;

        if $i345 < $i347 goto label229;

        $i348 = (int) c272;

        $i350 = (int) 56319;

        if $i348 > $i350 goto label229;

        $l179 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: long complianceLevel>;

        $b180 = $l179 cmp 3211264L;

        $i351 = (int) $b180;

        if $i351 >= 0 goto label226;

        $r80 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r80.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Unicode_Escape");

        throw $r80;

     label226:
        $i181 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar()>();

        c273 = (char) $i181;

        $i352 = (int) c273;

        $i354 = (int) 56320;

        if $i352 < $i354 goto label227;

        $i355 = (int) c273;

        $i357 = (int) 57343;

        if $i355 <= $i357 goto label228;

     label227:
        $r81 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r81.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Low_Surrogate");

        throw $r81;

     label228:
        z46 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isJavaIdentifierStart(char,char)>(c272, c273);

        goto label232;

     label229:
        $i358 = (int) c272;

        $i360 = (int) 56320;

        if $i358 < $i360 goto label231;

        $i361 = (int) c272;

        $i363 = (int) 57343;

        if $i361 > $i363 goto label231;

        $l177 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: long complianceLevel>;

        $b178 = $l177 cmp 3211264L;

        $i364 = (int) $b178;

        if $i364 >= 0 goto label230;

        $r82 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r82.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Unicode_Escape");

        throw $r82;

     label230:
        $r83 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r83.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_High_Surrogate");

        throw $r83;

     label231:
        z46 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>(c272);

     label232:
        if z46 == 0 goto label234;

        $i176 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int scanIdentifierOrKeyword()>();

     label233:
        return $i176;

     label234:
        $c174 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $z24 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isDigit(char)>($c174);

        if $z24 == 0 goto label236;

        $i175 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int scanNumber(boolean)>(0);

     label235:
        return $i175;

     label236:
        return 309;

     label237:
        $r47 := @caughtexception;

        $z26 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean tokenizeWhiteSpace>;

        if $z26 == 0 goto label238;

        $i196 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i197 = $i196 - 1;

        if $i233 == $i197 goto label238;

        $i198 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i199 = $i198 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i199;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition> = $i233;

        return 1000;

     label238:
        return 158;

        catch java.lang.IndexOutOfBoundsException from label005 to label008 with label009;
        catch java.lang.IndexOutOfBoundsException from label119 to label121 with label122;
        catch java.lang.IndexOutOfBoundsException from label134 to label155 with label156;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label134 to label155 with label157;
        catch java.lang.IndexOutOfBoundsException from label166 to label180 with label181;
        catch java.lang.IndexOutOfBoundsException from label187 to label212 with label213;
        catch java.lang.IndexOutOfBoundsException from label003 to label010 with label237;
        catch java.lang.IndexOutOfBoundsException from label011 to label012 with label237;
        catch java.lang.IndexOutOfBoundsException from label013 to label014 with label237;
        catch java.lang.IndexOutOfBoundsException from label015 to label023 with label237;
        catch java.lang.IndexOutOfBoundsException from label024 to label027 with label237;
        catch java.lang.IndexOutOfBoundsException from label036 to label037 with label237;
        catch java.lang.IndexOutOfBoundsException from label038 to label039 with label237;
        catch java.lang.IndexOutOfBoundsException from label040 to label041 with label237;
        catch java.lang.IndexOutOfBoundsException from label042 to label043 with label237;
        catch java.lang.IndexOutOfBoundsException from label044 to label045 with label237;
        catch java.lang.IndexOutOfBoundsException from label046 to label047 with label237;
        catch java.lang.IndexOutOfBoundsException from label049 to label050 with label237;
        catch java.lang.IndexOutOfBoundsException from label051 to label052 with label237;
        catch java.lang.IndexOutOfBoundsException from label055 to label056 with label237;
        catch java.lang.IndexOutOfBoundsException from label058 to label059 with label237;
        catch java.lang.IndexOutOfBoundsException from label061 to label062 with label237;
        catch java.lang.IndexOutOfBoundsException from label064 to label065 with label237;
        catch java.lang.IndexOutOfBoundsException from label066 to label067 with label237;
        catch java.lang.IndexOutOfBoundsException from label070 to label071 with label237;
        catch java.lang.IndexOutOfBoundsException from label072 to label073 with label237;
        catch java.lang.IndexOutOfBoundsException from label074 to label075 with label237;
        catch java.lang.IndexOutOfBoundsException from label076 to label077 with label237;
        catch java.lang.IndexOutOfBoundsException from label081 to label082 with label237;
        catch java.lang.IndexOutOfBoundsException from label084 to label085 with label237;
        catch java.lang.IndexOutOfBoundsException from label086 to label087 with label237;
        catch java.lang.IndexOutOfBoundsException from label089 to label090 with label237;
        catch java.lang.IndexOutOfBoundsException from label091 to label092 with label237;
        catch java.lang.IndexOutOfBoundsException from label094 to label095 with label237;
        catch java.lang.IndexOutOfBoundsException from label099 to label126 with label237;
        catch java.lang.IndexOutOfBoundsException from label127 to label164 with label237;
        catch java.lang.IndexOutOfBoundsException from label165 to label180 with label237;
        catch java.lang.IndexOutOfBoundsException from label181 to label184 with label237;
        catch java.lang.IndexOutOfBoundsException from label185 to label212 with label237;
        catch java.lang.IndexOutOfBoundsException from label213 to label215 with label237;
        catch java.lang.IndexOutOfBoundsException from label217 to label218 with label237;
        catch java.lang.IndexOutOfBoundsException from label219 to label221 with label237;
        catch java.lang.IndexOutOfBoundsException from label222 to label223 with label237;
        catch java.lang.IndexOutOfBoundsException from label225 to label233 with label237;
        catch java.lang.IndexOutOfBoundsException from label234 to label235 with label237;
    }

    public void getNextUnicodeChar() throws org.eclipse.jdt.core.compiler.InvalidInputException
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        org.eclipse.jdt.core.compiler.InvalidInputException $r10, $r11, $r12, $r13;
        char[] $r2, $r4, $r5, $r6, $r7;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i24, $i25, $i26, $i28, $i29, $i30, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i40, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, i51, $i52, $i53;
        char $c7, $c19, $c23, $c27, $c31, $c39, $c41;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        i51 = 6;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i3 >= $i2 goto label04;

        goto label03;

     label01:
        $i8 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i9;

        $i11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i10 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i11 < $i10 goto label02;

        $i12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i13 = $i12 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i13;

        $r10 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r10.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Unicode_Escape");

        throw $r10;

     label02:
        i51 = i51 + 1;

     label03:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c7 = $r2[$i6];

        $i52 = (int) $c7;

        if $i52 == 117 goto label01;

        goto label05;

     label04:
        $i4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i5 = $i4 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i5;

        $r11 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r11.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Unicode_Escape");

        throw $r11;

     label05:
        $i14 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i16 = $i14 + 4;

        $i15 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i16 <= $i15 goto label06;

        $i49 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i47 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        $i46 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i48 = $i47 - $i46;

        $i50 = $i49 + $i48;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i50;

        $r12 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r12.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Unicode_Escape");

        throw $r12;

     label06:
        $r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i17 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i18 = $i17 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i18;

        $c19 = $r4[$i17];

        $i20 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int getNumericValue(char)>($c19);

        if $i20 > 15 goto label07;

        if $i20 < 0 goto label07;

        $r5 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i21 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i22 = $i21 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i22;

        $c23 = $r5[$i21];

        $i24 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int getNumericValue(char)>($c23);

        if $i24 > 15 goto label07;

        if $i24 < 0 goto label07;

        $r6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i25 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i26 = $i25 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i26;

        $c27 = $r6[$i25];

        $i28 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int getNumericValue(char)>($c27);

        if $i28 > 15 goto label07;

        if $i28 < 0 goto label07;

        $r7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i29 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i30 = $i29 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i30;

        $c31 = $r7[$i29];

        $i32 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int getNumericValue(char)>($c31);

        if $i32 > 15 goto label07;

        if $i32 >= 0 goto label08;

     label07:
        $r13 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r13.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Unicode_Escape");

        throw $r13;

     label08:
        $i33 = $i20 * 16;

        $i34 = $i33 + $i24;

        $i35 = $i34 * 16;

        $i36 = $i35 + $i28;

        $i37 = $i36 * 16;

        $i38 = $i37 + $i32;

        $c39 = (char) $i38;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c39;

        $i40 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i40 != 0 goto label09;

        $i42 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i44 = $i42 - i51;

        $i43 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i45 = $i44 - $i43;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeInitializeBuffer(int)>($i45);

     label09:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

        $c41 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i53 = (int) $c41;

        if $i53 != 92 goto label10;

        $z0 = 1;

        goto label11;

     label10:
        $z0 = 0;

     label11:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = $z0;

        return;
    }

    public org.eclipse.jdt.internal.compiler.parser.NLSTag[] getNLSTags()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int i0;
        org.eclipse.jdt.internal.compiler.parser.NLSTag[] r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int nlsTagsPtr>;

        if i0 == 0 goto label1;

        r1 = newarray (org.eclipse.jdt.internal.compiler.parser.NLSTag)[i0];

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, i0);

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int nlsTagsPtr> = 0;

        return r1;

     label1:
        return null;
    }

    public char[] getSource()
    {
        char[] $r1;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        return $r1;
    }

    public final void jumpOverMethodBody()
    {
        int[] $r4, $r30, $r31;
        int $i1, $i2, $i3, $i5, $i8, $i10, $i11, $i12, $i15, $i16, $i18, $i19, $i20, $i23, $i25, $i26, $i27, $i31, $i32, $i34, $i35, $i36, $i38, $i40, $i41, $i43, $i44, $i46, $i47, $i48, $i50, $i52, $i53, $i54, $i56, $i58, $i59, $i60, $i62, $i63, $i65, $i66, $i68, $i69, $i71, $i72, $i74, $i75, $i77, $i78, $i80, $i84, $i85, $i87, $i88, $i90, $i91, $i93, $i94, $i96, $i98, $i99, $i100, $i104, $i105, $i106, $i107, $i108, $i111, $i113, $i114, $i115, $i116, $i117, $i118, i119, $i120, $i121, $i122, $i125, $i126, i133, $i134, $i135, i139, $i141, $i142, $i149, $i150, $i151, $i152, $i153, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i210, $i211, $i213, $i214, $i215, $i217, $i218, $i220, $i221, $i223, $i224, $i226;
        char[] $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r32, $r44, $r45, $r46, $r47;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, $z10, $z11, $z12, z13, z14, z15, z16, z17;
        java.lang.IndexOutOfBoundsException $r34, $r36, $r37, $r38;
        byte $b103;
        long $l102;
        short $s146;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        org.eclipse.jdt.core.compiler.InvalidInputException $r33, $r35, $r39, $r40, $r41, $r42, $r43, $r48;
        char $c0, $c4, $c6, $c7, $c9, $c13, $c14, $c17, $c21, $c22, $c24, $c28, $c29, $c30, $c33, $c37, $c39, $c42, $c45, $c49, $c51, $c55, $c57, $c61, $c64, $c67, $c70, $c73, $c76, $c79, $c81, $c82, $c83, $c86, $c89, $c92, $c95, $c97, $c101, $c109, $c110, $c112, $c123, $c124, $c127, $c128, $c129, $c130, $c131, $c132, $c136, $c137, $c138, $c140, $c143, $c144, $c145, c147, c148;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean wasAcr> = 0;

        i119 = 1;

     label001:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = 0;

     label002:
        $i120 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition> = $i120;

        $r44 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i121 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i122 = $i121 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i122;

        $c123 = $r44[$i121];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c123;

        $i149 = (int) $c123;

        if $i149 != 92 goto label003;

        $r32 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i111 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c112 = $r32[$i111];

        $i150 = (int) $c112;

        if $i150 != 117 goto label003;

        z8 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean jumpOverUnicodeWhiteSpace()>();

        goto label006;

     label003:
        $z0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean recordLineSeparator>;

        if $z0 == 0 goto label005;

        $c109 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i151 = (int) $c109;

        if $i151 == 13 goto label004;

        $c110 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i152 = (int) $c110;

        if $i152 != 10 goto label005;

     label004:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void pushLineSeparator()>();

     label005:
        $c124 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        z8 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean isWhitespace(char)>($c124);

     label006:
        if z8 != 0 goto label002;

        $c0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i153 = (int) $c0;

        lookupswitch($i153)
        {
            case 34: goto label022;
            case 39: goto label010;
            case 47: goto label044;
            case 123: goto label007;
            case 125: goto label008;
            default: goto label088;
        };

     label007:
        i119 = i119 + 1;

        goto label001;

     label008:
        $i155 = (int) -1;

        i119 = i119 + $i155;

        if i119 != 0 goto label001;

     label009:
        return;

     label010:
        $z4 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(92);

        if $z4 == 0 goto label017;

     label011:
        $z5 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash>;

        if $z5 == 0 goto label013;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r20 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i71 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i72 = $i71 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i72;

        $c73 = $r20[$i71];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c73;

        $i156 = (int) $c73;

        if $i156 != 92 goto label012;

        $r21 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i75 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c76 = $r21[$i75];

        $i157 = (int) $c76;

        if $i157 != 117 goto label012;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label014;

     label012:
        $i74 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i74 == 0 goto label014;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

        goto label014;

     label013:
        $r19 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i68 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i69 = $i68 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i69;

        $c70 = $r19[$i68];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c70;

     label014:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void scanEscapeCharacter()>();

     label015:
        goto label021;

     label016:
        $r43 := @caughtexception;

        goto label021;

     label017:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r17 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i62 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i63 = $i62 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i63;

        $c64 = $r17[$i62];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c64;

        $i158 = (int) $c64;

        if $i158 != 92 goto label018;

        $r18 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i66 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c67 = $r18[$i66];

        $i159 = (int) $c67;

        if $i159 != 117 goto label018;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label021;

     label018:
        $i65 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i65 == 0 goto label021;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label019:
        goto label021;

     label020:
        $r42 := @caughtexception;

     label021:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(39);

        goto label001;

     label022:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r22 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i77 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i78 = $i77 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i78;

        $c79 = $r22[$i77];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c79;

        $i160 = (int) $c79;

        if $i160 != 92 goto label023;

        $r28 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i100 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c101 = $r28[$i100];

        $i161 = (int) $c101;

        if $i161 != 117 goto label023;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label040;

     label023:
        $i80 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i80 == 0 goto label040;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label024:
        goto label040;

     label025:
        $r41 := @caughtexception;

        goto label040;

     label026:
        $c81 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i162 = (int) $c81;

        if $i162 != 13 goto label028;

        $r27 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i96 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c97 = $r27[$i96];

        $i163 = (int) $c97;

        if $i163 != 10 goto label001;

        $i98 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i99 = $i98 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i99;

     label027:
        goto label001;

     label028:
        $c82 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i164 = (int) $c82;

        if $i164 != 10 goto label029;

        goto label001;

     label029:
        $c83 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i165 = (int) $c83;

        if $i165 != 92 goto label036;

     label030:
        $z6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash>;

        if $z6 == 0 goto label032;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r25 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i90 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i91 = $i90 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i91;

        $c92 = $r25[$i90];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c92;

        $i166 = (int) $c92;

        if $i166 != 92 goto label031;

        $r26 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i94 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c95 = $r26[$i94];

        $i167 = (int) $c95;

        if $i167 != 117 goto label031;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label033;

     label031:
        $i93 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i93 == 0 goto label033;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

        goto label033;

     label032:
        $r24 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i87 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i88 = $i87 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i88;

        $c89 = $r24[$i87];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c89;

     label033:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void scanEscapeCharacter()>();

     label034:
        goto label036;

     label035:
        $r40 := @caughtexception;

     label036:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r45 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i125 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i126 = $i125 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i126;

        $c127 = $r45[$i125];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c127;

        $i168 = (int) $c127;

        if $i168 != 92 goto label037;

        $r23 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i85 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c86 = $r23[$i85];

        $i169 = (int) $c86;

        if $i169 != 117 goto label037;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label040;

     label037:
        $i84 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i84 == 0 goto label040;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label038:
        goto label040;

     label039:
        $r39 := @caughtexception;

     label040:
        $c128 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i170 = (int) $c128;

        if $i170 != 34 goto label026;

     label041:
        goto label001;

     label042:
        $r38 := @caughtexception;

     label043:
        return;

     label044:
        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(47, 42);

        if $i1 != 0 goto label060;

     label045:
        $i25 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int lastCommentLinePosition> = $i25;

        $r8 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i26 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i27 = $i26 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i27;

        $c28 = $r8[$i26];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c28;

        $i171 = (int) $c28;

        if $i171 != 92 goto label046;

        $r16 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i60 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c61 = $r16[$i60];

        $i172 = (int) $c61;

        if $i172 != 117 goto label046;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

     label046:
        $c129 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i173 = (int) $c129;

        if $i173 != 92 goto label047;

        $r15 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i56 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c57 = $r15[$i56];

        $i174 = (int) $c57;

        if $i174 != 92 goto label047;

        $i58 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i59 = $i58 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i59;

     label047:
        z9 = 0;

        goto label050;

     label048:
        $i46 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int lastCommentLinePosition> = $i46;

        z9 = 0;

        $r12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i47 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i48 = $i47 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i48;

        $c49 = $r12[$i47];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c49;

        $i175 = (int) $c49;

        if $i175 != 92 goto label049;

        $r14 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i54 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c55 = $r14[$i54];

        $i176 = (int) $c55;

        if $i176 != 117 goto label049;

        z9 = 1;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

     label049:
        $c130 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i177 = (int) $c130;

        if $i177 != 92 goto label050;

        $r13 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i50 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c51 = $r13[$i50];

        $i178 = (int) $c51;

        if $i178 != 92 goto label050;

        $i52 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i53 = $i52 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i53;

     label050:
        $c131 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i179 = (int) $c131;

        if $i179 == 13 goto label051;

        $c45 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i180 = (int) $c45;

        if $i180 != 10 goto label048;

     label051:
        $c29 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i181 = (int) $c29;

        if $i181 != 13 goto label053;

        $i35 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        $i34 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        if $i35 <= $i34 goto label053;

        $r9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i36 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c37 = $r9[$i36];

        $i182 = (int) $c37;

        if $i182 != 10 goto label052;

        $i43 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i44 = $i43 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i44;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = 10;

        goto label053;

     label052:
        $r10 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i38 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c39 = $r10[$i38];

        $i183 = (int) $c39;

        if $i183 != 92 goto label053;

        $r11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i40 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i41 = $i40 + 1;

        $c42 = $r11[$i41];

        $i184 = (int) $c42;

        if $i184 != 117 goto label053;

        z9 = 1;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

     label053:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void recordComment(int)>(1001);

        $z10 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean recordLineSeparator>;

        if $z10 == 0 goto label001;

        $c30 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i185 = (int) $c30;

        if $i185 == 13 goto label054;

        $c33 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i186 = (int) $c33;

        if $i186 != 10 goto label001;

     label054:
        $z3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean checkNonExternalizedStringLiterals>;

        if $z3 == 0 goto label055;

        $i32 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int lastPosition>;

        $i31 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        if $i32 >= $i31 goto label055;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void parseTags()>();

     label055:
        $z11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean recordLineSeparator>;

        if $z11 == 0 goto label001;

        if z9 == 0 goto label056;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void pushUnicodeLineSeparator()>();

        goto label001;

     label056:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void pushLineSeparator()>();

     label057:
        goto label001;

     label058:
        $r37 := @caughtexception;

        $i113 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i114 = $i113 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i114;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void recordComment(int)>(1001);

        $z7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean checkNonExternalizedStringLiterals>;

        if $z7 == 0 goto label059;

        $i118 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int lastPosition>;

        $i117 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        if $i118 >= $i117 goto label059;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void parseTags()>();

     label059:
        $z12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean tokenizeComments>;

        if $z12 != 0 goto label001;

        $i115 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i116 = $i115 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i116;

        goto label001;

     label060:
        if $i1 <= 0 goto label001;

        z13 = 0;

     label061:
        z14 = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i3;

        $c4 = $r1[$i2];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c4;

        $i187 = (int) $c4;

        if $i187 != 92 goto label062;

        $r7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i23 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c24 = $r7[$i23];

        $i188 = (int) $c24;

        if $i188 != 117 goto label062;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        z15 = 1;

        goto label063;

     label062:
        z15 = 0;

        $i5 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i5 == 0 goto label063;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label063:
        $c132 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i189 = (int) $c132;

        if $i189 != 42 goto label064;

        z13 = 1;

        z14 = 1;

     label064:
        $c6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i190 = (int) $c6;

        if $i190 == 13 goto label065;

        $c22 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i191 = (int) $c22;

        if $i191 != 10 goto label067;

     label065:
        $z1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean recordLineSeparator>;

        if $z1 == 0 goto label067;

        if z15 == 0 goto label066;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void pushUnicodeLineSeparator()>();

        goto label067;

     label066:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void pushLineSeparator()>();

     label067:
        i133 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $r46 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i134 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i135 = $i134 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i135;

        $c136 = $r46[$i134];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c136;

        $i192 = (int) $c136;

        if $i192 != 92 goto label068;

        $r6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i20 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c21 = $r6[$i20];

        $i193 = (int) $c21;

        if $i193 != 117 goto label068;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        z16 = 1;

        goto label069;

     label068:
        z16 = 0;

     label069:
        $c137 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i194 = (int) $c137;

        if $i194 != 92 goto label070;

        $r5 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i16 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c17 = $r5[$i16];

        $i195 = (int) $c17;

        if $i195 != 92 goto label070;

        $i18 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i19 = $i18 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i19;

     label070:
        $c138 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i196 = (int) $c138;

        if $i196 != 47 goto label071;

        z13 = 0;

     label071:
        i139 = 0;

        goto label082;

     label072:
        $c7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i197 = (int) $c7;

        if $i197 == 13 goto label073;

        $c14 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i198 = (int) $c14;

        if $i198 != 10 goto label075;

     label073:
        $z2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean recordLineSeparator>;

        if $z2 == 0 goto label075;

        if z16 == 0 goto label074;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void pushUnicodeLineSeparator()>();

        goto label075;

     label074:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void pushLineSeparator()>();

     label075:
        $c140 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i199 = (int) $c140;

        lookupswitch($i199)
        {
            case 42: goto label076;
            case 64: goto label077;
            default: goto label078;
        };

     label076:
        z14 = 1;

        goto label079;

     label077:
        if i139 != 0 goto label078;

        i139 = i133;

     label078:
        z14 = 0;

     label079:
        i133 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $r47 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i141 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i142 = $i141 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i142;

        $c143 = $r47[$i141];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c143;

        $i200 = (int) $c143;

        if $i200 != 92 goto label080;

        $r3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c13 = $r3[$i12];

        $i201 = (int) $c13;

        if $i201 != 117 goto label080;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        z16 = 1;

        goto label081;

     label080:
        z16 = 0;

     label081:
        $c144 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i202 = (int) $c144;

        if $i202 != 92 goto label082;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i8 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c9 = $r2[$i8];

        $i203 = (int) $c9;

        if $i203 != 92 goto label082;

        $i10 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i11 = $i10 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i11;

     label082:
        $c145 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i204 = (int) $c145;

        if $i204 != 47 goto label072;

        if z14 == 0 goto label072;

        if z13 == 0 goto label083;

        $s146 = 1003;

        goto label084;

     label083:
        $s146 = 1002;

     label084:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void recordComment(int)>($s146);

        $r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] commentTagStarts>;

        $i15 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int commentPtr>;

        $r4[$i15] = i139;

     label085:
        goto label001;

     label086:
        $r36 := @caughtexception;

     label087:
        return;

     label088:
        c147 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i205 = (int) c147;

        if $i205 >= 128 goto label092;

        $r30 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i206 = (int) c147;

        $i105 = $r30[$i206];

        $i106 = $i105 & 64;

        if $i106 == 0 goto label090;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int scanIdentifierOrKeyword()>();

     label089:
        goto label001;

     label090:
        $r31 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i207 = (int) c147;

        $i107 = $r31[$i207];

        $i108 = $i107 & 4;

        if $i108 == 0 goto label001;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int scanNumber(boolean)>(0);

     label091:
        goto label001;

     label092:
        $i208 = (int) c147;

        $i210 = (int) 55296;

        if $i208 < $i210 goto label096;

        $i211 = (int) c147;

        $i213 = (int) 56319;

        if $i211 > $i213 goto label096;

        $l102 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: long complianceLevel>;

        $b103 = $l102 cmp 3211264L;

        $i214 = (int) $b103;

        if $i214 >= 0 goto label093;

        $r48 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r48.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Unicode_Escape");

        throw $r48;

     label093:
        $i104 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar()>();

        c148 = (char) $i104;

        $i215 = (int) c148;

        $i217 = (int) 56320;

        if $i215 < $i217 goto label001;

        $i218 = (int) c148;

        $i220 = (int) 57343;

        if $i218 <= $i220 goto label095;

     label094:
        goto label001;

     label095:
        z17 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isJavaIdentifierStart(char,char)>(c147, c148);

        goto label099;

     label096:
        $i221 = (int) c147;

        $i223 = (int) 56320;

        if $i221 < $i223 goto label098;

        $i224 = (int) c147;

        $i226 = (int) 57343;

        if $i224 > $i226 goto label098;

     label097:
        goto label001;

     label098:
        z17 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>(c147);

     label099:
        if z17 == 0 goto label001;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int scanIdentifierOrKeyword()>();

     label100:
        goto label001;

     label101:
        $r35 := @caughtexception;

        goto label001;

     label102:
        $r34 := @caughtexception;

        goto label104;

     label103:
        $r33 := @caughtexception;

     label104:
        return;

        catch org.eclipse.jdt.core.compiler.InvalidInputException from label011 to label015 with label016;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label017 to label019 with label020;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label022 to label024 with label025;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label030 to label034 with label035;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label036 to label038 with label039;
        catch java.lang.IndexOutOfBoundsException from label022 to label027 with label042;
        catch java.lang.IndexOutOfBoundsException from label028 to label041 with label042;
        catch java.lang.IndexOutOfBoundsException from label045 to label057 with label058;
        catch java.lang.IndexOutOfBoundsException from label061 to label085 with label086;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label088 to label089 with label101;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label090 to label091 with label101;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label092 to label094 with label101;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label095 to label097 with label101;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label098 to label100 with label101;
        catch java.lang.IndexOutOfBoundsException from label001 to label009 with label102;
        catch java.lang.IndexOutOfBoundsException from label010 to label043 with label102;
        catch java.lang.IndexOutOfBoundsException from label044 to label087 with label102;
        catch java.lang.IndexOutOfBoundsException from label088 to label102 with label102;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label001 to label009 with label103;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label010 to label043 with label103;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label044 to label087 with label103;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label088 to label102 with label103;
    }

    public final boolean jumpOverUnicodeWhiteSpace() throws org.eclipse.jdt.core.compiler.InvalidInputException
    {
        char $c0;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean wasAcr> = 0;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        $c0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean isWhitespace(char)>($c0);

        return $z0;
    }

    final char[] optimizedCurrentTokenSource1()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int $i0, $i2;
        char c1;
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        c1 = $r1[$i0];

        $i2 = (int) c1;

        tableswitch($i2)
        {
            case 97: goto label01;
            case 98: goto label02;
            case 99: goto label03;
            case 100: goto label04;
            case 101: goto label05;
            case 102: goto label06;
            case 103: goto label07;
            case 104: goto label08;
            case 105: goto label09;
            case 106: goto label10;
            case 107: goto label11;
            case 108: goto label12;
            case 109: goto label13;
            case 110: goto label14;
            case 111: goto label15;
            case 112: goto label16;
            case 113: goto label17;
            case 114: goto label18;
            case 115: goto label19;
            case 116: goto label20;
            case 117: goto label21;
            case 118: goto label22;
            case 119: goto label23;
            case 120: goto label24;
            case 121: goto label25;
            case 122: goto label26;
            default: goto label27;
        };

     label01:
        $r27 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_a>;

        return $r27;

     label02:
        $r26 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_b>;

        return $r26;

     label03:
        $r25 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_c>;

        return $r25;

     label04:
        $r24 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_d>;

        return $r24;

     label05:
        $r23 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_e>;

        return $r23;

     label06:
        $r22 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_f>;

        return $r22;

     label07:
        $r21 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_g>;

        return $r21;

     label08:
        $r20 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_h>;

        return $r20;

     label09:
        $r19 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_i>;

        return $r19;

     label10:
        $r18 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_j>;

        return $r18;

     label11:
        $r17 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_k>;

        return $r17;

     label12:
        $r16 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_l>;

        return $r16;

     label13:
        $r15 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_m>;

        return $r15;

     label14:
        $r14 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_n>;

        return $r14;

     label15:
        $r13 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_o>;

        return $r13;

     label16:
        $r12 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_p>;

        return $r12;

     label17:
        $r11 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_q>;

        return $r11;

     label18:
        $r10 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_r>;

        return $r10;

     label19:
        $r9 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_s>;

        return $r9;

     label20:
        $r8 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_t>;

        return $r8;

     label21:
        $r7 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_u>;

        return $r7;

     label22:
        $r6 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_v>;

        return $r6;

     label23:
        $r5 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_w>;

        return $r5;

     label24:
        $r4 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_x>;

        return $r4;

     label25:
        $r3 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_y>;

        return $r3;

     label26:
        $r2 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] charArray_z>;

        return $r2;

     label27:
        $r28 = newarray (char)[1];

        $r28[0] = c1;

        return $r28;
    }

    final char[] optimizedCurrentTokenSource2()
    {
        char[][] r4;
        char[][][] $r3;
        char[][][][] $r2;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int i0, $i2, $i4, $i5, i6, i11, i12, i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26;
        char $c1, $c3, $c7, $c8, $c9, $c10;
        char[] r1, $r5, r6, r7;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $c1 = r1[i0];

        $i15 = (int) $c1;

        $i4 = $i15 << 6;

        $i2 = i0 + 1;

        $c3 = r1[$i2];

        $i16 = (int) $c3;

        $i5 = $i4 + $i16;

        i6 = $i5 % 30;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][][][] charArray_length>;

        $r3 = $r2[0];

        r4 = $r3[i6];

        i11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry2>;

        goto label2;

     label1:
        r6 = r4[i11];

        $c7 = r6[0];

        $i17 = (int) $c1;

        $i18 = (int) $c7;

        if $i17 != $i18 goto label2;

        $c8 = r6[1];

        $i19 = (int) $c3;

        $i20 = (int) $c8;

        if $i19 != $i20 goto label2;

        return r6;

     label2:
        i11 = i11 + 1;

        if i11 < 6 goto label1;

        $i22 = (int) -1;

        i12 = $i22;

        i13 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry2>;

        goto label4;

     label3:
        r7 = r4[i12];

        $c9 = r7[0];

        $i23 = (int) $c1;

        $i24 = (int) $c9;

        if $i23 != $i24 goto label4;

        $c10 = r7[1];

        $i25 = (int) $c3;

        $i26 = (int) $c10;

        if $i25 != $i26 goto label4;

        return r7;

     label4:
        i12 = i12 + 1;

        if i12 <= i13 goto label3;

        i14 = i13 + 1;

        if i14 < 6 goto label5;

        i14 = 0;

     label5:
        $r5 = newarray (char)[2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r5, 0, 2);

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry2> = i14;

        r4[i14] = $r5;

        return $r5;
    }

    final char[] optimizedCurrentTokenSource3()
    {
        char[][] r4;
        char[][][] $r3;
        char[][][][] $r2;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int i0, $i1, $i4, $i6, $i7, i8, i15, i16, i17, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i28, $i29, $i30, $i31, $i32, $i33, $i34;
        char c2, $c3, $c5, $c9, $c10, $c11, $c12, $c13, $c14;
        char[] r1, $r5, r6, r7;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i1 = i0 + 1;

        c2 = r1[$i1];

        $c3 = r1[i0];

        $i19 = (int) $c3;

        $i6 = $i19 << 6;

        $i4 = i0 + 2;

        $c5 = r1[$i4];

        $i20 = (int) $c5;

        $i7 = $i6 + $i20;

        i8 = $i7 % 30;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][][][] charArray_length>;

        $r3 = $r2[1];

        r4 = $r3[i8];

        i15 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry3>;

        goto label2;

     label1:
        r6 = r4[i15];

        $c9 = r6[0];

        $i21 = (int) $c3;

        $i22 = (int) $c9;

        if $i21 != $i22 goto label2;

        $c10 = r6[1];

        $i23 = (int) c2;

        $i24 = (int) $c10;

        if $i23 != $i24 goto label2;

        $c11 = r6[2];

        $i25 = (int) $c5;

        $i26 = (int) $c11;

        if $i25 != $i26 goto label2;

        return r6;

     label2:
        i15 = i15 + 1;

        if i15 < 6 goto label1;

        $i28 = (int) -1;

        i16 = $i28;

        i17 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry3>;

        goto label4;

     label3:
        r7 = r4[i16];

        $c12 = r7[0];

        $i29 = (int) $c3;

        $i30 = (int) $c12;

        if $i29 != $i30 goto label4;

        $c13 = r7[1];

        $i31 = (int) c2;

        $i32 = (int) $c13;

        if $i31 != $i32 goto label4;

        $c14 = r7[2];

        $i33 = (int) $c5;

        $i34 = (int) $c14;

        if $i33 != $i34 goto label4;

        return r7;

     label4:
        i16 = i16 + 1;

        if i16 <= i17 goto label3;

        i18 = i17 + 1;

        if i18 < 6 goto label5;

        i18 = 0;

     label5:
        $r5 = newarray (char)[3];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r5, 0, 3);

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry3> = i18;

        r4[i18] = $r5;

        return $r5;
    }

    final char[] optimizedCurrentTokenSource4()
    {
        char[][] r4;
        char[][][] $r3;
        char[][][][] $r2;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int i0, $i1, $i3, $i6, $i8, $i9, i10, i19, i20, i21, i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42;
        char c2, c4, $c5, $c7, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18;
        char[] r1, $r5, r6, r7;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i1 = i0 + 1;

        c2 = r1[$i1];

        $i3 = i0 + 3;

        c4 = r1[$i3];

        $c5 = r1[i0];

        $i23 = (int) $c5;

        $i8 = $i23 << 6;

        $i6 = i0 + 2;

        $c7 = r1[$i6];

        $i24 = (int) $c7;

        $i9 = $i8 + $i24;

        i10 = $i9 % 30;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][][][] charArray_length>;

        $r3 = $r2[2];

        r4 = $r3[i10];

        i19 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry4>;

        goto label2;

     label1:
        r6 = r4[i19];

        $c11 = r6[0];

        $i25 = (int) $c5;

        $i26 = (int) $c11;

        if $i25 != $i26 goto label2;

        $c12 = r6[1];

        $i27 = (int) c2;

        $i28 = (int) $c12;

        if $i27 != $i28 goto label2;

        $c13 = r6[2];

        $i29 = (int) $c7;

        $i30 = (int) $c13;

        if $i29 != $i30 goto label2;

        $c14 = r6[3];

        $i31 = (int) c4;

        $i32 = (int) $c14;

        if $i31 != $i32 goto label2;

        return r6;

     label2:
        i19 = i19 + 1;

        if i19 < 6 goto label1;

        $i34 = (int) -1;

        i20 = $i34;

        i21 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry4>;

        goto label4;

     label3:
        r7 = r4[i20];

        $c15 = r7[0];

        $i35 = (int) $c5;

        $i36 = (int) $c15;

        if $i35 != $i36 goto label4;

        $c16 = r7[1];

        $i37 = (int) c2;

        $i38 = (int) $c16;

        if $i37 != $i38 goto label4;

        $c17 = r7[2];

        $i39 = (int) $c7;

        $i40 = (int) $c17;

        if $i39 != $i40 goto label4;

        $c18 = r7[3];

        $i41 = (int) c4;

        $i42 = (int) $c18;

        if $i41 != $i42 goto label4;

        return r7;

     label4:
        i20 = i20 + 1;

        if i20 <= i21 goto label3;

        i22 = i21 + 1;

        if i22 < 6 goto label5;

        i22 = 0;

     label5:
        $r5 = newarray (char)[4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r5, 0, 4);

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry4> = i22;

        r4[i22] = $r5;

        return $r5;
    }

    final char[] optimizedCurrentTokenSource5()
    {
        char[][] r4;
        char[][][] $r3;
        char[][][][] $r2;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int i0, $i1, $i3, $i6, $i8, $i9, $i10, $i12, $i13, i14, i25, i26, i27, i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53;
        char c2, c4, $c5, $c7, $c11, $c15, $c16, $c17, $c18, $c19, $c20, $c21, $c22, $c23, $c24;
        char[] r1, $r5, r6, r7;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i1 = i0 + 1;

        c2 = r1[$i1];

        $i3 = i0 + 3;

        c4 = r1[$i3];

        $c5 = r1[i0];

        $i29 = (int) $c5;

        $i9 = $i29 << 12;

        $i6 = i0 + 2;

        $c7 = r1[$i6];

        $i30 = (int) $c7;

        $i8 = $i30 << 6;

        $i12 = $i9 + $i8;

        $i10 = i0 + 4;

        $c11 = r1[$i10];

        $i31 = (int) $c11;

        $i13 = $i12 + $i31;

        i14 = $i13 % 30;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][][][] charArray_length>;

        $r3 = $r2[3];

        r4 = $r3[i14];

        i25 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry5>;

        goto label2;

     label1:
        r6 = r4[i25];

        $c15 = r6[0];

        $i32 = (int) $c5;

        $i33 = (int) $c15;

        if $i32 != $i33 goto label2;

        $c16 = r6[1];

        $i34 = (int) c2;

        $i35 = (int) $c16;

        if $i34 != $i35 goto label2;

        $c17 = r6[2];

        $i36 = (int) $c7;

        $i37 = (int) $c17;

        if $i36 != $i37 goto label2;

        $c18 = r6[3];

        $i38 = (int) c4;

        $i39 = (int) $c18;

        if $i38 != $i39 goto label2;

        $c19 = r6[4];

        $i40 = (int) $c11;

        $i41 = (int) $c19;

        if $i40 != $i41 goto label2;

        return r6;

     label2:
        i25 = i25 + 1;

        if i25 < 6 goto label1;

        $i43 = (int) -1;

        i26 = $i43;

        i27 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry5>;

        goto label4;

     label3:
        r7 = r4[i26];

        $c20 = r7[0];

        $i44 = (int) $c5;

        $i45 = (int) $c20;

        if $i44 != $i45 goto label4;

        $c21 = r7[1];

        $i46 = (int) c2;

        $i47 = (int) $c21;

        if $i46 != $i47 goto label4;

        $c22 = r7[2];

        $i48 = (int) $c7;

        $i49 = (int) $c22;

        if $i48 != $i49 goto label4;

        $c23 = r7[3];

        $i50 = (int) c4;

        $i51 = (int) $c23;

        if $i50 != $i51 goto label4;

        $c24 = r7[4];

        $i52 = (int) $c11;

        $i53 = (int) $c24;

        if $i52 != $i53 goto label4;

        return r7;

     label4:
        i26 = i26 + 1;

        if i26 <= i27 goto label3;

        i28 = i27 + 1;

        if i28 < 6 goto label5;

        i28 = 0;

     label5:
        $r5 = newarray (char)[5];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r5, 0, 5);

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry5> = i28;

        r4[i28] = $r5;

        return $r5;
    }

    final char[] optimizedCurrentTokenSource6()
    {
        char[][] r4;
        char[][][] $r3;
        char[][][][] $r2;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        char[] r1, $r5, r6, r7;
        int i0, $i1, $i3, $i5, $i8, $i10, $i11, $i12, $i14, $i15, i16, i29, i30, i31, i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61;
        char c2, c4, c6, $c7, $c9, $c13, $c17, $c18, $c19, $c20, $c21, $c22, $c23, $c24, $c25, $c26, $c27, $c28;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i1 = i0 + 1;

        c2 = r1[$i1];

        $i3 = i0 + 3;

        c4 = r1[$i3];

        $i5 = i0 + 5;

        c6 = r1[$i5];

        $c7 = r1[i0];

        $i33 = (int) $c7;

        $i11 = $i33 << 12;

        $i8 = i0 + 2;

        $c9 = r1[$i8];

        $i34 = (int) $c9;

        $i10 = $i34 << 6;

        $i14 = $i11 + $i10;

        $i12 = i0 + 4;

        $c13 = r1[$i12];

        $i35 = (int) $c13;

        $i15 = $i14 + $i35;

        i16 = $i15 % 30;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[][][][] charArray_length>;

        $r3 = $r2[4];

        r4 = $r3[i16];

        i29 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry6>;

        goto label2;

     label1:
        r6 = r4[i29];

        $c17 = r6[0];

        $i36 = (int) $c7;

        $i37 = (int) $c17;

        if $i36 != $i37 goto label2;

        $c18 = r6[1];

        $i38 = (int) c2;

        $i39 = (int) $c18;

        if $i38 != $i39 goto label2;

        $c19 = r6[2];

        $i40 = (int) $c9;

        $i41 = (int) $c19;

        if $i40 != $i41 goto label2;

        $c20 = r6[3];

        $i42 = (int) c4;

        $i43 = (int) $c20;

        if $i42 != $i43 goto label2;

        $c21 = r6[4];

        $i44 = (int) $c13;

        $i45 = (int) $c21;

        if $i44 != $i45 goto label2;

        $c22 = r6[5];

        $i46 = (int) c6;

        $i47 = (int) $c22;

        if $i46 != $i47 goto label2;

        return r6;

     label2:
        i29 = i29 + 1;

        if i29 < 6 goto label1;

        $i49 = (int) -1;

        i30 = $i49;

        i31 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry6>;

        goto label4;

     label3:
        r7 = r4[i30];

        $c23 = r7[0];

        $i50 = (int) $c7;

        $i51 = (int) $c23;

        if $i50 != $i51 goto label4;

        $c24 = r7[1];

        $i52 = (int) c2;

        $i53 = (int) $c24;

        if $i52 != $i53 goto label4;

        $c25 = r7[2];

        $i54 = (int) $c9;

        $i55 = (int) $c25;

        if $i54 != $i55 goto label4;

        $c26 = r7[3];

        $i56 = (int) c4;

        $i57 = (int) $c26;

        if $i56 != $i57 goto label4;

        $c27 = r7[4];

        $i58 = (int) $c13;

        $i59 = (int) $c27;

        if $i58 != $i59 goto label4;

        $c28 = r7[5];

        $i60 = (int) c6;

        $i61 = (int) $c28;

        if $i60 != $i61 goto label4;

        return r7;

     label4:
        i30 = i30 + 1;

        if i30 <= i31 goto label3;

        i32 = i31 + 1;

        if i32 < 6 goto label5;

        i32 = 0;

     label5:
        $r5 = newarray (char)[6];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r5, 0, 6);

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int newEntry6> = i32;

        r4[i32] = $r5;

        return $r5;
    }

    private void parseTags()
    {
        int[] $r12;
        boolean $z0;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        org.eclipse.jdt.internal.compiler.parser.NLSTag[] $r2, $r5, $r6, $r7, $r8, $r9;
        int i0, i1, $i2, $i3, $i4, i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i25, i26, i27, i28, i29, $i31, $i33, $i35, $i37;
        org.eclipse.jdt.internal.compiler.parser.NLSTag r17, $r18, $r19;
        java.lang.NumberFormatException $r13;
        char $c24;
        char[] $r1, $r3, $r10, $r11, $r15, r16;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        i23 = 0;

        i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        if i1 < 0 goto label02;

        $r12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i20 = $r12[i1];

        i23 = $i20 + 1;

        goto label02;

     label01:
        i23 = i23 + 1;

     label02:
        $r15 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $c24 = $r15[i23];

        $z0 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isWhitespace(char)>($c24);

        if $z0 != 0 goto label01;

        if i0 != i23 goto label03;

        return;

     label03:
        i25 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        i26 = i0;

        i27 = 0;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i2 == 0 goto label04;

        $r11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer>;

        $i18 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        $r10 = newarray (char)[$i18];

        r16 = $r10;

        $i19 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 1, $r10, 0, $i19);

        i25 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        i26 = 1;

        i27 = i0;

        goto label05;

     label04:
        r16 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

     label05:
        $r1 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] TAG_PREFIX>;

        $i3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int indexOf(char[],char[],boolean,int,int)>($r1, r16, 1, i26, i25);

        i28 = $i3;

        $i31 = (int) -1;

        if $i3 == $i31 goto label15;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags>;

        if $r2 != null goto label14;

        $r9 = newarray (org.eclipse.jdt.internal.compiler.parser.NLSTag)[10];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags> = $r9;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int nlsTagsPtr> = 0;

        goto label14;

     label06:
        $i4 = <org.eclipse.jdt.internal.core.util.PublicScanner: int TAG_PREFIX_LENGTH>;

        i5 = i28 + $i4;

        $i6 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int indexOf(char,char[],int,int)>(36, r16, i5, i25);

        i29 = $i6;

        $i33 = (int) -1;

        if $i6 == $i33 goto label12;

        i7 = i1 + 1;

     label07:
        $r18 = new org.eclipse.jdt.internal.compiler.parser.NLSTag;

        $i8 = i28 + i27;

        $i9 = $i6 + i27;

        $i10 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int extractInt(char[],int,int)>(r16, i5, $i6);

        specialinvoke $r18.<org.eclipse.jdt.internal.compiler.parser.NLSTag: void <init>(int,int,int,int)>($i8, $i9, i7, $i10);

        r17 = $r18;

     label08:
        goto label10;

     label09:
        $r13 := @caughtexception;

        $r19 = new org.eclipse.jdt.internal.compiler.parser.NLSTag;

        $i22 = i28 + i27;

        $i21 = $i6 + i27;

        $i35 = (int) -1;

        specialinvoke $r19.<org.eclipse.jdt.internal.compiler.parser.NLSTag: void <init>(int,int,int,int)>($i22, $i21, i7, $i35);

        r17 = $r19;

     label10:
        $i12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int nlsTagsPtr>;

        $r5 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags>;

        $i11 = lengthof $r5;

        if $i12 != $i11 goto label11;

        $r8 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags>;

        $i15 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int nlsTagsPtr>;

        $i16 = $i15 + 10;

        $r7 = newarray (org.eclipse.jdt.internal.compiler.parser.NLSTag)[$i16];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags> = $r7;

        $i17 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int nlsTagsPtr>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r7, 0, $i17);

     label11:
        $r6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags>;

        $i13 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int nlsTagsPtr>;

        $i14 = $i13 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int nlsTagsPtr> = $i14;

        $r6[$i13] = r17;

        goto label13;

     label12:
        i29 = i5;

     label13:
        $r3 = <org.eclipse.jdt.internal.core.util.PublicScanner: char[] TAG_PREFIX>;

        i28 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int indexOf(char[],char[],boolean,int,int)>($r3, r16, 1, i29, i25);

     label14:
        $i37 = (int) -1;

        if i28 != $i37 goto label06;

     label15:
        return;

        catch java.lang.NumberFormatException from label07 to label08 with label09;
    }

    private int extractInt(char[], int, int)
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r3;
        char c2;
        java.lang.NumberFormatException $r4, $r5;
        byte b5, b7, b8;
        int i0, i1, i3, i4, $i6, $i9;
        char[] r0;

        r3 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 = 0;

        i4 = i0;

        goto label15;

     label01:
        c2 = r0[i4];

        $i9 = (int) c2;

        tableswitch($i9)
        {
            case 48: goto label02;
            case 49: goto label03;
            case 50: goto label04;
            case 51: goto label05;
            case 52: goto label06;
            case 53: goto label07;
            case 54: goto label08;
            case 55: goto label09;
            case 56: goto label10;
            case 57: goto label11;
            default: goto label12;
        };

     label02:
        b5 = 0;

        b8 = 0;

        b7 = 0;

        goto label13;

     label03:
        b5 = 1;

        b8 = 1;

        b7 = 1;

        goto label13;

     label04:
        b5 = 2;

        b8 = 2;

        b7 = 2;

        goto label13;

     label05:
        b5 = 3;

        b8 = 3;

        b7 = 3;

        goto label13;

     label06:
        b5 = 4;

        b8 = 4;

        b7 = 4;

        goto label13;

     label07:
        b5 = 5;

        b8 = 5;

        b7 = 5;

        goto label13;

     label08:
        b5 = 6;

        b8 = 6;

        b7 = 6;

        goto label13;

     label09:
        b5 = 7;

        b8 = 7;

        b7 = 7;

        goto label13;

     label10:
        b5 = 8;

        b8 = 8;

        b7 = 8;

        goto label13;

     label11:
        b5 = 9;

        b8 = 9;

        b7 = 9;

        goto label13;

     label12:
        $r4 = new java.lang.NumberFormatException;

        specialinvoke $r4.<java.lang.NumberFormatException: void <init>()>();

        throw $r4;

     label13:
        $i6 = i3 * 10;

        if b7 >= 0 goto label14;

        $r5 = new java.lang.NumberFormatException;

        specialinvoke $r5.<java.lang.NumberFormatException: void <init>()>();

        throw $r5;

     label14:
        i3 = $i6 + b8;

        i4 = i4 + 1;

     label15:
        if i4 < i1 goto label01;

        return i3;
    }

    public final void pushLineSeparator()
    {
        java.lang.IndexOutOfBoundsException $r15;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14;
        boolean $z0;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, i34, $i35, $i36, $i37;
        char $c0, $c1, $c25;
        char[] $r10;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $c0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i35 = (int) $c0;

        if $i35 != 13 goto label07;

        $i19 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        i34 = $i19 - 1;

        $i20 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        if $i20 < 0 goto label01;

        $r14 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i31 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        $i32 = $r14[$i31];

        if $i32 < i34 goto label01;

        return;

     label01:
        $r8 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i33 = lengthof $r8;

        $i21 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        $i22 = $i21 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr> = $i22;

        if $i22 < $i33 goto label02;

        $r13 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i30 = $i33 + 250;

        $r12 = newarray (int)[$i30];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds> = $r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, $r12, 0, $i33);

     label02:
        $r9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i23 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        $r9[$i23] = i34;

     label03:
        $r10 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i24 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c25 = $r10[$i24];

        $i36 = (int) $c25;

        if $i36 != 10 goto label04;

        $r11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i27 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        $i26 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $r11[$i27] = $i26;

        $i28 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i29 = $i28 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i29;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean wasAcr> = 0;

        goto label12;

     label04:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean wasAcr> = 1;

     label05:
        goto label12;

     label06:
        $r15 := @caughtexception;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean wasAcr> = 1;

        goto label12;

     label07:
        $c1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i37 = (int) $c1;

        if $i37 != 10 goto label12;

        $z0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean wasAcr>;

        if $z0 == 0 goto label08;

        $r6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        $i14 = $r6[$i11];

        $i12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i13 = $i12 - 2;

        if $i14 != $i13 goto label08;

        $r7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i18 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        $i16 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i17 = $i16 - 1;

        $r7[$i18] = $i17;

        goto label11;

     label08:
        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i15 = $i2 - 1;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        if $i3 < 0 goto label09;

        $r5 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i8 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        $i9 = $r5[$i8];

        if $i9 < $i15 goto label09;

        return;

     label09:
        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i10 = lengthof $r1;

        $i4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr> = $i5;

        if $i5 < $i10 goto label10;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i7 = $i10 + 250;

        $r3 = newarray (int)[$i7];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds> = $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r3, 0, $i10);

     label10:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        $r2[$i6] = $i15;

     label11:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean wasAcr> = 0;

     label12:
        return;

        catch java.lang.IndexOutOfBoundsException from label03 to label05 with label06;
    }

    public final void pushUnicodeLineSeparator()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        char $c0, $c1, $c3;
        int $i2, $i4, $i5, $i6;
        char[] $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $c0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i4 = (int) $c0;

        if $i4 != 13 goto label2;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c3 = $r1[$i2];

        $i5 = (int) $c3;

        if $i5 != 10 goto label1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean wasAcr> = 0;

        goto label3;

     label1:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean wasAcr> = 1;

        goto label3;

     label2:
        $c1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i6 = (int) $c1;

        if $i6 != 10 goto label3;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean wasAcr> = 0;

     label3:
        return;
    }

    public void recordComment(int)
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        i0 := @parameter0: int;

        i7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        tableswitch(i0)
        {
            case 1001: goto label1;
            case 1002: goto label2;
            default: goto label3;
        };

     label1:
        $i6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int lastCommentLinePosition>;

        i7 = neg $i6;

        goto label3;

     label2:
        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        i7 = neg $i1;

     label3:
        $r9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] commentStops>;

        $i8 = lengthof $r9;

        $i9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int commentPtr>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int commentPtr> = $i10;

        if $i10 < $i8 goto label4;

        i5 = $i8 + 300;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] commentStops>;

        $r3 = newarray (int)[i5];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] commentStops> = $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r3, 0, $i8);

        $r6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] commentStarts>;

        $r5 = newarray (int)[i5];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] commentStarts> = $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, $i8);

        $r8 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] commentTagStarts>;

        $r7 = newarray (int)[i5];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] commentTagStarts> = $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r7, 0, $i8);

     label4:
        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] commentStops>;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int commentPtr>;

        $r1[$i2] = i7;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] commentStarts>;

        $i4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int commentPtr>;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $r2[$i4] = $i3;

        return;
    }

    public void resetTo(int, int)
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int i0, i1, $i2, $i3, $i4, $i6;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean diet> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition> = i0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int initialPosition> = i0;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i2 = lengthof $r2;

        if $i2 >= i1 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i3 = lengthof $r3;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition> = $i3;

        goto label4;

     label1:
        if i1 >= 2147483647 goto label2;

        $i4 = i1 + 1;

        goto label3;

     label2:
        $i4 = i1;

     label3:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition> = $i4;

     label4:
        $i6 = (int) -1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int commentPtr> = $i6;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int foundTaskCount> = 0;

        return;
    }

    public final void scanEscapeCharacter() throws org.eclipse.jdt.core.compiler.InvalidInputException
    {
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int $i2, $i3, $i4, $i6, $i7, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, i26, $i27;
        char $c0, $c1, $c5, $c8, $c9, $c16, $c19;
        org.eclipse.jdt.core.compiler.InvalidInputException $r5, $r6;
        char[] $r2, $r4;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $c0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i27 = (int) $c0;

        lookupswitch($i27)
        {
            case 34: goto label06;
            case 39: goto label07;
            case 92: goto label08;
            case 98: goto label01;
            case 102: goto label04;
            case 110: goto label03;
            case 114: goto label05;
            case 116: goto label02;
            default: goto label09;
        };

     label01:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = 8;

        goto label20;

     label02:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = 9;

        goto label20;

     label03:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = 10;

        goto label20;

     label04:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = 12;

        goto label20;

     label05:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = 13;

        goto label20;

     label06:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = 34;

        goto label20;

     label07:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = 39;

        goto label20;

     label08:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = 92;

        goto label20;

     label09:
        $c1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i2 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int getNumericValue(char)>($c1);

        i26 = $i2;

        if $i2 < 0 goto label19;

        if $i2 > 7 goto label19;

        if $i2 <= 3 goto label10;

        $z2 = 1;

        goto label11;

     label10:
        $z2 = 0;

     label11:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i4;

        $c5 = $r2[$i3];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c5;

        $z0 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isDigit(char)>($c5);

        if $z0 == 0 goto label16;

        $c9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i10 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int getNumericValue(char)>($c9);

        if $i10 < 0 goto label15;

        if $i10 > 7 goto label15;

        $i13 = $i2 * 8;

        i26 = $i13 + $i10;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i14 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i15 = $i14 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i15;

        $c16 = $r4[$i14];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c16;

        $z1 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isDigit(char)>($c16);

        if $z1 == 0 goto label14;

        if $z2 == 0 goto label12;

        $i24 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i25 = $i24 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i25;

        goto label17;

     label12:
        $c19 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i20 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int getNumericValue(char)>($c19);

        if $i20 < 0 goto label13;

        if $i20 > 7 goto label13;

        $i23 = i26 * 8;

        i26 = $i23 + $i20;

        goto label17;

     label13:
        $i21 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i22 = $i21 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i22;

        goto label17;

     label14:
        $i17 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i18 = $i17 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i18;

        goto label17;

     label15:
        $i11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i12 = $i11 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i12;

        goto label17;

     label16:
        $i6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i7 = $i6 - 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i7;

     label17:
        if i26 <= 255 goto label18;

        $r5 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r5.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Escape");

        throw $r5;

     label18:
        $c8 = (char) i26;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c8;

        goto label20;

     label19:
        $r6 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r6.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Escape");

        throw $r6;

     label20:
        return;
    }

    public int scanIdentifierOrKeywordWithBoundCheck()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i15, i16, i17, $i18, $i19, $i20;
        boolean $z0, $z1;
        char c14;
        char[] r1, r4;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean useAssertAsAnIndentifier> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean useEnumAsAnIndentifier> = 0;

        r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        i13 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

     label01:
        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        if $i0 < i13 goto label02;

        goto label07;

     label02:
        c14 = r1[$i0];

        $i18 = (int) c14;

        if $i18 >= 128 goto label06;

        $r2 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i19 = (int) c14;

        $i6 = $r2[$i19];

        $i7 = $i6 & 60;

        if $i7 == 0 goto label04;

        $i10 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i10 == 0 goto label03;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = c14;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label03:
        $i11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i12 = $i11 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i12;

        goto label01;

     label04:
        $r3 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i20 = (int) c14;

        $i8 = $r3[$i20];

        $i9 = $i8 & 258;

        if $i9 == 0 goto label05;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = c14;

        goto label07;

     label05:
        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextCharAsJavaIdentifierPartWithBoundCheck()>();

        if $z1 != 0 goto label05;

        goto label07;

     label06:
        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextCharAsJavaIdentifierPartWithBoundCheck()>();

        if $z0 != 0 goto label06;

     label07:
        $i15 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i15 != 0 goto label09;

        $i4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i5 = $i4 - $i3;

        i16 = $i5;

        if $i5 != 1 goto label08;

        return 5;

     label08:
        r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        i17 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        goto label11;

     label09:
        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        i16 = $i1;

        if $i1 != 1 goto label10;

        return 5;

     label10:
        r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer>;

        i17 = 1;

     label11:
        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int internalScanIdentifierOrKeyword(int,int,char[])>(i17, i16, r4);

        return $i2;
    }

    public int scanIdentifierOrKeyword()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i15, i16, i17, $i18, $i19, $i20;
        boolean $z0, $z1;
        char c14;
        char[] r1, r4;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean useAssertAsAnIndentifier> = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean useEnumAsAnIndentifier> = 0;

        r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        i13 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

     label01:
        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        if $i0 < i13 goto label02;

        goto label07;

     label02:
        c14 = r1[$i0];

        $i18 = (int) c14;

        if $i18 >= 128 goto label06;

        $r2 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i19 = (int) c14;

        $i6 = $r2[$i19];

        $i7 = $i6 & 60;

        if $i7 == 0 goto label04;

        $i10 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i10 == 0 goto label03;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = c14;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label03:
        $i11 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i12 = $i11 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i12;

        goto label01;

     label04:
        $r3 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i20 = (int) c14;

        $i8 = $r3[$i20];

        $i9 = $i8 & 258;

        if $i9 == 0 goto label05;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = c14;

        goto label07;

     label05:
        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextCharAsJavaIdentifierPart()>();

        if $z1 != 0 goto label05;

        goto label07;

     label06:
        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextCharAsJavaIdentifierPart()>();

        if $z0 != 0 goto label06;

     label07:
        $i15 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i15 != 0 goto label09;

        $i4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i5 = $i4 - $i3;

        i16 = $i5;

        if $i5 != 1 goto label08;

        return 5;

     label08:
        r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        i17 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        goto label11;

     label09:
        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        i16 = $i1;

        if $i1 != 1 goto label10;

        return 5;

     label10:
        r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer>;

        i17 = 1;

     label11:
        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int internalScanIdentifierOrKeyword(int,int,char[])>(i17, i16, r4);

        return $i2;
    }

    private int internalScanIdentifierOrKeyword(int, int, char[])
    {
        char[] r0;
        byte $b187, $b253;
        long $l186, $l252;
        int i1, i254, i255, i256, i257, i258, i259, i260, i261, i262, i263, i264, i265, i266, i267, i268, i269, i270, i271, i272, i273, i274, i275, i276, i277, i278, i279, i280, i281, i282, i283, i284, i285, i286, i287, i288, i289, i290, i291, i292, i293, i294, i295, i296, i297, i298, i299, i300, i301, i302, i303, i304, i305, i306, i307, i308, i309, i310, i311, i312, i313, i314, i316, i317, i318, i319, i320, i321, i322, i323, i324, i325, i326, i327, i328, i329, i330, i331, i332, i333, i334, i335, i336, i337, i338, i339, i340, i341, i342, i343, i344, i345, i346, i347, i348, i349, i350, i351, i352, i353, i354, i355, i356, i357, i358, i359, i360, i361, i362, i363, i364, i365, i366, i367, i368, i369, i370, i371, i372, i373, i374, i375, i376, i377, i378, i379, i380, i381, i382, i383, i384, i385, i386, i387, i388, i389, i390, i391, i392, i393, i394, i395, i396, i397, i398, i399, i400, i401, i402, i403, i404, i405, i406, i407, i408, i409, i410, i411, i412, i413, i414, i415, i416, i417, i418, i419, i420, i421, i422, i423, i424, i425, i426, i427, i428, i429, i430, i431, i432, i433, i434, i435, i436, i437, i438, i439, i440, i441, i442, i443, i444, i445, i446, i447, i448, i449, i450, i451, i452, i453, i454, i455, i456, i457, i458, i459, i460, i461, i462, i463, i464, i465, i466, i467, i468, i469, i470, i471, i472, i473, i474, i475, i476, i477, i478, i479, i480, i481, i482, i483, i484, i485, i486, i487, i488, i489, i490, i491, $i492, $i493, $i494, $i495, $i496, $i497, $i498, $i499, $i500, $i501, $i502, $i503, $i504, $i505, $i506, $i507, $i508, $i509, $i510, $i511, $i512, $i513, $i514, $i515, $i516, $i517, $i518, $i519, $i520, $i521, $i522, $i523, $i524, $i525, $i526, $i527, $i528, $i529, $i530, $i531, $i532, $i533, $i534, $i535, $i536, $i537, $i538, $i539, $i540, $i541, $i542, $i543, $i544, $i545, $i546, $i547, $i548, $i549, $i550, $i551, $i552, $i553, $i554, $i555, $i556, $i557, $i558, $i559, $i560, $i561, $i562, $i563, $i564, $i565, $i566, $i567, $i568, $i569, $i570, $i571, $i572, $i573, $i574, $i575, $i576, $i577, $i578, $i579, $i580, $i581, $i582, $i583, $i584, $i585, $i586, $i587, $i588, $i589, $i590, $i591, $i592, $i593, $i594, $i595, $i596, $i597, $i598, $i599, $i600, $i601, $i602, $i603, $i604, $i605, $i606, $i607, $i608, $i609, $i610, $i611, $i612, $i613, $i614, $i615, $i616, $i617, $i618, $i619, $i620, $i621, $i622, $i623, $i624, $i625, $i626, $i627, $i628, $i629, $i630, $i631, $i632, $i633, $i634, $i635, $i636, $i637, $i638, $i639, $i640, $i641, $i642, $i643, $i644, $i645, $i646, $i647, $i648, $i649, $i650, $i651, $i652, $i653, $i654, $i655, $i656, $i657, $i658, $i659, $i660, $i661, $i662, $i663, $i664, $i665, $i666, $i667, $i668, $i669, $i670, $i671, $i672, $i673, $i674, $i675, $i676, $i677, $i678, $i679, $i680, $i681, $i682, $i683, $i684, $i685, $i686, $i687, $i688, $i689, $i690, $i691, $i692, $i693, $i694, $i695, $i696, $i697, $i698, $i699, $i700, $i701, $i702, $i703, $i704, $i705, $i706, $i707, $i708, $i709, $i710, $i711, $i712, $i713, $i714, $i715, $i716, $i717, $i718, $i719, $i720, $i721, $i722, $i723, $i724, $i725, $i726, $i727, $i728, $i729, $i730, $i731, $i732, $i733, $i734, $i735, $i736, $i737, $i738, $i739, $i740, $i741, $i742, $i743;
        org.eclipse.jdt.internal.core.util.PublicScanner r1;
        char $c0, $c2, $c3, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c19, $c20, $c21, $c22, $c23, $c24, $c25, $c26, $c27, $c28, $c29, $c30, $c31, $c32, $c33, $c34, $c35, $c36, $c37, $c38, $c39, $c40, $c41, $c42, $c43, $c44, $c45, $c46, $c47, $c48, $c49, $c50, $c51, $c52, $c53, $c54, $c55, $c56, $c57, $c58, $c59, $c60, $c61, $c62, $c63, $c64, $c65, $c66, $c67, $c68, $c69, $c70, $c71, $c72, $c73, $c74, $c75, $c76, $c77, $c78, $c79, $c80, $c81, $c82, $c83, $c84, $c85, $c86, $c87, $c88, $c89, $c90, $c91, $c92, $c93, $c94, $c95, $c96, $c97, $c98, $c99, $c100, $c101, $c102, $c103, $c104, $c105, $c106, $c107, $c108, $c109, $c110, $c111, $c112, $c113, $c114, $c115, $c116, $c117, $c118, $c119, $c120, $c121, $c122, $c123, $c124, $c125, $c126, $c127, $c128, $c129, $c130, $c131, $c132, $c133, $c134, $c135, $c136, $c137, $c138, $c139, $c140, $c141, $c142, $c143, $c144, $c145, $c146, $c147, $c148, $c149, $c150, $c151, $c152, $c153, $c154, $c155, $c156, $c157, $c158, $c159, $c160, $c161, $c162, $c163, $c164, $c165, $c166, $c167, $c168, $c169, $c170, $c171, $c172, $c173, $c174, $c175, $c176, $c177, $c178, $c179, $c180, $c181, $c182, $c183, $c184, $c185, $c188, $c189, $c190, $c191, $c192, $c193, $c194, $c195, $c196, $c197, $c198, $c199, $c200, $c201, $c202, $c203, $c204, $c205, $c206, $c207, $c208, $c209, $c210, $c211, $c212, $c213, $c214, $c215, $c216, $c217, $c218, $c219, $c220, $c221, $c222, $c223, $c224, $c225, $c226, $c227, $c228, $c229, $c230, $c231, $c232, $c233, $c234, $c235, $c236, $c237, $c238, $c239, $c240, $c241, $c242, $c243, $c244, $c245, $c246, $c247, $c248, $c249, $c250, $c251, $c315;

        r1 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        i254 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: char[];

        $c0 = r0[i254];

        $i492 = (int) $c0;

        tableswitch($i492)
        {
            case 97: goto label001;
            case 98: goto label008;
            case 99: goto label016;
            case 100: goto label030;
            case 101: goto label038;
            case 102: goto label046;
            case 103: goto label058;
            case 104: goto label134;
            case 105: goto label060;
            case 106: goto label134;
            case 107: goto label134;
            case 108: goto label074;
            case 109: goto label134;
            case 110: goto label076;
            case 111: goto label134;
            case 112: goto label084;
            case 113: goto label134;
            case 114: goto label094;
            case 115: goto label096;
            case 116: goto label110;
            case 117: goto label134;
            case 118: goto label124;
            case 119: goto label130;
            default: goto label134;
        };

     label001:
        tableswitch(i1)
        {
            case 6: goto label004;
            case 7: goto label007;
            case 8: goto label002;
            default: goto label007;
        };

     label002:
        i255 = i254 + 1;

        $c240 = r0[i255];

        $i493 = (int) $c240;

        if $i493 != 98 goto label003;

        i256 = i255 + 1;

        $c241 = r0[i256];

        $i494 = (int) $c241;

        if $i494 != 115 goto label003;

        i257 = i256 + 1;

        $c242 = r0[i257];

        $i495 = (int) $c242;

        if $i495 != 116 goto label003;

        i258 = i257 + 1;

        $c243 = r0[i258];

        $i496 = (int) $c243;

        if $i496 != 114 goto label003;

        i259 = i258 + 1;

        $c244 = r0[i259];

        $i497 = (int) $c244;

        if $i497 != 97 goto label003;

        i260 = i259 + 1;

        $c245 = r0[i260];

        $i498 = (int) $c245;

        if $i498 != 99 goto label003;

        i261 = i260 + 1;

        $c246 = r0[i261];

        $i499 = (int) $c246;

        if $i499 != 116 goto label003;

        return 98;

     label003:
        return 5;

     label004:
        i262 = i254 + 1;

        $c247 = r0[i262];

        $i500 = (int) $c247;

        if $i500 != 115 goto label006;

        i263 = i262 + 1;

        $c248 = r0[i263];

        $i501 = (int) $c248;

        if $i501 != 115 goto label006;

        i264 = i263 + 1;

        $c249 = r0[i264];

        $i502 = (int) $c249;

        if $i502 != 101 goto label006;

        i265 = i264 + 1;

        $c250 = r0[i265];

        $i503 = (int) $c250;

        if $i503 != 114 goto label006;

        i266 = i265 + 1;

        $c251 = r0[i266];

        $i504 = (int) $c251;

        if $i504 != 116 goto label006;

        $l252 = r1.<org.eclipse.jdt.internal.core.util.PublicScanner: long sourceLevel>;

        $b253 = $l252 cmp 3145728L;

        $i505 = (int) $b253;

        if $i505 < 0 goto label005;

        r1.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean containsAssertKeyword> = 1;

        return 118;

     label005:
        r1.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean useAssertAsAnIndentifier> = 1;

        return 5;

     label006:
        return 5;

     label007:
        return 5;

     label008:
        tableswitch(i1)
        {
            case 4: goto label009;
            case 5: goto label011;
            case 6: goto label015;
            case 7: goto label013;
            default: goto label015;
        };

     label009:
        i267 = i254 + 1;

        $c237 = r0[i267];

        $i506 = (int) $c237;

        if $i506 != 121 goto label010;

        i268 = i267 + 1;

        $c238 = r0[i268];

        $i507 = (int) $c238;

        if $i507 != 116 goto label010;

        i269 = i268 + 1;

        $c239 = r0[i269];

        $i508 = (int) $c239;

        if $i508 != 101 goto label010;

        return 19;

     label010:
        return 5;

     label011:
        i270 = i254 + 1;

        $c233 = r0[i270];

        $i509 = (int) $c233;

        if $i509 != 114 goto label012;

        i271 = i270 + 1;

        $c234 = r0[i271];

        $i510 = (int) $c234;

        if $i510 != 101 goto label012;

        i272 = i271 + 1;

        $c235 = r0[i272];

        $i511 = (int) $c235;

        if $i511 != 97 goto label012;

        i273 = i272 + 1;

        $c236 = r0[i273];

        $i512 = (int) $c236;

        if $i512 != 107 goto label012;

        return 119;

     label012:
        return 5;

     label013:
        i274 = i254 + 1;

        $c227 = r0[i274];

        $i513 = (int) $c227;

        if $i513 != 111 goto label014;

        i275 = i274 + 1;

        $c228 = r0[i275];

        $i514 = (int) $c228;

        if $i514 != 111 goto label014;

        i276 = i275 + 1;

        $c229 = r0[i276];

        $i515 = (int) $c229;

        if $i515 != 108 goto label014;

        i277 = i276 + 1;

        $c230 = r0[i277];

        $i516 = (int) $c230;

        if $i516 != 101 goto label014;

        i278 = i277 + 1;

        $c231 = r0[i278];

        $i517 = (int) $c231;

        if $i517 != 97 goto label014;

        i279 = i278 + 1;

        $c232 = r0[i279];

        $i518 = (int) $c232;

        if $i518 != 110 goto label014;

        return 18;

     label014:
        return 5;

     label015:
        return 5;

     label016:
        tableswitch(i1)
        {
            case 4: goto label017;
            case 5: goto label021;
            case 6: goto label029;
            case 7: goto label029;
            case 8: goto label027;
            default: goto label029;
        };

     label017:
        i280 = i254 + 1;

        $c221 = r0[i280];

        $i519 = (int) $c221;

        if $i519 != 97 goto label019;

        i281 = i280 + 1;

        $c225 = r0[i281];

        $i520 = (int) $c225;

        if $i520 != 115 goto label018;

        i282 = i281 + 1;

        $c226 = r0[i282];

        $i521 = (int) $c226;

        if $i521 != 101 goto label018;

        return 211;

     label018:
        return 5;

     label019:
        $c222 = r0[i280];

        $i522 = (int) $c222;

        if $i522 != 104 goto label020;

        i283 = i280 + 1;

        $c223 = r0[i283];

        $i523 = (int) $c223;

        if $i523 != 97 goto label020;

        i284 = i283 + 1;

        $c224 = r0[i284];

        $i524 = (int) $c224;

        if $i524 != 114 goto label020;

        return 20;

     label020:
        return 5;

     label021:
        i285 = i254 + 1;

        $c209 = r0[i285];

        $i525 = (int) $c209;

        if $i525 != 97 goto label023;

        i286 = i285 + 1;

        $c218 = r0[i286];

        $i526 = (int) $c218;

        if $i526 != 116 goto label022;

        i287 = i286 + 1;

        $c219 = r0[i287];

        $i527 = (int) $c219;

        if $i527 != 99 goto label022;

        i288 = i287 + 1;

        $c220 = r0[i288];

        $i528 = (int) $c220;

        if $i528 != 104 goto label022;

        return 225;

     label022:
        return 5;

     label023:
        $c210 = r0[i285];

        $i529 = (int) $c210;

        if $i529 != 108 goto label025;

        i289 = i285 + 1;

        $c215 = r0[i289];

        $i530 = (int) $c215;

        if $i530 != 97 goto label024;

        i290 = i289 + 1;

        $c216 = r0[i290];

        $i531 = (int) $c216;

        if $i531 != 115 goto label024;

        i291 = i290 + 1;

        $c217 = r0[i291];

        $i532 = (int) $c217;

        if $i532 != 115 goto label024;

        return 165;

     label024:
        return 5;

     label025:
        $c211 = r0[i285];

        $i533 = (int) $c211;

        if $i533 != 111 goto label026;

        i292 = i285 + 1;

        $c212 = r0[i292];

        $i534 = (int) $c212;

        if $i534 != 110 goto label026;

        i293 = i292 + 1;

        $c213 = r0[i293];

        $i535 = (int) $c213;

        if $i535 != 115 goto label026;

        i294 = i293 + 1;

        $c214 = r0[i294];

        $i536 = (int) $c214;

        if $i536 != 116 goto label026;

        return 403;

     label026:
        return 5;

     label027:
        i295 = i254 + 1;

        $c202 = r0[i295];

        $i537 = (int) $c202;

        if $i537 != 111 goto label028;

        i296 = i295 + 1;

        $c203 = r0[i296];

        $i538 = (int) $c203;

        if $i538 != 110 goto label028;

        i297 = i296 + 1;

        $c204 = r0[i297];

        $i539 = (int) $c204;

        if $i539 != 116 goto label028;

        i298 = i297 + 1;

        $c205 = r0[i298];

        $i540 = (int) $c205;

        if $i540 != 105 goto label028;

        i299 = i298 + 1;

        $c206 = r0[i299];

        $i541 = (int) $c206;

        if $i541 != 110 goto label028;

        i300 = i299 + 1;

        $c207 = r0[i300];

        $i542 = (int) $c207;

        if $i542 != 117 goto label028;

        i301 = i300 + 1;

        $c208 = r0[i301];

        $i543 = (int) $c208;

        if $i543 != 101 goto label028;

        return 120;

     label028:
        return 5;

     label029:
        return 5;

     label030:
        tableswitch(i1)
        {
            case 2: goto label031;
            case 3: goto label037;
            case 4: goto label037;
            case 5: goto label037;
            case 6: goto label033;
            case 7: goto label035;
            default: goto label037;
        };

     label031:
        i302 = i254 + 1;

        $c201 = r0[i302];

        $i544 = (int) $c201;

        if $i544 != 111 goto label032;

        return 121;

     label032:
        return 5;

     label033:
        i303 = i254 + 1;

        $c196 = r0[i303];

        $i545 = (int) $c196;

        if $i545 != 111 goto label034;

        i304 = i303 + 1;

        $c197 = r0[i304];

        $i546 = (int) $c197;

        if $i546 != 117 goto label034;

        i305 = i304 + 1;

        $c198 = r0[i305];

        $i547 = (int) $c198;

        if $i547 != 98 goto label034;

        i306 = i305 + 1;

        $c199 = r0[i306];

        $i548 = (int) $c199;

        if $i548 != 108 goto label034;

        i307 = i306 + 1;

        $c200 = r0[i307];

        $i549 = (int) $c200;

        if $i549 != 101 goto label034;

        return 21;

     label034:
        return 5;

     label035:
        i308 = i254 + 1;

        $c190 = r0[i308];

        $i550 = (int) $c190;

        if $i550 != 101 goto label036;

        i309 = i308 + 1;

        $c191 = r0[i309];

        $i551 = (int) $c191;

        if $i551 != 102 goto label036;

        i310 = i309 + 1;

        $c192 = r0[i310];

        $i552 = (int) $c192;

        if $i552 != 97 goto label036;

        i311 = i310 + 1;

        $c193 = r0[i311];

        $i553 = (int) $c193;

        if $i553 != 117 goto label036;

        i312 = i311 + 1;

        $c194 = r0[i312];

        $i554 = (int) $c194;

        if $i554 != 108 goto label036;

        i313 = i312 + 1;

        $c195 = r0[i313];

        $i555 = (int) $c195;

        if $i555 != 116 goto label036;

        return 212;

     label036:
        return 5;

     label037:
        return 5;

     label038:
        tableswitch(i1)
        {
            case 4: goto label039;
            case 5: goto label045;
            case 6: goto label045;
            case 7: goto label043;
            default: goto label045;
        };

     label039:
        i314 = i254 + 1;

        $c183 = r0[i314];

        $i556 = (int) $c183;

        if $i556 != 108 goto label040;

        i314 = i314 + 1;

        $c188 = r0[i314];

        $i557 = (int) $c188;

        if $i557 != 115 goto label040;

        i314 = i314 + 1;

        $c189 = r0[i314];

        $i558 = (int) $c189;

        if $i558 != 101 goto label040;

        return 213;

     label040:
        $c315 = r0[i314];

        $i559 = (int) $c315;

        if $i559 != 110 goto label042;

        i316 = i314 + 1;

        $c184 = r0[i316];

        $i560 = (int) $c184;

        if $i560 != 117 goto label042;

        i317 = i316 + 1;

        $c185 = r0[i317];

        $i561 = (int) $c185;

        if $i561 != 109 goto label042;

        $l186 = r1.<org.eclipse.jdt.internal.core.util.PublicScanner: long sourceLevel>;

        $b187 = $l186 cmp 3211264L;

        $i562 = (int) $b187;

        if $i562 < 0 goto label041;

        return 400;

     label041:
        r1.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean useEnumAsAnIndentifier> = 1;

        return 5;

     label042:
        return 5;

     label043:
        i318 = i254 + 1;

        $c177 = r0[i318];

        $i563 = (int) $c177;

        if $i563 != 120 goto label044;

        i319 = i318 + 1;

        $c178 = r0[i319];

        $i564 = (int) $c178;

        if $i564 != 116 goto label044;

        i320 = i319 + 1;

        $c179 = r0[i320];

        $i565 = (int) $c179;

        if $i565 != 101 goto label044;

        i321 = i320 + 1;

        $c180 = r0[i321];

        $i566 = (int) $c180;

        if $i566 != 110 goto label044;

        i322 = i321 + 1;

        $c181 = r0[i322];

        $i567 = (int) $c181;

        if $i567 != 100 goto label044;

        i323 = i322 + 1;

        $c182 = r0[i323];

        $i568 = (int) $c182;

        if $i568 != 115 goto label044;

        return 243;

     label044:
        return 5;

     label045:
        return 5;

     label046:
        tableswitch(i1)
        {
            case 3: goto label047;
            case 4: goto label057;
            case 5: goto label049;
            case 6: goto label057;
            case 7: goto label055;
            default: goto label057;
        };

     label047:
        i324 = i254 + 1;

        $c175 = r0[i324];

        $i569 = (int) $c175;

        if $i569 != 111 goto label048;

        i325 = i324 + 1;

        $c176 = r0[i325];

        $i570 = (int) $c176;

        if $i570 != 114 goto label048;

        return 122;

     label048:
        return 5;

     label049:
        i326 = i254 + 1;

        $c163 = r0[i326];

        $i571 = (int) $c163;

        if $i571 != 105 goto label051;

        i327 = i326 + 1;

        $c172 = r0[i327];

        $i572 = (int) $c172;

        if $i572 != 110 goto label050;

        i328 = i327 + 1;

        $c173 = r0[i328];

        $i573 = (int) $c173;

        if $i573 != 97 goto label050;

        i329 = i328 + 1;

        $c174 = r0[i329];

        $i574 = (int) $c174;

        if $i574 != 108 goto label050;

        return 99;

     label050:
        return 5;

     label051:
        $c164 = r0[i326];

        $i575 = (int) $c164;

        if $i575 != 108 goto label053;

        i330 = i326 + 1;

        $c169 = r0[i330];

        $i576 = (int) $c169;

        if $i576 != 111 goto label052;

        i331 = i330 + 1;

        $c170 = r0[i331];

        $i577 = (int) $c170;

        if $i577 != 97 goto label052;

        i332 = i331 + 1;

        $c171 = r0[i332];

        $i578 = (int) $c171;

        if $i578 != 116 goto label052;

        return 22;

     label052:
        return 5;

     label053:
        $c165 = r0[i326];

        $i579 = (int) $c165;

        if $i579 != 97 goto label054;

        i333 = i326 + 1;

        $c166 = r0[i333];

        $i580 = (int) $c166;

        if $i580 != 108 goto label054;

        i334 = i333 + 1;

        $c167 = r0[i334];

        $i581 = (int) $c167;

        if $i581 != 115 goto label054;

        i335 = i334 + 1;

        $c168 = r0[i335];

        $i582 = (int) $c168;

        if $i582 != 101 goto label054;

        return 37;

     label054:
        return 5;

     label055:
        i336 = i254 + 1;

        $c157 = r0[i336];

        $i583 = (int) $c157;

        if $i583 != 105 goto label056;

        i337 = i336 + 1;

        $c158 = r0[i337];

        $i584 = (int) $c158;

        if $i584 != 110 goto label056;

        i338 = i337 + 1;

        $c159 = r0[i338];

        $i585 = (int) $c159;

        if $i585 != 97 goto label056;

        i339 = i338 + 1;

        $c160 = r0[i339];

        $i586 = (int) $c160;

        if $i586 != 108 goto label056;

        i340 = i339 + 1;

        $c161 = r0[i340];

        $i587 = (int) $c161;

        if $i587 != 108 goto label056;

        i341 = i340 + 1;

        $c162 = r0[i341];

        $i588 = (int) $c162;

        if $i588 != 121 goto label056;

        return 226;

     label056:
        return 5;

     label057:
        return 5;

     label058:
        if i1 != 4 goto label059;

        i342 = i254 + 1;

        $c154 = r0[i342];

        $i589 = (int) $c154;

        if $i589 != 111 goto label059;

        i343 = i342 + 1;

        $c155 = r0[i343];

        $i590 = (int) $c155;

        if $i590 != 116 goto label059;

        i344 = i343 + 1;

        $c156 = r0[i344];

        $i591 = (int) $c156;

        if $i591 != 111 goto label059;

        return 404;

     label059:
        return 5;

     label060:
        tableswitch(i1)
        {
            case 2: goto label061;
            case 3: goto label063;
            case 4: goto label073;
            case 5: goto label073;
            case 6: goto label065;
            case 7: goto label073;
            case 8: goto label073;
            case 9: goto label067;
            case 10: goto label069;
            default: goto label073;
        };

     label061:
        i345 = i254 + 1;

        $c153 = r0[i345];

        $i592 = (int) $c153;

        if $i592 != 102 goto label062;

        return 123;

     label062:
        return 5;

     label063:
        i346 = i254 + 1;

        $c151 = r0[i346];

        $i593 = (int) $c151;

        if $i593 != 110 goto label064;

        i347 = i346 + 1;

        $c152 = r0[i347];

        $i594 = (int) $c152;

        if $i594 != 116 goto label064;

        return 23;

     label064:
        return 5;

     label065:
        i348 = i254 + 1;

        $c146 = r0[i348];

        $i595 = (int) $c146;

        if $i595 != 109 goto label066;

        i349 = i348 + 1;

        $c147 = r0[i349];

        $i596 = (int) $c147;

        if $i596 != 112 goto label066;

        i350 = i349 + 1;

        $c148 = r0[i350];

        $i597 = (int) $c148;

        if $i597 != 111 goto label066;

        i351 = i350 + 1;

        $c149 = r0[i351];

        $i598 = (int) $c149;

        if $i598 != 114 goto label066;

        i352 = i351 + 1;

        $c150 = r0[i352];

        $i599 = (int) $c150;

        if $i599 != 116 goto label066;

        return 191;

     label066:
        return 5;

     label067:
        i353 = i254 + 1;

        $c138 = r0[i353];

        $i600 = (int) $c138;

        if $i600 != 110 goto label068;

        i354 = i353 + 1;

        $c139 = r0[i354];

        $i601 = (int) $c139;

        if $i601 != 116 goto label068;

        i355 = i354 + 1;

        $c140 = r0[i355];

        $i602 = (int) $c140;

        if $i602 != 101 goto label068;

        i356 = i355 + 1;

        $c141 = r0[i356];

        $i603 = (int) $c141;

        if $i603 != 114 goto label068;

        i357 = i356 + 1;

        $c142 = r0[i357];

        $i604 = (int) $c142;

        if $i604 != 102 goto label068;

        i358 = i357 + 1;

        $c143 = r0[i358];

        $i605 = (int) $c143;

        if $i605 != 97 goto label068;

        i359 = i358 + 1;

        $c144 = r0[i359];

        $i606 = (int) $c144;

        if $i606 != 99 goto label068;

        i360 = i359 + 1;

        $c145 = r0[i360];

        $i607 = (int) $c145;

        if $i607 != 101 goto label068;

        return 180;

     label068:
        return 5;

     label069:
        i361 = i254 + 1;

        $c120 = r0[i361];

        $i608 = (int) $c120;

        if $i608 != 109 goto label071;

        i362 = i361 + 1;

        $c130 = r0[i362];

        $i609 = (int) $c130;

        if $i609 != 112 goto label070;

        i363 = i362 + 1;

        $c131 = r0[i363];

        $i610 = (int) $c131;

        if $i610 != 108 goto label070;

        i364 = i363 + 1;

        $c132 = r0[i364];

        $i611 = (int) $c132;

        if $i611 != 101 goto label070;

        i365 = i364 + 1;

        $c133 = r0[i365];

        $i612 = (int) $c133;

        if $i612 != 109 goto label070;

        i366 = i365 + 1;

        $c134 = r0[i366];

        $i613 = (int) $c134;

        if $i613 != 101 goto label070;

        i367 = i366 + 1;

        $c135 = r0[i367];

        $i614 = (int) $c135;

        if $i614 != 110 goto label070;

        i368 = i367 + 1;

        $c136 = r0[i368];

        $i615 = (int) $c136;

        if $i615 != 116 goto label070;

        i369 = i368 + 1;

        $c137 = r0[i369];

        $i616 = (int) $c137;

        if $i616 != 115 goto label070;

        return 268;

     label070:
        return 5;

     label071:
        $c121 = r0[i361];

        $i617 = (int) $c121;

        if $i617 != 110 goto label072;

        i370 = i361 + 1;

        $c122 = r0[i370];

        $i618 = (int) $c122;

        if $i618 != 115 goto label072;

        i371 = i370 + 1;

        $c123 = r0[i371];

        $i619 = (int) $c123;

        if $i619 != 116 goto label072;

        i372 = i371 + 1;

        $c124 = r0[i372];

        $i620 = (int) $c124;

        if $i620 != 97 goto label072;

        i373 = i372 + 1;

        $c125 = r0[i373];

        $i621 = (int) $c125;

        if $i621 != 110 goto label072;

        i374 = i373 + 1;

        $c126 = r0[i374];

        $i622 = (int) $c126;

        if $i622 != 99 goto label072;

        i375 = i374 + 1;

        $c127 = r0[i375];

        $i623 = (int) $c127;

        if $i623 != 101 goto label072;

        i376 = i375 + 1;

        $c128 = r0[i376];

        $i624 = (int) $c128;

        if $i624 != 111 goto label072;

        i377 = i376 + 1;

        $c129 = r0[i377];

        $i625 = (int) $c129;

        if $i625 != 102 goto label072;

        return 65;

     label072:
        return 5;

     label073:
        return 5;

     label074:
        if i1 != 4 goto label075;

        i378 = i254 + 1;

        $c117 = r0[i378];

        $i626 = (int) $c117;

        if $i626 != 111 goto label075;

        i379 = i378 + 1;

        $c118 = r0[i379];

        $i627 = (int) $c118;

        if $i627 != 110 goto label075;

        i380 = i379 + 1;

        $c119 = r0[i380];

        $i628 = (int) $c119;

        if $i628 != 103 goto label075;

        return 24;

     label075:
        return 5;

     label076:
        tableswitch(i1)
        {
            case 3: goto label077;
            case 4: goto label079;
            case 5: goto label083;
            case 6: goto label081;
            default: goto label083;
        };

     label077:
        i381 = i254 + 1;

        $c115 = r0[i381];

        $i629 = (int) $c115;

        if $i629 != 101 goto label078;

        i382 = i381 + 1;

        $c116 = r0[i382];

        $i630 = (int) $c116;

        if $i630 != 119 goto label078;

        return 32;

     label078:
        return 5;

     label079:
        i383 = i254 + 1;

        $c112 = r0[i383];

        $i631 = (int) $c112;

        if $i631 != 117 goto label080;

        i384 = i383 + 1;

        $c113 = r0[i384];

        $i632 = (int) $c113;

        if $i632 != 108 goto label080;

        i385 = i384 + 1;

        $c114 = r0[i385];

        $i633 = (int) $c114;

        if $i633 != 108 goto label080;

        return 38;

     label080:
        return 5;

     label081:
        i386 = i254 + 1;

        $c107 = r0[i386];

        $i634 = (int) $c107;

        if $i634 != 97 goto label082;

        i387 = i386 + 1;

        $c108 = r0[i387];

        $i635 = (int) $c108;

        if $i635 != 116 goto label082;

        i388 = i387 + 1;

        $c109 = r0[i388];

        $i636 = (int) $c109;

        if $i636 != 105 goto label082;

        i389 = i388 + 1;

        $c110 = r0[i389];

        $i637 = (int) $c110;

        if $i637 != 118 goto label082;

        i390 = i389 + 1;

        $c111 = r0[i390];

        $i638 = (int) $c111;

        if $i638 != 101 goto label082;

        return 100;

     label082:
        return 5;

     label083:
        return 5;

     label084:
        tableswitch(i1)
        {
            case 6: goto label085;
            case 7: goto label087;
            case 8: goto label093;
            case 9: goto label091;
            default: goto label093;
        };

     label085:
        i391 = i254 + 1;

        $c102 = r0[i391];

        $i639 = (int) $c102;

        if $i639 != 117 goto label086;

        i392 = i391 + 1;

        $c103 = r0[i392];

        $i640 = (int) $c103;

        if $i640 != 98 goto label086;

        i393 = i392 + 1;

        $c104 = r0[i393];

        $i641 = (int) $c104;

        if $i641 != 108 goto label086;

        i394 = i393 + 1;

        $c105 = r0[i394];

        $i642 = (int) $c105;

        if $i642 != 105 goto label086;

        i395 = i394 + 1;

        $c106 = r0[i395];

        $i643 = (int) $c106;

        if $i643 != 99 goto label086;

        return 103;

     label086:
        return 5;

     label087:
        i396 = i254 + 1;

        $c90 = r0[i396];

        $i644 = (int) $c90;

        if $i644 != 97 goto label089;

        i397 = i396 + 1;

        $c97 = r0[i397];

        $i645 = (int) $c97;

        if $i645 != 99 goto label088;

        i398 = i397 + 1;

        $c98 = r0[i398];

        $i646 = (int) $c98;

        if $i646 != 107 goto label088;

        i399 = i398 + 1;

        $c99 = r0[i399];

        $i647 = (int) $c99;

        if $i647 != 97 goto label088;

        i400 = i399 + 1;

        $c100 = r0[i400];

        $i648 = (int) $c100;

        if $i648 != 103 goto label088;

        i401 = i400 + 1;

        $c101 = r0[i401];

        $i649 = (int) $c101;

        if $i649 != 101 goto label088;

        return 214;

     label088:
        return 5;

     label089:
        $c91 = r0[i396];

        $i650 = (int) $c91;

        if $i650 != 114 goto label090;

        i402 = i396 + 1;

        $c92 = r0[i402];

        $i651 = (int) $c92;

        if $i651 != 105 goto label090;

        i403 = i402 + 1;

        $c93 = r0[i403];

        $i652 = (int) $c93;

        if $i652 != 118 goto label090;

        i404 = i403 + 1;

        $c94 = r0[i404];

        $i653 = (int) $c94;

        if $i653 != 97 goto label090;

        i405 = i404 + 1;

        $c95 = r0[i405];

        $i654 = (int) $c95;

        if $i654 != 116 goto label090;

        i406 = i405 + 1;

        $c96 = r0[i406];

        $i655 = (int) $c96;

        if $i655 != 101 goto label090;

        return 101;

     label090:
        return 5;

     label091:
        i407 = i254 + 1;

        $c82 = r0[i407];

        $i656 = (int) $c82;

        if $i656 != 114 goto label092;

        i408 = i407 + 1;

        $c83 = r0[i408];

        $i657 = (int) $c83;

        if $i657 != 111 goto label092;

        i409 = i408 + 1;

        $c84 = r0[i409];

        $i658 = (int) $c84;

        if $i658 != 116 goto label092;

        i410 = i409 + 1;

        $c85 = r0[i410];

        $i659 = (int) $c85;

        if $i659 != 101 goto label092;

        i411 = i410 + 1;

        $c86 = r0[i411];

        $i660 = (int) $c86;

        if $i660 != 99 goto label092;

        i412 = i411 + 1;

        $c87 = r0[i412];

        $i661 = (int) $c87;

        if $i661 != 116 goto label092;

        i413 = i412 + 1;

        $c88 = r0[i413];

        $i662 = (int) $c88;

        if $i662 != 101 goto label092;

        i414 = i413 + 1;

        $c89 = r0[i414];

        $i663 = (int) $c89;

        if $i663 != 100 goto label092;

        return 102;

     label092:
        return 5;

     label093:
        return 5;

     label094:
        if i1 != 6 goto label095;

        i415 = i254 + 1;

        $c77 = r0[i415];

        $i664 = (int) $c77;

        if $i664 != 101 goto label095;

        i416 = i415 + 1;

        $c78 = r0[i416];

        $i665 = (int) $c78;

        if $i665 != 116 goto label095;

        i417 = i416 + 1;

        $c79 = r0[i417];

        $i666 = (int) $c79;

        if $i666 != 117 goto label095;

        i418 = i417 + 1;

        $c80 = r0[i418];

        $i667 = (int) $c80;

        if $i667 != 114 goto label095;

        i419 = i418 + 1;

        $c81 = r0[i419];

        $i668 = (int) $c81;

        if $i668 != 110 goto label095;

        return 124;

     label095:
        return 5;

     label096:
        tableswitch(i1)
        {
            case 5: goto label097;
            case 6: goto label101;
            case 7: goto label109;
            case 8: goto label105;
            case 9: goto label109;
            case 10: goto label109;
            case 11: goto label109;
            case 12: goto label107;
            default: goto label109;
        };

     label097:
        i420 = i254 + 1;

        $c69 = r0[i420];

        $i669 = (int) $c69;

        if $i669 != 104 goto label099;

        i421 = i420 + 1;

        $c74 = r0[i421];

        $i670 = (int) $c74;

        if $i670 != 111 goto label098;

        i422 = i421 + 1;

        $c75 = r0[i422];

        $i671 = (int) $c75;

        if $i671 != 114 goto label098;

        i423 = i422 + 1;

        $c76 = r0[i423];

        $i672 = (int) $c76;

        if $i672 != 116 goto label098;

        return 25;

     label098:
        return 5;

     label099:
        $c70 = r0[i420];

        $i673 = (int) $c70;

        if $i673 != 117 goto label100;

        i424 = i420 + 1;

        $c71 = r0[i424];

        $i674 = (int) $c71;

        if $i674 != 112 goto label100;

        i425 = i424 + 1;

        $c72 = r0[i425];

        $i675 = (int) $c72;

        if $i675 != 101 goto label100;

        i426 = i425 + 1;

        $c73 = r0[i426];

        $i676 = (int) $c73;

        if $i676 != 114 goto label100;

        return 33;

     label100:
        return 5;

     label101:
        i427 = i254 + 1;

        $c59 = r0[i427];

        $i677 = (int) $c59;

        if $i677 != 116 goto label103;

        i428 = i427 + 1;

        $c65 = r0[i428];

        $i678 = (int) $c65;

        if $i678 != 97 goto label102;

        i429 = i428 + 1;

        $c66 = r0[i429];

        $i679 = (int) $c66;

        if $i679 != 116 goto label102;

        i430 = i429 + 1;

        $c67 = r0[i430];

        $i680 = (int) $c67;

        if $i680 != 105 goto label102;

        i431 = i430 + 1;

        $c68 = r0[i431];

        $i681 = (int) $c68;

        if $i681 != 99 goto label102;

        return 94;

     label102:
        return 5;

     label103:
        $c60 = r0[i427];

        $i682 = (int) $c60;

        if $i682 != 119 goto label104;

        i432 = i427 + 1;

        $c61 = r0[i432];

        $i683 = (int) $c61;

        if $i683 != 105 goto label104;

        i433 = i432 + 1;

        $c62 = r0[i433];

        $i684 = (int) $c62;

        if $i684 != 116 goto label104;

        i434 = i433 + 1;

        $c63 = r0[i434];

        $i685 = (int) $c63;

        if $i685 != 99 goto label104;

        i435 = i434 + 1;

        $c64 = r0[i435];

        $i686 = (int) $c64;

        if $i686 != 104 goto label104;

        return 125;

     label104:
        return 5;

     label105:
        i436 = i254 + 1;

        $c52 = r0[i436];

        $i687 = (int) $c52;

        if $i687 != 116 goto label106;

        i437 = i436 + 1;

        $c53 = r0[i437];

        $i688 = (int) $c53;

        if $i688 != 114 goto label106;

        i438 = i437 + 1;

        $c54 = r0[i438];

        $i689 = (int) $c54;

        if $i689 != 105 goto label106;

        i439 = i438 + 1;

        $c55 = r0[i439];

        $i690 = (int) $c55;

        if $i690 != 99 goto label106;

        i440 = i439 + 1;

        $c56 = r0[i440];

        $i691 = (int) $c56;

        if $i691 != 116 goto label106;

        i441 = i440 + 1;

        $c57 = r0[i441];

        $i692 = (int) $c57;

        if $i692 != 102 goto label106;

        i442 = i441 + 1;

        $c58 = r0[i442];

        $i693 = (int) $c58;

        if $i693 != 112 goto label106;

        return 104;

     label106:
        return 5;

     label107:
        i443 = i254 + 1;

        $c41 = r0[i443];

        $i694 = (int) $c41;

        if $i694 != 121 goto label108;

        i444 = i443 + 1;

        $c42 = r0[i444];

        $i695 = (int) $c42;

        if $i695 != 110 goto label108;

        i445 = i444 + 1;

        $c43 = r0[i445];

        $i696 = (int) $c43;

        if $i696 != 99 goto label108;

        i446 = i445 + 1;

        $c44 = r0[i446];

        $i697 = (int) $c44;

        if $i697 != 104 goto label108;

        i447 = i446 + 1;

        $c45 = r0[i447];

        $i698 = (int) $c45;

        if $i698 != 114 goto label108;

        i448 = i447 + 1;

        $c46 = r0[i448];

        $i699 = (int) $c46;

        if $i699 != 111 goto label108;

        i449 = i448 + 1;

        $c47 = r0[i449];

        $i700 = (int) $c47;

        if $i700 != 110 goto label108;

        i450 = i449 + 1;

        $c48 = r0[i450];

        $i701 = (int) $c48;

        if $i701 != 105 goto label108;

        i451 = i450 + 1;

        $c49 = r0[i451];

        $i702 = (int) $c49;

        if $i702 != 122 goto label108;

        i452 = i451 + 1;

        $c50 = r0[i452];

        $i703 = (int) $c50;

        if $i703 != 101 goto label108;

        i453 = i452 + 1;

        $c51 = r0[i453];

        $i704 = (int) $c51;

        if $i704 != 100 goto label108;

        return 85;

     label108:
        return 5;

     label109:
        return 5;

     label110:
        tableswitch(i1)
        {
            case 3: goto label111;
            case 4: goto label113;
            case 5: goto label117;
            case 6: goto label119;
            case 7: goto label123;
            case 8: goto label123;
            case 9: goto label121;
            default: goto label123;
        };

     label111:
        i454 = i254 + 1;

        $c39 = r0[i454];

        $i705 = (int) $c39;

        if $i705 != 114 goto label112;

        i455 = i454 + 1;

        $c40 = r0[i455];

        $i706 = (int) $c40;

        if $i706 != 121 goto label112;

        return 127;

     label112:
        return 5;

     label113:
        i456 = i254 + 1;

        $c33 = r0[i456];

        $i707 = (int) $c33;

        if $i707 != 104 goto label115;

        i457 = i456 + 1;

        $c37 = r0[i457];

        $i708 = (int) $c37;

        if $i708 != 105 goto label114;

        i458 = i457 + 1;

        $c38 = r0[i458];

        $i709 = (int) $c38;

        if $i709 != 115 goto label114;

        return 34;

     label114:
        return 5;

     label115:
        $c34 = r0[i456];

        $i710 = (int) $c34;

        if $i710 != 114 goto label116;

        i459 = i456 + 1;

        $c35 = r0[i459];

        $i711 = (int) $c35;

        if $i711 != 117 goto label116;

        i460 = i459 + 1;

        $c36 = r0[i460];

        $i712 = (int) $c36;

        if $i712 != 101 goto label116;

        return 39;

     label116:
        return 5;

     label117:
        i461 = i254 + 1;

        $c29 = r0[i461];

        $i713 = (int) $c29;

        if $i713 != 104 goto label118;

        i462 = i461 + 1;

        $c30 = r0[i462];

        $i714 = (int) $c30;

        if $i714 != 114 goto label118;

        i463 = i462 + 1;

        $c31 = r0[i463];

        $i715 = (int) $c31;

        if $i715 != 111 goto label118;

        i464 = i463 + 1;

        $c32 = r0[i464];

        $i716 = (int) $c32;

        if $i716 != 119 goto label118;

        return 126;

     label118:
        return 5;

     label119:
        i465 = i254 + 1;

        $c24 = r0[i465];

        $i717 = (int) $c24;

        if $i717 != 104 goto label120;

        i466 = i465 + 1;

        $c25 = r0[i466];

        $i718 = (int) $c25;

        if $i718 != 114 goto label120;

        i467 = i466 + 1;

        $c26 = r0[i467];

        $i719 = (int) $c26;

        if $i719 != 111 goto label120;

        i468 = i467 + 1;

        $c27 = r0[i468];

        $i720 = (int) $c27;

        if $i720 != 119 goto label120;

        i469 = i468 + 1;

        $c28 = r0[i469];

        $i721 = (int) $c28;

        if $i721 != 115 goto label120;

        return 227;

     label120:
        return 5;

     label121:
        i470 = i254 + 1;

        $c16 = r0[i470];

        $i722 = (int) $c16;

        if $i722 != 114 goto label122;

        i471 = i470 + 1;

        $c17 = r0[i471];

        $i723 = (int) $c17;

        if $i723 != 97 goto label122;

        i472 = i471 + 1;

        $c18 = r0[i472];

        $i724 = (int) $c18;

        if $i724 != 110 goto label122;

        i473 = i472 + 1;

        $c19 = r0[i473];

        $i725 = (int) $c19;

        if $i725 != 115 goto label122;

        i474 = i473 + 1;

        $c20 = r0[i474];

        $i726 = (int) $c20;

        if $i726 != 105 goto label122;

        i475 = i474 + 1;

        $c21 = r0[i475];

        $i727 = (int) $c21;

        if $i727 != 101 goto label122;

        i476 = i475 + 1;

        $c22 = r0[i476];

        $i728 = (int) $c22;

        if $i728 != 110 goto label122;

        i477 = i476 + 1;

        $c23 = r0[i477];

        $i729 = (int) $c23;

        if $i729 != 116 goto label122;

        return 105;

     label122:
        return 5;

     label123:
        return 5;

     label124:
        tableswitch(i1)
        {
            case 4: goto label125;
            case 5: goto label129;
            case 6: goto label129;
            case 7: goto label129;
            case 8: goto label127;
            default: goto label129;
        };

     label125:
        i478 = i254 + 1;

        $c13 = r0[i478];

        $i730 = (int) $c13;

        if $i730 != 111 goto label126;

        i479 = i478 + 1;

        $c14 = r0[i479];

        $i731 = (int) $c14;

        if $i731 != 105 goto label126;

        i480 = i479 + 1;

        $c15 = r0[i480];

        $i732 = (int) $c15;

        if $i732 != 100 goto label126;

        return 26;

     label126:
        return 5;

     label127:
        i481 = i254 + 1;

        $c6 = r0[i481];

        $i733 = (int) $c6;

        if $i733 != 111 goto label128;

        i482 = i481 + 1;

        $c7 = r0[i482];

        $i734 = (int) $c7;

        if $i734 != 108 goto label128;

        i483 = i482 + 1;

        $c8 = r0[i483];

        $i735 = (int) $c8;

        if $i735 != 97 goto label128;

        i484 = i483 + 1;

        $c9 = r0[i484];

        $i736 = (int) $c9;

        if $i736 != 116 goto label128;

        i485 = i484 + 1;

        $c10 = r0[i485];

        $i737 = (int) $c10;

        if $i737 != 105 goto label128;

        i486 = i485 + 1;

        $c11 = r0[i486];

        $i738 = (int) $c11;

        if $i738 != 108 goto label128;

        i487 = i486 + 1;

        $c12 = r0[i487];

        $i739 = (int) $c12;

        if $i739 != 101 goto label128;

        return 106;

     label128:
        return 5;

     label129:
        return 5;

     label130:
        tableswitch(i1)
        {
            case 5: goto label131;
            default: goto label133;
        };

     label131:
        i488 = i254 + 1;

        $c2 = r0[i488];

        $i740 = (int) $c2;

        if $i740 != 104 goto label132;

        i489 = i488 + 1;

        $c3 = r0[i489];

        $i741 = (int) $c3;

        if $i741 != 105 goto label132;

        i490 = i489 + 1;

        $c4 = r0[i490];

        $i742 = (int) $c4;

        if $i742 != 108 goto label132;

        i491 = i490 + 1;

        $c5 = r0[i491];

        $i743 = (int) $c5;

        if $i743 != 101 goto label132;

        return 117;

     label132:
        return 5;

     label133:
        return 5;

     label134:
        return 5;
    }

    public int scanNumber(boolean) throws org.eclipse.jdt.core.compiler.InvalidInputException
    {
        byte $b40, $b58, $b89;
        long $l39, $l57;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i13, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i28, $i29, $i31, $i32, $i35, $i37, $i38, $i41, $i42, $i44, $i45, $i46, $i48, $i49, $i50, $i51, $i52, $i55, $i59, $i60, $i61, $i63, $i64, $i65, $i67, $i68, $i69, $i70, $i71, $i74, $i76, i77, i78, i79, $i86, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        org.eclipse.jdt.core.compiler.InvalidInputException $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38;
        char[] $r1, $r2, $r4, $r5, $r6, $r7, $r9, $r10, $r12, $r13, $r16, $r17, $r19, $r20, $r23, $r24;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, $z13, z14, $z15, $z16, $z17, $z18, z19, $z20, $z21, $z22;
        char $c4, $c8, $c11, $c12, $c14, $c16, $c26, $c30, $c33, $c34, $c36, $c43, $c47, $c53, $c54, $c56, $c62, $c66, $c72, $c73, $c75, $c80, $c81, $c82, $c83, $c84, $c85, $c87, $c88;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        z0 := @parameter0: boolean;

        z14 = z0;

        if z0 != 0 goto label50;

        $c16 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i90 = (int) $c16;

        if $i90 != 48 goto label50;

        $i17 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(120, 88);

        if $i17 < 0 goto label33;

        i77 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

     label01:
        $z9 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextCharAsDigit(int)>(16);

        if $z9 != 0 goto label01;

        i78 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i37 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(108, 76);

        if $i37 < 0 goto label03;

        if i78 != i77 goto label02;

        $r28 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r28.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Hexa_Literal");

        throw $r28;

     label02:
        return 41;

     label03:
        $z10 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(46);

        if $z10 == 0 goto label20;

        $l57 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: long sourceLevel>;

        $b58 = $l57 cmp 3211264L;

        $i91 = (int) $b58;

        if $i91 >= 0 goto label05;

        if i78 != i77 goto label04;

        $r29 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r29.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Hexa_Literal");

        throw $r29;

     label04:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i78;

        return 40;

     label05:
        if i78 != i77 goto label06;

        $z15 = 1;

        goto label07;

     label06:
        $z15 = 0;

     label07:
        z12 = $z15;

        $i76 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

     label08:
        $z16 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextCharAsDigit(int)>(16);

        if $z16 != 0 goto label08;

        i79 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        if z12 == 0 goto label09;

        if i79 != $i76 goto label09;

        $r30 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r30.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Hexa_Literal");

        throw $r30;

     label09:
        $i59 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(112, 80);

        if $i59 < 0 goto label19;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r19 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i60 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i61 = $i60 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i61;

        $c62 = $r19[$i60];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c62;

        $i92 = (int) $c62;

        if $i92 != 92 goto label10;

        $r24 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i74 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c75 = $r24[$i74];

        $i93 = (int) $c75;

        if $i93 != 117 goto label10;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label11;

     label10:
        $i63 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i63 == 0 goto label11;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label11:
        $c80 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i94 = (int) $c80;

        if $i94 == 45 goto label12;

        $c73 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i95 = (int) $c73;

        if $i95 != 43 goto label14;

     label12:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r20 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i64 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i65 = $i64 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i65;

        $c66 = $r20[$i64];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c66;

        $i96 = (int) $c66;

        if $i96 != 92 goto label13;

        $r23 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i71 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c72 = $r23[$i71];

        $i97 = (int) $c72;

        if $i97 != 117 goto label13;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label14;

     label13:
        $i67 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i67 == 0 goto label14;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label14:
        $c81 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $z17 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isDigit(char)>($c81);

        if $z17 != 0 goto label15;

        $r31 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r31.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Hexa_Literal");

        throw $r31;

     label15:
        $z13 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextCharAsDigit()>();

        if $z13 != 0 goto label15;

        $i68 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(102, 70);

        if $i68 < 0 goto label16;

        return 42;

     label16:
        $i69 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(100, 68);

        if $i69 < 0 goto label17;

        return 43;

     label17:
        $i70 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(108, 76);

        if $i70 < 0 goto label18;

        $r32 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r32.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Hexa_Literal");

        throw $r32;

     label18:
        return 43;

     label19:
        $r33 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r33.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Hexa_Literal");

        throw $r33;

     label20:
        $i38 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(112, 80);

        if $i38 < 0 goto label31;

        $l39 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: long sourceLevel>;

        $b40 = $l39 cmp 3211264L;

        $i98 = (int) $b40;

        if $i98 >= 0 goto label21;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = i78;

        return 40;

     label21:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i41 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i42 = $i41 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i42;

        $c43 = $r12[$i41];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c43;

        $i99 = (int) $c43;

        if $i99 != 92 goto label22;

        $r17 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i55 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c56 = $r17[$i55];

        $i100 = (int) $c56;

        if $i100 != 117 goto label22;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label23;

     label22:
        $i44 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i44 == 0 goto label23;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label23:
        $c82 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i101 = (int) $c82;

        if $i101 == 45 goto label24;

        $c54 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i102 = (int) $c54;

        if $i102 != 43 goto label26;

     label24:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r13 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i45 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i46 = $i45 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i46;

        $c47 = $r13[$i45];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c47;

        $i103 = (int) $c47;

        if $i103 != 92 goto label25;

        $r16 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i52 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c53 = $r16[$i52];

        $i104 = (int) $c53;

        if $i104 != 117 goto label25;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label26;

     label25:
        $i48 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i48 == 0 goto label26;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label26:
        $c83 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $z18 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isDigit(char)>($c83);

        if $z18 != 0 goto label27;

        $r34 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r34.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Float_Literal");

        throw $r34;

     label27:
        $z11 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextCharAsDigit()>();

        if $z11 != 0 goto label27;

        $i49 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(102, 70);

        if $i49 < 0 goto label28;

        return 42;

     label28:
        $i50 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(100, 68);

        if $i50 < 0 goto label29;

        return 43;

     label29:
        $i51 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(108, 76);

        if $i51 < 0 goto label30;

        $r35 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r35.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Hexa_Literal");

        throw $r35;

     label30:
        return 43;

     label31:
        if i78 != i77 goto label32;

        $r36 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r36.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Hexa_Literal");

        throw $r36;

     label32:
        return 40;

     label33:
        $z4 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextCharAsDigit()>();

        if $z4 == 0 goto label50;

     label34:
        $z5 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextCharAsDigit()>();

        if $z5 != 0 goto label34;

        $i18 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(108, 76);

        if $i18 < 0 goto label35;

        return 41;

     label35:
        $i19 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(102, 70);

        if $i19 < 0 goto label36;

        return 42;

     label36:
        $i20 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(100, 68);

        if $i20 < 0 goto label37;

        return 43;

     label37:
        z19 = 1;

        $z6 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(46);

        if $z6 == 0 goto label39;

        z19 = 0;

     label38:
        $z8 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextCharAsDigit()>();

        if $z8 != 0 goto label38;

     label39:
        $i21 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(101, 69);

        if $i21 < 0 goto label46;

        z19 = 0;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i24 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i25 = $i24 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i25;

        $c26 = $r6[$i24];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c26;

        $i105 = (int) $c26;

        if $i105 != 92 goto label40;

        $r10 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i35 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c36 = $r10[$i35];

        $i106 = (int) $c36;

        if $i106 != 117 goto label40;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label41;

     label40:
        $i27 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i27 == 0 goto label41;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label41:
        $c84 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i107 = (int) $c84;

        if $i107 == 45 goto label42;

        $c34 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i108 = (int) $c34;

        if $i108 != 43 goto label44;

     label42:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i28 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i29 = $i28 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i29;

        $c30 = $r7[$i28];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c30;

        $i109 = (int) $c30;

        if $i109 != 92 goto label43;

        $r9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i32 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c33 = $r9[$i32];

        $i110 = (int) $c33;

        if $i110 != 117 goto label43;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label44;

     label43:
        $i31 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i31 == 0 goto label44;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label44:
        $c85 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $z20 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isDigit(char)>($c85);

        if $z20 != 0 goto label45;

        $r37 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r37.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Float_Literal");

        throw $r37;

     label45:
        $z7 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextCharAsDigit()>();

        if $z7 != 0 goto label45;

     label46:
        $i22 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(102, 70);

        if $i22 < 0 goto label47;

        return 42;

     label47:
        $i23 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(100, 68);

        if $i23 >= 0 goto label48;

        if z19 != 0 goto label49;

     label48:
        return 43;

     label49:
        return 40;

     label50:
        $z21 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextCharAsDigit()>();

        if $z21 != 0 goto label50;

        if z0 != 0 goto label51;

        $i15 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(108, 76);

        if $i15 < 0 goto label51;

        return 41;

     label51:
        if z0 != 0 goto label53;

        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextChar(char)>(46);

        if $z2 == 0 goto label53;

     label52:
        $z3 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextCharAsDigit()>();

        if $z3 != 0 goto label52;

        z14 = 1;

     label53:
        $i86 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(101, 69);

        if $i86 < 0 goto label60;

        z14 = 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i3;

        $c4 = $r1[$i2];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c4;

        $i111 = (int) $c4;

        if $i111 != 92 goto label54;

        $r5 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i13 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c14 = $r5[$i13];

        $i112 = (int) $c14;

        if $i112 != 117 goto label54;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label55;

     label54:
        $i5 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i5 == 0 goto label55;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label55:
        $c87 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i113 = (int) $c87;

        if $i113 == 45 goto label56;

        $c12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $i114 = (int) $c12;

        if $i114 != 43 goto label58;

     label56:
        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean unicodeAsBackSlash> = 0;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = $i7;

        $c8 = $r2[$i6];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter> = $c8;

        $i115 = (int) $c8;

        if $i115 != 92 goto label57;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i10 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $c11 = $r4[$i10];

        $i116 = (int) $c11;

        if $i116 != 117 goto label57;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void getNextUnicodeChar()>();

        goto label58;

     label57:
        $i9 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        if $i9 == 0 goto label58;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void unicodeStore()>();

     label58:
        $c88 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $z22 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isDigit(char)>($c88);

        if $z22 != 0 goto label59;

        $r38 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r38.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Float_Literal");

        throw $r38;

     label59:
        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean getNextCharAsDigit()>();

        if $z1 != 0 goto label59;

     label60:
        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(100, 68);

        if $i0 < 0 goto label61;

        return 43;

     label61:
        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int getNextChar(char,char)>(102, 70);

        if $i1 < 0 goto label62;

        return 42;

     label62:
        if z14 == 0 goto label63;

        $b89 = 43;

        goto label64;

     label63:
        $b89 = 40;

     label64:
        return $b89;
    }

    public final int getLineNumber(int)
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int[] $r1;
        int i0, $i1, $i2;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        i0 := @parameter0: int;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds>;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr>;

        $i2 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: int getLineNumber(int,int[],int,int)>(i0, $r1, 0, $i1);

        return $i2;
    }

    public final void setSource(char[])
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r1;
        int i0, $i2, $i4;
        char[] r0, $r2;

        r1 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        r0 := @parameter0: char[];

        if r0 != null goto label1;

        $r2 = <org.eclipse.jdt.core.compiler.CharOperation: char[] NO_CHAR>;

        r1.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source> = $r2;

        i0 = 0;

        goto label2;

     label1:
        r1.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source> = r0;

        i0 = lengthof r0;

     label2:
        $i2 = (int) -1;

        r1.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition> = $i2;

        r1.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition> = i0;

        r1.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition> = 0;

        r1.<org.eclipse.jdt.internal.core.util.PublicScanner: int initialPosition> = 0;

        r1.<org.eclipse.jdt.internal.core.util.PublicScanner: boolean containsAssertKeyword> = 0;

        $i4 = (int) -1;

        r1.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr> = $i4;

        return;
    }

    public final void setSource(char[], org.eclipse.jdt.internal.compiler.CompilationResult)
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r1;
        org.eclipse.jdt.internal.compiler.CompilationResult r2;
        int[] $r5;
        int $i0, $i1;
        char[] r0, $r4;
        org.eclipse.jdt.internal.compiler.env.ICompilationUnit $r3;

        r1 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        r0 := @parameter0: char[];

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.CompilationResult;

        if r0 != null goto label1;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.CompilationResult: org.eclipse.jdt.internal.compiler.env.ICompilationUnit compilationUnit>;

        $r4 = interfaceinvoke $r3.<org.eclipse.jdt.internal.compiler.env.ICompilationUnit: char[] getContents()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.core.util.PublicScanner: void setSource(char[])>($r4);

        goto label2;

     label1:
        virtualinvoke r1.<org.eclipse.jdt.internal.core.util.PublicScanner: void setSource(char[])>(r0);

     label2:
        $r5 = r2.<org.eclipse.jdt.internal.compiler.CompilationResult: int[] lineSeparatorPositions>;

        if $r5 == null goto label3;

        r1.<org.eclipse.jdt.internal.core.util.PublicScanner: int[] lineEnds> = $r5;

        $i0 = lengthof $r5;

        $i1 = $i0 - 1;

        r1.<org.eclipse.jdt.internal.core.util.PublicScanner: int linePtr> = $i1;

     label3:
        return;
    }

    public final void setSource(org.eclipse.jdt.internal.compiler.CompilationResult)
    {
        org.eclipse.jdt.internal.compiler.CompilationResult r1;
        org.eclipse.jdt.internal.core.util.PublicScanner r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.CompilationResult;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.PublicScanner: void setSource(char[],org.eclipse.jdt.internal.compiler.CompilationResult)>(null, r1);

        return;
    }

    public java.lang.String toString()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        java.lang.StringBuffer $r7, $r9, $r10, $r12, $r19, $r24, $r29, $r32, $r34, $r36, $r39;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26;
        java.lang.String $r6, $r13, $r20, $r25, $r30, $r33, $r35, $r37, $r38, $r40, $r41;
        char[] r1, $r2, $r3, $r14, $r15, $r18, $r23, $r28, r31;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i1 != $i0 goto label1;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>(java.lang.String)>("EOF\n\n");

        $r33 = new java.lang.String;

        $r28 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        specialinvoke $r33.<java.lang.String: void <init>(char[])>($r28);

        $r29 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r30;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        if $i3 <= $i2 goto label2;

        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>(java.lang.String)>("behind the EOF\n\n");

        $r35 = new java.lang.String;

        $r23 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        specialinvoke $r35.<java.lang.String: void <init>(char[])>($r23);

        $r24 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r25;

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        if $i4 > 0 goto label3;

        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>(java.lang.String)>("NOT started!\n\n");

        $r37 = new java.lang.String;

        $r18 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        specialinvoke $r37.<java.lang.String: void <init>(char[])>($r18);

        $r19 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r20;

     label3:
        $i5 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        r1 = newarray (char)[$i5];

        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i6);

        $i7 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i9 = $i7 - 1;

        $i8 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $i10 = $i9 - $i8;

        i11 = $i10 + 1;

        $i26 = (int) -1;

        if i11 <= $i26 goto label4;

        r31 = newarray (char)[i11];

        $r14 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i24 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, $i24, r31, 0, i11);

        goto label5;

     label4:
        r31 = <org.eclipse.jdt.core.compiler.CharOperation: char[] NO_CHAR>;

     label5:
        $i14 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        $i12 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i13 = $i12 - 1;

        $i15 = $i14 - $i13;

        $r15 = newarray (char)[$i15];

        $r3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i16 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i17 = $i16 - 1;

        $i23 = $i17 + 1;

        $i20 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int eofPosition>;

        $i18 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int currentPosition>;

        $i19 = $i18 - 1;

        $i21 = $i20 - $i19;

        $i22 = $i21 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i23, $r15, 0, $i22);

        $r39 = new java.lang.StringBuffer;

        $r38 = new java.lang.String;

        specialinvoke $r38.<java.lang.String: void <init>(char[])>(r1);

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r38);

        specialinvoke $r39.<java.lang.StringBuffer: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n===============================\nStarts here -->");

        $r40 = new java.lang.String;

        specialinvoke $r40.<java.lang.String: void <init>(char[])>(r31);

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<-- Ends here\n===============================\n");

        $r41 = new java.lang.String;

        specialinvoke $r41.<java.lang.String: void <init>(char[])>($r15);

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r41);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;
    }

    public java.lang.String toStringAction(int)
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r2;
        java.lang.StringBuffer $r0, $r4, $r5, $r7, $r10, $r11, $r13, $r16, $r17, $r19, $r22, $r23, $r25, $r28, $r29, $r31, $r34, $r35, $r37, $r40, $r41, $r43, $r46, $r47;
        int i0;
        java.lang.String $r1, $r6, $r8, $r12, $r14, $r18, $r20, $r24, $r26, $r30, $r32, $r36, $r38, $r42, $r44, $r48;
        char[] $r3, $r9, $r15, $r21, $r27, $r33, $r39, $r45;

        r2 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 1: goto label056;
            case 2: goto label057;
            case 3: goto label078;
            case 4: goto label079;
            case 5: goto label001;
            case 6: goto label100;
            case 7: goto label090;
            case 8: goto label084;
            case 9: goto label081;
            case 10: goto label087;
            case 11: goto label063;
            case 12: goto label064;
            case 14: goto label062;
            case 15: goto label094;
            case 18: goto label003;
            case 19: goto label005;
            case 20: goto label008;
            case 21: goto label013;
            case 22: goto label019;
            case 23: goto label025;
            case 24: goto label027;
            case 25: goto label036;
            case 26: goto label047;
            case 32: goto label029;
            case 33: goto label038;
            case 34: goto label041;
            case 35: goto label058;
            case 36: goto label061;
            case 37: goto label016;
            case 38: goto label030;
            case 39: goto label045;
            case 40: goto label050;
            case 41: goto label051;
            case 42: goto label052;
            case 43: goto label053;
            case 44: goto label054;
            case 45: goto label055;
            case 62: goto label083;
            case 63: goto label082;
            case 64: goto label096;
            case 65: goto label024;
            case 66: goto label059;
            case 67: goto label060;
            case 68: goto label088;
            case 69: goto label089;
            case 70: goto label085;
            case 71: goto label080;
            case 72: goto label086;
            case 79: goto label077;
            case 80: goto label076;
            case 81: goto label097;
            case 85: goto label040;
            case 86: goto label091;
            case 90: goto label099;
            case 94: goto label037;
            case 95: goto label093;
            case 98: goto label002;
            case 99: goto label017;
            case 100: goto label028;
            case 101: goto label032;
            case 102: goto label033;
            case 103: goto label034;
            case 105: goto label044;
            case 106: goto label048;
            case 110: goto label092;
            case 117: goto label049;
            case 119: goto label004;
            case 120: goto label010;
            case 121: goto label012;
            case 122: goto label020;
            case 123: goto label021;
            case 124: goto label035;
            case 125: goto label039;
            case 126: goto label042;
            case 127: goto label046;
            case 154: goto label098;
            case 158: goto label102;
            case 165: goto label009;
            case 166: goto label095;
            case 167: goto label101;
            case 168: goto label065;
            case 169: goto label066;
            case 170: goto label067;
            case 171: goto label068;
            case 172: goto label069;
            case 173: goto label070;
            case 174: goto label071;
            case 175: goto label072;
            case 176: goto label073;
            case 177: goto label074;
            case 178: goto label075;
            case 180: goto label026;
            case 191: goto label023;
            case 211: goto label006;
            case 212: goto label011;
            case 213: goto label014;
            case 214: goto label031;
            case 225: goto label007;
            case 226: goto label018;
            case 227: goto label043;
            case 243: goto label015;
            case 268: goto label022;
            case 1000: goto label103;
            default: goto label104;
        };

     label001:
        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>(java.lang.String)>("Identifier(");

        $r44 = new java.lang.String;

        $r45 = virtualinvoke r2.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] getCurrentTokenSource()>();

        specialinvoke $r44.<java.lang.String: void <init>(char[])>($r45);

        $r46 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r48;

     label002:
        return "abstract";

     label003:
        return "boolean";

     label004:
        return "break";

     label005:
        return "byte";

     label006:
        return "case";

     label007:
        return "catch";

     label008:
        return "char";

     label009:
        return "class";

     label010:
        return "continue";

     label011:
        return "default";

     label012:
        return "do";

     label013:
        return "double";

     label014:
        return "else";

     label015:
        return "extends";

     label016:
        return "false";

     label017:
        return "final";

     label018:
        return "finally";

     label019:
        return "float";

     label020:
        return "for";

     label021:
        return "if";

     label022:
        return "implements";

     label023:
        return "import";

     label024:
        return "instanceof";

     label025:
        return "int";

     label026:
        return "interface";

     label027:
        return "long";

     label028:
        return "native";

     label029:
        return "new";

     label030:
        return "null";

     label031:
        return "package";

     label032:
        return "private";

     label033:
        return "protected";

     label034:
        return "public";

     label035:
        return "return";

     label036:
        return "short";

     label037:
        return "static";

     label038:
        return "super";

     label039:
        return "switch";

     label040:
        return "synchronized";

     label041:
        return "this";

     label042:
        return "throw";

     label043:
        return "throws";

     label044:
        return "transient";

     label045:
        return "true";

     label046:
        return "try";

     label047:
        return "void";

     label048:
        return "volatile";

     label049:
        return "while";

     label050:
        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>(java.lang.String)>("Integer(");

        $r38 = new java.lang.String;

        $r39 = virtualinvoke r2.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] getCurrentTokenSource()>();

        specialinvoke $r38.<java.lang.String: void <init>(char[])>($r39);

        $r40 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r42;

     label051:
        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>(java.lang.String)>("Long(");

        $r32 = new java.lang.String;

        $r33 = virtualinvoke r2.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] getCurrentTokenSource()>();

        specialinvoke $r32.<java.lang.String: void <init>(char[])>($r33);

        $r34 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r36;

     label052:
        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>(java.lang.String)>("Float(");

        $r26 = new java.lang.String;

        $r27 = virtualinvoke r2.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] getCurrentTokenSource()>();

        specialinvoke $r26.<java.lang.String: void <init>(char[])>($r27);

        $r28 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r30;

     label053:
        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>(java.lang.String)>("Double(");

        $r20 = new java.lang.String;

        $r21 = virtualinvoke r2.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] getCurrentTokenSource()>();

        specialinvoke $r20.<java.lang.String: void <init>(char[])>($r21);

        $r22 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r24;

     label054:
        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>(java.lang.String)>("Char(");

        $r14 = new java.lang.String;

        $r15 = virtualinvoke r2.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] getCurrentTokenSource()>();

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r15);

        $r16 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r18;

     label055:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>(java.lang.String)>("String(");

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r2.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] getCurrentTokenSource()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;

     label056:
        return "++";

     label057:
        return "--";

     label058:
        return "==";

     label059:
        return "<=";

     label060:
        return ">=";

     label061:
        return "!=";

     label062:
        return "<<";

     label063:
        return ">>";

     label064:
        return ">>>";

     label065:
        return "+=";

     label066:
        return "-=";

     label067:
        return "*=";

     label068:
        return "/=";

     label069:
        return "&=";

     label070:
        return "|=";

     label071:
        return "^=";

     label072:
        return "%=";

     label073:
        return "<<=";

     label074:
        return ">>=";

     label075:
        return ">>>=";

     label076:
        return "||";

     label077:
        return "&&";

     label078:
        return "+";

     label079:
        return "-";

     label080:
        return "!";

     label081:
        return "%";

     label082:
        return "^";

     label083:
        return "&";

     label084:
        return "*";

     label085:
        return "|";

     label086:
        return "~";

     label087:
        return "/";

     label088:
        return ">";

     label089:
        return "<";

     label090:
        return "(";

     label091:
        return ")";

     label092:
        return "{";

     label093:
        return "}";

     label094:
        return "[";

     label095:
        return "]";

     label096:
        return ";";

     label097:
        return "?";

     label098:
        return ":";

     label099:
        return ",";

     label100:
        return ".";

     label101:
        return "=";

     label102:
        return "EOF";

     label103:
        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("white_space(");

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] getCurrentTokenSource()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;

     label104:
        return "not-a-token";
    }

    public void unicodeInitializeBuffer(int)
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        i0 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = i0;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer>;

        if $r1 != null goto label1;

        $i4 = i0 + 11;

        $r7 = newarray (char)[$i4];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer> = $r7;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer>;

        $i5 = lengthof $r2;

        $i1 = 1 + i0;

        if $i1 < $i5 goto label2;

        $r6 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer>;

        $i3 = i0 + 11;

        $r5 = newarray (char)[$i3];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer> = $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, $i5);

     label2:
        $r4 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] source>;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int startPosition>;

        $r3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i2, $r3, 1, i0);

        return;
    }

    public void unicodeStore()
    {
        org.eclipse.jdt.internal.core.util.PublicScanner r0;
        char $c2;
        int $i0, $i1, $i3, $i4;
        char[] $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.eclipse.jdt.internal.core.util.PublicScanner;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: int withoutUnicodePtr> = $i1;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer>;

        if $r1 != null goto label1;

        $r6 = newarray (char)[10];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer> = $r6;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer>;

        $i4 = lengthof $r2;

        if $i1 != $i4 goto label2;

        $r5 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer>;

        $i3 = $i4 * 2;

        $r4 = newarray (char)[$i3];

        r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer> = $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, $i4);

     label2:
        $r3 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char[] withoutUnicodeBuffer>;

        $c2 = r0.<org.eclipse.jdt.internal.core.util.PublicScanner: char currentCharacter>;

        $r3[$i1] = $c2;

        return;
    }
}
