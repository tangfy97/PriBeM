public class com.sun.lwuit.geom.Rectangle extends java.lang.Object
{
    private int x;
    private int y;
    private com.sun.lwuit.geom.Dimension size;

    public void <init>()
    {
        com.sun.lwuit.geom.Dimension $r1;
        com.sun.lwuit.geom.Rectangle r0;

        r0 := @this: com.sun.lwuit.geom.Rectangle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r1.<com.sun.lwuit.geom.Dimension: void <init>()>();

        r0.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size> = $r1;

        return;
    }

    public void <init>(int, int, com.sun.lwuit.geom.Dimension)
    {
        com.sun.lwuit.geom.Dimension r1;
        int i0, i1;
        com.sun.lwuit.geom.Rectangle r0;

        r0 := @this: com.sun.lwuit.geom.Rectangle;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.sun.lwuit.geom.Dimension;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.lwuit.geom.Rectangle: int x> = i0;

        r0.<com.sun.lwuit.geom.Rectangle: int y> = i1;

        r0.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size> = r1;

        return;
    }

    public void <init>(int, int, int, int)
    {
        com.sun.lwuit.geom.Dimension $r1;
        int i0, i1, i2, i3;
        com.sun.lwuit.geom.Rectangle r0;

        r0 := @this: com.sun.lwuit.geom.Rectangle;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.lwuit.geom.Rectangle: int x> = i0;

        r0.<com.sun.lwuit.geom.Rectangle: int y> = i1;

        $r1 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r1.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(i2, i3);

        r0.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size> = $r1;

        return;
    }

    public void <init>(com.sun.lwuit.geom.Rectangle)
    {
        com.sun.lwuit.geom.Rectangle r0, r1;
        com.sun.lwuit.geom.Dimension $r2, $r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.sun.lwuit.geom.Rectangle;

        r1 := @parameter0: com.sun.lwuit.geom.Rectangle;

        $i0 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i1 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $r2 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i2 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $r3 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i3 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        specialinvoke r0.<com.sun.lwuit.geom.Rectangle: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    public com.sun.lwuit.geom.Dimension getSize()
    {
        com.sun.lwuit.geom.Dimension $r1;
        com.sun.lwuit.geom.Rectangle r0;

        r0 := @this: com.sun.lwuit.geom.Rectangle;

        $r1 = r0.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size>;

        return $r1;
    }

    public int getX()
    {
        int $i0;
        com.sun.lwuit.geom.Rectangle r0;

        r0 := @this: com.sun.lwuit.geom.Rectangle;

        $i0 = r0.<com.sun.lwuit.geom.Rectangle: int x>;

        return $i0;
    }

    public int getY()
    {
        int $i0;
        com.sun.lwuit.geom.Rectangle r0;

        r0 := @this: com.sun.lwuit.geom.Rectangle;

        $i0 = r0.<com.sun.lwuit.geom.Rectangle: int y>;

        return $i0;
    }

    public java.lang.String toString()
    {
        com.sun.lwuit.geom.Rectangle r2;
        com.sun.lwuit.geom.Dimension $r7;
        int $i0, $i1;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r8;
        java.lang.String $r9;

        r2 := @this: com.sun.lwuit.geom.Rectangle;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x = ");

        $i0 = r2.<com.sun.lwuit.geom.Rectangle: int x>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" y = ");

        $i1 = r2.<com.sun.lwuit.geom.Rectangle: int y>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size = ");

        $r7 = r2.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public void setX(int)
    {
        int i0;
        com.sun.lwuit.geom.Rectangle r0;

        r0 := @this: com.sun.lwuit.geom.Rectangle;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.geom.Rectangle: int x> = i0;

        return;
    }

    public void setY(int)
    {
        int i0;
        com.sun.lwuit.geom.Rectangle r0;

        r0 := @this: com.sun.lwuit.geom.Rectangle;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.geom.Rectangle: int y> = i0;

        return;
    }

    public boolean contains(com.sun.lwuit.geom.Rectangle)
    {
        com.sun.lwuit.geom.Rectangle r0, r1;
        com.sun.lwuit.geom.Dimension $r2, $r3;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: com.sun.lwuit.geom.Rectangle;

        r1 := @parameter0: com.sun.lwuit.geom.Rectangle;

        $i0 = r1.<com.sun.lwuit.geom.Rectangle: int x>;

        $i1 = r1.<com.sun.lwuit.geom.Rectangle: int y>;

        $r2 = r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size>;

        $i2 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $r3 = r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size>;

        $i3 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $z0 = virtualinvoke r0.<com.sun.lwuit.geom.Rectangle: boolean contains(int,int,int,int)>($i0, $i1, $i2, $i3);

        return $z0;
    }

    public boolean contains(int, int, int, int)
    {
        com.sun.lwuit.geom.Rectangle r0;
        com.sun.lwuit.geom.Dimension $r1, $r2;
        int i0, $i1, i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, i11, $i12, $i13;
        boolean $z0;

        r0 := @this: com.sun.lwuit.geom.Rectangle;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i6 := @parameter2: int;

        i11 := @parameter3: int;

        $i1 = r0.<com.sun.lwuit.geom.Rectangle: int x>;

        if $i1 > i0 goto label1;

        $i3 = r0.<com.sun.lwuit.geom.Rectangle: int y>;

        if $i3 > i2 goto label1;

        $i4 = r0.<com.sun.lwuit.geom.Rectangle: int x>;

        $r1 = r0.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size>;

        $i5 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i8 = $i4 + $i5;

        $i7 = i0 + i6;

        if $i8 < $i7 goto label1;

        $i9 = r0.<com.sun.lwuit.geom.Rectangle: int y>;

        $r2 = r0.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size>;

        $i10 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i13 = $i9 + $i10;

        $i12 = i2 + i11;

        if $i13 < $i12 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean contains(int, int, int, int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4, i5, $i6, $i7, i8, i9, $i10, $i11;
        boolean $z0;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        i8 := @parameter3: int;

        i1 := @parameter4: int;

        i3 := @parameter5: int;

        i5 := @parameter6: int;

        i9 := @parameter7: int;

        if i0 > i1 goto label1;

        if i2 > i3 goto label1;

        $i7 = i0 + i4;

        $i6 = i1 + i5;

        if $i7 < $i6 goto label1;

        $i11 = i2 + i8;

        $i10 = i3 + i9;

        if $i11 < $i10 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean contains(int, int)
    {
        com.sun.lwuit.geom.Rectangle r0;
        com.sun.lwuit.geom.Dimension $r1, $r2;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0;

        r0 := @this: com.sun.lwuit.geom.Rectangle;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $i1 = r0.<com.sun.lwuit.geom.Rectangle: int x>;

        if $i1 > i0 goto label1;

        $i3 = r0.<com.sun.lwuit.geom.Rectangle: int y>;

        if $i3 > i2 goto label1;

        $i4 = r0.<com.sun.lwuit.geom.Rectangle: int x>;

        $r1 = r0.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size>;

        $i5 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i6 = $i4 + $i5;

        if $i6 < i0 goto label1;

        $i7 = r0.<com.sun.lwuit.geom.Rectangle: int y>;

        $r2 = r0.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size>;

        $i8 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i9 = $i7 + $i8;

        if $i9 < i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.sun.lwuit.geom.Rectangle intersection(int, int, int, int)
    {
        byte $b10, $b11, $b14, $b15;
        long $l3, $l5, $l7, $l9, $l12, $l13, $l18, $l19, l22, l23, l24, l25, l26, l27, l28, l29, l30, l31;
        com.sun.lwuit.geom.Rectangle r0, $r4;
        com.sun.lwuit.geom.Dimension $r1, $r2;
        int i0, i1, $i2, $i4, i6, i8, $i16, $i17, i20, i21, $i32, $i33, $i34, $i35;

        r0 := @this: com.sun.lwuit.geom.Rectangle;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i6 := @parameter2: int;

        i8 := @parameter3: int;

        i20 = r0.<com.sun.lwuit.geom.Rectangle: int x>;

        i21 = r0.<com.sun.lwuit.geom.Rectangle: int y>;

        l22 = (long) i20;

        $r1 = r0.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size>;

        $i2 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $l3 = (long) $i2;

        l23 = l22 + $l3;

        l24 = (long) i21;

        $r2 = r0.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size>;

        $i4 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $l5 = (long) $i4;

        l25 = l24 + $l5;

        l26 = (long) i0;

        $l7 = (long) i6;

        l27 = l26 + $l7;

        l28 = (long) i1;

        $l9 = (long) i8;

        l29 = l28 + $l9;

        if i20 >= i0 goto label1;

        i20 = i0;

     label1:
        if i21 >= i1 goto label2;

        i21 = i1;

     label2:
        $b10 = l23 cmp l27;

        $i32 = (int) $b10;

        if $i32 <= 0 goto label3;

        l23 = l27;

     label3:
        $b11 = l25 cmp l29;

        $i33 = (int) $b11;

        if $i33 <= 0 goto label4;

        l25 = l29;

     label4:
        $l12 = (long) i20;

        $l18 = l23 - $l12;

        l30 = $l18;

        $l13 = (long) i21;

        $l19 = l25 - $l13;

        l31 = $l19;

        $b14 = $l18 cmp -2147483648L;

        $i34 = (int) $b14;

        if $i34 >= 0 goto label5;

        l30 = -2147483648L;

     label5:
        $b15 = $l19 cmp -2147483648L;

        $i35 = (int) $b15;

        if $i35 >= 0 goto label6;

        l31 = -2147483648L;

     label6:
        $r4 = new com.sun.lwuit.geom.Rectangle;

        $i17 = (int) l30;

        $i16 = (int) l31;

        specialinvoke $r4.<com.sun.lwuit.geom.Rectangle: void <init>(int,int,int,int)>(i20, i21, $i17, $i16);

        return $r4;
    }

    public com.sun.lwuit.geom.Rectangle intersection(com.sun.lwuit.geom.Rectangle)
    {
        com.sun.lwuit.geom.Rectangle r0, r1, $r4;
        com.sun.lwuit.geom.Dimension $r2, $r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.sun.lwuit.geom.Rectangle;

        r1 := @parameter0: com.sun.lwuit.geom.Rectangle;

        $i0 = r1.<com.sun.lwuit.geom.Rectangle: int x>;

        $i1 = r1.<com.sun.lwuit.geom.Rectangle: int y>;

        $r2 = r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size>;

        $i2 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $r3 = r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size>;

        $i3 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $r4 = virtualinvoke r0.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Rectangle intersection(int,int,int,int)>($i0, $i1, $i2, $i3);

        return $r4;
    }

    public boolean intersects(int, int, int, int)
    {
        com.sun.lwuit.geom.Rectangle r0;
        com.sun.lwuit.geom.Dimension $r1, $r2;
        int $i0, $i1, i2, i3, i4, i5, $i6, $i7;
        boolean $z0;

        r0 := @this: com.sun.lwuit.geom.Rectangle;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        $r1 = r0.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $r2 = r0.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension size>;

        $i1 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i7 = r0.<com.sun.lwuit.geom.Rectangle: int x>;

        $i6 = r0.<com.sun.lwuit.geom.Rectangle: int y>;

        $z0 = staticinvoke <com.sun.lwuit.geom.Rectangle: boolean intersects(int,int,int,int,int,int,int,int)>($i7, $i6, $i0, $i1, i2, i3, i4, i5);

        return $z0;
    }

    public boolean intersects(com.sun.lwuit.geom.Rectangle)
    {
        com.sun.lwuit.geom.Rectangle r0, r1;
        com.sun.lwuit.geom.Dimension $r2, $r3;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: com.sun.lwuit.geom.Rectangle;

        r1 := @parameter0: com.sun.lwuit.geom.Rectangle;

        $i0 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i1 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $r2 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i2 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $r3 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i3 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $z0 = virtualinvoke r0.<com.sun.lwuit.geom.Rectangle: boolean intersects(int,int,int,int)>($i0, $i1, $i2, $i3);

        return $z0;
    }

    public static boolean intersects(int, int, int, int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11;
        boolean $z0;

        i4 := @parameter0: int;

        i5 := @parameter1: int;

        i6 := @parameter2: int;

        i7 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        if i0 <= 0 goto label1;

        if i1 <= 0 goto label1;

        if i6 <= 0 goto label1;

        if i7 > 0 goto label2;

     label1:
        return 0;

     label2:
        i8 = i0 + i2;

        i9 = i1 + i3;

        i10 = i6 + i4;

        i11 = i7 + i5;

        if i8 < i2 goto label3;

        if i8 <= i4 goto label7;

     label3:
        if i9 < i3 goto label4;

        if i9 <= i5 goto label7;

     label4:
        if i10 < i4 goto label5;

        if i10 <= i2 goto label7;

     label5:
        if i11 < i5 goto label6;

        if i11 <= i3 goto label7;

     label6:
        $z0 = 1;

        goto label8;

     label7:
        $z0 = 0;

     label8:
        return $z0;
    }
}
