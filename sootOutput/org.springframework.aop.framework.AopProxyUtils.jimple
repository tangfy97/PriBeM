public abstract class org.springframework.aop.framework.AopProxyUtils extends java.lang.Object
{

    public void <init>()
    {
        org.springframework.aop.framework.AopProxyUtils r0;

        r0 := @this: org.springframework.aop.framework.AopProxyUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Class ultimateTargetClass(java.lang.Object)
    {
        org.springframework.aop.framework.Advised $r2;
        org.springframework.aop.target.SingletonTargetSource $r4;
        org.springframework.aop.TargetSource $r3;
        org.springframework.aop.TargetClassAware $r1;
        java.lang.Object r0, r6, r8;
        java.lang.Class $r5, r7, $r9;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Candidate object must not be null");

        r6 = r0;

        r7 = null;

        goto label3;

     label1:
        $r1 = (org.springframework.aop.TargetClassAware) r6;

        r7 = interfaceinvoke $r1.<org.springframework.aop.TargetClassAware: java.lang.Class getTargetClass()>();

        r8 = null;

        $z0 = r6 instanceof org.springframework.aop.framework.Advised;

        if $z0 == 0 goto label2;

        $r2 = (org.springframework.aop.framework.Advised) r6;

        $r3 = interfaceinvoke $r2.<org.springframework.aop.framework.Advised: org.springframework.aop.TargetSource getTargetSource()>();

        $z1 = $r3 instanceof org.springframework.aop.target.SingletonTargetSource;

        if $z1 == 0 goto label2;

        $r4 = (org.springframework.aop.target.SingletonTargetSource) $r3;

        r8 = virtualinvoke $r4.<org.springframework.aop.target.SingletonTargetSource: java.lang.Object getTarget()>();

     label2:
        r6 = r8;

     label3:
        $z3 = r6 instanceof org.springframework.aop.TargetClassAware;

        if $z3 != 0 goto label1;

        if r7 != null goto label6;

        $z2 = staticinvoke <org.springframework.aop.support.AopUtils: boolean isCglibProxy(java.lang.Object)>(r0);

        if $z2 == 0 goto label4;

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r5.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label5;

     label4:
        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label5:
        r7 = $r9;

     label6:
        return r7;
    }

    public static java.lang.Class[] completeProxiedInterfaces(org.springframework.aop.framework.AdvisedSupport)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        org.springframework.aop.framework.AdvisedSupport r0;
        boolean $z0, z1, $z2, $z3, $z4, $z5, z6, $z7;
        java.lang.Class[] $r1, $r2, $r4, r5;
        java.lang.Class $r3;

        r0 := @parameter0: org.springframework.aop.framework.AdvisedSupport;

        $r1 = virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: java.lang.Class[] getProxiedInterfaces()>();

        r5 = $r1;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $r3 = virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: java.lang.Class getTargetClass()>();

        if $r3 == null goto label1;

        $z3 = virtualinvoke $r3.<java.lang.Class: boolean isInterface()>();

        if $z3 == 0 goto label1;

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = $r3;

        r5 = $r4;

     label1:
        $z4 = virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: boolean isInterfaceProxied(java.lang.Class)>(class "Lorg/springframework/aop/SpringProxy;");

        if $z4 == 0 goto label2;

        $z5 = 0;

        goto label3;

     label2:
        $z5 = 1;

     label3:
        z6 = $z5;

        $z0 = virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: boolean isOpaque()>();

        if $z0 != 0 goto label4;

        $z2 = virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: boolean isInterfaceProxied(java.lang.Class)>(class "Lorg/springframework/aop/framework/Advised;");

        if $z2 != 0 goto label4;

        $z7 = 1;

        goto label5;

     label4:
        $z7 = 0;

     label5:
        z1 = $z7;

        i7 = 0;

        if z6 == 0 goto label6;

        i7 = 1;

     label6:
        if z1 == 0 goto label7;

        i7 = i7 + 1;

     label7:
        $i1 = lengthof r5;

        $i2 = $i1 + i7;

        $r2 = newarray (java.lang.Class)[$i2];

        $i3 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, $r2, 0, $i3);

        if z6 == 0 goto label8;

        $i6 = lengthof r5;

        $r2[$i6] = class "Lorg/springframework/aop/SpringProxy;";

     label8:
        if z1 == 0 goto label9;

        $i4 = lengthof $r2;

        $i5 = $i4 - 1;

        $r2[$i5] = class "Lorg/springframework/aop/framework/Advised;";

     label9:
        return $r2;
    }

    public static java.lang.Class[] proxiedUserInterfaces(java.lang.Object)
    {
        java.lang.Class[] $r2, $r3;
        int $i0, $i1, $i2, i3;
        java.lang.Object r0;
        java.lang.Class $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i3 = 0;

        $z0 = r0 instanceof org.springframework.aop.SpringProxy;

        if $z0 == 0 goto label1;

        i3 = 1;

     label1:
        $z1 = r0 instanceof org.springframework.aop.framework.Advised;

        if $z1 == 0 goto label2;

        i3 = i3 + 1;

     label2:
        $i0 = lengthof $r2;

        $i1 = $i0 - i3;

        $r3 = newarray (java.lang.Class)[$i1];

        $i2 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i2);

        staticinvoke <org.springframework.util.Assert: void notEmpty(java.lang.Object[],java.lang.String)>($r3, "JDK proxy must implement one or more interfaces");

        return $r3;
    }

    public static boolean equalsInProxy(org.springframework.aop.framework.AdvisedSupport, org.springframework.aop.framework.AdvisedSupport)
    {
        org.springframework.aop.TargetSource $r2, $r3;
        org.springframework.aop.framework.AdvisedSupport r0, r1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.springframework.aop.framework.AdvisedSupport;

        r1 := @parameter1: org.springframework.aop.framework.AdvisedSupport;

        if r0 == r1 goto label2;

        $z0 = staticinvoke <org.springframework.aop.framework.AopProxyUtils: boolean equalsProxiedInterfaces(org.springframework.aop.framework.AdvisedSupport,org.springframework.aop.framework.AdvisedSupport)>(r0, r1);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.springframework.aop.framework.AopProxyUtils: boolean equalsAdvisors(org.springframework.aop.framework.AdvisedSupport,org.springframework.aop.framework.AdvisedSupport)>(r0, r1);

        if $z1 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        $r3 = virtualinvoke r1.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        $z2 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z2 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static boolean equalsProxiedInterfaces(org.springframework.aop.framework.AdvisedSupport, org.springframework.aop.framework.AdvisedSupport)
    {
        java.lang.Class[] $r1, $r3;
        org.springframework.aop.framework.AdvisedSupport r0, r2;
        boolean $z0;

        r0 := @parameter0: org.springframework.aop.framework.AdvisedSupport;

        r2 := @parameter1: org.springframework.aop.framework.AdvisedSupport;

        $r1 = virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: java.lang.Class[] getProxiedInterfaces()>();

        $r3 = virtualinvoke r2.<org.springframework.aop.framework.AdvisedSupport: java.lang.Class[] getProxiedInterfaces()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r1, $r3);

        return $z0;
    }

    public static boolean equalsAdvisors(org.springframework.aop.framework.AdvisedSupport, org.springframework.aop.framework.AdvisedSupport)
    {
        org.springframework.aop.framework.AdvisedSupport r0, r2;
        org.springframework.aop.Advisor[] $r1, $r3;
        boolean $z0;

        r0 := @parameter0: org.springframework.aop.framework.AdvisedSupport;

        r2 := @parameter1: org.springframework.aop.framework.AdvisedSupport;

        $r1 = virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.Advisor[] getAdvisors()>();

        $r3 = virtualinvoke r2.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.Advisor[] getAdvisors()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r1, $r3);

        return $z0;
    }
}
