public class org.apache.batik.bridge.BridgeContext$SoftReferenceMememto extends org.apache.batik.util.CleanerThread$SoftReferenceCleared
{
    java.lang.Object mememto;
    java.util.Set set;

    void <init>(java.lang.Object, java.lang.Object, java.util.Set)
    {
        org.apache.batik.bridge.BridgeContext$SoftReferenceMememto r0;
        java.util.Set r3;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.batik.bridge.BridgeContext$SoftReferenceMememto;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.util.Set;

        specialinvoke r0.<org.apache.batik.util.CleanerThread$SoftReferenceCleared: void <init>(java.lang.Object)>(r1);

        r0.<org.apache.batik.bridge.BridgeContext$SoftReferenceMememto: java.lang.Object mememto> = r2;

        r0.<org.apache.batik.bridge.BridgeContext$SoftReferenceMememto: java.util.Set set> = r3;

        return;
    }

    public void cleared()
    {
        java.lang.Throwable $r4;
        org.apache.batik.bridge.BridgeContext$SoftReferenceMememto r0;
        java.util.Set r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.bridge.BridgeContext$SoftReferenceMememto;

        r1 = r0.<org.apache.batik.bridge.BridgeContext$SoftReferenceMememto: java.util.Set set>;

        entermonitor r1;

     label1:
        $r3 = r0.<org.apache.batik.bridge.BridgeContext$SoftReferenceMememto: java.util.Set set>;

        $r2 = r0.<org.apache.batik.bridge.BridgeContext$SoftReferenceMememto: java.lang.Object mememto>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r2);

        r0.<org.apache.batik.bridge.BridgeContext$SoftReferenceMememto: java.lang.Object mememto> = null;

        r0.<org.apache.batik.bridge.BridgeContext$SoftReferenceMememto: java.util.Set set> = null;

        exitmonitor r1;

        goto label3;

     label2:
        $r4 := @caughtexception;

        exitmonitor r1;

        throw $r4;

     label3:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
    }
}
