public class org.apache.batik.util.ParsedURLJarProtocolHandler extends org.apache.batik.util.ParsedURLDefaultProtocolHandler
{
    public static final java.lang.String JAR;

    public void <init>()
    {
        org.apache.batik.util.ParsedURLJarProtocolHandler r0;

        r0 := @this: org.apache.batik.util.ParsedURLJarProtocolHandler;

        specialinvoke r0.<org.apache.batik.util.ParsedURLDefaultProtocolHandler: void <init>(java.lang.String)>("jar");

        return;
    }

    public org.apache.batik.util.ParsedURLData parseURL(org.apache.batik.util.ParsedURL, java.lang.String)
    {
        java.net.URL $r4, $r7;
        int $i0, $i1;
        org.apache.batik.util.ParsedURLJarProtocolHandler r8;
        java.lang.String r0, $r1, $r2, $r3, $r6;
        boolean $z0;
        java.net.MalformedURLException $r11;
        org.apache.batik.util.ParsedURLData $r9, $r10, $r12;
        org.apache.batik.util.ParsedURL r5;

        r8 := @this: org.apache.batik.util.ParsedURLJarProtocolHandler;

        r5 := @parameter0: org.apache.batik.util.ParsedURL;

        r0 := @parameter1: java.lang.String;

        $r1 = "jar";

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("jar:");

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke r8.<org.apache.batik.util.ParsedURLDefaultProtocolHandler: org.apache.batik.util.ParsedURLData parseURL(java.lang.String)>(r0);

        return $r10;

     label1:
        $r4 = new java.net.URL;

        $r6 = virtualinvoke r5.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();

        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r6);

        $r7 = new java.net.URL;

        specialinvoke $r7.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r4, r0);

        $r9 = virtualinvoke r8.<org.apache.batik.util.ParsedURLDefaultProtocolHandler: org.apache.batik.util.ParsedURLData constructParsedURLData(java.net.URL)>($r7);

        return $r9;

     label2:
        $r11 := @caughtexception;

        $r12 = specialinvoke r8.<org.apache.batik.util.ParsedURLDefaultProtocolHandler: org.apache.batik.util.ParsedURLData parseURL(org.apache.batik.util.ParsedURL,java.lang.String)>(r5, r0);

        return $r12;

        catch java.net.MalformedURLException from label1 to label2 with label2;
    }

    public static void <clinit>()
    {
        <org.apache.batik.util.ParsedURLJarProtocolHandler: java.lang.String JAR> = "jar";

        return;
    }
}
