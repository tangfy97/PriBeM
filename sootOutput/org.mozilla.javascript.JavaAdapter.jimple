public final class org.mozilla.javascript.JavaAdapter extends java.lang.Object implements org.mozilla.javascript.IdFunctionCall
{
    private static final java.lang.Object FTAG;
    private static final int Id_JavaAdapter;

    public void <init>()
    {
        org.mozilla.javascript.JavaAdapter r0;

        r0 := @this: org.mozilla.javascript.JavaAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void init(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, boolean)
    {
        org.mozilla.javascript.IdFunctionObject $r1;
        org.mozilla.javascript.Scriptable r2;
        org.mozilla.javascript.Context r4;
        java.lang.Object $r3;
        org.mozilla.javascript.JavaAdapter $r0;
        boolean z0;

        r4 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        z0 := @parameter2: boolean;

        $r0 = new org.mozilla.javascript.JavaAdapter;

        specialinvoke $r0.<org.mozilla.javascript.JavaAdapter: void <init>()>();

        $r1 = new org.mozilla.javascript.IdFunctionObject;

        $r3 = <org.mozilla.javascript.JavaAdapter: java.lang.Object FTAG>;

        specialinvoke $r1.<org.mozilla.javascript.IdFunctionObject: void <init>(org.mozilla.javascript.IdFunctionCall,java.lang.Object,int,java.lang.String,int,org.mozilla.javascript.Scriptable)>($r0, $r3, 1, "JavaAdapter", 1, r2);

        virtualinvoke $r1.<org.mozilla.javascript.IdFunctionObject: void markAsConstructor(org.mozilla.javascript.Scriptable)>(null);

        if z0 == 0 goto label1;

        virtualinvoke $r1.<org.mozilla.javascript.IdFunctionObject: void sealObject()>();

     label1:
        virtualinvoke $r1.<org.mozilla.javascript.IdFunctionObject: void exportAsScopeProperty()>();

        return;
    }

    public java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r5;
        org.mozilla.javascript.Context r3;
        java.lang.RuntimeException $r2;
        org.mozilla.javascript.JavaAdapter r7;
        org.mozilla.javascript.IdFunctionObject r0;
        org.mozilla.javascript.Scriptable r4, r8;
        int $i0;
        java.lang.Object $r1, $r6;
        boolean $z0;

        r7 := @this: org.mozilla.javascript.JavaAdapter;

        r0 := @parameter0: org.mozilla.javascript.IdFunctionObject;

        r3 := @parameter1: org.mozilla.javascript.Context;

        r4 := @parameter2: org.mozilla.javascript.Scriptable;

        r8 := @parameter3: org.mozilla.javascript.Scriptable;

        r5 := @parameter4: java.lang.Object[];

        $r1 = <org.mozilla.javascript.JavaAdapter: java.lang.Object FTAG>;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: boolean hasTag(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: int methodId()>();

        if $i0 != 1 goto label1;

        $r6 = staticinvoke <org.mozilla.javascript.JavaAdapter: java.lang.Object js_createAdpter(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r3, r4, r5);

        return $r6;

     label1:
        $r2 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: java.lang.RuntimeException 'unknown'()>();

        throw $r2;
    }

    public static java.lang.Object convertResult(java.lang.Object, java.lang.Class)
    {
        java.lang.Object r0, $r1, $r5;
        java.lang.Class r2, $r3, $r4;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        $r1 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r0 != $r1 goto label1;

        $r3 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        if r2 == $r3 goto label1;

        $r4 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r2 == $r4 goto label1;

        return null;

     label1:
        $r5 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>(r0, r2);

        return $r5;
    }

    public static org.mozilla.javascript.Scriptable createAdapterWrapper(org.mozilla.javascript.Scriptable, java.lang.Object)
    {
        org.mozilla.javascript.Scriptable r0, $r1;
        org.mozilla.javascript.NativeJavaObject $r2;
        java.lang.Object r3;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        r3 := @parameter1: java.lang.Object;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r0);

        $r2 = new org.mozilla.javascript.NativeJavaObject;

        specialinvoke $r2.<org.mozilla.javascript.NativeJavaObject: void <init>(org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class)>($r1, r3, null);

        virtualinvoke $r2.<org.mozilla.javascript.NativeJavaObject: void setPrototype(org.mozilla.javascript.Scriptable)>(r0);

        return $r2;
    }

    public static java.lang.Object getAdapterSelf(java.lang.Class, java.lang.Object) throws java.lang.NoSuchFieldException, java.lang.IllegalAccessException
    {
        java.lang.Class r0;
        java.lang.Object r2, $r3;
        java.lang.reflect.Field $r1;

        r0 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("self");

        $r3 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r2);

        return $r3;
    }

    static java.lang.Object js_createAdpter(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        org.mozilla.javascript.ContextFactory $r11;
        boolean $z0, $z1;
        java.lang.Exception $r25;
        org.mozilla.javascript.Scriptable r3, $r5;
        org.mozilla.javascript.EcmaError $r20, $r23, $r24;
        java.lang.Object[] r0, $r10;
        java.lang.reflect.Constructor $r12;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.String $r18, $r19, $r21, $r22;
        org.mozilla.javascript.Context r2;
        java.lang.Class[] r1, $r7, $r15;
        org.mozilla.javascript.NativeJavaClass $r16;
        java.lang.RuntimeException $r26;
        java.lang.Object $r4, $r13, $r14, r28;
        java.lang.Class $r6, $r8, $r9, $r17, r27;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object[];

        i0 = lengthof r0;

        if i0 != 0 goto label01;

        $r24 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError0(java.lang.String)>("msg.adapter.zero.args");

        throw $r24;

     label01:
        r27 = null;

        $i1 = i0 - 1;

        r1 = newarray (java.lang.Class)[$i1];

        i5 = 0;

        i6 = 0;

     label02:
        $i2 = i0 - 1;

        if i6 == $i2 goto label07;

        r28 = r0[i6];

        $z0 = r28 instanceof org.mozilla.javascript.NativeJavaClass;

        if $z0 != 0 goto label03;

        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i6);

        $r22 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r28);

        $r23 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError2(java.lang.String,java.lang.String,java.lang.String)>("msg.not.java.class.arg", $r21, $r22);

        throw $r23;

     label03:
        $r16 = (org.mozilla.javascript.NativeJavaClass) r28;

        $r17 = virtualinvoke $r16.<org.mozilla.javascript.NativeJavaClass: java.lang.Class getClassObject()>();

        $z1 = virtualinvoke $r17.<java.lang.Class: boolean isInterface()>();

        if $z1 != 0 goto label05;

        if r27 == null goto label04;

        $r18 = virtualinvoke r27.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r20 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError2(java.lang.String,java.lang.String,java.lang.String)>("msg.only.one.super", $r18, $r19);

        throw $r20;

     label04:
        r27 = $r17;

        goto label06;

     label05:
        $i4 = i5;

        i5 = i5 + 1;

        r1[$i4] = $r17;

     label06:
        i6 = i6 + 1;

        goto label02;

     label07:
        if r27 != null goto label08;

        r27 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

     label08:
        $r15 = newarray (java.lang.Class)[i5];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r15, 0, i5);

        $i3 = i0 - 1;

        $r4 = r0[$i3];

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object)>(r2, r3, $r4);

        $r6 = staticinvoke <org.mozilla.javascript.JavaAdapter: java.lang.Class getAdapterClass(org.mozilla.javascript.Scriptable,java.lang.Class,java.lang.Class[],org.mozilla.javascript.Scriptable)>(r3, r27, $r15, $r5);

        $r7 = newarray (java.lang.Class)[2];

        $r8 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ContextFactoryClass>;

        $r7[0] = $r8;

        $r9 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ScriptableClass>;

        $r7[1] = $r9;

        $r10 = newarray (java.lang.Object)[2];

        $r11 = virtualinvoke r2.<org.mozilla.javascript.Context: org.mozilla.javascript.ContextFactory getFactory()>();

        $r10[0] = $r11;

        $r10[1] = $r5;

     label09:
        $r12 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r7);

        $r13 = virtualinvoke $r12.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r10);

        $r14 = staticinvoke <org.mozilla.javascript.JavaAdapter: java.lang.Object getAdapterSelf(java.lang.Class,java.lang.Object)>($r6, $r13);

     label10:
        return $r14;

     label11:
        $r25 := @caughtexception;

        $r26 = staticinvoke <org.mozilla.javascript.Context: java.lang.RuntimeException throwAsScriptRuntimeEx(java.lang.Throwable)>($r25);

        throw $r26;

        catch java.lang.Exception from label09 to label10 with label11;
    }

    public static void writeAdapterObject(java.lang.Object, java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.lang.String[] r6;
        java.lang.NoSuchFieldException $r11;
        int $i0, $i1, i2;
        java.io.ObjectOutputStream r2;
        java.lang.String $r4, $r10;
        java.lang.IllegalAccessException $r13;
        java.lang.Class[] $r5;
        java.io.IOException $r12;
        java.lang.reflect.Field $r7;
        java.lang.Object r0, $r8;
        java.lang.Class $r1, $r3, $r9;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.io.ObjectOutputStream;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $i0 = lengthof $r5;

        r6 = newarray (java.lang.String)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof $r5;

        if i2 >= $i1 goto label2;

        $r9 = $r5[i2];

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        r6[i2] = $r10;

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r6);

     label3:
        $r7 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("delegee");

        $r8 = virtualinvoke $r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        virtualinvoke r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r8);

     label4:
        return;

     label5:
        $r13 := @caughtexception;

        goto label7;

     label6:
        $r11 := @caughtexception;

     label7:
        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>()>();

        throw $r12;

        catch java.lang.IllegalAccessException from label3 to label4 with label5;
        catch java.lang.NoSuchFieldException from label3 to label4 with label6;
    }

    public static java.lang.Object readAdapterObject(org.mozilla.javascript.Scriptable, java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.lang.Object[] $r13;
        java.lang.NoSuchMethodException $r20;
        java.io.ObjectInputStream r1;
        java.lang.String[] $r18;
        java.lang.reflect.Constructor $r14;
        int $i0, i1, $i2;
        java.lang.InstantiationException $r23;
        java.lang.String $r3, $r16;
        org.mozilla.javascript.ContextFactory r24;
        java.lang.IllegalAccessException $r22;
        org.mozilla.javascript.Context $r0;
        java.lang.Class[] $r9, $r19;
        java.lang.reflect.InvocationTargetException $r21;
        org.mozilla.javascript.Scriptable r7, r25;
        java.lang.Object $r2, $r5, $r6, $r15;
        java.lang.Class $r4, $r8, $r10, $r11, $r12, $r17;
        java.lang.ClassNotFoundException $r26;

        r7 := @parameter0: org.mozilla.javascript.Scriptable;

        r1 := @parameter1: java.io.ObjectInputStream;

        $r0 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getCurrentContext()>();

        if $r0 == null goto label01;

        r24 = virtualinvoke $r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ContextFactory getFactory()>();

        goto label02;

     label01:
        r24 = null;

     label02:
        $r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (java.lang.String) $r2;

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3);

        $r5 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r18 = (java.lang.String[]) $r5;

        $i0 = lengthof $r18;

        $r19 = newarray (java.lang.Class)[$i0];

        i1 = 0;

     label03:
        $i2 = lengthof $r18;

        if i1 >= $i2 goto label04;

        $r16 = $r18[i1];

        $r17 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r16);

        $r19[i1] = $r17;

        i1 = i1 + 1;

        goto label03;

     label04:
        $r6 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r25 = (org.mozilla.javascript.Scriptable) $r6;

        $r8 = staticinvoke <org.mozilla.javascript.JavaAdapter: java.lang.Class getAdapterClass(org.mozilla.javascript.Scriptable,java.lang.Class,java.lang.Class[],org.mozilla.javascript.Scriptable)>(r7, $r4, $r19, r25);

        $r9 = newarray (java.lang.Class)[3];

        $r10 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ContextFactoryClass>;

        $r9[0] = $r10;

        $r11 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ScriptableClass>;

        $r9[1] = $r11;

        $r12 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ScriptableClass>;

        $r9[2] = $r12;

        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = r24;

        $r13[1] = r25;

        $r13[2] = r7;

     label05:
        $r14 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r9);

        $r15 = virtualinvoke $r14.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r13);

     label06:
        return $r15;

     label07:
        $r23 := @caughtexception;

        goto label11;

     label08:
        $r22 := @caughtexception;

        goto label11;

     label09:
        $r21 := @caughtexception;

        goto label11;

     label10:
        $r20 := @caughtexception;

     label11:
        $r26 = new java.lang.ClassNotFoundException;

        specialinvoke $r26.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>("adapter");

        throw $r26;

        catch java.lang.InstantiationException from label05 to label06 with label07;
        catch java.lang.IllegalAccessException from label05 to label06 with label08;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label09;
        catch java.lang.NoSuchMethodException from label05 to label06 with label10;
    }

    private static org.mozilla.javascript.ObjToIntMap getObjectFunctionNames(org.mozilla.javascript.Scriptable)
    {
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, i3, i4;
        org.mozilla.javascript.Function r7;
        java.lang.String r5;
        boolean $z0, $z1;
        org.mozilla.javascript.Scriptable r0;
        java.lang.Object $r3, $r4, $r6, $r8;
        org.mozilla.javascript.ObjToIntMap $r2;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object[] getPropertyIds(org.mozilla.javascript.Scriptable)>(r0);

        $r2 = new org.mozilla.javascript.ObjToIntMap;

        $i0 = lengthof $r1;

        specialinvoke $r2.<org.mozilla.javascript.ObjToIntMap: void <init>(int)>($i0);

        i3 = 0;

     label1:
        $i1 = lengthof $r1;

        if i3 == $i1 goto label5;

        $r3 = $r1[i3];

        $z0 = $r3 instanceof java.lang.String;

        if $z0 != 0 goto label2;

        goto label4;

     label2:
        $r4 = $r1[i3];

        r5 = (java.lang.String) $r4;

        $r6 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r0, r5);

        $z1 = $r6 instanceof org.mozilla.javascript.Function;

        if $z1 == 0 goto label4;

        r7 = (org.mozilla.javascript.Function) $r6;

        $r8 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r7, "length");

        $i2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: int toInt32(java.lang.Object)>($r8);

        i4 = $i2;

        if $i2 >= 0 goto label3;

        i4 = 0;

     label3:
        virtualinvoke $r2.<org.mozilla.javascript.ObjToIntMap: void put(java.lang.Object,int)>(r5, i4);

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return $r2;
    }

    private static java.lang.Class getAdapterClass(org.mozilla.javascript.Scriptable, java.lang.Class, java.lang.Class[], org.mozilla.javascript.Scriptable)
    {
        byte[] $r13;
        java.lang.StringBuffer $r9, $r10, $r11;
        org.mozilla.javascript.ClassCache $r1;
        int $i0;
        java.lang.String $r12;
        java.util.Hashtable r2;
        boolean $z0;
        java.lang.Class[] r7;
        org.mozilla.javascript.JavaAdapter$JavaAdapterSignature $r5;
        org.mozilla.javascript.Scriptable r0, r3;
        java.lang.Class r6, $r14, r15;
        java.lang.Object $r8;
        org.mozilla.javascript.ObjToIntMap $r4;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        r6 := @parameter1: java.lang.Class;

        r7 := @parameter2: java.lang.Class[];

        r3 := @parameter3: org.mozilla.javascript.Scriptable;

        $r1 = staticinvoke <org.mozilla.javascript.ClassCache: org.mozilla.javascript.ClassCache get(org.mozilla.javascript.Scriptable)>(r0);

        r2 = $r1.<org.mozilla.javascript.ClassCache: java.util.Hashtable javaAdapterGeneratedClasses>;

        $r4 = staticinvoke <org.mozilla.javascript.JavaAdapter: org.mozilla.javascript.ObjToIntMap getObjectFunctionNames(org.mozilla.javascript.Scriptable)>(r3);

        $r5 = new org.mozilla.javascript.JavaAdapter$JavaAdapterSignature;

        specialinvoke $r5.<org.mozilla.javascript.JavaAdapter$JavaAdapterSignature: void <init>(java.lang.Class,java.lang.Class[],org.mozilla.javascript.ObjToIntMap)>(r6, r7, $r4);

        $r8 = virtualinvoke r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r5);

        r15 = (java.lang.Class) $r8;

        if r15 != null goto label1;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("adapter");

        $i0 = virtualinvoke $r1.<org.mozilla.javascript.ClassCache: int newClassSerialNumber()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = staticinvoke <org.mozilla.javascript.JavaAdapter: byte[] createAdapterCode(org.mozilla.javascript.ObjToIntMap,java.lang.String,java.lang.Class,java.lang.Class[],java.lang.String)>($r4, $r12, r6, r7, null);

        $r14 = staticinvoke <org.mozilla.javascript.JavaAdapter: java.lang.Class loadAdapterClass(java.lang.String,byte[])>($r12, $r13);

        r15 = $r14;

        $z0 = virtualinvoke $r1.<org.mozilla.javascript.ClassCache: boolean isCachingEnabled()>();

        if $z0 == 0 goto label1;

        virtualinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r14);

     label1:
        return r15;
    }

    public static byte[] createAdapterCode(org.mozilla.javascript.ObjToIntMap, java.lang.String, java.lang.Class, java.lang.Class[], java.lang.String)
    {
        byte[] $r13;
        java.lang.StringBuffer $r20, $r21, $r22, $r31, $r32, $r33;
        java.lang.String r1, $r3, $r5, $r6, r7, $r17, $r19, $r23, $r28, $r30, $r34, $r38, r42;
        java.lang.Class[] r4, $r18, $r29, r43;
        org.mozilla.javascript.ObjToIntMap $r8, $r9, r12;
        java.lang.NoSuchMethodException $r39;
        java.lang.reflect.Method[] $r10, $r27;
        java.lang.reflect.Method r40, r41;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.mozilla.classfile.ClassFileWriter $r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11;
        org.mozilla.javascript.ObjToIntMap$Iterator $r11;
        java.lang.Class r2, $r15, $r16, $r24, $r25, $r26, $r35, $r36, $r37;
        java.lang.Object $r14;

        r12 := @parameter0: org.mozilla.javascript.ObjToIntMap;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Class;

        r4 := @parameter3: java.lang.Class[];

        r7 := @parameter4: java.lang.String;

        $r0 = new org.mozilla.classfile.ClassFileWriter;

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<org.mozilla.classfile.ClassFileWriter: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r1, $r3, "<adapter>");

        virtualinvoke $r0.<org.mozilla.classfile.ClassFileWriter: void addField(java.lang.String,java.lang.String,short)>("factory", "Lorg/mozilla/javascript/ContextFactory;", 17);

        virtualinvoke $r0.<org.mozilla.classfile.ClassFileWriter: void addField(java.lang.String,java.lang.String,short)>("delegee", "Lorg/mozilla/javascript/Scriptable;", 17);

        virtualinvoke $r0.<org.mozilla.classfile.ClassFileWriter: void addField(java.lang.String,java.lang.String,short)>("self", "Lorg/mozilla/javascript/Scriptable;", 17);

        if r4 != null goto label01;

        $i6 = 0;

        goto label02;

     label01:
        $i6 = lengthof r4;

     label02:
        i0 = $i6;

        i7 = 0;

     label03:
        if i7 >= i0 goto label05;

        $r36 = r4[i7];

        if $r36 == null goto label04;

        $r37 = r4[i7];

        $r38 = virtualinvoke $r37.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<org.mozilla.classfile.ClassFileWriter: void addInterface(java.lang.String)>($r38);

     label04:
        i7 = i7 + 1;

        goto label03;

     label05:
        $r5 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        staticinvoke <org.mozilla.javascript.JavaAdapter: void generateCtor(org.mozilla.classfile.ClassFileWriter,java.lang.String,java.lang.String)>($r0, r1, $r6);

        staticinvoke <org.mozilla.javascript.JavaAdapter: void generateSerialCtor(org.mozilla.classfile.ClassFileWriter,java.lang.String,java.lang.String)>($r0, r1, $r6);

        if r7 == null goto label06;

        staticinvoke <org.mozilla.javascript.JavaAdapter: void generateEmptyCtor(org.mozilla.classfile.ClassFileWriter,java.lang.String,java.lang.String,java.lang.String)>($r0, r1, $r6, r7);

     label06:
        $r8 = new org.mozilla.javascript.ObjToIntMap;

        specialinvoke $r8.<org.mozilla.javascript.ObjToIntMap: void <init>()>();

        $r9 = new org.mozilla.javascript.ObjToIntMap;

        specialinvoke $r9.<org.mozilla.javascript.ObjToIntMap: void <init>()>();

        i8 = 0;

     label07:
        if i8 >= i0 goto label16;

        $r26 = r4[i8];

        $r27 = virtualinvoke $r26.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i9 = 0;

     label08:
        $i4 = lengthof $r27;

        if i9 >= $i4 goto label15;

        r40 = $r27[i9];

        $i5 = virtualinvoke r40.<java.lang.reflect.Method: int getModifiers()>();

        $z7 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i5);

        if $z7 != 0 goto label14;

        $z8 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i5);

        if $z8 == 0 goto label09;

        goto label14;

     label09:
        $r28 = virtualinvoke r40.<java.lang.reflect.Method: java.lang.String getName()>();

        $r29 = virtualinvoke r40.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $z9 = virtualinvoke r12.<org.mozilla.javascript.ObjToIntMap: boolean has(java.lang.Object)>($r28);

        if $z9 != 0 goto label13;

     label10:
        virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r28, $r29);

     label11:
        goto label14;

     label12:
        $r39 := @caughtexception;

     label13:
        $r30 = staticinvoke <org.mozilla.javascript.JavaAdapter: java.lang.String getMethodSignature(java.lang.reflect.Method,java.lang.Class[])>(r40, $r29);

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        $z10 = virtualinvoke $r8.<org.mozilla.javascript.ObjToIntMap: boolean has(java.lang.Object)>($r34);

        if $z10 != 0 goto label14;

        $r35 = virtualinvoke r40.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        staticinvoke <org.mozilla.javascript.JavaAdapter: void generateMethod(org.mozilla.classfile.ClassFileWriter,java.lang.String,java.lang.String,java.lang.Class[],java.lang.Class)>($r0, r1, $r28, $r29, $r35);

        virtualinvoke $r8.<org.mozilla.javascript.ObjToIntMap: void put(java.lang.Object,int)>($r34, 0);

        virtualinvoke $r9.<org.mozilla.javascript.ObjToIntMap: void put(java.lang.Object,int)>($r28, 0);

     label14:
        i9 = i9 + 1;

        goto label08;

     label15:
        i8 = i8 + 1;

        goto label07;

     label16:
        $r10 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i10 = 0;

     label17:
        $i1 = lengthof $r10;

        if i10 >= $i1 goto label22;

        r41 = $r10[i10];

        $i3 = virtualinvoke r41.<java.lang.reflect.Method: int getModifiers()>();

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i3);

        if $z2 != 0 goto label21;

        $z3 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i3);

        if $z3 == 0 goto label18;

        goto label21;

     label18:
        $z4 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i3);

        $r17 = virtualinvoke r41.<java.lang.reflect.Method: java.lang.String getName()>();

        if $z4 != 0 goto label19;

        $z6 = virtualinvoke r12.<org.mozilla.javascript.ObjToIntMap: boolean has(java.lang.Object)>($r17);

        if $z6 == 0 goto label21;

     label19:
        $r18 = virtualinvoke r41.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r19 = staticinvoke <org.mozilla.javascript.JavaAdapter: java.lang.String getMethodSignature(java.lang.reflect.Method,java.lang.Class[])>(r41, $r18);

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        $z5 = virtualinvoke $r8.<org.mozilla.javascript.ObjToIntMap: boolean has(java.lang.Object)>($r23);

        if $z5 != 0 goto label20;

        $r25 = virtualinvoke r41.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        staticinvoke <org.mozilla.javascript.JavaAdapter: void generateMethod(org.mozilla.classfile.ClassFileWriter,java.lang.String,java.lang.String,java.lang.Class[],java.lang.Class)>($r0, r1, $r17, $r18, $r25);

        virtualinvoke $r8.<org.mozilla.javascript.ObjToIntMap: void put(java.lang.Object,int)>($r23, 0);

        virtualinvoke $r9.<org.mozilla.javascript.ObjToIntMap: void put(java.lang.Object,int)>($r17, 0);

     label20:
        if $z4 != 0 goto label21;

        $r24 = virtualinvoke r41.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        staticinvoke <org.mozilla.javascript.JavaAdapter: void generateSuper(org.mozilla.classfile.ClassFileWriter,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Class[],java.lang.Class)>($r0, r1, $r6, $r17, $r19, $r18, $r24);

     label21:
        i10 = i10 + 1;

        goto label17;

     label22:
        $r11 = new org.mozilla.javascript.ObjToIntMap$Iterator;

        specialinvoke $r11.<org.mozilla.javascript.ObjToIntMap$Iterator: void <init>(org.mozilla.javascript.ObjToIntMap)>(r12);

        virtualinvoke $r11.<org.mozilla.javascript.ObjToIntMap$Iterator: void start()>();

     label23:
        $z0 = virtualinvoke $r11.<org.mozilla.javascript.ObjToIntMap$Iterator: boolean done()>();

        if $z0 != 0 goto label28;

        $r14 = virtualinvoke $r11.<org.mozilla.javascript.ObjToIntMap$Iterator: java.lang.Object getKey()>();

        r42 = (java.lang.String) $r14;

        $z1 = virtualinvoke $r9.<org.mozilla.javascript.ObjToIntMap: boolean has(java.lang.Object)>(r42);

        if $z1 == 0 goto label24;

        goto label27;

     label24:
        $i2 = virtualinvoke $r11.<org.mozilla.javascript.ObjToIntMap$Iterator: int getValue()>();

        r43 = newarray (java.lang.Class)[$i2];

        i11 = 0;

     label25:
        if i11 >= $i2 goto label26;

        $r16 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        r43[i11] = $r16;

        i11 = i11 + 1;

        goto label25;

     label26:
        $r15 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        staticinvoke <org.mozilla.javascript.JavaAdapter: void generateMethod(org.mozilla.classfile.ClassFileWriter,java.lang.String,java.lang.String,java.lang.Class[],java.lang.Class)>($r0, r1, r42, r43, $r15);

     label27:
        virtualinvoke $r11.<org.mozilla.javascript.ObjToIntMap$Iterator: void next()>();

        goto label23;

     label28:
        $r13 = virtualinvoke $r0.<org.mozilla.classfile.ClassFileWriter: byte[] toByteArray()>();

        return $r13;

        catch java.lang.NoSuchMethodException from label10 to label11 with label12;
    }

    static java.lang.Class loadAdapterClass(java.lang.String, byte[])
    {
        byte[] r2;
        org.mozilla.javascript.GeneratedClassLoader $r0;
        java.lang.Class $r3;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $r0 = staticinvoke <org.mozilla.javascript.SecurityController: org.mozilla.javascript.GeneratedClassLoader createLoader(java.lang.ClassLoader,java.lang.Object)>(null, null);

        $r3 = interfaceinvoke $r0.<org.mozilla.javascript.GeneratedClassLoader: java.lang.Class defineClass(java.lang.String,byte[])>(r1, r2);

        interfaceinvoke $r0.<org.mozilla.javascript.GeneratedClassLoader: void linkClass(java.lang.Class)>($r3);

        return $r3;
    }

    public static org.mozilla.javascript.Function getFunction(org.mozilla.javascript.Scriptable, java.lang.String)
    {
        org.mozilla.javascript.Scriptable r0;
        java.lang.Object $r2, $r3;
        org.mozilla.javascript.Function $r4;
        java.lang.String r1;
        java.lang.RuntimeException $r5;
        boolean $z0;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r0, r1);

        $r3 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r2 != $r3 goto label1;

        return null;

     label1:
        $z0 = $r2 instanceof org.mozilla.javascript.Function;

        if $z0 != 0 goto label2;

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFunctionError(java.lang.Object,java.lang.Object)>($r2, r1);

        throw $r5;

     label2:
        $r4 = (org.mozilla.javascript.Function) $r2;

        return $r4;
    }

    public static java.lang.Object callMethod(org.mozilla.javascript.ContextFactory, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Function, java.lang.Object[], long)
    {
        java.lang.Object[] r5;
        org.mozilla.javascript.Context $r2;
        long l0;
        org.mozilla.javascript.Scriptable $r1, r4;
        byte $b1;
        org.mozilla.javascript.JavaAdapter$1 $r3;
        org.mozilla.javascript.Function r0;
        java.lang.Object $r6, $r7, $r8, $r9;
        org.mozilla.javascript.ContextFactory r10;

        r10 := @parameter0: org.mozilla.javascript.ContextFactory;

        r4 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: org.mozilla.javascript.Function;

        r5 := @parameter3: java.lang.Object[];

        l0 := @parameter4: long;

        if r0 != null goto label1;

        $r9 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        return $r9;

     label1:
        if r10 != null goto label2;

        r10 = staticinvoke <org.mozilla.javascript.ContextFactory: org.mozilla.javascript.ContextFactory getGlobal()>();

     label2:
        $r1 = interfaceinvoke r0.<org.mozilla.javascript.Function: org.mozilla.javascript.Scriptable getParentScope()>();

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label3;

        $r8 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object call(org.mozilla.javascript.ContextFactory,org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r10, r0, $r1, r4, r5);

        return $r8;

     label3:
        $r2 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getCurrentContext()>();

        if $r2 == null goto label4;

        $r7 = staticinvoke <org.mozilla.javascript.JavaAdapter: java.lang.Object doCall(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Function,java.lang.Object[],long)>($r2, $r1, r4, r0, r5, l0);

        return $r7;

     label4:
        $r3 = new org.mozilla.javascript.JavaAdapter$1;

        specialinvoke $r3.<org.mozilla.javascript.JavaAdapter$1: void <init>(org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Function,java.lang.Object[],long)>($r1, r4, r0, r5, l0);

        $r6 = virtualinvoke r10.<org.mozilla.javascript.ContextFactory: java.lang.Object call(org.mozilla.javascript.ContextAction)>($r3);

        return $r6;
    }

    private static java.lang.Object doCall(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Function, java.lang.Object[], long)
    {
        java.lang.Object[] r0;
        long l1, $l3, $l4;
        byte $b5;
        int $i0, $i2, i6;
        org.mozilla.javascript.Function r1;
        boolean $z0;
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.WrapFactory $r7;
        org.mozilla.javascript.Scriptable r3, r4;
        java.lang.Object $r5, r6, $r8;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        r4 := @parameter2: org.mozilla.javascript.Scriptable;

        r1 := @parameter3: org.mozilla.javascript.Function;

        r0 := @parameter4: java.lang.Object[];

        l1 := @parameter5: long;

        i6 = 0;

     label1:
        $i0 = lengthof r0;

        if i6 == $i0 goto label3;

        $i2 = 1 << i6;

        $l3 = (long) $i2;

        $l4 = l1 & $l3;

        $b5 = 0L cmp $l4;

        if $b5 == 0 goto label2;

        r6 = r0[i6];

        $z0 = r6 instanceof org.mozilla.javascript.Scriptable;

        if $z0 != 0 goto label2;

        $r7 = virtualinvoke r2.<org.mozilla.javascript.Context: org.mozilla.javascript.WrapFactory getWrapFactory()>();

        $r8 = virtualinvoke $r7.<org.mozilla.javascript.WrapFactory: java.lang.Object wrap(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class)>(r2, r3, r6, null);

        r0[i6] = $r8;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        $r5 = interfaceinvoke r1.<org.mozilla.javascript.Function: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r2, r3, r4, r0);

        return $r5;
    }

    public static org.mozilla.javascript.Scriptable runScript(org.mozilla.javascript.Script)
    {
        org.mozilla.javascript.Scriptable $r3;
        org.mozilla.javascript.JavaAdapter$2 $r0;
        org.mozilla.javascript.Script r1;
        java.lang.Object $r2;

        r1 := @parameter0: org.mozilla.javascript.Script;

        $r0 = new org.mozilla.javascript.JavaAdapter$2;

        specialinvoke $r0.<org.mozilla.javascript.JavaAdapter$2: void <init>(org.mozilla.javascript.Script)>(r1);

        $r2 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object call(org.mozilla.javascript.ContextAction)>($r0);

        $r3 = (org.mozilla.javascript.Scriptable) $r2;

        return $r3;
    }

    private static void generateCtor(org.mozilla.classfile.ClassFileWriter, java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        org.mozilla.classfile.ClassFileWriter r0;

        r0 := @parameter0: org.mozilla.classfile.ClassFileWriter;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void startMethod(java.lang.String,java.lang.String,short)>("<init>", "(Lorg/mozilla/javascript/ContextFactory;Lorg/mozilla/javascript/Scriptable;)V", 1);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(183, r1, "<init>", "()V");

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(43);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String,java.lang.String,java.lang.String)>(181, r2, "factory", "Lorg/mozilla/javascript/ContextFactory;");

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(44);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String,java.lang.String,java.lang.String)>(181, r2, "delegee", "Lorg/mozilla/javascript/Scriptable;");

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(44);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(184, "org/mozilla/javascript/JavaAdapter", "createAdapterWrapper", "(Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)Lorg/mozilla/javascript/Scriptable;");

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String,java.lang.String,java.lang.String)>(181, r2, "self", "Lorg/mozilla/javascript/Scriptable;");

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(177);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void stopMethod(short)>(3);

        return;
    }

    private static void generateSerialCtor(org.mozilla.classfile.ClassFileWriter, java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        org.mozilla.classfile.ClassFileWriter r0;

        r0 := @parameter0: org.mozilla.classfile.ClassFileWriter;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void startMethod(java.lang.String,java.lang.String,short)>("<init>", "(Lorg/mozilla/javascript/ContextFactory;Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;)V", 1);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(183, r1, "<init>", "()V");

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(43);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String,java.lang.String,java.lang.String)>(181, r2, "factory", "Lorg/mozilla/javascript/ContextFactory;");

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(44);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String,java.lang.String,java.lang.String)>(181, r2, "delegee", "Lorg/mozilla/javascript/Scriptable;");

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(45);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String,java.lang.String,java.lang.String)>(181, r2, "self", "Lorg/mozilla/javascript/Scriptable;");

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(177);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void stopMethod(short)>(4);

        return;
    }

    private static void generateEmptyCtor(org.mozilla.classfile.ClassFileWriter, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2, r3;
        org.mozilla.classfile.ClassFileWriter r0;

        r0 := @parameter0: org.mozilla.classfile.ClassFileWriter;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void startMethod(java.lang.String,java.lang.String,short)>("<init>", "()V", 1);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(183, r1, "<init>", "()V");

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(1);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String,java.lang.String,java.lang.String)>(181, r2, "factory", "Lorg/mozilla/javascript/ContextFactory;");

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String)>(187, r3);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(89);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(183, r3, "<init>", "()V");

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(184, "org/mozilla/javascript/JavaAdapter", "runScript", "(Lorg/mozilla/javascript/Script;)Lorg/mozilla/javascript/Scriptable;");

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(76);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(43);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String,java.lang.String,java.lang.String)>(181, r2, "delegee", "Lorg/mozilla/javascript/Scriptable;");

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(43);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(184, "org/mozilla/javascript/JavaAdapter", "createAdapterWrapper", "(Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)Lorg/mozilla/javascript/Scriptable;");

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String,java.lang.String,java.lang.String)>(181, r2, "self", "Lorg/mozilla/javascript/Scriptable;");

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(177);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void stopMethod(short)>(2);

        return;
    }

    static void generatePushWrappedArgs(org.mozilla.classfile.ClassFileWriter, java.lang.Class[], int)
    {
        java.lang.Class[] r1;
        org.mozilla.classfile.ClassFileWriter r0;
        int i0, $i1, $i2, i3, i4;
        java.lang.Class $r2;

        r0 := @parameter0: org.mozilla.classfile.ClassFileWriter;

        r1 := @parameter1: java.lang.Class[];

        i0 := @parameter2: int;

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void addPush(int)>(i0);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String)>(189, "java/lang/Object");

        i3 = 1;

        i4 = 0;

     label1:
        $i1 = lengthof r1;

        if i4 == $i1 goto label2;

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(89);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void addPush(int)>(i4);

        $r2 = r1[i4];

        $i2 = staticinvoke <org.mozilla.javascript.JavaAdapter: int generateWrapArg(org.mozilla.classfile.ClassFileWriter,int,java.lang.Class)>(r0, i3, $r2);

        i3 = i3 + $i2;

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(83);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    private static int generateWrapArg(org.mozilla.classfile.ClassFileWriter, int, java.lang.Class)
    {
        char $c0;
        org.mozilla.classfile.ClassFileWriter r3;
        byte b2;
        int i1, $i3;
        java.lang.Class r0, $r1, $r2;
        java.lang.String $r4;
        boolean $z0;

        r3 := @parameter0: org.mozilla.classfile.ClassFileWriter;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.Class;

        b2 = 1;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z0 != 0 goto label1;

        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void add(int,int)>(25, i1);

        goto label9;

     label1:
        $r1 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r1 goto label2;

        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String)>(187, "java/lang/Boolean");

        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void add(int)>(89);

        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void add(int,int)>(21, i1);

        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(183, "java/lang/Boolean", "<init>", "(Z)V");

        goto label9;

     label2:
        $r2 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 != $r2 goto label3;

        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void add(int,int)>(21, i1);

        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(184, "java/lang/String", "valueOf", "(C)Ljava/lang/String;");

        goto label9;

     label3:
        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String)>(187, "java/lang/Double");

        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void add(int)>(89);

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $c0 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0);

        $i3 = (int) $c0;

        tableswitch($i3)
        {
            case 98: goto label4;
            case 99: goto label8;
            case 100: goto label7;
            case 101: goto label8;
            case 102: goto label6;
            case 103: goto label8;
            case 104: goto label8;
            case 105: goto label4;
            case 106: goto label8;
            case 107: goto label8;
            case 108: goto label5;
            case 109: goto label8;
            case 110: goto label8;
            case 111: goto label8;
            case 112: goto label8;
            case 113: goto label8;
            case 114: goto label8;
            case 115: goto label4;
            default: goto label8;
        };

     label4:
        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void add(int,int)>(21, i1);

        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void add(int)>(135);

        goto label8;

     label5:
        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void add(int,int)>(22, i1);

        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void add(int)>(138);

        b2 = 2;

        goto label8;

     label6:
        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void add(int,int)>(23, i1);

        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void add(int)>(141);

        goto label8;

     label7:
        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void add(int,int)>(24, i1);

        b2 = 2;

     label8:
        virtualinvoke r3.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(183, "java/lang/Double", "<init>", "(D)V");

     label9:
        return b2;
    }

    static void generateReturnResult(org.mozilla.classfile.ClassFileWriter, java.lang.Class, boolean)
    {
        java.lang.StringBuffer $r9, $r11, $r13;
        int $i1;
        java.lang.String $r4, $r6, $r10, $r12;
        boolean $z0, z1;
        char $c0;
        java.lang.RuntimeException $r14;
        org.mozilla.classfile.ClassFileWriter r5;
        java.lang.Class r0, $r1, $r2, $r3;

        r5 := @parameter0: org.mozilla.classfile.ClassFileWriter;

        r0 := @parameter1: java.lang.Class;

        z1 := @parameter2: boolean;

        $r1 = <java.lang.Void: java.lang.Class TYPE>;

        if r0 != $r1 goto label01;

        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void add(int)>(87);

        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void add(int)>(177);

        goto label11;

     label01:
        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r2 goto label02;

        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(184, "org/mozilla/javascript/Context", "toBoolean", "(Ljava/lang/Object;)Z");

        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void add(int)>(172);

        goto label11;

     label02:
        $r3 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 != $r3 goto label03;

        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(184, "org/mozilla/javascript/Context", "toString", "(Ljava/lang/Object;)Ljava/lang/String;");

        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void add(int)>(3);

        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(182, "java/lang/String", "charAt", "(I)C");

        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void add(int)>(172);

        goto label11;

     label03:
        $z0 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label09;

        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(184, "org/mozilla/javascript/Context", "toNumber", "(Ljava/lang/Object;)D");

        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $c0 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(0);

        $i1 = (int) $c0;

        tableswitch($i1)
        {
            case 98: goto label04;
            case 99: goto label08;
            case 100: goto label07;
            case 101: goto label08;
            case 102: goto label06;
            case 103: goto label08;
            case 104: goto label08;
            case 105: goto label04;
            case 106: goto label08;
            case 107: goto label08;
            case 108: goto label05;
            case 109: goto label08;
            case 110: goto label08;
            case 111: goto label08;
            case 112: goto label08;
            case 113: goto label08;
            case 114: goto label08;
            case 115: goto label04;
            default: goto label08;
        };

     label04:
        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void add(int)>(142);

        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void add(int)>(172);

        goto label11;

     label05:
        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void add(int)>(143);

        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void add(int)>(173);

        goto label11;

     label06:
        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void add(int)>(144);

        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void add(int)>(174);

        goto label11;

     label07:
        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void add(int)>(175);

        goto label11;

     label08:
        $r14 = new java.lang.RuntimeException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected return type ");

        $r10 = virtualinvoke r0.<java.lang.Class: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r14;

     label09:
        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        if z1 == 0 goto label10;

        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void addLoadConstant(java.lang.String)>($r4);

        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(184, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;");

        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(184, "org/mozilla/javascript/JavaAdapter", "convertResult", "(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;");

     label10:
        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String)>(192, $r4);

        virtualinvoke r5.<org.mozilla.classfile.ClassFileWriter: void add(int)>(176);

     label11:
        return;
    }

    private static void generateMethod(org.mozilla.classfile.ClassFileWriter, java.lang.String, java.lang.String, java.lang.Class[], java.lang.Class)
    {
        long $l6, l7;
        short $s4;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, $i3, $i5, i8;
        java.lang.String $r3, r5, r6;
        boolean $z0;
        org.mozilla.javascript.EvaluatorException $r8;
        java.lang.Class[] r1;
        org.mozilla.classfile.ClassFileWriter r4;
        java.lang.Class r2, $r7;

        r4 := @parameter0: org.mozilla.classfile.ClassFileWriter;

        r6 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.Class[];

        r2 := @parameter4: java.lang.Class;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i0 = staticinvoke <org.mozilla.javascript.JavaAdapter: int appendMethodSignature(java.lang.Class[],java.lang.Class,java.lang.StringBuffer)>(r1, r2, $r0);

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r4.<org.mozilla.classfile.ClassFileWriter: void startMethod(java.lang.String,java.lang.String,short)>(r5, $r3, 1);

        virtualinvoke r4.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r4.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String,java.lang.String,java.lang.String)>(180, r6, "factory", "Lorg/mozilla/javascript/ContextFactory;");

        virtualinvoke r4.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r4.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String,java.lang.String,java.lang.String)>(180, r6, "self", "Lorg/mozilla/javascript/Scriptable;");

        virtualinvoke r4.<org.mozilla.classfile.ClassFileWriter: void add(int)>(42);

        virtualinvoke r4.<org.mozilla.classfile.ClassFileWriter: void add(int,java.lang.String,java.lang.String,java.lang.String)>(180, r6, "delegee", "Lorg/mozilla/javascript/Scriptable;");

        virtualinvoke r4.<org.mozilla.classfile.ClassFileWriter: void addPush(java.lang.String)>(r5);

        virtualinvoke r4.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(184, "org/mozilla/javascript/JavaAdapter", "getFunction", "(Lorg/mozilla/javascript/Scriptable;Ljava/lang/String;)Lorg/mozilla/javascript/Function;");

        $i1 = lengthof r1;

        staticinvoke <org.mozilla.javascript.JavaAdapter: void generatePushWrappedArgs(org.mozilla.classfile.ClassFileWriter,java.lang.Class[],int)>(r4, r1, $i1);

        $i2 = lengthof r1;

        if $i2 <= 64 goto label1;

        $r8 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("JavaAdapter can not subclass methods with more then 64 arguments.");

        throw $r8;

     label1:
        l7 = 0L;

        i8 = 0;

     label2:
        $i3 = lengthof r1;

        if i8 == $i3 goto label4;

        $r7 = r1[i8];

        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isPrimitive()>();

        if $z0 != 0 goto label3;

        $i5 = 1 << i8;

        $l6 = (long) $i5;

        l7 = l7 | $l6;

     label3:
        i8 = i8 + 1;

        goto label2;

     label4:
        virtualinvoke r4.<org.mozilla.classfile.ClassFileWriter: void addPush(long)>(l7);

        virtualinvoke r4.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(184, "org/mozilla/javascript/JavaAdapter", "callMethod", "(Lorg/mozilla/javascript/ContextFactory;Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Function;[Ljava/lang/Object;J)Ljava/lang/Object;");

        staticinvoke <org.mozilla.javascript.JavaAdapter: void generateReturnResult(org.mozilla.classfile.ClassFileWriter,java.lang.Class,boolean)>(r4, r2, 1);

        $s4 = (short) $i0;

        virtualinvoke r4.<org.mozilla.classfile.ClassFileWriter: void stopMethod(short)>($s4);

        return;
    }

    private static int generatePushParam(org.mozilla.classfile.ClassFileWriter, int, java.lang.Class)
    {
        char $c0;
        java.lang.RuntimeException $r3;
        org.mozilla.classfile.ClassFileWriter r2;
        int i1, $i2;
        java.lang.Class r0;
        java.lang.String $r1;
        boolean $z0;

        r2 := @parameter0: org.mozilla.classfile.ClassFileWriter;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z0 != 0 goto label1;

        virtualinvoke r2.<org.mozilla.classfile.ClassFileWriter: void addALoad(int)>(i1);

        return 1;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i2 = (int) $c0;

        tableswitch($i2)
        {
            case 98: goto label2;
            case 99: goto label2;
            case 100: goto label5;
            case 101: goto label6;
            case 102: goto label4;
            case 103: goto label6;
            case 104: goto label6;
            case 105: goto label2;
            case 106: goto label6;
            case 107: goto label6;
            case 108: goto label3;
            case 109: goto label6;
            case 110: goto label6;
            case 111: goto label6;
            case 112: goto label6;
            case 113: goto label6;
            case 114: goto label6;
            case 115: goto label2;
            case 116: goto label6;
            case 117: goto label6;
            case 118: goto label6;
            case 119: goto label6;
            case 120: goto label6;
            case 121: goto label6;
            case 122: goto label2;
            default: goto label6;
        };

     label2:
        virtualinvoke r2.<org.mozilla.classfile.ClassFileWriter: void addILoad(int)>(i1);

        return 1;

     label3:
        virtualinvoke r2.<org.mozilla.classfile.ClassFileWriter: void addLLoad(int)>(i1);

        return 2;

     label4:
        virtualinvoke r2.<org.mozilla.classfile.ClassFileWriter: void addFLoad(int)>(i1);

        return 1;

     label5:
        virtualinvoke r2.<org.mozilla.classfile.ClassFileWriter: void addDLoad(int)>(i1);

        return 2;

     label6:
        $r3 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r3;
    }

    private static void generatePopResult(org.mozilla.classfile.ClassFileWriter, java.lang.Class)
    {
        int $i1;
        java.lang.Class r0;
        char $c0;
        java.lang.String $r2;
        org.mozilla.classfile.ClassFileWriter r1;
        boolean $z0;

        r1 := @parameter0: org.mozilla.classfile.ClassFileWriter;

        r0 := @parameter1: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label6;

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $c0 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        $i1 = (int) $c0;

        tableswitch($i1)
        {
            case 98: goto label1;
            case 99: goto label1;
            case 100: goto label4;
            case 101: goto label5;
            case 102: goto label3;
            case 103: goto label5;
            case 104: goto label5;
            case 105: goto label1;
            case 106: goto label5;
            case 107: goto label5;
            case 108: goto label2;
            case 109: goto label5;
            case 110: goto label5;
            case 111: goto label5;
            case 112: goto label5;
            case 113: goto label5;
            case 114: goto label5;
            case 115: goto label1;
            case 116: goto label5;
            case 117: goto label5;
            case 118: goto label5;
            case 119: goto label5;
            case 120: goto label5;
            case 121: goto label5;
            case 122: goto label1;
            default: goto label5;
        };

     label1:
        virtualinvoke r1.<org.mozilla.classfile.ClassFileWriter: void add(int)>(172);

        goto label5;

     label2:
        virtualinvoke r1.<org.mozilla.classfile.ClassFileWriter: void add(int)>(173);

        goto label5;

     label3:
        virtualinvoke r1.<org.mozilla.classfile.ClassFileWriter: void add(int)>(174);

        goto label5;

     label4:
        virtualinvoke r1.<org.mozilla.classfile.ClassFileWriter: void add(int)>(175);

     label5:
        goto label7;

     label6:
        virtualinvoke r1.<org.mozilla.classfile.ClassFileWriter: void add(int)>(176);

     label7:
        return;
    }

    private static void generateSuper(org.mozilla.classfile.ClassFileWriter, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Class[], java.lang.Class)
    {
        short $s2;
        java.lang.StringBuffer $r1, $r2, $r4;
        int $i0, $i1, $i3, i4, i5;
        java.lang.String r3, $r5, r6, r8, r12;
        boolean $z0;
        java.lang.Class[] r7;
        org.mozilla.classfile.ClassFileWriter r0;
        java.lang.Class r9, $r10, $r11;

        r0 := @parameter0: org.mozilla.classfile.ClassFileWriter;

        r12 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        r7 := @parameter5: java.lang.Class[];

        r9 := @parameter6: java.lang.Class;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("super$");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void startMethod(java.lang.String,java.lang.String,short)>($r5, r6, 1);

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int,int)>(25, 0);

        i4 = 1;

        i5 = 0;

     label1:
        $i0 = lengthof r7;

        if i5 >= $i0 goto label2;

        $r11 = r7[i5];

        $i3 = staticinvoke <org.mozilla.javascript.JavaAdapter: int generatePushParam(org.mozilla.classfile.ClassFileWriter,int,java.lang.Class)>(r0, i4, $r11);

        i4 = i4 + $i3;

        i5 = i5 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(183, r8, r3, r6);

        $r10 = <java.lang.Void: java.lang.Class TYPE>;

        $z0 = virtualinvoke r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label3;

        staticinvoke <org.mozilla.javascript.JavaAdapter: void generatePopResult(org.mozilla.classfile.ClassFileWriter,java.lang.Class)>(r0, r9);

        goto label4;

     label3:
        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void add(int)>(177);

     label4:
        $i1 = i4 + 1;

        $s2 = (short) $i1;

        virtualinvoke r0.<org.mozilla.classfile.ClassFileWriter: void stopMethod(short)>($s2);

        return;
    }

    private static java.lang.String getMethodSignature(java.lang.reflect.Method, java.lang.Class[])
    {
        java.lang.StringBuffer $r0;
        java.lang.Class[] r1;
        java.lang.Class $r3;
        java.lang.String $r4;
        java.lang.reflect.Method r2;

        r2 := @parameter0: java.lang.reflect.Method;

        r1 := @parameter1: java.lang.Class[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        staticinvoke <org.mozilla.javascript.JavaAdapter: int appendMethodSignature(java.lang.Class[],java.lang.Class,java.lang.StringBuffer)>(r1, $r3, $r0);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    static int appendMethodSignature(java.lang.Class[], java.lang.Class, java.lang.StringBuffer)
    {
        java.lang.Class[] r1;
        java.lang.StringBuffer r0;
        int $i0, $i1, i2, i3;
        java.lang.Class r2, r3, $r4, $r5;

        r1 := @parameter0: java.lang.Class[];

        r2 := @parameter1: java.lang.Class;

        r0 := @parameter2: java.lang.StringBuffer;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        $i0 = lengthof r1;

        i2 = 1 + $i0;

        i3 = 0;

     label1:
        $i1 = lengthof r1;

        if i3 >= $i1 goto label4;

        r3 = r1[i3];

        staticinvoke <org.mozilla.javascript.JavaAdapter: java.lang.StringBuffer appendTypeString(java.lang.StringBuffer,java.lang.Class)>(r0, r3);

        $r4 = <java.lang.Long: java.lang.Class TYPE>;

        if r3 == $r4 goto label2;

        $r5 = <java.lang.Double: java.lang.Class TYPE>;

        if r3 != $r5 goto label3;

     label2:
        i2 = i2 + 1;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        staticinvoke <org.mozilla.javascript.JavaAdapter: java.lang.StringBuffer appendTypeString(java.lang.StringBuffer,java.lang.Class)>(r0, r2);

        return i2;
    }

    private static java.lang.StringBuffer appendTypeString(java.lang.StringBuffer, java.lang.Class)
    {
        char $c0, c1;
        java.lang.StringBuffer r0;
        java.lang.Class $r3, $r4, r6;
        java.lang.String $r1, $r2, $r5;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.StringBuffer;

        r6 := @parameter1: java.lang.Class;

     label1:
        $z0 = virtualinvoke r6.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        r6 = virtualinvoke r6.<java.lang.Class: java.lang.Class getComponentType()>();

        goto label1;

     label2:
        $z1 = virtualinvoke r6.<java.lang.Class: boolean isPrimitive()>();

        if $z1 == 0 goto label6;

        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r6 != $r3 goto label3;

        c1 = 90;

        goto label5;

     label3:
        $r4 = <java.lang.Long: java.lang.Class TYPE>;

        if r6 != $r4 goto label4;

        c1 = 74;

        goto label5;

     label4:
        $r5 = virtualinvoke r6.<java.lang.Class: java.lang.String getName()>();

        $c0 = virtualinvoke $r5.<java.lang.String: char charAt(int)>(0);

        c1 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c0);

     label5:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c1);

        goto label7;

     label6:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(76);

        $r1 = virtualinvoke r6.<java.lang.Class: java.lang.String getName()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

     label7:
        return r0;
    }

    static int[] getArgsToConvert(java.lang.Class[])
    {
        java.lang.Class[] r0;
        int[] r3;
        int $i0, $i1, $i2, i3, i4, i5, i6;
        java.lang.Class $r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Class[];

        i3 = 0;

        i4 = 0;

     label1:
        $i0 = lengthof r0;

        if i4 == $i0 goto label3;

        $r2 = r0[i4];

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isPrimitive()>();

        if $z1 != 0 goto label2;

        i3 = i3 + 1;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        if i3 != 0 goto label4;

        return null;

     label4:
        r3 = newarray (int)[i3];

        i5 = 0;

        i6 = 0;

     label5:
        $i1 = lengthof r0;

        if i6 == $i1 goto label7;

        $r1 = r0[i6];

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isPrimitive()>();

        if $z0 != 0 goto label6;

        $i2 = i5;

        i5 = i5 + 1;

        r3[$i2] = i6;

     label6:
        i6 = i6 + 1;

        goto label5;

     label7:
        return r3;
    }

    static java.lang.Object access$000(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Function, java.lang.Object[], long)
    {
        org.mozilla.javascript.Scriptable r1, r2;
        java.lang.Object[] r4;
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.Function r3;
        long l0;
        java.lang.Object $r5;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r2 := @parameter2: org.mozilla.javascript.Scriptable;

        r3 := @parameter3: org.mozilla.javascript.Function;

        r4 := @parameter4: java.lang.Object[];

        l0 := @parameter5: long;

        $r5 = staticinvoke <org.mozilla.javascript.JavaAdapter: java.lang.Object doCall(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Function,java.lang.Object[],long)>(r0, r1, r2, r3, r4, l0);

        return $r5;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <org.mozilla.javascript.JavaAdapter: int Id_JavaAdapter> = 1;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.mozilla.javascript.JavaAdapter: java.lang.Object FTAG> = $r0;

        return;
    }
}
