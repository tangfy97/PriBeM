public class com.google.inject.internal.MoreTypes$ParameterizedTypeImpl extends java.lang.Object implements java.lang.reflect.ParameterizedType, java.io.Serializable, com.google.inject.internal.MoreTypes$CompositeType
{
    private final java.lang.reflect.Type ownerType;
    private final java.lang.reflect.Type rawType;
    private final java.lang.reflect.Type[] typeArguments;
    private static final long serialVersionUID;

    public transient void <init>(java.lang.reflect.Type, java.lang.reflect.Type, java.lang.reflect.Type[])
    {
        java.lang.Object[] $r15, $r16;
        int i0, $i1;
        boolean $z0, $z1, $z2;
        com.google.inject.internal.MoreTypes$ParameterizedTypeImpl r0;
        java.lang.reflect.Type r1, r2, $r3, $r8, $r10, $r12, $r14, $r20;
        java.lang.reflect.Type[] r4, $r6, $r7, $r9, $r11, $r13, $r21;
        java.lang.Object $r5;
        java.lang.Class $r17, $r18, r19;

        r0 := @this: com.google.inject.internal.MoreTypes$ParameterizedTypeImpl;

        r2 := @parameter0: java.lang.reflect.Type;

        r1 := @parameter1: java.lang.reflect.Type;

        r4 := @parameter2: java.lang.reflect.Type[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = r1 instanceof java.lang.Class;

        if $z0 == 0 goto label07;

        r19 = (java.lang.Class) r1;

        if r2 != null goto label01;

        $r18 = virtualinvoke r19.<java.lang.Class: java.lang.Class getEnclosingClass()>();

        if $r18 != null goto label02;

     label01:
        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = r1;

        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z1, "No owner type for enclosed %s", $r15);

        if r2 == null goto label04;

        $r17 = virtualinvoke r19.<java.lang.Class: java.lang.Class getEnclosingClass()>();

        if $r17 == null goto label05;

     label04:
        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        $r16 = newarray (java.lang.Object)[1];

        $r16[0] = r1;

        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z2, "Owner type for unenclosed %s", $r16);

     label07:
        if r2 != null goto label08;

        $r20 = null;

        goto label09;

     label08:
        $r20 = staticinvoke <com.google.inject.internal.MoreTypes: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>(r2);

     label09:
        r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type ownerType> = $r20;

        $r3 = staticinvoke <com.google.inject.internal.MoreTypes: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>(r1);

        r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type rawType> = $r3;

        $r5 = virtualinvoke r4.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (java.lang.reflect.Type[]) $r5;

        r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments> = $r6;

        i0 = 0;

     label10:
        $r21 = r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $i1 = lengthof $r21;

        if i0 >= $i1 goto label11;

        $r7 = r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $r8 = $r7[i0];

        staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r8, "type parameter");

        $r9 = r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $r10 = $r9[i0];

        staticinvoke <com.google.inject.internal.MoreTypes: void access$000(java.lang.reflect.Type,java.lang.String)>($r10, "type parameters");

        $r13 = r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $r11 = r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $r12 = $r11[i0];

        $r14 = staticinvoke <com.google.inject.internal.MoreTypes: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>($r12);

        $r13[i0] = $r14;

        i0 = i0 + 1;

        goto label10;

     label11:
        return;
    }

    public java.lang.reflect.Type[] getActualTypeArguments()
    {
        com.google.inject.internal.MoreTypes$ParameterizedTypeImpl r0;
        java.lang.reflect.Type[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: com.google.inject.internal.MoreTypes$ParameterizedTypeImpl;

        $r1 = r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.reflect.Type[]) $r2;

        return $r3;
    }

    public java.lang.reflect.Type getRawType()
    {
        com.google.inject.internal.MoreTypes$ParameterizedTypeImpl r0;
        java.lang.reflect.Type $r1;

        r0 := @this: com.google.inject.internal.MoreTypes$ParameterizedTypeImpl;

        $r1 = r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type rawType>;

        return $r1;
    }

    public java.lang.reflect.Type getOwnerType()
    {
        com.google.inject.internal.MoreTypes$ParameterizedTypeImpl r0;
        java.lang.reflect.Type $r1;

        r0 := @this: com.google.inject.internal.MoreTypes$ParameterizedTypeImpl;

        $r1 = r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type ownerType>;

        return $r1;
    }

    public boolean isFullySpecified()
    {
        com.google.inject.internal.MoreTypes$ParameterizedTypeImpl r0;
        java.lang.reflect.Type $r1, $r2, r4, $r5;
        java.lang.reflect.Type[] r3;
        int i0, i1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.inject.internal.MoreTypes$ParameterizedTypeImpl;

        $r1 = r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type ownerType>;

        if $r1 == null goto label1;

        $r5 = r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type ownerType>;

        $z2 = staticinvoke <com.google.inject.internal.MoreTypes: boolean access$100(java.lang.reflect.Type)>($r5);

        if $z2 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type rawType>;

        $z0 = staticinvoke <com.google.inject.internal.MoreTypes: boolean access$100(java.lang.reflect.Type)>($r2);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r3 = r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        i0 = lengthof r3;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r4 = r3[i1];

        $z1 = staticinvoke <com.google.inject.internal.MoreTypes: boolean access$100(java.lang.reflect.Type)>(r4);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.reflect.ParameterizedType $r2;
        com.google.inject.internal.MoreTypes$ParameterizedTypeImpl r1;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: com.google.inject.internal.MoreTypes$ParameterizedTypeImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.reflect.ParameterizedType) r0;

        $z1 = staticinvoke <com.google.inject.internal.MoreTypes: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>(r1, $r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int hashCode()
    {
        com.google.inject.internal.MoreTypes$ParameterizedTypeImpl r0;
        java.lang.reflect.Type $r2, $r3;
        java.lang.reflect.Type[] $r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.google.inject.internal.MoreTypes$ParameterizedTypeImpl;

        $r1 = r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r1);

        $r2 = r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type rawType>;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i2 = $i0 ^ $i1;

        $r3 = r0.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type ownerType>;

        $i3 = staticinvoke <com.google.inject.internal.MoreTypes: int access$200(java.lang.Object)>($r3);

        $i4 = $i2 ^ $i3;

        return $i4;
    }

    public java.lang.String toString()
    {
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r4, $r9, $r12, $r16, $r17;
        com.google.inject.internal.MoreTypes$ParameterizedTypeImpl r1;
        java.lang.reflect.Type $r3, $r8, $r15;
        java.lang.reflect.Type[] $r2, $r5, $r7, $r10, $r14;
        java.lang.StringBuilder $r0, $r6, $r11, $r13;

        r1 := @this: com.google.inject.internal.MoreTypes$ParameterizedTypeImpl;

        $r0 = new java.lang.StringBuilder;

        $r2 = r1.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $i0 = lengthof $r2;

        $i1 = $i0 + 1;

        $i2 = 30 * $i1;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i2);

        $r3 = r1.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type rawType>;

        $r4 = staticinvoke <com.google.inject.internal.MoreTypes: java.lang.String typeToString(java.lang.reflect.Type)>($r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = r1.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $i3 = lengthof $r5;

        if $i3 != 0 goto label1;

        $r17 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;

     label1:
        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r7 = r1.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $r8 = $r7[0];

        $r9 = staticinvoke <com.google.inject.internal.MoreTypes: java.lang.String typeToString(java.lang.reflect.Type)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        i5 = 1;

     label2:
        $r10 = r1.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $i4 = lengthof $r10;

        if i5 >= $i4 goto label3;

        $r13 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r14 = r1.<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments>;

        $r15 = $r14[i5];

        $r16 = staticinvoke <com.google.inject.internal.MoreTypes: java.lang.String typeToString(java.lang.reflect.Type)>($r15);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        i5 = i5 + 1;

        goto label2;

     label3:
        $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public static void <clinit>()
    {
        <com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: long serialVersionUID> = 0L;

        return;
    }
}
