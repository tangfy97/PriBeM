class bsh.BSHUnaryExpression extends bsh.SimpleNode implements bsh.ParserConstants
{
    public int kind;
    public boolean postfix;

    void <init>(int)
    {
        bsh.BSHUnaryExpression r0;
        int i0;

        r0 := @this: bsh.BSHUnaryExpression;

        i0 := @parameter0: int;

        specialinvoke r0.<bsh.SimpleNode: void <init>(int)>(i0);

        r0.<bsh.BSHUnaryExpression: boolean postfix> = 0;

        return;
    }

    public java.lang.Object eval(bsh.CallStack, bsh.Interpreter) throws bsh.EvalError
    {
        bsh.UtilEvalError $r10;
        bsh.SimpleNode r2;
        bsh.CallStack r3;
        bsh.LHS $r6;
        int $i0, $i1, $i2;
        boolean $z0;
        bsh.BSHUnaryExpression r0;
        bsh.EvalError $r11;
        bsh.Interpreter r4;
        bsh.BSHPrimaryExpression $r5;
        java.lang.Object $r7, $r8, $r9;
        bsh.Node $r1;

        r0 := @this: bsh.BSHUnaryExpression;

        r3 := @parameter0: bsh.CallStack;

        r4 := @parameter1: bsh.Interpreter;

        $r1 = virtualinvoke r0.<bsh.BSHUnaryExpression: bsh.Node jjtGetChild(int)>(0);

        r2 = (bsh.SimpleNode) $r1;

     label1:
        $i0 = r0.<bsh.BSHUnaryExpression: int kind>;

        if $i0 == 100 goto label2;

        $i1 = r0.<bsh.BSHUnaryExpression: int kind>;

        if $i1 != 101 goto label4;

     label2:
        $r5 = (bsh.BSHPrimaryExpression) r2;

        $r6 = virtualinvoke $r5.<bsh.BSHPrimaryExpression: bsh.LHS toLHS(bsh.CallStack,bsh.Interpreter)>(r3, r4);

        $z0 = virtualinvoke r4.<bsh.Interpreter: boolean getStrictJava()>();

        $r7 = specialinvoke r0.<bsh.BSHUnaryExpression: java.lang.Object lhsUnaryOperation(bsh.LHS,boolean)>($r6, $z0);

     label3:
        return $r7;

     label4:
        $r8 = virtualinvoke r2.<bsh.SimpleNode: java.lang.Object eval(bsh.CallStack,bsh.Interpreter)>(r3, r4);

        $i2 = r0.<bsh.BSHUnaryExpression: int kind>;

        $r9 = specialinvoke r0.<bsh.BSHUnaryExpression: java.lang.Object unaryOperation(java.lang.Object,int)>($r8, $i2);

     label5:
        return $r9;

     label6:
        $r10 := @caughtexception;

        $r11 = virtualinvoke $r10.<bsh.UtilEvalError: bsh.EvalError toEvalError(bsh.SimpleNode,bsh.CallStack)>(r0, r3);

        throw $r11;

        catch bsh.UtilEvalError from label1 to label3 with label6;
        catch bsh.UtilEvalError from label4 to label5 with label6;
    }

    private java.lang.Object lhsUnaryOperation(bsh.LHS, boolean) throws bsh.UtilEvalError
    {
        bsh.BSHUnaryExpression r2;
        bsh.LHS r0;
        int $i0;
        java.lang.Object $r1, $r3, r4;
        boolean $z0, $z1, z2;

        r2 := @this: bsh.BSHUnaryExpression;

        r0 := @parameter0: bsh.LHS;

        z2 := @parameter1: boolean;

        $z0 = <bsh.Interpreter: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <bsh.Interpreter: void debug(java.lang.String)>("lhsUnaryOperation");

     label1:
        $r1 = virtualinvoke r0.<bsh.LHS: java.lang.Object getValue()>();

        $i0 = r2.<bsh.BSHUnaryExpression: int kind>;

        $r3 = specialinvoke r2.<bsh.BSHUnaryExpression: java.lang.Object unaryOperation(java.lang.Object,int)>($r1, $i0);

        $z1 = r2.<bsh.BSHUnaryExpression: boolean postfix>;

        if $z1 == 0 goto label2;

        r4 = $r1;

        goto label3;

     label2:
        r4 = $r3;

     label3:
        virtualinvoke r0.<bsh.LHS: java.lang.Object assign(java.lang.Object,boolean)>($r3, z2);

        return r4;
    }

    private java.lang.Object unaryOperation(java.lang.Object, int) throws bsh.UtilEvalError
    {
        bsh.UtilEvalError $r4;
        java.lang.String[] $r7;
        java.lang.StringBuffer $r5, $r6, $r9, $r10;
        int i0;
        java.lang.String $r8, $r11;
        boolean $z0, $z1, $z2, $z3;
        bsh.BSHUnaryExpression r1;
        bsh.Primitive $r2, $r3;
        java.lang.Object r0, $r12;

        r1 := @this: bsh.BSHUnaryExpression;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = r0 instanceof java.lang.Boolean;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof java.lang.Character;

        if $z1 != 0 goto label1;

        $z2 = r0 instanceof java.lang.Number;

        if $z2 == 0 goto label2;

     label1:
        $r12 = specialinvoke r1.<bsh.BSHUnaryExpression: java.lang.Object primitiveWrapperUnaryOperation(java.lang.Object,int)>(r0, i0);

        return $r12;

     label2:
        $z3 = r0 instanceof bsh.Primitive;

        if $z3 != 0 goto label3;

        $r4 = new bsh.UtilEvalError;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unary operation ");

        $r7 = <bsh.ParserConstants: java.lang.String[] tokenImage>;

        $r8 = $r7[i0];

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" inappropriate for object");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<bsh.UtilEvalError: void <init>(java.lang.String)>($r11);

        throw $r4;

     label3:
        $r2 = (bsh.Primitive) r0;

        $r3 = staticinvoke <bsh.Primitive: bsh.Primitive unaryOperation(bsh.Primitive,int)>($r2, i0);

        return $r3;
    }

    private java.lang.Object primitiveWrapperUnaryOperation(java.lang.Object, int) throws bsh.UtilEvalError
    {
        java.lang.Float $r6, $r7;
        java.lang.Integer $r10, $r14;
        java.lang.Character $r15;
        byte $b5;
        java.lang.Long $r8, $r9;
        java.lang.Short $r16;
        java.lang.Byte $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        float $f0;
        bsh.InterpreterError $r3;
        java.lang.Double $r4, $r5;
        long $l1;
        short $s4;
        int i0, $i2;
        java.lang.Boolean $r18, $r19;
        double $d0;
        bsh.BSHUnaryExpression r20;
        char $c3;
        java.lang.Object r0, $r2;
        java.lang.Class $r1, $r11, $r12, $r13;

        r20 := @this: bsh.BSHUnaryExpression;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <bsh.Primitive: java.lang.Object promoteToInteger(java.lang.Object)>(r0);

        $z0 = $r2 instanceof java.lang.Boolean;

        if $z0 == 0 goto label1;

        $r18 = new java.lang.Boolean;

        $r19 = (java.lang.Boolean) $r2;

        $z5 = staticinvoke <bsh.Primitive: boolean booleanUnaryOperation(java.lang.Boolean,int)>($r19, i0);

        specialinvoke $r18.<java.lang.Boolean: void <init>(boolean)>($z5);

        return $r18;

     label1:
        $z1 = $r2 instanceof java.lang.Integer;

        if $z1 == 0 goto label6;

        $r10 = (java.lang.Integer) $r2;

        $i2 = staticinvoke <bsh.Primitive: int intUnaryOperation(java.lang.Integer,int)>($r10, i0);

        if i0 == 100 goto label2;

        if i0 != 101 goto label5;

     label2:
        $r11 = <java.lang.Byte: java.lang.Class TYPE>;

        if $r1 != $r11 goto label3;

        $r17 = new java.lang.Byte;

        $b5 = (byte) $i2;

        specialinvoke $r17.<java.lang.Byte: void <init>(byte)>($b5);

        return $r17;

     label3:
        $r12 = <java.lang.Short: java.lang.Class TYPE>;

        if $r1 != $r12 goto label4;

        $r16 = new java.lang.Short;

        $s4 = (short) $i2;

        specialinvoke $r16.<java.lang.Short: void <init>(short)>($s4);

        return $r16;

     label4:
        $r13 = <java.lang.Character: java.lang.Class TYPE>;

        if $r1 != $r13 goto label5;

        $r15 = new java.lang.Character;

        $c3 = (char) $i2;

        specialinvoke $r15.<java.lang.Character: void <init>(char)>($c3);

        return $r15;

     label5:
        $r14 = new java.lang.Integer;

        specialinvoke $r14.<java.lang.Integer: void <init>(int)>($i2);

        return $r14;

     label6:
        $z2 = $r2 instanceof java.lang.Long;

        if $z2 == 0 goto label7;

        $r8 = new java.lang.Long;

        $r9 = (java.lang.Long) $r2;

        $l1 = staticinvoke <bsh.Primitive: long longUnaryOperation(java.lang.Long,int)>($r9, i0);

        specialinvoke $r8.<java.lang.Long: void <init>(long)>($l1);

        return $r8;

     label7:
        $z3 = $r2 instanceof java.lang.Float;

        if $z3 == 0 goto label8;

        $r6 = new java.lang.Float;

        $r7 = (java.lang.Float) $r2;

        $f0 = staticinvoke <bsh.Primitive: float floatUnaryOperation(java.lang.Float,int)>($r7, i0);

        specialinvoke $r6.<java.lang.Float: void <init>(float)>($f0);

        return $r6;

     label8:
        $z4 = $r2 instanceof java.lang.Double;

        if $z4 == 0 goto label9;

        $r4 = new java.lang.Double;

        $r5 = (java.lang.Double) $r2;

        $d0 = staticinvoke <bsh.Primitive: double doubleUnaryOperation(java.lang.Double,int)>($r5, i0);

        specialinvoke $r4.<java.lang.Double: void <init>(double)>($d0);

        return $r4;

     label9:
        $r3 = new bsh.InterpreterError;

        specialinvoke $r3.<bsh.InterpreterError: void <init>(java.lang.String)>("An error occurred.  Please call technical support.");

        throw $r3;
    }
}
