final class kodkod.util.collections.FixedMap$1 extends java.util.AbstractSet
{
    final kodkod.util.collections.FixedMap this$0;

    void <init>(kodkod.util.collections.FixedMap)
    {
        kodkod.util.collections.FixedMap$1 r0;
        kodkod.util.collections.FixedMap r1;

        r0 := @this: kodkod.util.collections.FixedMap$1;

        r1 := @parameter0: kodkod.util.collections.FixedMap;

        r0.<kodkod.util.collections.FixedMap$1: kodkod.util.collections.FixedMap this$0> = r1;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Map$Entry r1;
        java.lang.Object[] $r6;
        kodkod.util.collections.FixedMap $r3, $r5;
        kodkod.util.collections.FixedMap$1 r2;
        int $i0;
        java.lang.Object r0, $r4, $r7, $r8;
        boolean $z0;

        r2 := @this: kodkod.util.collections.FixedMap$1;

        r0 := @parameter0: java.lang.Object;

        r1 = (java.util.Map$Entry) r0;

        $r3 = r2.<kodkod.util.collections.FixedMap$1: kodkod.util.collections.FixedMap this$0>;

        $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $i0 = virtualinvoke $r3.<kodkod.util.collections.FixedMap: int indexOf(java.lang.Object)>($r4);

        if $i0 >= 0 goto label1;

        $z0 = 0;

        goto label3;

     label1:
        $r5 = r2.<kodkod.util.collections.FixedMap$1: kodkod.util.collections.FixedMap this$0>;

        $r6 = staticinvoke <kodkod.util.collections.FixedMap: java.lang.Object[] access$1(kodkod.util.collections.FixedMap)>($r5);

        $r7 = $r6[$i0];

        $r8 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r7 != $r8 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public java.util.Iterator iterator()
    {
        kodkod.util.collections.FixedMap$EntryIterator $r0;
        kodkod.util.collections.FixedMap$1 r1;
        kodkod.util.collections.FixedMap $r2;

        r1 := @this: kodkod.util.collections.FixedMap$1;

        $r0 = new kodkod.util.collections.FixedMap$EntryIterator;

        $r2 = r1.<kodkod.util.collections.FixedMap$1: kodkod.util.collections.FixedMap this$0>;

        specialinvoke $r0.<kodkod.util.collections.FixedMap$EntryIterator: void <init>(kodkod.util.collections.FixedMap)>($r2);

        return $r0;
    }

    public int size()
    {
        kodkod.util.collections.FixedMap$1 r0;
        java.lang.Object[] $r2;
        kodkod.util.collections.FixedMap $r1;
        int $i0;

        r0 := @this: kodkod.util.collections.FixedMap$1;

        $r1 = r0.<kodkod.util.collections.FixedMap$1: kodkod.util.collections.FixedMap this$0>;

        $r2 = staticinvoke <kodkod.util.collections.FixedMap: java.lang.Object[] access$0(kodkod.util.collections.FixedMap)>($r1);

        $i0 = lengthof $r2;

        return $i0;
    }

    public java.lang.Object[] toArray()
    {
        kodkod.util.collections.FixedMap$1 r0;
        java.lang.Object[] r1;
        kodkod.util.collections.FixedMap $r3;
        kodkod.util.collections.FixedMap$Entry $r2;
        int $i0, i1;

        r0 := @this: kodkod.util.collections.FixedMap$1;

        $i0 = virtualinvoke r0.<kodkod.util.collections.FixedMap$1: int size()>();

        r1 = newarray (java.lang.Object)[$i0];

        i1 = 0;

        goto label2;

     label1:
        $r2 = new kodkod.util.collections.FixedMap$Entry;

        $r3 = r0.<kodkod.util.collections.FixedMap$1: kodkod.util.collections.FixedMap this$0>;

        specialinvoke $r2.<kodkod.util.collections.FixedMap$Entry: void <init>(kodkod.util.collections.FixedMap,int)>($r3, i1);

        r1[i1] = $r2;

        i1 = i1 + 1;

     label2:
        if i1 < $i0 goto label1;

        return r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Object[] r6;
        kodkod.util.collections.FixedMap $r2;
        kodkod.util.collections.FixedMap$1 r0;
        kodkod.util.collections.FixedMap$Entry $r1;
        int $i0, $i1, $i2, i3;
        java.lang.Class $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: kodkod.util.collections.FixedMap$1;

        r6 := @parameter0: java.lang.Object[];

        $i0 = virtualinvoke r0.<kodkod.util.collections.FixedMap$1: int size()>();

        $i1 = lengthof r6;

        if $i1 >= $i0 goto label1;

        $r3 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getComponentType()>();

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r4, $i0);

        r6 = (java.lang.Object[]) $r5;

     label1:
        i3 = 0;

        goto label3;

     label2:
        $r1 = new kodkod.util.collections.FixedMap$Entry;

        $r2 = r0.<kodkod.util.collections.FixedMap$1: kodkod.util.collections.FixedMap this$0>;

        specialinvoke $r1.<kodkod.util.collections.FixedMap$Entry: void <init>(kodkod.util.collections.FixedMap,int)>($r2, i3);

        r6[i3] = $r1;

        i3 = i3 + 1;

     label3:
        if i3 < $i0 goto label2;

        $i2 = lengthof r6;

        if $i2 <= $i0 goto label4;

        r6[$i0] = null;

     label4:
        return r6;
    }
}
