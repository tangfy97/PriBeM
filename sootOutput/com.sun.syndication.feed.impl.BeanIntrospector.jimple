public class com.sun.syndication.feed.impl.BeanIntrospector extends java.lang.Object
{
    private static final java.util.Map _introspected;
    private static final java.lang.String SETTER;
    private static final java.lang.String GETTER;
    private static final java.lang.String BOOLEAN_GETTER;

    public void <init>()
    {
        com.sun.syndication.feed.impl.BeanIntrospector r0;

        r0 := @this: com.sun.syndication.feed.impl.BeanIntrospector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static synchronized java.beans.PropertyDescriptor[] getPropertyDescriptors(java.lang.Class) throws java.beans.IntrospectionException
    {
        java.util.Map $r1, $r5;
        java.beans.PropertyDescriptor[] $r3, $r4, r6;
        java.lang.Class r0;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.Class;

        $r1 = <com.sun.syndication.feed.impl.BeanIntrospector: java.util.Map _introspected>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (java.beans.PropertyDescriptor[]) $r2;

        r6 = (java.beans.PropertyDescriptor[]) $r3;

        if r6 != null goto label1;

        $r4 = staticinvoke <com.sun.syndication.feed.impl.BeanIntrospector: java.beans.PropertyDescriptor[] getPDs(java.lang.Class)>(r0);

        r6 = $r4;

        $r5 = <com.sun.syndication.feed.impl.BeanIntrospector: java.util.Map _introspected>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r4);

     label1:
        return r6;
    }

    private static java.beans.PropertyDescriptor[] getPDs(java.lang.Class) throws java.beans.IntrospectionException
    {
        java.util.List $r4;
        java.util.Map $r2, $r3;
        java.beans.PropertyDescriptor[] r5;
        int $i0;
        java.lang.Class r0;
        java.lang.reflect.Method[] $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $r2 = staticinvoke <com.sun.syndication.feed.impl.BeanIntrospector: java.util.Map getPDs(java.lang.reflect.Method[],boolean)>($r1, 0);

        $r3 = staticinvoke <com.sun.syndication.feed.impl.BeanIntrospector: java.util.Map getPDs(java.lang.reflect.Method[],boolean)>($r1, 1);

        $r4 = staticinvoke <com.sun.syndication.feed.impl.BeanIntrospector: java.util.List merge(java.util.Map,java.util.Map)>($r2, $r3);

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        r5 = newarray (java.beans.PropertyDescriptor)[$i0];

        interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        return r5;
    }

    private static java.util.Map getPDs(java.lang.reflect.Method[], boolean) throws java.beans.IntrospectionException
    {
        java.lang.reflect.Method[] r1;
        java.lang.reflect.Method $r2, $r3, $r5, $r8, $r10, $r15, $r16, $r19, $r21, $r26, $r27, $r29, $r32, $r34, $r39, $r42;
        boolean z0, $z1, $z2, $z3;
        java.beans.PropertyDescriptor $r14, $r25, $r38, r41;
        java.util.HashMap $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r4, $r11, $r12, $r13, $r22, $r23, $r24, $r28, $r35, $r36, $r37, r40, $r43;
        java.lang.Class[] $r9, $r20, $r33;
        java.lang.Class $r6, $r7, $r17, $r18, $r30, $r31;

        r1 := @parameter0: java.lang.reflect.Method[];

        z0 := @parameter1: boolean;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        i6 = 0;

     label1:
        $i0 = lengthof r1;

        if i6 >= $i0 goto label6;

        r40 = null;

        r41 = null;

        $r2 = r1[i6];

        $i1 = virtualinvoke $r2.<java.lang.reflect.Method: int getModifiers()>();

        $i2 = $i1 & 1;

        if $i2 == 0 goto label4;

        if z0 == 0 goto label2;

        $r27 = r1[i6];

        $r28 = virtualinvoke $r27.<java.lang.reflect.Method: java.lang.String getName()>();

        $z2 = virtualinvoke $r28.<java.lang.String: boolean startsWith(java.lang.String)>("set");

        if $z2 == 0 goto label4;

        $r29 = r1[i6];

        $r30 = virtualinvoke $r29.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r31 = <java.lang.Void: java.lang.Class TYPE>;

        if $r30 != $r31 goto label4;

        $r32 = r1[i6];

        $r33 = virtualinvoke $r32.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i5 = lengthof $r33;

        if $i5 != 1 goto label4;

        $r34 = r1[i6];

        $r35 = virtualinvoke $r34.<java.lang.reflect.Method: java.lang.String getName()>();

        $r36 = virtualinvoke $r35.<java.lang.String: java.lang.String substring(int)>(3);

        $r37 = staticinvoke <java.beans.Introspector: java.lang.String decapitalize(java.lang.String)>($r36);

        r40 = $r37;

        $r38 = new java.beans.PropertyDescriptor;

        $r39 = r1[i6];

        specialinvoke $r38.<java.beans.PropertyDescriptor: void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method)>($r37, null, $r39);

        r41 = $r38;

        goto label4;

     label2:
        $r3 = r1[i6];

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.String getName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("get");

        if $z1 == 0 goto label3;

        $r16 = r1[i6];

        $r17 = virtualinvoke $r16.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r18 = <java.lang.Void: java.lang.Class TYPE>;

        if $r17 == $r18 goto label3;

        $r19 = r1[i6];

        $r20 = virtualinvoke $r19.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i4 = lengthof $r20;

        if $i4 != 0 goto label3;

        $r21 = r1[i6];

        $r22 = virtualinvoke $r21.<java.lang.reflect.Method: java.lang.String getName()>();

        $r23 = virtualinvoke $r22.<java.lang.String: java.lang.String substring(int)>(3);

        $r24 = staticinvoke <java.beans.Introspector: java.lang.String decapitalize(java.lang.String)>($r23);

        r40 = $r24;

        $r25 = new java.beans.PropertyDescriptor;

        $r26 = r1[i6];

        specialinvoke $r25.<java.beans.PropertyDescriptor: void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method)>($r24, $r26, null);

        r41 = $r25;

        goto label4;

     label3:
        $r42 = r1[i6];

        $r43 = virtualinvoke $r42.<java.lang.reflect.Method: java.lang.String getName()>();

        $z3 = virtualinvoke $r43.<java.lang.String: boolean startsWith(java.lang.String)>("is");

        if $z3 == 0 goto label4;

        $r5 = r1[i6];

        $r6 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r7 = <java.lang.Boolean: java.lang.Class TYPE>;

        if $r6 != $r7 goto label4;

        $r8 = r1[i6];

        $r9 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i3 = lengthof $r9;

        if $i3 != 0 goto label4;

        $r10 = r1[i6];

        $r11 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.String getName()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int)>(2);

        $r13 = staticinvoke <java.beans.Introspector: java.lang.String decapitalize(java.lang.String)>($r12);

        r40 = $r13;

        $r14 = new java.beans.PropertyDescriptor;

        $r15 = r1[i6];

        specialinvoke $r14.<java.beans.PropertyDescriptor: void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method)>($r13, $r15, null);

        r41 = $r14;

     label4:
        if r40 == null goto label5;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r40, r41);

     label5:
        i6 = i6 + 1;

        goto label1;

     label6:
        return $r0;
    }

    private static java.util.List merge(java.util.Map, java.util.Map) throws java.beans.IntrospectionException
    {
        java.util.ArrayList $r0;
        java.util.HashSet $r1, $r5;
        java.util.Map r2, r6;
        java.lang.String r17, r20;
        java.lang.reflect.Method $r15, $r16;
        boolean $z0, $z1;
        java.util.Iterator $r4, $r8;
        java.util.Set $r3, $r7;
        java.beans.PropertyDescriptor $r14, r18, r19, r21;
        java.lang.Object $r9, $r10, $r11, $r12, $r13;

        r2 := @parameter0: java.util.Map;

        r6 := @parameter1: java.util.Map;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.lang.String) $r11;

        $r12 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r17);

        r18 = (java.beans.PropertyDescriptor) $r12;

        $r13 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r17);

        r19 = (java.beans.PropertyDescriptor) $r13;

        if r19 == null goto label2;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r17);

        $r14 = new java.beans.PropertyDescriptor;

        $r15 = virtualinvoke r18.<java.beans.PropertyDescriptor: java.lang.reflect.Method getReadMethod()>();

        $r16 = virtualinvoke r19.<java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>();

        specialinvoke $r14.<java.beans.PropertyDescriptor: void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method)>(r17, $r15, $r16);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label3;

     label2:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r18);

     label3:
        goto label1;

     label4:
        $r5 = new java.util.HashSet;

        $r7 = interfaceinvoke r6.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>($r7);

        interfaceinvoke $r5.<java.util.Set: boolean removeAll(java.util.Collection)>($r1);

        $r8 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.String) $r9;

        $r10 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20);

        r21 = (java.beans.PropertyDescriptor) $r10;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r21);

        goto label5;

     label6:
        return $r0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <com.sun.syndication.feed.impl.BeanIntrospector: java.lang.String BOOLEAN_GETTER> = "is";

        <com.sun.syndication.feed.impl.BeanIntrospector: java.lang.String GETTER> = "get";

        <com.sun.syndication.feed.impl.BeanIntrospector: java.lang.String SETTER> = "set";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.sun.syndication.feed.impl.BeanIntrospector: java.util.Map _introspected> = $r0;

        return;
    }
}
