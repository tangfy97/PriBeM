class ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk extends java.lang.Object implements ucar.nc2.iosp.LayoutBBTiled$DataChunk
{
    ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk delegate;
    static final boolean $assertionsDisabled;
    final ucar.nc2.iosp.hdf5.H5tiledLayoutBB this$0;

    void <init>(ucar.nc2.iosp.hdf5.H5tiledLayoutBB, ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk)
    {
        ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk r2;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB r1;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk r0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5tiledLayoutBB;

        r2 := @parameter1: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk;

        r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5tiledLayoutBB this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk delegate> = r2;

        return;
    }

    public int[] getOffset()
    {
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk r0;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB $r2, $r3, $r5;
        int[] $r6, r7;
        ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk $r1, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk delegate>;

        r7 = $r1.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk: int[] offset>;

        $i0 = lengthof r7;

        $r2 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5tiledLayoutBB this$0>;

        $i1 = staticinvoke <ucar.nc2.iosp.hdf5.H5tiledLayoutBB: int access$000(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)>($r2);

        if $i0 <= $i1 goto label1;

        $r3 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5tiledLayoutBB this$0>;

        $i2 = staticinvoke <ucar.nc2.iosp.hdf5.H5tiledLayoutBB: int access$000(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)>($r3);

        r7 = newarray (int)[$i2];

        $r4 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk delegate>;

        $r6 = $r4.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk: int[] offset>;

        $r5 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5tiledLayoutBB this$0>;

        $i3 = staticinvoke <ucar.nc2.iosp.hdf5.H5tiledLayoutBB: int access$000(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)>($r5);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r7, 0, $i3);

     label1:
        return r7;
    }

    public java.nio.ByteBuffer getByteBuffer() throws java.io.IOException
    {
        byte[] r29;
        ucar.unidata.io.RandomAccessFile $r3, $r6;
        java.nio.ByteBuffer $r9;
        ucar.nc2.iosp.hdf5.H5header$Filter r14;
        int[] $r21;
        boolean $z0, $z1;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB $r2, $r5, $r7, $r10, $r12, $r22;
        java.nio.ByteOrder $r11;
        ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk $r1, $r4, $r15, $r26;
        ucar.nc2.iosp.hdf5.H5header$Filter[] $r8, $r13;
        java.lang.StringBuilder $r18, $r19, $r25, $r27, $r30, $r31;
        long $l1;
        short $s4, $s5, $s6, $s7;
        int $i0, $i2, $i3, $i8, i9, $i10, $i11, $i12, $i14;
        java.lang.String $r20, $r28;
        java.io.PrintStream $r24;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk r0;
        java.lang.RuntimeException $r32;

        r0 := @this: ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk delegate>;

        $i0 = $r1.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk: int size>;

        r29 = newarray (byte)[$i0];

        $r2 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5tiledLayoutBB this$0>;

        $r3 = staticinvoke <ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.unidata.io.RandomAccessFile access$100(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)>($r2);

        $r4 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk delegate>;

        $l1 = $r4.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk: long filePos>;

        virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l1);

        $r5 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5tiledLayoutBB this$0>;

        $r6 = staticinvoke <ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.unidata.io.RandomAccessFile access$100(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)>($r5);

        virtualinvoke $r6.<ucar.unidata.io.RandomAccessFile: void readFully(byte[])>(r29);

        $r7 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5tiledLayoutBB this$0>;

        $r8 = staticinvoke <ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.nc2.iosp.hdf5.H5header$Filter[] access$200(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)>($r7);

        $i2 = lengthof $r8;

        i9 = $i2 - 1;

     label1:
        if i9 < 0 goto label7;

        $r12 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5tiledLayoutBB this$0>;

        $r13 = staticinvoke <ucar.nc2.iosp.hdf5.H5tiledLayoutBB: ucar.nc2.iosp.hdf5.H5header$Filter[] access$200(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)>($r12);

        r14 = $r13[i9];

        $r15 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk delegate>;

        $i3 = $r15.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk: int filterMask>;

        $z0 = virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: boolean isBitSet(int,int)>($i3, i9);

        if $z0 == 0 goto label2;

        $r22 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5tiledLayoutBB this$0>;

        $z1 = staticinvoke <ucar.nc2.iosp.hdf5.H5tiledLayoutBB: boolean access$300(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)>($r22);

        if $z1 == 0 goto label6;

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("skip for chunk ");

        $r26 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk delegate>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r28);

        goto label6;

     label2:
        $s4 = r14.<ucar.nc2.iosp.hdf5.H5header$Filter: short id>;

        if $s4 != 1 goto label3;

        r29 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: byte[] inflate(byte[])>(r29);

        goto label6;

     label3:
        $s5 = r14.<ucar.nc2.iosp.hdf5.H5header$Filter: short id>;

        $i10 = (int) $s5;

        if $i10 != 2 goto label4;

        $r21 = r14.<ucar.nc2.iosp.hdf5.H5header$Filter: int[] data>;

        $i8 = $r21[0];

        r29 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: byte[] shuffle(byte[],int)>(r29, $i8);

        goto label6;

     label4:
        $s6 = r14.<ucar.nc2.iosp.hdf5.H5header$Filter: short id>;

        $i11 = (int) $s6;

        if $i11 != 3 goto label5;

        r29 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: byte[] checkfletcher32(byte[])>(r29);

        goto label6;

     label5:
        $r32 = new java.lang.RuntimeException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown filter type=");

        $s7 = r14.<ucar.nc2.iosp.hdf5.H5header$Filter: short id>;

        $i12 = (int) $s7;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);

        throw $r32;

     label6:
        $i14 = (int) -1;

        i9 = i9 + $i14;

        goto label1;

     label7:
        $r9 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r29);

        $r10 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5tiledLayoutBB this$0>;

        $r11 = staticinvoke <ucar.nc2.iosp.hdf5.H5tiledLayoutBB: java.nio.ByteOrder access$400(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)>($r10);

        virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r11);

        return $r9;
    }

    private byte[] inflate(byte[]) throws java.io.IOException
    {
        byte[] r1, $r4;
        java.io.ByteArrayOutputStream $r3;
        java.util.zip.InflaterInputStream $r2;
        java.io.ByteArrayInputStream $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r13;
        boolean $z0;
        java.io.PrintStream $r8;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk r5;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB $r6;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12;

        r5 := @this: ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk;

        r1 := @parameter0: byte[];

        $r0 = new java.io.ByteArrayInputStream;

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

        $r2 = new java.util.zip.InflaterInputStream;

        specialinvoke $r2.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>($r0);

        $r3 = new java.io.ByteArrayOutputStream;

        $i0 = lengthof r1;

        $i1 = 8 * $i0;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>(int)>($i1);

        staticinvoke <ucar.nc2.util.IO: long copy(java.io.InputStream,java.io.OutputStream)>($r2, $r3);

        $r4 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r6 = r5.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5tiledLayoutBB this$0>;

        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5tiledLayoutBB: boolean access$300(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)>($r6);

        if $z0 == 0 goto label1;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" inflate bytes in= ");

        $i2 = lengthof r1;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes out= ");

        $i3 = lengthof $r4;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label1:
        return $r4;
    }

    private byte[] checkfletcher32(byte[]) throws java.io.IOException
    {
        byte[] r0, r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r10;
        boolean $z0;
        java.io.PrintStream $r5;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk r2;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB $r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9;

        r2 := @this: ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $i1 = $i0 - 4;

        r1 = newarray (byte)[$i1];

        $i2 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i2);

        $r3 = r2.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5tiledLayoutBB this$0>;

        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5tiledLayoutBB: boolean access$300(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)>($r3);

        if $z0 == 0 goto label1;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" checkfletcher32 bytes in= ");

        $i3 = lengthof r0;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes out= ");

        $i4 = lengthof r1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label1:
        return r1;
    }

    private byte[] shuffle(byte[], int) throws java.io.IOException
    {
        byte[] r2, r12;
        java.lang.AssertionError $r4;
        byte $b7;
        int[] r3;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, i13, i14, i15;
        java.lang.String $r11;
        boolean $z0, $z1;
        java.io.PrintStream $r6;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk r0;
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB $r1;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10;

        r0 := @this: ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: ucar.nc2.iosp.hdf5.H5tiledLayoutBB this$0>;

        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5tiledLayoutBB: boolean access$300(ucar.nc2.iosp.hdf5.H5tiledLayoutBB)>($r1);

        if $z0 == 0 goto label1;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" shuffle bytes in= ");

        $i12 = lengthof r2;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" n= ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label1:
        $z1 = <ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $i10 = lengthof r2;

        $i11 = $i10 % i0;

        if $i11 == 0 goto label2;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        if i0 > 1 goto label3;

        return r2;

     label3:
        $i1 = lengthof r2;

        i2 = $i1 / i0;

        r3 = newarray (int)[i0];

        i13 = 0;

     label4:
        if i13 >= i0 goto label5;

        $i9 = i13 * i2;

        r3[i13] = $i9;

        i13 = i13 + 1;

        goto label4;

     label5:
        $i3 = lengthof r2;

        r12 = newarray (byte)[$i3];

        i14 = 0;

     label6:
        if i14 >= i2 goto label9;

        i15 = 0;

     label7:
        if i15 >= i0 goto label8;

        $i4 = i14 * i0;

        $i8 = $i4 + i15;

        $i5 = r3[i15];

        $i6 = i14 + $i5;

        $b7 = r2[$i6];

        r12[$i8] = $b7;

        i15 = i15 + 1;

        goto label7;

     label8:
        i14 = i14 + 1;

        goto label6;

     label9:
        return r12;
    }

    boolean isBitSet(int, int)
    {
        ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk r0;
        int i0, i1, $i2, $i3;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 >>> i1;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/iosp/hdf5/H5tiledLayoutBB;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.iosp.hdf5.H5tiledLayoutBB$DataChunk: boolean $assertionsDisabled> = $z1;

        return;
    }
}
