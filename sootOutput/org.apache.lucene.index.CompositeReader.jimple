public abstract class org.apache.lucene.index.CompositeReader extends org.apache.lucene.index.IndexReader
{
    private volatile org.apache.lucene.index.CompositeReaderContext readerContext;
    static final boolean $assertionsDisabled;

    protected void <init>()
    {
        org.apache.lucene.index.CompositeReader r0;

        r0 := @this: org.apache.lucene.index.CompositeReader;

        specialinvoke r0.<org.apache.lucene.index.IndexReader: void <init>()>();

        r0.<org.apache.lucene.index.CompositeReader: org.apache.lucene.index.CompositeReaderContext readerContext> = null;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.index.CompositeReader r1;
        java.lang.AssertionError $r7;
        java.util.List $r2;
        int $i0, i1;
        java.lang.StringBuilder $r0, $r5;
        java.lang.Object $r4, $r6;
        java.lang.Class r9;
        java.lang.String $r3, $r8;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.lucene.index.CompositeReader;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

     label1:
        if r9 == null goto label3;

        $z2 = virtualinvoke r9.<java.lang.Class: boolean isAnonymousClass()>();

        if $z2 != 0 goto label2;

        $r8 = virtualinvoke r9.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        goto label3;

     label2:
        r9 = virtualinvoke r9.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r2 = virtualinvoke r1.<org.apache.lucene.index.CompositeReader: java.util.List getSequentialSubReaders()>();

        $z0 = <org.apache.lucene.index.CompositeReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        if $r2 != null goto label4;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label4:
        $z1 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label6;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        i1 = 1;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label5:
        if i1 >= $i0 goto label6;

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        i1 = i1 + 1;

        goto label5;

     label6:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    protected abstract java.util.List getSequentialSubReaders();

    public final org.apache.lucene.index.CompositeReaderContext getContext()
    {
        java.util.List $r3;
        org.apache.lucene.index.CompositeReader r0;
        java.lang.AssertionError $r4;
        org.apache.lucene.index.CompositeReaderContext $r1, $r2, $r5;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.CompositeReader;

        virtualinvoke r0.<org.apache.lucene.index.CompositeReader: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.index.CompositeReader: org.apache.lucene.index.CompositeReaderContext readerContext>;

        if $r1 != null goto label2;

        $z0 = <org.apache.lucene.index.CompositeReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r0.<org.apache.lucene.index.CompositeReader: java.util.List getSequentialSubReaders()>();

        if $r3 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r2 = staticinvoke <org.apache.lucene.index.CompositeReaderContext: org.apache.lucene.index.CompositeReaderContext create(org.apache.lucene.index.CompositeReader)>(r0);

        r0.<org.apache.lucene.index.CompositeReader: org.apache.lucene.index.CompositeReaderContext readerContext> = $r2;

     label2:
        $r5 = r0.<org.apache.lucene.index.CompositeReader: org.apache.lucene.index.CompositeReaderContext readerContext>;

        return $r5;
    }

    public volatile org.apache.lucene.index.IndexReaderContext getContext()
    {
        org.apache.lucene.index.CompositeReader r0;
        org.apache.lucene.index.CompositeReaderContext $r1;

        r0 := @this: org.apache.lucene.index.CompositeReader;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.CompositeReader: org.apache.lucene.index.CompositeReaderContext getContext()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/CompositeReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.CompositeReader: boolean $assertionsDisabled> = $z1;

        return;
    }
}
