class org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3 extends java.lang.Object implements org.waveprotocol.wave.model.util.ReadableStringMap$ProcV
{
    int i;
    final org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet[] val$changes;
    final org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder this$0;

    void <init>(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder, org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet[])
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder r1;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet[] r2;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3 r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet[];

        r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder this$0> = r1;

        r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet[] val$changes> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3: int i> = 0;

        return;
    }

    public void apply(java.lang.String, org.waveprotocol.wave.model.util.Pair)
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet[] $r8;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3 r0;
        org.waveprotocol.wave.model.util.Pair r3;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r4, $r5;
        java.lang.String r2, $r6, $r7;

        r0 := @this: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.waveprotocol.wave.model.util.Pair;

        $r8 = r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet[] val$changes>;

        $i0 = r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3: int i>;

        $r1 = new org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet;

        $r4 = r3.<org.waveprotocol.wave.model.util.Pair: java.lang.Object first>;

        $r7 = (java.lang.String) $r4;

        $r5 = r3.<org.waveprotocol.wave.model.util.Pair: java.lang.Object second>;

        $r6 = (java.lang.String) $r5;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r2, $r7, $r6);

        $r8[$i0] = $r1;

        $i1 = r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3: int i>;

        $i2 = $i1 + 1;

        r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3: int i> = $i2;

        return;
    }

    public volatile void apply(java.lang.String, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3 r0;
        java.lang.Object r2;
        java.lang.String r1;
        org.waveprotocol.wave.model.util.Pair $r3;

        r0 := @this: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = (org.waveprotocol.wave.model.util.Pair) r2;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$3: void apply(java.lang.String,org.waveprotocol.wave.model.util.Pair)>(r1, $r3);

        return;
    }
}
