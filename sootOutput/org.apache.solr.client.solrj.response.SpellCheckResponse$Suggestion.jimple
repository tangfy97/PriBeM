public class org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion extends java.lang.Object
{
    private java.lang.String token;
    private int numFound;
    private int startOffset;
    private int endOffset;
    private int originalFrequency;
    private java.util.List alternatives;
    private java.util.List alternativeFrequencies;

    public void <init>(java.lang.String, org.apache.solr.common.util.NamedList)
    {
        java.lang.Integer $r23, $r25, $r27, $r29, $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.List r11, $r12, $r18, $r21;
        org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion r0;
        java.util.ArrayList $r1, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String r2, $r4, $r5, $r6, $r7, $r8, $r9, $r20;
        java.util.Iterator $r15;
        org.apache.solr.common.util.NamedList r3, r17;
        java.lang.Object $r10, $r13, $r16, $r19, $r22, $r24, $r26, $r28, $r30;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.solr.common.util.NamedList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: java.util.List alternatives> = $r1;

        r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: java.lang.String token> = r2;

        i6 = 0;

     label01:
        $i0 = virtualinvoke r3.<org.apache.solr.common.util.NamedList: int size()>();

        if i6 >= $i0 goto label10;

        $r4 = virtualinvoke r3.<org.apache.solr.common.util.NamedList: java.lang.String getName(int)>(i6);

        $r5 = "numFound";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label02;

        $r30 = virtualinvoke r3.<org.apache.solr.common.util.NamedList: java.lang.Object getVal(int)>(i6);

        $r31 = (java.lang.Integer) $r30;

        $i5 = virtualinvoke $r31.<java.lang.Integer: int intValue()>();

        r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: int numFound> = $i5;

        goto label09;

     label02:
        $r6 = "startOffset";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label03;

        $r28 = virtualinvoke r3.<org.apache.solr.common.util.NamedList: java.lang.Object getVal(int)>(i6);

        $r29 = (java.lang.Integer) $r28;

        $i4 = virtualinvoke $r29.<java.lang.Integer: int intValue()>();

        r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: int startOffset> = $i4;

        goto label09;

     label03:
        $r7 = "endOffset";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label04;

        $r26 = virtualinvoke r3.<org.apache.solr.common.util.NamedList: java.lang.Object getVal(int)>(i6);

        $r27 = (java.lang.Integer) $r26;

        $i3 = virtualinvoke $r27.<java.lang.Integer: int intValue()>();

        r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: int endOffset> = $i3;

        goto label09;

     label04:
        $r8 = "origFreq";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z3 == 0 goto label05;

        $r24 = virtualinvoke r3.<org.apache.solr.common.util.NamedList: java.lang.Object getVal(int)>(i6);

        $r25 = (java.lang.Integer) $r24;

        $i2 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();

        r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: int originalFrequency> = $i2;

        goto label09;

     label05:
        $r9 = "suggestion";

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z4 == 0 goto label09;

        $r10 = virtualinvoke r3.<org.apache.solr.common.util.NamedList: java.lang.Object getVal(int)>(i6);

        r11 = (java.util.List) $r10;

        $i1 = interfaceinvoke r11.<java.util.List: int size()>();

        if $i1 <= 0 goto label08;

        $r13 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(0);

        $z5 = $r13 instanceof org.apache.solr.common.util.NamedList;

        if $z5 == 0 goto label08;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: java.util.List alternativeFrequencies> = $r14;

        $r15 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z6 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label07;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.apache.solr.common.util.NamedList) $r16;

        $r18 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: java.util.List alternatives>;

        $r19 = virtualinvoke r17.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("word");

        $r20 = (java.lang.String) $r19;

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r21 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: java.util.List alternativeFrequencies>;

        $r22 = virtualinvoke r17.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("freq");

        $r23 = (java.lang.Integer) $r22;

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r23);

        goto label06;

     label07:
        goto label09;

     label08:
        $r12 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: java.util.List alternatives>;

        interfaceinvoke $r12.<java.util.List: boolean addAll(java.util.Collection)>(r11);

     label09:
        i6 = i6 + 1;

        goto label01;

     label10:
        return;
    }

    public java.lang.String getToken()
    {
        java.lang.String $r1;
        org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion r0;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion;

        $r1 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: java.lang.String token>;

        return $r1;
    }

    public int getNumFound()
    {
        int $i0;
        org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion r0;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion;

        $i0 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: int numFound>;

        return $i0;
    }

    public int getStartOffset()
    {
        int $i0;
        org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion r0;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion;

        $i0 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: int startOffset>;

        return $i0;
    }

    public int getEndOffset()
    {
        int $i0;
        org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion r0;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion;

        $i0 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: int endOffset>;

        return $i0;
    }

    public int getOriginalFrequency()
    {
        int $i0;
        org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion r0;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion;

        $i0 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: int originalFrequency>;

        return $i0;
    }

    public java.util.List getAlternatives()
    {
        java.util.List $r1;
        org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion r0;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion;

        $r1 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: java.util.List alternatives>;

        return $r1;
    }

    public java.util.List getAlternativeFrequencies()
    {
        java.util.List $r1;
        org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion r0;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion;

        $r1 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: java.util.List alternativeFrequencies>;

        return $r1;
    }

    public java.util.List getSuggestions()
    {
        java.util.List $r1;
        org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion r0;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion;

        $r1 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: java.util.List alternatives>;

        return $r1;
    }

    public java.util.List getSuggestionFrequencies()
    {
        java.util.List $r1;
        org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion r0;

        r0 := @this: org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion;

        $r1 = r0.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: java.util.List alternativeFrequencies>;

        return $r1;
    }
}
