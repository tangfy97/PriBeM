public class org.apache.batik.svggen.SVGCSSStyler extends java.lang.Object implements org.apache.batik.svggen.SVGSyntax
{
    private static final char CSS_PROPERTY_VALUE_SEPARATOR;
    private static final char CSS_RULE_SEPARATOR;
    private static final char SPACE;

    public void <init>()
    {
        org.apache.batik.svggen.SVGCSSStyler r0;

        r0 := @this: org.apache.batik.svggen.SVGCSSStyler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void style(org.w3c.dom.Node)
    {
        org.w3c.dom.Attr r14;
        java.util.ArrayList $r4;
        java.lang.StringBuffer $r3;
        org.w3c.dom.Node r0, $r2, $r5;
        int $i0, $i1, $i2, i3, i4, $i5, i6;
        org.w3c.dom.NamedNodeMap $r1;
        java.lang.String $r6, $r8, $r9, $r10, $r12;
        boolean $z0;
        org.w3c.dom.NodeList $r15;
        java.util.Set $r7;
        org.w3c.dom.Element r13;
        java.lang.Object $r11;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        if $r1 == null goto label6;

        r13 = (org.w3c.dom.Element) r0;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $i0 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: int getLength()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i3 = 0;

        goto label3;

     label1:
        $r5 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i3);

        r14 = (org.w3c.dom.Attr) $r5;

        $r6 = interfaceinvoke r14.<org.w3c.dom.Attr: java.lang.String getName()>();

        $r7 = <org.apache.batik.svggen.SVGStylingAttributes: java.util.Set set>;

        $z0 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r8 = interfaceinvoke r14.<org.w3c.dom.Attr: java.lang.String getValue()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        i3 = i3 + 1;

     label3:
        if i3 < $i0 goto label1;

        $i1 = virtualinvoke $r3.<java.lang.StringBuffer: int length()>();

        if $i1 <= 0 goto label6;

        $r9 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke r13.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "style", $r10);

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        i4 = 0;

        goto label5;

     label4:
        $r11 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i4);

        $r12 = (java.lang.String) $r11;

        interfaceinvoke r13.<org.w3c.dom.Element: void removeAttribute(java.lang.String)>($r12);

        i4 = i4 + 1;

     label5:
        if i4 < $i2 goto label4;

     label6:
        $r15 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        $i5 = interfaceinvoke $r15.<org.w3c.dom.NodeList: int getLength()>();

        i6 = 0;

        goto label8;

     label7:
        $r2 = interfaceinvoke $r15.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i6);

        staticinvoke <org.apache.batik.svggen.SVGCSSStyler: void style(org.w3c.dom.Node)>($r2);

        i6 = i6 + 1;

     label8:
        if i6 < $i5 goto label7;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.batik.svggen.SVGCSSStyler: char SPACE> = 32;

        <org.apache.batik.svggen.SVGCSSStyler: char CSS_RULE_SEPARATOR> = 59;

        <org.apache.batik.svggen.SVGCSSStyler: char CSS_PROPERTY_VALUE_SEPARATOR> = 58;

        return;
    }
}
