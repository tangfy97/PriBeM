final class org.apache.lucene.index.DocumentsWriter extends java.lang.Object
{
    org.apache.lucene.store.Directory directory;
    private volatile boolean closed;
    final org.apache.lucene.util.InfoStream infoStream;
    org.apache.lucene.search.similarities.Similarity similarity;
    java.util.List newFiles;
    final org.apache.lucene.index.IndexWriter indexWriter;
    private java.util.concurrent.atomic.AtomicInteger numDocsInRAM;
    volatile org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue;
    private final org.apache.lucene.index.DocumentsWriterFlushQueue ticketQueue;
    private volatile boolean pendingChangesInCurrentFullFlush;
    private java.util.Collection abortedFiles;
    final org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain chain;
    final org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool;
    final org.apache.lucene.index.FlushPolicy flushPolicy;
    final org.apache.lucene.index.DocumentsWriterFlushControl flushControl;
    final org.apache.lucene.codecs.Codec codec;
    private volatile org.apache.lucene.index.DocumentsWriterDeleteQueue currentFullFlushDelQueue;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.lucene.codecs.Codec, org.apache.lucene.index.LiveIndexWriterConfig, org.apache.lucene.store.Directory, org.apache.lucene.index.IndexWriter, org.apache.lucene.index.FieldInfos$FieldNumbers, org.apache.lucene.index.BufferedDeletesStream)
    {
        org.apache.lucene.index.LiveIndexWriterConfig r7;
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r2;
        java.lang.AssertionError $r18;
        org.apache.lucene.index.DocumentsWriterFlushControl $r16;
        org.apache.lucene.index.DocumentsWriter r0;
        org.apache.lucene.index.FieldInfos$FieldNumbers r12;
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.apache.lucene.store.Directory r5;
        org.apache.lucene.search.similarities.Similarity $r9;
        boolean $z0;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r10, $r13;
        org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain $r11;
        org.apache.lucene.index.IndexWriter r6;
        org.apache.lucene.index.DocumentsWriterFlushQueue $r3;
        org.apache.lucene.util.InfoStream $r8;
        org.apache.lucene.index.BufferedDeletesStream r19;
        org.apache.lucene.codecs.Codec r4;
        org.apache.lucene.index.FlushPolicy $r14, $r15, $r17;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        r4 := @parameter0: org.apache.lucene.codecs.Codec;

        r7 := @parameter1: org.apache.lucene.index.LiveIndexWriterConfig;

        r5 := @parameter2: org.apache.lucene.store.Directory;

        r6 := @parameter3: org.apache.lucene.index.IndexWriter;

        r12 := @parameter4: org.apache.lucene.index.FieldInfos$FieldNumbers;

        r19 := @parameter5: org.apache.lucene.index.BufferedDeletesStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<org.apache.lucene.index.DocumentsWriter: java.util.concurrent.atomic.AtomicInteger numDocsInRAM> = $r1;

        $r2 = new org.apache.lucene.index.DocumentsWriterDeleteQueue;

        specialinvoke $r2.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void <init>()>();

        r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue> = $r2;

        $r3 = new org.apache.lucene.index.DocumentsWriterFlushQueue;

        specialinvoke $r3.<org.apache.lucene.index.DocumentsWriterFlushQueue: void <init>()>();

        r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushQueue ticketQueue> = $r3;

        r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue currentFullFlushDelQueue> = null;

        r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.codecs.Codec codec> = r4;

        r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.store.Directory directory> = r5;

        r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter> = r6;

        $r8 = virtualinvoke r7.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.util.InfoStream getInfoStream()>();

        r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream> = $r8;

        $r9 = virtualinvoke r7.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.search.similarities.Similarity getSimilarity()>();

        r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.search.similarities.Similarity similarity> = $r9;

        $r10 = virtualinvoke r7.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.DocumentsWriterPerThreadPool getIndexerThreadPool()>();

        r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool> = $r10;

        $r11 = virtualinvoke r7.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain getIndexingChain()>();

        r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain chain> = $r11;

        $r13 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        virtualinvoke $r13.<org.apache.lucene.index.DocumentsWriterPerThreadPool: void initialize(org.apache.lucene.index.DocumentsWriter,org.apache.lucene.index.FieldInfos$FieldNumbers,org.apache.lucene.index.LiveIndexWriterConfig)>(r0, r12, r7);

        $r14 = virtualinvoke r7.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.index.FlushPolicy getFlushPolicy()>();

        r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.FlushPolicy flushPolicy> = $r14;

        $z0 = <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r17 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.FlushPolicy flushPolicy>;

        if $r17 != null goto label1;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label1:
        $r15 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.FlushPolicy flushPolicy>;

        virtualinvoke $r15.<org.apache.lucene.index.FlushPolicy: void init(org.apache.lucene.index.DocumentsWriter)>(r0);

        $r16 = new org.apache.lucene.index.DocumentsWriterFlushControl;

        specialinvoke $r16.<org.apache.lucene.index.DocumentsWriterFlushControl: void <init>(org.apache.lucene.index.DocumentsWriter,org.apache.lucene.index.LiveIndexWriterConfig)>(r0, r7);

        r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl> = $r16;

        return;
    }

    synchronized transient void deleteQueries(org.apache.lucene.search.Query[]) throws java.io.IOException
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r2, $r5;
        org.apache.lucene.index.DocumentsWriterFlushControl $r3, $r4;
        org.apache.lucene.index.DocumentsWriter r0;
        org.apache.lucene.search.Query[] r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        r1 := @parameter0: org.apache.lucene.search.Query[];

        $r2 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void addDelete(org.apache.lucene.search.Query[])>(r1);

        $r3 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriterFlushControl: void doOnDelete()>();

        $r4 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $z0 = virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean doApplyAllDeletes()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: void applyAllDeletes(org.apache.lucene.index.DocumentsWriterDeleteQueue)>($r5);

     label1:
        return;
    }

    synchronized transient void deleteTerms(org.apache.lucene.index.Term[]) throws java.io.IOException
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue r1;
        org.apache.lucene.index.Term[] r2;
        org.apache.lucene.index.DocumentsWriterFlushControl $r3, $r4;
        org.apache.lucene.index.DocumentsWriter r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        r2 := @parameter0: org.apache.lucene.index.Term[];

        r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        virtualinvoke r1.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void addDelete(org.apache.lucene.index.Term[])>(r2);

        $r3 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriterFlushControl: void doOnDelete()>();

        $r4 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $z0 = virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean doApplyAllDeletes()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: void applyAllDeletes(org.apache.lucene.index.DocumentsWriterDeleteQueue)>(r1);

     label1:
        return;
    }

    org.apache.lucene.index.DocumentsWriterDeleteQueue currentDeleteSession()
    {
        org.apache.lucene.index.DocumentsWriter r0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r1;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        return $r1;
    }

    private void applyAllDeletes(org.apache.lucene.index.DocumentsWriterDeleteQueue) throws java.io.IOException
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue r0;
        org.apache.lucene.index.DocumentsWriterFlushControl $r2;
        org.apache.lucene.index.DocumentsWriter r1;
        org.apache.lucene.index.IndexWriter $r4, $r5;
        org.apache.lucene.index.DocumentsWriterFlushQueue $r3;
        java.util.concurrent.atomic.AtomicInteger $r6;
        boolean $z0;

        r1 := @this: org.apache.lucene.index.DocumentsWriter;

        r0 := @parameter0: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        if r0 == null goto label1;

        $r2 = r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $z0 = virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean isFullFlush()>();

        if $z0 != 0 goto label1;

        $r3 = r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushQueue ticketQueue>;

        virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriterFlushQueue: void addDeletesAndPurge(org.apache.lucene.index.DocumentsWriter,org.apache.lucene.index.DocumentsWriterDeleteQueue)>(r1, r0);

     label1:
        $r4 = r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter>;

        virtualinvoke $r4.<org.apache.lucene.index.IndexWriter: void applyAllDeletes()>();

        $r5 = r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter>;

        $r6 = $r5.<org.apache.lucene.index.IndexWriter: java.util.concurrent.atomic.AtomicInteger flushCount>;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        return;
    }

    int getNumDocs()
    {
        int $i0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.apache.lucene.index.DocumentsWriter r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: java.util.concurrent.atomic.AtomicInteger numDocsInRAM>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    java.util.Collection abortedFiles()
    {
        org.apache.lucene.index.DocumentsWriter r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: java.util.Collection abortedFiles>;

        return $r1;
    }

    private void ensureOpen() throws org.apache.lucene.store.AlreadyClosedException
    {
        org.apache.lucene.store.AlreadyClosedException $r1;
        org.apache.lucene.index.DocumentsWriter r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        $z0 = r0.<org.apache.lucene.index.DocumentsWriter: boolean closed>;

        if $z0 == 0 goto label1;

        $r1 = new org.apache.lucene.store.AlreadyClosedException;

        specialinvoke $r1.<org.apache.lucene.store.AlreadyClosedException: void <init>(java.lang.String)>("this IndexWriter is closed");

        throw $r1;

     label1:
        return;
    }

    synchronized void abort()
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r1;
        org.apache.lucene.index.DocumentsWriter r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Collection $r10, $r27;
        org.apache.lucene.util.InfoStream $r2, $r6, $r8, $r21, $r23, $r25;
        java.lang.StringBuilder $r7, $r9, $r11, $r12, $r13, $r24, $r26, $r28, $r29, $r30;
        java.lang.Throwable $r22, $r32, $r33;
        java.lang.AssertionError $r17;
        org.apache.lucene.index.DocumentsWriterFlushControl $r4, $r5, $r20, $r35;
        int $i0, i1;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState $r16;
        java.lang.String $r14, $r31;
        org.apache.lucene.index.DocumentsWriterPerThread $r18, $r19, $r34;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r3, $r15;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

     label01:
        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void clear()>();

        $r2 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z0 = virtualinvoke $r2.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z0 == 0 goto label02;

        $r21 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        virtualinvoke $r21.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", "abort");

     label02:
        $r3 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $i0 = virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriterPerThreadPool: int getActiveThreadState()>();

        i1 = 0;

     label03:
        if i1 >= $i0 goto label15;

        $r15 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $r16 = virtualinvoke $r15.<org.apache.lucene.index.DocumentsWriterPerThreadPool: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState getThreadState(int)>(i1);

        virtualinvoke $r16.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void lock()>();

     label04:
        $z2 = virtualinvoke $r16.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isActive()>();

        if $z2 == 0 goto label10;

     label05:
        $r18 = $r16.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        virtualinvoke $r18.<org.apache.lucene.index.DocumentsWriterPerThread: void abort()>();

     label06:
        $r19 = $r16.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        virtualinvoke $r19.<org.apache.lucene.index.DocumentsWriterPerThread: boolean checkAndResetHasAborted()>();

        $r20 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r20.<org.apache.lucene.index.DocumentsWriterFlushControl: void doOnAbort(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>($r16);

        goto label09;

     label07:
        $r33 := @caughtexception;

     label08:
        $r34 = $r16.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        virtualinvoke $r34.<org.apache.lucene.index.DocumentsWriterPerThread: boolean checkAndResetHasAborted()>();

        $r35 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r35.<org.apache.lucene.index.DocumentsWriterFlushControl: void doOnAbort(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>($r16);

        throw $r33;

     label09:
        goto label11;

     label10:
        $z3 = <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled>;

        if $z3 != 0 goto label11;

        $z4 = r0.<org.apache.lucene.index.DocumentsWriter: boolean closed>;

        if $z4 != 0 goto label11;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label11:
        virtualinvoke $r16.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

        goto label14;

     label12:
        $r32 := @caughtexception;

     label13:
        virtualinvoke $r16.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

        throw $r32;

     label14:
        i1 = i1 + 1;

        goto label03;

     label15:
        $r4 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterFlushControl: void abortPendingFlushes()>();

        $r5 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r5.<org.apache.lucene.index.DocumentsWriterFlushControl: void waitForFlush()>();

     label16:
        $r6 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z1 = virtualinvoke $r6.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z1 == 0 goto label20;

        $r8 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("done abort; abortedFiles=");

        $r10 = r0.<org.apache.lucene.index.DocumentsWriter: java.util.Collection abortedFiles>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" success=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", $r14);

        goto label20;

     label17:
        $r22 := @caughtexception;

     label18:
        $r23 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z5 = virtualinvoke $r23.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z5 == 0 goto label19;

        $r25 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("done abort; abortedFiles=");

        $r27 = r0.<org.apache.lucene.index.DocumentsWriter: java.util.Collection abortedFiles>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" success=");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", $r31);

     label19:
        throw $r22;

     label20:
        return;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label04 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label01 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    synchronized void lockAndAbortAll()
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r2, $r4;
        org.apache.lucene.index.DocumentsWriter r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.lucene.index.IndexWriter $r19;
        org.apache.lucene.util.InfoStream $r1, $r7, $r9, $r18, $r22, $r24;
        java.lang.StringBuilder $r8, $r10, $r11, $r23, $r25, $r26;
        java.lang.Throwable $r21, $r28;
        java.lang.AssertionError $r20;
        org.apache.lucene.index.DocumentsWriterFlushControl $r5, $r6, $r17, $r30;
        int $i0, i1;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState $r14;
        java.lang.String $r12, $r27;
        org.apache.lucene.index.DocumentsWriterPerThread $r15, $r16, $r29;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r3, $r13;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        $z0 = <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r19 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter>;

        $z4 = virtualinvoke $r19.<org.apache.lucene.index.IndexWriter: boolean holdsFullFlushLock()>();

        if $z4 != 0 goto label01;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label01:
        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z1 = virtualinvoke $r1.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z1 == 0 goto label02;

        $r18 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        virtualinvoke $r18.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", "lockAndAbortAll");

     label02:
        $r2 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void clear()>();

        $r3 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $i0 = virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriterPerThreadPool: int getMaxThreadStates()>();

        i1 = 0;

     label03:
        if i1 >= $i0 goto label09;

        $r13 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $r14 = virtualinvoke $r13.<org.apache.lucene.index.DocumentsWriterPerThreadPool: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState getThreadState(int)>(i1);

        virtualinvoke $r14.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void lock()>();

        $z3 = virtualinvoke $r14.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isActive()>();

        if $z3 == 0 goto label08;

     label04:
        $r15 = $r14.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        virtualinvoke $r15.<org.apache.lucene.index.DocumentsWriterPerThread: void abort()>();

     label05:
        $r16 = $r14.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        virtualinvoke $r16.<org.apache.lucene.index.DocumentsWriterPerThread: boolean checkAndResetHasAborted()>();

        $r17 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r17.<org.apache.lucene.index.DocumentsWriterFlushControl: void doOnAbort(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>($r14);

        goto label08;

     label06:
        $r28 := @caughtexception;

     label07:
        $r29 = $r14.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        virtualinvoke $r29.<org.apache.lucene.index.DocumentsWriterPerThread: boolean checkAndResetHasAborted()>();

        $r30 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r30.<org.apache.lucene.index.DocumentsWriterFlushControl: void doOnAbort(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>($r14);

        throw $r28;

     label08:
        i1 = i1 + 1;

        goto label03;

     label09:
        $r4 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void clear()>();

        $r5 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r5.<org.apache.lucene.index.DocumentsWriterFlushControl: void abortPendingFlushes()>();

        $r6 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r6.<org.apache.lucene.index.DocumentsWriterFlushControl: void waitForFlush()>();

     label10:
        $r7 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z2 = virtualinvoke $r7.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z2 == 0 goto label11;

        $r9 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finished lockAndAbortAll success=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", $r12);

     label11:
        if 1 != 0 goto label16;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriter: void unlockAllAfterAbortAll()>();

        goto label16;

     label12:
        $r21 := @caughtexception;

     label13:
        $r22 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z5 = virtualinvoke $r22.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z5 == 0 goto label14;

        $r24 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finished lockAndAbortAll success=");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", $r27);

     label14:
        if 0 != 0 goto label15;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriter: void unlockAllAfterAbortAll()>();

     label15:
        throw $r21;

     label16:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label02 to label10 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    final synchronized void unlockAllAfterAbortAll()
    {
        java.lang.Throwable $r8;
        java.lang.AssertionError $r7;
        org.apache.lucene.index.DocumentsWriter r0;
        int $i0, i1;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState $r4;
        java.lang.String $r15, $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r2, $r3;
        org.apache.lucene.index.IndexWriter $r6;
        org.apache.lucene.util.InfoStream $r1, $r5, $r9, $r11;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r16;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        $z0 = <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r6 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter>;

        $z3 = virtualinvoke $r6.<org.apache.lucene.index.IndexWriter: boolean holdsFullFlushLock()>();

        if $z3 != 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z1 = virtualinvoke $r1.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z1 == 0 goto label2;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        virtualinvoke $r5.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", "unlockAll");

     label2:
        $r2 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $i0 = virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterPerThreadPool: int getMaxThreadStates()>();

        i1 = 0;

     label3:
        if i1 >= $i0 goto label8;

     label4:
        $r3 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriterPerThreadPool: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState getThreadState(int)>(i1);

        $z2 = virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isHeldByCurrentThread()>();

        if $z2 == 0 goto label5;

        virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        $r9 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z4 = virtualinvoke $r9.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z4 == 0 goto label7;

        $r11 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unlockAll: could not unlock state: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msg:");

        $r15 = virtualinvoke $r8.<java.lang.Throwable: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", $r17);

     label7:
        i1 = i1 + 1;

        goto label3;

     label8:
        return;

        catch java.lang.Throwable from label4 to label5 with label6;
    }

    boolean anyChanges()
    {
        org.apache.lucene.index.DocumentsWriter r0;
        java.util.concurrent.atomic.AtomicInteger $r2, $r7;
        int $i0, $i1;
        java.lang.String $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.lucene.index.DocumentsWriterFlushQueue $r3, $r12;
        org.apache.lucene.util.InfoStream $r1, $r5;
        java.lang.StringBuilder $r4, $r6, $r8, $r9, $r10, $r11, $r13, $r14, $r15;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("anyChanges? numDocsInRam=");

        $r7 = r0.<org.apache.lucene.index.DocumentsWriter: java.util.concurrent.atomic.AtomicInteger numDocsInRAM>;

        $i1 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deletes=");

        $z4 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriter: boolean anyDeletions()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasTickets:");

        $r12 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushQueue ticketQueue>;

        $z5 = virtualinvoke $r12.<org.apache.lucene.index.DocumentsWriterFlushQueue: boolean hasTickets()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pendingChangesInFullFlush: ");

        $z6 = r0.<org.apache.lucene.index.DocumentsWriter: boolean pendingChangesInCurrentFullFlush>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", $r16);

     label1:
        $r2 = r0.<org.apache.lucene.index.DocumentsWriter: java.util.concurrent.atomic.AtomicInteger numDocsInRAM>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i0 != 0 goto label2;

        $z1 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriter: boolean anyDeletions()>();

        if $z1 != 0 goto label2;

        $r3 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushQueue ticketQueue>;

        $z2 = virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriterFlushQueue: boolean hasTickets()>();

        if $z2 != 0 goto label2;

        $z3 = r0.<org.apache.lucene.index.DocumentsWriter: boolean pendingChangesInCurrentFullFlush>;

        if $z3 == 0 goto label3;

     label2:
        $z7 = 1;

        goto label4;

     label3:
        $z7 = 0;

     label4:
        return $z7;
    }

    public int getBufferedDeleteTermsSize()
    {
        int $i0;
        org.apache.lucene.index.DocumentsWriter r0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r1;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterDeleteQueue: int getBufferedDeleteTermsSize()>();

        return $i0;
    }

    public int getNumBufferedDeleteTerms()
    {
        int $i0;
        org.apache.lucene.index.DocumentsWriter r0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r1;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterDeleteQueue: int numGlobalTermDeletes()>();

        return $i0;
    }

    public boolean anyDeletions()
    {
        org.apache.lucene.index.DocumentsWriter r0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterDeleteQueue: boolean anyChanges()>();

        return $z0;
    }

    void close()
    {
        org.apache.lucene.index.DocumentsWriterFlushControl $r1;
        org.apache.lucene.index.DocumentsWriter r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        r0.<org.apache.lucene.index.DocumentsWriter: boolean closed> = 1;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterFlushControl: void setClosed()>();

        return;
    }

    private boolean preUpdate() throws java.io.IOException
    {
        org.apache.lucene.index.DocumentsWriterFlushControl $r1, $r6, $r9, $r10, $r12, $r13;
        org.apache.lucene.index.DocumentsWriter r0;
        int $i0, $i1;
        org.apache.lucene.index.DocumentsWriterPerThread $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        org.apache.lucene.util.InfoStream $r2, $r3, $r4, $r5, $r7, $r8;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: void ensureOpen()>();

        z6 = 0;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean anyStalledThreads()>();

        if $z0 != 0 goto label1;

        $r9 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $i0 = virtualinvoke $r9.<org.apache.lucene.index.DocumentsWriterFlushControl: int numQueuedFlushes()>();

        if $i0 <= 0 goto label5;

     label1:
        $r2 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z1 = virtualinvoke $r2.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z1 == 0 goto label2;

        $r8 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        virtualinvoke $r8.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", "DocumentsWriter has queued dwpt; will hijack this thread to flush pending segment(s)");

     label2:
        $r10 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $r11 = virtualinvoke $r10.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThread nextPendingFlush()>();

        if $r11 == null goto label3;

        $z5 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: boolean doFlush(org.apache.lucene.index.DocumentsWriterPerThread)>($r11);

        z6 = z6 | $z5;

        goto label2;

     label3:
        $r3 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z2 = virtualinvoke $r3.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z2 == 0 goto label4;

        $r6 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $z4 = virtualinvoke $r6.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean anyStalledThreads()>();

        if $z4 == 0 goto label4;

        $r7 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        virtualinvoke $r7.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", "WARNING DocumentsWriter has stalled threads; waiting");

     label4:
        $r12 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r12.<org.apache.lucene.index.DocumentsWriterFlushControl: void waitIfStalled()>();

        $r13 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $i1 = virtualinvoke $r13.<org.apache.lucene.index.DocumentsWriterFlushControl: int numQueuedFlushes()>();

        if $i1 != 0 goto label2;

        $r4 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z3 = virtualinvoke $r4.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z3 == 0 goto label5;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        virtualinvoke $r5.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", "continue indexing after helping out flushing DocumentsWriter is healthy");

     label5:
        return z6;
    }

    private boolean postUpdate(org.apache.lucene.index.DocumentsWriterPerThread, boolean) throws java.io.IOException
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r5;
        org.apache.lucene.index.DocumentsWriterFlushControl $r1, $r3;
        org.apache.lucene.index.DocumentsWriter r0;
        org.apache.lucene.index.DocumentsWriterPerThread r2, $r4;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        r2 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThread;

        z3 := @parameter1: boolean;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean doApplyAllDeletes()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: void applyAllDeletes(org.apache.lucene.index.DocumentsWriterDeleteQueue)>($r5);

     label1:
        if r2 == null goto label2;

        $z2 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: boolean doFlush(org.apache.lucene.index.DocumentsWriterPerThread)>(r2);

        z3 = z3 | $z2;

        goto label3;

     label2:
        $r3 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThread nextPendingFlush()>();

        if $r4 == null goto label3;

        $z1 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: boolean doFlush(org.apache.lucene.index.DocumentsWriterPerThread)>($r4);

        z3 = z3 | $z1;

     label3:
        return z3;
    }

    boolean updateDocuments(java.lang.Iterable, org.apache.lucene.analysis.Analyzer, org.apache.lucene.index.Term) throws java.io.IOException
    {
        java.lang.Throwable $r12, $r13;
        org.apache.lucene.index.Term r5;
        java.lang.AssertionError $r11;
        org.apache.lucene.index.DocumentsWriterFlushControl $r1, $r7, $r9, $r14;
        java.lang.Iterable r3;
        org.apache.lucene.index.DocumentsWriter r0;
        java.util.concurrent.atomic.AtomicInteger $r6;
        int $i0;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState $r2;
        org.apache.lucene.index.DocumentsWriterPerThread $r8, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.lucene.analysis.Analyzer r4;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        r3 := @parameter0: java.lang.Iterable;

        r4 := @parameter1: org.apache.lucene.analysis.Analyzer;

        r5 := @parameter2: org.apache.lucene.index.Term;

        $z0 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: boolean preUpdate()>();

        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState obtainAndLock()>();

     label01:
        $z1 = virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isActive()>();

        if $z1 != 0 goto label02;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: void ensureOpen()>();

        $z4 = <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled>;

        if $z4 != 0 goto label02;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>("perThread is not active but we are still open");

        throw $r11;

     label02:
        $r10 = $r2.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

     label03:
        $i0 = virtualinvoke $r10.<org.apache.lucene.index.DocumentsWriterPerThread: int updateDocuments(java.lang.Iterable,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.Term)>(r3, r4, r5);

        $r6 = r0.<org.apache.lucene.index.DocumentsWriter: java.util.concurrent.atomic.AtomicInteger numDocsInRAM>;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int addAndGet(int)>($i0);

     label04:
        $z2 = virtualinvoke $r10.<org.apache.lucene.index.DocumentsWriterPerThread: boolean checkAndResetHasAborted()>();

        if $z2 == 0 goto label08;

        $r9 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r9.<org.apache.lucene.index.DocumentsWriterFlushControl: void doOnAbort(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>($r2);

        goto label08;

     label05:
        $r13 := @caughtexception;

     label06:
        $z5 = virtualinvoke $r10.<org.apache.lucene.index.DocumentsWriterPerThread: boolean checkAndResetHasAborted()>();

        if $z5 == 0 goto label07;

        $r14 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r14.<org.apache.lucene.index.DocumentsWriterFlushControl: void doOnAbort(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>($r2);

     label07:
        throw $r13;

     label08:
        if r5 == null goto label09;

        $z6 = 1;

        goto label10;

     label09:
        $z6 = 0;

     label10:
        $r7 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $r8 = virtualinvoke $r7.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThread doAfterDocument(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState,boolean)>($r2, $z6);

     label11:
        virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

        goto label14;

     label12:
        $r12 := @caughtexception;

     label13:
        virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

        throw $r12;

     label14:
        $z3 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: boolean postUpdate(org.apache.lucene.index.DocumentsWriterPerThread,boolean)>($r8, $z0);

        return $z3;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    boolean updateDocument(java.lang.Iterable, org.apache.lucene.analysis.Analyzer, org.apache.lucene.index.Term) throws java.io.IOException
    {
        java.lang.Throwable $r12, $r13;
        java.lang.IllegalStateException $r11;
        org.apache.lucene.index.Term r6;
        org.apache.lucene.index.DocumentsWriterFlushControl $r1, $r8, $r10, $r14;
        java.lang.Iterable r4;
        org.apache.lucene.index.DocumentsWriter r0;
        java.util.concurrent.atomic.AtomicInteger $r7;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState $r2;
        org.apache.lucene.index.DocumentsWriterPerThread r3, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.lucene.analysis.Analyzer r5;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        r4 := @parameter0: java.lang.Iterable;

        r5 := @parameter1: org.apache.lucene.analysis.Analyzer;

        r6 := @parameter2: org.apache.lucene.index.Term;

        $z0 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: boolean preUpdate()>();

        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState obtainAndLock()>();

     label01:
        $z1 = virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: boolean isActive()>();

        if $z1 != 0 goto label02;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: void ensureOpen()>();

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("perThread is not active but we are still open");

        throw $r11;

     label02:
        r3 = $r2.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

     label03:
        virtualinvoke r3.<org.apache.lucene.index.DocumentsWriterPerThread: void updateDocument(java.lang.Iterable,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.Term)>(r4, r5, r6);

        $r7 = r0.<org.apache.lucene.index.DocumentsWriter: java.util.concurrent.atomic.AtomicInteger numDocsInRAM>;

        virtualinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

     label04:
        $z2 = virtualinvoke r3.<org.apache.lucene.index.DocumentsWriterPerThread: boolean checkAndResetHasAborted()>();

        if $z2 == 0 goto label08;

        $r10 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r10.<org.apache.lucene.index.DocumentsWriterFlushControl: void doOnAbort(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>($r2);

        goto label08;

     label05:
        $r13 := @caughtexception;

     label06:
        $z4 = virtualinvoke r3.<org.apache.lucene.index.DocumentsWriterPerThread: boolean checkAndResetHasAborted()>();

        if $z4 == 0 goto label07;

        $r14 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r14.<org.apache.lucene.index.DocumentsWriterFlushControl: void doOnAbort(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>($r2);

     label07:
        throw $r13;

     label08:
        if r6 == null goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        $r8 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $r9 = virtualinvoke $r8.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThread doAfterDocument(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState,boolean)>($r2, $z5);

     label11:
        virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

        goto label14;

     label12:
        $r12 := @caughtexception;

     label13:
        virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: void unlock()>();

        throw $r12;

     label14:
        $z3 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: boolean postUpdate(org.apache.lucene.index.DocumentsWriterPerThread,boolean)>($r9, $z0);

        return $z3;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private boolean doFlush(org.apache.lucene.index.DocumentsWriterPerThread) throws java.io.IOException
    {
        byte $b0, $b2;
        org.apache.lucene.index.DocumentsWriterFlushQueue $r14, $r20, $r21, $r43, $r46, $r49, $r50;
        org.apache.lucene.util.InfoStream $r4, $r7;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r27, $r29, $r30, $r32, $r33, $r35, $r52, $r54;
        java.lang.Throwable $r37, $r42;
        org.apache.lucene.index.LiveIndexWriterConfig $r2;
        long $l1, $l3;
        java.lang.AssertionError $r53;
        java.lang.String $r13, $r36;
        org.apache.lucene.index.DocumentsWriterPerThread r44;
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r51;
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r5, $r22, $r23, $r24, $r28, $r31;
        org.apache.lucene.index.DocumentsWriter r0;
        java.util.concurrent.atomic.AtomicInteger $r17, $r40;
        org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment $r48;
        org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket r45, $r47;
        boolean $z0, $z1, $z2, z3;
        org.apache.lucene.index.IndexWriter $r1, $r16, $r18, $r39, $r41;
        org.apache.lucene.index.DocumentsWriterFlushControl $r3, $r9, $r15, $r19, $r34, $r38;
        int $i4, $i5, $i6;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        r44 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThread;

        z3 = 0;

     label01:
        if r44 == null goto label14;

        z3 = 1;

        r45 = null;

     label02:
        $z1 = <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        $r22 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue currentFullFlushDelQueue>;

        if $r22 == null goto label03;

        $r24 = r44.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r23 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue currentFullFlushDelQueue>;

        if $r24 == $r23 goto label03;

        $r53 = new java.lang.AssertionError;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected: ");

        $r28 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue currentFullFlushDelQueue>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("but was: ");

        $r31 = r44.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r34 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $z2 = virtualinvoke $r34.<org.apache.lucene.index.DocumentsWriterFlushControl: boolean isFullFlush()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r53.<java.lang.AssertionError: void <init>(java.lang.Object)>($r36);

        throw $r53;

     label03:
        $r46 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushQueue ticketQueue>;

        $r47 = virtualinvoke $r46.<org.apache.lucene.index.DocumentsWriterFlushQueue: org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket addFlushTicket(org.apache.lucene.index.DocumentsWriterPerThread)>(r44);

        r45 = $r47;

        $r48 = virtualinvoke r44.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment flush()>();

        $r49 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushQueue ticketQueue>;

        virtualinvoke $r49.<org.apache.lucene.index.DocumentsWriterFlushQueue: void addSegment(org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket,org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment)>($r47, $r48);

     label04:
        if 1 != 0 goto label08;

        if $r47 == null goto label08;

        $r21 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushQueue ticketQueue>;

        virtualinvoke $r21.<org.apache.lucene.index.DocumentsWriterFlushQueue: void markTicketFailed(org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket)>($r47);

        goto label08;

     label05:
        $r42 := @caughtexception;

     label06:
        if 0 != 0 goto label07;

        if r45 == null goto label07;

        $r43 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushQueue ticketQueue>;

        virtualinvoke $r43.<org.apache.lucene.index.DocumentsWriterFlushQueue: void markTicketFailed(org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket)>(r45);

     label07:
        throw $r42;

     label08:
        $r50 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushQueue ticketQueue>;

        $i4 = virtualinvoke $r50.<org.apache.lucene.index.DocumentsWriterFlushQueue: int getTicketCount()>();

        $r51 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterPerThreadPool perThreadPool>;

        $i5 = virtualinvoke $r51.<org.apache.lucene.index.DocumentsWriterPerThreadPool: int getActiveThreadState()>();

        if $i4 < $i5 goto label09;

        $r20 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushQueue ticketQueue>;

        virtualinvoke $r20.<org.apache.lucene.index.DocumentsWriterFlushQueue: void forcePurge(org.apache.lucene.index.DocumentsWriter)>(r0);

        goto label10;

     label09:
        $r14 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushQueue ticketQueue>;

        virtualinvoke $r14.<org.apache.lucene.index.DocumentsWriterFlushQueue: void tryPurge(org.apache.lucene.index.DocumentsWriter)>(r0);

     label10:
        $r15 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r15.<org.apache.lucene.index.DocumentsWriterFlushControl: void doAfterFlush(org.apache.lucene.index.DocumentsWriterPerThread)>(r44);

        virtualinvoke r44.<org.apache.lucene.index.DocumentsWriterPerThread: boolean checkAndResetHasAborted()>();

        $r16 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter>;

        $r17 = $r16.<org.apache.lucene.index.IndexWriter: java.util.concurrent.atomic.AtomicInteger flushCount>;

        virtualinvoke $r17.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r18 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter>;

        virtualinvoke $r18.<org.apache.lucene.index.IndexWriter: void doAfterFlush()>();

        goto label13;

     label11:
        $r37 := @caughtexception;

     label12:
        $r38 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r38.<org.apache.lucene.index.DocumentsWriterFlushControl: void doAfterFlush(org.apache.lucene.index.DocumentsWriterPerThread)>(r44);

        virtualinvoke r44.<org.apache.lucene.index.DocumentsWriterPerThread: boolean checkAndResetHasAborted()>();

        $r39 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter>;

        $r40 = $r39.<org.apache.lucene.index.IndexWriter: java.util.concurrent.atomic.AtomicInteger flushCount>;

        virtualinvoke $r40.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r41 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter>;

        virtualinvoke $r41.<org.apache.lucene.index.IndexWriter: void doAfterFlush()>();

        throw $r37;

     label13:
        $r19 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        r44 = virtualinvoke $r19.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThread nextPendingFlush()>();

        goto label01;

     label14:
        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.IndexWriter: org.apache.lucene.index.LiveIndexWriterConfig getConfig()>();

        $d0 = virtualinvoke $r2.<org.apache.lucene.index.LiveIndexWriterConfig: double getRAMBufferSizeMB()>();

        $b0 = $d0 cmpl -1.0;

        if $b0 == 0 goto label16;

        $r3 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $l1 = virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriterFlushControl: long getDeleteBytesUsed()>();

        $d3 = (double) $l1;

        $d1 = 1048576.0 * $d0;

        $d2 = $d1 / 2.0;

        $b2 = $d3 cmpl $d2;

        $i6 = (int) $b2;

        if $i6 <= 0 goto label16;

        $r4 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z0 = virtualinvoke $r4.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z0 == 0 goto label15;

        $r7 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("force apply deletes bytesUsed=");

        $r9 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $l3 = virtualinvoke $r9.<org.apache.lucene.index.DocumentsWriterFlushControl: long getDeleteBytesUsed()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ramBuffer=");

        $d4 = 1048576.0 * $d0;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", $r13);

     label15:
        $r5 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: void applyAllDeletes(org.apache.lucene.index.DocumentsWriterDeleteQueue)>($r5);

     label16:
        return z3;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label02 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    void finishFlush(org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment, org.apache.lucene.index.FrozenBufferedDeletes) throws java.io.IOException
    {
        java.lang.AssertionError $r10;
        org.apache.lucene.index.DocumentsWriter r1;
        org.apache.lucene.index.IndexWriter $r3;
        org.apache.lucene.util.InfoStream $r4, $r6;
        org.apache.lucene.index.FrozenBufferedDeletes r2;
        org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment r0;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.lang.String $r9;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.lucene.index.DocumentsWriter;

        r0 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment;

        r2 := @parameter1: org.apache.lucene.index.FrozenBufferedDeletes;

        if r0 != null goto label2;

        $z0 = <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label1:
        if r2 == null goto label3;

        $z1 = virtualinvoke r2.<org.apache.lucene.index.FrozenBufferedDeletes: boolean any()>();

        if $z1 == 0 goto label3;

        $r3 = r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter>;

        virtualinvoke $r3.<org.apache.lucene.index.IndexWriter: void publishFrozenDeletes(org.apache.lucene.index.FrozenBufferedDeletes)>(r2);

        $r4 = r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z2 = virtualinvoke $r4.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z2 == 0 goto label3;

        $r6 = r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flush: push buffered deletes: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", $r9);

        goto label3;

     label2:
        specialinvoke r1.<org.apache.lucene.index.DocumentsWriter: void publishFlushedSegment(org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment,org.apache.lucene.index.FrozenBufferedDeletes)>(r0, r2);

     label3:
        return;
    }

    final void subtractFlushedNumDocs(int)
    {
        org.apache.lucene.index.DocumentsWriter r0;
        java.util.concurrent.atomic.AtomicInteger $r1, $r2, $r3;
        int i0, $i1, i2;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: java.util.concurrent.atomic.AtomicInteger numDocsInRAM>;

        i2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

     label1:
        $r2 = r0.<org.apache.lucene.index.DocumentsWriter: java.util.concurrent.atomic.AtomicInteger numDocsInRAM>;

        $i1 = i2 - i0;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>(i2, $i1);

        if $z0 != 0 goto label2;

        $r3 = r0.<org.apache.lucene.index.DocumentsWriter: java.util.concurrent.atomic.AtomicInteger numDocsInRAM>;

        i2 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        goto label1;

     label2:
        return;
    }

    private void publishFlushedSegment(org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment, org.apache.lucene.index.FrozenBufferedDeletes) throws java.io.IOException
    {
        org.apache.lucene.index.SegmentInfoPerCommit $r15, $r20;
        java.lang.AssertionError $r17, $r18;
        org.apache.lucene.index.DocumentsWriter r1;
        org.apache.lucene.index.FrozenBufferedDeletes r3, $r16;
        org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment r0;
        java.lang.String $r9, $r14;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.index.IndexWriter $r19;
        org.apache.lucene.util.InfoStream $r2, $r4, $r6, $r11;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r12, $r13;

        r1 := @this: org.apache.lucene.index.DocumentsWriter;

        r0 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment;

        r3 := @parameter1: org.apache.lucene.index.FrozenBufferedDeletes;

        $z0 = <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r0 != null goto label1;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label1:
        $z1 = <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r15 = r0.<org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment: org.apache.lucene.index.SegmentInfoPerCommit segmentInfo>;

        if $r15 != null goto label2;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label2:
        $r16 = r0.<org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment: org.apache.lucene.index.FrozenBufferedDeletes segmentDeletes>;

        $r2 = r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z2 = virtualinvoke $r2.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z2 == 0 goto label3;

        $r11 = r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("publishFlushedSegment seg-private deletes=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", $r14);

     label3:
        if $r16 == null goto label4;

        $r4 = r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z3 = virtualinvoke $r4.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z3 == 0 goto label4;

        $r6 = r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flush: push buffered seg private deletes: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", $r9);

     label4:
        $r19 = r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter>;

        $r20 = r0.<org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment: org.apache.lucene.index.SegmentInfoPerCommit segmentInfo>;

        virtualinvoke $r19.<org.apache.lucene.index.IndexWriter: void publishFlushedSegment(org.apache.lucene.index.SegmentInfoPerCommit,org.apache.lucene.index.FrozenBufferedDeletes,org.apache.lucene.index.FrozenBufferedDeletes)>($r20, $r16, r3);

        return;
    }

    private synchronized boolean setFlushingDeleteQueue(org.apache.lucene.index.DocumentsWriterDeleteQueue)
    {
        org.apache.lucene.index.DocumentsWriter r0;
        org.apache.lucene.index.DocumentsWriterDeleteQueue r1;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        r1 := @parameter0: org.apache.lucene.index.DocumentsWriterDeleteQueue;

        r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue currentFullFlushDelQueue> = r1;

        return 1;
    }

    final boolean flushAllThreads() throws java.io.IOException
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r5, $r18, $r19, $r21, $r31, $r33;
        org.apache.lucene.index.DocumentsWriter r0;
        java.lang.Thread $r13, $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, $z14;
        org.apache.lucene.index.DocumentsWriterFlushQueue $r4, $r8, $r10;
        org.apache.lucene.util.InfoStream $r1, $r9, $r12, $r25;
        java.lang.StringBuilder $r11, $r15, $r16, $r24, $r28, $r29;
        java.lang.Throwable $r32, $r35;
        java.lang.AssertionError $r6, $r7, $r20, $r22, $r23, $r34;
        org.apache.lucene.index.DocumentsWriterFlushControl $r2, $r3, $r36;
        java.lang.String $r14, $r17, $r27, $r30;
        org.apache.lucene.index.DocumentsWriterPerThread $r37;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z0 == 0 goto label01;

        $r25 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r27 = virtualinvoke $r26.<java.lang.Thread: java.lang.String getName()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startFullFlush");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", $r30);

     label01:
        entermonitor r0;

     label02:
        $z1 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriter: boolean anyChanges()>();

        r0.<org.apache.lucene.index.DocumentsWriter: boolean pendingChangesInCurrentFullFlush> = $z1;

        $r31 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r2 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterFlushControl: void markForFullFlush()>();

        $z2 = <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        $z11 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: boolean setFlushingDeleteQueue(org.apache.lucene.index.DocumentsWriterDeleteQueue)>($r31);

        if $z11 != 0 goto label03;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label03:
        exitmonitor r0;

     label04:
        goto label07;

     label05:
        $r35 := @caughtexception;

        exitmonitor r0;

     label06:
        throw $r35;

     label07:
        $z3 = <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled>;

        if $z3 != 0 goto label08;

        $r21 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue currentFullFlushDelQueue>;

        if $r21 != null goto label08;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label08:
        $z4 = <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled>;

        if $z4 != 0 goto label09;

        $r19 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue currentFullFlushDelQueue>;

        $r18 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        if $r19 != $r18 goto label09;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label09:
        z13 = 0;

     label10:
        $r36 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $r37 = virtualinvoke $r36.<org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThread nextPendingFlush()>();

        if $r37 == null goto label11;

        $z10 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: boolean doFlush(org.apache.lucene.index.DocumentsWriterPerThread)>($r37);

        z13 = z13 | $z10;

        goto label10;

     label11:
        $r3 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriterFlushControl: void waitForFlush()>();

        if z13 != 0 goto label13;

        $z8 = virtualinvoke $r31.<org.apache.lucene.index.DocumentsWriterDeleteQueue: boolean anyChanges()>();

        if $z8 == 0 goto label13;

        $r9 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z9 = virtualinvoke $r9.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z9 == 0 goto label12;

        $r12 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r14 = virtualinvoke $r13.<java.lang.Thread: java.lang.String getName()>();

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": flush naked frozen global deletes");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", $r17);

     label12:
        $r10 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushQueue ticketQueue>;

        virtualinvoke $r10.<org.apache.lucene.index.DocumentsWriterFlushQueue: void addDeletesAndPurge(org.apache.lucene.index.DocumentsWriter,org.apache.lucene.index.DocumentsWriterDeleteQueue)>(r0, $r31);

        goto label14;

     label13:
        $r4 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushQueue ticketQueue>;

        virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterFlushQueue: void forcePurge(org.apache.lucene.index.DocumentsWriter)>(r0);

     label14:
        $z14 = <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled>;

        if $z14 != 0 goto label16;

        $z6 = virtualinvoke $r31.<org.apache.lucene.index.DocumentsWriterDeleteQueue: boolean anyChanges()>();

        if $z6 != 0 goto label15;

        $r8 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushQueue ticketQueue>;

        $z7 = virtualinvoke $r8.<org.apache.lucene.index.DocumentsWriterFlushQueue: boolean hasTickets()>();

        if $z7 == 0 goto label16;

     label15:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label16:
        $z5 = <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled>;

        if $z5 != 0 goto label20;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue currentFullFlushDelQueue>;

        if $r31 == $r5 goto label20;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label17:
        $r32 := @caughtexception;

     label18:
        $z12 = <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled>;

        if $z12 != 0 goto label19;

        $r33 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue currentFullFlushDelQueue>;

        if $r31 == $r33 goto label19;

        $r34 = new java.lang.AssertionError;

        specialinvoke $r34.<java.lang.AssertionError: void <init>()>();

        throw $r34;

     label19:
        throw $r32;

     label20:
        return z13;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label10 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    final void finishFullFlush(boolean)
    {
        java.lang.Throwable $r13;
        java.lang.AssertionError $r4;
        org.apache.lucene.index.DocumentsWriterFlushControl $r2, $r3;
        org.apache.lucene.index.DocumentsWriter r0;
        java.lang.Thread $r7;
        java.lang.String $r8, $r12;
        boolean $z0, $z1, z2, $z3;
        org.apache.lucene.util.InfoStream $r1, $r6;
        java.lang.StringBuilder $r5, $r9, $r10, $r11;

        r0 := @this: org.apache.lucene.index.DocumentsWriter;

        z2 := @parameter0: boolean;

     label1:
        $r1 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DW");

        if $z0 == 0 goto label2;

        $r6 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r8 = virtualinvoke $r7.<java.lang.Thread: java.lang.String getName()>();

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" finishFullFlush success=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DW", $r12);

     label2:
        $z1 = <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $z3 = specialinvoke r0.<org.apache.lucene.index.DocumentsWriter: boolean setFlushingDeleteQueue(org.apache.lucene.index.DocumentsWriterDeleteQueue)>(null);

        if $z3 != 0 goto label3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label3:
        if z2 == 0 goto label4;

        $r3 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r3.<org.apache.lucene.index.DocumentsWriterFlushControl: void finishFullFlush()>();

        goto label5;

     label4:
        $r2 = r0.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterFlushControl: void abortFullFlushes()>();

     label5:
        r0.<org.apache.lucene.index.DocumentsWriter: boolean pendingChangesInCurrentFullFlush> = 0;

        goto label8;

     label6:
        $r13 := @caughtexception;

     label7:
        r0.<org.apache.lucene.index.DocumentsWriter: boolean pendingChangesInCurrentFullFlush> = 0;

        throw $r13;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/DocumentsWriter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.DocumentsWriter: boolean $assertionsDisabled> = $z1;

        return;
    }
}
