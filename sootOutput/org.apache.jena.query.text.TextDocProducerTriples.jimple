public class org.apache.jena.query.text.TextDocProducerTriples extends java.lang.Object implements org.apache.jena.query.text.TextDocProducer
{
    private static org.slf4j.Logger log;
    private final org.apache.jena.query.text.EntityDefinition defn;
    private final org.apache.jena.query.text.TextIndex indexer;
    private boolean started;
    static org.apache.jena.atlas.iterator.Transform QuadsToTriples;

    public void <init>(org.apache.jena.query.text.EntityDefinition, org.apache.jena.query.text.TextIndex)
    {
        org.apache.jena.query.text.EntityDefinition r1;
        org.apache.jena.query.text.TextDocProducerTriples r0;
        org.apache.jena.query.text.TextIndex r2;

        r0 := @this: org.apache.jena.query.text.TextDocProducerTriples;

        r1 := @parameter0: org.apache.jena.query.text.EntityDefinition;

        r2 := @parameter1: org.apache.jena.query.text.TextIndex;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.query.text.TextDocProducerTriples: boolean started> = 0;

        r0.<org.apache.jena.query.text.TextDocProducerTriples: org.apache.jena.query.text.EntityDefinition defn> = r1;

        r0.<org.apache.jena.query.text.TextDocProducerTriples: org.apache.jena.query.text.TextIndex indexer> = r2;

        return;
    }

    public void start()
    {
        org.apache.jena.query.text.TextDocProducerTriples r0;
        org.apache.jena.query.text.TextIndex $r1;

        r0 := @this: org.apache.jena.query.text.TextDocProducerTriples;

        $r1 = r0.<org.apache.jena.query.text.TextDocProducerTriples: org.apache.jena.query.text.TextIndex indexer>;

        interfaceinvoke $r1.<org.apache.jena.query.text.TextIndex: void startIndexing()>();

        r0.<org.apache.jena.query.text.TextDocProducerTriples: boolean started> = 1;

        return;
    }

    public void finish()
    {
        org.apache.jena.query.text.TextDocProducerTriples r0;
        org.apache.jena.query.text.TextIndex $r1;

        r0 := @this: org.apache.jena.query.text.TextDocProducerTriples;

        $r1 = r0.<org.apache.jena.query.text.TextDocProducerTriples: org.apache.jena.query.text.TextIndex indexer>;

        interfaceinvoke $r1.<org.apache.jena.query.text.TextIndex: void finishIndexing()>();

        return;
    }

    public void change(com.hp.hpl.jena.sparql.core.QuadAction, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        org.apache.jena.query.text.EntityDefinition $r4;
        com.hp.hpl.jena.graph.Node r3, r6, r8, r19;
        org.apache.jena.query.text.TextIndex $r10;
        com.hp.hpl.jena.sparql.core.QuadAction r0, $r1;
        org.apache.jena.query.text.Entity $r7;
        java.lang.String $r5, $r9, $r16, $r18, $r20;
        boolean $z0, $z1;
        org.slf4j.Logger $r12;
        org.apache.jena.query.text.TextDocProducerTriples r2;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r17;

        r2 := @this: org.apache.jena.query.text.TextDocProducerTriples;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.QuadAction;

        r19 := @parameter1: com.hp.hpl.jena.graph.Node;

        r6 := @parameter2: com.hp.hpl.jena.graph.Node;

        r3 := @parameter3: com.hp.hpl.jena.graph.Node;

        r8 := @parameter4: com.hp.hpl.jena.graph.Node;

        $r1 = <com.hp.hpl.jena.sparql.core.QuadAction: com.hp.hpl.jena.sparql.core.QuadAction ADD>;

        if r0 == $r1 goto label1;

        return;

     label1:
        $r4 = r2.<org.apache.jena.query.text.TextDocProducerTriples: org.apache.jena.query.text.EntityDefinition defn>;

        $r5 = virtualinvoke $r4.<org.apache.jena.query.text.EntityDefinition: java.lang.String getField(com.hp.hpl.jena.graph.Node)>(r3);

        if $r5 != null goto label2;

        return;

     label2:
        $z0 = virtualinvoke r6.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z0 == 0 goto label3;

        $r20 = virtualinvoke r6.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        goto label4;

     label3:
        $r20 = virtualinvoke r6.<com.hp.hpl.jena.graph.Node: java.lang.String getBlankNodeLabel()>();

     label4:
        $r7 = new org.apache.jena.query.text.Entity;

        specialinvoke $r7.<org.apache.jena.query.text.Entity: void <init>(java.lang.String)>($r20);

        $z1 = virtualinvoke r8.<com.hp.hpl.jena.graph.Node: boolean isLiteral()>();

        if $z1 != 0 goto label5;

        $r12 = <org.apache.jena.query.text.TextDocProducerTriples: org.slf4j.Logger log>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a literal value for mapped field-predicate: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :: ");

        $r16 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForString(java.lang.String)>($r5);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>($r18);

        return;

     label5:
        $r9 = virtualinvoke r8.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralLexicalForm()>();

        virtualinvoke $r7.<org.apache.jena.query.text.Entity: void put(java.lang.String,java.lang.Object)>($r5, $r9);

        $r10 = r2.<org.apache.jena.query.text.TextDocProducerTriples: org.apache.jena.query.text.TextIndex indexer>;

        interfaceinvoke $r10.<org.apache.jena.query.text.TextIndex: void addEntity(org.apache.jena.query.text.Entity)>($r7);

        return;
    }

    private static java.util.List quadsToTriples(java.util.List)
    {
        org.apache.jena.atlas.iterator.Transform $r1;
        java.util.List r0, $r2;

        r0 := @parameter0: java.util.List;

        $r1 = <org.apache.jena.query.text.TextDocProducerTriples: org.apache.jena.atlas.iterator.Transform QuadsToTriples>;

        $r2 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.List map(java.util.List,org.apache.jena.atlas.iterator.Transform)>(r0, $r1);

        return $r2;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        org.apache.jena.query.text.TextDocProducerTriples$1 $r1;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jena/query/text/TextDocProducerTriples;");

        <org.apache.jena.query.text.TextDocProducerTriples: org.slf4j.Logger log> = $r0;

        $r1 = new org.apache.jena.query.text.TextDocProducerTriples$1;

        specialinvoke $r1.<org.apache.jena.query.text.TextDocProducerTriples$1: void <init>()>();

        <org.apache.jena.query.text.TextDocProducerTriples: org.apache.jena.atlas.iterator.Transform QuadsToTriples> = $r1;

        return;
    }
}
