public class org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation extends org.eclipse.jdt.internal.compiler.ast.Annotation
{

    public void <init>(org.eclipse.jdt.internal.compiler.ast.TypeReference, int)
    {
        org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation r0;
        int i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        i0 := @parameter1: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Annotation: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation: org.eclipse.jdt.internal.compiler.ast.TypeReference type> = r1;

        r0.<org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation: int sourceStart> = i0;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        r0.<org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation: int sourceEnd> = $i1;

        return;
    }

    public org.eclipse.jdt.internal.compiler.ast.MemberValuePair[] memberValuePairs()
    {
        org.eclipse.jdt.internal.compiler.ast.MemberValuePair[] $r0;
        org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation;

        $r0 = <org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation: org.eclipse.jdt.internal.compiler.ast.MemberValuePair[] NoValuePairs>;

        return $r0;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation r1;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r3, $r4;
        boolean $z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        if $z0 == 0 goto label1;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r3 == null goto label1;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
