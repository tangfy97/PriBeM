public final class org.apache.poi.hssf.record.CFHeaderRecord extends org.apache.poi.hssf.record.StandardRecord
{
    public static final short sid;
    private int field_1_numcf;
    private int field_2_need_recalculation;
    private org.apache.poi.ss.util.CellRangeAddress field_3_enclosing_cell_range;
    private org.apache.poi.ss.util.CellRangeAddressList field_4_cell_ranges;

    public void <init>()
    {
        org.apache.poi.ss.util.CellRangeAddressList $r1;
        org.apache.poi.hssf.record.CFHeaderRecord r0;

        r0 := @this: org.apache.poi.hssf.record.CFHeaderRecord;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $r1 = new org.apache.poi.ss.util.CellRangeAddressList;

        specialinvoke $r1.<org.apache.poi.ss.util.CellRangeAddressList: void <init>()>();

        r0.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddressList field_4_cell_ranges> = $r1;

        return;
    }

    public void <init>(org.apache.poi.ss.util.CellRangeAddress[], int)
    {
        int i0;
        org.apache.poi.hssf.record.CFHeaderRecord r0;
        org.apache.poi.ss.util.CellRangeAddress[] r1, $r2;

        r0 := @this: org.apache.poi.hssf.record.CFHeaderRecord;

        r1 := @parameter0: org.apache.poi.ss.util.CellRangeAddress[];

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $r2 = staticinvoke <org.apache.poi.hssf.record.cf.CellRangeUtil: org.apache.poi.ss.util.CellRangeAddress[] mergeCellRanges(org.apache.poi.ss.util.CellRangeAddress[])>(r1);

        virtualinvoke r0.<org.apache.poi.hssf.record.CFHeaderRecord: void setCellRanges(org.apache.poi.ss.util.CellRangeAddress[])>($r2);

        r0.<org.apache.poi.hssf.record.CFHeaderRecord: int field_1_numcf> = i0;

        return;
    }

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        org.apache.poi.ss.util.CellRangeAddress $r4;
        short $s0, $s1;
        org.apache.poi.hssf.record.RecordInputStream r1;
        int $i2, $i3;
        org.apache.poi.ss.util.CellRangeAddressList $r5;
        org.apache.poi.hssf.record.CFHeaderRecord r0;

        r0 := @this: org.apache.poi.hssf.record.CFHeaderRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $s0 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $i2 = (int) $s0;

        r0.<org.apache.poi.hssf.record.CFHeaderRecord: int field_1_numcf> = $i2;

        $s1 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $i3 = (int) $s1;

        r0.<org.apache.poi.hssf.record.CFHeaderRecord: int field_2_need_recalculation> = $i3;

        $r4 = new org.apache.poi.ss.util.CellRangeAddress;

        specialinvoke $r4.<org.apache.poi.ss.util.CellRangeAddress: void <init>(org.apache.poi.hssf.record.RecordInputStream)>(r1);

        r0.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddress field_3_enclosing_cell_range> = $r4;

        $r5 = new org.apache.poi.ss.util.CellRangeAddressList;

        specialinvoke $r5.<org.apache.poi.ss.util.CellRangeAddressList: void <init>(org.apache.poi.hssf.record.RecordInputStream)>(r1);

        r0.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddressList field_4_cell_ranges> = $r5;

        return;
    }

    public int getNumberOfConditionalFormats()
    {
        int $i0;
        org.apache.poi.hssf.record.CFHeaderRecord r0;

        r0 := @this: org.apache.poi.hssf.record.CFHeaderRecord;

        $i0 = r0.<org.apache.poi.hssf.record.CFHeaderRecord: int field_1_numcf>;

        return $i0;
    }

    public void setNumberOfConditionalFormats(int)
    {
        int i0;
        org.apache.poi.hssf.record.CFHeaderRecord r0;

        r0 := @this: org.apache.poi.hssf.record.CFHeaderRecord;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hssf.record.CFHeaderRecord: int field_1_numcf> = i0;

        return;
    }

    public boolean getNeedRecalculation()
    {
        int $i0;
        org.apache.poi.hssf.record.CFHeaderRecord r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.CFHeaderRecord;

        $i0 = r0.<org.apache.poi.hssf.record.CFHeaderRecord: int field_2_need_recalculation>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setNeedRecalculation(boolean)
    {
        byte $b0;
        org.apache.poi.hssf.record.CFHeaderRecord r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.CFHeaderRecord;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        r0.<org.apache.poi.hssf.record.CFHeaderRecord: int field_2_need_recalculation> = $b0;

        return;
    }

    public org.apache.poi.ss.util.CellRangeAddress getEnclosingCellRange()
    {
        org.apache.poi.ss.util.CellRangeAddress $r1;
        org.apache.poi.hssf.record.CFHeaderRecord r0;

        r0 := @this: org.apache.poi.hssf.record.CFHeaderRecord;

        $r1 = r0.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddress field_3_enclosing_cell_range>;

        return $r1;
    }

    public void setEnclosingCellRange(org.apache.poi.ss.util.CellRangeAddress)
    {
        org.apache.poi.ss.util.CellRangeAddress r1;
        org.apache.poi.hssf.record.CFHeaderRecord r0;

        r0 := @this: org.apache.poi.hssf.record.CFHeaderRecord;

        r1 := @parameter0: org.apache.poi.ss.util.CellRangeAddress;

        r0.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddress field_3_enclosing_cell_range> = r1;

        return;
    }

    public void setCellRanges(org.apache.poi.ss.util.CellRangeAddress[])
    {
        org.apache.poi.ss.util.CellRangeAddress r3, r5;
        java.lang.IllegalArgumentException $r4;
        org.apache.poi.ss.util.CellRangeAddress[] r0;
        int $i0, i1;
        org.apache.poi.ss.util.CellRangeAddressList $r1;
        org.apache.poi.hssf.record.CFHeaderRecord r2;

        r2 := @this: org.apache.poi.hssf.record.CFHeaderRecord;

        r0 := @parameter0: org.apache.poi.ss.util.CellRangeAddress[];

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cellRanges must not be null");

        throw $r4;

     label1:
        $r1 = new org.apache.poi.ss.util.CellRangeAddressList;

        specialinvoke $r1.<org.apache.poi.ss.util.CellRangeAddressList: void <init>()>();

        r5 = null;

        i1 = 0;

     label2:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label3;

        r3 = r0[i1];

        r5 = staticinvoke <org.apache.poi.hssf.record.cf.CellRangeUtil: org.apache.poi.ss.util.CellRangeAddress createEnclosingCellRange(org.apache.poi.ss.util.CellRangeAddress,org.apache.poi.ss.util.CellRangeAddress)>(r3, r5);

        virtualinvoke $r1.<org.apache.poi.ss.util.CellRangeAddressList: void addCellRangeAddress(org.apache.poi.ss.util.CellRangeAddress)>(r3);

        i1 = i1 + 1;

        goto label2;

     label3:
        r2.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddress field_3_enclosing_cell_range> = r5;

        r2.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddressList field_4_cell_ranges> = $r1;

        return;
    }

    public org.apache.poi.ss.util.CellRangeAddress[] getCellRanges()
    {
        org.apache.poi.ss.util.CellRangeAddressList $r1;
        org.apache.poi.hssf.record.CFHeaderRecord r0;
        org.apache.poi.ss.util.CellRangeAddress[] $r2;

        r0 := @this: org.apache.poi.hssf.record.CFHeaderRecord;

        $r1 = r0.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddressList field_4_cell_ranges>;

        $r2 = virtualinvoke $r1.<org.apache.poi.ss.util.CellRangeAddressList: org.apache.poi.ss.util.CellRangeAddress[] getCellRangeAddresses()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r6, $r7, $r8, $r9, $r11, $r14;
        int $i0, $i1, i2;
        java.lang.String $r2, $r13, $r17, $r18;
        org.apache.poi.hssf.record.CFHeaderRecord r5;
        boolean $z0;
        org.apache.poi.ss.util.CellRangeAddress $r10, $r16;
        org.apache.poi.ss.util.CellRangeAddressList $r12, $r15;

        r5 := @this: org.apache.poi.hssf.record.CFHeaderRecord;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[CFHEADER]\n");

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.id\t\t= ");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(432);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.numCF\t\t\t= ");

        $i0 = virtualinvoke r5.<org.apache.poi.hssf.record.CFHeaderRecord: int getNumberOfConditionalFormats()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.needRecalc\t   = ");

        $z0 = virtualinvoke r5.<org.apache.poi.hssf.record.CFHeaderRecord: boolean getNeedRecalculation()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r9 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.enclosingCellRange= ");

        $r10 = virtualinvoke r5.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddress getEnclosingCellRange()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t.cfranges=[");

        i2 = 0;

     label1:
        $r12 = r5.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddressList field_4_cell_ranges>;

        $i1 = virtualinvoke $r12.<org.apache.poi.ss.util.CellRangeAddressList: int countRanges()>();

        if i2 >= $i1 goto label4;

        if i2 != 0 goto label2;

        $r18 = "";

        goto label3;

     label2:
        $r18 = ",";

     label3:
        $r14 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r15 = r5.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddressList field_4_cell_ranges>;

        $r16 = virtualinvoke $r15.<org.apache.poi.ss.util.CellRangeAddressList: org.apache.poi.ss.util.CellRangeAddress getCellRangeAddress(int)>(i2);

        $r17 = virtualinvoke $r16.<org.apache.poi.ss.util.CellRangeAddress: java.lang.String toString()>();

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        i2 = i2 + 1;

        goto label1;

     label4:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[/CFHEADER]\n");

        $r13 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;
    }

    protected int getDataSize()
    {
        int $i0, $i1;
        org.apache.poi.ss.util.CellRangeAddressList $r1;
        org.apache.poi.hssf.record.CFHeaderRecord r0;

        r0 := @this: org.apache.poi.hssf.record.CFHeaderRecord;

        $r1 = r0.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddressList field_4_cell_ranges>;

        $i0 = virtualinvoke $r1.<org.apache.poi.ss.util.CellRangeAddressList: int getSize()>();

        $i1 = 12 + $i0;

        return $i1;
    }

    public void serialize(org.apache.poi.util.LittleEndianOutput)
    {
        org.apache.poi.ss.util.CellRangeAddress $r2;
        org.apache.poi.util.LittleEndianOutput r0;
        int $i0, $i1;
        org.apache.poi.ss.util.CellRangeAddressList $r3;
        org.apache.poi.hssf.record.CFHeaderRecord r1;

        r1 := @this: org.apache.poi.hssf.record.CFHeaderRecord;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $i0 = r1.<org.apache.poi.hssf.record.CFHeaderRecord: int field_1_numcf>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i0);

        $i1 = r1.<org.apache.poi.hssf.record.CFHeaderRecord: int field_2_need_recalculation>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i1);

        $r2 = r1.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddress field_3_enclosing_cell_range>;

        virtualinvoke $r2.<org.apache.poi.ss.util.CellRangeAddress: void serialize(org.apache.poi.util.LittleEndianOutput)>(r0);

        $r3 = r1.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddressList field_4_cell_ranges>;

        virtualinvoke $r3.<org.apache.poi.ss.util.CellRangeAddressList: void serialize(org.apache.poi.util.LittleEndianOutput)>(r0);

        return;
    }

    public short getSid()
    {
        org.apache.poi.hssf.record.CFHeaderRecord r0;

        r0 := @this: org.apache.poi.hssf.record.CFHeaderRecord;

        return 432;
    }

    public java.lang.Object clone()
    {
        org.apache.poi.ss.util.CellRangeAddress $r2;
        int $i0, $i1;
        org.apache.poi.ss.util.CellRangeAddressList $r3, $r4;
        org.apache.poi.hssf.record.CFHeaderRecord $r0, r1;

        r1 := @this: org.apache.poi.hssf.record.CFHeaderRecord;

        $r0 = new org.apache.poi.hssf.record.CFHeaderRecord;

        specialinvoke $r0.<org.apache.poi.hssf.record.CFHeaderRecord: void <init>()>();

        $i0 = r1.<org.apache.poi.hssf.record.CFHeaderRecord: int field_1_numcf>;

        $r0.<org.apache.poi.hssf.record.CFHeaderRecord: int field_1_numcf> = $i0;

        $i1 = r1.<org.apache.poi.hssf.record.CFHeaderRecord: int field_2_need_recalculation>;

        $r0.<org.apache.poi.hssf.record.CFHeaderRecord: int field_2_need_recalculation> = $i1;

        $r2 = r1.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddress field_3_enclosing_cell_range>;

        $r0.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddress field_3_enclosing_cell_range> = $r2;

        $r3 = r1.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddressList field_4_cell_ranges>;

        $r4 = virtualinvoke $r3.<org.apache.poi.ss.util.CellRangeAddressList: org.apache.poi.ss.util.CellRangeAddressList copy()>();

        $r0.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddressList field_4_cell_ranges> = $r4;

        return $r0;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hssf.record.CFHeaderRecord: short sid> = 432;

        return;
    }
}
