public class org.apache.poi.xwpf.usermodel.XWPFNumbering extends org.apache.poi.POIXMLDocumentPart
{
    protected java.util.List abstractNums;
    protected java.util.List nums;
    private org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering ctNumbering;
    boolean isNew;

    public void <init>(org.apache.poi.openxml4j.opc.PackagePart, org.apache.poi.openxml4j.opc.PackageRelationship) throws java.io.IOException, org.apache.poi.openxml4j.exceptions.OpenXML4JException
    {
        org.apache.poi.openxml4j.opc.PackagePart r1;
        org.apache.poi.xwpf.usermodel.XWPFNumbering r0;
        org.apache.poi.openxml4j.opc.PackageRelationship r2;
        java.util.ArrayList $r3, $r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFNumbering;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.PackagePart;

        r2 := @parameter1: org.apache.poi.openxml4j.opc.PackageRelationship;

        specialinvoke r0.<org.apache.poi.POIXMLDocumentPart: void <init>(org.apache.poi.openxml4j.opc.PackagePart,org.apache.poi.openxml4j.opc.PackageRelationship)>(r1, r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List abstractNums> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List nums> = $r4;

        r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: boolean isNew> = 1;

        return;
    }

    public void <init>()
    {
        org.apache.poi.xwpf.usermodel.XWPFNumbering r0;
        java.util.ArrayList $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFNumbering;

        specialinvoke r0.<org.apache.poi.POIXMLDocumentPart: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List abstractNums> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List nums> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List abstractNums> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List nums> = $r4;

        r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: boolean isNew> = 1;

        return;
    }

    protected void onDocumentRead() throws java.io.IOException
    {
        org.apache.poi.openxml4j.opc.PackagePart $r1;
        org.apache.poi.POIXMLException $r18;
        boolean $z0, $z1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum r19;
        org.apache.poi.xwpf.usermodel.XWPFAbstractNum $r12;
        org.apache.poi.xwpf.usermodel.XWPFNum $r15;
        java.util.Iterator $r7, $r10;
        java.util.List $r6, $r9, $r13, $r16;
        org.apache.xmlbeans.XmlException $r17;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.NumberingDocument $r3;
        java.lang.Object $r11, $r14;
        org.apache.poi.xwpf.usermodel.XWPFNumbering r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering $r4, $r5, $r8;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum r20;
        java.io.InputStream $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFNumbering;

        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

     label1:
        $r3 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.NumberingDocument$Factory: org.openxmlformats.schemas.wordprocessingml.x2006.main.NumberingDocument parse(java.io.InputStream)>($r2);

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.NumberingDocument: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering getNumbering()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering ctNumbering> = $r4;

        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering ctNumbering>;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering: java.util.List getNumList()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r14 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r19 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum) $r14;

        $r16 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List nums>;

        $r15 = new org.apache.poi.xwpf.usermodel.XWPFNum;

        specialinvoke $r15.<org.apache.poi.xwpf.usermodel.XWPFNum: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum,org.apache.poi.xwpf.usermodel.XWPFNumbering)>(r19, r0);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r15);

        goto label2;

     label3:
        $r8 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering ctNumbering>;

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering: java.util.List getAbstractNumList()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum) $r11;

        $r13 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List abstractNums>;

        $r12 = new org.apache.poi.xwpf.usermodel.XWPFAbstractNum;

        specialinvoke $r12.<org.apache.poi.xwpf.usermodel.XWPFAbstractNum: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum,org.apache.poi.xwpf.usermodel.XWPFNumbering)>(r20, r0);

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label4;

     label5:
        r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: boolean isNew> = 0;

     label6:
        goto label8;

     label7:
        $r17 := @caughtexception;

        $r18 = new org.apache.poi.POIXMLException;

        specialinvoke $r18.<org.apache.poi.POIXMLException: void <init>()>();

        throw $r18;

     label8:
        return;

        catch org.apache.xmlbeans.XmlException from label1 to label6 with label7;
    }

    protected void commit() throws java.io.IOException
    {
        java.io.OutputStream $r9;
        java.util.HashMap $r6;
        org.apache.xmlbeans.XmlOptions $r0, $r1;
        org.apache.poi.openxml4j.opc.PackagePart $r8;
        javax.xml.namespace.QName $r2, $r4;
        java.lang.String $r5;
        org.apache.poi.xwpf.usermodel.XWPFNumbering r7;
        org.apache.xmlbeans.SchemaType $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering $r10;

        r7 := @this: org.apache.poi.xwpf.usermodel.XWPFNumbering;

        $r0 = new org.apache.xmlbeans.XmlOptions;

        $r1 = <org.apache.poi.xwpf.usermodel.XWPFNumbering: org.apache.xmlbeans.XmlOptions DEFAULT_XML_OPTIONS>;

        specialinvoke $r0.<org.apache.xmlbeans.XmlOptions: void <init>(org.apache.xmlbeans.XmlOptions)>($r1);

        $r2 = new javax.xml.namespace.QName;

        $r3 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering: org.apache.xmlbeans.SchemaType type>;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r5 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r5, "numbering");

        virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSaveSyntheticDocumentElement(javax.xml.namespace.QName)>($r2);

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.openxmlformats.org/markup-compatibility/2006", "ve");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("urn:schemas-microsoft-com:office:office", "o");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.openxmlformats.org/officeDocument/2006/relationships", "r");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.openxmlformats.org/officeDocument/2006/math", "m");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("urn:schemas-microsoft-com:vml", "v");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing", "wp");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("urn:schemas-microsoft-com:office:word", "w10");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.openxmlformats.org/wordprocessingml/2006/main", "w");

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://schemas.microsoft.com/office/word/2006/wordml", "wne");

        virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSaveSuggestedPrefixes(java.util.Map)>($r6);

        $r8 = virtualinvoke r7.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r9 = virtualinvoke $r8.<org.apache.poi.openxml4j.opc.PackagePart: java.io.OutputStream getOutputStream()>();

        $r10 = r7.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering ctNumbering>;

        interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering: void save(java.io.OutputStream,org.apache.xmlbeans.XmlOptions)>($r9, $r0);

        virtualinvoke $r9.<java.io.OutputStream: void close()>();

        return;
    }

    public void setNumbering(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering)
    {
        org.apache.poi.xwpf.usermodel.XWPFNumbering r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFNumbering;

        r1 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering;

        r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering ctNumbering> = r1;

        return;
    }

    public boolean numExist(java.math.BigInteger)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum $r5;
        org.apache.poi.xwpf.usermodel.XWPFNum r4;
        java.util.Iterator $r2;
        java.util.List $r1;
        java.lang.Object $r3;
        java.math.BigInteger $r6, r7;
        org.apache.poi.xwpf.usermodel.XWPFNumbering r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFNumbering;

        r7 := @parameter0: java.math.BigInteger;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List nums>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.xwpf.usermodel.XWPFNum) $r3;

        $r5 = virtualinvoke r4.<org.apache.poi.xwpf.usermodel.XWPFNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum getCTNum()>();

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum: java.math.BigInteger getNumId()>();

        $z1 = virtualinvoke $r6.<java.math.BigInteger: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public java.math.BigInteger addNum(org.apache.poi.xwpf.usermodel.XWPFNum)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum $r6, $r8;
        org.apache.poi.xwpf.usermodel.XWPFNum r4;
        java.util.List $r3, $r7;
        int $i0, i1;
        java.math.BigInteger $r9;
        org.apache.poi.xwpf.usermodel.XWPFNumbering r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering $r1, $r2, $r5;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFNumbering;

        r4 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFNum;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering ctNumbering>;

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum addNewNum()>();

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering ctNumbering>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering: java.util.List getNumList()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        i1 = $i0 - 1;

        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering ctNumbering>;

        $r6 = virtualinvoke r4.<org.apache.poi.xwpf.usermodel.XWPFNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum getCTNum()>();

        interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering: void setNumArray(int,org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum)>(i1, $r6);

        $r7 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List nums>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r4);

        $r8 = virtualinvoke r4.<org.apache.poi.xwpf.usermodel.XWPFNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum getCTNum()>();

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum: java.math.BigInteger getNumId()>();

        return $r9;
    }

    public java.math.BigInteger addNum(java.math.BigInteger)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum $r2;
        org.apache.poi.xwpf.usermodel.XWPFNum $r7;
        long $l2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber $r3;
        java.util.List $r5, $r8;
        int $i0, $i1;
        java.math.BigInteger r4, $r6, $r9;
        org.apache.poi.xwpf.usermodel.XWPFNumbering r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFNumbering;

        r4 := @parameter0: java.math.BigInteger;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering ctNumbering>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum addNewNum()>();

        interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber addNewAbstractNumId()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber getAbstractNumId()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber: void setVal(java.math.BigInteger)>(r4);

        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List nums>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i1 = $i0 + 1;

        $l2 = (long) $i1;

        $r6 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l2);

        interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum: void setNumId(java.math.BigInteger)>($r6);

        $r7 = new org.apache.poi.xwpf.usermodel.XWPFNum;

        specialinvoke $r7.<org.apache.poi.xwpf.usermodel.XWPFNum: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum,org.apache.poi.xwpf.usermodel.XWPFNumbering)>($r2, r0);

        $r8 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List nums>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r9 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum: java.math.BigInteger getNumId()>();

        return $r9;
    }

    public void addNum(java.math.BigInteger, java.math.BigInteger)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum $r2;
        org.apache.poi.xwpf.usermodel.XWPFNum $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber $r3;
        java.util.List $r7;
        java.math.BigInteger r4, r5;
        org.apache.poi.xwpf.usermodel.XWPFNumbering r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFNumbering;

        r4 := @parameter0: java.math.BigInteger;

        r5 := @parameter1: java.math.BigInteger;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering ctNumbering>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum addNewNum()>();

        interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber addNewAbstractNumId()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber getAbstractNumId()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber: void setVal(java.math.BigInteger)>(r4);

        interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum: void setNumId(java.math.BigInteger)>(r5);

        $r6 = new org.apache.poi.xwpf.usermodel.XWPFNum;

        specialinvoke $r6.<org.apache.poi.xwpf.usermodel.XWPFNum: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum,org.apache.poi.xwpf.usermodel.XWPFNumbering)>($r2, r0);

        $r7 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List nums>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

        return;
    }

    public org.apache.poi.xwpf.usermodel.XWPFNum getNum(java.math.BigInteger)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum $r5;
        org.apache.poi.xwpf.usermodel.XWPFNum r4;
        java.util.Iterator $r2;
        java.util.List $r1;
        java.lang.Object $r3;
        java.math.BigInteger $r6, r7;
        org.apache.poi.xwpf.usermodel.XWPFNumbering r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFNumbering;

        r7 := @parameter0: java.math.BigInteger;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List nums>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.xwpf.usermodel.XWPFNum) $r3;

        $r5 = virtualinvoke r4.<org.apache.poi.xwpf.usermodel.XWPFNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum getCTNum()>();

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum: java.math.BigInteger getNumId()>();

        $z1 = virtualinvoke $r6.<java.math.BigInteger: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public org.apache.poi.xwpf.usermodel.XWPFAbstractNum getAbstractNum(java.math.BigInteger)
    {
        org.apache.poi.xwpf.usermodel.XWPFAbstractNum r4;
        java.util.Iterator $r2;
        java.util.List $r1;
        java.lang.Object $r3;
        java.math.BigInteger $r6, r7;
        org.apache.poi.xwpf.usermodel.XWPFNumbering r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFNumbering;

        r7 := @parameter0: java.math.BigInteger;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List abstractNums>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.xwpf.usermodel.XWPFAbstractNum) $r3;

        $r5 = virtualinvoke r4.<org.apache.poi.xwpf.usermodel.XWPFAbstractNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum getAbstractNum()>();

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum: java.math.BigInteger getAbstractNumId()>();

        $z1 = virtualinvoke $r6.<java.math.BigInteger: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public java.math.BigInteger getIdOfAbstractNum(org.apache.poi.xwpf.usermodel.XWPFAbstractNum)
    {
        long $l1;
        int $i0, i2;
        java.math.BigInteger $r8, $r15;
        org.apache.xmlbeans.XmlObject $r2;
        boolean $z0;
        org.apache.poi.xwpf.usermodel.XWPFAbstractNum r0, $r4, $r12;
        java.util.List $r6, $r10;
        java.lang.Object $r11;
        org.apache.poi.xwpf.usermodel.XWPFNumbering r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum $r1, r3, $r7, $r9, $r13, $r14;

        r5 := @this: org.apache.poi.xwpf.usermodel.XWPFNumbering;

        r0 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFAbstractNum;

        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFAbstractNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum getCTAbstractNum()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum: org.apache.xmlbeans.XmlObject copy()>();

        r3 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum) $r2;

        $r4 = new org.apache.poi.xwpf.usermodel.XWPFAbstractNum;

        specialinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFAbstractNum: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum,org.apache.poi.xwpf.usermodel.XWPFNumbering)>(r3, r5);

        i2 = 0;

     label1:
        $r6 = r5.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List abstractNums>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r7 = virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFAbstractNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum getCTAbstractNum()>();

        $l1 = (long) i2;

        $r8 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum: void setAbstractNumId(java.math.BigInteger)>($r8);

        virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFAbstractNum: void setNumbering(org.apache.poi.xwpf.usermodel.XWPFNumbering)>(r5);

        $r9 = virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFAbstractNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum getCTAbstractNum()>();

        $r10 = r5.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List abstractNums>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i2);

        $r12 = (org.apache.poi.xwpf.usermodel.XWPFAbstractNum) $r11;

        $r13 = virtualinvoke $r12.<org.apache.poi.xwpf.usermodel.XWPFAbstractNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum getCTAbstractNum()>();

        $z0 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum: boolean valueEquals(org.apache.xmlbeans.XmlObject)>($r13);

        if $z0 == 0 goto label2;

        $r14 = virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFAbstractNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum getCTAbstractNum()>();

        $r15 = interfaceinvoke $r14.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum: java.math.BigInteger getAbstractNumId()>();

        return $r15;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return null;
    }

    public java.math.BigInteger addAbstractNum(org.apache.poi.xwpf.usermodel.XWPFAbstractNum)
    {
        long $l1;
        int $i0;
        java.math.BigInteger $r6, $r11;
        org.apache.poi.xwpf.usermodel.XWPFAbstractNum r2;
        java.util.List $r1, $r9;
        org.apache.poi.xwpf.usermodel.XWPFNumbering r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum $r3, $r5, $r8, $r10, $r13, $r14;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering $r4, $r7, $r12;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFNumbering;

        r2 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFAbstractNum;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List abstractNums>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.XWPFAbstractNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum getAbstractNum()>();

        if $r3 == null goto label1;

        $r12 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering ctNumbering>;

        $r13 = interfaceinvoke $r12.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum addNewAbstractNum()>();

        $r14 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.XWPFAbstractNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum getAbstractNum()>();

        interfaceinvoke $r13.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r14);

        goto label2;

     label1:
        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering ctNumbering>;

        interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum addNewAbstractNum()>();

        $r5 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.XWPFAbstractNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum getAbstractNum()>();

        $l1 = (long) $i0;

        $r6 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum: void setAbstractNumId(java.math.BigInteger)>($r6);

        $r7 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering ctNumbering>;

        $r8 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.XWPFAbstractNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum getAbstractNum()>();

        interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering: void setAbstractNumArray(int,org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum)>($i0, $r8);

     label2:
        $r9 = r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List abstractNums>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r10 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.XWPFAbstractNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum getCTAbstractNum()>();

        $r11 = interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum: java.math.BigInteger getAbstractNumId()>();

        return $r11;
    }

    public boolean removeAbstractNum(java.math.BigInteger)
    {
        java.util.List $r2, $r4;
        byte $b0, $b2, $b3;
        int $i1, $i4, $i5, $i6;
        java.math.BigInteger r0;
        org.apache.poi.xwpf.usermodel.XWPFNumbering r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering $r3;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFNumbering;

        r0 := @parameter0: java.math.BigInteger;

        $b0 = virtualinvoke r0.<java.math.BigInteger: byte byteValue()>();

        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List abstractNums>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i4 = (int) $b0;

        if $i4 >= $i1 goto label1;

        $r3 = r1.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering ctNumbering>;

        $b2 = virtualinvoke r0.<java.math.BigInteger: byte byteValue()>();

        $i5 = (int) $b2;

        interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumbering: void removeAbstractNum(int)>($i5);

        $r4 = r1.<org.apache.poi.xwpf.usermodel.XWPFNumbering: java.util.List abstractNums>;

        $b3 = virtualinvoke r0.<java.math.BigInteger: byte byteValue()>();

        $i6 = (int) $b3;

        interfaceinvoke $r4.<java.util.List: java.lang.Object remove(int)>($i6);

        return 1;

     label1:
        return 0;
    }

    public java.math.BigInteger getAbstractNumID(java.math.BigInteger)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum $r3, $r4, $r6;
        org.apache.poi.xwpf.usermodel.XWPFNum $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber $r5, $r7;
        java.math.BigInteger r1, $r8;
        org.apache.poi.xwpf.usermodel.XWPFNumbering r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFNumbering;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.apache.poi.xwpf.usermodel.XWPFNum getNum(java.math.BigInteger)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum getCTNum()>();

        if $r3 != null goto label2;

        return null;

     label2:
        $r4 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum getCTNum()>();

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber getAbstractNumId()>();

        if $r5 != null goto label3;

        return null;

     label3:
        $r6 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum getCTNum()>();

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber getAbstractNumId()>();

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber: java.math.BigInteger getVal()>();

        return $r8;
    }
}
