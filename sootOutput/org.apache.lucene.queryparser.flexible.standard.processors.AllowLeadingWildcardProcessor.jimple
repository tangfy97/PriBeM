public class org.apache.lucene.queryparser.flexible.standard.processors.AllowLeadingWildcardProcessor extends org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl
{

    public void <init>()
    {
        org.apache.lucene.queryparser.flexible.standard.processors.AllowLeadingWildcardProcessor r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.processors.AllowLeadingWildcardProcessor;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl: void <init>()>();

        return;
    }

    public org.apache.lucene.queryparser.flexible.core.nodes.QueryNode process(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.core.config.ConfigurationKey $r2;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler $r1;
        org.apache.lucene.queryparser.flexible.standard.processors.AllowLeadingWildcardProcessor r0;
        java.lang.Boolean r4;
        java.lang.Object $r3;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.processors.AllowLeadingWildcardProcessor;

        r5 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.processors.AllowLeadingWildcardProcessor: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler getQueryConfigHandler()>();

        $r2 = <org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$ConfigurationKeys: org.apache.lucene.queryparser.flexible.core.config.ConfigurationKey ALLOW_LEADING_WILDCARD>;

        $r3 = virtualinvoke $r1.<org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler: java.lang.Object get(org.apache.lucene.queryparser.flexible.core.config.ConfigurationKey)>($r2);

        r4 = (java.lang.Boolean) $r3;

        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label1;

        $r6 = specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode process(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)>(r5);

        return $r6;

     label1:
        return r5;
    }

    protected org.apache.lucene.queryparser.flexible.core.nodes.QueryNode postProcessNode(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        java.lang.Object[] $r7;
        org.apache.lucene.queryparser.flexible.standard.processors.AllowLeadingWildcardProcessor r11;
        int $i0, $i2;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r0;
        java.lang.String $r9;
        boolean $z0, $z1;
        java.lang.CharSequence $r2, $r3, $r4, $r10;
        org.apache.lucene.queryparser.flexible.standard.parser.EscapeQuerySyntaxImpl $r12;
        char $c1;
        org.apache.lucene.queryparser.flexible.core.QueryNodeException $r14;
        org.apache.lucene.queryparser.flexible.messages.MessageImpl $r13;
        org.apache.lucene.queryparser.flexible.standard.nodes.WildcardQueryNode r1;

        r11 := @this: org.apache.lucene.queryparser.flexible.standard.processors.AllowLeadingWildcardProcessor;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        $z0 = r0 instanceof org.apache.lucene.queryparser.flexible.standard.nodes.WildcardQueryNode;

        if $z0 == 0 goto label3;

        r1 = (org.apache.lucene.queryparser.flexible.standard.nodes.WildcardQueryNode) r0;

        $r2 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.standard.nodes.WildcardQueryNode: java.lang.CharSequence getText()>();

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label3;

        $r3 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.standard.nodes.WildcardQueryNode: java.lang.CharSequence getText()>();

        $z1 = staticinvoke <org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: boolean wasEscaped(java.lang.CharSequence,int)>($r3, 0);

        if $z1 == 0 goto label1;

        return r0;

     label1:
        $r4 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.standard.nodes.WildcardQueryNode: java.lang.CharSequence getText()>();

        $c1 = interfaceinvoke $r4.<java.lang.CharSequence: char charAt(int)>(0);

        $i2 = (int) $c1;

        lookupswitch($i2)
        {
            case 42: goto label2;
            case 63: goto label2;
            default: goto label3;
        };

     label2:
        $r14 = new org.apache.lucene.queryparser.flexible.core.QueryNodeException;

        $r13 = new org.apache.lucene.queryparser.flexible.messages.MessageImpl;

        $r9 = <org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages: java.lang.String LEADING_WILDCARD_NOT_ALLOWED>;

        $r7 = newarray (java.lang.Object)[1];

        $r12 = new org.apache.lucene.queryparser.flexible.standard.parser.EscapeQuerySyntaxImpl;

        specialinvoke $r12.<org.apache.lucene.queryparser.flexible.standard.parser.EscapeQuerySyntaxImpl: void <init>()>();

        $r10 = interfaceinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNode: java.lang.CharSequence toQueryString(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)>($r12);

        $r7[0] = $r10;

        specialinvoke $r13.<org.apache.lucene.queryparser.flexible.messages.MessageImpl: void <init>(java.lang.String,java.lang.Object[])>($r9, $r7);

        specialinvoke $r14.<org.apache.lucene.queryparser.flexible.core.QueryNodeException: void <init>(org.apache.lucene.queryparser.flexible.messages.Message)>($r13);

        throw $r14;

     label3:
        return r0;
    }

    protected org.apache.lucene.queryparser.flexible.core.nodes.QueryNode preProcessNode(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r0;
        org.apache.lucene.queryparser.flexible.standard.processors.AllowLeadingWildcardProcessor r1;

        r1 := @this: org.apache.lucene.queryparser.flexible.standard.processors.AllowLeadingWildcardProcessor;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        return r0;
    }

    protected java.util.List setChildrenOrder(java.util.List) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        java.util.List r0;
        org.apache.lucene.queryparser.flexible.standard.processors.AllowLeadingWildcardProcessor r1;

        r1 := @this: org.apache.lucene.queryparser.flexible.standard.processors.AllowLeadingWildcardProcessor;

        r0 := @parameter0: java.util.List;

        return r0;
    }
}
