public class org.apache.batik.gvt.text.GVTACIImpl extends java.lang.Object implements org.apache.batik.gvt.text.GVTAttributedCharacterIterator
{
    private java.lang.String simpleString;
    private java.util.Set allAttributes;
    private java.util.ArrayList mapList;
    private static int START_RUN;
    private static int END_RUN;
    private static int MID_RUN;
    private static int SINGLETON;
    private int[] charInRun;
    private java.text.CharacterIterator iter;
    private int currentIndex;

    public void <init>()
    {
        int $i1;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.gvt.text.GVTACIImpl: java.text.CharacterIterator iter> = null;

        $i1 = (int) -1;

        r0.<org.apache.batik.gvt.text.GVTACIImpl: int currentIndex> = $i1;

        r0.<org.apache.batik.gvt.text.GVTACIImpl: java.lang.String simpleString> = "";

        specialinvoke r0.<org.apache.batik.gvt.text.GVTACIImpl: void buildAttributeTables()>();

        return;
    }

    public void <init>(java.text.AttributedCharacterIterator)
    {
        int $i1;
        java.text.AttributedCharacterIterator r1;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        r1 := @parameter0: java.text.AttributedCharacterIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.gvt.text.GVTACIImpl: java.text.CharacterIterator iter> = null;

        $i1 = (int) -1;

        r0.<org.apache.batik.gvt.text.GVTACIImpl: int currentIndex> = $i1;

        specialinvoke r0.<org.apache.batik.gvt.text.GVTACIImpl: void buildAttributeTables(java.text.AttributedCharacterIterator)>(r1);

        return;
    }

    public void setString(java.lang.String)
    {
        java.text.StringCharacterIterator $r2;
        java.lang.String r1, $r3;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.batik.gvt.text.GVTACIImpl: java.lang.String simpleString> = r1;

        $r2 = new java.text.StringCharacterIterator;

        $r3 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.lang.String simpleString>;

        specialinvoke $r2.<java.text.StringCharacterIterator: void <init>(java.lang.String)>($r3);

        r0.<org.apache.batik.gvt.text.GVTACIImpl: java.text.CharacterIterator iter> = $r2;

        specialinvoke r0.<org.apache.batik.gvt.text.GVTACIImpl: void buildAttributeTables()>();

        return;
    }

    public void setString(java.text.AttributedString)
    {
        java.text.AttributedCharacterIterator $r2, $r4;
        java.text.CharacterIterator $r3;
        java.text.AttributedString r1;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        r1 := @parameter0: java.text.AttributedString;

        $r2 = virtualinvoke r1.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();

        r0.<org.apache.batik.gvt.text.GVTACIImpl: java.text.CharacterIterator iter> = $r2;

        $r3 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.text.CharacterIterator iter>;

        $r4 = (java.text.AttributedCharacterIterator) $r3;

        specialinvoke r0.<org.apache.batik.gvt.text.GVTACIImpl: void buildAttributeTables(java.text.AttributedCharacterIterator)>($r4);

        return;
    }

    public void setAttributeArray(org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute, java.lang.Object[], int, int)
    {
        int[] $r2, $r3, $r4, $r11, $r12, $r13, $r14, $r15, $r16;
        java.util.Map $r10;
        org.apache.batik.gvt.text.GVTACIImpl r0;
        org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute r8;
        java.lang.Object[] r5;
        java.util.ArrayList $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, $i25, $i26, $i27, i28;
        java.lang.String $r1;
        java.lang.Object $r7, $r9;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        r8 := @parameter0: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute;

        r5 := @parameter1: java.lang.Object[];

        i23 := @parameter2: int;

        i24 := @parameter3: int;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(i23, 0);

        $r1 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.lang.String simpleString>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(i24, $i1);

        $r2 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int[] charInRun>;

        $i4 = $r2[$i0];

        $i3 = <org.apache.batik.gvt.text.GVTACIImpl: int END_RUN>;

        if $i4 != $i3 goto label2;

        $r13 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int[] charInRun>;

        $i16 = $i0 - 1;

        $i18 = $r13[$i16];

        $i17 = <org.apache.batik.gvt.text.GVTACIImpl: int MID_RUN>;

        if $i18 != $i17 goto label1;

        $r15 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int[] charInRun>;

        $i22 = $i0 - 1;

        $i21 = <org.apache.batik.gvt.text.GVTACIImpl: int END_RUN>;

        $r15[$i22] = $i21;

        goto label2;

     label1:
        $r14 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int[] charInRun>;

        $i20 = $i0 - 1;

        $i19 = <org.apache.batik.gvt.text.GVTACIImpl: int SINGLETON>;

        $r14[$i20] = $i19;

     label2:
        $r16 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int[] charInRun>;

        $i25 = $i2 + 1;

        $i26 = $r16[$i25];

        $i27 = <org.apache.batik.gvt.text.GVTACIImpl: int END_RUN>;

        if $i26 != $i27 goto label3;

        $r12 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int[] charInRun>;

        $i15 = $i2 + 1;

        $i14 = <org.apache.batik.gvt.text.GVTACIImpl: int SINGLETON>;

        $r12[$i15] = $i14;

        goto label4;

     label3:
        $r3 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int[] charInRun>;

        $i5 = $i2 + 1;

        $i7 = $r3[$i5];

        $i6 = <org.apache.batik.gvt.text.GVTACIImpl: int MID_RUN>;

        if $i7 != $i6 goto label4;

        $r11 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int[] charInRun>;

        $i13 = $i2 + 1;

        $i12 = <org.apache.batik.gvt.text.GVTACIImpl: int START_RUN>;

        $r11[$i13] = $i12;

     label4:
        i28 = $i0;

        goto label6;

     label5:
        $r4 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int[] charInRun>;

        $i8 = <org.apache.batik.gvt.text.GVTACIImpl: int SINGLETON>;

        $r4[i28] = $i8;

        $i9 = lengthof r5;

        $i10 = $i9 - 1;

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>(i28, $i10);

        $r6 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.ArrayList mapList>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i28);

        $r10 = (java.util.Map) $r7;

        $r9 = r5[$i11];

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r9);

        i28 = i28 + 1;

     label6:
        if i28 <= $i2 goto label5;

        return;
    }

    public java.util.Set getAllAttributeKeys()
    {
        java.util.Set $r1;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        $r1 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.Set allAttributes>;

        return $r1;
    }

    public java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)
    {
        java.text.AttributedCharacterIterator$Attribute r2;
        java.util.Map $r1;
        java.lang.Object $r3;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        r2 := @parameter0: java.text.AttributedCharacterIterator$Attribute;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.Map getAttributes()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        return $r3;
    }

    public java.util.Map getAttributes()
    {
        java.util.Map $r3;
        int $i0;
        java.lang.Object $r2;
        org.apache.batik.gvt.text.GVTACIImpl r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        $r1 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.ArrayList mapList>;

        $i0 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int currentIndex>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (java.util.Map) $r2;

        return $r3;
    }

    public int getRunLimit()
    {
        int[] $r1;
        int $i0, $i1, i2;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        i2 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int currentIndex>;

     label1:
        i2 = i2 + 1;

        $r1 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int[] charInRun>;

        $i1 = $r1[i2];

        $i0 = <org.apache.batik.gvt.text.GVTACIImpl: int MID_RUN>;

        if $i1 == $i0 goto label1;

        return i2;
    }

    public int getRunLimit(java.text.AttributedCharacterIterator$Attribute)
    {
        org.apache.batik.gvt.text.GVTACIImpl r0;
        java.util.ArrayList $r4, $r8;
        java.text.AttributedCharacterIterator$Attribute r2;
        java.util.Map $r1, $r6, $r10;
        int i0;
        java.lang.Object $r3, $r5, $r7, $r9, $r11;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        r2 := @parameter0: java.text.AttributedCharacterIterator$Attribute;

        i0 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int currentIndex>;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.Map getAttributes()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        if $r3 != null goto label2;

     label1:
        i0 = i0 + 1;

        $r8 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.ArrayList mapList>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r10 = (java.util.Map) $r9;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        if $r11 == null goto label1;

        goto label3;

     label2:
        i0 = i0 + 1;

        $r4 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.ArrayList mapList>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (java.util.Map) $r5;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label2;

     label3:
        return i0;
    }

    public int getRunLimit(java.util.Set)
    {
        int i0;
        java.util.Set r1;
        java.lang.Object $r3;
        org.apache.batik.gvt.text.GVTACIImpl r0;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        r1 := @parameter0: java.util.Set;

        i0 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int currentIndex>;

     label1:
        i0 = i0 + 1;

        $r2 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.ArrayList mapList>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $z0 = interfaceinvoke r1.<java.util.Set: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        return i0;
    }

    public int getRunStart()
    {
        int[] $r1;
        int $i0, $i1, i2, $i4;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        i2 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int currentIndex>;

        goto label2;

     label1:
        $i4 = (int) -1;

        i2 = i2 + $i4;

     label2:
        $r1 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int[] charInRun>;

        $i1 = $r1[i2];

        $i0 = <org.apache.batik.gvt.text.GVTACIImpl: int MID_RUN>;

        if $i1 == $i0 goto label1;

        return i2;
    }

    public int getRunStart(java.text.AttributedCharacterIterator$Attribute)
    {
        java.lang.IndexOutOfBoundsException $r12;
        java.util.ArrayList $r4, $r8;
        java.text.AttributedCharacterIterator$Attribute r2;
        java.util.Map $r1, $r6, $r10;
        int $i0, $i1, $i2, i3, $i5, $i7;
        boolean $z0;
        org.apache.batik.gvt.text.GVTACIImpl r0;
        java.lang.Object $r3, $r5, $r7, $r9, $r11;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        r2 := @parameter0: java.text.AttributedCharacterIterator$Attribute;

        $i0 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int currentIndex>;

        i3 = $i0 - 1;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.Map getAttributes()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

     label1:
        if $r3 != null goto label5;

        goto label3;

     label2:
        $i5 = (int) -1;

        i3 = i3 + $i5;

     label3:
        $r8 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.ArrayList mapList>;

        $i2 = i3 - 1;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r10 = (java.util.Map) $r9;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        if $r11 == null goto label2;

        goto label6;

     label4:
        $i7 = (int) -1;

        i3 = i3 + $i7;

     label5:
        $r4 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.ArrayList mapList>;

        $i1 = i3 - 1;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r6 = (java.util.Map) $r5;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label4;

     label6:
        goto label8;

     label7:
        $r12 := @caughtexception;

     label8:
        return i3;

        catch java.lang.IndexOutOfBoundsException from label1 to label6 with label7;
    }

    public int getRunStart(java.util.Set)
    {
        java.lang.IndexOutOfBoundsException $r4;
        java.util.Set r1;
        org.apache.batik.gvt.text.GVTACIImpl r0;
        java.util.ArrayList $r2;
        int $i0, i1, $i3;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        r1 := @parameter0: java.util.Set;

        i1 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int currentIndex>;

     label1:
        goto label3;

     label2:
        $i3 = (int) -1;

        i1 = i1 + $i3;

     label3:
        $r2 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.ArrayList mapList>;

        $i0 = i1 - 1;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $z0 = interfaceinvoke r1.<java.util.Set: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

     label6:
        return i1;

        catch java.lang.IndexOutOfBoundsException from label1 to label4 with label5;
    }

    public java.lang.Object clone()
    {
        org.apache.batik.gvt.text.GVTACIImpl $r0, r1;

        r1 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        $r0 = new org.apache.batik.gvt.text.GVTACIImpl;

        specialinvoke $r0.<org.apache.batik.gvt.text.GVTACIImpl: void <init>(java.text.AttributedCharacterIterator)>(r1);

        return $r0;
    }

    public char current()
    {
        char $c0;
        java.text.CharacterIterator $r1;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        $r1 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.text.CharacterIterator iter>;

        $c0 = interfaceinvoke $r1.<java.text.CharacterIterator: char current()>();

        return $c0;
    }

    public char first()
    {
        char $c0;
        java.text.CharacterIterator $r1;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        $r1 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.text.CharacterIterator iter>;

        $c0 = interfaceinvoke $r1.<java.text.CharacterIterator: char first()>();

        return $c0;
    }

    public int getBeginIndex()
    {
        int $i0;
        java.text.CharacterIterator $r1;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        $r1 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.text.CharacterIterator iter>;

        $i0 = interfaceinvoke $r1.<java.text.CharacterIterator: int getBeginIndex()>();

        return $i0;
    }

    public int getEndIndex()
    {
        int $i0;
        java.text.CharacterIterator $r1;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        $r1 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.text.CharacterIterator iter>;

        $i0 = interfaceinvoke $r1.<java.text.CharacterIterator: int getEndIndex()>();

        return $i0;
    }

    public int getIndex()
    {
        int $i0;
        java.text.CharacterIterator $r1;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        $r1 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.text.CharacterIterator iter>;

        $i0 = interfaceinvoke $r1.<java.text.CharacterIterator: int getIndex()>();

        return $i0;
    }

    public char last()
    {
        char $c0;
        java.text.CharacterIterator $r1;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        $r1 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.text.CharacterIterator iter>;

        $c0 = interfaceinvoke $r1.<java.text.CharacterIterator: char last()>();

        return $c0;
    }

    public char next()
    {
        char $c0;
        java.text.CharacterIterator $r1;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        $r1 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.text.CharacterIterator iter>;

        $c0 = interfaceinvoke $r1.<java.text.CharacterIterator: char next()>();

        return $c0;
    }

    public char previous()
    {
        char $c0;
        java.text.CharacterIterator $r1;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        $r1 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.text.CharacterIterator iter>;

        $c0 = interfaceinvoke $r1.<java.text.CharacterIterator: char previous()>();

        return $c0;
    }

    public char setIndex(int)
    {
        java.text.CharacterIterator $r1;
        int i0;
        char $c1;
        org.apache.batik.gvt.text.GVTACIImpl r0;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.text.CharacterIterator iter>;

        $c1 = interfaceinvoke $r1.<java.text.CharacterIterator: char setIndex(int)>(i0);

        return $c1;
    }

    private void buildAttributeTables()
    {
        java.util.HashMap $r8;
        org.apache.batik.gvt.text.GVTACIImpl r0;
        java.util.ArrayList $r2, $r9;
        java.util.HashSet $r1;
        int[] $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.Set allAttributes> = $r1;

        $r2 = new java.util.ArrayList;

        $r3 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.lang.String simpleString>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.ArrayList mapList> = $r2;

        $r4 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.lang.String simpleString>;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $r5 = newarray (int)[$i1];

        r0.<org.apache.batik.gvt.text.GVTACIImpl: int[] charInRun> = $r5;

        i4 = 0;

        goto label2;

     label1:
        $r7 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int[] charInRun>;

        $i3 = <org.apache.batik.gvt.text.GVTACIImpl: int SINGLETON>;

        $r7[i4] = $i3;

        $r9 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.ArrayList mapList>;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i4, $r8);

        i4 = i4 + 1;

     label2:
        $r6 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int[] charInRun>;

        $i2 = lengthof $r6;

        if i4 < $i2 goto label1;

        return;
    }

    private void buildAttributeTables(java.text.AttributedCharacterIterator)
    {
        java.util.HashMap $r7;
        java.util.ArrayList $r3, $r8;
        int[] $r4, $r6;
        java.util.Map $r9;
        int $i0, $i1, i2, $i3, i5;
        java.lang.String $r10;
        java.util.Set $r2;
        char c4;
        org.apache.batik.gvt.text.GVTACIImpl r0;
        java.text.AttributedCharacterIterator r1;
        char[] r5;

        r0 := @this: org.apache.batik.gvt.text.GVTACIImpl;

        r1 := @parameter0: java.text.AttributedCharacterIterator;

        $r2 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: java.util.Set getAllAttributeKeys()>();

        r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.Set allAttributes> = $r2;

        $i0 = interfaceinvoke r1.<java.text.CharacterIterator: int getEndIndex()>();

        $i1 = interfaceinvoke r1.<java.text.CharacterIterator: int getBeginIndex()>();

        i2 = $i0 - $i1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(i2);

        r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.ArrayList mapList> = $r3;

        $r4 = newarray (int)[i2];

        r0.<org.apache.batik.gvt.text.GVTACIImpl: int[] charInRun> = $r4;

        c4 = interfaceinvoke r1.<java.text.CharacterIterator: char first()>();

        r5 = newarray (char)[i2];

        i5 = 0;

        goto label2;

     label1:
        r5[i5] = c4;

        $r6 = r0.<org.apache.batik.gvt.text.GVTACIImpl: int[] charInRun>;

        $i3 = <org.apache.batik.gvt.text.GVTACIImpl: int SINGLETON>;

        $r6[i5] = $i3;

        $r8 = r0.<org.apache.batik.gvt.text.GVTACIImpl: java.util.ArrayList mapList>;

        $r7 = new java.util.HashMap;

        $r9 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();

        specialinvoke $r7.<java.util.HashMap: void <init>(java.util.Map)>($r9);

        virtualinvoke $r8.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i5, $r7);

        c4 = interfaceinvoke r1.<java.text.CharacterIterator: char next()>();

        i5 = i5 + 1;

     label2:
        if i5 < i2 goto label1;

        $r10 = new java.lang.String;

        specialinvoke $r10.<java.lang.String: void <init>(char[])>(r5);

        r0.<org.apache.batik.gvt.text.GVTACIImpl: java.lang.String simpleString> = $r10;

        return;
    }

    static void <clinit>()
    {
        <org.apache.batik.gvt.text.GVTACIImpl: int START_RUN> = 2;

        <org.apache.batik.gvt.text.GVTACIImpl: int END_RUN> = 3;

        <org.apache.batik.gvt.text.GVTACIImpl: int MID_RUN> = 1;

        <org.apache.batik.gvt.text.GVTACIImpl: int SINGLETON> = 0;

        return;
    }
}
