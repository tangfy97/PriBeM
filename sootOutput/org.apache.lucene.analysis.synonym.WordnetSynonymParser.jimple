public class org.apache.lucene.analysis.synonym.WordnetSynonymParser extends org.apache.lucene.analysis.synonym.SynonymMap$Builder
{
    private final boolean expand;
    private final org.apache.lucene.analysis.Analyzer analyzer;

    public void <init>(boolean, boolean, org.apache.lucene.analysis.Analyzer)
    {
        org.apache.lucene.analysis.synonym.WordnetSynonymParser r0;
        org.apache.lucene.analysis.Analyzer r1;
        boolean z0, z1;

        r0 := @this: org.apache.lucene.analysis.synonym.WordnetSynonymParser;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: org.apache.lucene.analysis.Analyzer;

        specialinvoke r0.<org.apache.lucene.analysis.synonym.SynonymMap$Builder: void <init>(boolean)>(z0);

        r0.<org.apache.lucene.analysis.synonym.WordnetSynonymParser: boolean expand> = z1;

        r0.<org.apache.lucene.analysis.synonym.WordnetSynonymParser: org.apache.lucene.analysis.Analyzer analyzer> = r1;

        return;
    }

    public void add(java.io.Reader) throws java.io.IOException, java.text.ParseException
    {
        java.lang.Throwable $r8;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r2, $r4, $r14, r15;
        java.text.ParseException $r10;
        boolean $z0;
        org.apache.lucene.analysis.synonym.WordnetSynonymParser r3;
        org.apache.lucene.util.CharsRef[] r7, r16;
        java.io.LineNumberReader $r0;
        java.io.Reader r1;
        java.lang.IllegalArgumentException $r9;
        org.apache.lucene.util.CharsRef $r5, $r6;
        java.lang.StringBuilder $r11, $r12, $r13;

        r3 := @this: org.apache.lucene.analysis.synonym.WordnetSynonymParser;

        r1 := @parameter0: java.io.Reader;

        $r0 = new java.io.LineNumberReader;

        specialinvoke $r0.<java.io.LineNumberReader: void <init>(java.io.Reader)>(r1);

     label01:
        r15 = "";

        r16 = newarray (org.apache.lucene.util.CharsRef)[8];

        i5 = 0;

     label02:
        $r2 = virtualinvoke $r0.<java.io.LineNumberReader: java.lang.String readLine()>();

        if $r2 == null goto label05;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(2, 11);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z0 != 0 goto label03;

        specialinvoke r3.<org.apache.lucene.analysis.synonym.WordnetSynonymParser: void addInternal(org.apache.lucene.util.CharsRef[],int)>(r16, i5);

        i5 = 0;

     label03:
        $i1 = lengthof r16;

        $i0 = i5 + 1;

        if $i1 > $i0 goto label04;

        $i2 = lengthof r16;

        $i3 = $i2 * 2;

        r7 = newarray (org.apache.lucene.util.CharsRef)[$i3];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r16, 0, r7, 0, i5);

        r16 = r7;

     label04:
        $r5 = r16[i5];

        $r6 = specialinvoke r3.<org.apache.lucene.analysis.synonym.WordnetSynonymParser: org.apache.lucene.util.CharsRef parseSynonym(java.lang.String,org.apache.lucene.util.CharsRef)>($r2, $r5);

        r16[i5] = $r6;

        i5 = i5 + 1;

        r15 = $r4;

        goto label02;

     label05:
        specialinvoke r3.<org.apache.lucene.analysis.synonym.WordnetSynonymParser: void addInternal(org.apache.lucene.util.CharsRef[],int)>(r16, i5);

     label06:
        virtualinvoke $r0.<java.io.LineNumberReader: void close()>();

        goto label10;

     label07:
        $r9 := @caughtexception;

        $r10 = new java.text.ParseException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid synonym rule at line ");

        $i4 = virtualinvoke $r0.<java.io.LineNumberReader: int getLineNumber()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.text.ParseException: void <init>(java.lang.String,int)>($r14, 0);

        virtualinvoke $r10.<java.text.ParseException: java.lang.Throwable initCause(java.lang.Throwable)>($r9);

        throw $r10;

     label08:
        $r8 := @caughtexception;

     label09:
        virtualinvoke $r0.<java.io.LineNumberReader: void close()>();

        throw $r8;

     label10:
        return;

        catch java.lang.IllegalArgumentException from label01 to label06 with label07;
        catch java.lang.Throwable from label01 to label06 with label08;
        catch java.lang.Throwable from label07 to label09 with label08;
    }

    private org.apache.lucene.util.CharsRef parseSynonym(java.lang.String, org.apache.lucene.util.CharsRef) throws java.io.IOException
    {
        org.apache.lucene.analysis.synonym.WordnetSynonymParser r3;
        org.apache.lucene.analysis.Analyzer $r4;
        org.apache.lucene.util.CharsRef $r5, $r6, r7;
        int $i0, $i1, $i2;
        java.lang.String r0, $r1, $r2;

        r3 := @this: org.apache.lucene.analysis.synonym.WordnetSynonymParser;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: org.apache.lucene.util.CharsRef;

        if r7 != null goto label1;

        $r6 = new org.apache.lucene.util.CharsRef;

        specialinvoke $r6.<org.apache.lucene.util.CharsRef: void <init>(int)>(8);

        r7 = $r6;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(39);

        $i2 = $i0 + 1;

        $i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(39);

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i1);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\'\'", "\'");

        $r4 = r3.<org.apache.lucene.analysis.synonym.WordnetSynonymParser: org.apache.lucene.analysis.Analyzer analyzer>;

        $r5 = staticinvoke <org.apache.lucene.analysis.synonym.WordnetSynonymParser: org.apache.lucene.util.CharsRef analyze(org.apache.lucene.analysis.Analyzer,java.lang.String,org.apache.lucene.util.CharsRef)>($r4, $r2, r7);

        return $r5;
    }

    private void addInternal(org.apache.lucene.util.CharsRef[], int)
    {
        org.apache.lucene.analysis.synonym.WordnetSynonymParser r0;
        org.apache.lucene.util.CharsRef[] r1;
        org.apache.lucene.util.CharsRef $r2, $r3, $r4, $r5;
        int i0, i1, i2, i3;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.synonym.WordnetSynonymParser;

        r1 := @parameter0: org.apache.lucene.util.CharsRef[];

        i0 := @parameter1: int;

        if i0 > 1 goto label1;

        return;

     label1:
        $z0 = r0.<org.apache.lucene.analysis.synonym.WordnetSynonymParser: boolean expand>;

        if $z0 == 0 goto label6;

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        $r5 = r1[i1];

        $r4 = r1[i2];

        virtualinvoke r0.<org.apache.lucene.analysis.synonym.WordnetSynonymParser: void add(org.apache.lucene.util.CharsRef,org.apache.lucene.util.CharsRef,boolean)>($r5, $r4, 0);

        i2 = i2 + 1;

        goto label3;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        goto label8;

     label6:
        i3 = 0;

     label7:
        if i3 >= i0 goto label8;

        $r3 = r1[i3];

        $r2 = r1[0];

        virtualinvoke r0.<org.apache.lucene.analysis.synonym.WordnetSynonymParser: void add(org.apache.lucene.util.CharsRef,org.apache.lucene.util.CharsRef,boolean)>($r3, $r2, 0);

        i3 = i3 + 1;

        goto label7;

     label8:
        return;
    }
}
