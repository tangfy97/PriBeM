public abstract class org.apache.poi.hssf.record.Record extends org.apache.poi.hssf.record.RecordBase
{

    protected void <init>()
    {
        org.apache.poi.hssf.record.Record r0;

        r0 := @this: org.apache.poi.hssf.record.Record;

        specialinvoke r0.<org.apache.poi.hssf.record.RecordBase: void <init>()>();

        return;
    }

    public final byte[] serialize()
    {
        int $i0;
        byte[] r1;
        org.apache.poi.hssf.record.Record r0;

        r0 := @this: org.apache.poi.hssf.record.Record;

        $i0 = virtualinvoke r0.<org.apache.poi.hssf.record.Record: int getRecordSize()>();

        r1 = newarray (byte)[$i0];

        virtualinvoke r0.<org.apache.poi.hssf.record.Record: int serialize(int,byte[])>(0, r1);

        return r1;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hssf.record.Record r0;
        java.lang.String $r1;

        r0 := @this: org.apache.poi.hssf.record.Record;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public abstract short getSid();

    public java.lang.Object clone()
    {
        org.apache.poi.hssf.record.Record r3;
        java.lang.RuntimeException $r0;
        java.lang.StringBuilder $r1, $r2, $r6, $r7;
        java.lang.Class $r4;
        java.lang.String $r5, $r8;

        r3 := @this: org.apache.poi.hssf.record.Record;

        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The class ");

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" needs to define a clone method");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r0;
    }

    public org.apache.poi.hssf.record.Record cloneViaReserialise()
    {
        byte[] $r1;
        java.lang.IllegalStateException $r6;
        org.apache.poi.hssf.record.Record r0, $r5;
        org.apache.poi.hssf.record.Record[] $r4;
        org.apache.poi.hssf.record.RecordInputStream $r2;
        java.io.ByteArrayInputStream $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: org.apache.poi.hssf.record.Record;

        $r1 = virtualinvoke r0.<org.apache.poi.hssf.record.Record: byte[] serialize()>();

        $r2 = new org.apache.poi.hssf.record.RecordInputStream;

        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        specialinvoke $r2.<org.apache.poi.hssf.record.RecordInputStream: void <init>(java.io.InputStream)>($r3);

        virtualinvoke $r2.<org.apache.poi.hssf.record.RecordInputStream: void nextRecord()>();

        $r4 = staticinvoke <org.apache.poi.hssf.record.RecordFactory: org.apache.poi.hssf.record.Record[] createRecord(org.apache.poi.hssf.record.RecordInputStream)>($r2);

        $i0 = lengthof $r4;

        if $i0 == 1 goto label1;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Re-serialised a record to clone it, but got ");

        $i1 = lengthof $r4;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" records back!");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        $r5 = $r4[0];

        return $r5;
    }
}
