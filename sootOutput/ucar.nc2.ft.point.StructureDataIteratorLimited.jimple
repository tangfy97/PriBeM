public class ucar.nc2.ft.point.StructureDataIteratorLimited extends java.lang.Object implements ucar.ma2.StructureDataIterator
{
    private ucar.ma2.StructureDataIterator org;
    private int limit;
    private int count;

    public void <init>(ucar.ma2.StructureDataIterator, int) throws java.io.IOException
    {
        ucar.nc2.ft.point.StructureDataIteratorLimited r0;
        int i0;
        ucar.ma2.StructureDataIterator r1;

        r0 := @this: ucar.nc2.ft.point.StructureDataIteratorLimited;

        r1 := @parameter0: ucar.ma2.StructureDataIterator;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.point.StructureDataIteratorLimited: ucar.ma2.StructureDataIterator org> = r1;

        r0.<ucar.nc2.ft.point.StructureDataIteratorLimited: int limit> = i0;

        r0.<ucar.nc2.ft.point.StructureDataIteratorLimited: int count> = 0;

        return;
    }

    public ucar.ma2.StructureData next() throws java.io.IOException
    {
        ucar.nc2.ft.point.StructureDataIteratorLimited r0;
        ucar.ma2.StructureData $r2;
        ucar.ma2.StructureDataIterator $r1;

        r0 := @this: ucar.nc2.ft.point.StructureDataIteratorLimited;

        $r1 = r0.<ucar.nc2.ft.point.StructureDataIteratorLimited: ucar.ma2.StructureDataIterator org>;

        $r2 = interfaceinvoke $r1.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        return $r2;
    }

    public boolean hasNext() throws java.io.IOException
    {
        ucar.ma2.StructureDataIterator $r1;
        ucar.nc2.ft.point.StructureDataIteratorLimited r0;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.ft.point.StructureDataIteratorLimited;

        $i1 = r0.<ucar.nc2.ft.point.StructureDataIteratorLimited: int count>;

        $i0 = r0.<ucar.nc2.ft.point.StructureDataIteratorLimited: int limit>;

        if $i1 >= $i0 goto label1;

        $r1 = r0.<ucar.nc2.ft.point.StructureDataIteratorLimited: ucar.ma2.StructureDataIterator org>;

        $z0 = interfaceinvoke $r1.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public ucar.ma2.StructureDataIterator reset()
    {
        ucar.nc2.ft.point.StructureDataIteratorLimited r0;
        ucar.ma2.StructureDataIterator $r1, $r2;

        r0 := @this: ucar.nc2.ft.point.StructureDataIteratorLimited;

        r0.<ucar.nc2.ft.point.StructureDataIteratorLimited: int count> = 0;

        $r1 = r0.<ucar.nc2.ft.point.StructureDataIteratorLimited: ucar.ma2.StructureDataIterator org>;

        $r2 = interfaceinvoke $r1.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureDataIterator reset()>();

        r0.<ucar.nc2.ft.point.StructureDataIteratorLimited: ucar.ma2.StructureDataIterator org> = $r2;

        return r0;
    }

    public void setBufferSize(int)
    {
        ucar.nc2.ft.point.StructureDataIteratorLimited r0;
        int i0;
        ucar.ma2.StructureDataIterator $r1;

        r0 := @this: ucar.nc2.ft.point.StructureDataIteratorLimited;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.ft.point.StructureDataIteratorLimited: ucar.ma2.StructureDataIterator org>;

        interfaceinvoke $r1.<ucar.ma2.StructureDataIterator: void setBufferSize(int)>(i0);

        return;
    }

    public int getCurrentRecno()
    {
        ucar.nc2.ft.point.StructureDataIteratorLimited r0;
        int $i0;
        ucar.ma2.StructureDataIterator $r1;

        r0 := @this: ucar.nc2.ft.point.StructureDataIteratorLimited;

        $r1 = r0.<ucar.nc2.ft.point.StructureDataIteratorLimited: ucar.ma2.StructureDataIterator org>;

        $i0 = interfaceinvoke $r1.<ucar.ma2.StructureDataIterator: int getCurrentRecno()>();

        return $i0;
    }
}
