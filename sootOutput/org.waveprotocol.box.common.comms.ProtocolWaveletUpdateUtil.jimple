public final class org.waveprotocol.box.common.comms.ProtocolWaveletUpdateUtil extends java.lang.Object
{

    private void <init>()
    {
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdateUtil r0;

        r0 := @this: org.waveprotocol.box.common.comms.ProtocolWaveletUpdateUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isEqual(org.waveprotocol.box.common.comms.ProtocolWaveletUpdate, org.waveprotocol.box.common.comms.ProtocolWaveletUpdate)
    {
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r10, $r11, $r12, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        java.util.List $r4, $r5;
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdate r0, r2;
        org.waveprotocol.box.common.comms.WaveletSnapshot $r8, $r9;
        java.lang.String $r1, $r3, $r6, $r7;

        r0 := @parameter0: org.waveprotocol.box.common.comms.ProtocolWaveletUpdate;

        r2 := @parameter1: org.waveprotocol.box.common.comms.ProtocolWaveletUpdate;

        $r1 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: java.lang.String getWaveletName()>();

        $r3 = interfaceinvoke r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: java.lang.String getWaveletName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $r4 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: java.util.List getAppliedDelta()>();

        $r5 = interfaceinvoke r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: java.util.List getAppliedDelta()>();

        $z1 = staticinvoke <org.waveprotocol.wave.federation.ProtocolWaveletDeltaUtil: boolean areAllEqual(java.util.List,java.util.List)>($r4, $r5);

        if $z1 != 0 goto label02;

        return 0;

     label02:
        $z2 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasCommitNotice()>();

        $z3 = interfaceinvoke r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasCommitNotice()>();

        if $z2 == $z3 goto label03;

        return 0;

     label03:
        $z4 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasCommitNotice()>();

        if $z4 == 0 goto label04;

        $r12 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: org.waveprotocol.wave.federation.ProtocolHashedVersion getCommitNotice()>();

        $r13 = interfaceinvoke r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: org.waveprotocol.wave.federation.ProtocolHashedVersion getCommitNotice()>();

        $z22 = staticinvoke <org.waveprotocol.wave.federation.ProtocolHashedVersionUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolHashedVersion,org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r12, $r13);

        if $z22 != 0 goto label04;

        return 0;

     label04:
        $z5 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasResultingVersion()>();

        $z6 = interfaceinvoke r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasResultingVersion()>();

        if $z5 == $z6 goto label05;

        return 0;

     label05:
        $z7 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasResultingVersion()>();

        if $z7 == 0 goto label06;

        $r10 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: org.waveprotocol.wave.federation.ProtocolHashedVersion getResultingVersion()>();

        $r11 = interfaceinvoke r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: org.waveprotocol.wave.federation.ProtocolHashedVersion getResultingVersion()>();

        $z21 = staticinvoke <org.waveprotocol.wave.federation.ProtocolHashedVersionUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolHashedVersion,org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r10, $r11);

        if $z21 != 0 goto label06;

        return 0;

     label06:
        $z8 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasSnapshot()>();

        $z9 = interfaceinvoke r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasSnapshot()>();

        if $z8 == $z9 goto label07;

        return 0;

     label07:
        $z10 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasSnapshot()>();

        if $z10 == 0 goto label08;

        $r8 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveletSnapshot getSnapshot()>();

        $r9 = interfaceinvoke r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveletSnapshot getSnapshot()>();

        $z20 = staticinvoke <org.waveprotocol.box.common.comms.WaveletSnapshotUtil: boolean isEqual(org.waveprotocol.box.common.comms.WaveletSnapshot,org.waveprotocol.box.common.comms.WaveletSnapshot)>($r8, $r9);

        if $z20 != 0 goto label08;

        return 0;

     label08:
        $z11 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasMarker()>();

        $z12 = interfaceinvoke r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasMarker()>();

        if $z11 == $z12 goto label09;

        return 0;

     label09:
        $z13 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasMarker()>();

        if $z13 == 0 goto label10;

        $z18 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean getMarker()>();

        $z19 = interfaceinvoke r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean getMarker()>();

        if $z18 == $z19 goto label10;

        return 0;

     label10:
        $z14 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasChannelId()>();

        $z15 = interfaceinvoke r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasChannelId()>();

        if $z14 == $z15 goto label11;

        return 0;

     label11:
        $z16 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasChannelId()>();

        if $z16 == 0 goto label12;

        $r6 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: java.lang.String getChannelId()>();

        $r7 = interfaceinvoke r2.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: java.lang.String getChannelId()>();

        $z17 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z17 != 0 goto label12;

        return 0;

     label12:
        return 1;
    }

    public static boolean areAllEqual(java.util.List, java.util.List)
    {
        java.util.Iterator $r2, $r3;
        java.util.List r0, r1;
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdate $r5, $r7;
        int $i0, $i1;
        java.lang.Object $r4, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.waveprotocol.box.common.comms.ProtocolWaveletUpdate) $r4;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.waveprotocol.box.common.comms.ProtocolWaveletUpdate) $r6;

        $z1 = staticinvoke <org.waveprotocol.box.common.comms.ProtocolWaveletUpdateUtil: boolean isEqual(org.waveprotocol.box.common.comms.ProtocolWaveletUpdate,org.waveprotocol.box.common.comms.ProtocolWaveletUpdate)>($r5, $r7);

        if $z1 != 0 goto label2;

        return 0;

     label3:
        return 1;
    }

    public static int getHashCode(org.waveprotocol.box.common.comms.ProtocolWaveletUpdate)
    {
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.List $r2;
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdate r0;
        org.waveprotocol.box.common.comms.WaveletSnapshot $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.Boolean $r4;
        java.lang.String $r1, $r3;

        r0 := @parameter0: org.waveprotocol.box.common.comms.ProtocolWaveletUpdate;

        $r1 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: java.lang.String getWaveletName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        i13 = 31 + $i0;

        $i1 = 31 * i13;

        $r2 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: java.util.List getAppliedDelta()>();

        $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i14 = $i1 + $i2;

        $i3 = 31 * i14;

        $z0 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasCommitNotice()>();

        if $z0 == 0 goto label01;

        $r7 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: org.waveprotocol.wave.federation.ProtocolHashedVersion getCommitNotice()>();

        $i15 = virtualinvoke $r7.<java.lang.Object: int hashCode()>();

        goto label02;

     label01:
        $i15 = 0;

     label02:
        $i12 = $i3 + $i15;

        $i4 = 31 * $i12;

        $z1 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasResultingVersion()>();

        if $z1 == 0 goto label03;

        $r6 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: org.waveprotocol.wave.federation.ProtocolHashedVersion getResultingVersion()>();

        $i16 = virtualinvoke $r6.<java.lang.Object: int hashCode()>();

        goto label04;

     label03:
        $i16 = 0;

     label04:
        $i11 = $i4 + $i16;

        $i5 = 31 * $i11;

        $z2 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasSnapshot()>();

        if $z2 == 0 goto label05;

        $r5 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: org.waveprotocol.box.common.comms.WaveletSnapshot getSnapshot()>();

        $i17 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

        goto label06;

     label05:
        $i17 = 0;

     label06:
        $i10 = $i5 + $i17;

        $i6 = 31 * $i10;

        $z3 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasMarker()>();

        if $z3 == 0 goto label07;

        $z5 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean getMarker()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        $i18 = virtualinvoke $r4.<java.lang.Boolean: int hashCode()>();

        goto label08;

     label07:
        $i18 = 0;

     label08:
        $i9 = $i6 + $i18;

        $i7 = 31 * $i9;

        $z4 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: boolean hasChannelId()>();

        if $z4 == 0 goto label09;

        $r3 = interfaceinvoke r0.<org.waveprotocol.box.common.comms.ProtocolWaveletUpdate: java.lang.String getChannelId()>();

        $i19 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        goto label10;

     label09:
        $i19 = 0;

     label10:
        $i8 = $i7 + $i19;

        return $i8;
    }
}
