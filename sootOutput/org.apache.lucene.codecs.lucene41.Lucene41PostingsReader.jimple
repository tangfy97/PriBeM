public final class org.apache.lucene.codecs.lucene41.Lucene41PostingsReader extends org.apache.lucene.codecs.PostingsReaderBase
{
    private final org.apache.lucene.store.IndexInput docIn;
    private final org.apache.lucene.store.IndexInput posIn;
    private final org.apache.lucene.store.IndexInput payIn;
    private final org.apache.lucene.codecs.lucene41.ForUtil forUtil;

    public void <init>(org.apache.lucene.store.Directory, org.apache.lucene.index.FieldInfos, org.apache.lucene.index.SegmentInfo, org.apache.lucene.store.IOContext, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r17;
        org.apache.lucene.codecs.lucene41.ForUtil $r8;
        org.apache.lucene.store.Directory r1;
        java.io.Closeable[] $r10, $r18;
        java.lang.String r3, $r4, $r5, $r11, $r12, $r14, $r15;
        org.apache.lucene.index.FieldInfos r9;
        org.apache.lucene.store.IOContext r6;
        boolean $z0, $z1, $z2;
        org.apache.lucene.store.IndexInput $r7, $r13, $r16, r19, r20, r21;
        org.apache.lucene.index.SegmentInfo r2;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader r0;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsReader;

        r1 := @parameter0: org.apache.lucene.store.Directory;

        r9 := @parameter1: org.apache.lucene.index.FieldInfos;

        r2 := @parameter2: org.apache.lucene.index.SegmentInfo;

        r6 := @parameter3: org.apache.lucene.store.IOContext;

        r3 := @parameter4: java.lang.String;

        specialinvoke r0.<org.apache.lucene.codecs.PostingsReaderBase: void <init>()>();

        r19 = null;

        r20 = null;

        r21 = null;

     label1:
        $r4 = r2.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r5 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r4, r3, "doc");

        $r7 = virtualinvoke r1.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r5, r6);

        r19 = $r7;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r7, "Lucene41PostingsWriterDoc", 0, 0);

        $r8 = new org.apache.lucene.codecs.lucene41.ForUtil;

        specialinvoke $r8.<org.apache.lucene.codecs.lucene41.ForUtil: void <init>(org.apache.lucene.store.DataInput)>($r7);

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader: org.apache.lucene.codecs.lucene41.ForUtil forUtil> = $r8;

        $z0 = virtualinvoke r9.<org.apache.lucene.index.FieldInfos: boolean hasProx()>();

        if $z0 == 0 goto label3;

        $r11 = r2.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r12 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r11, r3, "pos");

        $r13 = virtualinvoke r1.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r12, r6);

        r20 = $r13;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r13, "Lucene41PostingsWriterPos", 0, 0);

        $z1 = virtualinvoke r9.<org.apache.lucene.index.FieldInfos: boolean hasPayloads()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r9.<org.apache.lucene.index.FieldInfos: boolean hasOffsets()>();

        if $z2 == 0 goto label3;

     label2:
        $r14 = r2.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r15 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r14, r3, "pay");

        $r16 = virtualinvoke r1.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r15, r6);

        r21 = $r16;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r16, "Lucene41PostingsWriterPay", 0, 0);

     label3:
        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader: org.apache.lucene.store.IndexInput docIn> = $r7;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader: org.apache.lucene.store.IndexInput posIn> = r20;

        r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader: org.apache.lucene.store.IndexInput payIn> = r21;

     label4:
        if 1 != 0 goto label8;

        $r10 = newarray (java.io.Closeable)[3];

        $r10[0] = $r7;

        $r10[1] = r20;

        $r10[2] = r21;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r10);

        goto label8;

     label5:
        $r17 := @caughtexception;

     label6:
        if 0 != 0 goto label7;

        $r18 = newarray (java.io.Closeable)[3];

        $r18[0] = r19;

        $r18[1] = r20;

        $r18[2] = r21;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r18);

     label7:
        throw $r17;

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void init(org.apache.lucene.store.IndexInput) throws java.io.IOException
    {
        java.lang.IllegalStateException $r1;
        org.apache.lucene.store.IndexInput r0;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader r9;
        int $i0;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r9 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsReader;

        r0 := @parameter0: org.apache.lucene.store.IndexInput;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>(r0, "Lucene41PostingsWriterTerms", 0, 0);

        $i0 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readVInt()>();

        if $i0 == 128 goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index-time BLOCK_SIZE (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") != read-time BLOCK_SIZE (");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(128);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label1:
        return;
    }

    static void readVIntBlock(org.apache.lucene.store.IndexInput, int[], int[], int, boolean) throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput r1;
        int[] r0, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        boolean z0;

        r1 := @parameter0: org.apache.lucene.store.IndexInput;

        r0 := @parameter1: int[];

        r2 := @parameter2: int[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        if z0 == 0 goto label5;

        i6 = 0;

     label1:
        if i6 >= i0 goto label4;

        $i2 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $i3 = $i2 >>> 1;

        r0[i6] = $i3;

        $i4 = $i2 & 1;

        if $i4 == 0 goto label2;

        r2[i6] = 1;

        goto label3;

     label2:
        $i5 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        r2[i6] = $i5;

     label3:
        i6 = i6 + 1;

        goto label1;

     label4:
        goto label7;

     label5:
        i7 = 0;

     label6:
        if i7 >= i0 goto label7;

        $i1 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        r0[i7] = $i1;

        i7 = i7 + 1;

        goto label6;

     label7:
        return;
    }

    public org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState newTermState()
    {
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState $r0;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader r1;

        r1 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsReader;

        $r0 = new org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState;

        specialinvoke $r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: void <init>(org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$1)>(null);

        return $r0;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput $r2, $r3, $r4;
        java.io.Closeable[] $r0;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader r1;

        r1 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsReader;

        $r0 = newarray (java.io.Closeable)[3];

        $r2 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader: org.apache.lucene.store.IndexInput docIn>;

        $r0[0] = $r2;

        $r3 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader: org.apache.lucene.store.IndexInput posIn>;

        $r0[1] = $r3;

        $r4 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader: org.apache.lucene.store.IndexInput payIn>;

        $r0[2] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r0);

        return;
    }

    public void readTermsBlock(org.apache.lucene.store.IndexInput, org.apache.lucene.index.FieldInfo, org.apache.lucene.codecs.BlockTermState) throws java.io.IOException
    {
        byte[] $r3, $r4, $r5, $r6, $r10, $r12;
        org.apache.lucene.store.ByteArrayDataInput $r7, $r11;
        int $i0, $i1, $i2, $i3;
        org.apache.lucene.store.IndexInput r2;
        org.apache.lucene.codecs.BlockTermState r0;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader r8;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState r1;
        org.apache.lucene.index.FieldInfo r9;

        r8 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsReader;

        r2 := @parameter0: org.apache.lucene.store.IndexInput;

        r9 := @parameter1: org.apache.lucene.index.FieldInfo;

        r0 := @parameter2: org.apache.lucene.codecs.BlockTermState;

        r1 = (org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState) r0;

        $i0 = virtualinvoke r2.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r3 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: byte[] bytes>;

        if $r3 != null goto label1;

        $i3 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i0, 1);

        $r6 = newarray (byte)[$i3];

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: byte[] bytes> = $r6;

        $r7 = new org.apache.lucene.store.ByteArrayDataInput;

        specialinvoke $r7.<org.apache.lucene.store.ByteArrayDataInput: void <init>()>();

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: org.apache.lucene.store.ByteArrayDataInput bytesReader> = $r7;

        goto label2;

     label1:
        $r4 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: byte[] bytes>;

        $i1 = lengthof $r4;

        if $i1 >= $i0 goto label2;

        $i2 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i0, 1);

        $r5 = newarray (byte)[$i2];

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: byte[] bytes> = $r5;

     label2:
        $r10 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: byte[] bytes>;

        virtualinvoke r2.<org.apache.lucene.store.IndexInput: void readBytes(byte[],int,int)>($r10, 0, $i0);

        $r11 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: org.apache.lucene.store.ByteArrayDataInput bytesReader>;

        $r12 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: byte[] bytes>;

        virtualinvoke $r11.<org.apache.lucene.store.ByteArrayDataInput: void reset(byte[],int,int)>($r12, 0, $i0);

        return;
    }

    public void nextTerm(org.apache.lucene.index.FieldInfo, org.apache.lucene.codecs.BlockTermState) throws java.io.IOException
    {
        org.apache.lucene.store.ByteArrayDataInput $r7;
        byte $b12, $b14, $b17, $b26, $b28;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6;
        org.apache.lucene.index.FieldInfo$IndexOptions $r3, $r4, $r5, $r6;
        org.apache.lucene.codecs.BlockTermState r0;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState r1;
        long $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l13, $l15, $l16, $l18, $l19, $l20, $l23, $l24, $l25, $l27, $l29, $l30;
        int $i0, $i1, $i2, $i3, $i21, $i22, $i31, $i32, $i34, $i35, $i36, $i38, $i39, $i40;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader r8;
        org.apache.lucene.index.FieldInfo r2;

        r8 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsReader;

        r2 := @parameter0: org.apache.lucene.index.FieldInfo;

        r0 := @parameter1: org.apache.lucene.codecs.BlockTermState;

        r1 = (org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState) r0;

        $i0 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: int termBlockOrd>;

        if $i0 != 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        z0 = $z4;

        $r3 = virtualinvoke r2.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        $r4 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS>;

        $i1 = virtualinvoke $r3.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r4);

        if $i1 < 0 goto label03;

        $z5 = 1;

        goto label04;

     label03:
        $z5 = 0;

     label04:
        z1 = $z5;

        $r5 = virtualinvoke r2.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        $r6 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS>;

        $i2 = virtualinvoke $r5.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r6);

        if $i2 < 0 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        z2 = $z6;

        $z3 = virtualinvoke r2.<org.apache.lucene.index.FieldInfo: boolean hasPayloads()>();

        $r7 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: org.apache.lucene.store.ByteArrayDataInput bytesReader>;

        if z0 == 0 goto label13;

        $i22 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: int docFreq>;

        if $i22 != 1 goto label07;

        $i31 = virtualinvoke $r7.<org.apache.lucene.store.DataInput: int readVInt()>();

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: int singletonDocID> = $i31;

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long docStartFP> = 0L;

        goto label08;

     label07:
        $i34 = (int) -1;

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: int singletonDocID> = $i34;

        $l23 = virtualinvoke $r7.<org.apache.lucene.store.DataInput: long readVLong()>();

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long docStartFP> = $l23;

     label08:
        if z1 == 0 goto label20;

        $l24 = virtualinvoke $r7.<org.apache.lucene.store.DataInput: long readVLong()>();

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long posStartFP> = $l24;

        $l25 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long totalTermFreq>;

        $b26 = $l25 cmp 128L;

        $i35 = (int) $b26;

        if $i35 <= 0 goto label09;

        $l30 = virtualinvoke $r7.<org.apache.lucene.store.DataInput: long readVLong()>();

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long lastPosBlockOffset> = $l30;

        goto label10;

     label09:
        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long lastPosBlockOffset> = -1L;

     label10:
        if $z3 != 0 goto label11;

        if z2 == 0 goto label12;

     label11:
        $l27 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long totalTermFreq>;

        $b28 = $l27 cmp 128L;

        $i36 = (int) $b28;

        if $i36 < 0 goto label12;

        $l29 = virtualinvoke $r7.<org.apache.lucene.store.DataInput: long readVLong()>();

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long payStartFP> = $l29;

        goto label20;

     label12:
        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long payStartFP> = -1L;

        goto label20;

     label13:
        $i3 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: int docFreq>;

        if $i3 != 1 goto label14;

        $i21 = virtualinvoke $r7.<org.apache.lucene.store.DataInput: int readVInt()>();

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: int singletonDocID> = $i21;

        goto label15;

     label14:
        $i38 = (int) -1;

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: int singletonDocID> = $i38;

        $l4 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long docStartFP>;

        $l5 = virtualinvoke $r7.<org.apache.lucene.store.DataInput: long readVLong()>();

        $l6 = $l4 + $l5;

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long docStartFP> = $l6;

     label15:
        if z1 == 0 goto label20;

        $l8 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long posStartFP>;

        $l9 = virtualinvoke $r7.<org.apache.lucene.store.DataInput: long readVLong()>();

        $l10 = $l8 + $l9;

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long posStartFP> = $l10;

        $l11 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long totalTermFreq>;

        $b12 = $l11 cmp 128L;

        $i39 = (int) $b12;

        if $i39 <= 0 goto label16;

        $l20 = virtualinvoke $r7.<org.apache.lucene.store.DataInput: long readVLong()>();

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long lastPosBlockOffset> = $l20;

        goto label17;

     label16:
        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long lastPosBlockOffset> = -1L;

     label17:
        if $z3 != 0 goto label18;

        if z2 == 0 goto label20;

     label18:
        $l13 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long totalTermFreq>;

        $b14 = $l13 cmp 128L;

        $i40 = (int) $b14;

        if $i40 < 0 goto label20;

        $l15 = virtualinvoke $r7.<org.apache.lucene.store.DataInput: long readVLong()>();

        $l16 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long payStartFP>;

        $b17 = $l16 cmp -1L;

        if $b17 != 0 goto label19;

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long payStartFP> = $l15;

        goto label20;

     label19:
        $l18 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long payStartFP>;

        $l19 = $l18 + $l15;

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long payStartFP> = $l19;

     label20:
        $i32 = r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: int docFreq>;

        if $i32 <= 128 goto label21;

        $l7 = virtualinvoke $r7.<org.apache.lucene.store.DataInput: long readVLong()>();

        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long skipOffset> = $l7;

        goto label22;

     label21:
        r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState: long skipOffset> = -1L;

     label22:
        return;
    }

    public org.apache.lucene.index.DocsEnum docs(org.apache.lucene.index.FieldInfo, org.apache.lucene.codecs.BlockTermState, org.apache.lucene.util.Bits, org.apache.lucene.index.DocsEnum, int) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsEnum $r1, $r7, r8;
        org.apache.lucene.store.IndexInput $r6;
        org.apache.lucene.codecs.BlockTermState r5;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader r2;
        org.apache.lucene.index.DocsEnum r0, $r10;
        int i0;
        org.apache.lucene.index.FieldInfo r3;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState $r9;
        org.apache.lucene.util.Bits r4;
        boolean $z0, $z1;

        r2 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsReader;

        r3 := @parameter0: org.apache.lucene.index.FieldInfo;

        r5 := @parameter1: org.apache.lucene.codecs.BlockTermState;

        r4 := @parameter2: org.apache.lucene.util.Bits;

        r0 := @parameter3: org.apache.lucene.index.DocsEnum;

        i0 := @parameter4: int;

        $z0 = r0 instanceof org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsEnum;

        if $z0 == 0 goto label1;

        r8 = (org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsEnum) r0;

        $r6 = r2.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader: org.apache.lucene.store.IndexInput docIn>;

        $z1 = virtualinvoke r8.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsEnum: boolean canReuse(org.apache.lucene.store.IndexInput,org.apache.lucene.index.FieldInfo)>($r6, r3);

        if $z1 != 0 goto label2;

        $r7 = new org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsEnum;

        specialinvoke $r7.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsEnum: void <init>(org.apache.lucene.codecs.lucene41.Lucene41PostingsReader,org.apache.lucene.index.FieldInfo)>(r2, r3);

        r8 = $r7;

        goto label2;

     label1:
        $r1 = new org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsEnum;

        specialinvoke $r1.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsEnum: void <init>(org.apache.lucene.codecs.lucene41.Lucene41PostingsReader,org.apache.lucene.index.FieldInfo)>(r2, r3);

        r8 = $r1;

     label2:
        $r9 = (org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState) r5;

        $r10 = virtualinvoke r8.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsEnum: org.apache.lucene.index.DocsEnum reset(org.apache.lucene.util.Bits,org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState,int)>(r4, $r9, i0);

        return $r10;
    }

    public org.apache.lucene.index.DocsAndPositionsEnum docsAndPositions(org.apache.lucene.index.FieldInfo, org.apache.lucene.codecs.BlockTermState, org.apache.lucene.util.Bits, org.apache.lucene.index.DocsAndPositionsEnum, int) throws java.io.IOException
    {
        org.apache.lucene.index.DocsAndPositionsEnum r3, $r15;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$EverythingEnum $r10, $r12, r16, $r18;
        int $i0, i1, $i2, $i3;
        org.apache.lucene.util.Bits r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.lucene.index.FieldInfo$IndexOptions $r1, $r2;
        org.apache.lucene.store.IndexInput $r8, $r11;
        org.apache.lucene.codecs.BlockTermState r7;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader r5;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsAndPositionsEnum $r4, $r9, r13;
        org.apache.lucene.index.FieldInfo r0;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState $r14, $r17;

        r5 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsReader;

        r0 := @parameter0: org.apache.lucene.index.FieldInfo;

        r7 := @parameter1: org.apache.lucene.codecs.BlockTermState;

        r6 := @parameter2: org.apache.lucene.util.Bits;

        r3 := @parameter3: org.apache.lucene.index.DocsAndPositionsEnum;

        i1 := @parameter4: int;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        $r2 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r2);

        if $i0 < 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        $z0 = virtualinvoke r0.<org.apache.lucene.index.FieldInfo: boolean hasPayloads()>();

        if $z5 == 0 goto label3;

        $i3 = i1 & 1;

        if $i3 != 0 goto label7;

     label3:
        if $z0 == 0 goto label4;

        $i2 = i1 & 2;

        if $i2 != 0 goto label7;

     label4:
        $z1 = r3 instanceof org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsAndPositionsEnum;

        if $z1 == 0 goto label5;

        r13 = (org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsAndPositionsEnum) r3;

        $r8 = r5.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader: org.apache.lucene.store.IndexInput docIn>;

        $z2 = virtualinvoke r13.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsAndPositionsEnum: boolean canReuse(org.apache.lucene.store.IndexInput,org.apache.lucene.index.FieldInfo)>($r8, r0);

        if $z2 != 0 goto label6;

        $r9 = new org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsAndPositionsEnum;

        specialinvoke $r9.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsAndPositionsEnum: void <init>(org.apache.lucene.codecs.lucene41.Lucene41PostingsReader,org.apache.lucene.index.FieldInfo)>(r5, r0);

        r13 = $r9;

        goto label6;

     label5:
        $r4 = new org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsAndPositionsEnum;

        specialinvoke $r4.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsAndPositionsEnum: void <init>(org.apache.lucene.codecs.lucene41.Lucene41PostingsReader,org.apache.lucene.index.FieldInfo)>(r5, r0);

        r13 = $r4;

     label6:
        $r14 = (org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState) r7;

        $r15 = virtualinvoke r13.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$BlockDocsAndPositionsEnum: org.apache.lucene.index.DocsAndPositionsEnum reset(org.apache.lucene.util.Bits,org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState)>(r6, $r14);

        return $r15;

     label7:
        $z3 = r3 instanceof org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$EverythingEnum;

        if $z3 == 0 goto label8;

        r16 = (org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$EverythingEnum) r3;

        $r11 = r5.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader: org.apache.lucene.store.IndexInput docIn>;

        $z4 = virtualinvoke r16.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$EverythingEnum: boolean canReuse(org.apache.lucene.store.IndexInput,org.apache.lucene.index.FieldInfo)>($r11, r0);

        if $z4 != 0 goto label9;

        $r12 = new org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$EverythingEnum;

        specialinvoke $r12.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$EverythingEnum: void <init>(org.apache.lucene.codecs.lucene41.Lucene41PostingsReader,org.apache.lucene.index.FieldInfo)>(r5, r0);

        r16 = $r12;

        goto label9;

     label8:
        $r10 = new org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$EverythingEnum;

        specialinvoke $r10.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$EverythingEnum: void <init>(org.apache.lucene.codecs.lucene41.Lucene41PostingsReader,org.apache.lucene.index.FieldInfo)>(r5, r0);

        r16 = $r10;

     label9:
        $r17 = (org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState) r7;

        $r18 = virtualinvoke r16.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$EverythingEnum: org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$EverythingEnum reset(org.apache.lucene.util.Bits,org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState,int)>(r6, $r17, i1);

        return $r18;
    }

    public volatile org.apache.lucene.codecs.BlockTermState newTermState() throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader r0;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState $r1;

        r0 := @this: org.apache.lucene.codecs.lucene41.Lucene41PostingsReader;

        $r1 = virtualinvoke r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader: org.apache.lucene.codecs.lucene41.Lucene41PostingsReader$IntBlockTermState newTermState()>();

        return $r1;
    }

    static org.apache.lucene.store.IndexInput access$100(org.apache.lucene.codecs.lucene41.Lucene41PostingsReader)
    {
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader r0;
        org.apache.lucene.store.IndexInput $r1;

        r0 := @parameter0: org.apache.lucene.codecs.lucene41.Lucene41PostingsReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader: org.apache.lucene.store.IndexInput docIn>;

        return $r1;
    }

    static org.apache.lucene.codecs.lucene41.ForUtil access$200(org.apache.lucene.codecs.lucene41.Lucene41PostingsReader)
    {
        org.apache.lucene.codecs.lucene41.ForUtil $r1;
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader r0;

        r0 := @parameter0: org.apache.lucene.codecs.lucene41.Lucene41PostingsReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader: org.apache.lucene.codecs.lucene41.ForUtil forUtil>;

        return $r1;
    }

    static org.apache.lucene.store.IndexInput access$300(org.apache.lucene.codecs.lucene41.Lucene41PostingsReader)
    {
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader r0;
        org.apache.lucene.store.IndexInput $r1;

        r0 := @parameter0: org.apache.lucene.codecs.lucene41.Lucene41PostingsReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader: org.apache.lucene.store.IndexInput posIn>;

        return $r1;
    }

    static org.apache.lucene.store.IndexInput access$400(org.apache.lucene.codecs.lucene41.Lucene41PostingsReader)
    {
        org.apache.lucene.codecs.lucene41.Lucene41PostingsReader r0;
        org.apache.lucene.store.IndexInput $r1;

        r0 := @parameter0: org.apache.lucene.codecs.lucene41.Lucene41PostingsReader;

        $r1 = r0.<org.apache.lucene.codecs.lucene41.Lucene41PostingsReader: org.apache.lucene.store.IndexInput payIn>;

        return $r1;
    }
}
