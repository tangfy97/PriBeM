class com.mycila.inject.internal.cglib.util.ParallelSorterEmitter extends com.mycila.inject.internal.cglib.core.ClassEmitter
{
    private static final com.mycila.inject.internal.asm.Type PARALLEL_SORTER;
    private static final com.mycila.inject.internal.cglib.core.Signature CSTRUCT_OBJECT_ARRAY;
    private static final com.mycila.inject.internal.cglib.core.Signature NEW_INSTANCE;
    private static final com.mycila.inject.internal.cglib.core.Signature SWAP;

    public void <init>(com.mycila.inject.internal.asm.ClassVisitor, java.lang.String, java.lang.Object[])
    {
        com.mycila.inject.internal.cglib.util.ParallelSorterEmitter r0;
        java.lang.Object[] r5;
        com.mycila.inject.internal.cglib.core.Signature $r4;
        com.mycila.inject.internal.asm.Type $r3;
        java.lang.String r2;
        com.mycila.inject.internal.asm.ClassVisitor r1;

        r0 := @this: com.mycila.inject.internal.cglib.util.ParallelSorterEmitter;

        r1 := @parameter0: com.mycila.inject.internal.asm.ClassVisitor;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.Object[];

        specialinvoke r0.<com.mycila.inject.internal.cglib.core.ClassEmitter: void <init>(com.mycila.inject.internal.asm.ClassVisitor)>(r1);

        $r3 = <com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: com.mycila.inject.internal.asm.Type PARALLEL_SORTER>;

        virtualinvoke r0.<com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: void begin_class(int,int,java.lang.String,com.mycila.inject.internal.asm.Type,com.mycila.inject.internal.asm.Type[],java.lang.String)>(46, 1, r2, $r3, null, "<generated>");

        staticinvoke <com.mycila.inject.internal.cglib.core.EmitUtils: void null_constructor(com.mycila.inject.internal.cglib.core.ClassEmitter)>(r0);

        $r4 = <com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: com.mycila.inject.internal.cglib.core.Signature NEW_INSTANCE>;

        staticinvoke <com.mycila.inject.internal.cglib.core.EmitUtils: void factory_method(com.mycila.inject.internal.cglib.core.ClassEmitter,com.mycila.inject.internal.cglib.core.Signature)>(r0, $r4);

        specialinvoke r0.<com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: void generateConstructor(java.lang.Object[])>(r5);

        specialinvoke r0.<com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: void generateSwap(java.lang.Object[])>(r5);

        virtualinvoke r0.<com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: void end_class()>();

        return;
    }

    private java.lang.String getFieldName(int)
    {
        com.mycila.inject.internal.cglib.util.ParallelSorterEmitter r4;
        java.lang.StringBuffer $r0, $r1, $r2;
        int i0;
        java.lang.String $r3;

        r4 := @this: com.mycila.inject.internal.cglib.util.ParallelSorterEmitter;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("FIELD_");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    private void generateConstructor(java.lang.Object[])
    {
        java.lang.Object[] r4;
        com.mycila.inject.internal.cglib.core.Signature $r1;
        com.mycila.inject.internal.asm.Type $r3, $r7;
        com.mycila.inject.internal.cglib.core.CodeEmitter $r2;
        com.mycila.inject.internal.cglib.util.ParallelSorterEmitter r0;
        int $i0, i1;
        java.lang.Object $r5;
        java.lang.Class $r6;
        java.lang.String $r8, $r9;

        r0 := @this: com.mycila.inject.internal.cglib.util.ParallelSorterEmitter;

        r4 := @parameter0: java.lang.Object[];

        $r1 = <com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: com.mycila.inject.internal.cglib.core.Signature CSTRUCT_OBJECT_ARRAY>;

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: com.mycila.inject.internal.cglib.core.CodeEmitter begin_method(int,com.mycila.inject.internal.cglib.core.Signature,com.mycila.inject.internal.asm.Type[])>(1, $r1, null);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_this()>();

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void super_invoke_constructor()>();

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_this()>();

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_arg(int)>(0);

        $r3 = <com.mycila.inject.internal.cglib.core.Constants: com.mycila.inject.internal.asm.Type TYPE_OBJECT_ARRAY>;

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void super_putfield(java.lang.String,com.mycila.inject.internal.asm.Type)>("a", $r3);

        i1 = 0;

     label1:
        $i0 = lengthof r4;

        if i1 >= $i0 goto label2;

        $r5 = r4[i1];

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = staticinvoke <com.mycila.inject.internal.asm.Type: com.mycila.inject.internal.asm.Type getType(java.lang.Class)>($r6);

        $r8 = specialinvoke r0.<com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: java.lang.String getFieldName(int)>(i1);

        virtualinvoke r0.<com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: void declare_field(int,java.lang.String,com.mycila.inject.internal.asm.Type,java.lang.Object)>(2, $r8, $r7, null);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_this()>();

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_arg(int)>(0);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void push(int)>(i1);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void aaload()>();

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void checkcast(com.mycila.inject.internal.asm.Type)>($r7);

        $r9 = specialinvoke r0.<com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: java.lang.String getFieldName(int)>(i1);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void putfield(java.lang.String)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void return_value()>();

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void end_method()>();

        return;
    }

    private void generateSwap(java.lang.Object[])
    {
        java.lang.Object[] r3;
        com.mycila.inject.internal.cglib.core.Signature $r1;
        com.mycila.inject.internal.asm.Type $r6, $r7;
        com.mycila.inject.internal.cglib.core.CodeEmitter $r2;
        com.mycila.inject.internal.cglib.core.Local $r8;
        com.mycila.inject.internal.cglib.util.ParallelSorterEmitter r0;
        int $i0, i1;
        java.lang.Object $r4;
        java.lang.Class $r5;
        java.lang.String $r9;

        r0 := @this: com.mycila.inject.internal.cglib.util.ParallelSorterEmitter;

        r3 := @parameter0: java.lang.Object[];

        $r1 = <com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: com.mycila.inject.internal.cglib.core.Signature SWAP>;

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: com.mycila.inject.internal.cglib.core.CodeEmitter begin_method(int,com.mycila.inject.internal.cglib.core.Signature,com.mycila.inject.internal.asm.Type[])>(1, $r1, null);

        i1 = 0;

     label1:
        $i0 = lengthof r3;

        if i1 >= $i0 goto label2;

        $r4 = r3[i1];

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = staticinvoke <com.mycila.inject.internal.asm.Type: com.mycila.inject.internal.asm.Type getType(java.lang.Class)>($r5);

        $r7 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: com.mycila.inject.internal.asm.Type getComponentType(com.mycila.inject.internal.asm.Type)>($r6);

        $r8 = virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: com.mycila.inject.internal.cglib.core.Local make_local(com.mycila.inject.internal.asm.Type)>($r6);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_this()>();

        $r9 = specialinvoke r0.<com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: java.lang.String getFieldName(int)>(i1);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void getfield(java.lang.String)>($r9);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void store_local(com.mycila.inject.internal.cglib.core.Local)>($r8);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_local(com.mycila.inject.internal.cglib.core.Local)>($r8);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_arg(int)>(0);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_local(com.mycila.inject.internal.cglib.core.Local)>($r8);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_arg(int)>(1);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void array_load(com.mycila.inject.internal.asm.Type)>($r7);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_local(com.mycila.inject.internal.cglib.core.Local)>($r8);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_arg(int)>(1);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_local(com.mycila.inject.internal.cglib.core.Local)>($r8);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_arg(int)>(0);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void array_load(com.mycila.inject.internal.asm.Type)>($r7);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void array_store(com.mycila.inject.internal.asm.Type)>($r7);

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void array_store(com.mycila.inject.internal.asm.Type)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void return_value()>();

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void end_method()>();

        return;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.cglib.core.Signature $r1, $r2, $r6;
        com.mycila.inject.internal.asm.Type $r0, $r4, $r5;
        com.mycila.inject.internal.asm.Type[] $r3;

        $r0 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: com.mycila.inject.internal.asm.Type parseType(java.lang.String)>("com.mycila.inject.internal.cglib.util.ParallelSorter");

        <com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: com.mycila.inject.internal.asm.Type PARALLEL_SORTER> = $r0;

        $r1 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: com.mycila.inject.internal.cglib.core.Signature parseConstructor(java.lang.String)>("Object[]");

        <com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: com.mycila.inject.internal.cglib.core.Signature CSTRUCT_OBJECT_ARRAY> = $r1;

        $r2 = new com.mycila.inject.internal.cglib.core.Signature;

        $r5 = <com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: com.mycila.inject.internal.asm.Type PARALLEL_SORTER>;

        $r3 = newarray (com.mycila.inject.internal.asm.Type)[1];

        $r4 = <com.mycila.inject.internal.cglib.core.Constants: com.mycila.inject.internal.asm.Type TYPE_OBJECT_ARRAY>;

        $r3[0] = $r4;

        specialinvoke $r2.<com.mycila.inject.internal.cglib.core.Signature: void <init>(java.lang.String,com.mycila.inject.internal.asm.Type,com.mycila.inject.internal.asm.Type[])>("newInstance", $r5, $r3);

        <com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: com.mycila.inject.internal.cglib.core.Signature NEW_INSTANCE> = $r2;

        $r6 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: com.mycila.inject.internal.cglib.core.Signature parseSignature(java.lang.String)>("void swap(int, int)");

        <com.mycila.inject.internal.cglib.util.ParallelSorterEmitter: com.mycila.inject.internal.cglib.core.Signature SWAP> = $r6;

        return;
    }
}
