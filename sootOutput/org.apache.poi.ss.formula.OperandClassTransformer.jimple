final class org.apache.poi.ss.formula.OperandClassTransformer extends java.lang.Object
{
    private final int _formulaType;

    public void <init>(int)
    {
        int i0;
        org.apache.poi.ss.formula.OperandClassTransformer r0;

        r0 := @this: org.apache.poi.ss.formula.OperandClassTransformer;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.ss.formula.OperandClassTransformer: int _formulaType> = i0;

        return;
    }

    public void transformFormula(org.apache.poi.ss.formula.ParseNode)
    {
        org.apache.poi.ss.formula.ParseNode r1;
        java.lang.RuntimeException $r2;
        org.apache.poi.ss.formula.OperandClassTransformer r0;
        byte b2;
        int $i0, $i1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: org.apache.poi.ss.formula.OperandClassTransformer;

        r1 := @parameter0: org.apache.poi.ss.formula.ParseNode;

        $i0 = r0.<org.apache.poi.ss.formula.OperandClassTransformer: int _formulaType>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label4;
            case 2: goto label2;
            case 3: goto label4;
            case 4: goto label3;
            case 5: goto label3;
            default: goto label4;
        };

     label1:
        b2 = 32;

        goto label5;

     label2:
        b2 = 64;

        goto label5;

     label3:
        b2 = 0;

        goto label5;

     label4:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incomplete code - formula type (");

        $i1 = r0.<org.apache.poi.ss.formula.OperandClassTransformer: int _formulaType>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not supported yet");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label5:
        specialinvoke r0.<org.apache.poi.ss.formula.OperandClassTransformer: void transformNode(org.apache.poi.ss.formula.ParseNode,byte,boolean)>(r1, b2, 0);

        return;
    }

    private void transformNode(org.apache.poi.ss.formula.ParseNode, byte, boolean)
    {
        java.lang.IllegalStateException $r11;
        byte b0, $b2, $b3, $b6, b7;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11;
        org.apache.poi.ss.formula.ptg.Ptg $r1, r10;
        int $i1, i4, $i5, i8, $i9, $i10;
        org.apache.poi.ss.formula.ptg.AbstractFunctionPtg $r7, $r8;
        org.apache.poi.ss.formula.ParseNode r0, $r4, $r9;
        org.apache.poi.ss.formula.OperandClassTransformer r3;
        org.apache.poi.ss.formula.ptg.OperationPtg $r5;
        org.apache.poi.ss.formula.ParseNode[] $r2;

        r3 := @this: org.apache.poi.ss.formula.OperandClassTransformer;

        r0 := @parameter0: org.apache.poi.ss.formula.ParseNode;

        b0 := @parameter1: byte;

        z3 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ptg.Ptg getToken()>();

        r10 = $r1;

        $r2 = virtualinvoke r0.<org.apache.poi.ss.formula.ParseNode: org.apache.poi.ss.formula.ParseNode[] getChildren()>();

        $z0 = staticinvoke <org.apache.poi.ss.formula.OperandClassTransformer: boolean isSimpleValueFunction(org.apache.poi.ss.formula.ptg.Ptg)>($r1);

        if $z0 == 0 goto label05;

        $i10 = (int) b0;

        if $i10 != 64 goto label01;

        $z10 = 1;

        goto label02;

     label01:
        $z10 = 0;

     label02:
        z11 = $z10;

        i4 = 0;

     label03:
        $i5 = lengthof $r2;

        if i4 >= $i5 goto label04;

        $r9 = $r2[i4];

        specialinvoke r3.<org.apache.poi.ss.formula.OperandClassTransformer: void transformNode(org.apache.poi.ss.formula.ParseNode,byte,boolean)>($r9, b0, z11);

        i4 = i4 + 1;

        goto label03;

     label04:
        $r8 = (org.apache.poi.ss.formula.ptg.AbstractFunctionPtg) $r1;

        specialinvoke r3.<org.apache.poi.ss.formula.OperandClassTransformer: void setSimpleValueFuncClass(org.apache.poi.ss.formula.ptg.AbstractFunctionPtg,byte,boolean)>($r8, b0, z3);

        return;

     label05:
        $z1 = staticinvoke <org.apache.poi.ss.formula.OperandClassTransformer: boolean isSingleArgSum(org.apache.poi.ss.formula.ptg.Ptg)>($r1);

        if $z1 == 0 goto label06;

        r10 = <org.apache.poi.ss.formula.ptg.FuncVarPtg: org.apache.poi.ss.formula.ptg.OperationPtg SUM>;

     label06:
        $z2 = r10 instanceof org.apache.poi.ss.formula.ptg.ValueOperatorPtg;

        if $z2 != 0 goto label07;

        $z4 = r10 instanceof org.apache.poi.ss.formula.ptg.ControlPtg;

        if $z4 != 0 goto label07;

        $z5 = r10 instanceof org.apache.poi.ss.formula.ptg.MemFuncPtg;

        if $z5 != 0 goto label07;

        $z6 = r10 instanceof org.apache.poi.ss.formula.ptg.MemAreaPtg;

        if $z6 != 0 goto label07;

        $z7 = r10 instanceof org.apache.poi.ss.formula.ptg.UnionPtg;

        if $z7 == 0 goto label12;

     label07:
        if b0 != 0 goto label08;

        $b6 = 32;

        goto label09;

     label08:
        $b6 = b0;

     label09:
        b7 = $b6;

        i8 = 0;

     label10:
        $i9 = lengthof $r2;

        if i8 >= $i9 goto label11;

        $r4 = $r2[i8];

        specialinvoke r3.<org.apache.poi.ss.formula.OperandClassTransformer: void transformNode(org.apache.poi.ss.formula.ParseNode,byte,boolean)>($r4, b7, z3);

        i8 = i8 + 1;

        goto label10;

     label11:
        return;

     label12:
        $z8 = r10 instanceof org.apache.poi.ss.formula.ptg.AbstractFunctionPtg;

        if $z8 == 0 goto label13;

        $r7 = (org.apache.poi.ss.formula.ptg.AbstractFunctionPtg) r10;

        specialinvoke r3.<org.apache.poi.ss.formula.OperandClassTransformer: void transformFunctionNode(org.apache.poi.ss.formula.ptg.AbstractFunctionPtg,org.apache.poi.ss.formula.ParseNode[],byte,boolean)>($r7, $r2, b0, z3);

        return;

     label13:
        $i1 = lengthof $r2;

        if $i1 <= 0 goto label15;

        $r5 = <org.apache.poi.ss.formula.ptg.RangePtg: org.apache.poi.ss.formula.ptg.OperationPtg instance>;

        if r10 != $r5 goto label14;

        return;

     label14:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Node should not have any children");

        throw $r11;

     label15:
        $z9 = virtualinvoke r10.<org.apache.poi.ss.formula.ptg.Ptg: boolean isBaseToken()>();

        if $z9 == 0 goto label16;

        return;

     label16:
        $b2 = virtualinvoke r10.<org.apache.poi.ss.formula.ptg.Ptg: byte getPtgClass()>();

        $b3 = specialinvoke r3.<org.apache.poi.ss.formula.OperandClassTransformer: byte transformClass(byte,byte,boolean)>($b2, b0, z3);

        virtualinvoke r10.<org.apache.poi.ss.formula.ptg.Ptg: void setClass(byte)>($b3);

        return;
    }

    private static boolean isSingleArgSum(org.apache.poi.ss.formula.ptg.Ptg)
    {
        org.apache.poi.ss.formula.ptg.Ptg r0;
        org.apache.poi.ss.formula.ptg.AttrPtg r1;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.poi.ss.formula.ptg.Ptg;

        $z0 = r0 instanceof org.apache.poi.ss.formula.ptg.AttrPtg;

        if $z0 == 0 goto label1;

        r1 = (org.apache.poi.ss.formula.ptg.AttrPtg) r0;

        $z1 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.AttrPtg: boolean isSum()>();

        return $z1;

     label1:
        return 0;
    }

    private static boolean isSimpleValueFunction(org.apache.poi.ss.formula.ptg.Ptg)
    {
        org.apache.poi.ss.formula.ptg.Ptg r0;
        byte $b0, $b2;
        int $i1, i3, $i4, $i5, $i7;
        org.apache.poi.ss.formula.ptg.AbstractFunctionPtg r1;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.ss.formula.ptg.Ptg;

        $z0 = r0 instanceof org.apache.poi.ss.formula.ptg.AbstractFunctionPtg;

        if $z0 == 0 goto label5;

        r1 = (org.apache.poi.ss.formula.ptg.AbstractFunctionPtg) r0;

        $b0 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: byte getDefaultOperandClass()>();

        $i4 = (int) $b0;

        if $i4 == 32 goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: int getNumberOfOperands()>();

        i3 = $i1 - 1;

     label2:
        if i3 < 0 goto label4;

        $b2 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: byte getParameterClass(int)>(i3);

        $i5 = (int) $b2;

        if $i5 == 32 goto label3;

        return 0;

     label3:
        $i7 = (int) -1;

        i3 = i3 + $i7;

        goto label2;

     label4:
        return 1;

     label5:
        return 0;
    }

    private byte transformClass(byte, byte, boolean)
    {
        java.lang.IllegalStateException $r8;
        org.apache.poi.ss.formula.OperandClassTransformer r6;
        byte b0, b1;
        int $i2, $i3;
        java.lang.StringBuilder $r2, $r3, $r4, $r7;
        java.lang.String $r5;
        boolean z0;

        r6 := @this: org.apache.poi.ss.formula.OperandClassTransformer;

        b1 := @parameter0: byte;

        b0 := @parameter1: byte;

        z0 := @parameter2: boolean;

        $i2 = (int) b0;

        lookupswitch($i2)
        {
            case 0: goto label3;
            case 32: goto label1;
            case 64: goto label2;
            default: goto label5;
        };

     label1:
        if z0 != 0 goto label2;

        return 32;

     label2:
        return 64;

     label3:
        if z0 != 0 goto label4;

        return b1;

     label4:
        return 0;

     label5:
        $r8 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected operand class (");

        $i3 = (int) b0;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r8;
    }

    private void transformFunctionNode(org.apache.poi.ss.formula.ptg.AbstractFunctionPtg, org.apache.poi.ss.formula.ParseNode[], byte, boolean)
    {
        java.lang.IllegalStateException $r29, $r31, $r33, $r35;
        byte $b0, b1, $b2;
        boolean z0, z1, $z2;
        java.lang.StringBuilder $r6, $r7, $r8, $r12, $r13, $r14, $r18, $r19, $r20, $r24, $r25, $r26, $r28, $r30, $r32, $r34;
        int i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String $r9, $r15, $r21, $r27;
        org.apache.poi.ss.formula.ptg.AbstractFunctionPtg r0;
        org.apache.poi.ss.formula.ParseNode r2;
        org.apache.poi.ss.formula.OperandClassTransformer r3;
        org.apache.poi.ss.formula.ParseNode[] r1;

        r3 := @this: org.apache.poi.ss.formula.OperandClassTransformer;

        r0 := @parameter0: org.apache.poi.ss.formula.ptg.AbstractFunctionPtg;

        r1 := @parameter1: org.apache.poi.ss.formula.ParseNode[];

        b1 := @parameter2: byte;

        z0 := @parameter3: boolean;

        $b0 = virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: byte getDefaultOperandClass()>();

        if z0 == 0 goto label07;

        $i5 = (int) $b0;

        lookupswitch($i5)
        {
            case 0: goto label01;
            case 32: goto label05;
            case 64: goto label04;
            default: goto label06;
        };

     label01:
        if b1 != 0 goto label02;

        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: void setClass(byte)>(0);

        goto label03;

     label02:
        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: void setClass(byte)>(64);

     label03:
        z1 = 0;

        goto label23;

     label04:
        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: void setClass(byte)>(64);

        z1 = 0;

        goto label23;

     label05:
        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: void setClass(byte)>(64);

        z1 = 1;

        goto label23;

     label06:
        $r29 = new java.lang.IllegalStateException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected operand class (");

        $i6 = (int) $b0;

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r27);

        throw $r29;

     label07:
        $i7 = (int) $b0;

        $i8 = (int) b1;

        if $i7 != $i8 goto label08;

        z1 = 0;

        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: void setClass(byte)>($b0);

        goto label23;

     label08:
        $i9 = (int) b1;

        lookupswitch($i9)
        {
            case 0: goto label17;
            case 32: goto label09;
            case 64: goto label10;
            default: goto label22;
        };

     label09:
        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: void setClass(byte)>(32);

        z1 = 0;

        goto label23;

     label10:
        $i10 = (int) $b0;

        lookupswitch($i10)
        {
            case 0: goto label11;
            case 32: goto label12;
            default: goto label13;
        };

     label11:
        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: void setClass(byte)>(0);

        goto label14;

     label12:
        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: void setClass(byte)>(64);

        goto label14;

     label13:
        $r31 = new java.lang.IllegalStateException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected operand class (");

        $i11 = (int) $b0;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r31;

     label14:
        $i12 = (int) $b0;

        if $i12 != 32 goto label15;

        $z2 = 1;

        goto label16;

     label15:
        $z2 = 0;

     label16:
        z1 = $z2;

        goto label23;

     label17:
        $i13 = (int) $b0;

        lookupswitch($i13)
        {
            case 32: goto label19;
            case 64: goto label18;
            default: goto label20;
        };

     label18:
        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: void setClass(byte)>(64);

        goto label21;

     label19:
        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: void setClass(byte)>(32);

        goto label21;

     label20:
        $r33 = new java.lang.IllegalStateException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected operand class (");

        $i14 = (int) $b0;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r33;

     label21:
        z1 = 0;

        goto label23;

     label22:
        $r35 = new java.lang.IllegalStateException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected operand class (");

        $i15 = (int) b1;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r35;

     label23:
        i3 = 0;

     label24:
        $i4 = lengthof r1;

        if i3 >= $i4 goto label25;

        r2 = r1[i3];

        $b2 = virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: byte getParameterClass(int)>(i3);

        specialinvoke r3.<org.apache.poi.ss.formula.OperandClassTransformer: void transformNode(org.apache.poi.ss.formula.ParseNode,byte,boolean)>(r2, $b2, z1);

        i3 = i3 + 1;

        goto label24;

     label25:
        return;
    }

    private void setSimpleValueFuncClass(org.apache.poi.ss.formula.ptg.AbstractFunctionPtg, byte, boolean)
    {
        byte b0;
        int $i1;
        org.apache.poi.ss.formula.ptg.AbstractFunctionPtg r0;
        org.apache.poi.ss.formula.OperandClassTransformer r1;
        boolean z0;

        r1 := @this: org.apache.poi.ss.formula.OperandClassTransformer;

        r0 := @parameter0: org.apache.poi.ss.formula.ptg.AbstractFunctionPtg;

        b0 := @parameter1: byte;

        z0 := @parameter2: boolean;

        if z0 != 0 goto label1;

        $i1 = (int) b0;

        if $i1 != 64 goto label2;

     label1:
        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: void setClass(byte)>(64);

        goto label3;

     label2:
        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AbstractFunctionPtg: void setClass(byte)>(32);

     label3:
        return;
    }
}
