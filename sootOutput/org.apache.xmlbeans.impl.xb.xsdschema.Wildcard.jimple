public interface  org.apache.xmlbeans.impl.xb.xsdschema.Wildcard extends java.lang.Object implements org.apache.xmlbeans.impl.xb.xsdschema.Annotated
{
    public static final org.apache.xmlbeans.SchemaType type;

    public abstract java.lang.Object getNamespace();

    public abstract org.apache.xmlbeans.impl.xb.xsdschema.NamespaceList xgetNamespace();

    public abstract boolean isSetNamespace();

    public abstract void setNamespace(java.lang.Object);

    public abstract void xsetNamespace(org.apache.xmlbeans.impl.xb.xsdschema.NamespaceList);

    public abstract void unsetNamespace();

    public abstract org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents$Enum getProcessContents();

    public abstract org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents xgetProcessContents();

    public abstract boolean isSetProcessContents();

    public abstract void setProcessContents(org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents$Enum);

    public abstract void xsetProcessContents(org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents);

    public abstract void unsetProcessContents();

    static void <clinit>()
    {
        org.apache.xmlbeans.SchemaTypeSystem $r2;
        java.lang.Class $r0, $r5;
        org.apache.xmlbeans.SchemaComponent $r3;
        java.lang.ClassLoader $r1;
        org.apache.xmlbeans.SchemaType $r4;

        $r0 = <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$1: java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdschema$Wildcard>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$1: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.xb.xsdschema.Wildcard");

        <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$1: java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdschema$Wildcard> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$1: java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdschema$Wildcard>;

     label2:
        $r1 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeSystem typeSystemForClassLoader(java.lang.ClassLoader,java.lang.String)>($r1, "schemaorg_apache_xmlbeans.system.sXMLSCHEMA");

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaComponent resolveHandle(java.lang.String)>("wildcarde0b9type");

        $r4 = (org.apache.xmlbeans.SchemaType) $r3;

        <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard: org.apache.xmlbeans.SchemaType type> = $r4;

        return;
    }
}
