public abstract class arq.cmdline.CmdGeneral extends arq.cmdline.CmdArgModule implements arq.cmdline.CallbackHelp
{
    protected arq.cmdline.ModGeneral modGeneral;
    protected arq.cmdline.ModVersion modVersion;
    private arq.cmdline.Usage usage;
    protected java.lang.String cmdName;

    protected void <init>(java.lang.String[])
    {
        arq.cmdline.Usage $r4;
        arq.cmdline.ModGeneral $r2, $r5;
        arq.cmdline.CmdGeneral r0;
        java.lang.String[] r1;
        arq.cmdline.ModVersion $r3, $r6;

        r0 := @this: arq.cmdline.CmdGeneral;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<arq.cmdline.CmdArgModule: void <init>(java.lang.String[])>(r1);

        $r2 = new arq.cmdline.ModGeneral;

        specialinvoke $r2.<arq.cmdline.ModGeneral: void <init>(arq.cmdline.CallbackHelp)>(r0);

        r0.<arq.cmdline.CmdGeneral: arq.cmdline.ModGeneral modGeneral> = $r2;

        $r3 = new arq.cmdline.ModVersion;

        specialinvoke $r3.<arq.cmdline.ModVersion: void <init>(boolean)>(1);

        r0.<arq.cmdline.CmdGeneral: arq.cmdline.ModVersion modVersion> = $r3;

        $r4 = new arq.cmdline.Usage;

        specialinvoke $r4.<arq.cmdline.Usage: void <init>()>();

        r0.<arq.cmdline.CmdGeneral: arq.cmdline.Usage usage> = $r4;

        r0.<arq.cmdline.CmdGeneral: java.lang.String cmdName> = null;

        $r5 = r0.<arq.cmdline.CmdGeneral: arq.cmdline.ModGeneral modGeneral>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void addModule(arq.cmdline.ArgModuleGeneral)>($r5);

        $r6 = r0.<arq.cmdline.CmdGeneral: arq.cmdline.ModVersion modVersion>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void addModule(arq.cmdline.ArgModuleGeneral)>($r6);

        return;
    }

    public void addModule(arq.cmdline.ArgModuleGeneral)
    {
        arq.cmdline.CmdGeneral r0;
        arq.cmdline.ArgModuleGeneral r1;

        r0 := @this: arq.cmdline.CmdGeneral;

        r1 := @parameter0: arq.cmdline.ArgModuleGeneral;

        specialinvoke r0.<arq.cmdline.CmdArgModule: void addModule(arq.cmdline.ArgModuleGeneral)>(r1);

        interfaceinvoke r1.<arq.cmdline.ArgModuleGeneral: void registerWith(arq.cmdline.CmdGeneral)>(r0);

        return;
    }

    protected boolean isVerbose()
    {
        arq.cmdline.ModGeneral $r1;
        arq.cmdline.CmdGeneral r0;
        boolean $z0;

        r0 := @this: arq.cmdline.CmdGeneral;

        $r1 = r0.<arq.cmdline.CmdGeneral: arq.cmdline.ModGeneral modGeneral>;

        $z0 = $r1.<arq.cmdline.ModGeneral: boolean verbose>;

        return $z0;
    }

    protected boolean isQuiet()
    {
        arq.cmdline.ModGeneral $r1;
        arq.cmdline.CmdGeneral r0;
        boolean $z0;

        r0 := @this: arq.cmdline.CmdGeneral;

        $r1 = r0.<arq.cmdline.CmdGeneral: arq.cmdline.ModGeneral modGeneral>;

        $z0 = $r1.<arq.cmdline.ModGeneral: boolean quiet>;

        return $z0;
    }

    protected boolean isDebug()
    {
        arq.cmdline.ModGeneral $r1;
        arq.cmdline.CmdGeneral r0;
        boolean $z0;

        r0 := @this: arq.cmdline.CmdGeneral;

        $r1 = r0.<arq.cmdline.CmdGeneral: arq.cmdline.ModGeneral modGeneral>;

        $z0 = $r1.<arq.cmdline.ModGeneral: boolean debug>;

        return $z0;
    }

    protected boolean help()
    {
        arq.cmdline.ModGeneral $r1;
        arq.cmdline.CmdGeneral r0;
        boolean $z0;

        r0 := @this: arq.cmdline.CmdGeneral;

        $r1 = r0.<arq.cmdline.CmdGeneral: arq.cmdline.ModGeneral modGeneral>;

        $z0 = $r1.<arq.cmdline.ModGeneral: boolean help>;

        return $z0;
    }

    public final void doHelp()
    {
        arq.cmdline.CmdGeneral r0;
        arq.cmd.TerminationException $r1;

        r0 := @this: arq.cmdline.CmdGeneral;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void usage()>();

        $r1 = new arq.cmd.TerminationException;

        specialinvoke $r1.<arq.cmd.TerminationException: void <init>(int)>(0);

        throw $r1;
    }

    protected abstract java.lang.String getSummary();

    public void usage()
    {
        java.io.PrintStream $r1;
        arq.cmdline.CmdGeneral r0;

        r0 := @this: arq.cmdline.CmdGeneral;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void usage(java.io.PrintStream)>($r1);

        return;
    }

    public void usage(java.io.PrintStream)
    {
        java.io.PrintStream r1;
        arq.cmdline.Usage $r4;
        arq.cmdline.CmdGeneral r2;
        java.lang.String $r3;
        org.apache.jena.atlas.io.IndentedWriter $r0;

        r2 := @this: arq.cmdline.CmdGeneral;

        r1 := @parameter0: java.io.PrintStream;

        $r0 = new org.apache.jena.atlas.io.IndentedWriter;

        specialinvoke $r0.<org.apache.jena.atlas.io.IndentedWriter: void <init>(java.io.OutputStream)>(r1);

        $r3 = virtualinvoke r2.<arq.cmdline.CmdGeneral: java.lang.String getSummary()>();

        virtualinvoke $r0.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>($r3);

        $r4 = r2.<arq.cmdline.CmdGeneral: arq.cmdline.Usage usage>;

        virtualinvoke $r4.<arq.cmdline.Usage: void output(org.apache.jena.atlas.io.IndentedWriter)>($r0);

        return;
    }

    public void add(arq.cmdline.ArgDecl, java.lang.String, java.lang.String)
    {
        arq.cmdline.Usage $r2;
        arq.cmdline.CmdGeneral r0;
        arq.cmdline.ArgDecl r1;
        java.lang.String r3, r4;

        r0 := @this: arq.cmdline.CmdGeneral;

        r1 := @parameter0: arq.cmdline.ArgDecl;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: arq.cmdline.CmdLineArgs add(arq.cmdline.ArgDecl)>(r1);

        $r2 = virtualinvoke r0.<arq.cmdline.CmdGeneral: arq.cmdline.Usage getUsage()>();

        virtualinvoke $r2.<arq.cmdline.Usage: void addUsage(java.lang.String,java.lang.String)>(r3, r4);

        return;
    }

    public arq.cmdline.Usage getUsage()
    {
        arq.cmdline.CmdGeneral r0;
        arq.cmdline.Usage $r1;

        r0 := @this: arq.cmdline.CmdGeneral;

        $r1 = r0.<arq.cmdline.CmdGeneral: arq.cmdline.Usage usage>;

        return $r1;
    }

    static void <clinit>()
    {
        staticinvoke <arq.cmd.CmdUtils: void setN3Params()>();

        staticinvoke <com.hp.hpl.jena.query.ARQ: void init()>();

        return;
    }
}
