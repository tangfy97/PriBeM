public class com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl extends java.lang.Object implements com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder
{
    private static java.util.logging.Logger LOG;
    private static java.util.Map getTimesCache;
    private static java.util.Map getSampleNumbersCache;
    private final int minFragmentDurationSeconds;
    private com.googlecode.mp4parser.authoring.Movie movie;
    private com.googlecode.mp4parser.authoring.Track referenceTrack;

    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r3, $r4;
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lcom/googlecode/mp4parser/authoring/builder/SyncSampleIntersectFinderImpl;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.logging.Logger LOG> = $r2;

        $r3 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.Map getTimesCache> = $r3;

        $r4 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.Map getSampleNumbersCache> = $r4;

        return;
    }

    public void <init>(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.Track r2;
        com.googlecode.mp4parser.authoring.Movie r1;
        int i0;
        com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl r0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r2 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: com.googlecode.mp4parser.authoring.Movie movie> = r1;

        r0.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: com.googlecode.mp4parser.authoring.Track referenceTrack> = r2;

        r0.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: int minFragmentDurationSeconds> = i0;

        return;
    }

    public long[] sampleNumbers(com.googlecode.mp4parser.authoring.Track)
    {
        byte $b11, $b19;
        java.util.Map $r4, $r21, $r47, $r71;
        com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl$CacheTuple $r77;
        java.lang.Object[] $r68;
        long $l5, $l6, $l7, $l10, l13, $l15, $l16, l17, $l18, $l21, $l22, $l23, $l26, l28, l29, l32, l34;
        com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl r2;
        long[][] $r67, $r69;
        com.coremedia.iso.boxes.sampleentry.AudioSampleEntry $r49, r75;
        long[] r6, $r15, $r16, $r17, r19, $r27, $r43, $r46, $r54, $r57, $r58, $r60, $r63, $r65, $r70, r73;
        int $i0, $i1, $i2, $i3, $i4, $i8, $i9, $i12, $i14, $i20, $i24, $i25, $i27, i30, i31, i33, $i35;
        com.googlecode.mp4parser.authoring.Movie $r3, $r11, $r30, $r50, $r61, $r64;
        java.lang.Object $r5, $r14, $r33, $r53;
        com.googlecode.mp4parser.authoring.Track r1, $r23, $r24, $r26, $r28, r72, r74, r76;
        com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry $r35, $r38, $r41, $r45;
        java.lang.String $r7, $r8, $r9, $r10, $r36, $r39, $r55, $r56;
        com.coremedia.iso.boxes.SampleDescriptionBox $r34, $r37, $r40, $r44;
        java.lang.RuntimeException $r78, $r79, $r80, $r81;
        com.googlecode.mp4parser.authoring.TrackMetaData $r66;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.List $r12, $r18, $r20, $r29, $r31, $r42, $r51, $r62;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, d21, d22;
        java.util.Iterator $r13, $r32, $r52;

        r2 := @this: com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        $r77 = new com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl$CacheTuple;

        $r3 = r2.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: com.googlecode.mp4parser.authoring.Movie movie>;

        specialinvoke $r77.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl$CacheTuple: void <init>(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r1, $r3);

        $r4 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.Map getSampleNumbersCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r77);

        r6 = (long[]) $r5;

        if r6 == null goto label01;

        return r6;

     label01:
        $r7 = "vide";

        $r8 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label03;

        $r58 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        if $r58 == null goto label02;

        $r60 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $i25 = lengthof $r60;

        if $i25 <= 0 goto label02;

        $r61 = r2.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: com.googlecode.mp4parser.authoring.Movie movie>;

        $r62 = staticinvoke <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.List getSyncSamplesTimestamps(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>($r61, r1);

        $r63 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $r64 = r2.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: com.googlecode.mp4parser.authoring.Movie movie>;

        $r65 = staticinvoke <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: long[] getTimes(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r1, $r64);

        $r66 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l26 = virtualinvoke $r66.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $i27 = interfaceinvoke $r62.<java.util.List: int size()>();

        $r67 = newarray (long[])[$i27];

        $r68 = interfaceinvoke $r62.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r67);

        $r69 = (long[][]) $r68;

        $r70 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: long[] getCommonIndices(long[],long[],long,long[][])>($r63, $r65, $l26, $r69);

        $r71 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.Map getSampleNumbersCache>;

        interfaceinvoke $r71.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r77, $r70);

        return $r70;

     label02:
        $r78 = new java.lang.RuntimeException;

        specialinvoke $r78.<java.lang.RuntimeException: void <init>(java.lang.String)>("Video Tracks need sync samples. Only tracks other than video may have no sync samples.");

        throw $r78;

     label03:
        $r9 = "soun";

        $r10 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label16;

        $r23 = r2.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: com.googlecode.mp4parser.authoring.Track referenceTrack>;

        if $r23 != null goto label06;

        $r50 = r2.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: com.googlecode.mp4parser.authoring.Movie movie>;

        $r51 = virtualinvoke $r50.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r52 = interfaceinvoke $r51.<java.util.List: java.util.Iterator iterator()>();

        goto label05;

     label04:
        $r53 = interfaceinvoke $r52.<java.util.Iterator: java.lang.Object next()>();

        r72 = (com.googlecode.mp4parser.authoring.Track) $r53;

        $r54 = interfaceinvoke r72.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        if $r54 == null goto label05;

        $r55 = "vide";

        $r56 = interfaceinvoke r72.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z3 = virtualinvoke $r55.<java.lang.String: boolean equals(java.lang.Object)>($r56);

        if $z3 == 0 goto label05;

        $r57 = interfaceinvoke r72.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $i24 = lengthof $r57;

        if $i24 <= 0 goto label05;

        r2.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: com.googlecode.mp4parser.authoring.Track referenceTrack> = r72;

     label05:
        $z4 = interfaceinvoke $r52.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label04;

     label06:
        $r24 = r2.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: com.googlecode.mp4parser.authoring.Track referenceTrack>;

        if $r24 == null goto label15;

        $r26 = r2.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: com.googlecode.mp4parser.authoring.Track referenceTrack>;

        $r27 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: long[] sampleNumbers(com.googlecode.mp4parser.authoring.Track)>($r26);

        $r28 = r2.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: com.googlecode.mp4parser.authoring.Track referenceTrack>;

        $r29 = interfaceinvoke $r28.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i8 = interfaceinvoke $r29.<java.util.List: int size()>();

        $i9 = lengthof $r27;

        r73 = newarray (long)[$i9];

        l28 = 192000L;

        $r30 = r2.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: com.googlecode.mp4parser.authoring.Movie movie>;

        $r31 = virtualinvoke $r30.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r32 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();

        goto label10;

     label07:
        $r33 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r74 = (com.googlecode.mp4parser.authoring.Track) $r33;

        $r34 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        $r35 = virtualinvoke $r34.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry getSampleEntry()>();

        $r36 = virtualinvoke $r35.<com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry: java.lang.String getType()>();

        $r37 = interfaceinvoke r74.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        $r38 = virtualinvoke $r37.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry getSampleEntry()>();

        $r39 = virtualinvoke $r38.<com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry: java.lang.String getType()>();

        $z2 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>($r39);

        if $z2 == 0 goto label10;

        $r40 = interfaceinvoke r74.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        $r41 = virtualinvoke $r40.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry getSampleEntry()>();

        r75 = (com.coremedia.iso.boxes.sampleentry.AudioSampleEntry) $r41;

        $l10 = virtualinvoke r75.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long getSampleRate()>();

        $b11 = $l10 cmp 192000L;

        $i35 = (int) $b11;

        if $i35 >= 0 goto label10;

        l28 = virtualinvoke r75.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long getSampleRate()>();

        $r42 = interfaceinvoke r74.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i12 = interfaceinvoke $r42.<java.util.List: int size()>();

        l29 = (long) $i12;

        $d6 = (double) l29;

        $d5 = (double) $i8;

        d21 = $d6 / $d5;

        $r43 = interfaceinvoke r74.<com.googlecode.mp4parser.authoring.Track: long[] getSampleDurations()>();

        l13 = $r43[0];

        i30 = 0;

        goto label09;

     label08:
        $l15 = $r27[i30];

        $l16 = $l15 - 1L;

        $d7 = (double) $l16;

        $d9 = d21 * $d7;

        $d8 = (double) l13;

        $d10 = $d9 * $d8;

        $d11 = staticinvoke <java.lang.Math: double ceil(double)>($d10);

        l17 = (long) $d11;

        r73[i30] = l17;

        i30 = i30 + 1;

     label09:
        $i14 = lengthof r73;

        if i30 < $i14 goto label08;

        goto label11;

     label10:
        $z5 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z5 != 0 goto label07;

     label11:
        $r44 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        $r45 = virtualinvoke $r44.<com.coremedia.iso.boxes.SampleDescriptionBox: com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry getSampleEntry()>();

        $r49 = (com.coremedia.iso.boxes.sampleentry.AudioSampleEntry) $r45;

        $r46 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSampleDurations()>();

        $l23 = $r46[0];

        $l18 = virtualinvoke $r49.<com.coremedia.iso.boxes.sampleentry.AudioSampleEntry: long getSampleRate()>();

        $d13 = (double) $l18;

        $d12 = (double) l28;

        $d20 = $d13 / $d12;

        $d14 = staticinvoke <java.lang.Math: double rint(double)>($d20);

        $b19 = $d20 cmpl $d14;

        if $b19 == 0 goto label12;

        $r79 = new java.lang.RuntimeException;

        specialinvoke $r79.<java.lang.RuntimeException: void <init>(java.lang.String)>("Sample rates must be a multiple of the lowest sample rate to create a correct file!");

        throw $r79;

     label12:
        i31 = 0;

        goto label14;

     label13:
        $l21 = r73[i31];

        $d15 = (double) $l21;

        $d17 = $d15 * $d20;

        $d16 = (double) $l23;

        $d18 = $d17 / $d16;

        $d19 = 1.0 + $d18;

        $l22 = (long) $d19;

        r73[i31] = $l22;

        i31 = i31 + 1;

     label14:
        $i20 = lengthof r73;

        if i31 < $i20 goto label13;

        $r47 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.Map getSampleNumbersCache>;

        interfaceinvoke $r47.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r77, r73);

        return r73;

     label15:
        $r80 = new java.lang.RuntimeException;

        specialinvoke $r80.<java.lang.RuntimeException: void <init>(java.lang.String)>("There was absolutely no Track with sync samples. I can\'t work with that!");

        throw $r80;

     label16:
        $r11 = r2.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: com.googlecode.mp4parser.authoring.Movie movie>;

        $r12 = virtualinvoke $r11.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

        goto label20;

     label17:
        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r76 = (com.googlecode.mp4parser.authoring.Track) $r14;

        $r15 = interfaceinvoke r76.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        if $r15 == null goto label20;

        $r16 = interfaceinvoke r76.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $i0 = lengthof $r16;

        if $i0 <= 0 goto label20;

        $r17 = virtualinvoke r2.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: long[] sampleNumbers(com.googlecode.mp4parser.authoring.Track)>(r76);

        $r18 = interfaceinvoke r76.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i1 = interfaceinvoke $r18.<java.util.List: int size()>();

        $i2 = lengthof $r17;

        r19 = newarray (long)[$i2];

        $r20 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i3 = interfaceinvoke $r20.<java.util.List: int size()>();

        l32 = (long) $i3;

        $d1 = (double) l32;

        $d0 = (double) $i1;

        d22 = $d1 / $d0;

        i33 = 0;

        goto label19;

     label18:
        $l5 = $r17[i33];

        $l6 = $l5 - 1L;

        $d2 = (double) $l6;

        $d3 = d22 * $d2;

        $d4 = staticinvoke <java.lang.Math: double ceil(double)>($d3);

        $l7 = (long) $d4;

        l34 = $l7 + 1L;

        r19[i33] = l34;

        i33 = i33 + 1;

     label19:
        $i4 = lengthof r19;

        if i33 < $i4 goto label18;

        $r21 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.Map getSampleNumbersCache>;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r77, r19);

        return r19;

     label20:
        $z6 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z6 != 0 goto label17;

        $r81 = new java.lang.RuntimeException;

        specialinvoke $r81.<java.lang.RuntimeException: void <init>(java.lang.String)>("There was absolutely no Track with sync samples. I can\'t work with that!");

        throw $r81;
    }

    public static java.util.List getSyncSamplesTimestamps(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.Track r5, r7;
        java.util.Iterator $r3;
        java.util.List $r2;
        long[] $r9, $r10;
        com.googlecode.mp4parser.authoring.Movie r1;
        int $i0;
        java.lang.Object $r4;
        java.lang.String $r6, $r8;
        java.util.LinkedList $r0;
        boolean $z0, $z1;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r7 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        $r2 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.googlecode.mp4parser.authoring.Track) $r4;

        $r6 = interfaceinvoke r5.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $r8 = interfaceinvoke r7.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r5.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        if $r9 == null goto label2;

        $i0 = lengthof $r9;

        if $i0 <= 0 goto label2;

        $r10 = staticinvoke <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: long[] getTimes(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r5, r1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r10);

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        return $r0;
    }

    public transient long[] getCommonIndices(long[], long[], long, long[][])
    {
        java.lang.Integer $r27, $r47;
        byte $b6, $b9, $b16, $b22;
        java.lang.Long $r5, $r6, $r9, $r13, $r15, $r16, $r32, $r36, $r53;
        java.lang.StringBuilder $r19, $r20, $r21, $r29, $r38, $r41, $r49, $r55, $r58, $r71, $r72, $r73, $r74, $r75, $r76, $r78;
        java.lang.Object[] $r26, $r35, $r46, $r52;
        long $l0, $l2, $l3, $l13, $l14, $l15, l17, $l18, $l20, $l21, $l26, l34, l36;
        com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl r7;
        java.lang.String $r22, $r25, $r28, $r34, $r37, $r40, $r42, $r45, $r48, $r51, $r54, $r57, $r59, r64, r65;
        long[][] r3;
        java.lang.RuntimeException $r77;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        java.util.logging.Logger $r18, $r23, $r43, $r60, $r61;
        long[] r2, r4, r63, $r68;
        int $i1, $i4, $i5, $i7, $i8, $i10, $i11, $i12, $i19, $i23, $i24, $i25, $i27, i28, i29, i30, $i31, i32, i33, $i35, $i37, i38, $i39, $i40, $i41;
        java.util.LinkedList r67, $r69, $r70, $r79;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.util.Iterator $r10, $r11, $r30;
        java.lang.Object $r8, $r12, $r14, $r31;

        r7 := @this: com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl;

        r4 := @parameter0: long[];

        r2 := @parameter1: long[];

        l17 := @parameter2: long;

        r3 := @parameter3: long[][];

        $r69 = new java.util.LinkedList;

        specialinvoke $r69.<java.util.LinkedList: void <init>()>();

        $r70 = new java.util.LinkedList;

        specialinvoke $r70.<java.util.LinkedList: void <init>()>();

        i28 = 0;

        goto label07;

     label01:
        z3 = 1;

        i29 = lengthof r3;

        i30 = 0;

        goto label05;

     label02:
        r63 = r3[i30];

        $z0 = z3;

        $l0 = r2[i28];

        $i1 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>(r63, $l0);

        if $i1 < 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        z3 = $z0 & $z4;

        i30 = i30 + 1;

     label05:
        if i30 < i29 goto label02;

        if z3 == 0 goto label06;

        $l2 = r4[i28];

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r69.<java.util.List: boolean add(java.lang.Object)>($r5);

        $l3 = r2[i28];

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        interfaceinvoke $r70.<java.util.List: boolean add(java.lang.Object)>($r6);

     label06:
        i28 = i28 + 1;

     label07:
        $i31 = lengthof r2;

        if i28 < $i31 goto label01;

        $i4 = interfaceinvoke $r69.<java.util.List: int size()>();

        $d2 = (double) $i4;

        $i5 = lengthof r4;

        $d0 = (double) $i5;

        $d1 = $d0 * 0.25;

        $b6 = $d2 cmpg $d1;

        $i39 = (int) $b6;

        if $i39 >= 0 goto label12;

        $r71 = new java.lang.StringBuilder;

        $r25 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("");

        specialinvoke $r71.<java.lang.StringBuilder: void <init>(java.lang.String)>($r25);

        $r26 = newarray (java.lang.Object)[1];

        $i25 = interfaceinvoke $r69.<java.util.List: int size()>();

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i25);

        $r26[0] = $r27;

        $r28 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%5d - Common:  [", $r26);

        $r29 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        r64 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r30 = interfaceinvoke $r69.<java.util.List: java.util.Iterator iterator()>();

        goto label09;

     label08:
        $r31 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        $r32 = (java.lang.Long) $r31;

        $l26 = virtualinvoke $r32.<java.lang.Long: long longValue()>();

        $r72 = new java.lang.StringBuilder;

        $r34 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r64);

        specialinvoke $r72.<java.lang.StringBuilder: void <init>(java.lang.String)>($r34);

        $r35 = newarray (java.lang.Object)[1];

        $r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l26);

        $r35[0] = $r36;

        $r37 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%10d,", $r35);

        $r38 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        r64 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $z2 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label08;

        $r73 = new java.lang.StringBuilder;

        $r40 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r64);

        specialinvoke $r73.<java.lang.StringBuilder: void <init>(java.lang.String)>($r40);

        $r41 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        $r43 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.logging.Logger LOG>;

        virtualinvoke $r43.<java.util.logging.Logger: void warning(java.lang.String)>($r42);

        $r74 = new java.lang.StringBuilder;

        $r45 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("");

        specialinvoke $r74.<java.lang.StringBuilder: void <init>(java.lang.String)>($r45);

        $r46 = newarray (java.lang.Object)[1];

        $i27 = lengthof r4;

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i27);

        $r46[0] = $r47;

        $r48 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%5d - In    :  [", $r46);

        $r49 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        r65 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        i32 = lengthof r4;

        i33 = 0;

        goto label11;

     label10:
        l34 = r4[i33];

        $r75 = new java.lang.StringBuilder;

        $r51 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r65);

        specialinvoke $r75.<java.lang.StringBuilder: void <init>(java.lang.String)>($r51);

        $r52 = newarray (java.lang.Object)[1];

        $r53 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l34);

        $r52[0] = $r53;

        $r54 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%10d,", $r52);

        $r55 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        r65 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        i33 = i33 + 1;

     label11:
        if i33 < i32 goto label10;

        $r76 = new java.lang.StringBuilder;

        $r57 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r65);

        specialinvoke $r76.<java.lang.StringBuilder: void <init>(java.lang.String)>($r57);

        $r58 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        $r60 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.logging.Logger LOG>;

        virtualinvoke $r60.<java.util.logging.Logger: void warning(java.lang.String)>($r59);

        $r61 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.logging.Logger LOG>;

        virtualinvoke $r61.<java.util.logging.Logger: void warning(java.lang.String)>("There are less than 25% of common sync samples in the given track.");

        $r77 = new java.lang.RuntimeException;

        specialinvoke $r77.<java.lang.RuntimeException: void <init>(java.lang.String)>("There are less than 25% of common sync samples in the given track.");

        throw $r77;

     label12:
        $i7 = interfaceinvoke $r69.<java.util.List: int size()>();

        $d5 = (double) $i7;

        $i8 = lengthof r4;

        $d3 = (double) $i8;

        $d4 = $d3 * 0.5;

        $b9 = $d5 cmpg $d4;

        $i40 = (int) $b9;

        if $i40 >= 0 goto label13;

        $r23 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.logging.Logger LOG>;

        virtualinvoke $r23.<java.util.logging.Logger: void fine(java.lang.String)>("There are less than 50% of common sync samples in the given track. This is implausible but I\'m ok to continue.");

        goto label14;

     label13:
        $i10 = interfaceinvoke $r69.<java.util.List: int size()>();

        $i11 = lengthof r4;

        if $i10 >= $i11 goto label14;

        $r18 = <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: java.util.logging.Logger LOG>;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>(java.lang.String)>("Common SyncSample positions vs. this tracks SyncSample positions: ");

        $i23 = interfaceinvoke $r69.<java.util.List: int size()>();

        $r19 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs. ");

        $i24 = lengthof r4;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.util.logging.Logger: void finest(java.lang.String)>($r22);

     label14:
        $r79 = new java.util.LinkedList;

        specialinvoke $r79.<java.util.LinkedList: void <init>()>();

        r67 = $r79;

        $i35 = r7.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: int minFragmentDurationSeconds>;

        if $i35 <= 0 goto label18;

        l36 = -1L;

        $r10 = interfaceinvoke $r69.<java.util.List: java.util.Iterator iterator()>();

        $r11 = interfaceinvoke $r70.<java.util.List: java.util.Iterator iterator()>();

        goto label17;

     label15:
        $r12 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (java.lang.Long) $r12;

        $l14 = virtualinvoke $r13.<java.lang.Long: long longValue()>();

        $r14 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (java.lang.Long) $r14;

        $l15 = virtualinvoke $r15.<java.lang.Long: long longValue()>();

        $b16 = l36 cmp -1L;

        if $b16 == 0 goto label16;

        $l18 = $l15 - l36;

        $l21 = $l18 / l17;

        $i19 = r7.<com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: int minFragmentDurationSeconds>;

        $l20 = (long) $i19;

        $b22 = $l21 cmp $l20;

        $i41 = (int) $b22;

        if $i41 < 0 goto label17;

     label16:
        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l14);

        interfaceinvoke $r79.<java.util.List: boolean add(java.lang.Object)>($r16);

        l36 = $l15;

     label17:
        $z5 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label19;

        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label15;

        goto label19;

     label18:
        r67 = $r69;

     label19:
        $i37 = interfaceinvoke r67.<java.util.List: int size()>();

        $r68 = newarray (long)[$i37];

        i38 = 0;

        goto label21;

     label20:
        $r8 = interfaceinvoke r67.<java.util.List: java.lang.Object get(int)>(i38);

        $r9 = (java.lang.Long) $r8;

        $l13 = virtualinvoke $r9.<java.lang.Long: long longValue()>();

        $r68[i38] = $l13;

        i38 = i38 + 1;

     label21:
        $i12 = lengthof $r68;

        if i38 < $i12 goto label20;

        return $r68;
    }

    private static long[] getTimes(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.Track r0;
        long $l1, $l2, $l3, $l6, $l8, l10, $l12, $l15;
        long[] $r1, r2, $r4;
        byte $b4, $b16;
        int $i0, $i5, $i7, i9, i11, $i13, $i14, $i17;
        com.googlecode.mp4parser.authoring.Movie r3;

        r0 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r3 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r1 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        $i0 = lengthof $r1;

        r2 = newarray (long)[$i0];

        i9 = 1;

        l10 = 0L;

        i11 = 0;

        $l1 = staticinvoke <com.googlecode.mp4parser.authoring.builder.SyncSampleIntersectFinderImpl: long calculateTracktimesScalingFactor(com.googlecode.mp4parser.authoring.Movie,com.googlecode.mp4parser.authoring.Track)>(r3, r0);

        goto label3;

     label1:
        $l3 = (long) i9;

        $l2 = $r1[i11];

        $b4 = $l3 cmp $l2;

        if $b4 != 0 goto label2;

        $i7 = i11;

        i11 = i11 + 1;

        $l8 = l10 * $l1;

        r2[$i7] = $l8;

     label2:
        $r4 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: long[] getSampleDurations()>();

        $i5 = i9;

        i9 = i9 + 1;

        $l6 = $r4[$i5];

        l10 = l10 + $l6;

     label3:
        $l12 = (long) i9;

        $i13 = lengthof $r1;

        $i14 = $i13 - 1;

        $l15 = $r1[$i14];

        $b16 = $l12 cmp $l15;

        $i17 = (int) $b16;

        if $i17 < 0 goto label1;

        return r2;
    }

    private static long calculateTracktimesScalingFactor(com.googlecode.mp4parser.authoring.Movie, com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.Track r4, r6;
        long $l0, $l1, $l3, l4;
        byte $b2;
        java.lang.String $r5, $r7;
        boolean $z0, $z1;
        java.util.Iterator $r2;
        java.util.List $r1;
        com.googlecode.mp4parser.authoring.Movie r0;
        java.lang.Object $r3;
        com.googlecode.mp4parser.authoring.TrackMetaData $r8, $r9, $r10;

        r0 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r6 := @parameter1: com.googlecode.mp4parser.authoring.Track;

        l4 = 1L;

        $r1 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.googlecode.mp4parser.authoring.Track) $r3;

        $r5 = interfaceinvoke r4.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $r7 = interfaceinvoke r6.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r4.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l0 = virtualinvoke $r8.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $r9 = interfaceinvoke r6.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l1 = virtualinvoke $r9.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label2;

        $r10 = interfaceinvoke r4.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l3 = virtualinvoke $r10.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        l4 = staticinvoke <com.googlecode.mp4parser.util.Math: long lcm(long,long)>(l4, $l3);

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        return l4;
    }
}
