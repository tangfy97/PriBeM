public class org.codehaus.groovy.antlr.java.PreJava2GroovyConverter extends org.codehaus.groovy.antlr.treewalker.VisitorAdapter
{
    private java.lang.String[] tokenNames;
    private java.util.Stack stack;

    public void <init>(java.lang.String[])
    {
        org.codehaus.groovy.antlr.java.PreJava2GroovyConverter r0;
        java.lang.String[] r1;
        java.util.Stack $r2;

        r0 := @this: org.codehaus.groovy.antlr.java.PreJava2GroovyConverter;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<org.codehaus.groovy.antlr.treewalker.VisitorAdapter: void <init>()>();

        r0.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: java.lang.String[] tokenNames> = r1;

        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        r0.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: java.util.Stack stack> = $r2;

        return;
    }

    public void visitDefault(org.codehaus.groovy.antlr.GroovySourceAST, int)
    {
        org.codehaus.groovy.antlr.GroovySourceAST r0;
        org.codehaus.groovy.antlr.java.PreJava2GroovyConverter r1;
        int i0, $i1, $i2;

        r1 := @this: org.codehaus.groovy.antlr.java.PreJava2GroovyConverter;

        r0 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        i0 := @parameter1: int;

        if i0 != 1 goto label2;

        $i1 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: int getType()>();

        if $i1 != 114 goto label1;

        specialinvoke r1.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: void visitJavaLiteralDo(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        goto label2;

     label1:
        $i2 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: int getType()>();

        if $i2 != 28 goto label2;

        specialinvoke r1.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: void visitJavaArrayInit(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

     label2:
        return;
    }

    private void visitJavaLiteralDo(org.codehaus.groovy.antlr.GroovySourceAST)
    {
        org.codehaus.groovy.antlr.GroovySourceAST r1;
        org.codehaus.groovy.antlr.java.PreJava2GroovyConverter r0;

        r0 := @this: org.codehaus.groovy.antlr.java.PreJava2GroovyConverter;

        r1 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        virtualinvoke r0.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: void swapTwoChildren(org.codehaus.groovy.antlr.GroovySourceAST)>(r1);

        return;
    }

    private void visitJavaArrayInit(org.codehaus.groovy.antlr.GroovySourceAST)
    {
        org.codehaus.groovy.antlr.GroovySourceAST $r2, r3;
        org.codehaus.groovy.antlr.java.PreJava2GroovyConverter r0;
        int $i0, $i1;
        java.util.Stack $r1;

        r0 := @this: org.codehaus.groovy.antlr.java.PreJava2GroovyConverter;

        r3 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        $r1 = r0.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: java.util.Stack stack>;

        $i0 = virtualinvoke $r1.<java.util.Stack: int size()>();

        if $i0 <= 2 goto label1;

        $r2 = specialinvoke r0.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: org.codehaus.groovy.antlr.GroovySourceAST getGrandParentNode()>();

        $i1 = virtualinvoke $r2.<org.codehaus.groovy.antlr.GroovySourceAST: int getType()>();

        if $i1 != 27 goto label1;

        virtualinvoke $r2.<org.codehaus.groovy.antlr.GroovySourceAST: void setType(int)>(28);

        virtualinvoke $r2.<org.codehaus.groovy.antlr.GroovySourceAST: void setFirstChild(groovyjarjarantlr.collections.AST)>(r3);

        virtualinvoke r3.<org.codehaus.groovy.antlr.GroovySourceAST: void setType(int)>(33);

     label1:
        return;
    }

    public void swapTwoChildren(org.codehaus.groovy.antlr.GroovySourceAST)
    {
        org.codehaus.groovy.antlr.GroovySourceAST r0, r2, r4;
        org.codehaus.groovy.antlr.java.PreJava2GroovyConverter r5;
        groovyjarjarantlr.collections.AST $r1, $r3;

        r5 := @this: org.codehaus.groovy.antlr.java.PreJava2GroovyConverter;

        r0 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: groovyjarjarantlr.collections.AST getFirstChild()>();

        r2 = (org.codehaus.groovy.antlr.GroovySourceAST) $r1;

        $r3 = virtualinvoke r2.<org.codehaus.groovy.antlr.GroovySourceAST: groovyjarjarantlr.collections.AST getNextSibling()>();

        r4 = (org.codehaus.groovy.antlr.GroovySourceAST) $r3;

        virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: void setFirstChild(groovyjarjarantlr.collections.AST)>(r4);

        virtualinvoke r2.<org.codehaus.groovy.antlr.GroovySourceAST: void setNextSibling(groovyjarjarantlr.collections.AST)>(null);

        virtualinvoke r4.<org.codehaus.groovy.antlr.GroovySourceAST: void setNextSibling(groovyjarjarantlr.collections.AST)>(r2);

        return;
    }

    public void push(org.codehaus.groovy.antlr.GroovySourceAST)
    {
        org.codehaus.groovy.antlr.GroovySourceAST r1;
        org.codehaus.groovy.antlr.java.PreJava2GroovyConverter r0;
        java.util.Stack $r2;

        r0 := @this: org.codehaus.groovy.antlr.java.PreJava2GroovyConverter;

        r1 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        $r2 = r0.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: java.util.Stack stack>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public org.codehaus.groovy.antlr.GroovySourceAST pop()
    {
        org.codehaus.groovy.antlr.GroovySourceAST $r4;
        org.codehaus.groovy.antlr.java.PreJava2GroovyConverter r0;
        java.lang.Object $r3;
        java.util.Stack $r1, $r2;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.antlr.java.PreJava2GroovyConverter;

        $r1 = r0.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: java.util.Stack stack>;

        $z0 = virtualinvoke $r1.<java.util.Stack: boolean empty()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: java.util.Stack stack>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        $r4 = (org.codehaus.groovy.antlr.GroovySourceAST) $r3;

        return $r4;

     label1:
        return null;
    }

    private org.codehaus.groovy.antlr.GroovySourceAST getParentNode()
    {
        org.codehaus.groovy.antlr.GroovySourceAST $r6;
        org.codehaus.groovy.antlr.java.PreJava2GroovyConverter r0;
        java.lang.Object $r2, $r4;
        java.util.Stack $r1, $r3, $r5;

        r0 := @this: org.codehaus.groovy.antlr.java.PreJava2GroovyConverter;

        $r1 = r0.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: java.util.Stack stack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r3 = r0.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: java.util.Stack stack>;

        $r4 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        $r5 = r0.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: java.util.Stack stack>;

        virtualinvoke $r5.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2);

        $r6 = (org.codehaus.groovy.antlr.GroovySourceAST) $r4;

        return $r6;
    }

    private org.codehaus.groovy.antlr.GroovySourceAST getGrandParentNode()
    {
        org.codehaus.groovy.antlr.GroovySourceAST $r9;
        org.codehaus.groovy.antlr.java.PreJava2GroovyConverter r0;
        java.util.Stack $r1, $r3, $r5, $r7, $r8;
        java.lang.Object $r2, $r4, $r6;

        r0 := @this: org.codehaus.groovy.antlr.java.PreJava2GroovyConverter;

        $r1 = r0.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: java.util.Stack stack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r3 = r0.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: java.util.Stack stack>;

        $r4 = virtualinvoke $r3.<java.util.Stack: java.lang.Object pop()>();

        $r5 = r0.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: java.util.Stack stack>;

        $r6 = virtualinvoke $r5.<java.util.Stack: java.lang.Object peek()>();

        $r7 = r0.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: java.util.Stack stack>;

        virtualinvoke $r7.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r4);

        $r8 = r0.<org.codehaus.groovy.antlr.java.PreJava2GroovyConverter: java.util.Stack stack>;

        virtualinvoke $r8.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2);

        $r9 = (org.codehaus.groovy.antlr.GroovySourceAST) $r6;

        return $r9;
    }
}
