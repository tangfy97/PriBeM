public class com.google.gxp.compiler.xmb.XmbCodeGenerator extends com.google.gxp.compiler.codegen.BaseCodeGenerator
{
    private static final com.google.gxp.com.google.common.base.CharEscaper XML_ASCII_ESCAPER;

    public void <init>(com.google.gxp.compiler.msgextract.MessageExtractedTree)
    {
        com.google.gxp.compiler.msgextract.MessageExtractedTree r1;
        com.google.gxp.compiler.xmb.XmbCodeGenerator r0;

        r0 := @this: com.google.gxp.compiler.xmb.XmbCodeGenerator;

        r1 := @parameter0: com.google.gxp.compiler.msgextract.MessageExtractedTree;

        specialinvoke r0.<com.google.gxp.compiler.codegen.BaseCodeGenerator: void <init>(com.google.gxp.compiler.base.Tree)>(r1);

        return;
    }

    public void generateCode(java.lang.Appendable, com.google.gxp.compiler.alerts.AlertSink) throws java.io.IOException
    {
        com.google.gxp.com.google.common.base.CharEscaper $r11;
        com.google.transconsole.common.messages.MessageBundle $r8;
        java.lang.Appendable r10, $r12;
        com.google.gxp.compiler.alerts.AlertSet $r4;
        com.google.gxp.compiler.msgextract.MessageExtractedTree $r3, $r6;
        java.util.List $r7;
        com.google.gxp.compiler.xmb.XmbCodeGenerator r1;
        com.google.gxp.compiler.alerts.AlertSink r0;
        com.google.gxp.compiler.base.Tree $r2, $r5;
        com.google.transconsole.common.xml.XmbBundleWriter $r9;

        r1 := @this: com.google.gxp.compiler.xmb.XmbCodeGenerator;

        r10 := @parameter0: java.lang.Appendable;

        r0 := @parameter1: com.google.gxp.compiler.alerts.AlertSink;

        $r2 = r1.<com.google.gxp.compiler.xmb.XmbCodeGenerator: com.google.gxp.compiler.base.Tree tree>;

        $r3 = (com.google.gxp.compiler.msgextract.MessageExtractedTree) $r2;

        $r4 = virtualinvoke $r3.<com.google.gxp.compiler.msgextract.MessageExtractedTree: com.google.gxp.compiler.alerts.AlertSet getAlerts()>();

        interfaceinvoke r0.<com.google.gxp.compiler.alerts.AlertSink: void addAll(com.google.gxp.compiler.alerts.AlertSet)>($r4);

        $r5 = r1.<com.google.gxp.compiler.xmb.XmbCodeGenerator: com.google.gxp.compiler.base.Tree tree>;

        $r6 = (com.google.gxp.compiler.msgextract.MessageExtractedTree) $r5;

        $r7 = virtualinvoke $r6.<com.google.gxp.compiler.msgextract.MessageExtractedTree: java.util.List getMessages()>();

        $r8 = staticinvoke <com.google.gxp.compiler.base.Util: com.google.transconsole.common.messages.MessageBundle bundleMessages(com.google.gxp.compiler.alerts.AlertSink,java.util.List)>(r0, $r7);

        $r9 = new com.google.transconsole.common.xml.XmbBundleWriter;

        specialinvoke $r9.<com.google.transconsole.common.xml.XmbBundleWriter: void <init>(com.google.transconsole.common.messages.MessageBundle)>($r8);

        $r11 = <com.google.gxp.compiler.xmb.XmbCodeGenerator: com.google.gxp.com.google.common.base.CharEscaper XML_ASCII_ESCAPER>;

        $r12 = virtualinvoke $r11.<com.google.gxp.com.google.common.base.CharEscaper: java.lang.Appendable escape(java.lang.Appendable)>(r10);

        virtualinvoke $r9.<com.google.transconsole.common.xml.XmbBundleWriter: void write(java.lang.Appendable)>($r12);

        return;
    }

    static void <clinit>()
    {
        com.google.gxp.compiler.xmb.XmlCharsetEscaper $r0;
        java.nio.charset.Charset $r1;

        $r0 = new com.google.gxp.compiler.xmb.XmlCharsetEscaper;

        $r1 = <com.google.gxp.com.google.common.base.Charsets: java.nio.charset.Charset US_ASCII>;

        specialinvoke $r0.<com.google.gxp.compiler.xmb.XmlCharsetEscaper: void <init>(java.nio.charset.Charset)>($r1);

        <com.google.gxp.compiler.xmb.XmbCodeGenerator: com.google.gxp.com.google.common.base.CharEscaper XML_ASCII_ESCAPER> = $r0;

        return;
    }
}
