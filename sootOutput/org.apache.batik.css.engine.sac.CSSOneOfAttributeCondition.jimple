public class org.apache.batik.css.engine.sac.CSSOneOfAttributeCondition extends org.apache.batik.css.engine.sac.CSSAttributeCondition
{

    public void <init>(java.lang.String, java.lang.String, boolean, java.lang.String)
    {
        org.apache.batik.css.engine.sac.CSSOneOfAttributeCondition r0;
        java.lang.String r1, r2, r3;
        boolean z0;

        r0 := @this: org.apache.batik.css.engine.sac.CSSOneOfAttributeCondition;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.batik.css.engine.sac.CSSAttributeCondition: void <init>(java.lang.String,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, r3);

        return;
    }

    public short getConditionType()
    {
        org.apache.batik.css.engine.sac.CSSOneOfAttributeCondition r0;

        r0 := @this: org.apache.batik.css.engine.sac.CSSOneOfAttributeCondition;

        return 7;
    }

    public boolean match(org.w3c.dom.Element, java.lang.String)
    {
        org.apache.batik.css.engine.sac.CSSOneOfAttributeCondition r1;
        int $i0, $i1, $i2, $i3, $i5, $i7, $i9;
        java.lang.String $r2, $r3, $r4, r5;
        boolean $z0, $z1, $z2;
        char $c4, $c6;
        org.w3c.dom.Element r0;

        r1 := @this: org.apache.batik.css.engine.sac.CSSOneOfAttributeCondition;

        r0 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r1.<org.apache.batik.css.engine.sac.CSSAttributeCondition: java.lang.String getLocalName()>();

        $r3 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>($r2);

        $r4 = virtualinvoke r1.<org.apache.batik.css.engine.sac.AbstractAttributeCondition: java.lang.String getValue()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>($r4);

        $i9 = (int) -1;

        if $i0 != $i9 goto label1;

        return 0;

     label1:
        if $i0 == 0 goto label2;

        $i5 = $i0 - 1;

        $c6 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i5);

        $z1 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>($c6);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i7 = $i0 + $i1;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i7 == $i2 goto label3;

        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i7 >= $i3 goto label4;

        $c4 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i7);

        $z0 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>($c4);

        if $z0 == 0 goto label4;

     label3:
        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }

    public java.lang.String toString()
    {
        org.apache.batik.css.engine.sac.CSSOneOfAttributeCondition r2;
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r3, $r6, $r9;

        r2 := @this: org.apache.batik.css.engine.sac.CSSOneOfAttributeCondition;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r3 = virtualinvoke r2.<org.apache.batik.css.engine.sac.CSSAttributeCondition: java.lang.String getLocalName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("~=\"");

        $r6 = virtualinvoke r2.<org.apache.batik.css.engine.sac.AbstractAttributeCondition: java.lang.String getValue()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }
}
