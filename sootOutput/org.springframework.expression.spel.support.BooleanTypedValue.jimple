public class org.springframework.expression.spel.support.BooleanTypedValue extends org.springframework.expression.TypedValue
{
    public static final org.springframework.expression.spel.support.BooleanTypedValue TRUE;
    public static final org.springframework.expression.spel.support.BooleanTypedValue FALSE;

    static void <clinit>()
    {
        org.springframework.expression.spel.support.BooleanTypedValue $r0, $r1;

        $r0 = new org.springframework.expression.spel.support.BooleanTypedValue;

        specialinvoke $r0.<org.springframework.expression.spel.support.BooleanTypedValue: void <init>(boolean)>(1);

        <org.springframework.expression.spel.support.BooleanTypedValue: org.springframework.expression.spel.support.BooleanTypedValue TRUE> = $r0;

        $r1 = new org.springframework.expression.spel.support.BooleanTypedValue;

        specialinvoke $r1.<org.springframework.expression.spel.support.BooleanTypedValue: void <init>(boolean)>(0);

        <org.springframework.expression.spel.support.BooleanTypedValue: org.springframework.expression.spel.support.BooleanTypedValue FALSE> = $r1;

        return;
    }

    private void <init>(boolean)
    {
        org.springframework.expression.spel.support.BooleanTypedValue r0;
        org.springframework.core.convert.TypeDescriptor $r2;
        java.lang.Boolean $r1;
        boolean z0;

        r0 := @this: org.springframework.expression.spel.support.BooleanTypedValue;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r2 = staticinvoke <org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor valueOf(java.lang.Class)>(class "Ljava/lang/Boolean;");

        specialinvoke r0.<org.springframework.expression.TypedValue: void <init>(java.lang.Object,org.springframework.core.convert.TypeDescriptor)>($r1, $r2);

        return;
    }

    public static org.springframework.expression.spel.support.BooleanTypedValue forValue(boolean)
    {
        org.springframework.expression.spel.support.BooleanTypedValue $r0, $r1;
        boolean z0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = <org.springframework.expression.spel.support.BooleanTypedValue: org.springframework.expression.spel.support.BooleanTypedValue TRUE>;

        return $r1;

     label1:
        $r0 = <org.springframework.expression.spel.support.BooleanTypedValue: org.springframework.expression.spel.support.BooleanTypedValue FALSE>;

        return $r0;
    }
}
