final class com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty extends com.sun.xml.bind.v2.runtime.property.PropertyImpl
{
    private final com.sun.xml.bind.v2.runtime.Name tagName;
    private final boolean nillable;
    private final com.sun.xml.bind.v2.runtime.reflect.Accessor acc;
    private final java.lang.String defaultValue;
    private final com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc;
    private final boolean improvedXsiTypeHandling;
    private final boolean idRef;
    static final boolean $assertionsDisabled;

    public void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo)
    {
        com.sun.xml.bind.v2.runtime.Name $r8, $r18;
        com.sun.xml.bind.v2.runtime.NameBuilder $r6;
        java.lang.AssertionError $r17, $r19;
        com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo $r13;
        com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo r2;
        java.lang.String $r9;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef r5;
        com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty r0;
        java.util.List $r3;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r10, $r11;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor $r12, $r16;
        java.lang.Object $r4;
        javax.xml.namespace.QName $r7;
        com.sun.xml.bind.v2.model.core.ID $r14, $r15;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r2 := @parameter1: com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.property.PropertyImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo)>(r1, r2);

        $r3 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo: java.util.List getTypes()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        r5 = (com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef) $r4;

        $r6 = r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameBuilder nameBuilder>;

        $r7 = interfaceinvoke r5.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: javax.xml.namespace.QName getTagName()>();

        $r8 = virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.runtime.Name createElementName(javax.xml.namespace.QName)>($r7);

        r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.Name tagName> = $r8;

        $z0 = <com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r18 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.Name tagName>;

        if $r18 != null goto label1;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label1:
        $z1 = interfaceinvoke r5.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: boolean isNillable()>();

        r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: boolean nillable> = $z1;

        $r9 = interfaceinvoke r5.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: java.lang.String getDefaultValue()>();

        r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: java.lang.String defaultValue> = $r9;

        $r10 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo: com.sun.xml.bind.v2.runtime.reflect.Accessor getAccessor()>();

        $r11 = virtualinvoke $r10.<com.sun.xml.bind.v2.runtime.reflect.Accessor: com.sun.xml.bind.v2.runtime.reflect.Accessor optimize(com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r1);

        r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc> = $r11;

        $r12 = staticinvoke <com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor get(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.runtime.RuntimeNonElementRef)>(r1, r5);

        r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc> = $r12;

        $z2 = <com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: boolean $assertionsDisabled>;

        if $z2 != 0 goto label2;

        $r16 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        if $r16 != null goto label2;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label2:
        $z3 = r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean improvedXsiTypeHandling>;

        r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: boolean improvedXsiTypeHandling> = $z3;

        $r13 = interfaceinvoke r5.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo getSource()>();

        $r14 = interfaceinvoke $r13.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: com.sun.xml.bind.v2.model.core.ID id()>();

        $r15 = <com.sun.xml.bind.v2.model.core.ID: com.sun.xml.bind.v2.model.core.ID IDREF>;

        if $r14 != $r15 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: boolean idRef> = $z4;

        return;
    }

    public void reset(java.lang.Object) throws com.sun.xml.bind.api.AccessorException
    {
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r2;
        com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.reflect.Accessor: void set(java.lang.Object,java.lang.Object)>(r1, null);

        return;
    }

    public java.lang.String getIdValue(java.lang.Object) throws com.sun.xml.bind.api.AccessorException, org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty r0;
        java.lang.CharSequence $r3;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor $r2;
        java.lang.Object r1;
        java.lang.String $r4;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor: java.lang.CharSequence print(java.lang.Object)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r4;
    }

    public void serializeBody(java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer, java.lang.Object) throws org.xml.sax.SAXException, com.sun.xml.bind.api.AccessorException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.Name $r7, $r9, $r12;
        java.lang.String $r8, $r14;
        com.sun.xml.bind.api.AccessorException $r16;
        boolean $z0, $z1, $z2;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r13;
        com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty r0;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r3, $r4;
        com.sun.xml.bind.v2.runtime.XMLSerializer r6;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor $r2, $r10;
        java.lang.Object r1, r11, r17;
        java.lang.Class $r5;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r15;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty;

        r1 := @parameter0: java.lang.Object;

        r6 := @parameter1: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r11 := @parameter2: java.lang.Object;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        $z0 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor: boolean hasValue(java.lang.Object)>(r1);

        r17 = null;

     label1:
        $r3 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        r17 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.reflect.Accessor: java.lang.Object getUnadapted(java.lang.Object)>(r1);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

     label4:
        $r4 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        $r5 = virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.reflect.Accessor: java.lang.Class getValueType()>();

        $z1 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: boolean xsiTypeNeeded(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer,java.lang.Object,java.lang.Class)>(r1, r6, r17, $r5);

        if $z1 == 0 goto label5;

        $r12 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.Name tagName>;

        virtualinvoke r6.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>($r12, r11);

        $r14 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: java.lang.String fieldName>;

        $r13 = r6.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.JAXBContextImpl grammar>;

        $r15 = virtualinvoke $r13.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class)>($r5);

        virtualinvoke r6.<com.sun.xml.bind.v2.runtime.XMLSerializer: void childAsXsiType(java.lang.Object,java.lang.String,com.sun.xml.bind.v2.runtime.JaxBeanInfo,boolean)>(r17, $r14, $r15, 0);

        virtualinvoke r6.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endElement()>();

        goto label7;

     label5:
        if $z0 == 0 goto label6;

        $r10 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        $r9 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.Name tagName>;

        $r8 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: java.lang.String fieldName>;

        virtualinvoke $r10.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor: void writeLeafElement(com.sun.xml.bind.v2.runtime.XMLSerializer,com.sun.xml.bind.v2.runtime.Name,java.lang.Object,java.lang.String)>(r6, $r9, r1, $r8);

        goto label7;

     label6:
        $z2 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: boolean nillable>;

        if $z2 == 0 goto label7;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.Name tagName>;

        virtualinvoke r6.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>($r7, null);

        virtualinvoke r6.<com.sun.xml.bind.v2.runtime.XMLSerializer: void writeXsiNilTrue()>();

        virtualinvoke r6.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endElement()>();

     label7:
        return;

        catch com.sun.xml.bind.api.AccessorException from label1 to label2 with label3;
    }

    private boolean xsiTypeNeeded(java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer, java.lang.Object, java.lang.Class)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r8;
        com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty r0;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r1, $r5;
        com.sun.xml.bind.v2.runtime.XMLSerializer r7;
        java.lang.Object r2, r6;
        java.lang.Class $r3, r4;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty;

        r6 := @parameter0: java.lang.Object;

        r7 := @parameter1: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r2 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Class;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: boolean improvedXsiTypeHandling>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        $z1 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.reflect.Accessor: boolean isAdapted()>();

        if $z1 == 0 goto label2;

        return 0;

     label2:
        if r2 != null goto label3;

        return 0;

     label3:
        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label4;

        return 0;

     label4:
        $z3 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: boolean idRef>;

        if $z3 == 0 goto label5;

        return 0;

     label5:
        $z4 = virtualinvoke r4.<java.lang.Class: boolean isPrimitive()>();

        if $z4 == 0 goto label6;

        return 0;

     label6:
        $r5 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        $z5 = virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.reflect.Accessor: boolean isValueTypeAbstractable()>();

        if $z5 != 0 goto label7;

        $r8 = r7.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.JAXBContextImpl grammar>;

        $z6 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: boolean isNillableAbstract(java.lang.Object,com.sun.xml.bind.v2.runtime.JAXBContextImpl,java.lang.Object,java.lang.Class)>(r6, $r8, r2, r4);

        if $z6 == 0 goto label8;

     label7:
        $z7 = 1;

        goto label9;

     label8:
        $z7 = 0;

     label9:
        return $z7;
    }

    private boolean isNillableAbstract(java.lang.Object, com.sun.xml.bind.v2.runtime.JAXBContextImpl, java.lang.Object, java.lang.Class)
    {
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r9;
        com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty r0;
        javax.xml.bind.JAXBElement r4;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r8;
        java.lang.Class r1, $r3, $r6, $r7;
        java.lang.Object r2, r5;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty;

        r2 := @parameter0: java.lang.Object;

        r9 := @parameter1: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r5 := @parameter2: java.lang.Object;

        r1 := @parameter3: java.lang.Class;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: boolean nillable>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        if r1 == class "Ljava/lang/Object;" goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == class "Ljavax/xml/bind/JAXBElement;" goto label3;

        return 0;

     label3:
        r4 = (javax.xml.bind.JAXBElement) r2;

        $r6 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke r4.<javax.xml.bind.JAXBElement: java.lang.Class getDeclaredType()>();

        $z1 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label4;

        return 0;

     label4:
        $z2 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r6);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        $i0 = virtualinvoke $r7.<java.lang.Class: int getModifiers()>();

        $z3 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i0);

        if $z3 != 0 goto label6;

        return 0;

     label6:
        $r8 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        $z4 = virtualinvoke $r8.<com.sun.xml.bind.v2.runtime.reflect.Accessor: boolean isAbstractable(java.lang.Class)>($r7);

        return $z4;
    }

    public void buildChildElementUnmarshallers(com.sun.xml.bind.v2.runtime.property.UnmarshallerChain, com.sun.xml.bind.v2.util.QNameMap)
    {
        com.sun.xml.bind.v2.runtime.Name $r8;
        com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader $r7;
        com.sun.xml.bind.v2.runtime.property.UnmarshallerChain r12;
        com.sun.xml.bind.v2.runtime.unmarshaller.DefaultValueLoaderDecorator $r14;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader r16;
        com.sun.xml.bind.v2.runtime.unmarshaller.LeafPropertyXsiLoader $r9;
        com.sun.xml.bind.v2.util.QNameMap r6;
        java.lang.String $r3, $r15;
        com.sun.xml.bind.v2.runtime.unmarshaller.LeafPropertyLoader $r0;
        boolean $z0, $z1, $z2;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r13;
        com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader$Single $r4;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r5, $r10;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor $r2, $r11;

        r1 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty;

        r12 := @parameter0: com.sun.xml.bind.v2.runtime.property.UnmarshallerChain;

        r6 := @parameter1: com.sun.xml.bind.v2.util.QNameMap;

        $r0 = new com.sun.xml.bind.v2.runtime.unmarshaller.LeafPropertyLoader;

        $r2 = r1.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        specialinvoke $r0.<com.sun.xml.bind.v2.runtime.unmarshaller.LeafPropertyLoader: void <init>(com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor)>($r2);

        r16 = $r0;

        $r3 = r1.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: java.lang.String defaultValue>;

        if $r3 == null goto label1;

        $r14 = new com.sun.xml.bind.v2.runtime.unmarshaller.DefaultValueLoaderDecorator;

        $r15 = r1.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: java.lang.String defaultValue>;

        specialinvoke $r14.<com.sun.xml.bind.v2.runtime.unmarshaller.DefaultValueLoaderDecorator: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader,java.lang.String)>($r0, $r15);

        r16 = $r14;

     label1:
        $z0 = r1.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: boolean nillable>;

        if $z0 != 0 goto label2;

        $r13 = r12.<com.sun.xml.bind.v2.runtime.property.UnmarshallerChain: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $z1 = $r13.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean allNillable>;

        if $z1 == 0 goto label3;

     label2:
        $r4 = new com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader$Single;

        $r5 = r1.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        specialinvoke $r4.<com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader$Single: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader,com.sun.xml.bind.v2.runtime.reflect.Accessor)>(r16, $r5);

        r16 = $r4;

     label3:
        $z2 = r1.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: boolean improvedXsiTypeHandling>;

        if $z2 == 0 goto label4;

        $r9 = new com.sun.xml.bind.v2.runtime.unmarshaller.LeafPropertyXsiLoader;

        $r11 = r1.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        $r10 = r1.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        specialinvoke $r9.<com.sun.xml.bind.v2.runtime.unmarshaller.LeafPropertyXsiLoader: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader,com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor,com.sun.xml.bind.v2.runtime.reflect.Accessor)>(r16, $r11, $r10);

        r16 = $r9;

     label4:
        $r8 = r1.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.Name tagName>;

        $r7 = new com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader;

        specialinvoke $r7.<com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader,com.sun.xml.bind.v2.runtime.unmarshaller.Receiver)>(r16, null);

        virtualinvoke r6.<com.sun.xml.bind.v2.util.QNameMap: void put(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>($r8, $r7);

        return;
    }

    public com.sun.xml.bind.v2.model.core.PropertyKind getKind()
    {
        com.sun.xml.bind.v2.model.core.PropertyKind $r0;
        com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty;

        $r0 = <com.sun.xml.bind.v2.model.core.PropertyKind: com.sun.xml.bind.v2.model.core.PropertyKind ELEMENT>;

        return $r0;
    }

    public com.sun.xml.bind.v2.runtime.reflect.Accessor getElementPropertyAccessor(java.lang.String, java.lang.String)
    {
        com.sun.xml.bind.v2.runtime.Name $r3;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r4;
        com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.Name tagName>;

        $z0 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.Name: boolean equals(java.lang.String,java.lang.String)>(r1, r2);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        return $r4;

     label1:
        return null;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/bind/v2/runtime/property/SingleElementLeafProperty;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty: boolean $assertionsDisabled> = $z1;

        return;
    }
}
