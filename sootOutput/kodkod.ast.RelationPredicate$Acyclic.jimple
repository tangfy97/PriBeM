public final class kodkod.ast.RelationPredicate$Acyclic extends kodkod.ast.RelationPredicate
{

    void <init>(kodkod.ast.Relation)
    {
        kodkod.ast.RelationPredicate$Acyclic r0;
        kodkod.ast.Relation r1;

        r0 := @this: kodkod.ast.RelationPredicate$Acyclic;

        r1 := @parameter0: kodkod.ast.Relation;

        specialinvoke r0.<kodkod.ast.RelationPredicate: void <init>(kodkod.ast.Relation,kodkod.ast.RelationPredicate)>(r1, null);

        return;
    }

    public kodkod.ast.RelationPredicate$Name name()
    {
        kodkod.ast.RelationPredicate$Acyclic r1;
        kodkod.ast.RelationPredicate$Name $r0;

        r1 := @this: kodkod.ast.RelationPredicate$Acyclic;

        $r0 = <kodkod.ast.RelationPredicate$Name: kodkod.ast.RelationPredicate$Name ACYCLIC>;

        return $r0;
    }

    public kodkod.ast.Formula toConstraints()
    {
        kodkod.ast.RelationPredicate$Acyclic r0;
        kodkod.ast.Formula $r5;
        kodkod.ast.Expression $r2, $r3, $r4;
        kodkod.ast.Relation $r1;

        r0 := @this: kodkod.ast.RelationPredicate$Acyclic;

        $r1 = virtualinvoke r0.<kodkod.ast.RelationPredicate$Acyclic: kodkod.ast.Relation relation()>();

        $r2 = virtualinvoke $r1.<kodkod.ast.Relation: kodkod.ast.Expression closure()>();

        $r3 = <kodkod.ast.Expression: kodkod.ast.Expression IDEN>;

        $r4 = virtualinvoke $r2.<kodkod.ast.Expression: kodkod.ast.Expression intersection(kodkod.ast.Expression)>($r3);

        $r5 = virtualinvoke $r4.<kodkod.ast.Expression: kodkod.ast.Formula no()>();

        return $r5;
    }

    public java.lang.String toString()
    {
        kodkod.ast.RelationPredicate$Acyclic r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7;
        java.lang.String $r8;
        kodkod.ast.RelationPredicate$Name $r2;
        kodkod.ast.Relation $r5;

        r1 := @this: kodkod.ast.RelationPredicate$Acyclic;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<kodkod.ast.RelationPredicate$Acyclic: kodkod.ast.RelationPredicate$Name name()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r5 = virtualinvoke r1.<kodkod.ast.RelationPredicate$Acyclic: kodkod.ast.Relation relation()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
