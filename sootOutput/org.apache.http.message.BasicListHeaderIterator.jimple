public class org.apache.http.message.BasicListHeaderIterator extends java.lang.Object implements org.apache.http.HeaderIterator
{
    protected final java.util.List allHeaders;
    protected int currentIndex;
    protected int lastIndex;
    protected java.lang.String headerName;

    public void <init>(java.util.List, java.lang.String)
    {
        java.util.List r1;
        org.apache.http.message.BasicListHeaderIterator r0;
        int $i0, $i2, $i4;
        java.lang.String r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.http.message.BasicListHeaderIterator;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header list must not be null.");

        throw $r4;

     label1:
        r0.<org.apache.http.message.BasicListHeaderIterator: java.util.List allHeaders> = r1;

        r0.<org.apache.http.message.BasicListHeaderIterator: java.lang.String headerName> = r2;

        $i2 = (int) -1;

        $i0 = virtualinvoke r0.<org.apache.http.message.BasicListHeaderIterator: int findNext(int)>($i2);

        r0.<org.apache.http.message.BasicListHeaderIterator: int currentIndex> = $i0;

        $i4 = (int) -1;

        r0.<org.apache.http.message.BasicListHeaderIterator: int lastIndex> = $i4;

        return;
    }

    protected int findNext(int)
    {
        org.apache.http.message.BasicListHeaderIterator r0;
        java.util.List $r1;
        int $i0, i1, i2, $i3, $i5, $i7, $i9;
        boolean z0;

        r0 := @this: org.apache.http.message.BasicListHeaderIterator;

        i2 := @parameter0: int;

        $i5 = (int) -1;

        if i2 >= $i5 goto label1;

        $i7 = (int) -1;

        return $i7;

     label1:
        $r1 = r0.<org.apache.http.message.BasicListHeaderIterator: java.util.List allHeaders>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i1 = $i0 - 1;

        z0 = 0;

     label2:
        if z0 != 0 goto label3;

        if i2 >= i1 goto label3;

        i2 = i2 + 1;

        z0 = virtualinvoke r0.<org.apache.http.message.BasicListHeaderIterator: boolean filterHeader(int)>(i2);

        goto label2;

     label3:
        if z0 == 0 goto label4;

        $i3 = i2;

        goto label5;

     label4:
        $i9 = (int) -1;

        $i3 = $i9;

     label5:
        return $i3;
    }

    protected boolean filterHeader(int)
    {
        org.apache.http.message.BasicListHeaderIterator r0;
        org.apache.http.Header $r4;
        java.util.List $r2;
        int i0;
        java.lang.Object $r3;
        java.lang.String $r1, $r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.http.message.BasicListHeaderIterator;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.http.message.BasicListHeaderIterator: java.lang.String headerName>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = r0.<org.apache.http.message.BasicListHeaderIterator: java.util.List allHeaders>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (org.apache.http.Header) $r3;

        $r5 = interfaceinvoke $r4.<org.apache.http.Header: java.lang.String getName()>();

        $r6 = r0.<org.apache.http.message.BasicListHeaderIterator: java.lang.String headerName>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        return $z0;
    }

    public boolean hasNext()
    {
        int $i0;
        org.apache.http.message.BasicListHeaderIterator r0;
        boolean $z0;

        r0 := @this: org.apache.http.message.BasicListHeaderIterator;

        $i0 = r0.<org.apache.http.message.BasicListHeaderIterator: int currentIndex>;

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.http.Header nextHeader() throws java.util.NoSuchElementException
    {
        java.util.List $r1;
        org.apache.http.message.BasicListHeaderIterator r0;
        int i0, $i1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r4;
        org.apache.http.Header $r3;

        r0 := @this: org.apache.http.message.BasicListHeaderIterator;

        i0 = r0.<org.apache.http.message.BasicListHeaderIterator: int currentIndex>;

        if i0 >= 0 goto label1;

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Iteration already finished.");

        throw $r4;

     label1:
        r0.<org.apache.http.message.BasicListHeaderIterator: int lastIndex> = i0;

        $i1 = virtualinvoke r0.<org.apache.http.message.BasicListHeaderIterator: int findNext(int)>(i0);

        r0.<org.apache.http.message.BasicListHeaderIterator: int currentIndex> = $i1;

        $r1 = r0.<org.apache.http.message.BasicListHeaderIterator: java.util.List allHeaders>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.http.Header) $r2;

        return $r3;
    }

    public final java.lang.Object next() throws java.util.NoSuchElementException
    {
        org.apache.http.message.BasicListHeaderIterator r0;
        org.apache.http.Header $r1;

        r0 := @this: org.apache.http.message.BasicListHeaderIterator;

        $r1 = virtualinvoke r0.<org.apache.http.message.BasicListHeaderIterator: org.apache.http.Header nextHeader()>();

        return $r1;
    }

    public void remove() throws java.lang.UnsupportedOperationException
    {
        java.lang.IllegalStateException $r3;
        org.apache.http.message.BasicListHeaderIterator r0;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3, $i5;

        r0 := @this: org.apache.http.message.BasicListHeaderIterator;

        $i0 = r0.<org.apache.http.message.BasicListHeaderIterator: int lastIndex>;

        if $i0 >= 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No header to remove.");

        throw $r3;

     label1:
        $r1 = r0.<org.apache.http.message.BasicListHeaderIterator: java.util.List allHeaders>;

        $i1 = r0.<org.apache.http.message.BasicListHeaderIterator: int lastIndex>;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i1);

        $i5 = (int) -1;

        r0.<org.apache.http.message.BasicListHeaderIterator: int lastIndex> = $i5;

        $i2 = r0.<org.apache.http.message.BasicListHeaderIterator: int currentIndex>;

        $i3 = $i2 - 1;

        r0.<org.apache.http.message.BasicListHeaderIterator: int currentIndex> = $i3;

        return;
    }
}
