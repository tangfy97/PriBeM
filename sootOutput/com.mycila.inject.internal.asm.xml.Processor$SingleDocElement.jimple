final class com.mycila.inject.internal.asm.xml.Processor$SingleDocElement extends java.lang.Object implements com.mycila.inject.internal.asm.xml.Processor$EntryElement
{
    private final java.io.OutputStream os;

    void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        com.mycila.inject.internal.asm.xml.Processor$SingleDocElement r0;

        r0 := @this: com.mycila.inject.internal.asm.xml.Processor$SingleDocElement;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.asm.xml.Processor$SingleDocElement: java.io.OutputStream os> = r1;

        return;
    }

    public java.io.OutputStream openEntry(java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        com.mycila.inject.internal.asm.xml.Processor$SingleDocElement r0;
        java.lang.String r2;

        r0 := @this: com.mycila.inject.internal.asm.xml.Processor$SingleDocElement;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.mycila.inject.internal.asm.xml.Processor$SingleDocElement: java.io.OutputStream os>;

        return $r1;
    }

    public void closeEntry() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        com.mycila.inject.internal.asm.xml.Processor$SingleDocElement r0;

        r0 := @this: com.mycila.inject.internal.asm.xml.Processor$SingleDocElement;

        $r1 = r0.<com.mycila.inject.internal.asm.xml.Processor$SingleDocElement: java.io.OutputStream os>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }
}
