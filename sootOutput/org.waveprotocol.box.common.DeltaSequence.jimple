public final class org.waveprotocol.box.common.DeltaSequence extends com.google.common.collect.ForwardingList implements java.util.RandomAccess
{
    private final com.google.common.collect.ImmutableList deltas;

    public static org.waveprotocol.box.common.DeltaSequence empty()
    {
        com.google.common.collect.ImmutableList $r1;
        org.waveprotocol.box.common.DeltaSequence $r0;

        $r0 = new org.waveprotocol.box.common.DeltaSequence;

        $r1 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        specialinvoke $r0.<org.waveprotocol.box.common.DeltaSequence: void <init>(com.google.common.collect.ImmutableList,boolean)>($r1, 0);

        return $r0;
    }

    public static org.waveprotocol.box.common.DeltaSequence of(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableList $r2;
        org.waveprotocol.box.common.DeltaSequence $r0;
        java.lang.Iterable r1;

        r1 := @parameter0: java.lang.Iterable;

        $r0 = new org.waveprotocol.box.common.DeltaSequence;

        $r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>(r1);

        specialinvoke $r0.<org.waveprotocol.box.common.DeltaSequence: void <init>(com.google.common.collect.ImmutableList,boolean)>($r2, 1);

        return $r0;
    }

    public static transient org.waveprotocol.box.common.DeltaSequence of(org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta[])
    {
        com.google.common.collect.ImmutableList $r2;
        org.waveprotocol.box.common.DeltaSequence $r0;
        org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta[] r1;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta[];

        $r0 = new org.waveprotocol.box.common.DeltaSequence;

        $r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.lang.Object[])>(r1);

        specialinvoke $r0.<org.waveprotocol.box.common.DeltaSequence: void <init>(com.google.common.collect.ImmutableList,boolean)>($r2, 1);

        return $r0;
    }

    public static transient org.waveprotocol.box.common.DeltaSequence join(org.waveprotocol.box.common.DeltaSequence, org.waveprotocol.box.common.DeltaSequence[])
    {
        java.lang.Object[] $r7;
        long $l1, l3;
        org.waveprotocol.box.common.DeltaSequence r1, $r4, r6;
        com.google.common.collect.ImmutableList $r5;
        byte $b2;
        java.lang.Long $r8;
        org.waveprotocol.wave.model.version.HashedVersion $r2, $r9;
        int i0, i4;
        boolean $z0;
        org.waveprotocol.box.common.DeltaSequence[] r3;
        com.google.common.collect.ImmutableList$Builder $r0;

        r1 := @parameter0: org.waveprotocol.box.common.DeltaSequence;

        r3 := @parameter1: org.waveprotocol.box.common.DeltaSequence[];

        $r0 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>();

        virtualinvoke $r0.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>(r1);

        $r2 = virtualinvoke r1.<org.waveprotocol.box.common.DeltaSequence: org.waveprotocol.wave.model.version.HashedVersion getEndVersion()>();

        l3 = virtualinvoke $r2.<org.waveprotocol.wave.model.version.HashedVersion: long getVersion()>();

        i0 = lengthof r3;

        i4 = 0;

     label1:
        if i4 >= i0 goto label4;

        r6 = r3[i4];

        $l1 = virtualinvoke r6.<org.waveprotocol.box.common.DeltaSequence: long getStartVersion()>();

        $b2 = $l1 cmp l3;

        if $b2 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r7 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r7[0] = $r8;

        $r7[1] = r6;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "Sequences are not contiguous, expected start version %s for sequence %s", $r7);

        virtualinvoke $r0.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>(r6);

        $r9 = virtualinvoke r6.<org.waveprotocol.box.common.DeltaSequence: org.waveprotocol.wave.model.version.HashedVersion getEndVersion()>();

        l3 = virtualinvoke $r9.<org.waveprotocol.wave.model.version.HashedVersion: long getVersion()>();

        i4 = i4 + 1;

        goto label1;

     label4:
        $r4 = new org.waveprotocol.box.common.DeltaSequence;

        $r5 = virtualinvoke $r0.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        specialinvoke $r4.<org.waveprotocol.box.common.DeltaSequence: void <init>(com.google.common.collect.ImmutableList,boolean)>($r5, 0);

        return $r4;
    }

    private void <init>(com.google.common.collect.ImmutableList, boolean)
    {
        com.google.common.collect.ImmutableList r1;
        org.waveprotocol.box.common.DeltaSequence r0;
        boolean z0;

        r0 := @this: org.waveprotocol.box.common.DeltaSequence;

        r1 := @parameter0: com.google.common.collect.ImmutableList;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.google.common.collect.ForwardingList: void <init>()>();

        r0.<org.waveprotocol.box.common.DeltaSequence: com.google.common.collect.ImmutableList deltas> = r1;

        if z0 == 0 goto label1;

        specialinvoke r0.<org.waveprotocol.box.common.DeltaSequence: void checkDeltaVersions()>();

     label1:
        return;
    }

    private void checkDeltaVersions()
    {
        java.lang.Object[] $r10;
        org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta r4, $r9;
        long $l1, $l5;
        org.waveprotocol.box.common.DeltaSequence r0;
        java.lang.Integer $r11, $r13;
        com.google.common.collect.ImmutableList $r1, $r2, $r6, $r7, $r12;
        byte $b6;
        java.lang.Long $r14, $r15;
        int $i0, $i2, $i3, $i4, $i7, $i8, i9;
        org.waveprotocol.wave.model.version.HashedVersion $r5;
        boolean $z0;
        java.lang.Object $r3, $r8;

        r0 := @this: org.waveprotocol.box.common.DeltaSequence;

        i9 = 0;

     label1:
        $r1 = r0.<org.waveprotocol.box.common.DeltaSequence: com.google.common.collect.ImmutableList deltas>;

        $i0 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: int size()>();

        if i9 >= $i0 goto label5;

        $r2 = r0.<org.waveprotocol.box.common.DeltaSequence: com.google.common.collect.ImmutableList deltas>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>(i9);

        r4 = (org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta) $r3;

        $r5 = virtualinvoke r4.<org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta: org.waveprotocol.wave.model.version.HashedVersion getResultingVersion()>();

        $l1 = virtualinvoke $r5.<org.waveprotocol.wave.model.version.HashedVersion: long getVersion()>();

        $i2 = i9 + 1;

        $r6 = r0.<org.waveprotocol.box.common.DeltaSequence: com.google.common.collect.ImmutableList deltas>;

        $i3 = virtualinvoke $r6.<com.google.common.collect.ImmutableList: int size()>();

        if $i2 >= $i3 goto label4;

        $r7 = r0.<org.waveprotocol.box.common.DeltaSequence: com.google.common.collect.ImmutableList deltas>;

        $i4 = i9 + 1;

        $r8 = virtualinvoke $r7.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>($i4);

        $r9 = (org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta) $r8;

        $l5 = virtualinvoke $r9.<org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta: long getAppliedAtVersion()>();

        $b6 = $l1 cmp $l5;

        if $b6 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r10 = newarray (java.lang.Object)[4];

        $i7 = i9 + 1;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r10[0] = $r11;

        $r12 = r0.<org.waveprotocol.box.common.DeltaSequence: com.google.common.collect.ImmutableList deltas>;

        $i8 = virtualinvoke $r12.<com.google.common.collect.ImmutableList: int size()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r10[1] = $r13;

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r10[2] = $r14;

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        $r10[3] = $r15;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "Delta %s / %s ends at version %s, next begins at %s", $r10);

     label4:
        i9 = i9 + 1;

        goto label1;

     label5:
        return;
    }

    protected java.util.List delegate()
    {
        com.google.common.collect.ImmutableList $r1;
        org.waveprotocol.box.common.DeltaSequence r0;

        r0 := @this: org.waveprotocol.box.common.DeltaSequence;

        $r1 = r0.<org.waveprotocol.box.common.DeltaSequence: com.google.common.collect.ImmutableList deltas>;

        return $r1;
    }

    public org.waveprotocol.box.common.DeltaSequence subList(int, int)
    {
        com.google.common.collect.ImmutableList $r2, $r3;
        int i0, i1;
        org.waveprotocol.box.common.DeltaSequence $r0, r1;

        r1 := @this: org.waveprotocol.box.common.DeltaSequence;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new org.waveprotocol.box.common.DeltaSequence;

        $r2 = r1.<org.waveprotocol.box.common.DeltaSequence: com.google.common.collect.ImmutableList deltas>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subList(int,int)>(i0, i1);

        specialinvoke $r0.<org.waveprotocol.box.common.DeltaSequence: void <init>(com.google.common.collect.ImmutableList,boolean)>($r3, 0);

        return $r0;
    }

    public long getStartVersion()
    {
        org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta $r4;
        long $l0;
        org.waveprotocol.box.common.DeltaSequence r0;
        com.google.common.collect.ImmutableList $r1, $r2;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.box.common.DeltaSequence;

        $r1 = r0.<org.waveprotocol.box.common.DeltaSequence: com.google.common.collect.ImmutableList deltas>;

        $z0 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "Empty delta sequence has no start version");

        $r2 = r0.<org.waveprotocol.box.common.DeltaSequence: com.google.common.collect.ImmutableList deltas>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>(0);

        $r4 = (org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta) $r3;

        $l0 = virtualinvoke $r4.<org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta: long getAppliedAtVersion()>();

        return $l0;
    }

    public org.waveprotocol.wave.model.version.HashedVersion getEndVersion()
    {
        org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta $r5;
        org.waveprotocol.box.common.DeltaSequence r0;
        com.google.common.collect.ImmutableList $r1, $r2, $r3;
        int $i0, $i1;
        org.waveprotocol.wave.model.version.HashedVersion $r6;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.box.common.DeltaSequence;

        $r1 = r0.<org.waveprotocol.box.common.DeltaSequence: com.google.common.collect.ImmutableList deltas>;

        $z0 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "Empty delta sequence has no end version");

        $r3 = r0.<org.waveprotocol.box.common.DeltaSequence: com.google.common.collect.ImmutableList deltas>;

        $r2 = r0.<org.waveprotocol.box.common.DeltaSequence: com.google.common.collect.ImmutableList deltas>;

        $i0 = virtualinvoke $r2.<com.google.common.collect.ImmutableList: int size()>();

        $i1 = $i0 - 1;

        $r4 = virtualinvoke $r3.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>($i1);

        $r5 = (org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta) $r4;

        $r6 = virtualinvoke $r5.<org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta: org.waveprotocol.wave.model.version.HashedVersion getResultingVersion()>();

        return $r6;
    }

    public java.lang.String toString()
    {
        long $l1;
        org.waveprotocol.box.common.DeltaSequence r0;
        com.google.common.collect.ImmutableList $r3, $r11;
        int $i0;
        org.waveprotocol.wave.model.version.HashedVersion $r8;
        java.lang.String $r14;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7, $r9, $r10, $r12, $r13;

        r0 := @this: org.waveprotocol.box.common.DeltaSequence;

        $z0 = virtualinvoke r0.<org.waveprotocol.box.common.DeltaSequence: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "[DeltaSequence empty]";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[DeltaSequence ");

        $r3 = r0.<org.waveprotocol.box.common.DeltaSequence: com.google.common.collect.ImmutableList deltas>;

        $i0 = virtualinvoke $r3.<com.google.common.collect.ImmutableList: int size()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deltas, v ");

        $l1 = virtualinvoke r0.<org.waveprotocol.box.common.DeltaSequence: long getStartVersion()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r8 = virtualinvoke r0.<org.waveprotocol.box.common.DeltaSequence: org.waveprotocol.wave.model.version.HashedVersion getEndVersion()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = r0.<org.waveprotocol.box.common.DeltaSequence: com.google.common.collect.ImmutableList deltas>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public volatile java.util.List subList(int, int)
    {
        int i0, i1;
        org.waveprotocol.box.common.DeltaSequence r0, $r1;

        r0 := @this: org.waveprotocol.box.common.DeltaSequence;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.DeltaSequence: org.waveprotocol.box.common.DeltaSequence subList(int,int)>(i0, i1);

        return $r1;
    }

    protected volatile java.util.Collection delegate()
    {
        java.util.List $r1;
        org.waveprotocol.box.common.DeltaSequence r0;

        r0 := @this: org.waveprotocol.box.common.DeltaSequence;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.DeltaSequence: java.util.List delegate()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        java.util.List $r1;
        org.waveprotocol.box.common.DeltaSequence r0;

        r0 := @this: org.waveprotocol.box.common.DeltaSequence;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.DeltaSequence: java.util.List delegate()>();

        return $r1;
    }
}
