class com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 extends java.lang.Object implements org.xml.sax.ContentHandler
{
    static final java.lang.String namespace;
    static final java.lang.String variableElt;
    static final java.lang.String resultElt;
    boolean isBooleanResult;
    boolean askResult;
    int rowCount;
    com.hp.hpl.jena.sparql.util.LabelToNodeMap bNodes;
    boolean accumulate;
    java.lang.StringBuffer buff;
    java.util.List variables;
    java.util.List results;
    com.hp.hpl.jena.sparql.engine.binding.BindingMap binding;
    java.lang.String varName;
    java.lang.String datatype;
    java.lang.String langTag;
    java.lang.String rdfPrefix;

    void <init>()
    {
        java.lang.StringBuffer $r2;
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;
        com.hp.hpl.jena.sparql.util.LabelToNodeMap $r1;
        java.util.ArrayList $r3, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: boolean isBooleanResult> = 0;

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: boolean askResult> = 0;

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: int rowCount> = 0;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.util.LabelToNodeMap: com.hp.hpl.jena.sparql.util.LabelToNodeMap createBNodeMap()>();

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: com.hp.hpl.jena.sparql.util.LabelToNodeMap bNodes> = $r1;

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: boolean accumulate> = 0;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.StringBuffer buff> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.util.List variables> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.util.List results> = $r4;

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: com.hp.hpl.jena.sparql.engine.binding.BindingMap binding> = null;

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String datatype> = null;

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String langTag> = null;

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String rdfPrefix> = "rdf";

        return;
    }

    public void setDocumentLocator(org.xml.sax.Locator)
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;
        org.xml.sax.Locator r1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r1 := @parameter0: org.xml.sax.Locator;

        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        return;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r2;
        java.lang.String r0, $r1, r3;
        boolean $z0;

        r2 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: java.lang.String getURI()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String rdfPrefix> = r3;

     label1:
        return;
    }

    public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.xml.sax.Attributes r4;
        com.hp.hpl.jena.sparql.engine.binding.BindingMap $r6;
        java.lang.String r0, r1, r3, $r5, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r2;
        java.util.List $r9;

        r2 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.xml.sax.Attributes;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2005/sparql-results#");

        if $z0 != 0 goto label01;

        return;

     label01:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("variable");

        if $z1 == 0 goto label03;

        $r7 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");

        if $r7 == null goto label02;

        $r8 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");

        $r9 = r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.util.List variables>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r8);

     label02:
        return;

     label03:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("results");

        if $z2 == 0 goto label04;

        return;

     label04:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z3 == 0 goto label05;

        r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: boolean isBooleanResult> = 1;

     label05:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("result");

        if $z4 == 0 goto label06;

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingFactory: com.hp.hpl.jena.sparql.engine.binding.BindingMap create()>();

        r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: com.hp.hpl.jena.sparql.engine.binding.BindingMap binding> = $r6;

        return;

     label06:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("binding");

        if $z5 == 0 goto label07;

        $r5 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");

        r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String varName> = $r5;

        return;

     label07:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uri");

        if $z6 == 0 goto label08;

        specialinvoke r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: void startElementURI(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r0, r1, r3, r4);

        return;

     label08:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("literal");

        if $z7 == 0 goto label09;

        specialinvoke r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: void startElementLiteral(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r0, r1, r3, r4);

        return;

     label09:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("bnode");

        if $z8 == 0 goto label10;

        specialinvoke r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: void startElementBNode(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r0, r1, r3, r4);

        return;

     label10:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("unbound");

        if $z9 == 0 goto label11;

        return;

     label11:
        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r2;
        java.util.List $r5;
        com.hp.hpl.jena.sparql.engine.binding.BindingMap $r4;
        java.lang.String r0, r1, r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        r2 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2005/sparql-results#");

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("results");

        if $z1 == 0 goto label2;

        return;

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z2 == 0 goto label3;

        specialinvoke r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: void endElementBoolean()>();

        return;

     label3:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("result");

        if $z3 == 0 goto label4;

        r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String varName> = null;

        r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String datatype> = null;

        r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String langTag> = null;

        $r5 = r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.util.List results>;

        $r4 = r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: com.hp.hpl.jena.sparql.engine.binding.BindingMap binding>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

        r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: com.hp.hpl.jena.sparql.engine.binding.BindingMap binding> = null;

        return;

     label4:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("binding");

        if $z4 == 0 goto label5;

        r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String varName> = null;

        return;

     label5:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uri");

        if $z5 == 0 goto label6;

        specialinvoke r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: void endElementURI(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r3);

        return;

     label6:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("literal");

        if $z6 == 0 goto label7;

        specialinvoke r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: void endElementLiteral(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r3);

        return;

     label7:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("bnode");

        if $z7 == 0 goto label8;

        specialinvoke r2.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: void endElementBNode(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r3);

        return;

     label8:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("unbound");

        if $z8 == 0 goto label9;

        return;

     label9:
        return;
    }

    private boolean checkVarName(java.lang.String)
    {
        java.lang.String $r1, $r2, $r6, $r10, $r14, r15;
        boolean $z0;
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;
        java.util.List $r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r13;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r15 := @parameter0: java.lang.String;

        if r15 != null goto label1;

        r15 = "";

     label1:
        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String varName>;

        if $r1 != null goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No variable name in scope: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, $r14);

        return 0;

     label2:
        $r3 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.util.List variables>;

        $r2 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String varName>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Variable name \'");

        $r6 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String varName>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'not declared: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, $r10);

        return 0;

     label3:
        return 1;
    }

    private void startElementURI(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)
    {
        org.xml.sax.Attributes r4;
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.xml.sax.Attributes;

        specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: void startAccumulate()>();

        return;
    }

    private void endElementURI(java.lang.String, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;
        com.hp.hpl.jena.graph.Node $r3;
        com.hp.hpl.jena.sparql.core.Var $r10;
        java.lang.StringBuffer $r1;
        com.hp.hpl.jena.sparql.engine.binding.BindingMap $r9;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r2, $r7, $r8, r11, r12, r13;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r11 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        r13 := @parameter2: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: void endAccumulate()>();

        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.StringBuffer buff>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URI: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: boolean checkVarName(java.lang.String)>($r7);

        if $z0 == 0 goto label1;

        $r9 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: com.hp.hpl.jena.sparql.engine.binding.BindingMap binding>;

        $r8 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String varName>;

        $r10 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(java.lang.String)>($r8);

        staticinvoke <com.hp.hpl.jena.sparql.resultset.SPARQLResult: void addBinding(com.hp.hpl.jena.sparql.engine.binding.BindingMap,com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node)>($r9, $r10, $r3);

     label1:
        return;
    }

    private void startElementLiteral(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r3;
        org.xml.sax.Attributes r0;
        java.lang.String $r1, $r2, $r4, $r5, r6, r7, r8;

        r3 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        r0 := @parameter3: org.xml.sax.Attributes;

        $r1 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("datatype");

        if $r1 == null goto label1;

        $r5 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("datatype");

        r3.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String datatype> = $r5;

     label1:
        $r2 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("xml:lang");

        if $r2 == null goto label2;

        $r4 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("xml:lang");

        r3.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String langTag> = $r4;

     label2:
        specialinvoke r3.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: void startAccumulate()>();

        return;
    }

    private void endElementLiteral(java.lang.String, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.datatypes.TypeMapper $r15;
        com.hp.hpl.jena.graph.Node $r6;
        java.lang.StringBuffer $r1;
        com.hp.hpl.jena.sparql.engine.binding.BindingMap $r13;
        java.lang.String $r2, $r3, $r4, $r5, $r9, $r11, $r12, $r16, r17, r18, r19;
        boolean $z0;
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;
        com.hp.hpl.jena.sparql.core.Var $r14;
        com.hp.hpl.jena.datatypes.RDFDatatype r20;
        java.lang.StringBuilder $r7, $r8, $r10;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r17 := @parameter0: java.lang.String;

        r18 := @parameter1: java.lang.String;

        r19 := @parameter2: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: void endAccumulate()>();

        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.StringBuffer buff>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        r20 = null;

        $r3 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String datatype>;

        if $r3 == null goto label1;

        $r15 = staticinvoke <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper getInstance()>();

        $r16 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String datatype>;

        r20 = virtualinvoke $r15.<com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.RDFDatatype getSafeTypeByName(java.lang.String)>($r16);

     label1:
        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String toString()>();

        $r5 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String langTag>;

        $r6 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>($r4, $r5, r20);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Literal: ");

        $r9 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForNode(com.hp.hpl.jena.graph.Node)>($r6);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: boolean checkVarName(java.lang.String)>($r11);

        if $z0 == 0 goto label2;

        $r13 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: com.hp.hpl.jena.sparql.engine.binding.BindingMap binding>;

        $r12 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String varName>;

        $r14 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(java.lang.String)>($r12);

        staticinvoke <com.hp.hpl.jena.sparql.resultset.SPARQLResult: void addBinding(com.hp.hpl.jena.sparql.engine.binding.BindingMap,com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node)>($r13, $r14, $r6);

     label2:
        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String datatype> = null;

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String langTag> = null;

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String varName> = null;

        return;
    }

    private void endElementBoolean()
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetException $r3;
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;
        java.lang.StringBuffer $r1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r2, $r7;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: void endAccumulate()>();

        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.StringBuffer buff>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z0 == 0 goto label1;

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: boolean askResult> = 1;

        return;

     label1:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z1 == 0 goto label2;

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: boolean askResult> = 0;

        return;

     label2:
        $r3 = new com.hp.hpl.jena.sparql.resultset.ResultSetException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown boolean value: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.hp.hpl.jena.sparql.resultset.ResultSetException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    private void startElementBNode(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)
    {
        org.xml.sax.Attributes r4;
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.xml.sax.Attributes;

        specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: void startAccumulate()>();

        return;
    }

    private void endElementBNode(java.lang.String, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.graph.Node $r4;
        java.lang.StringBuffer $r1;
        com.hp.hpl.jena.sparql.engine.binding.BindingMap $r10;
        java.lang.String $r2, $r8, $r9, r12, r13, r14;
        com.hp.hpl.jena.sparql.util.LabelToNodeMap $r3;
        boolean $z0;
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;
        com.hp.hpl.jena.sparql.core.Var $r11;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r12 := @parameter0: java.lang.String;

        r13 := @parameter1: java.lang.String;

        r14 := @parameter2: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: void endAccumulate()>();

        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.StringBuffer buff>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: com.hp.hpl.jena.sparql.util.LabelToNodeMap bNodes>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.util.LabelToNodeMap: com.hp.hpl.jena.graph.Node asNode(java.lang.String)>($r2);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BNode: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: boolean checkVarName(java.lang.String)>($r8);

        if $z0 == 0 goto label1;

        $r10 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: com.hp.hpl.jena.sparql.engine.binding.BindingMap binding>;

        $r9 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String varName>;

        $r11 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(java.lang.String)>($r9);

        staticinvoke <com.hp.hpl.jena.sparql.resultset.SPARQLResult: void addBinding(com.hp.hpl.jena.sparql.engine.binding.BindingMap,com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node)>($r10, $r11, $r4);

     label1:
        return;
    }

    private void startAccumulate()
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;
        java.lang.StringBuffer $r1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.StringBuffer buff>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: boolean accumulate> = 1;

        return;
    }

    private void endAccumulate()
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: boolean accumulate> = 0;

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;
        java.lang.StringBuffer $r1, $r3, $r4;
        int i0, i1;
        char[] r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: boolean accumulate>;

        if $z0 == 0 goto label2;

        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.StringBuffer buff>;

        if $r1 != null goto label1;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.StringBuffer buff> = $r4;

     label1:
        $r3 = r0.<com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.StringBuffer buff>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r2, i0, i1);

     label2:
        return;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        int i0, i1;
        char[] r1;
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;
        java.lang.String r1, r2;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2 r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String resultElt> = "result";

        <com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String variableElt> = "variable";

        <com.hp.hpl.jena.sparql.resultset.XMLInputSAX$ResultSetXMLHandler2: java.lang.String namespace> = "http://www.w3.org/2005/sparql-results#";

        return;
    }
}
