public class nu.xom.jaxen.SimpleNamespaceContext extends java.lang.Object implements nu.xom.jaxen.NamespaceContext, java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.Map namespaces;

    public void <init>()
    {
        nu.xom.jaxen.SimpleNamespaceContext r0;
        java.util.HashMap $r1;

        r0 := @this: nu.xom.jaxen.SimpleNamespaceContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<nu.xom.jaxen.SimpleNamespaceContext: java.util.Map namespaces> = $r1;

        return;
    }

    public void <init>(java.util.Map)
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.HashMap $r4;
        java.lang.ClassCastException $r8;
        nu.xom.jaxen.SimpleNamespaceContext r0;
        java.util.Map r1;
        java.lang.Object $r5, $r7, $r9;
        boolean $z0, $z1, $z2;

        r0 := @this: nu.xom.jaxen.SimpleNamespaceContext;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = $r7 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z2 = $r9 instanceof java.lang.String;

        if $z2 != 0 goto label3;

     label2:
        $r8 = new java.lang.ClassCastException;

        specialinvoke $r8.<java.lang.ClassCastException: void <init>(java.lang.String)>("Non-string namespace binding");

        throw $r8;

     label3:
        goto label1;

     label4:
        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>(java.util.Map)>(r1);

        r0.<nu.xom.jaxen.SimpleNamespaceContext: java.util.Map namespaces> = $r4;

        return;
    }

    public void addElementNamespaces(nu.xom.jaxen.Navigator, java.lang.Object) throws nu.xom.jaxen.UnsupportedAxisException
    {
        java.util.Iterator $r2;
        nu.xom.jaxen.SimpleNamespaceContext r6;
        java.lang.Object r1, $r3;
        java.lang.String $r4, $r5, $r7;
        nu.xom.jaxen.Navigator r0;
        boolean $z0;

        r6 := @this: nu.xom.jaxen.SimpleNamespaceContext;

        r0 := @parameter0: nu.xom.jaxen.Navigator;

        r1 := @parameter1: java.lang.Object;

        $r2 = interfaceinvoke r0.<nu.xom.jaxen.Navigator: java.util.Iterator getNamespaceAxisIterator(java.lang.Object)>(r1);

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = interfaceinvoke r0.<nu.xom.jaxen.Navigator: java.lang.String getNamespacePrefix(java.lang.Object)>($r3);

        $r5 = interfaceinvoke r0.<nu.xom.jaxen.Navigator: java.lang.String getNamespaceStringValue(java.lang.Object)>($r3);

        $r7 = virtualinvoke r6.<nu.xom.jaxen.SimpleNamespaceContext: java.lang.String translateNamespacePrefixToUri(java.lang.String)>($r4);

        if $r7 != null goto label2;

        virtualinvoke r6.<nu.xom.jaxen.SimpleNamespaceContext: void addNamespace(java.lang.String,java.lang.String)>($r4, $r5);

     label2:
        goto label1;

     label3:
        return;
    }

    public void addNamespace(java.lang.String, java.lang.String)
    {
        nu.xom.jaxen.SimpleNamespaceContext r0;
        java.util.Map $r3;
        java.lang.String r1, r2;

        r0 := @this: nu.xom.jaxen.SimpleNamespaceContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<nu.xom.jaxen.SimpleNamespaceContext: java.util.Map namespaces>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.String translateNamespacePrefixToUri(java.lang.String)
    {
        nu.xom.jaxen.SimpleNamespaceContext r0;
        java.util.Map $r2, $r3;
        java.lang.Object $r4;
        java.lang.String r1, $r5;
        boolean $z0;

        r0 := @this: nu.xom.jaxen.SimpleNamespaceContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<nu.xom.jaxen.SimpleNamespaceContext: java.util.Map namespaces>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<nu.xom.jaxen.SimpleNamespaceContext: java.util.Map namespaces>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.lang.String) $r4;

        return $r5;

     label1:
        return null;
    }

    public static void <clinit>()
    {
        <nu.xom.jaxen.SimpleNamespaceContext: long serialVersionUID> = -808928409643497762L;

        return;
    }
}
