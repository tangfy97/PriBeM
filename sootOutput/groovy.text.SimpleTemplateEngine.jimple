public class groovy.text.SimpleTemplateEngine extends groovy.text.TemplateEngine
{
    private boolean verbose;
    private static int counter;
    private groovy.lang.GroovyShell groovyShell;
    static java.lang.Class class$groovy$lang$GroovyShell;

    public void <init>()
    {
        java.lang.Class $r1, $r3;
        java.lang.ClassLoader $r2;
        groovy.text.SimpleTemplateEngine r0;

        r0 := @this: groovy.text.SimpleTemplateEngine;

        $r1 = <groovy.text.SimpleTemplateEngine: java.lang.Class class$groovy$lang$GroovyShell>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <groovy.text.SimpleTemplateEngine: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyShell");

        <groovy.text.SimpleTemplateEngine: java.lang.Class class$groovy$lang$GroovyShell> = $r3;

        goto label2;

     label1:
        $r3 = <groovy.text.SimpleTemplateEngine: java.lang.Class class$groovy$lang$GroovyShell>;

     label2:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke r0.<groovy.text.SimpleTemplateEngine: void <init>(java.lang.ClassLoader)>($r2);

        return;
    }

    public void <init>(boolean)
    {
        java.lang.Class $r1, $r3;
        java.lang.ClassLoader $r2;
        groovy.text.SimpleTemplateEngine r0;
        boolean z0;

        r0 := @this: groovy.text.SimpleTemplateEngine;

        z0 := @parameter0: boolean;

        $r1 = <groovy.text.SimpleTemplateEngine: java.lang.Class class$groovy$lang$GroovyShell>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <groovy.text.SimpleTemplateEngine: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyShell");

        <groovy.text.SimpleTemplateEngine: java.lang.Class class$groovy$lang$GroovyShell> = $r3;

        goto label2;

     label1:
        $r3 = <groovy.text.SimpleTemplateEngine: java.lang.Class class$groovy$lang$GroovyShell>;

     label2:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke r0.<groovy.text.SimpleTemplateEngine: void <init>(java.lang.ClassLoader)>($r2);

        virtualinvoke r0.<groovy.text.SimpleTemplateEngine: void setVerbose(boolean)>(z0);

        return;
    }

    public void <init>(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r2;
        groovy.text.SimpleTemplateEngine r0;
        groovy.lang.GroovyShell $r1;

        r0 := @this: groovy.text.SimpleTemplateEngine;

        r2 := @parameter0: java.lang.ClassLoader;

        $r1 = new groovy.lang.GroovyShell;

        specialinvoke $r1.<groovy.lang.GroovyShell: void <init>(java.lang.ClassLoader)>(r2);

        specialinvoke r0.<groovy.text.SimpleTemplateEngine: void <init>(groovy.lang.GroovyShell)>($r1);

        return;
    }

    public void <init>(groovy.lang.GroovyShell)
    {
        groovy.text.SimpleTemplateEngine r0;
        groovy.lang.GroovyShell r1;

        r0 := @this: groovy.text.SimpleTemplateEngine;

        r1 := @parameter0: groovy.lang.GroovyShell;

        specialinvoke r0.<groovy.text.TemplateEngine: void <init>()>();

        r0.<groovy.text.SimpleTemplateEngine: groovy.lang.GroovyShell groovyShell> = r1;

        return;
    }

    public groovy.text.Template createTemplate(java.io.Reader) throws org.codehaus.groovy.control.CompilationFailedException, java.io.IOException
    {
        groovy.lang.Script $r10;
        java.lang.StringBuffer $r4, $r6, $r7, $r8, $r16, $r17, $r19;
        int $i0, $i1;
        groovy.text.SimpleTemplateEngine$SimpleTemplate $r0;
        java.lang.String $r2, $r9, $r18, $r20;
        boolean $z0;
        java.io.PrintStream $r11, $r12, $r13;
        groovy.lang.GroovyRuntimeException $r15;
        java.io.Reader r1;
        groovy.lang.GroovyShell $r5;
        java.lang.Exception $r14;
        groovy.text.SimpleTemplateEngine r3;

        r3 := @this: groovy.text.SimpleTemplateEngine;

        r1 := @parameter0: java.io.Reader;

        $r0 = new groovy.text.SimpleTemplateEngine$SimpleTemplate;

        specialinvoke $r0.<groovy.text.SimpleTemplateEngine$SimpleTemplate: void <init>(groovy.text.SimpleTemplateEngine$1)>(null);

        $r2 = virtualinvoke $r0.<groovy.text.SimpleTemplateEngine$SimpleTemplate: java.lang.String parse(java.io.Reader)>(r1);

        $z0 = r3.<groovy.text.SimpleTemplateEngine: boolean verbose>;

        if $z0 == 0 goto label1;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("\n-- script source --");

        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void print(java.lang.String)>($r2);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("\n-- script end --\n");

     label1:
        $r5 = r3.<groovy.text.SimpleTemplateEngine: groovy.lang.GroovyShell groovyShell>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("SimpleTemplateScript");

        $i0 = <groovy.text.SimpleTemplateEngine: int counter>;

        $i1 = $i0 + 1;

        <groovy.text.SimpleTemplateEngine: int counter> = $i1;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".groovy");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = virtualinvoke $r5.<groovy.lang.GroovyShell: groovy.lang.Script parse(java.lang.String,java.lang.String)>($r2, $r9);

        $r0.<groovy.text.SimpleTemplateEngine$SimpleTemplate: groovy.lang.Script script> = $r10;

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        $r15 = new groovy.lang.GroovyRuntimeException;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Failed to parse template script (your template may contain an error or be trying to use expressions not currently supported): ");

        $r18 = virtualinvoke $r14.<java.lang.Exception: java.lang.String getMessage()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label4:
        return $r0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setVerbose(boolean)
    {
        groovy.text.SimpleTemplateEngine r0;
        boolean z0;

        r0 := @this: groovy.text.SimpleTemplateEngine;

        z0 := @parameter0: boolean;

        r0.<groovy.text.SimpleTemplateEngine: boolean verbose> = z0;

        return;
    }

    public boolean isVerbose()
    {
        groovy.text.SimpleTemplateEngine r0;
        boolean $z0;

        r0 := @this: groovy.text.SimpleTemplateEngine;

        $z0 = r0.<groovy.text.SimpleTemplateEngine: boolean verbose>;

        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        <groovy.text.SimpleTemplateEngine: int counter> = 1;

        return;
    }
}
