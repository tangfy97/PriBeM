public class org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer extends org.codehaus.jackson.map.ser.std.SerializerBase
{
    protected static final org.codehaus.jackson.map.JsonSerializer instance;

    public void <init>()
    {
        org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.SerializerBase: void <init>(java.lang.Class)>(class "Ljava/util/Calendar;");

        return;
    }

    public void serialize(java.util.Calendar, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        java.util.Calendar r1;
        org.codehaus.jackson.JsonGenerator r2;
        org.codehaus.jackson.map.SerializerProvider r0;
        long $l0;
        org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer r3;

        r3 := @this: org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer;

        r1 := @parameter0: java.util.Calendar;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r0 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $l0 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke r0.<org.codehaus.jackson.map.SerializerProvider: void defaultSerializeDateKey(long,org.codehaus.jackson.JsonGenerator)>($l0, r2);

        return;
    }

    public volatile void serialize(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        java.util.Calendar $r4;
        org.codehaus.jackson.JsonGenerator r2;
        org.codehaus.jackson.map.SerializerProvider r3;
        java.lang.Object r1;
        org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 = (java.util.Calendar) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer: void serialize(java.util.Calendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r4, r2, r3);

        return;
    }

    static void <clinit>()
    {
        org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer $r0;

        $r0 = new org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer;

        specialinvoke $r0.<org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer: void <init>()>();

        <org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer: org.codehaus.jackson.map.JsonSerializer instance> = $r0;

        return;
    }
}
