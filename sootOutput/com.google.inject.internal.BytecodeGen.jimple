public final class com.google.inject.internal.BytecodeGen extends java.lang.Object
{
    static final java.util.logging.Logger logger;
    static final java.lang.ClassLoader GUICE_CLASS_LOADER;
    static final java.lang.String GUICE_INTERNAL_PACKAGE;
    static final java.lang.String CGLIB_PACKAGE;
    static final com.google.inject.internal.cglib.core.$NamingPolicy FASTCLASS_NAMING_POLICY;
    static final com.google.inject.internal.cglib.core.$NamingPolicy ENHANCER_NAMING_POLICY;
    private static final boolean CUSTOM_LOADER_ENABLED;
    private static final java.util.Map CLASS_LOADER_CACHE;

    public void <init>()
    {
        com.google.inject.internal.BytecodeGen r0;

        r0 := @this: com.google.inject.internal.BytecodeGen;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.ClassLoader canonicalize(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r0, $r2;
        com.google.inject.internal.BytecodeGen$BridgeClassLoader $r1;

        r0 := @parameter0: java.lang.ClassLoader;

        if r0 == null goto label1;

        $r2 = r0;

        goto label2;

     label1:
        $r1 = <com.google.inject.internal.BytecodeGen$SystemBridgeHolder: com.google.inject.internal.BytecodeGen$BridgeClassLoader SYSTEM_BRIDGE>;

        $r2 = virtualinvoke $r1.<com.google.inject.internal.BytecodeGen$BridgeClassLoader: java.lang.ClassLoader getParent()>();

     label2:
        return $r2;
    }

    public static java.lang.ClassLoader getClassLoader(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.ClassLoader $r1, $r2;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = staticinvoke <com.google.inject.internal.BytecodeGen: java.lang.ClassLoader getClassLoader(java.lang.Class,java.lang.ClassLoader)>(r0, $r1);

        return $r2;
    }

    private static java.lang.ClassLoader getClassLoader(java.lang.Class, java.lang.ClassLoader)
    {
        com.google.inject.internal.BytecodeGen$BridgeClassLoader $r6, $r8;
        java.util.Map $r9;
        java.lang.String $r1;
        boolean $z0, $z1, $z2;
        java.lang.Class r0;
        java.lang.Object $r10;
        java.lang.ClassLoader $r2, $r3, $r7, $r11, $r12, r13;
        com.google.inject.internal.BytecodeGen$Visibility $r4, $r5;

        r0 := @parameter0: java.lang.Class;

        r13 := @parameter1: java.lang.ClassLoader;

        $z0 = <com.google.inject.internal.BytecodeGen: boolean CUSTOM_LOADER_ENABLED>;

        if $z0 != 0 goto label1;

        return r13;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("java.");

        if $z1 == 0 goto label2;

        $r12 = <com.google.inject.internal.BytecodeGen: java.lang.ClassLoader GUICE_CLASS_LOADER>;

        return $r12;

     label2:
        $r2 = staticinvoke <com.google.inject.internal.BytecodeGen: java.lang.ClassLoader canonicalize(java.lang.ClassLoader)>(r13);

        $r3 = <com.google.inject.internal.BytecodeGen: java.lang.ClassLoader GUICE_CLASS_LOADER>;

        if $r2 == $r3 goto label3;

        $z2 = $r2 instanceof com.google.inject.internal.BytecodeGen$BridgeClassLoader;

        if $z2 == 0 goto label4;

     label3:
        return $r2;

     label4:
        $r4 = staticinvoke <com.google.inject.internal.BytecodeGen$Visibility: com.google.inject.internal.BytecodeGen$Visibility forType(java.lang.Class)>(r0);

        $r5 = <com.google.inject.internal.BytecodeGen$Visibility: com.google.inject.internal.BytecodeGen$Visibility PUBLIC>;

        if $r4 != $r5 goto label6;

        $r6 = <com.google.inject.internal.BytecodeGen$SystemBridgeHolder: com.google.inject.internal.BytecodeGen$BridgeClassLoader SYSTEM_BRIDGE>;

        $r7 = virtualinvoke $r6.<com.google.inject.internal.BytecodeGen$BridgeClassLoader: java.lang.ClassLoader getParent()>();

        if $r2 == $r7 goto label5;

        $r9 = <com.google.inject.internal.BytecodeGen: java.util.Map CLASS_LOADER_CACHE>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r11 = (java.lang.ClassLoader) $r10;

        return $r11;

     label5:
        $r8 = <com.google.inject.internal.BytecodeGen$SystemBridgeHolder: com.google.inject.internal.BytecodeGen$BridgeClassLoader SYSTEM_BRIDGE>;

        return $r8;

     label6:
        return $r2;
    }

    public static com.google.inject.internal.cglib.reflect.$FastClass newFastClass(java.lang.Class, com.google.inject.internal.BytecodeGen$Visibility)
    {
        com.google.inject.internal.cglib.core.$NamingPolicy $r4;
        com.google.inject.internal.cglib.reflect.$FastClass $r13;
        java.util.logging.Logger $r6;
        com.google.inject.internal.cglib.reflect.$FastClass$Generator $r0;
        java.lang.Class r1;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r11;
        java.lang.ClassLoader $r10, $r14;
        java.lang.String $r12;
        com.google.inject.internal.BytecodeGen$Visibility r2, $r3;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.google.inject.internal.BytecodeGen$Visibility;

        $r0 = new com.google.inject.internal.cglib.reflect.$FastClass$Generator;

        specialinvoke $r0.<com.google.inject.internal.cglib.reflect.$FastClass$Generator: void <init>()>();

        virtualinvoke $r0.<com.google.inject.internal.cglib.reflect.$FastClass$Generator: void setType(java.lang.Class)>(r1);

        $r3 = <com.google.inject.internal.BytecodeGen$Visibility: com.google.inject.internal.BytecodeGen$Visibility PUBLIC>;

        if r2 != $r3 goto label1;

        $r14 = staticinvoke <com.google.inject.internal.BytecodeGen: java.lang.ClassLoader getClassLoader(java.lang.Class)>(r1);

        virtualinvoke $r0.<com.google.inject.internal.cglib.reflect.$FastClass$Generator: void setClassLoader(java.lang.ClassLoader)>($r14);

     label1:
        $r4 = <com.google.inject.internal.BytecodeGen: com.google.inject.internal.cglib.core.$NamingPolicy FASTCLASS_NAMING_POLICY>;

        virtualinvoke $r0.<com.google.inject.internal.cglib.reflect.$FastClass$Generator: void setNamingPolicy(com.google.inject.internal.cglib.core.$NamingPolicy)>($r4);

        $r6 = <com.google.inject.internal.BytecodeGen: java.util.logging.Logger logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FastClass with ");

        $r10 = virtualinvoke $r0.<com.google.inject.internal.cglib.reflect.$FastClass$Generator: java.lang.ClassLoader getClassLoader()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.logging.Logger: void fine(java.lang.String)>($r12);

        $r13 = virtualinvoke $r0.<com.google.inject.internal.cglib.reflect.$FastClass$Generator: com.google.inject.internal.cglib.reflect.$FastClass create()>();

        return $r13;
    }

    public static com.google.inject.internal.cglib.proxy.$Enhancer newEnhancer(java.lang.Class, com.google.inject.internal.BytecodeGen$Visibility)
    {
        com.google.inject.internal.cglib.core.$NamingPolicy $r4;
        com.google.inject.internal.cglib.proxy.$Enhancer $r0;
        java.util.logging.Logger $r6;
        java.lang.Class r1;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r11;
        java.lang.ClassLoader $r10, $r13;
        java.lang.String $r12;
        com.google.inject.internal.BytecodeGen$Visibility r2, $r3;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.google.inject.internal.BytecodeGen$Visibility;

        $r0 = new com.google.inject.internal.cglib.proxy.$Enhancer;

        specialinvoke $r0.<com.google.inject.internal.cglib.proxy.$Enhancer: void <init>()>();

        virtualinvoke $r0.<com.google.inject.internal.cglib.proxy.$Enhancer: void setSuperclass(java.lang.Class)>(r1);

        virtualinvoke $r0.<com.google.inject.internal.cglib.proxy.$Enhancer: void setUseFactory(boolean)>(0);

        $r3 = <com.google.inject.internal.BytecodeGen$Visibility: com.google.inject.internal.BytecodeGen$Visibility PUBLIC>;

        if r2 != $r3 goto label1;

        $r13 = staticinvoke <com.google.inject.internal.BytecodeGen: java.lang.ClassLoader getClassLoader(java.lang.Class)>(r1);

        virtualinvoke $r0.<com.google.inject.internal.cglib.proxy.$Enhancer: void setClassLoader(java.lang.ClassLoader)>($r13);

     label1:
        $r4 = <com.google.inject.internal.BytecodeGen: com.google.inject.internal.cglib.core.$NamingPolicy ENHANCER_NAMING_POLICY>;

        virtualinvoke $r0.<com.google.inject.internal.cglib.proxy.$Enhancer: void setNamingPolicy(com.google.inject.internal.cglib.core.$NamingPolicy)>($r4);

        $r6 = <com.google.inject.internal.BytecodeGen: java.util.logging.Logger logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Enhancer with ");

        $r10 = virtualinvoke $r0.<com.google.inject.internal.cglib.proxy.$Enhancer: java.lang.ClassLoader getClassLoader()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.logging.Logger: void fine(java.lang.String)>($r12);

        return $r0;
    }

    static void <clinit>()
    {
        com.google.inject.internal.util.$ImmutableMap $r15;
        java.util.concurrent.ConcurrentMap $r20;
        com.google.inject.internal.util.$MapMaker $r16, $r17, $r18;
        java.lang.String $r1, $r7, $r8, $r10, $r11, $r14;
        boolean $z0, $z1;
        java.util.logging.Logger $r2;
        java.lang.Class $r0, $r3, $r6, $r9;
        java.lang.ClassLoader $r4, $r5;
        com.google.inject.internal.BytecodeGen$3 $r19;
        com.google.inject.internal.BytecodeGen$2 $r13;
        com.google.inject.internal.BytecodeGen$1 $r12;

        $r0 = class "Lcom/google/inject/internal/BytecodeGen;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.inject.internal.BytecodeGen: java.util.logging.Logger logger> = $r2;

        $r3 = class "Lcom/google/inject/internal/BytecodeGen;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = staticinvoke <com.google.inject.internal.BytecodeGen: java.lang.ClassLoader canonicalize(java.lang.ClassLoader)>($r4);

        <com.google.inject.internal.BytecodeGen: java.lang.ClassLoader GUICE_CLASS_LOADER> = $r5;

        $r6 = class "Lcom/google/inject/internal/BytecodeGen;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("\\.internal\\..*$", ".internal");

        <com.google.inject.internal.BytecodeGen: java.lang.String GUICE_INTERNAL_PACKAGE> = $r8;

        $r9 = class "Lcom/google/inject/internal/cglib/proxy/$Enhancer;";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("\\.cglib\\..*$", ".cglib");

        <com.google.inject.internal.BytecodeGen: java.lang.String CGLIB_PACKAGE> = $r11;

        $r12 = new com.google.inject.internal.BytecodeGen$1;

        specialinvoke $r12.<com.google.inject.internal.BytecodeGen$1: void <init>()>();

        <com.google.inject.internal.BytecodeGen: com.google.inject.internal.cglib.core.$NamingPolicy FASTCLASS_NAMING_POLICY> = $r12;

        $r13 = new com.google.inject.internal.BytecodeGen$2;

        specialinvoke $r13.<com.google.inject.internal.BytecodeGen$2: void <init>()>();

        <com.google.inject.internal.BytecodeGen: com.google.inject.internal.cglib.core.$NamingPolicy ENHANCER_NAMING_POLICY> = $r13;

        $r14 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("guice.custom.loader", "true");

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r14);

        <com.google.inject.internal.BytecodeGen: boolean CUSTOM_LOADER_ENABLED> = $z0;

        $z1 = <com.google.inject.internal.BytecodeGen: boolean CUSTOM_LOADER_ENABLED>;

        if $z1 == 0 goto label1;

        $r16 = new com.google.inject.internal.util.$MapMaker;

        specialinvoke $r16.<com.google.inject.internal.util.$MapMaker: void <init>()>();

        $r17 = virtualinvoke $r16.<com.google.inject.internal.util.$MapMaker: com.google.inject.internal.util.$MapMaker weakKeys()>();

        $r18 = virtualinvoke $r17.<com.google.inject.internal.util.$MapMaker: com.google.inject.internal.util.$MapMaker weakValues()>();

        $r19 = new com.google.inject.internal.BytecodeGen$3;

        specialinvoke $r19.<com.google.inject.internal.BytecodeGen$3: void <init>()>();

        $r20 = virtualinvoke $r18.<com.google.inject.internal.util.$MapMaker: java.util.concurrent.ConcurrentMap makeComputingMap(com.google.inject.internal.util.$Function)>($r19);

        <com.google.inject.internal.BytecodeGen: java.util.Map CLASS_LOADER_CACHE> = $r20;

        goto label2;

     label1:
        $r15 = staticinvoke <com.google.inject.internal.util.$ImmutableMap: com.google.inject.internal.util.$ImmutableMap of()>();

        <com.google.inject.internal.BytecodeGen: java.util.Map CLASS_LOADER_CACHE> = $r15;

     label2:
        return;
    }
}
