public class com.hp.hpl.jena.sparql.expr.E_Function extends com.hp.hpl.jena.sparql.expr.ExprFunctionN
{
    private static final java.lang.String name;
    public static boolean WarnOnUnknownFunction;
    private java.lang.String functionIRI;
    private com.hp.hpl.jena.sparql.function.Function function;
    private boolean functionBound;

    public void <init>(java.lang.String, com.hp.hpl.jena.sparql.expr.ExprList)
    {
        java.lang.String r2;
        com.hp.hpl.jena.sparql.expr.E_Function r0;
        com.hp.hpl.jena.sparql.expr.ExprList r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.E_Function;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.sparql.expr.ExprList;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunctionN: void <init>(java.lang.String,com.hp.hpl.jena.sparql.expr.ExprList)>("function", r1);

        r0.<com.hp.hpl.jena.sparql.expr.E_Function: com.hp.hpl.jena.sparql.function.Function function> = null;

        r0.<com.hp.hpl.jena.sparql.expr.E_Function: boolean functionBound> = 0;

        r0.<com.hp.hpl.jena.sparql.expr.E_Function: java.lang.String functionIRI> = r2;

        return;
    }

    public java.lang.String getFunctionIRI()
    {
        java.lang.String $r1;
        com.hp.hpl.jena.sparql.expr.E_Function r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.E_Function;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.E_Function: java.lang.String functionIRI>;

        return $r1;
    }

    public com.hp.hpl.jena.sparql.expr.NodeValue evalSpecial(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.function.FunctionEnv)
    {
        com.hp.hpl.jena.sparql.expr.NodeValue $r7;
        com.hp.hpl.jena.sparql.function.Function $r1, $r3;
        com.hp.hpl.jena.sparql.expr.ExprList $r4;
        com.hp.hpl.jena.sparql.expr.ExprEvalException $r8;
        java.lang.String $r5, $r11, $r14;
        boolean $z0;
        com.hp.hpl.jena.sparql.util.Context $r15;
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        com.hp.hpl.jena.sparql.expr.E_Function r0;
        java.lang.StringBuilder $r9, $r10, $r12, $r13;
        com.hp.hpl.jena.sparql.function.FunctionEnv r6;

        r0 := @this: com.hp.hpl.jena.sparql.expr.E_Function;

        r2 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r6 := @parameter1: com.hp.hpl.jena.sparql.function.FunctionEnv;

        $z0 = r0.<com.hp.hpl.jena.sparql.expr.E_Function: boolean functionBound>;

        if $z0 != 0 goto label1;

        $r15 = interfaceinvoke r6.<com.hp.hpl.jena.sparql.function.FunctionEnv: com.hp.hpl.jena.sparql.util.Context getContext()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.E_Function: void buildFunction(com.hp.hpl.jena.sparql.util.Context)>($r15);

     label1:
        $r1 = r0.<com.hp.hpl.jena.sparql.expr.E_Function: com.hp.hpl.jena.sparql.function.Function function>;

        if $r1 != null goto label2;

        $r8 = new com.hp.hpl.jena.sparql.expr.ExprEvalException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URI <");

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.E_Function: java.lang.String getFunctionIRI()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not bound");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.hp.hpl.jena.sparql.expr.ExprEvalException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label2:
        $r3 = r0.<com.hp.hpl.jena.sparql.expr.E_Function: com.hp.hpl.jena.sparql.function.Function function>;

        $r4 = r0.<com.hp.hpl.jena.sparql.expr.E_Function: com.hp.hpl.jena.sparql.expr.ExprList args>;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.E_Function: java.lang.String getFunctionIRI()>();

        $r7 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.function.Function: com.hp.hpl.jena.sparql.expr.NodeValue exec(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.expr.ExprList,java.lang.String,com.hp.hpl.jena.sparql.function.FunctionEnv)>(r2, $r4, $r5, r6);

        return $r7;
    }

    protected com.hp.hpl.jena.sparql.expr.NodeValue eval(java.util.List)
    {
        java.util.List r2;
        com.hp.hpl.jena.sparql.ARQInternalErrorException $r0;
        com.hp.hpl.jena.sparql.expr.E_Function r1;

        r1 := @this: com.hp.hpl.jena.sparql.expr.E_Function;

        r2 := @parameter0: java.util.List;

        $r0 = new com.hp.hpl.jena.sparql.ARQInternalErrorException;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void <init>()>();

        throw $r0;
    }

    public void buildFunction(com.hp.hpl.jena.sparql.util.Context)
    {
        org.slf4j.Logger $r3;
        com.hp.hpl.jena.sparql.util.Context r1;
        com.hp.hpl.jena.sparql.expr.E_Function r0;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;
        java.lang.String $r6, $r9;
        com.hp.hpl.jena.sparql.expr.ExprException $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.E_Function;

        r1 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

     label1:
        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.E_Function: void bindFunction(com.hp.hpl.jena.sparql.util.Context)>(r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $z0 = <com.hp.hpl.jena.sparql.expr.E_Function: boolean WarnOnUnknownFunction>;

        if $z0 == 0 goto label4;

        $r3 = staticinvoke <com.hp.hpl.jena.query.ARQ: org.slf4j.Logger getExecLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URI <");

        $r6 = r0.<com.hp.hpl.jena.sparql.expr.E_Function: java.lang.String functionIRI>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> has no registered function factory");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>($r9);

     label4:
        return;

        catch com.hp.hpl.jena.sparql.expr.ExprException from label1 to label2 with label3;
    }

    private void bindFunction(com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.function.Function $r6, $r9;
        com.hp.hpl.jena.sparql.expr.ExprList $r7;
        com.hp.hpl.jena.sparql.expr.ExprEvalException $r10;
        java.lang.String $r3, $r5, $r8, $r13, $r16;
        boolean $z0;
        com.hp.hpl.jena.sparql.function.FunctionFactory $r4;
        com.hp.hpl.jena.sparql.util.Context r1;
        com.hp.hpl.jena.sparql.function.FunctionRegistry $r2;
        com.hp.hpl.jena.sparql.expr.E_Function r0;
        java.lang.StringBuilder $r11, $r12, $r14, $r15;

        r0 := @this: com.hp.hpl.jena.sparql.expr.E_Function;

        r1 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

        $z0 = r0.<com.hp.hpl.jena.sparql.expr.E_Function: boolean functionBound>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = specialinvoke r0.<com.hp.hpl.jena.sparql.expr.E_Function: com.hp.hpl.jena.sparql.function.FunctionRegistry chooseRegistry(com.hp.hpl.jena.sparql.util.Context)>(r1);

        $r3 = r0.<com.hp.hpl.jena.sparql.expr.E_Function: java.lang.String functionIRI>;

        $r4 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.function.FunctionRegistry: com.hp.hpl.jena.sparql.function.FunctionFactory get(java.lang.String)>($r3);

        if $r4 != null goto label2;

        r0.<com.hp.hpl.jena.sparql.expr.E_Function: boolean functionBound> = 1;

        $r10 = new com.hp.hpl.jena.sparql.expr.ExprEvalException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URI <");

        $r13 = r0.<com.hp.hpl.jena.sparql.expr.E_Function: java.lang.String functionIRI>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not found as a function");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.hp.hpl.jena.sparql.expr.ExprEvalException: void <init>(java.lang.String)>($r16);

        throw $r10;

     label2:
        $r5 = r0.<com.hp.hpl.jena.sparql.expr.E_Function: java.lang.String functionIRI>;

        $r6 = interfaceinvoke $r4.<com.hp.hpl.jena.sparql.function.FunctionFactory: com.hp.hpl.jena.sparql.function.Function create(java.lang.String)>($r5);

        r0.<com.hp.hpl.jena.sparql.expr.E_Function: com.hp.hpl.jena.sparql.function.Function function> = $r6;

        $r9 = r0.<com.hp.hpl.jena.sparql.expr.E_Function: com.hp.hpl.jena.sparql.function.Function function>;

        $r8 = r0.<com.hp.hpl.jena.sparql.expr.E_Function: java.lang.String functionIRI>;

        $r7 = r0.<com.hp.hpl.jena.sparql.expr.E_Function: com.hp.hpl.jena.sparql.expr.ExprList args>;

        interfaceinvoke $r9.<com.hp.hpl.jena.sparql.function.Function: void build(java.lang.String,com.hp.hpl.jena.sparql.expr.ExprList)>($r8, $r7);

        r0.<com.hp.hpl.jena.sparql.expr.E_Function: boolean functionBound> = 1;

        return;
    }

    private com.hp.hpl.jena.sparql.function.FunctionRegistry chooseRegistry(com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.function.FunctionRegistry $r1, r3;
        com.hp.hpl.jena.sparql.expr.E_Function r2;
        com.hp.hpl.jena.sparql.util.Context r0;

        r2 := @this: com.hp.hpl.jena.sparql.expr.E_Function;

        r0 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.function.FunctionRegistry: com.hp.hpl.jena.sparql.function.FunctionRegistry get(com.hp.hpl.jena.sparql.util.Context)>(r0);

        r3 = $r1;

        if $r1 != null goto label1;

        r3 = staticinvoke <com.hp.hpl.jena.sparql.function.FunctionRegistry: com.hp.hpl.jena.sparql.function.FunctionRegistry get()>();

     label1:
        return r3;
    }

    public java.lang.String getFunctionPrintName(com.hp.hpl.jena.sparql.serializer.SerializationContext)
    {
        com.hp.hpl.jena.sparql.expr.E_Function r0;
        com.hp.hpl.jena.sparql.serializer.SerializationContext r1;
        java.lang.String $r2, $r3;

        r0 := @this: com.hp.hpl.jena.sparql.expr.E_Function;

        r1 := @parameter0: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        $r2 = r0.<com.hp.hpl.jena.sparql.expr.E_Function: java.lang.String functionIRI>;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForURI(java.lang.String,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r2, r1);

        return $r3;
    }

    public java.lang.String getFunctionName(com.hp.hpl.jena.sparql.serializer.SerializationContext)
    {
        com.hp.hpl.jena.sparql.expr.E_Function r0;
        com.hp.hpl.jena.sparql.serializer.SerializationContext r1;
        java.lang.String $r2, $r3;

        r0 := @this: com.hp.hpl.jena.sparql.expr.E_Function;

        r1 := @parameter0: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        $r2 = r0.<com.hp.hpl.jena.sparql.expr.E_Function: java.lang.String functionIRI>;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForURI(java.lang.String,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r2, r1);

        return $r3;
    }

    protected com.hp.hpl.jena.sparql.expr.Expr copy(com.hp.hpl.jena.sparql.expr.ExprList)
    {
        com.hp.hpl.jena.sparql.expr.E_Function $r0, r1;
        com.hp.hpl.jena.sparql.expr.ExprList r3;
        java.lang.String $r2;

        r1 := @this: com.hp.hpl.jena.sparql.expr.E_Function;

        r3 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprList;

        $r0 = new com.hp.hpl.jena.sparql.expr.E_Function;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.expr.E_Function: java.lang.String getFunctionIRI()>();

        specialinvoke $r0.<com.hp.hpl.jena.sparql.expr.E_Function: void <init>(java.lang.String,com.hp.hpl.jena.sparql.expr.ExprList)>($r2, r3);

        return $r0;
    }

    static void <clinit>()
    {
        <com.hp.hpl.jena.sparql.expr.E_Function: java.lang.String name> = "function";

        <com.hp.hpl.jena.sparql.expr.E_Function: boolean WarnOnUnknownFunction> = 1;

        return;
    }
}
