public final class org.apache.poi.hssf.usermodel.EscherGraphics2d extends java.awt.Graphics2D
{
    private org.apache.poi.hssf.usermodel.EscherGraphics _escherGraphics;
    private java.awt.image.BufferedImage _img;
    private java.awt.geom.AffineTransform _trans;
    private java.awt.Stroke _stroke;
    private java.awt.Paint _paint;
    private java.awt.Shape _deviceclip;
    private org.apache.poi.util.POILogger logger;

    public void <init>(org.apache.poi.hssf.usermodel.EscherGraphics)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Color $r5;
        java.awt.image.BufferedImage $r4;
        java.lang.Class $r1;
        org.apache.poi.util.POILogger $r2;
        org.apache.poi.hssf.usermodel.EscherGraphics r3;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r3 := @parameter0: org.apache.poi.hssf.usermodel.EscherGraphics;

        specialinvoke r0.<java.awt.Graphics2D: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>($r1);

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.util.POILogger logger> = $r2;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics _escherGraphics> = r3;

        $r4 = new java.awt.image.BufferedImage;

        specialinvoke $r4.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, 1, 2);

        specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void setImg(java.awt.image.BufferedImage)>($r4);

        $r5 = <java.awt.Color: java.awt.Color black>;

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void setColor(java.awt.Color)>($r5);

        return;
    }

    public void addRenderingHints(java.util.Map)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Graphics2D $r1;
        java.util.Map r2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r2 := @parameter0: java.util.Map;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Graphics2D getG2D()>();

        virtualinvoke $r1.<java.awt.Graphics2D: void addRenderingHints(java.util.Map)>(r2);

        return;
    }

    public void clearRect(int, int, int, int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Color $r2;
        java.awt.Paint $r1;
        int i0, i1, i2, i3;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Paint getPaint()>();

        $r2 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Color getBackground()>();

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void setColor(java.awt.Color)>($r2);

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void fillRect(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void setPaint(java.awt.Paint)>($r1);

        return;
    }

    public void clip(java.awt.Shape)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Shape $r1, $r3, r5;
        java.awt.geom.Area $r2, $r4;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r5 := @parameter0: java.awt.Shape;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Shape getDeviceclip()>();

        if $r1 == null goto label2;

        $r2 = new java.awt.geom.Area;

        $r3 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Shape getClip()>();

        specialinvoke $r2.<java.awt.geom.Area: void <init>(java.awt.Shape)>($r3);

        if r5 == null goto label1;

        $r4 = new java.awt.geom.Area;

        specialinvoke $r4.<java.awt.geom.Area: void <init>(java.awt.Shape)>(r5);

        virtualinvoke $r2.<java.awt.geom.Area: void intersect(java.awt.geom.Area)>($r4);

     label1:
        r5 = $r2;

     label2:
        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void setClip(java.awt.Shape)>(r5);

        return;
    }

    public void clipRect(int, int, int, int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Rectangle $r1;
        int i0, i1, i2, i3;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = new java.awt.Rectangle;

        specialinvoke $r1.<java.awt.Rectangle: void <init>(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void clip(java.awt.Shape)>($r1);

        return;
    }

    public void copyArea(int, int, int, int, int, int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Graphics2D $r1;
        int i0, i1, i2, i3, i4, i5;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Graphics2D getG2D()>();

        virtualinvoke $r1.<java.awt.Graphics2D: void copyArea(int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5);

        return;
    }

    public java.awt.Graphics create()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d $r0, r1;
        org.apache.poi.hssf.usermodel.EscherGraphics $r2;

        r1 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r0 = new org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r2 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics _escherGraphics>;

        specialinvoke $r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void <init>(org.apache.poi.hssf.usermodel.EscherGraphics)>($r2);

        return $r0;
    }

    public void dispose()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Graphics2D $r2;
        java.awt.image.BufferedImage $r3;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()>();

        virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: void dispose()>();

        $r2 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Graphics2D getG2D()>();

        virtualinvoke $r2.<java.awt.Graphics2D: void dispose()>();

        $r3 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.image.BufferedImage getImg()>();

        virtualinvoke $r3.<java.awt.image.BufferedImage: void flush()>();

        return;
    }

    public void draw(java.awt.Shape)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r1;
        int $i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d2, $d3;
        java.awt.Shape r0;
        java.awt.Stroke $r5, $r6, $r7;
        java.awt.geom.Line2D r4;
        org.apache.poi.util.POILogger $r2, $r3;
        float $f0;
        java.awt.BasicStroke $r8;

        r1 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r0 := @parameter0: java.awt.Shape;

        $z0 = r0 instanceof java.awt.geom.Line2D;

        if $z0 == 0 goto label2;

        r4 = (java.awt.geom.Line2D) r0;

        i1 = 0;

        $r5 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Stroke _stroke>;

        if $r5 == null goto label1;

        $r6 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Stroke _stroke>;

        $z2 = $r6 instanceof java.awt.BasicStroke;

        if $z2 == 0 goto label1;

        $r7 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Stroke _stroke>;

        $r8 = (java.awt.BasicStroke) $r7;

        $f0 = virtualinvoke $r8.<java.awt.BasicStroke: float getLineWidth()>();

        $i0 = (int) $f0;

        i1 = $i0 * 12700;

     label1:
        $d0 = virtualinvoke r4.<java.awt.geom.Line2D: double getX1()>();

        $i2 = (int) $d0;

        $d1 = virtualinvoke r4.<java.awt.geom.Line2D: double getY1()>();

        $i3 = (int) $d1;

        $d2 = virtualinvoke r4.<java.awt.geom.Line2D: double getX2()>();

        $i4 = (int) $d2;

        $d3 = virtualinvoke r4.<java.awt.geom.Line2D: double getY2()>();

        $i5 = (int) $d3;

        virtualinvoke r1.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void drawLine(int,int,int,int,int)>($i2, $i3, $i4, $i5, i1);

        goto label3;

     label2:
        $r2 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.util.POILogger logger>;

        $z1 = virtualinvoke $r2.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z1 == 0 goto label3;

        $r3 = r1.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r3.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "draw not fully supported");

     label3:
        return;
    }

    public void drawArc(int, int, int, int, int, int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1, i2, i3, i4, i5;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.awt.geom.Arc2D$Float $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        $r1 = new java.awt.geom.Arc2D$Float;

        $f5 = (float) i0;

        $f4 = (float) i1;

        $f3 = (float) i2;

        $f2 = (float) i3;

        $f1 = (float) i4;

        $f0 = (float) i5;

        specialinvoke $r1.<java.awt.geom.Arc2D$Float: void <init>(float,float,float,float,float,float,int)>($f5, $f4, $f3, $f2, $f1, $f0, 0);

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void draw(java.awt.Shape)>($r1);

        return;
    }

    public void drawGlyphVector(java.awt.font.GlyphVector, float, float)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Shape $r2;
        float f0, f1;
        java.awt.font.GlyphVector r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r1 := @parameter0: java.awt.font.GlyphVector;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $r2 = virtualinvoke r1.<java.awt.font.GlyphVector: java.awt.Shape getOutline(float,float)>(f0, f1);

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void fill(java.awt.Shape)>($r2);

        return;
    }

    public boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)
    {
        java.awt.Color r4;
        java.awt.Image r3;
        org.apache.poi.util.POILogger $r1, $r2;
        java.awt.image.ImageObserver r5;
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r3 := @parameter0: java.awt.Image;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        r4 := @parameter9: java.awt.Color;

        r5 := @parameter10: java.awt.image.ImageObserver;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r2.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "drawImage() not supported");

     label1:
        return 1;
    }

    public boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.image.ImageObserver)
    {
        java.awt.Image r2;
        org.apache.poi.util.POILogger $r1, $r4;
        java.awt.image.ImageObserver r3;
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r2 := @parameter0: java.awt.Image;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        r3 := @parameter9: java.awt.image.ImageObserver;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r4.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "drawImage() not supported");

     label1:
        $z1 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>(r2, i0, i1, i2, i3, i4, i5, i6, i7, null, r3);

        return $z1;
    }

    public boolean drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)
    {
        java.awt.Color r4;
        java.awt.Image r3;
        org.apache.poi.util.POILogger $r1, $r2;
        java.awt.image.ImageObserver r5;
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1, i2, i3;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r3 := @parameter0: java.awt.Image;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r4 := @parameter5: java.awt.Color;

        r5 := @parameter6: java.awt.image.ImageObserver;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r2.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "drawImage() not supported");

     label1:
        return 1;
    }

    public boolean drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver)
    {
        java.awt.Image r1;
        java.awt.image.ImageObserver r2;
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1, i2, i3;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r1 := @parameter0: java.awt.Image;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r2 := @parameter5: java.awt.image.ImageObserver;

        $z0 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>(r1, i0, i1, i2, i3, null, r2);

        return $z0;
    }

    public boolean drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver)
    {
        java.awt.Color r3;
        java.awt.Image r1;
        java.awt.image.ImageObserver r2;
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1, $i2, $i3;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r1 := @parameter0: java.awt.Image;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r3 := @parameter3: java.awt.Color;

        r2 := @parameter4: java.awt.image.ImageObserver;

        $i2 = virtualinvoke r1.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(r2);

        $i3 = virtualinvoke r1.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(r2);

        $z0 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>(r1, i0, i1, $i2, $i3, r3, r2);

        return $z0;
    }

    public boolean drawImage(java.awt.Image, int, int, java.awt.image.ImageObserver)
    {
        java.awt.Image r1;
        java.awt.image.ImageObserver r2;
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1, $i2, $i3;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r1 := @parameter0: java.awt.Image;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.awt.image.ImageObserver;

        $i2 = virtualinvoke r1.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(r2);

        $i3 = virtualinvoke r1.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(r2);

        $z0 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>(r1, i0, i1, $i2, $i3, r2);

        return $z0;
    }

    public boolean drawImage(java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver)
    {
        java.awt.Image r6;
        java.awt.geom.AffineTransform $r1, r3, $r4, r5;
        java.awt.image.ImageObserver r7;
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.lang.Object $r2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r6 := @parameter0: java.awt.Image;

        r5 := @parameter1: java.awt.geom.AffineTransform;

        r7 := @parameter2: java.awt.image.ImageObserver;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.geom.AffineTransform getTrans()>();

        $r2 = virtualinvoke $r1.<java.awt.geom.AffineTransform: java.lang.Object clone()>();

        r3 = (java.awt.geom.AffineTransform) $r2;

        $r4 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.geom.AffineTransform getTrans()>();

        virtualinvoke $r4.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>(r5);

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r6, 0, 0, r7);

        specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void setTrans(java.awt.geom.AffineTransform)>(r3);

        return 1;
    }

    public void drawImage(java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int)
    {
        java.awt.image.BufferedImage r1, $r2;
        java.awt.image.BufferedImageOp r0;
        java.awt.geom.AffineTransform $r4;
        org.apache.poi.hssf.usermodel.EscherGraphics2d r3;
        int i0, i1;
        float $f0, $f1;

        r3 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r1 := @parameter0: java.awt.image.BufferedImage;

        r0 := @parameter1: java.awt.image.BufferedImageOp;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = interfaceinvoke r0.<java.awt.image.BufferedImageOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>(r1, null);

        $r4 = new java.awt.geom.AffineTransform;

        $f1 = (float) i0;

        $f0 = (float) i1;

        specialinvoke $r4.<java.awt.geom.AffineTransform: void <init>(float,float,float,float,float,float)>(1.0F, 0.0F, 0.0F, 1.0F, $f1, $f0);

        virtualinvoke r3.<org.apache.poi.hssf.usermodel.EscherGraphics2d: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>($r2, $r4, null);

        return;
    }

    public void drawLine(int, int, int, int, int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1, i2, i3, i4;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()>();

        virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: void drawLine(int,int,int,int,int)>(i0, i1, i2, i3, i4);

        return;
    }

    public void drawLine(int, int, int, int)
    {
        java.awt.Stroke $r1, $r2, $r3;
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1, i2, i3, $i4, i5;
        float $f0;
        java.awt.BasicStroke $r4;
        org.apache.poi.hssf.usermodel.EscherGraphics $r5;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i5 = 0;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Stroke _stroke>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Stroke _stroke>;

        $z0 = $r2 instanceof java.awt.BasicStroke;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Stroke _stroke>;

        $r4 = (java.awt.BasicStroke) $r3;

        $f0 = virtualinvoke $r4.<java.awt.BasicStroke: float getLineWidth()>();

        $i4 = (int) $f0;

        i5 = $i4 * 12700;

     label1:
        $r5 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()>();

        virtualinvoke $r5.<org.apache.poi.hssf.usermodel.EscherGraphics: void drawLine(int,int,int,int,int)>(i0, i1, i2, i3, i5);

        return;
    }

    public void drawOval(int, int, int, int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1, i2, i3;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()>();

        virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: void drawOval(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public void drawPolygon(int[], int[], int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int[] r2, r3;
        int i0;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r2 := @parameter0: int[];

        r3 := @parameter1: int[];

        i0 := @parameter2: int;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()>();

        virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: void drawPolygon(int[],int[],int)>(r2, r3, i0);

        return;
    }

    public void drawPolyline(int[], int[], int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r3;
        int[] r1, r2;
        int i0, $i1, $i2, $i3, $i4, i5;
        float $f0, $f1, $f2, $f3;
        java.awt.geom.GeneralPath $r0;

        r3 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        if i0 <= 0 goto label3;

        $r0 = new java.awt.geom.GeneralPath;

        specialinvoke $r0.<java.awt.geom.GeneralPath: void <init>()>();

        $i1 = r1[0];

        $f1 = (float) $i1;

        $i2 = r2[0];

        $f0 = (float) $i2;

        virtualinvoke $r0.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f1, $f0);

        i5 = 1;

     label1:
        if i5 >= i0 goto label2;

        $i3 = r1[i5];

        $f3 = (float) $i3;

        $i4 = r2[i5];

        $f2 = (float) $i4;

        virtualinvoke $r0.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f3, $f2);

        i5 = i5 + 1;

        goto label1;

     label2:
        virtualinvoke r3.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void draw(java.awt.Shape)>($r0);

     label3:
        return;
    }

    public void drawRect(int, int, int, int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1, i2, i3;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics _escherGraphics>;

        virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: void drawRect(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public void drawRenderableImage(java.awt.image.renderable.RenderableImage, java.awt.geom.AffineTransform)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.image.RenderedImage $r2;
        java.awt.image.renderable.RenderableImage r1;
        java.awt.geom.AffineTransform r3;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r1 := @parameter0: java.awt.image.renderable.RenderableImage;

        r3 := @parameter1: java.awt.geom.AffineTransform;

        $r2 = interfaceinvoke r1.<java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createDefaultRendering()>();

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>($r2, r3);

        return;
    }

    public void drawRenderedImage(java.awt.image.RenderedImage, java.awt.geom.AffineTransform)
    {
        java.awt.image.BufferedImage $r0;
        java.awt.image.RenderedImage r1;
        java.awt.geom.AffineTransform r7;
        org.apache.poi.hssf.usermodel.EscherGraphics2d r6;
        java.awt.image.ColorModel $r2;
        java.awt.image.Raster $r3, $r5;
        java.awt.image.WritableRaster $r4;

        r6 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r1 := @parameter0: java.awt.image.RenderedImage;

        r7 := @parameter1: java.awt.geom.AffineTransform;

        $r0 = new java.awt.image.BufferedImage;

        $r2 = interfaceinvoke r1.<java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>();

        $r3 = interfaceinvoke r1.<java.awt.image.RenderedImage: java.awt.image.Raster getData()>();

        $r4 = virtualinvoke $r3.<java.awt.image.Raster: java.awt.image.WritableRaster createCompatibleWritableRaster()>();

        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>($r2, $r4, 0, null);

        $r5 = interfaceinvoke r1.<java.awt.image.RenderedImage: java.awt.image.Raster getData()>();

        virtualinvoke $r0.<java.awt.image.BufferedImage: void setData(java.awt.image.Raster)>($r5);

        virtualinvoke r6.<org.apache.poi.hssf.usermodel.EscherGraphics2d: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>($r0, r7, null);

        return;
    }

    public void drawRoundRect(int, int, int, int, int, int)
    {
        java.awt.geom.RoundRectangle2D$Float $r1;
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1, i2, i3, i4, i5;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        $r1 = new java.awt.geom.RoundRectangle2D$Float;

        $f5 = (float) i0;

        $f4 = (float) i1;

        $f3 = (float) i2;

        $f2 = (float) i3;

        $f1 = (float) i4;

        $f0 = (float) i5;

        specialinvoke $r1.<java.awt.geom.RoundRectangle2D$Float: void <init>(float,float,float,float,float,float)>($f5, $f4, $f3, $f2, $f1, $f0);

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void draw(java.awt.Shape)>($r1);

        return;
    }

    public void drawString(java.lang.String, float, float)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int $i0, $i1;
        float f0, f1;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;
        java.lang.String r2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r2 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()>();

        $i1 = (int) f0;

        $i0 = (int) f1;

        virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: void drawString(java.lang.String,int,int)>(r2, $i1, $i0);

        return;
    }

    public void drawString(java.lang.String, int, int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;
        java.lang.String r2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()>();

        virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: void drawString(java.lang.String,int,int)>(r2, i0, i1);

        return;
    }

    public void drawString(java.text.AttributedCharacterIterator, float, float)
    {
        java.awt.Color $r5;
        java.awt.Shape $r7;
        java.awt.font.TextLayout $r0;
        java.awt.geom.AffineTransform $r6;
        org.apache.poi.hssf.usermodel.EscherGraphics2d r2;
        java.awt.font.FontRenderContext $r3;
        java.text.AttributedCharacterIterator r1;
        java.awt.Paint $r4;
        float f0, f1;
        double $d0, $d1;

        r2 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r1 := @parameter0: java.text.AttributedCharacterIterator;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $r0 = new java.awt.font.TextLayout;

        $r3 = virtualinvoke r2.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.font.FontRenderContext getFontRenderContext()>();

        specialinvoke $r0.<java.awt.font.TextLayout: void <init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext)>(r1, $r3);

        $r4 = virtualinvoke r2.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Paint getPaint()>();

        $r5 = virtualinvoke r2.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Color getColor()>();

        virtualinvoke r2.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void setColor(java.awt.Color)>($r5);

        $d1 = (double) f0;

        $d0 = (double) f1;

        $r6 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d1, $d0);

        $r7 = virtualinvoke $r0.<java.awt.font.TextLayout: java.awt.Shape getOutline(java.awt.geom.AffineTransform)>($r6);

        virtualinvoke r2.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void fill(java.awt.Shape)>($r7);

        virtualinvoke r2.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void setPaint(java.awt.Paint)>($r4);

        return;
    }

    public void drawString(java.text.AttributedCharacterIterator, int, int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.text.AttributedCharacterIterator r2;
        int i0, i1;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r2 := @parameter0: java.text.AttributedCharacterIterator;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()>();

        virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: void drawString(java.text.AttributedCharacterIterator,int,int)>(r2, i0, i1);

        return;
    }

    public void fill(java.awt.Shape)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Shape r3;
        org.apache.poi.util.POILogger $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r3 := @parameter0: java.awt.Shape;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.util.POILogger logger>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r2.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "fill(Shape) not supported");

     label1:
        return;
    }

    public void fillArc(int, int, int, int, int, int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1, i2, i3, i4, i5;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.awt.geom.Arc2D$Float $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        $r1 = new java.awt.geom.Arc2D$Float;

        $f5 = (float) i0;

        $f4 = (float) i1;

        $f3 = (float) i2;

        $f2 = (float) i3;

        $f1 = (float) i4;

        $f0 = (float) i5;

        specialinvoke $r1.<java.awt.geom.Arc2D$Float: void <init>(float,float,float,float,float,float,int)>($f5, $f4, $f3, $f2, $f1, $f0, 2);

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void fill(java.awt.Shape)>($r1);

        return;
    }

    public void fillOval(int, int, int, int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1, i2, i3;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics _escherGraphics>;

        virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: void fillOval(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public void fillPolygon(int[], int[], int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int[] r1, r2;
        int i0;
        org.apache.poi.hssf.usermodel.EscherGraphics $r3;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        $r3 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics _escherGraphics>;

        virtualinvoke $r3.<org.apache.poi.hssf.usermodel.EscherGraphics: void fillPolygon(int[],int[],int)>(r1, r2, i0);

        return;
    }

    public void fillRect(int, int, int, int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1, i2, i3;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()>();

        virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: void fillRect(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public void fillRoundRect(int, int, int, int, int, int)
    {
        java.awt.geom.RoundRectangle2D$Float $r1;
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1, i2, i3, i4, i5;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        $r1 = new java.awt.geom.RoundRectangle2D$Float;

        $f5 = (float) i0;

        $f4 = (float) i1;

        $f3 = (float) i2;

        $f2 = (float) i3;

        $f1 = (float) i4;

        $f0 = (float) i5;

        specialinvoke $r1.<java.awt.geom.RoundRectangle2D$Float: void <init>(float,float,float,float,float,float)>($f5, $f4, $f3, $f2, $f1, $f0);

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void fill(java.awt.Shape)>($r1);

        return;
    }

    public java.awt.Color getBackground()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Color $r2;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color getBackground()>();

        return $r2;
    }

    public java.awt.Shape getClip()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Shape $r3, $r4;
        java.awt.geom.AffineTransform $r1, $r2;
        java.lang.Exception $r5;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

     label1:
        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.geom.AffineTransform getTrans()>();

        $r2 = virtualinvoke $r1.<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>();

        $r3 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Shape getDeviceclip()>();

        $r4 = virtualinvoke $r2.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.awt.Rectangle getClipBounds()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Shape $r1, $r2;
        java.awt.Rectangle $r3;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Shape getDeviceclip()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Shape getClip()>();

        $r3 = interfaceinvoke $r2.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        return $r3;

     label1:
        return null;
    }

    public java.awt.Color getColor()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Color $r2;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics _escherGraphics>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Color getColor()>();

        return $r2;
    }

    public java.awt.Composite getComposite()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Graphics2D $r1;
        java.awt.Composite $r2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Graphics2D getG2D()>();

        $r2 = virtualinvoke $r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>();

        return $r2;
    }

    public java.awt.GraphicsConfiguration getDeviceConfiguration()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.GraphicsConfiguration $r2;
        java.awt.Graphics2D $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Graphics2D getG2D()>();

        $r2 = virtualinvoke $r1.<java.awt.Graphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()>();

        return $r2;
    }

    public java.awt.Font getFont()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;
        java.awt.Font $r2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.Font getFont()>();

        return $r2;
    }

    public java.awt.FontMetrics getFontMetrics(java.awt.Font)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.FontMetrics $r3;
        java.awt.Font r2;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r2 := @parameter0: java.awt.Font;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()>();

        $r3 = virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>(r2);

        return $r3;
    }

    public java.awt.font.FontRenderContext getFontRenderContext()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.font.FontRenderContext $r4;
        java.awt.Graphics2D $r1, $r3;
        java.awt.geom.AffineTransform $r2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Graphics2D getG2D()>();

        $r2 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.geom.AffineTransform getTrans()>();

        virtualinvoke $r1.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>($r2);

        $r3 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Graphics2D getG2D()>();

        $r4 = virtualinvoke $r3.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>();

        return $r4;
    }

    public java.awt.Paint getPaint()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Paint $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Paint _paint>;

        return $r1;
    }

    public java.lang.Object getRenderingHint(java.awt.RenderingHints$Key)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Graphics2D $r1;
        java.awt.RenderingHints$Key r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r2 := @parameter0: java.awt.RenderingHints$Key;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Graphics2D getG2D()>();

        $r3 = virtualinvoke $r1.<java.awt.Graphics2D: java.lang.Object getRenderingHint(java.awt.RenderingHints$Key)>(r2);

        return $r3;
    }

    public java.awt.RenderingHints getRenderingHints()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.RenderingHints $r2;
        java.awt.Graphics2D $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Graphics2D getG2D()>();

        $r2 = virtualinvoke $r1.<java.awt.Graphics2D: java.awt.RenderingHints getRenderingHints()>();

        return $r2;
    }

    public java.awt.Stroke getStroke()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Stroke $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Stroke _stroke>;

        return $r1;
    }

    public java.awt.geom.AffineTransform getTransform()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.lang.Object $r2;
        java.awt.geom.AffineTransform $r1, $r3;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.geom.AffineTransform getTrans()>();

        $r2 = virtualinvoke $r1.<java.awt.geom.AffineTransform: java.lang.Object clone()>();

        $r3 = (java.awt.geom.AffineTransform) $r2;

        return $r3;
    }

    public boolean hit(java.awt.Rectangle, java.awt.Shape, boolean)
    {
        java.awt.Stroke $r4;
        java.awt.Shape $r6, r9;
        java.awt.Rectangle r8;
        java.awt.geom.AffineTransform $r2;
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Graphics2D $r1, $r3, $r5, $r7;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r8 := @parameter0: java.awt.Rectangle;

        r9 := @parameter1: java.awt.Shape;

        z0 := @parameter2: boolean;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Graphics2D getG2D()>();

        $r2 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.geom.AffineTransform getTrans()>();

        virtualinvoke $r1.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>($r2);

        $r3 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Graphics2D getG2D()>();

        $r4 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Stroke getStroke()>();

        virtualinvoke $r3.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r4);

        $r5 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Graphics2D getG2D()>();

        $r6 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Shape getClip()>();

        virtualinvoke $r5.<java.awt.Graphics2D: void setClip(java.awt.Shape)>($r6);

        $r7 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Graphics2D getG2D()>();

        $z1 = virtualinvoke $r7.<java.awt.Graphics2D: boolean hit(java.awt.Rectangle,java.awt.Shape,boolean)>(r8, r9, z0);

        return $z1;
    }

    public void rotate(double)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.geom.AffineTransform $r1;
        double d0;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        d0 := @parameter0: double;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.geom.AffineTransform getTrans()>();

        virtualinvoke $r1.<java.awt.geom.AffineTransform: void rotate(double)>(d0);

        return;
    }

    public void rotate(double, double, double)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.geom.AffineTransform $r1;
        double d0, d1, d2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.geom.AffineTransform getTrans()>();

        virtualinvoke $r1.<java.awt.geom.AffineTransform: void rotate(double,double,double)>(d0, d1, d2);

        return;
    }

    public void scale(double, double)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.geom.AffineTransform $r1;
        double d0, d1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.geom.AffineTransform getTrans()>();

        virtualinvoke $r1.<java.awt.geom.AffineTransform: void scale(double,double)>(d0, d1);

        return;
    }

    public void setBackground(java.awt.Color)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Color r2;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r2 := @parameter0: java.awt.Color;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()>();

        virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: void setBackground(java.awt.Color)>(r2);

        return;
    }

    public void setClip(int, int, int, int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Rectangle $r1;
        int i0, i1, i2, i3;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = new java.awt.Rectangle;

        specialinvoke $r1.<java.awt.Rectangle: void <init>(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void setClip(java.awt.Shape)>($r1);

        return;
    }

    public void setClip(java.awt.Shape)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Shape r2, $r3;
        java.awt.geom.AffineTransform $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r2 := @parameter0: java.awt.Shape;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.geom.AffineTransform getTrans()>();

        $r3 = virtualinvoke $r1.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r2);

        specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void setDeviceclip(java.awt.Shape)>($r3);

        return;
    }

    public void setColor(java.awt.Color)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Color r1;
        org.apache.poi.hssf.usermodel.EscherGraphics $r2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r1 := @parameter0: java.awt.Color;

        $r2 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics _escherGraphics>;

        virtualinvoke $r2.<org.apache.poi.hssf.usermodel.EscherGraphics: void setColor(java.awt.Color)>(r1);

        return;
    }

    public void setComposite(java.awt.Composite)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Graphics2D $r1;
        java.awt.Composite r2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r2 := @parameter0: java.awt.Composite;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Graphics2D getG2D()>();

        virtualinvoke $r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r2);

        return;
    }

    public void setFont(java.awt.Font)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;
        java.awt.Font r2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r2 := @parameter0: java.awt.Font;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()>();

        virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: void setFont(java.awt.Font)>(r2);

        return;
    }

    public void setPaint(java.awt.Paint)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r1;
        java.awt.Color $r2;
        java.awt.Paint r0;
        boolean $z0;

        r1 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r0 := @parameter0: java.awt.Paint;

        if r0 == null goto label1;

        r1.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Paint _paint> = r0;

        $z0 = r0 instanceof java.awt.Color;

        if $z0 == 0 goto label1;

        $r2 = (java.awt.Color) r0;

        virtualinvoke r1.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void setColor(java.awt.Color)>($r2);

     label1:
        return;
    }

    public void setPaintMode()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()>();

        virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: void setPaintMode()>();

        return;
    }

    public void setRenderingHint(java.awt.RenderingHints$Key, java.lang.Object)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Graphics2D $r1;
        java.awt.RenderingHints$Key r2;
        java.lang.Object r3;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r2 := @parameter0: java.awt.RenderingHints$Key;

        r3 := @parameter1: java.lang.Object;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Graphics2D getG2D()>();

        virtualinvoke $r1.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>(r2, r3);

        return;
    }

    public void setRenderingHints(java.util.Map)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Graphics2D $r1;
        java.util.Map r2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r2 := @parameter0: java.util.Map;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Graphics2D getG2D()>();

        virtualinvoke $r1.<java.awt.Graphics2D: void setRenderingHints(java.util.Map)>(r2);

        return;
    }

    public void setStroke(java.awt.Stroke)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Stroke r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r1 := @parameter0: java.awt.Stroke;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Stroke _stroke> = r1;

        return;
    }

    public void setTransform(java.awt.geom.AffineTransform)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.lang.Object $r2;
        java.awt.geom.AffineTransform r1, $r3;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r1 := @parameter0: java.awt.geom.AffineTransform;

        $r2 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.lang.Object clone()>();

        $r3 = (java.awt.geom.AffineTransform) $r2;

        specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: void setTrans(java.awt.geom.AffineTransform)>($r3);

        return;
    }

    public void setXORMode(java.awt.Color)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Color r2;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r2 := @parameter0: java.awt.Color;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()>();

        virtualinvoke $r1.<org.apache.poi.hssf.usermodel.EscherGraphics: void setXORMode(java.awt.Color)>(r2);

        return;
    }

    public void shear(double, double)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.geom.AffineTransform $r1;
        double d0, d1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.geom.AffineTransform getTrans()>();

        virtualinvoke $r1.<java.awt.geom.AffineTransform: void shear(double,double)>(d0, d1);

        return;
    }

    public void transform(java.awt.geom.AffineTransform)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.geom.AffineTransform $r1, r2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r2 := @parameter0: java.awt.geom.AffineTransform;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.geom.AffineTransform getTrans()>();

        virtualinvoke $r1.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>(r2);

        return;
    }

    public void translate(double, double)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.geom.AffineTransform $r1;
        double d0, d1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.geom.AffineTransform getTrans()>();

        virtualinvoke $r1.<java.awt.geom.AffineTransform: void translate(double,double)>(d0, d1);

        return;
    }

    public void translate(int, int)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        int i0, i1;
        java.awt.geom.AffineTransform $r1;
        double $d0, $d1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = specialinvoke r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.geom.AffineTransform getTrans()>();

        $d1 = (double) i0;

        $d0 = (double) i1;

        virtualinvoke $r1.<java.awt.geom.AffineTransform: void translate(double,double)>($d1, $d0);

        return;
    }

    private org.apache.poi.hssf.usermodel.EscherGraphics getEscherGraphics()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        org.apache.poi.hssf.usermodel.EscherGraphics $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: org.apache.poi.hssf.usermodel.EscherGraphics _escherGraphics>;

        return $r1;
    }

    private java.awt.image.BufferedImage getImg()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.image.BufferedImage $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.image.BufferedImage _img>;

        return $r1;
    }

    private void setImg(java.awt.image.BufferedImage)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.image.BufferedImage r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r1 := @parameter0: java.awt.image.BufferedImage;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.image.BufferedImage _img> = r1;

        return;
    }

    private java.awt.Graphics2D getG2D()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.image.BufferedImage $r1;
        java.awt.Graphics2D $r3;
        java.awt.Graphics $r2;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.image.BufferedImage _img>;

        $r2 = virtualinvoke $r1.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>();

        $r3 = (java.awt.Graphics2D) $r2;

        return $r3;
    }

    private java.awt.geom.AffineTransform getTrans()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.geom.AffineTransform $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.geom.AffineTransform _trans>;

        return $r1;
    }

    private void setTrans(java.awt.geom.AffineTransform)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.geom.AffineTransform r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r1 := @parameter0: java.awt.geom.AffineTransform;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.geom.AffineTransform _trans> = r1;

        return;
    }

    private java.awt.Shape getDeviceclip()
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Shape $r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        $r1 = r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Shape _deviceclip>;

        return $r1;
    }

    private void setDeviceclip(java.awt.Shape)
    {
        org.apache.poi.hssf.usermodel.EscherGraphics2d r0;
        java.awt.Shape r1;

        r0 := @this: org.apache.poi.hssf.usermodel.EscherGraphics2d;

        r1 := @parameter0: java.awt.Shape;

        r0.<org.apache.poi.hssf.usermodel.EscherGraphics2d: java.awt.Shape _deviceclip> = r1;

        return;
    }
}
