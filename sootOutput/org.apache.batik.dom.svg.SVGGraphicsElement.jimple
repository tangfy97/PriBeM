public abstract class org.apache.batik.dom.svg.SVGGraphicsElement extends org.apache.batik.dom.svg.SVGStylableElement implements org.apache.batik.dom.svg.SVGMotionAnimatableElement
{
    protected static org.apache.batik.util.DoublyIndexedTable xmlTraitInformation;
    protected org.apache.batik.dom.svg.SVGOMAnimatedTransformList transform;
    protected org.apache.batik.dom.svg.SVGOMAnimatedBoolean externalResourcesRequired;
    protected java.awt.geom.AffineTransform motionTransform;

    protected void <init>()
    {
        org.apache.batik.dom.svg.SVGGraphicsElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGStylableElement: void <init>()>();

        return;
    }

    protected void <init>(java.lang.String, org.apache.batik.dom.AbstractDocument)
    {
        org.apache.batik.dom.AbstractDocument r2;
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGGraphicsElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.dom.AbstractDocument;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGStylableElement: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        specialinvoke r0.<org.apache.batik.dom.svg.SVGGraphicsElement: void initializeLiveAttributes()>();

        return;
    }

    protected void initializeAllLiveAttributes()
    {
        org.apache.batik.dom.svg.SVGGraphicsElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGStylableElement: void initializeAllLiveAttributes()>();

        specialinvoke r0.<org.apache.batik.dom.svg.SVGGraphicsElement: void initializeLiveAttributes()>();

        return;
    }

    private void initializeLiveAttributes()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedBoolean $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1;
        org.apache.batik.dom.svg.SVGGraphicsElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGOMAnimatedTransformList createLiveAnimatedTransformList(java.lang.String,java.lang.String,java.lang.String)>(null, "transform", "");

        r0.<org.apache.batik.dom.svg.SVGGraphicsElement: org.apache.batik.dom.svg.SVGOMAnimatedTransformList transform> = $r1;

        $r2 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGOMAnimatedBoolean createLiveAnimatedBoolean(java.lang.String,java.lang.String,boolean)>(null, "externalResourcesRequired", 0);

        r0.<org.apache.batik.dom.svg.SVGGraphicsElement: org.apache.batik.dom.svg.SVGOMAnimatedBoolean externalResourcesRequired> = $r2;

        return;
    }

    protected org.apache.batik.util.DoublyIndexedTable getTraitInformationTable()
    {
        org.apache.batik.util.DoublyIndexedTable $r0;
        org.apache.batik.dom.svg.SVGGraphicsElement r1;

        r1 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        $r0 = <org.apache.batik.dom.svg.SVGGraphicsElement: org.apache.batik.util.DoublyIndexedTable xmlTraitInformation>;

        return $r0;
    }

    public org.w3c.dom.svg.SVGElement getNearestViewportElement()
    {
        org.w3c.dom.svg.SVGElement $r1;
        org.apache.batik.dom.svg.SVGGraphicsElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGLocatableSupport: org.w3c.dom.svg.SVGElement getNearestViewportElement(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public org.w3c.dom.svg.SVGElement getFarthestViewportElement()
    {
        org.w3c.dom.svg.SVGElement $r1;
        org.apache.batik.dom.svg.SVGGraphicsElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGLocatableSupport: org.w3c.dom.svg.SVGElement getFarthestViewportElement(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public org.w3c.dom.svg.SVGRect getBBox()
    {
        org.apache.batik.dom.svg.SVGGraphicsElement r0;
        org.w3c.dom.svg.SVGRect $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGLocatableSupport: org.w3c.dom.svg.SVGRect getBBox(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public org.w3c.dom.svg.SVGMatrix getCTM()
    {
        org.apache.batik.dom.svg.SVGGraphicsElement r0;
        org.w3c.dom.svg.SVGMatrix $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGLocatableSupport: org.w3c.dom.svg.SVGMatrix getCTM(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public org.w3c.dom.svg.SVGMatrix getScreenCTM()
    {
        org.apache.batik.dom.svg.SVGGraphicsElement r0;
        org.w3c.dom.svg.SVGMatrix $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGLocatableSupport: org.w3c.dom.svg.SVGMatrix getScreenCTM(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public org.w3c.dom.svg.SVGMatrix getTransformToElement(org.w3c.dom.svg.SVGElement) throws org.w3c.dom.svg.SVGException
    {
        org.w3c.dom.svg.SVGElement r1;
        org.apache.batik.dom.svg.SVGGraphicsElement r0;
        org.w3c.dom.svg.SVGMatrix $r2;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        r1 := @parameter0: org.w3c.dom.svg.SVGElement;

        $r2 = staticinvoke <org.apache.batik.dom.svg.SVGLocatableSupport: org.w3c.dom.svg.SVGMatrix getTransformToElement(org.w3c.dom.Element,org.w3c.dom.svg.SVGElement)>(r0, r1);

        return $r2;
    }

    public org.w3c.dom.svg.SVGAnimatedTransformList getTransform()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1;
        org.apache.batik.dom.svg.SVGGraphicsElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        $r1 = r0.<org.apache.batik.dom.svg.SVGGraphicsElement: org.apache.batik.dom.svg.SVGOMAnimatedTransformList transform>;

        return $r1;
    }

    public org.w3c.dom.svg.SVGAnimatedBoolean getExternalResourcesRequired()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedBoolean $r1;
        org.apache.batik.dom.svg.SVGGraphicsElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        $r1 = r0.<org.apache.batik.dom.svg.SVGGraphicsElement: org.apache.batik.dom.svg.SVGOMAnimatedBoolean externalResourcesRequired>;

        return $r1;
    }

    public java.lang.String getXMLlang()
    {
        java.lang.String $r1;
        org.apache.batik.dom.svg.SVGGraphicsElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        $r1 = staticinvoke <org.apache.batik.dom.util.XMLSupport: java.lang.String getXMLLang(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public void setXMLlang(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGGraphicsElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.batik.dom.AbstractElement: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/XML/1998/namespace", "xml:lang", r1);

        return;
    }

    public java.lang.String getXMLspace()
    {
        java.lang.String $r1;
        org.apache.batik.dom.svg.SVGGraphicsElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        $r1 = staticinvoke <org.apache.batik.dom.util.XMLSupport: java.lang.String getXMLSpace(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public void setXMLspace(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGGraphicsElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.batik.dom.AbstractElement: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/XML/1998/namespace", "xml:space", r1);

        return;
    }

    public org.w3c.dom.svg.SVGStringList getRequiredFeatures()
    {
        org.w3c.dom.svg.SVGStringList $r1;
        org.apache.batik.dom.svg.SVGGraphicsElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGTestsSupport: org.w3c.dom.svg.SVGStringList getRequiredFeatures(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public org.w3c.dom.svg.SVGStringList getRequiredExtensions()
    {
        org.w3c.dom.svg.SVGStringList $r1;
        org.apache.batik.dom.svg.SVGGraphicsElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGTestsSupport: org.w3c.dom.svg.SVGStringList getRequiredExtensions(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public org.w3c.dom.svg.SVGStringList getSystemLanguage()
    {
        org.w3c.dom.svg.SVGStringList $r1;
        org.apache.batik.dom.svg.SVGGraphicsElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGTestsSupport: org.w3c.dom.svg.SVGStringList getSystemLanguage(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public boolean hasExtension(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGGraphicsElement r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.batik.dom.svg.SVGTestsSupport: boolean hasExtension(org.w3c.dom.Element,java.lang.String)>(r0, r1);

        return $z0;
    }

    public java.awt.geom.AffineTransform getMotionTransform()
    {
        java.awt.geom.AffineTransform $r1;
        org.apache.batik.dom.svg.SVGGraphicsElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        $r1 = r0.<org.apache.batik.dom.svg.SVGGraphicsElement: java.awt.geom.AffineTransform motionTransform>;

        return $r1;
    }

    public void updateOtherValue(java.lang.String, org.apache.batik.anim.values.AnimatableValue)
    {
        org.apache.batik.anim.values.AnimatableMotionPointValue r11;
        java.lang.String r0;
        org.apache.batik.dom.svg.AnimatedAttributeListener $r7;
        boolean $z0;
        double $d0, $d1, $d2;
        org.apache.batik.dom.AbstractDocument $r6;
        java.awt.geom.AffineTransform $r3, $r4, $r5, $r8, $r10;
        org.apache.batik.dom.svg.SVGOMDocument $r9;
        float $f0, $f1, $f2;
        org.apache.batik.dom.svg.SVGGraphicsElement r1;
        org.apache.batik.anim.values.AnimatableValue r2;

        r1 := @this: org.apache.batik.dom.svg.SVGGraphicsElement;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.anim.values.AnimatableValue;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("motion");

        if $z0 == 0 goto label4;

        $r3 = r1.<org.apache.batik.dom.svg.SVGGraphicsElement: java.awt.geom.AffineTransform motionTransform>;

        if $r3 != null goto label1;

        $r10 = new java.awt.geom.AffineTransform;

        specialinvoke $r10.<java.awt.geom.AffineTransform: void <init>()>();

        r1.<org.apache.batik.dom.svg.SVGGraphicsElement: java.awt.geom.AffineTransform motionTransform> = $r10;

     label1:
        if r2 != null goto label2;

        $r8 = r1.<org.apache.batik.dom.svg.SVGGraphicsElement: java.awt.geom.AffineTransform motionTransform>;

        virtualinvoke $r8.<java.awt.geom.AffineTransform: void setToIdentity()>();

        goto label3;

     label2:
        r11 = (org.apache.batik.anim.values.AnimatableMotionPointValue) r2;

        $r4 = r1.<org.apache.batik.dom.svg.SVGGraphicsElement: java.awt.geom.AffineTransform motionTransform>;

        $f0 = virtualinvoke r11.<org.apache.batik.anim.values.AnimatableMotionPointValue: float getX()>();

        $d0 = (double) $f0;

        $f1 = virtualinvoke r11.<org.apache.batik.anim.values.AnimatableMotionPointValue: float getY()>();

        $d1 = (double) $f1;

        virtualinvoke $r4.<java.awt.geom.AffineTransform: void setToTranslation(double,double)>($d0, $d1);

        $r5 = r1.<org.apache.batik.dom.svg.SVGGraphicsElement: java.awt.geom.AffineTransform motionTransform>;

        $f2 = virtualinvoke r11.<org.apache.batik.anim.values.AnimatableMotionPointValue: float getAngle()>();

        $d2 = (double) $f2;

        virtualinvoke $r5.<java.awt.geom.AffineTransform: void rotate(double)>($d2);

     label3:
        $r6 = r1.<org.apache.batik.dom.AbstractNode: org.apache.batik.dom.AbstractDocument ownerDocument>;

        $r9 = (org.apache.batik.dom.svg.SVGOMDocument) $r6;

        $r7 = virtualinvoke $r9.<org.apache.batik.dom.svg.SVGOMDocument: org.apache.batik.dom.svg.AnimatedAttributeListener getAnimatedAttributeListener()>();

        interfaceinvoke $r7.<org.apache.batik.dom.svg.AnimatedAttributeListener: void otherAnimationChanged(org.w3c.dom.Element,java.lang.String)>(r1, r0);

        goto label5;

     label4:
        specialinvoke r1.<org.apache.batik.dom.svg.SVGOMElement: void updateOtherValue(java.lang.String,org.apache.batik.anim.values.AnimatableValue)>(r0, r2);

     label5:
        return;
    }

    static void <clinit>()
    {
        org.apache.batik.util.DoublyIndexedTable $r0, $r1;
        org.apache.batik.dom.svg.TraitInformation $r2, $r3;

        $r0 = new org.apache.batik.util.DoublyIndexedTable;

        $r1 = <org.apache.batik.dom.svg.SVGStylableElement: org.apache.batik.util.DoublyIndexedTable xmlTraitInformation>;

        specialinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: void <init>(org.apache.batik.util.DoublyIndexedTable)>($r1);

        $r2 = new org.apache.batik.dom.svg.TraitInformation;

        specialinvoke $r2.<org.apache.batik.dom.svg.TraitInformation: void <init>(boolean,int)>(1, 9);

        virtualinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(null, "transform", $r2);

        $r3 = new org.apache.batik.dom.svg.TraitInformation;

        specialinvoke $r3.<org.apache.batik.dom.svg.TraitInformation: void <init>(boolean,int)>(1, 49);

        virtualinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(null, "externalResourcesRequired", $r3);

        <org.apache.batik.dom.svg.SVGGraphicsElement: org.apache.batik.util.DoublyIndexedTable xmlTraitInformation> = $r0;

        return;
    }
}
