class org.apache.batik.gvt.CompositeGraphicsNode$ListItr extends org.apache.batik.gvt.CompositeGraphicsNode$Itr implements java.util.ListIterator
{
    private final org.apache.batik.gvt.CompositeGraphicsNode this$0;

    void <init>(org.apache.batik.gvt.CompositeGraphicsNode, int)
    {
        org.apache.batik.gvt.CompositeGraphicsNode$ListItr r0;
        int i0;
        org.apache.batik.gvt.CompositeGraphicsNode r1;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode$ListItr;

        r1 := @parameter0: org.apache.batik.gvt.CompositeGraphicsNode;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: void <init>(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.CompositeGraphicsNode$1)>(r1, null);

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$ListItr: org.apache.batik.gvt.CompositeGraphicsNode this$0> = r1;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor> = i0;

        return;
    }

    public boolean hasPrevious()
    {
        org.apache.batik.gvt.CompositeGraphicsNode$ListItr r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode$ListItr;

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor>;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object previous()
    {
        org.apache.batik.gvt.CompositeGraphicsNode$ListItr r0;
        java.lang.IndexOutOfBoundsException $r3;
        org.apache.batik.gvt.CompositeGraphicsNode $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r4;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode$ListItr;

     label1:
        $r1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$ListItr: org.apache.batik.gvt.CompositeGraphicsNode this$0>;

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor>;

        $i1 = $i0 - 1;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor> = $i1;

        $r2 = virtualinvoke $r1.<org.apache.batik.gvt.CompositeGraphicsNode: java.lang.Object get(int)>($i1);

        virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: void checkForComodification()>();

        $i2 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor>;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int lastRet> = $i2;

        return $r2;

     label2:
        $r3 := @caughtexception;

        virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: void checkForComodification()>();

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label2;
    }

    public int nextIndex()
    {
        org.apache.batik.gvt.CompositeGraphicsNode$ListItr r0;
        int $i0;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode$ListItr;

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor>;

        return $i0;
    }

    public int previousIndex()
    {
        org.apache.batik.gvt.CompositeGraphicsNode$ListItr r0;
        int $i0, $i1;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode$ListItr;

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor>;

        $i1 = $i0 - 1;

        return $i1;
    }

    public void set(java.lang.Object)
    {
        org.apache.batik.gvt.CompositeGraphicsNode$ListItr r0;
        java.lang.IndexOutOfBoundsException $r5;
        java.lang.IllegalStateException $r7;
        org.apache.batik.gvt.CompositeGraphicsNode $r2, $r3;
        int $i0, $i1, $i2, $i4;
        java.lang.Object r1;
        java.util.ConcurrentModificationException $r8;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode$ListItr;

        r1 := @parameter0: java.lang.Object;

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int lastRet>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>()>();

        throw $r7;

     label1:
        virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: void checkForComodification()>();

     label2:
        $r2 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$ListItr: org.apache.batik.gvt.CompositeGraphicsNode this$0>;

        $i1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int lastRet>;

        virtualinvoke $r2.<org.apache.batik.gvt.CompositeGraphicsNode: java.lang.Object set(int,java.lang.Object)>($i1, r1);

        $r3 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$ListItr: org.apache.batik.gvt.CompositeGraphicsNode this$0>;

        $i2 = $r3.<org.apache.batik.gvt.CompositeGraphicsNode: int modCount>;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int expectedModCount> = $i2;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r8 = new java.util.ConcurrentModificationException;

        specialinvoke $r8.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r8;

     label5:
        return;

        catch java.lang.IndexOutOfBoundsException from label2 to label3 with label4;
    }

    public void add(java.lang.Object)
    {
        org.apache.batik.gvt.CompositeGraphicsNode$ListItr r0;
        java.lang.IndexOutOfBoundsException $r4;
        org.apache.batik.gvt.CompositeGraphicsNode $r1, $r3;
        int $i0, $i1, $i2, $i4;
        java.lang.Object r2;
        java.util.ConcurrentModificationException $r6;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode$ListItr;

        r2 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: void checkForComodification()>();

     label1:
        $r1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$ListItr: org.apache.batik.gvt.CompositeGraphicsNode this$0>;

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor>;

        $i1 = $i0 + 1;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int cursor> = $i1;

        virtualinvoke $r1.<org.apache.batik.gvt.CompositeGraphicsNode: void add(int,java.lang.Object)>($i0, r2);

        $i4 = (int) -1;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int lastRet> = $i4;

        $r3 = r0.<org.apache.batik.gvt.CompositeGraphicsNode$ListItr: org.apache.batik.gvt.CompositeGraphicsNode this$0>;

        $i2 = $r3.<org.apache.batik.gvt.CompositeGraphicsNode: int modCount>;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: int expectedModCount> = $i2;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r6 = new java.util.ConcurrentModificationException;

        specialinvoke $r6.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r6;

     label4:
        return;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }
}
