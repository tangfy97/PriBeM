public class org.apache.lucene.queryparser.flexible.standard.builders.PhraseQueryNodeBuilder extends java.lang.Object implements org.apache.lucene.queryparser.flexible.standard.builders.StandardQueryBuilder
{

    public void <init>()
    {
        org.apache.lucene.queryparser.flexible.standard.builders.PhraseQueryNodeBuilder r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.builders.PhraseQueryNodeBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.lucene.search.PhraseQuery build(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.core.nodes.TokenizedPhraseQueryNode r1;
        java.util.Iterator $r4;
        org.apache.lucene.queryparser.flexible.standard.builders.PhraseQueryNodeBuilder r12;
        org.apache.lucene.index.Term $r11;
        org.apache.lucene.search.PhraseQuery $r2;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode r10;
        java.util.List $r3;
        org.apache.lucene.search.TermQuery r9;
        int $i0;
        java.lang.Object $r5, $r8;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r0, r6;
        java.lang.String $r7;
        boolean $z0;

        r12 := @this: org.apache.lucene.queryparser.flexible.standard.builders.PhraseQueryNodeBuilder;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        r1 = (org.apache.lucene.queryparser.flexible.core.nodes.TokenizedPhraseQueryNode) r0;

        $r2 = new org.apache.lucene.search.PhraseQuery;

        specialinvoke $r2.<org.apache.lucene.search.PhraseQuery: void <init>()>();

        $r3 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.TokenizedPhraseQueryNode: java.util.List getChildren()>();

        if $r3 == null goto label2;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) $r5;

        $r7 = <org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: java.lang.String QUERY_TREE_BUILDER_TAGID>;

        $r8 = interfaceinvoke r6.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNode: java.lang.Object getTag(java.lang.String)>($r7);

        r9 = (org.apache.lucene.search.TermQuery) $r8;

        r10 = (org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode) r6;

        $r11 = virtualinvoke r9.<org.apache.lucene.search.TermQuery: org.apache.lucene.index.Term getTerm()>();

        $i0 = virtualinvoke r10.<org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode: int getPositionIncrement()>();

        virtualinvoke $r2.<org.apache.lucene.search.PhraseQuery: void add(org.apache.lucene.index.Term,int)>($r11, $i0);

        goto label1;

     label2:
        return $r2;
    }

    public volatile org.apache.lucene.search.Query build(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.search.PhraseQuery $r2;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r1;
        org.apache.lucene.queryparser.flexible.standard.builders.PhraseQueryNodeBuilder r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.builders.PhraseQueryNodeBuilder;

        r1 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        $r2 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.builders.PhraseQueryNodeBuilder: org.apache.lucene.search.PhraseQuery build(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)>(r1);

        return $r2;
    }

    public volatile java.lang.Object build(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.search.PhraseQuery $r2;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r1;
        org.apache.lucene.queryparser.flexible.standard.builders.PhraseQueryNodeBuilder r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.builders.PhraseQueryNodeBuilder;

        r1 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        $r2 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.builders.PhraseQueryNodeBuilder: org.apache.lucene.search.PhraseQuery build(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)>(r1);

        return $r2;
    }
}
