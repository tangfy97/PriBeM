public abstract class org.codehaus.groovy.tools.shell.ComplexCommandSupport extends org.codehaus.groovy.tools.shell.CommandSupport
{
    protected java.util.List functions;
    protected java.lang.String defaultFunction;
    private java.lang.Object do_all;
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119697080;
    static java.lang.Class class$java$util$List;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$SimpleCompletor;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport;
    static java.lang.Class class$groovy$lang$Closure;

    public void <init>(org.codehaus.groovy.tools.shell.Shell, java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r18;
        org.codehaus.groovy.tools.shell.ComplexCommandSupport$_closure1 $r13;
        int $i0, $i1, $i2;
        java.lang.String r3, r4, $r10, $r12;
        java.lang.IllegalArgumentException $r14;
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r6;
        java.lang.Class $r0, $r1, $r5, $r16, $r17, $r19;
        java.lang.Object $r7, $r9, $r11, $r15;
        org.codehaus.groovy.tools.shell.Shell r2, $r8;

        r6 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        r2 := @parameter0: org.codehaus.groovy.tools.shell.Shell;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ComplexCommandSupport");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0> = $r16;

        goto label02;

     label01:
        $r16 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0>;

     label02:
        $r1 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label03;

        $r17 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r17;

        goto label04;

     label03:
        $r17 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r18 = newarray (java.lang.Object)[3];

        $r18[0] = r2;

        $r18[1] = r3;

        $r18[2] = r4;

        $r5 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport>;

        if $r5 != null goto label05;

        $r19 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport> = $r19;

        goto label06;

     label05:
        $r19 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport>;

     label06:
        $i0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: int selectConstructorAndTransformArguments(java.lang.Object[],int,java.lang.Class)>($r18, 1, $r19);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label07;

        $r15 = $r18[0];

        $r18 = (java.lang.Object[]) $r15;

     label07:
        $i2 = $i0 >> 8;

        lookupswitch($i2)
        {
            case 0: goto label08;
            default: goto label09;
        };

     label08:
        $r7 = $r18[0];

        $r8 = (org.codehaus.groovy.tools.shell.Shell) $r7;

        $r9 = $r18[1];

        $r10 = (java.lang.String) $r9;

        $r11 = $r18[2];

        $r12 = (java.lang.String) $r11;

        specialinvoke r6.<org.codehaus.groovy.tools.shell.CommandSupport: void <init>(org.codehaus.groovy.tools.shell.Shell,java.lang.String,java.lang.String)>($r8, $r10, $r12);

        goto label10;

     label09:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal constructor number");

        throw $r14;

     label10:
        $r13 = new org.codehaus.groovy.tools.shell.ComplexCommandSupport$_closure1;

        specialinvoke $r13.<org.codehaus.groovy.tools.shell.ComplexCommandSupport$_closure1: void <init>(java.lang.Object,java.lang.Object)>(r6, r6);

        r6.<org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Object do_all> = $r13;

        return;
    }

    protected java.util.List createCompletors()
    {
        java.lang.Object[] $r7, $r10;
        org.codehaus.groovy.tools.shell.ComplexCommandSupport$_createCompletors_closure2 $r8;
        java.util.List $r9, $r12, $r15;
        groovy.lang.Reference $r5;
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r6;
        java.lang.Class $r0, r1, $r2, $r3, $r13, $r16, $r17, $r18, $r19;
        java.lang.Object $r4, $r11, $r14;

        r6 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ComplexCommandSupport");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0> = $r16;

        goto label2;

     label1:
        $r16 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r16;

        $r2 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r17 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r17;

        goto label4;

     label3:
        $r17 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$SimpleCompletor>;

        if $r3 != null goto label5;

        $r18 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.SimpleCompletor");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$SimpleCompletor> = $r18;

        goto label6;

     label5:
        $r18 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$SimpleCompletor>;

     label6:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r18);

        $r5 = new groovy.lang.Reference;

        specialinvoke $r5.<groovy.lang.Reference: void <init>(java.lang.Object)>($r4);

        $r9 = r6.<org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.util.List functions>;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = new org.codehaus.groovy.tools.shell.ComplexCommandSupport$_createCompletors_closure2;

        specialinvoke $r8.<org.codehaus.groovy.tools.shell.ComplexCommandSupport$_createCompletors_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>(r6, r6, $r5);

        $r7[0] = $r8;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r9, "each", $r7);

        $r10 = newarray (java.lang.Object)[2];

        $r11 = virtualinvoke $r5.<groovy.lang.Reference: java.lang.Object get()>();

        $r10[0] = $r11;

        $r10[1] = null;

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r10);

        $r13 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$java$util$List>;

        if $r13 != null goto label7;

        $r19 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$java$util$List> = $r19;

        goto label8;

     label7:
        $r19 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$java$util$List>;

     label8:
        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r12, $r19);

        $r15 = (java.util.List) $r14;

        return $r15;
    }

    public java.lang.Object execute(java.util.List)
    {
        java.lang.Object[] $r7, $r13, $r15, $r18;
        java.lang.String[] $r17;
        java.lang.Integer $r5;
        java.lang.StringBuffer $r3;
        java.lang.String $r12, $r19;
        boolean $z0, $z1, $z2;
        org.codehaus.groovy.runtime.GStringImpl $r14;
        java.util.List r20;
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r6;
        java.lang.Class $r0, r1, $r2, $r9, $r21, $r22, $r23;
        java.lang.Object $r4, $r8, $r10, $r11, $r16;

        r6 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        r20 := @parameter0: java.util.List;

        $r0 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r21 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ComplexCommandSupport");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0> = $r21;

        goto label02;

     label01:
        $r21 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0>;

     label02:
        r1 = $r21;

        $r2 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r22 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r22;

        goto label04;

     label03:
        $r22 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r20, null);

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>("(args != null). Values: ");

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("args = ");

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r20);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r3, null);

     label06:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r20, "size");

        $r5 = new java.lang.Integer;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(0);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z1 == 0 goto label09;

        $r12 = r6.<org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.String defaultFunction>;

        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r12);

        if $z2 == 0 goto label07;

        $r18 = newarray (java.lang.Object)[1];

        $r19 = r6.<org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.String defaultFunction>;

        $r18[0] = $r19;

        r20 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r18);

        goto label08;

     label07:
        $r13 = newarray (java.lang.Object)[1];

        $r14 = new org.codehaus.groovy.runtime.GStringImpl;

        $r15 = newarray (java.lang.Object)[1];

        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r6, "name");

        $r15[0] = $r16;

        $r17 = newarray (java.lang.String)[2];

        $r17[0] = "Command \'";

        $r17[1] = "\' requires at least one argument";

        specialinvoke $r14.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r15, $r17);

        $r13[0] = $r14;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r6, "fail", $r13);

     label08:
        goto label09;

     label09:
        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r20;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r6, "executeFunction", $r7);

        $r9 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$java$lang$Object>;

        if $r9 != null goto label10;

        $r23 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$java$lang$Object> = $r23;

        goto label11;

     label10:
        $r23 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$java$lang$Object>;

     label11:
        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r8, $r23);

        $r11 = (java.lang.Object) $r10;

        return $r11;
    }

    protected java.lang.Object executeFunction(java.util.List)
    {
        java.lang.Integer $r42, $r43, $r44, $r45;
        boolean $z0, $z1, $z2, $z3;
        org.codehaus.groovy.runtime.GStringImpl $r46, $r47;
        java.util.List $r5, $r7, $r14, $r31, r35, r39;
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r4;
        java.lang.Object[] $r8, $r13, $r15, $r17, $r19, $r22, $r24, $r26, $r28;
        java.lang.String[] $r18, $r25;
        java.lang.StringBuffer $r40, $r41;
        int $i1;
        java.lang.Class $r0, r1, $r2, $r33, $r36, $r37, $r38;
        java.lang.Object $r10, $r11, $r20, $r21, $r27, $r32, $r34;

        r4 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        r35 := @parameter0: java.util.List;

        $r0 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r36 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ComplexCommandSupport");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0> = $r36;

        goto label02;

     label01:
        $r36 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0>;

     label02:
        r1 = $r36;

        $r2 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r37 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r37;

        goto label04;

     label03:
        $r37 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r35, null);

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>(java.lang.String)>("(args != null). Values: ");

        virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("args = ");

        virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r35);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r40, null);

     label06:
        $r5 = r4.<org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.util.List functions>;

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r5);

        if $z1 == 0 goto label07;

        goto label08;

     label07:
        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>(java.lang.String)>("functions. Values: ");

        virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("functions = ");

        $r7 = r4.<org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.util.List functions>;

        virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r41, null);

     label08:
        $r8 = newarray (java.lang.Object)[1];

        $r42 = new java.lang.Integer;

        specialinvoke $r42.<java.lang.Integer: void <init>(int)>(0);

        $r8[0] = $r42;

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r35, "getAt", $r8);

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r35, "size");

        $r43 = new java.lang.Integer;

        specialinvoke $r43.<java.lang.Integer: void <init>(int)>(1);

        $z2 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareGreaterThan(java.lang.Object,java.lang.Object)>($r11, $r43);

        if $z2 == 0 goto label11;

        $r28 = newarray (java.lang.Object)[1];

        $r44 = new java.lang.Integer;

        specialinvoke $r44.<java.lang.Integer: void <init>(int)>(1);

        $r45 = new java.lang.Integer;

        $i1 = (int) -1;

        specialinvoke $r45.<java.lang.Integer: void <init>(int)>($i1);

        $r31 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createRange(java.lang.Object,java.lang.Object,boolean)>($r44, $r45, 1);

        $r28[0] = $r31;

        $r32 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r35, "getAt", $r28);

        $r33 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$java$util$List>;

        if $r33 != null goto label09;

        $r38 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$java$util$List> = $r38;

        goto label10;

     label09:
        $r38 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$java$util$List>;

     label10:
        $r34 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r32, $r38);

        r39 = (java.util.List) $r34;

        goto label12;

     label11:
        $r13 = newarray (java.lang.Object)[0];

        r39 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r13);

     label12:
        $r14 = r4.<org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.util.List functions>;

        $z3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean isCase(java.lang.Object,java.lang.Object)>($r10, $r14);

        if $z3 == 0 goto label13;

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = $r10;

        $r20 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r4, "loadFunction", $r19);

        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r4, "log");

        $r22 = newarray (java.lang.Object)[1];

        $r46 = new org.codehaus.groovy.runtime.GStringImpl;

        $r24 = newarray (java.lang.Object)[2];

        $r24[0] = $r10;

        $r24[1] = r39;

        $r25 = newarray (java.lang.String)[3];

        $r25[0] = "Invoking function \'";

        $r25[1] = "\' w/args: ";

        $r25[2] = "";

        specialinvoke $r46.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r24, $r25);

        $r22[0] = $r46;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r21, "debug", $r22);

        $r26 = newarray (java.lang.Object)[1];

        $r26[0] = r39;

        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r20, "call", $r26);

        return $r27;

     label13:
        $r15 = newarray (java.lang.Object)[1];

        $r47 = new org.codehaus.groovy.runtime.GStringImpl;

        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = $r10;

        $r18 = newarray (java.lang.String)[2];

        $r18[0] = "Unknown function name: ";

        $r18[1] = "";

        specialinvoke $r47.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r17, $r18);

        $r15[0] = $r47;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r4, "fail", $r15);

        return null;
    }

    protected groovy.lang.Closure loadFunction(java.lang.String)
    {
        java.lang.Throwable $r16;
        java.lang.Object[] $r7, $r18, $r20;
        groovy.lang.Closure $r15, $r24;
        java.lang.String[] $r8, $r21;
        java.lang.StringBuffer $r4;
        java.lang.String r3, $r11;
        groovy.lang.MissingPropertyException $r17;
        boolean $z0;
        org.codehaus.groovy.runtime.GStringImpl $r6, $r19;
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r5;
        java.lang.Class $r0, r1, $r2, $r9, $r13, $r22, $r25, $r26, $r27, $r28, $r29;
        java.lang.Object $r10, $r12, $r14, $r23;

        r5 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        r3 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r25 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ComplexCommandSupport");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0> = $r25;

        goto label02;

     label01:
        $r25 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0>;

     label02:
        r1 = $r25;

        $r2 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r26 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r26;

        goto label04;

     label03:
        $r26 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r3);

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>("name. Values: ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("name = ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r4, null);

     label06:
        $r6 = new org.codehaus.groovy.runtime.GStringImpl;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r3;

        $r8 = newarray (java.lang.String)[2];

        $r8[0] = "do_";

        $r8[1] = "";

        specialinvoke $r6.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r7, $r8);

        $r9 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$java$lang$String>;

        if $r9 != null goto label07;

        $r27 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$java$lang$String> = $r27;

        goto label08;

     label07:
        $r27 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$java$lang$String>;

     label08:
        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r27);

        $r11 = (java.lang.String) $r10;

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, $r11);

        $r13 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$Closure>;

        if $r13 != null goto label09;

        $r28 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$Closure> = $r28;

        goto label10;

     label09:
        $r28 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$Closure>;

     label10:
        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r12, $r28);

        $r15 = (groovy.lang.Closure) $r14;

        return $r15;

     label11:
        $r17 := @caughtexception;

        $r18 = newarray (java.lang.Object)[1];

        $r19 = new org.codehaus.groovy.runtime.GStringImpl;

        $r20 = newarray (java.lang.Object)[1];

        $r20[0] = $r17;

        $r21 = newarray (java.lang.String)[2];

        $r21[0] = "Failed to load delgate function: ";

        $r21[1] = "";

        specialinvoke $r19.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r20, $r21);

        $r18[0] = $r19;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r5, "fail", $r18);

        goto label12;

     label12:
        goto label14;

     label13:
        $r16 := @caughtexception;

        throw $r16;

     label14:
        $r22 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$Closure>;

        if $r22 != null goto label15;

        $r29 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$Closure> = $r29;

        goto label16;

     label15:
        $r29 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$Closure>;

     label16:
        $r23 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r29);

        $r24 = (groovy.lang.Closure) $r23;

        return $r24;

        catch groovy.lang.MissingPropertyException from label06 to label11 with label11;
        catch java.lang.Throwable from label06 to label12 with label13;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5;
        java.lang.Class $r0, $r1, $r6, $r7;

        $r0 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ComplexCommandSupport");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119697080L);

        $r3 = (java.lang.Long) $r2;

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Long __timeStamp__239_neverHappen1239119697080> = $r5;

        return;
    }

    public java.lang.Object getDo_all()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r2;
        java.lang.Class $r0, $r1, $r4, $r5;
        java.lang.Object $r3;

        r2 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r4 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ComplexCommandSupport");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0> = $r4;

        goto label2;

     label1:
        $r4 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r5 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r5;

        goto label4;

     label3:
        $r5 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Object do_all>;

        return $r3;
    }

    public void setDo_all(java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r3;
        java.lang.Class $r0, $r1, $r4, $r5;
        java.lang.Object r2;

        r3 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        r2 := @parameter0: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r4 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ComplexCommandSupport");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0> = $r4;

        goto label2;

     label1:
        $r4 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r5 = staticinvoke <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r5;

        goto label4;

     label3:
        $r5 = <org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r3.<org.codehaus.groovy.tools.shell.ComplexCommandSupport: java.lang.Object do_all> = r2;

        return;
    }

    java.lang.String super$1$toString()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    void super$2$setProperty(java.lang.String, java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    org.codehaus.groovy.tools.shell.BufferManager super$2$getBuffers()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        org.codehaus.groovy.tools.shell.BufferManager $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.BufferManager getBuffers()>();

        return $r1;
    }

    java.lang.String super$2$getHelp()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getHelp()>();

        return $r1;
    }

    jline.History super$2$getHistory()
    {
        jline.History $r1;
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: jline.History getHistory()>();

        return $r1;
    }

    java.util.List super$2$createCompletors()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.util.List $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List createCompletors()>();

        return $r1;
    }

    void super$1$wait()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    groovy.lang.MetaClass super$2$getMetaClass()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        groovy.lang.MetaClass $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.MetaClass getMetaClass()>();

        return $r1;
    }

    void super$2$setMetaClass(groovy.lang.MetaClass)
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        groovy.lang.MetaClass r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        r1 := @parameter0: groovy.lang.MetaClass;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setMetaClass(groovy.lang.MetaClass)>(r1);

        return;
    }

    java.util.Map super$2$getVariables()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.util.Map $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.Map getVariables()>();

        return $r1;
    }

    java.util.List super$2$getBuffer()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.util.List $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getBuffer()>();

        return $r1;
    }

    java.lang.Class super$1$getClass()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.lang.Class $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    java.lang.String super$2$getDescription()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getDescription()>();

        return $r1;
    }

    java.lang.String super$2$getShortcut()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getShortcut()>();

        return $r1;
    }

    java.lang.Object super$2$invokeMethod(java.lang.String, java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.lang.Object r2, $r3;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r1, r2);

        return $r3;
    }

    int super$1$hashCode()
    {
        int $i0;
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    java.lang.Object super$2$getProperty(java.lang.String)
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.lang.Object $r2;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r2;
    }

    java.lang.String super$2$getName()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getName()>();

        return $r1;
    }

    void super$2$fail(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void fail(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    void super$2$fail(java.lang.String)
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void fail(java.lang.String)>(r1);

        return;
    }

    void super$2$assertNoArguments(java.util.List)
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.util.List r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void assertNoArguments(java.util.List)>(r1);

        return;
    }

    void super$1$notify()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$2$alias(java.lang.String, java.lang.String)
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.lang.String r1, r2;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void alias(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    void super$1$notifyAll()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    void super$2$setHidden(boolean)
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setHidden(boolean)>(z0);

        return;
    }

    jline.Completor super$2$getCompletor()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        jline.Completor $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: jline.Completor getCompletor()>();

        return $r1;
    }

    java.lang.Object super$1$clone()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.lang.Object $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    java.lang.String super$2$getUsage()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getUsage()>();

        return $r1;
    }

    groovy.lang.GroovyClassLoader super$2$getClassLoader()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        groovy.lang.GroovyClassLoader $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.GroovyClassLoader getClassLoader()>();

        return $r1;
    }

    boolean super$2$isHidden()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: boolean isHidden()>();

        return $z0;
    }

    void super$1$wait(long, int)
    {
        int i1;
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        long l0;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    boolean super$2$getHidden()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: boolean getHidden()>();

        return $z0;
    }

    groovy.lang.Binding super$2$getBinding()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        groovy.lang.Binding $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.Binding getBinding()>();

        return $r1;
    }

    java.util.List super$2$getImports()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.util.List $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getImports()>();

        return $r1;
    }

    java.util.List super$2$getAliases()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.util.List $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getAliases()>();

        return $r1;
    }

    void super$1$finalize()
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    void super$1$wait(long)
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        long l0;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    boolean super$1$equals(java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.ComplexCommandSupport r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.ComplexCommandSupport;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
