abstract class org.apache.commons.codec.net.RFC1522Codec extends java.lang.Object
{
    protected static final char SEP;
    protected static final java.lang.String POSTFIX;
    protected static final java.lang.String PREFIX;

    void <init>()
    {
        org.apache.commons.codec.net.RFC1522Codec r0;

        r0 := @this: org.apache.commons.codec.net.RFC1522Codec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected java.lang.String encodeText(java.lang.String, java.lang.String) throws org.apache.commons.codec.EncoderException, java.io.UnsupportedEncodingException
    {
        byte[] $r5, $r6;
        java.lang.StringBuffer $r1;
        java.lang.String r0, r2, $r4, $r7, $r8;
        org.apache.commons.codec.net.RFC1522Codec r3;

        r3 := @this: org.apache.commons.codec.net.RFC1522Codec;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=?");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r4 = virtualinvoke r3.<org.apache.commons.codec.net.RFC1522Codec: java.lang.String getEncoding()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r5 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>(r2);

        $r6 = virtualinvoke r3.<org.apache.commons.codec.net.RFC1522Codec: byte[] doEncoding(byte[])>($r5);

        $r7 = staticinvoke <org.apache.commons.codec.binary.StringUtils: java.lang.String newStringUsAscii(byte[])>($r6);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("?=");

        $r8 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    protected java.lang.String decodeText(java.lang.String) throws org.apache.commons.codec.DecoderException, java.io.UnsupportedEncodingException
    {
        byte[] $r7, $r8;
        int $i0, i1, $i2, $i3, $i4, i5, i6;
        java.lang.String r0, $r2, $r3, $r5, $r6, $r9, $r15;
        boolean $z0, $z1, $z2, $z3;
        org.apache.commons.codec.DecoderException $r1, $r10, $r16, $r17, $r18;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;
        org.apache.commons.codec.net.RFC1522Codec r4;

        r4 := @this: org.apache.commons.codec.net.RFC1522Codec;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("=?");

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("?=");

        if $z1 != 0 goto label3;

     label2:
        $r1 = new org.apache.commons.codec.DecoderException;

        specialinvoke $r1.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>("RFC 1522 violation: malformed encoded content");

        throw $r1;

     label3:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i1 = $i0 - 2;

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(63, 2);

        if $i2 != i1 goto label4;

        $r18 = new org.apache.commons.codec.DecoderException;

        specialinvoke $r18.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>("RFC 1522 violation: charset token not found");

        throw $r18;

     label4:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(2, $i2);

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 == 0 goto label5;

        $r17 = new org.apache.commons.codec.DecoderException;

        specialinvoke $r17.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>("RFC 1522 violation: charset not specified");

        throw $r17;

     label5:
        i5 = $i2 + 1;

        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(63, i5);

        if $i3 != i1 goto label6;

        $r16 = new org.apache.commons.codec.DecoderException;

        specialinvoke $r16.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>("RFC 1522 violation: encoding token not found");

        throw $r16;

     label6:
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i5, $i3);

        $r5 = virtualinvoke r4.<org.apache.commons.codec.net.RFC1522Codec: java.lang.String getEncoding()>();

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z3 != 0 goto label7;

        $r10 = new org.apache.commons.codec.DecoderException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This codec cannot decode ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" encoded content");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label7:
        i6 = $i3 + 1;

        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(63, i6);

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i6, $i4);

        $r7 = staticinvoke <org.apache.commons.codec.binary.StringUtils: byte[] getBytesUsAscii(java.lang.String)>($r6);

        $r8 = virtualinvoke r4.<org.apache.commons.codec.net.RFC1522Codec: byte[] doDecoding(byte[])>($r7);

        $r9 = new java.lang.String;

        specialinvoke $r9.<java.lang.String: void <init>(byte[],java.lang.String)>($r8, $r2);

        return $r9;
    }

    protected abstract java.lang.String getEncoding();

    protected abstract byte[] doEncoding(byte[]) throws org.apache.commons.codec.EncoderException;

    protected abstract byte[] doDecoding(byte[]) throws org.apache.commons.codec.DecoderException;

    public static void <clinit>()
    {
        <org.apache.commons.codec.net.RFC1522Codec: java.lang.String PREFIX> = "=?";

        <org.apache.commons.codec.net.RFC1522Codec: java.lang.String POSTFIX> = "?=";

        <org.apache.commons.codec.net.RFC1522Codec: char SEP> = 63;

        return;
    }
}
