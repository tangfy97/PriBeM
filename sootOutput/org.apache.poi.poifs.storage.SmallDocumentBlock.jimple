public final class org.apache.poi.poifs.storage.SmallDocumentBlock extends java.lang.Object implements org.apache.poi.poifs.storage.BlockWritable, org.apache.poi.poifs.storage.ListManagedBlock
{
    private static final int BLOCK_SHIFT;
    private byte[] _data;
    private static final byte _default_fill;
    private static final int _block_size;
    private static final int BLOCK_MASK;
    private final int _blocks_per_big_block;
    private final org.apache.poi.poifs.common.POIFSBigBlockSize _bigBlockSize;

    private void <init>(org.apache.poi.poifs.common.POIFSBigBlockSize, byte[], int)
    {
        org.apache.poi.poifs.storage.SmallDocumentBlock r0;
        byte[] r2, $r3;
        org.apache.poi.poifs.common.POIFSBigBlockSize r1;
        int i0, $i1;

        r0 := @this: org.apache.poi.poifs.storage.SmallDocumentBlock;

        r1 := @parameter0: org.apache.poi.poifs.common.POIFSBigBlockSize;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.poifs.storage.SmallDocumentBlock: void <init>(org.apache.poi.poifs.common.POIFSBigBlockSize)>(r1);

        $i1 = i0 * 64;

        $r3 = r0.<org.apache.poi.poifs.storage.SmallDocumentBlock: byte[] _data>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i1, $r3, 0, 64);

        return;
    }

    private void <init>(org.apache.poi.poifs.common.POIFSBigBlockSize)
    {
        org.apache.poi.poifs.storage.SmallDocumentBlock r0;
        byte[] $r2;
        org.apache.poi.poifs.common.POIFSBigBlockSize r1;
        int $i0;

        r0 := @this: org.apache.poi.poifs.storage.SmallDocumentBlock;

        r1 := @parameter0: org.apache.poi.poifs.common.POIFSBigBlockSize;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.poifs.storage.SmallDocumentBlock: org.apache.poi.poifs.common.POIFSBigBlockSize _bigBlockSize> = r1;

        $i0 = staticinvoke <org.apache.poi.poifs.storage.SmallDocumentBlock: int getBlocksPerBigBlock(org.apache.poi.poifs.common.POIFSBigBlockSize)>(r1);

        r0.<org.apache.poi.poifs.storage.SmallDocumentBlock: int _blocks_per_big_block> = $i0;

        $r2 = newarray (byte)[64];

        r0.<org.apache.poi.poifs.storage.SmallDocumentBlock: byte[] _data> = $r2;

        return;
    }

    private static int getBlocksPerBigBlock(org.apache.poi.poifs.common.POIFSBigBlockSize)
    {
        int $i0, $i1;
        org.apache.poi.poifs.common.POIFSBigBlockSize r0;

        r0 := @parameter0: org.apache.poi.poifs.common.POIFSBigBlockSize;

        $i0 = virtualinvoke r0.<org.apache.poi.poifs.common.POIFSBigBlockSize: int getBigBlockSize()>();

        $i1 = $i0 / 64;

        return $i1;
    }

    public static org.apache.poi.poifs.storage.SmallDocumentBlock[] convert(org.apache.poi.poifs.common.POIFSBigBlockSize, byte[], int)
    {
        byte[] r3, $r5, $r7, $r9;
        org.apache.poi.poifs.storage.SmallDocumentBlock[] r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        org.apache.poi.poifs.storage.SmallDocumentBlock $r1, $r4, $r6, $r8;
        org.apache.poi.poifs.common.POIFSBigBlockSize r2;

        r2 := @parameter0: org.apache.poi.poifs.common.POIFSBigBlockSize;

        r3 := @parameter1: byte[];

        i0 := @parameter2: int;

        $i1 = i0 + 64;

        $i2 = $i1 - 1;

        $i3 = $i2 / 64;

        r0 = newarray (org.apache.poi.poifs.storage.SmallDocumentBlock)[$i3];

        i9 = 0;

        i10 = 0;

     label1:
        $i4 = lengthof r0;

        if i10 >= $i4 goto label5;

        $r1 = new org.apache.poi.poifs.storage.SmallDocumentBlock;

        specialinvoke $r1.<org.apache.poi.poifs.storage.SmallDocumentBlock: void <init>(org.apache.poi.poifs.common.POIFSBigBlockSize)>(r2);

        r0[i10] = $r1;

        $i5 = lengthof r3;

        if i9 >= $i5 goto label3;

        $i6 = lengthof r3;

        $i7 = $i6 - i9;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>(64, $i7);

        $r6 = r0[i10];

        $r7 = $r6.<org.apache.poi.poifs.storage.SmallDocumentBlock: byte[] _data>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i9, $r7, 0, $i8);

        if $i8 == 64 goto label2;

        $r8 = r0[i10];

        $r9 = $r8.<org.apache.poi.poifs.storage.SmallDocumentBlock: byte[] _data>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r9, $i8, 64, -1);

     label2:
        goto label4;

     label3:
        $r4 = r0[i10];

        $r5 = $r4.<org.apache.poi.poifs.storage.SmallDocumentBlock: byte[] _data>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r5, -1);

     label4:
        i9 = i9 + 64;

        i10 = i10 + 1;

        goto label1;

     label5:
        return r0;
    }

    public static int fill(org.apache.poi.poifs.common.POIFSBigBlockSize, java.util.List)
    {
        org.apache.poi.poifs.storage.SmallDocumentBlock $r2;
        java.util.List r1;
        org.apache.poi.poifs.common.POIFSBigBlockSize r0;
        int $i0, $i1, $i2, $i3, i4, i5, i6;

        r0 := @parameter0: org.apache.poi.poifs.common.POIFSBigBlockSize;

        r1 := @parameter1: java.util.List;

        $i0 = staticinvoke <org.apache.poi.poifs.storage.SmallDocumentBlock: int getBlocksPerBigBlock(org.apache.poi.poifs.common.POIFSBigBlockSize)>(r0);

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i6 = $i1;

        $i2 = $i1 + $i0;

        $i3 = $i2 - 1;

        i4 = $i3 / $i0;

        i5 = i4 * $i0;

     label1:
        if i6 >= i5 goto label2;

        $r2 = staticinvoke <org.apache.poi.poifs.storage.SmallDocumentBlock: org.apache.poi.poifs.storage.SmallDocumentBlock makeEmptySmallDocumentBlock(org.apache.poi.poifs.common.POIFSBigBlockSize)>(r0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        i6 = i6 + 1;

        goto label1;

     label2:
        return i4;
    }

    public static org.apache.poi.poifs.storage.SmallDocumentBlock[] convert(org.apache.poi.poifs.common.POIFSBigBlockSize, org.apache.poi.poifs.storage.BlockWritable[], int) throws java.io.IOException, java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.poi.poifs.storage.SmallDocumentBlock $r4;
        byte[] $r2;
        java.io.ByteArrayOutputStream $r0;
        org.apache.poi.poifs.storage.BlockWritable[] r1;
        org.apache.poi.poifs.storage.BlockWritable $r6;
        org.apache.poi.poifs.storage.SmallDocumentBlock[] r3;
        org.apache.poi.poifs.common.POIFSBigBlockSize r5;
        int $i0, i1, $i2, $i3, i4, i5;

        r5 := @parameter0: org.apache.poi.poifs.common.POIFSBigBlockSize;

        r1 := @parameter1: org.apache.poi.poifs.storage.BlockWritable[];

        i1 := @parameter2: int;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        i4 = 0;

     label1:
        $i0 = lengthof r1;

        if i4 >= $i0 goto label2;

        $r6 = r1[i4];

        interfaceinvoke $r6.<org.apache.poi.poifs.storage.BlockWritable: void writeBlocks(java.io.OutputStream)>($r0);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i2 = staticinvoke <org.apache.poi.poifs.storage.SmallDocumentBlock: int convertToBlockCount(int)>(i1);

        r3 = newarray (org.apache.poi.poifs.storage.SmallDocumentBlock)[$i2];

        i5 = 0;

     label3:
        $i3 = lengthof r3;

        if i5 >= $i3 goto label4;

        $r4 = new org.apache.poi.poifs.storage.SmallDocumentBlock;

        specialinvoke $r4.<org.apache.poi.poifs.storage.SmallDocumentBlock: void <init>(org.apache.poi.poifs.common.POIFSBigBlockSize,byte[],int)>(r5, $r2, i5);

        r3[i5] = $r4;

        i5 = i5 + 1;

        goto label3;

     label4:
        return r3;
    }

    public static java.util.List extract(org.apache.poi.poifs.common.POIFSBigBlockSize, org.apache.poi.poifs.storage.ListManagedBlock[]) throws java.io.IOException
    {
        org.apache.poi.poifs.storage.SmallDocumentBlock $r5;
        byte[] $r4;
        java.util.ArrayList $r1;
        org.apache.poi.poifs.storage.ListManagedBlock $r3;
        org.apache.poi.poifs.common.POIFSBigBlockSize r0;
        int $i0, $i1, i2, i3;
        org.apache.poi.poifs.storage.ListManagedBlock[] r2;

        r0 := @parameter0: org.apache.poi.poifs.common.POIFSBigBlockSize;

        r2 := @parameter1: org.apache.poi.poifs.storage.ListManagedBlock[];

        $i0 = staticinvoke <org.apache.poi.poifs.storage.SmallDocumentBlock: int getBlocksPerBigBlock(org.apache.poi.poifs.common.POIFSBigBlockSize)>(r0);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label1:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label4;

        $r3 = r2[i2];

        $r4 = interfaceinvoke $r3.<org.apache.poi.poifs.storage.ListManagedBlock: byte[] getData()>();

        i3 = 0;

     label2:
        if i3 >= $i0 goto label3;

        $r5 = new org.apache.poi.poifs.storage.SmallDocumentBlock;

        specialinvoke $r5.<org.apache.poi.poifs.storage.SmallDocumentBlock: void <init>(org.apache.poi.poifs.common.POIFSBigBlockSize,byte[],int)>(r0, $r4, i3);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r5);

        i3 = i3 + 1;

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return $r1;
    }

    public static org.apache.poi.poifs.storage.DataInputBlock getDataInputBlock(org.apache.poi.poifs.storage.SmallDocumentBlock[], int)
    {
        org.apache.poi.poifs.storage.SmallDocumentBlock $r2;
        byte[] $r3;
        org.apache.poi.poifs.storage.DataInputBlock $r0;
        int i0, i1, i2;
        org.apache.poi.poifs.storage.SmallDocumentBlock[] r1;

        r1 := @parameter0: org.apache.poi.poifs.storage.SmallDocumentBlock[];

        i0 := @parameter1: int;

        i1 = i0 >> 6;

        i2 = i0 & 63;

        $r0 = new org.apache.poi.poifs.storage.DataInputBlock;

        $r2 = r1[i1];

        $r3 = $r2.<org.apache.poi.poifs.storage.SmallDocumentBlock: byte[] _data>;

        specialinvoke $r0.<org.apache.poi.poifs.storage.DataInputBlock: void <init>(byte[],int)>($r3, i2);

        return $r0;
    }

    public static int calcSize(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 * 64;

        return $i1;
    }

    private static org.apache.poi.poifs.storage.SmallDocumentBlock makeEmptySmallDocumentBlock(org.apache.poi.poifs.common.POIFSBigBlockSize)
    {
        org.apache.poi.poifs.storage.SmallDocumentBlock $r0;
        byte[] $r2;
        org.apache.poi.poifs.common.POIFSBigBlockSize r1;

        r1 := @parameter0: org.apache.poi.poifs.common.POIFSBigBlockSize;

        $r0 = new org.apache.poi.poifs.storage.SmallDocumentBlock;

        specialinvoke $r0.<org.apache.poi.poifs.storage.SmallDocumentBlock: void <init>(org.apache.poi.poifs.common.POIFSBigBlockSize)>(r1);

        $r2 = $r0.<org.apache.poi.poifs.storage.SmallDocumentBlock: byte[] _data>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r2, -1);

        return $r0;
    }

    private static int convertToBlockCount(int)
    {
        int i0, $i1, $i2, $i3;

        i0 := @parameter0: int;

        $i1 = i0 + 64;

        $i2 = $i1 - 1;

        $i3 = $i2 / 64;

        return $i3;
    }

    public void writeBlocks(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        org.apache.poi.poifs.storage.SmallDocumentBlock r1;
        byte[] $r2;

        r1 := @this: org.apache.poi.poifs.storage.SmallDocumentBlock;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.apache.poi.poifs.storage.SmallDocumentBlock: byte[] _data>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        return;
    }

    public byte[] getData()
    {
        org.apache.poi.poifs.storage.SmallDocumentBlock r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.poifs.storage.SmallDocumentBlock;

        $r1 = r0.<org.apache.poi.poifs.storage.SmallDocumentBlock: byte[] _data>;

        return $r1;
    }

    public org.apache.poi.poifs.common.POIFSBigBlockSize getBigBlockSize()
    {
        org.apache.poi.poifs.storage.SmallDocumentBlock r0;
        org.apache.poi.poifs.common.POIFSBigBlockSize $r1;

        r0 := @this: org.apache.poi.poifs.storage.SmallDocumentBlock;

        $r1 = r0.<org.apache.poi.poifs.storage.SmallDocumentBlock: org.apache.poi.poifs.common.POIFSBigBlockSize _bigBlockSize>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.poi.poifs.storage.SmallDocumentBlock: int BLOCK_MASK> = 63;

        <org.apache.poi.poifs.storage.SmallDocumentBlock: int _block_size> = 64;

        <org.apache.poi.poifs.storage.SmallDocumentBlock: byte _default_fill> = -1;

        <org.apache.poi.poifs.storage.SmallDocumentBlock: int BLOCK_SHIFT> = 6;

        return;
    }
}
