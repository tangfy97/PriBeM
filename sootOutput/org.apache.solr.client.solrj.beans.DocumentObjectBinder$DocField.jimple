class org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField extends java.lang.Object
{
    private java.lang.String name;
    private java.lang.reflect.Field field;
    private java.lang.reflect.Method setter;
    private java.lang.reflect.Method getter;
    private java.lang.Class type;
    private boolean isArray;
    private boolean isList;
    private boolean isContainedInMap;
    private java.util.regex.Pattern dynamicFieldNamePatternMatcher;

    public void <init>(java.lang.reflect.AccessibleObject)
    {
        org.apache.solr.client.solrj.beans.Field $r17;
        java.lang.reflect.Method $r2, $r4, $r5, $r12, $r15, $r23, $r28, $r31;
        boolean $z0, $z1;
        java.lang.Exception $r18, $r19;
        org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField r0;
        java.lang.'annotation'.Annotation $r3;
        java.lang.StringBuilder $r7, $r8, $r10, $r21, $r22, $r26;
        java.lang.String $r6, $r9, $r11, $r24, $r25, $r27;
        java.lang.reflect.AccessibleObject r1;
        java.lang.Class[] $r14, $r30;
        java.lang.reflect.Field $r16;
        java.lang.Class $r13, $r20, $r29;

        r0 := @this: org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField;

        r1 := @parameter0: java.lang.reflect.AccessibleObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = r1 instanceof java.lang.reflect.Field;

        if $z0 == 0 goto label1;

        $r16 = (java.lang.reflect.Field) r1;

        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Field field> = $r16;

        goto label2;

     label1:
        $r2 = (java.lang.reflect.Method) r1;

        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method setter> = $r2;

     label2:
        $r3 = virtualinvoke r1.<java.lang.reflect.AccessibleObject: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/apache/solr/client/solrj/beans/Field;");

        $r17 = (org.apache.solr.client.solrj.beans.Field) $r3;

        specialinvoke r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: void storeName(org.apache.solr.client.solrj.beans.Field)>($r17);

        specialinvoke r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: void storeType()>();

        $r4 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method setter>;

        if $r4 == null goto label9;

        $r5 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method setter>;

        $r6 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.String getName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("set");

        if $z1 == 0 goto label9;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("get");

        $r9 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>(3);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r12 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method setter>;

        $r13 = virtualinvoke $r12.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r14 = (java.lang.Class[]) null;

        $r15 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r11, $r14);

        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method getter> = $r15;

     label4:
        goto label9;

     label5:
        $r19 := @caughtexception;

        $r20 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type>;

        if $r20 != class "Ljava/lang/Boolean;" goto label9;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("is");

        $r23 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method setter>;

        $r24 = virtualinvoke $r23.<java.lang.reflect.Method: java.lang.String getName()>();

        $r25 = virtualinvoke $r24.<java.lang.String: java.lang.String substring(int)>(3);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $r28 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method setter>;

        $r29 = virtualinvoke $r28.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r30 = (java.lang.Class[]) null;

        $r31 = virtualinvoke $r29.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r27, $r30);

        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method getter> = $r31;

     label7:
        goto label9;

     label8:
        $r18 := @caughtexception;

     label9:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    private void storeName(org.apache.solr.client.solrj.beans.Field)
    {
        org.apache.solr.client.solrj.beans.Field r0;
        java.util.Locale $r21;
        java.lang.reflect.Method $r15, $r17;
        boolean $z0, $z1;
        org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField r3;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r19, $r23, $r25;
        java.util.regex.Pattern $r13;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r4, $r5, $r6, $r9, $r12, $r16, $r18, $r20, $r22, $r24, $r26, $r28;
        java.lang.reflect.Field $r14, $r27;

        r3 := @this: org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField;

        r0 := @parameter0: org.apache.solr.client.solrj.beans.Field;

        $r1 = interfaceinvoke r0.<org.apache.solr.client.solrj.beans.Field: java.lang.String value()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("#default");

        if $z0 == 0 goto label4;

        $r14 = r3.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Field field>;

        if $r14 == null goto label1;

        $r27 = r3.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Field field>;

        $r28 = virtualinvoke $r27.<java.lang.reflect.Field: java.lang.String getName()>();

        r3.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.String name> = $r28;

        goto label6;

     label1:
        $r15 = r3.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method setter>;

        $r16 = virtualinvoke $r15.<java.lang.reflect.Method: java.lang.String getName()>();

        $z1 = virtualinvoke $r16.<java.lang.String: boolean startsWith(java.lang.String)>("set");

        if $z1 == 0 goto label2;

        $i1 = virtualinvoke $r16.<java.lang.String: int length()>();

        if $i1 <= 3 goto label2;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r16.<java.lang.String: java.lang.String substring(int,int)>(3, 4);

        $r21 = <java.util.Locale: java.util.Locale ROOT>;

        $r22 = virtualinvoke $r20.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r21);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r16.<java.lang.String: java.lang.String substring(int)>(4);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        r3.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.String name> = $r26;

        goto label3;

     label2:
        $r17 = r3.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method setter>;

        $r18 = virtualinvoke $r17.<java.lang.reflect.Method: java.lang.String getName()>();

        r3.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.String name> = $r18;

     label3:
        goto label6;

     label4:
        $r2 = interfaceinvoke r0.<org.apache.solr.client.solrj.beans.Field: java.lang.String value()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(42);

        if $i0 < 0 goto label5;

        $r5 = interfaceinvoke r0.<org.apache.solr.client.solrj.beans.Field: java.lang.String value()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("\\*", "\\.*");

        r3.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.String name> = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^");

        $r9 = r3.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.String name>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r12);

        r3.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.util.regex.Pattern dynamicFieldNamePatternMatcher> = $r13;

        goto label6;

     label5:
        $r4 = interfaceinvoke r0.<org.apache.solr.client.solrj.beans.Field: java.lang.String value()>();

        r3.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.String name> = $r4;

     label6:
        return;
    }

    private void storeType()
    {
        java.lang.reflect.GenericArrayType $r23;
        org.apache.solr.client.solrj.beans.BindingException $r21, $r37;
        java.lang.reflect.Method $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField r0;
        java.lang.reflect.Type $r13, $r15, $r17, $r18, $r19, $r20, $r22, $r24, $r26, $r28, $r29, $r30, $r31, $r32;
        java.lang.reflect.Type[] $r16;
        int $i0, $i1;
        java.lang.Class[] $r3;
        java.lang.reflect.Field $r1, $r11, $r12, $r14, $r38;
        java.lang.reflect.ParameterizedType $r27, r40;
        java.lang.Class $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r25, $r33, $r34, $r35, $r36, $r39;

        r0 := @this: org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField;

        $r1 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Field field>;

        if $r1 == null goto label01;

        $r38 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Field field>;

        $r39 = virtualinvoke $r38.<java.lang.reflect.Field: java.lang.Class getType()>();

        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type> = $r39;

        goto label03;

     label01:
        $r2 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method setter>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r3;

        if $i0 == 1 goto label02;

        $r37 = new org.apache.solr.client.solrj.beans.BindingException;

        specialinvoke $r37.<org.apache.solr.client.solrj.beans.BindingException: void <init>(java.lang.String)>("Invalid setter method. Must have one and only one parameter");

        throw $r37;

     label02:
        $r4 = $r3[0];

        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type> = $r4;

     label03:
        $r5 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type>;

        if $r5 == class "Ljava/util/Collection;" goto label04;

        $r6 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type>;

        if $r6 == class "Ljava/util/List;" goto label04;

        $r7 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type>;

        if $r7 != class "Ljava/util/ArrayList;" goto label05;

     label04:
        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type> = class "Ljava/lang/Object;";

        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isList> = 1;

        goto label16;

     label05:
        $r8 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type>;

        if $r8 != class "[B" goto label06;

        goto label16;

     label06:
        $r9 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type>;

        $z0 = virtualinvoke $r9.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label07;

        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isArray> = 1;

        $r35 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type>;

        $r36 = virtualinvoke $r35.<java.lang.Class: java.lang.Class getComponentType()>();

        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type> = $r36;

        goto label16;

     label07:
        $r10 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type>;

        if $r10 == class "Ljava/util/Map;" goto label08;

        $r34 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type>;

        if $r34 != class "Ljava/util/HashMap;" goto label16;

     label08:
        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isContainedInMap> = 1;

        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type> = class "Ljava/lang/Object;";

        $r11 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Field field>;

        if $r11 == null goto label16;

        $r12 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Field field>;

        $r13 = virtualinvoke $r12.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();

        $z1 = $r13 instanceof java.lang.reflect.ParameterizedType;

        if $z1 == 0 goto label16;

        $r14 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Field field>;

        $r15 = virtualinvoke $r14.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();

        r40 = (java.lang.reflect.ParameterizedType) $r15;

        $r16 = interfaceinvoke r40.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        if $r16 == null goto label16;

        $i1 = lengthof $r16;

        if $i1 != 2 goto label16;

        $r17 = $r16[0];

        if $r17 != class "Ljava/lang/String;" goto label16;

        $r18 = $r16[1];

        $z2 = $r18 instanceof java.lang.Class;

        if $z2 == 0 goto label11;

        $r29 = $r16[1];

        if $r29 == class "Ljava/util/Collection;" goto label09;

        $r30 = $r16[1];

        if $r30 == class "Ljava/util/List;" goto label09;

        $r31 = $r16[1];

        if $r31 != class "Ljava/util/ArrayList;" goto label10;

     label09:
        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type> = class "Ljava/lang/Object;";

        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isList> = 1;

        goto label16;

     label10:
        $r32 = $r16[1];

        $r33 = (java.lang.Class) $r32;

        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type> = $r33;

        goto label16;

     label11:
        $r19 = $r16[1];

        $z3 = $r19 instanceof java.lang.reflect.ParameterizedType;

        if $z3 == 0 goto label14;

        $r26 = $r16[1];

        $r27 = (java.lang.reflect.ParameterizedType) $r26;

        $r28 = interfaceinvoke $r27.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        if $r28 == class "Ljava/util/Collection;" goto label12;

        if $r28 == class "Ljava/util/List;" goto label12;

        if $r28 != class "Ljava/util/ArrayList;" goto label13;

     label12:
        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type> = class "Ljava/lang/Object;";

        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isList> = 1;

     label13:
        goto label16;

     label14:
        $r20 = $r16[1];

        $z4 = $r20 instanceof java.lang.reflect.GenericArrayType;

        if $z4 == 0 goto label15;

        $r22 = $r16[1];

        $r23 = (java.lang.reflect.GenericArrayType) $r22;

        $r24 = interfaceinvoke $r23.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $r25 = (java.lang.Class) $r24;

        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type> = $r25;

        r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isArray> = 1;

        goto label16;

     label15:
        $r21 = new org.apache.solr.client.solrj.beans.BindingException;

        specialinvoke $r21.<org.apache.solr.client.solrj.beans.BindingException: void <init>(java.lang.String)>("Allowed type for values of mapping a dynamicField are : Object, Object[] and List");

        throw $r21;

     label16:
        return;
    }

    private java.lang.Object getFieldValue(org.apache.solr.common.SolrDocument)
    {
        java.util.regex.Matcher $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.util.Collection $r6, $r13;
        java.util.List $r14;
        org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField r1;
        java.util.regex.Pattern $r4, $r10;
        java.lang.Object[] $r18, r24;
        java.util.HashMap $r20, r21, $r25;
        java.util.ArrayList $r5, $r19, r22, $r26;
        int $i0;
        java.lang.String $r2, r9;
        java.util.Iterator $r7;
        org.apache.solr.common.SolrDocument r0;
        java.lang.Object $r3, $r8, $r12, $r17, r23;
        java.lang.Class $r15, $r16;

        r1 := @this: org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField;

        r0 := @parameter0: org.apache.solr.common.SolrDocument;

        $r2 = r1.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.String name>;

        $r3 = virtualinvoke r0.<org.apache.solr.common.SolrDocument: java.lang.Object getFieldValue(java.lang.String)>($r2);

        if $r3 == null goto label01;

        return $r3;

     label01:
        $r4 = r1.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.util.regex.Pattern dynamicFieldNamePatternMatcher>;

        if $r4 != null goto label02;

        return null;

     label02:
        r21 = null;

        r22 = null;

        $z0 = r1.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isContainedInMap>;

        if $z0 == 0 goto label03;

        $r20 = new java.util.HashMap;

        specialinvoke $r20.<java.util.HashMap: void <init>()>();

        r21 = $r20;

        goto label04;

     label03:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r22 = $r5;

     label04:
        $r6 = virtualinvoke r0.<org.apache.solr.common.SolrDocument: java.util.Collection getFieldNames()>();

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z11 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label13;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        $r10 = r1.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.util.regex.Pattern dynamicFieldNamePatternMatcher>;

        $r11 = virtualinvoke $r10.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r9);

        $z4 = virtualinvoke $r11.<java.util.regex.Matcher: boolean find()>();

        if $z4 == 0 goto label12;

        $r12 = virtualinvoke r0.<org.apache.solr.common.SolrDocument: java.lang.Object getFieldValue(java.lang.String)>(r9);

        r23 = $r12;

        if $r12 != null goto label06;

        goto label05;

     label06:
        $z5 = r1.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isContainedInMap>;

        if $z5 == 0 goto label10;

        $z7 = r1.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isList>;

        if $z7 == 0 goto label07;

        $z10 = $r12 instanceof java.util.List;

        if $z10 != 0 goto label09;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r12);

        r23 = $r19;

        goto label09;

     label07:
        $z8 = r1.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isArray>;

        if $z8 == 0 goto label09;

        $z9 = $r12 instanceof java.util.List;

        if $z9 != 0 goto label08;

        $r16 = r1.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type>;

        $r17 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r16, 1);

        $r18 = (java.lang.Object[]) $r17;

        r24 = (java.lang.Object[]) $r18;

        r24[0] = $r12;

        r23 = r24;

        goto label09;

     label08:
        $r15 = r1.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type>;

        $r14 = (java.util.List) $r12;

        $i0 = interfaceinvoke $r14.<java.util.List: int size()>();

        r23 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r15, $i0);

     label09:
        interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r23);

        goto label12;

     label10:
        $z6 = $r12 instanceof java.util.Collection;

        if $z6 == 0 goto label11;

        $r13 = (java.util.Collection) $r12;

        interfaceinvoke r22.<java.util.List: boolean addAll(java.util.Collection)>($r13);

        goto label12;

     label11:
        interfaceinvoke r22.<java.util.List: boolean add(java.lang.Object)>($r12);

     label12:
        goto label05;

     label13:
        $z1 = r1.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isContainedInMap>;

        if $z1 == 0 goto label16;

        $z3 = interfaceinvoke r21.<java.util.Map: boolean isEmpty()>();

        if $z3 == 0 goto label14;

        $r25 = null;

        goto label15;

     label14:
        $r25 = r21;

     label15:
        return $r25;

     label16:
        $z2 = interfaceinvoke r22.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label17;

        $r26 = null;

        goto label18;

     label17:
        $r26 = r22;

     label18:
        return $r26;
    }

    void inject(java.lang.Object, org.apache.solr.common.SolrDocument)
    {
        java.lang.Object[] $r9, $r10, $r11;
        java.util.ArrayList $r4, $r6;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.solr.common.SolrDocument r1;
        java.util.List r13;
        org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField r0;
        java.lang.Object $r2, r3, $r8, r12;
        java.lang.Class $r5, $r7;

        r0 := @this: org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField;

        r3 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.apache.solr.common.SolrDocument;

        $r2 = specialinvoke r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Object getFieldValue(org.apache.solr.common.SolrDocument)>(r1);

        r12 = $r2;

        if $r2 != null goto label1;

        return;

     label1:
        $z0 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isArray>;

        if $z0 == 0 goto label5;

        $z6 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isContainedInMap>;

        if $z6 != 0 goto label5;

        $r5 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $z7 = virtualinvoke $r5.<java.lang.Class: boolean isArray()>();

        if $z7 == 0 goto label2;

        specialinvoke r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: void set(java.lang.Object,java.lang.Object)>(r3, $r2);

        return;

     label2:
        $z8 = $r2 instanceof java.util.List;

        if $z8 == 0 goto label3;

        r13 = (java.util.List) $r2;

        goto label4;

     label3:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r13 = $r6;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r2);

     label4:
        $r7 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type>;

        $i0 = interfaceinvoke r13.<java.util.List: int size()>();

        $r8 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r7, $i0);

        $r9 = (java.lang.Object[]) $r8;

        $r10 = (java.lang.Object[]) $r9;

        $r11 = interfaceinvoke r13.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        specialinvoke r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: void set(java.lang.Object,java.lang.Object)>(r3, $r11);

        goto label9;

     label5:
        $z1 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isList>;

        if $z1 == 0 goto label7;

        $z4 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isContainedInMap>;

        if $z4 != 0 goto label7;

        $z5 = $r2 instanceof java.util.List;

        if $z5 != 0 goto label6;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2);

        r12 = $r4;

     label6:
        specialinvoke r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: void set(java.lang.Object,java.lang.Object)>(r3, r12);

        goto label9;

     label7:
        $z2 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isContainedInMap>;

        if $z2 == 0 goto label8;

        $z3 = $r2 instanceof java.util.Map;

        if $z3 == 0 goto label9;

        specialinvoke r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: void set(java.lang.Object,java.lang.Object)>(r3, $r2);

        goto label9;

     label8:
        specialinvoke r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: void set(java.lang.Object,java.lang.Object)>(r3, $r2);

     label9:
        return;
    }

    private void set(java.lang.Object, java.lang.Object)
    {
        byte[] $r8, $r9;
        java.lang.Object[] $r3;
        org.apache.solr.client.solrj.beans.BindingException $r11;
        java.lang.String $r18;
        java.lang.reflect.Method $r1, $r4;
        java.lang.reflect.Member $r21;
        java.lang.reflect.Field $r5, $r16, $r20;
        java.lang.Exception $r10;
        org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField r0;
        java.lang.Object r2, r19;
        java.lang.Class $r6, $r7;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r17;

        r0 := @this: org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField;

        r2 := @parameter0: java.lang.Object;

        r19 := @parameter1: java.lang.Object;

        if r19 == null goto label1;

        $r6 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.Class type>;

        if $r6 != class "Ljava/nio/ByteBuffer;" goto label1;

        $r7 = virtualinvoke r19.<java.lang.Object: java.lang.Class getClass()>();

        if $r7 != class "[B" goto label1;

        $r8 = (byte[]) r19;

        $r9 = (byte[]) $r8;

        r19 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r9);

     label1:
        $r20 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Field field>;

        if $r20 == null goto label2;

        $r5 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Field field>;

        virtualinvoke $r5.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r2, r19);

        goto label3;

     label2:
        $r1 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method setter>;

        if $r1 == null goto label3;

        $r4 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method setter>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r19;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r3);

     label3:
        goto label7;

     label4:
        $r10 := @caughtexception;

        $r11 = new org.apache.solr.client.solrj.beans.BindingException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while setting value : ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ");

        $r16 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Field field>;

        if $r16 == null goto label5;

        $r21 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Field field>;

        goto label6;

     label5:
        $r21 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method setter>;

     label6:
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.apache.solr.client.solrj.beans.BindingException: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r10);

        throw $r11;

     label7:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.lang.Object[] $r4;
        org.apache.solr.client.solrj.beans.BindingException $r7, $r17, $r24;
        java.lang.String $r10, $r13, $r22, $r29;
        java.lang.reflect.Method $r2, $r5, $r20;
        java.lang.reflect.Field $r1, $r14, $r27;
        java.lang.Exception $r16, $r23;
        org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField r0;
        java.lang.Object r3, $r6, $r15;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r18, $r19, $r21, $r25, $r26, $r28;

        r0 := @this: org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Field field>;

        if $r1 == null goto label4;

     label1:
        $r14 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Field field>;

        $r15 = virtualinvoke $r14.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r3);

     label2:
        return $r15;

     label3:
        $r23 := @caughtexception;

        $r24 = new org.apache.solr.client.solrj.beans.BindingException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while getting value: ");

        $r27 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Field field>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.apache.solr.client.solrj.beans.BindingException: void <init>(java.lang.String,java.lang.Throwable)>($r29, $r23);

        throw $r24;

     label4:
        $r2 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method getter>;

        if $r2 != null goto label5;

        $r7 = new org.apache.solr.client.solrj.beans.BindingException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing getter for field: ");

        $r10 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.String name>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- You can only call the \'get\' for fields that have a field of \'get\' method");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.solr.client.solrj.beans.BindingException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label5:
        $r5 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method getter>;

        $r4 = (java.lang.Object[]) null;

        $r6 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r4);

     label6:
        return $r6;

     label7:
        $r16 := @caughtexception;

        $r17 = new org.apache.solr.client.solrj.beans.BindingException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while getting value: ");

        $r20 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.reflect.Method getter>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.apache.solr.client.solrj.beans.BindingException: void <init>(java.lang.String,java.lang.Throwable)>($r22, $r16);

        throw $r17;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    static java.util.regex.Pattern access$000(org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField)
    {
        org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField r0;
        java.util.regex.Pattern $r1;

        r0 := @parameter0: org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField;

        $r1 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.util.regex.Pattern dynamicFieldNamePatternMatcher>;

        return $r1;
    }

    static boolean access$100(org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField)
    {
        org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField r0;
        boolean $z0;

        r0 := @parameter0: org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField;

        $z0 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: boolean isContainedInMap>;

        return $z0;
    }

    static java.lang.String access$200(org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField)
    {
        org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField;

        $r1 = r0.<org.apache.solr.client.solrj.beans.DocumentObjectBinder$DocField: java.lang.String name>;

        return $r1;
    }
}
