public class org.apache.cxf.configuration.spring.SpringBeanQNameMap extends org.apache.cxf.configuration.spring.AbstractSpringBeanMap
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void <init>()>();

        return;
    }

    protected void processBeans(org.springframework.context.ApplicationContext)
    {
        org.springframework.beans.factory.config.BeanReference r65;
        java.lang.Exception $r62, $r63;
        java.lang.StringBuilder $r55, $r56, $r58, $r59;
        javax.xml.namespace.QName $r36, r69;
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r1;
        java.lang.Throwable $r61;
        java.util.ArrayList $r20, $r51;
        org.springframework.beans.factory.config.BeanDefinitionHolder r66;
        org.springframework.beans.factory.config.ConstructorArgumentValues $r28;
        org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder r67, r68;
        org.springframework.beans.factory.config.BeanDefinition $r8, $r25, $r27;
        java.lang.String $r7, $r9, $r11, $r16, $r17, $r24, $r26, $r37, $r38, $r40, $r42, $r43, $r46, $r57, $r60;
        org.springframework.beans.MutablePropertyValues $r10;
        java.lang.RuntimeException $r54;
        java.lang.reflect.Field $r47;
        org.springframework.beans.factory.config.TypedStringValue r32, r35;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r6;
        org.springframework.context.ConfigurableApplicationContext r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.Collection $r19, $r49, $r50, r64;
        java.util.List $r15, $r29;
        java.lang.String[] $r3;
        org.springframework.beans.Mergeable $r53;
        int $i0, $i1, i2, $i3, $i4;
        java.util.Iterator $r13, $r21;
        org.springframework.beans.PropertyValue $r12;
        org.springframework.context.ApplicationContext r0, $r5, $r39, $r44;
        java.lang.Class $r2, $r23, $r45;
        java.lang.Object $r14, $r18, $r22, $r30, $r31, $r33, $r34, $r41, $r48, $r52;

        r1 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        r0 := @parameter0: org.springframework.context.ApplicationContext;

        if r0 != null goto label01;

        return;

     label01:
        $r2 = r1.<org.apache.cxf.configuration.spring.SpringBeanQNameMap: java.lang.Class type>;

        $r3 = interfaceinvoke r0.<org.springframework.context.ApplicationContext: java.lang.String[] getBeanNamesForType(java.lang.Class)>($r2);

        r4 = (org.springframework.context.ConfigurableApplicationContext) r0;

        i2 = 0;

     label02:
        $i0 = lengthof $r3;

        if i2 >= $i0 goto label27;

        $r6 = interfaceinvoke r4.<org.springframework.context.ConfigurableApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>();

        $r7 = $r3[i2];

        $r8 = interfaceinvoke $r6.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)>($r7);

        $r9 = $r3[i2];

        $z0 = interfaceinvoke r0.<org.springframework.context.ApplicationContext: boolean isSingleton(java.lang.String)>($r9);

        if $z0 == 0 goto label26;

        $z1 = interfaceinvoke $r8.<org.springframework.beans.factory.config.BeanDefinition: boolean isAbstract()>();

        if $z1 == 0 goto label03;

        goto label26;

     label03:
        r64 = null;

        $r10 = interfaceinvoke $r8.<org.springframework.beans.factory.config.BeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r11 = r1.<org.apache.cxf.configuration.spring.SpringBeanQNameMap: java.lang.String idsProperty>;

        $r12 = virtualinvoke $r10.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue getPropertyValue(java.lang.String)>($r11);

        if $r12 == null goto label06;

        $r52 = virtualinvoke $r12.<org.springframework.beans.PropertyValue: java.lang.Object getValue()>();

        $z7 = $r52 instanceof java.util.Collection;

        if $z7 != 0 goto label04;

        $r54 = new java.lang.RuntimeException;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The property ");

        $r57 = r1.<org.apache.cxf.configuration.spring.SpringBeanQNameMap: java.lang.String idsProperty>;

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be a collection!");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<java.lang.RuntimeException: void <init>(java.lang.String)>($r60);

        throw $r54;

     label04:
        $z8 = $r52 instanceof org.springframework.beans.Mergeable;

        if $z8 == 0 goto label05;

        $r53 = (org.springframework.beans.Mergeable) $r52;

        $z9 = interfaceinvoke $r53.<org.springframework.beans.Mergeable: boolean isMergeEnabled()>();

        if $z9 != 0 goto label06;

        r64 = (java.util.Collection) $r52;

        goto label06;

     label05:
        r64 = (java.util.Collection) $r52;

     label06:
        if r64 != null goto label10;

        $r42 = r1.<org.apache.cxf.configuration.spring.SpringBeanQNameMap: java.lang.String staticFieldName>;

        if $r42 == null goto label10;

        $r44 = r1.<org.apache.cxf.configuration.spring.SpringBeanQNameMap: org.springframework.context.ApplicationContext context>;

        $r43 = $r3[i2];

        $r45 = interfaceinvoke $r44.<org.springframework.context.ApplicationContext: java.lang.Class getType(java.lang.String)>($r43);

     label07:
        $r46 = r1.<org.apache.cxf.configuration.spring.SpringBeanQNameMap: java.lang.String staticFieldName>;

        $r47 = virtualinvoke $r45.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r46);

        staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.AccessibleObject setAccessible(java.lang.reflect.AccessibleObject)>($r47);

        $r48 = virtualinvoke $r47.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r49 = (java.util.Collection) $r48;

        $r50 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Collection cast(java.util.Collection)>($r49);

        if $r50 == null goto label08;

        $r51 = new java.util.ArrayList;

        specialinvoke $r51.<java.util.ArrayList: void <init>(java.util.Collection)>($r50);

        r64 = $r51;

     label08:
        goto label10;

     label09:
        $r63 := @caughtexception;

     label10:
        if null == r64 goto label20;

        $r20 = new java.util.ArrayList;

        $i1 = interfaceinvoke r64.<java.util.Collection: int size()>();

        specialinvoke $r20.<java.util.ArrayList: void <init>(int)>($i1);

        $r21 = interfaceinvoke r64.<java.util.Collection: java.util.Iterator iterator()>();

     label11:
        $z2 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label18;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        $z3 = $r22 instanceof javax.xml.namespace.QName;

        if $z3 == 0 goto label12;

        interfaceinvoke $r20.<java.util.Collection: boolean add(java.lang.Object)>($r22);

        goto label17;

     label12:
        $z4 = $r22 instanceof org.springframework.beans.factory.config.BeanReference;

        if $z4 == 0 goto label13;

        r65 = (org.springframework.beans.factory.config.BeanReference) $r22;

        $r39 = r1.<org.apache.cxf.configuration.spring.SpringBeanQNameMap: org.springframework.context.ApplicationContext context>;

        $r40 = interfaceinvoke r65.<org.springframework.beans.factory.config.BeanReference: java.lang.String getBeanName()>();

        $r41 = interfaceinvoke $r39.<org.springframework.context.ApplicationContext: java.lang.Object getBean(java.lang.String)>($r40);

        interfaceinvoke $r20.<java.util.Collection: boolean add(java.lang.Object)>($r41);

        goto label17;

     label13:
        $z5 = $r22 instanceof org.springframework.beans.factory.config.BeanDefinitionHolder;

        if $z5 == 0 goto label18;

        r66 = (org.springframework.beans.factory.config.BeanDefinitionHolder) $r22;

        $r23 = class "Ljavax/xml/namespace/QName;";

        $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.String getName()>();

        $r25 = virtualinvoke r66.<org.springframework.beans.factory.config.BeanDefinitionHolder: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition()>();

        $r26 = interfaceinvoke $r25.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getBeanClassName()>();

        $z6 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z6 == 0 goto label18;

     label14:
        $r27 = virtualinvoke r66.<org.springframework.beans.factory.config.BeanDefinitionHolder: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition()>();

        $r28 = interfaceinvoke $r27.<org.springframework.beans.factory.config.BeanDefinition: org.springframework.beans.factory.config.ConstructorArgumentValues getConstructorArgumentValues()>();

        $r29 = virtualinvoke $r28.<org.springframework.beans.factory.config.ConstructorArgumentValues: java.util.List getGenericArgumentValues()>();

        $r30 = interfaceinvoke $r29.<java.util.List: java.lang.Object get(int)>(0);

        r67 = (org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder) $r30;

        $r31 = virtualinvoke r67.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.Object getValue()>();

        r32 = (org.springframework.beans.factory.config.TypedStringValue) $r31;

        $r33 = interfaceinvoke $r29.<java.util.List: java.lang.Object get(int)>(1);

        r68 = (org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder) $r33;

        $r34 = virtualinvoke r68.<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.Object getValue()>();

        r35 = (org.springframework.beans.factory.config.TypedStringValue) $r34;

        $r36 = new javax.xml.namespace.QName;

        $r37 = virtualinvoke r32.<org.springframework.beans.factory.config.TypedStringValue: java.lang.String getValue()>();

        $r38 = virtualinvoke r35.<org.springframework.beans.factory.config.TypedStringValue: java.lang.String getValue()>();

        specialinvoke $r36.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r37, $r38);

        interfaceinvoke $r20.<java.util.Collection: boolean add(java.lang.Object)>($r36);

     label15:
        goto label17;

     label16:
        $r62 := @caughtexception;

        goto label18;

     label17:
        goto label11;

     label18:
        $i3 = interfaceinvoke $r20.<java.util.Collection: int size()>();

        $i4 = interfaceinvoke r64.<java.util.Collection: int size()>();

        if $i3 >= $i4 goto label19;

        r64 = null;

        goto label20;

     label19:
        r64 = $r20;

     label20:
        if r64 != null goto label22;

        $r17 = $r3[i2];

        $r18 = interfaceinvoke r4.<org.springframework.context.ConfigurableApplicationContext: java.lang.Object getBean(java.lang.String)>($r17);

        $r19 = virtualinvoke r1.<org.apache.cxf.configuration.spring.SpringBeanQNameMap: java.util.Collection getIds(java.lang.Object)>($r18);

        r64 = $r19;

        if $r19 != null goto label22;

     label21:
        goto label26;

     label22:
        $r13 = interfaceinvoke r64.<java.util.Collection: java.util.Iterator iterator()>();

     label23:
        $z10 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label24;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r69 = (javax.xml.namespace.QName) $r14;

        $r15 = virtualinvoke r1.<org.apache.cxf.configuration.spring.SpringBeanQNameMap: java.util.List getBeanListForId(java.lang.Object)>(r69);

        $r16 = $r3[i2];

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label23;

     label24:
        goto label26;

     label25:
        $r61 := @caughtexception;

        goto label26;

     label26:
        i2 = i2 + 1;

        goto label02;

     label27:
        $r5 = interfaceinvoke r4.<org.springframework.context.ConfigurableApplicationContext: org.springframework.context.ApplicationContext getParent()>();

        virtualinvoke r1.<org.apache.cxf.configuration.spring.SpringBeanQNameMap: void processBeans(org.springframework.context.ApplicationContext)>($r5);

        return;

        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label14 to label15 with label16;
        catch org.springframework.beans.factory.BeanIsAbstractException from label03 to label21 with label25;
        catch org.springframework.beans.factory.BeanIsAbstractException from label22 to label24 with label25;
    }

    public volatile java.util.Collection values()
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        $r1 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.util.Collection values()>();

        return $r1;
    }

    public volatile int size()
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        int $i0;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        $i0 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: int size()>();

        return $i0;
    }

    public volatile java.lang.Object remove(java.lang.Object)
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        java.lang.Object r1, $r2;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.lang.Object remove(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile void putAll(java.util.Map)
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void putAll(java.util.Map)>(r1);

        return;
    }

    public volatile java.util.Set keySet()
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        java.util.Set $r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        $r1 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.util.Set keySet()>();

        return $r1;
    }

    public volatile boolean isEmpty()
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        $z0 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: boolean isEmpty()>();

        return $z0;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        java.lang.Object r1, $r2;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.lang.Object get(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.util.Set entrySet()
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        java.util.Set $r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        $r1 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.util.Set entrySet()>();

        return $r1;
    }

    public volatile boolean containsValue(java.lang.Object)
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public volatile boolean containsKey(java.lang.Object)
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public volatile void clear()
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void clear()>();

        return;
    }

    public volatile void setStaticFieldName(java.lang.String)
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void setStaticFieldName(java.lang.String)>(r1);

        return;
    }

    public volatile java.lang.String getStaticFieldName()
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        $r1 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.lang.String getStaticFieldName()>();

        return $r1;
    }

    public volatile void setIdsProperty(java.lang.String)
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void setIdsProperty(java.lang.String)>(r1);

        return;
    }

    public volatile java.lang.String getIdsProperty()
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        $r1 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.lang.String getIdsProperty()>();

        return $r1;
    }

    public volatile void setType(java.lang.Class)
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        java.lang.Class r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void setType(java.lang.Class)>(r1);

        return;
    }

    public volatile java.lang.Class getType()
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        $r1 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.lang.Class getType()>();

        return $r1;
    }

    public volatile java.lang.Object postProcessBeforeInitialization(java.lang.Object, java.lang.String) throws org.springframework.beans.BeansException
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        java.lang.Object r1, $r3;
        java.lang.String r2;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>(r1, r2);

        return $r3;
    }

    public volatile java.util.Map createMap()
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        $r1 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.util.Map createMap()>();

        return $r1;
    }

    public volatile void afterPropertiesSet() throws java.lang.Exception
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void afterPropertiesSet()>();

        return;
    }

    public volatile void setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException
    {
        org.apache.cxf.configuration.spring.SpringBeanQNameMap r0;
        org.springframework.context.ApplicationContext r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanQNameMap;

        r1 := @parameter0: org.springframework.context.ApplicationContext;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void setApplicationContext(org.springframework.context.ApplicationContext)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.configuration.spring.SpringBeanQNameMap: long serialVersionUID> = -3351437036057367923L;

        return;
    }
}
