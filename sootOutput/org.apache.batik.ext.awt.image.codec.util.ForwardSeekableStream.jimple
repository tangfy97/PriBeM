public class org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream extends org.apache.batik.ext.awt.image.codec.util.SeekableStream
{
    private java.io.InputStream src;
    long pointer;

    public void <init>(java.io.InputStream)
    {
        org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.batik.ext.awt.image.codec.util.SeekableStream: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: long pointer> = 0L;

        r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: java.io.InputStream src> = r1;

        return;
    }

    public final int read() throws java.io.IOException
    {
        org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream r0;
        int $i0, $i4;
        long $l1, $l2;
        java.io.InputStream $r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: java.io.InputStream src>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $i4 = (int) -1;

        if $i0 == $i4 goto label1;

        $l1 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: long pointer>;

        $l2 = $l1 + 1L;

        r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: long pointer> = $l2;

     label1:
        return $i0;
    }

    public final int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        long $l3, $l4, $l5;
        org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream r0;
        int i0, i1, $i2, $i7;
        java.io.InputStream $r2;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: java.io.InputStream src>;

        $i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1);

        $i7 = (int) -1;

        if $i2 == $i7 goto label1;

        $l4 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: long pointer>;

        $l3 = (long) $i2;

        $l5 = $l4 + $l3;

        r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: long pointer> = $l5;

     label1:
        return $i2;
    }

    public final long skip(long) throws java.io.IOException
    {
        org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream r0;
        long l0, $l1, $l2, $l3;
        java.io.InputStream $r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: java.io.InputStream src>;

        $l1 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>(l0);

        $l2 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: long pointer>;

        $l3 = $l2 + $l1;

        r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: long pointer> = $l3;

        return $l1;
    }

    public final int available() throws java.io.IOException
    {
        int $i0;
        org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: java.io.InputStream src>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        return $i0;
    }

    public final void close() throws java.io.IOException
    {
        org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: java.io.InputStream src>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }

    public final synchronized void mark(int)
    {
        org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream r0;
        int i1;
        long $l0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream;

        i1 := @parameter0: int;

        $l0 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: long pointer>;

        r0.<org.apache.batik.ext.awt.image.codec.util.SeekableStream: long markPos> = $l0;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: java.io.InputStream src>;

        virtualinvoke $r1.<java.io.InputStream: void mark(int)>(i1);

        return;
    }

    public final synchronized void reset() throws java.io.IOException
    {
        org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream r0;
        byte $b1;
        long $l0, $l2;
        java.io.InputStream $r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream;

        $l0 = r0.<org.apache.batik.ext.awt.image.codec.util.SeekableStream: long markPos>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $l2 = r0.<org.apache.batik.ext.awt.image.codec.util.SeekableStream: long markPos>;

        r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: long pointer> = $l2;

     label1:
        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: java.io.InputStream src>;

        virtualinvoke $r1.<java.io.InputStream: void reset()>();

        return;
    }

    public boolean markSupported()
    {
        org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream r0;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: java.io.InputStream src>;

        $z0 = virtualinvoke $r1.<java.io.InputStream: boolean markSupported()>();

        return $z0;
    }

    public final boolean canSeekBackwards()
    {
        org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream;

        return 0;
    }

    public final long getFilePointer()
    {
        org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream r0;
        long $l0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream;

        $l0 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: long pointer>;

        return $l0;
    }

    public final void seek(long) throws java.io.IOException
    {
        long l0, $l1, $l2, $l4, $l5, $l6, $l7, $l8;
        org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream r0;
        byte $b3;
        int $i9;
        java.io.InputStream $r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream;

        l0 := @parameter0: long;

        goto label2;

     label1:
        $l6 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: long pointer>;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: java.io.InputStream src>;

        $l4 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: long pointer>;

        $l5 = l0 - $l4;

        $l7 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l5);

        $l8 = $l6 + $l7;

        r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: long pointer> = $l8;

     label2:
        $l1 = r0.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: long pointer>;

        $l2 = l0 - $l1;

        $b3 = $l2 cmp 0L;

        $i9 = (int) $b3;

        if $i9 > 0 goto label1;

        return;
    }
}
