class org.apache.batik.swing.svg.AbstractJSVGComponent$10 extends java.lang.Object implements java.lang.Runnable
{
    private final org.apache.batik.bridge.UpdateManagerEvent val$e;
    private final org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener this$1;

    void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener, org.apache.batik.bridge.UpdateManagerEvent)
    {
        org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener r1;
        org.apache.batik.swing.svg.AbstractJSVGComponent$10 r0;
        org.apache.batik.bridge.UpdateManagerEvent r2;

        r0 := @this: org.apache.batik.swing.svg.AbstractJSVGComponent$10;

        r1 := @parameter0: org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener;

        r2 := @parameter1: org.apache.batik.bridge.UpdateManagerEvent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$10: org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener this$1> = r1;

        r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$10: org.apache.batik.bridge.UpdateManagerEvent val$e> = r2;

        return;
    }

    public void run()
    {
        java.lang.Object[] $r6;
        org.apache.batik.bridge.UpdateManagerEvent $r8, $r12;
        org.apache.batik.bridge.UpdateManagerListener $r9;
        int $i0, $i1, i2;
        org.apache.batik.swing.svg.AbstractJSVGComponent $r2, $r4, $r11;
        boolean $z0;
        java.awt.image.BufferedImage $r13;
        org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener $r1, $r3, $r10;
        java.util.List $r5;
        org.apache.batik.swing.svg.AbstractJSVGComponent$10 r0;
        java.lang.Object $r7;

        r0 := @this: org.apache.batik.swing.svg.AbstractJSVGComponent$10;

        $r1 = r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$10: org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener this$1>;

        $r2 = staticinvoke <org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener: org.apache.batik.swing.svg.AbstractJSVGComponent access$1000(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener)>($r1);

        $z0 = staticinvoke <org.apache.batik.swing.svg.AbstractJSVGComponent: boolean access$1201(org.apache.batik.swing.svg.AbstractJSVGComponent)>($r2);

        if $z0 != 0 goto label1;

        $r10 = r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$10: org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener this$1>;

        $r11 = staticinvoke <org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener: org.apache.batik.swing.svg.AbstractJSVGComponent access$1000(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener)>($r10);

        $r12 = r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$10: org.apache.batik.bridge.UpdateManagerEvent val$e>;

        $r13 = virtualinvoke $r12.<org.apache.batik.bridge.UpdateManagerEvent: java.awt.image.BufferedImage getImage()>();

        staticinvoke <org.apache.batik.swing.svg.AbstractJSVGComponent: java.awt.image.BufferedImage access$1303(org.apache.batik.swing.svg.AbstractJSVGComponent,java.awt.image.BufferedImage)>($r11, $r13);

     label1:
        $r3 = r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$10: org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener this$1>;

        $r4 = staticinvoke <org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener: org.apache.batik.swing.svg.AbstractJSVGComponent access$1000(org.apache.batik.swing.svg.AbstractJSVGComponent$SVGListener)>($r3);

        $r5 = $r4.<org.apache.batik.swing.svg.AbstractJSVGComponent: java.util.List updateManagerListeners>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray()>();

        $i0 = lengthof $r6;

        if $i0 <= 0 goto label4;

        i2 = 0;

        goto label3;

     label2:
        $r7 = $r6[i2];

        $r9 = (org.apache.batik.bridge.UpdateManagerListener) $r7;

        $r8 = r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$10: org.apache.batik.bridge.UpdateManagerEvent val$e>;

        interfaceinvoke $r9.<org.apache.batik.bridge.UpdateManagerListener: void updateStarted(org.apache.batik.bridge.UpdateManagerEvent)>($r8);

        i2 = i2 + 1;

     label3:
        $i1 = lengthof $r6;

        if i2 < $i1 goto label2;

     label4:
        return;
    }
}
