public abstract class org.apache.lucene.index.AbstractAllTermDocs extends java.lang.Object implements org.apache.lucene.index.TermDocs
{
    protected int maxDoc;
    protected int doc;

    protected void <init>(int)
    {
        int i0, $i2;
        org.apache.lucene.index.AbstractAllTermDocs r0;

        r0 := @this: org.apache.lucene.index.AbstractAllTermDocs;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = (int) -1;

        r0.<org.apache.lucene.index.AbstractAllTermDocs: int doc> = $i2;

        r0.<org.apache.lucene.index.AbstractAllTermDocs: int maxDoc> = i0;

        return;
    }

    public void seek(org.apache.lucene.index.Term) throws java.io.IOException
    {
        java.lang.UnsupportedOperationException $r3;
        org.apache.lucene.index.Term r0;
        int $i1;
        org.apache.lucene.index.AbstractAllTermDocs r2;

        r2 := @this: org.apache.lucene.index.AbstractAllTermDocs;

        r0 := @parameter0: org.apache.lucene.index.Term;

        if r0 != null goto label1;

        $i1 = (int) -1;

        r2.<org.apache.lucene.index.AbstractAllTermDocs: int doc> = $i1;

        goto label2;

     label1:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;

     label2:
        return;
    }

    public void seek(org.apache.lucene.index.TermEnum) throws java.io.IOException
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.index.TermEnum r2;
        org.apache.lucene.index.AbstractAllTermDocs r1;

        r1 := @this: org.apache.lucene.index.AbstractAllTermDocs;

        r2 := @parameter0: org.apache.lucene.index.TermEnum;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int doc()
    {
        int $i0;
        org.apache.lucene.index.AbstractAllTermDocs r0;

        r0 := @this: org.apache.lucene.index.AbstractAllTermDocs;

        $i0 = r0.<org.apache.lucene.index.AbstractAllTermDocs: int doc>;

        return $i0;
    }

    public int freq()
    {
        org.apache.lucene.index.AbstractAllTermDocs r0;

        r0 := @this: org.apache.lucene.index.AbstractAllTermDocs;

        return 1;
    }

    public boolean next() throws java.io.IOException
    {
        int $i0, $i1;
        org.apache.lucene.index.AbstractAllTermDocs r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.AbstractAllTermDocs;

        $i0 = r0.<org.apache.lucene.index.AbstractAllTermDocs: int doc>;

        $i1 = $i0 + 1;

        $z0 = virtualinvoke r0.<org.apache.lucene.index.AbstractAllTermDocs: boolean skipTo(int)>($i1);

        return $z0;
    }

    public int read(int[], int[]) throws java.io.IOException
    {
        int[] r0, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        org.apache.lucene.index.AbstractAllTermDocs r1;
        boolean $z0;

        r1 := @this: org.apache.lucene.index.AbstractAllTermDocs;

        r0 := @parameter0: int[];

        r2 := @parameter1: int[];

        i0 = lengthof r0;

        i7 = 0;

     label1:
        if i7 >= i0 goto label3;

        $i2 = r1.<org.apache.lucene.index.AbstractAllTermDocs: int doc>;

        $i1 = r1.<org.apache.lucene.index.AbstractAllTermDocs: int maxDoc>;

        if $i2 >= $i1 goto label3;

        $i3 = r1.<org.apache.lucene.index.AbstractAllTermDocs: int doc>;

        $z0 = virtualinvoke r1.<org.apache.lucene.index.AbstractAllTermDocs: boolean isDeleted(int)>($i3);

        if $z0 != 0 goto label2;

        $i6 = r1.<org.apache.lucene.index.AbstractAllTermDocs: int doc>;

        r0[i7] = $i6;

        r2[i7] = 1;

        i7 = i7 + 1;

     label2:
        $i4 = r1.<org.apache.lucene.index.AbstractAllTermDocs: int doc>;

        $i5 = $i4 + 1;

        r1.<org.apache.lucene.index.AbstractAllTermDocs: int doc> = $i5;

        goto label1;

     label3:
        return i7;
    }

    public boolean skipTo(int) throws java.io.IOException
    {
        int i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.lucene.index.AbstractAllTermDocs r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.AbstractAllTermDocs;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.index.AbstractAllTermDocs: int doc> = i0;

     label1:
        $i2 = r0.<org.apache.lucene.index.AbstractAllTermDocs: int doc>;

        $i1 = r0.<org.apache.lucene.index.AbstractAllTermDocs: int maxDoc>;

        if $i2 >= $i1 goto label3;

        $i3 = r0.<org.apache.lucene.index.AbstractAllTermDocs: int doc>;

        $z0 = virtualinvoke r0.<org.apache.lucene.index.AbstractAllTermDocs: boolean isDeleted(int)>($i3);

        if $z0 != 0 goto label2;

        return 1;

     label2:
        $i4 = r0.<org.apache.lucene.index.AbstractAllTermDocs: int doc>;

        $i5 = $i4 + 1;

        r0.<org.apache.lucene.index.AbstractAllTermDocs: int doc> = $i5;

        goto label1;

     label3:
        return 0;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.index.AbstractAllTermDocs r0;

        r0 := @this: org.apache.lucene.index.AbstractAllTermDocs;

        return;
    }

    public abstract boolean isDeleted(int);
}
