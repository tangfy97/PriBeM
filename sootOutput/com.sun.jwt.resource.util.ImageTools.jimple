public class com.sun.jwt.resource.util.ImageTools extends java.lang.Object
{

    public void <init>()
    {
        com.sun.jwt.resource.util.ImageTools r0;

        r0 := @this: com.sun.jwt.resource.util.ImageTools;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.util.List buildPalette(int[])
    {
        int[] r1;
        int i0, i1, i2;
        java.lang.Integer $r2;
        java.util.ArrayList $r0;
        boolean $z0;

        r1 := @parameter0: int[];

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        i1 = r1[i2];

        $r2 = new java.lang.Integer;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i1);

        $z0 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return $r0;
    }

    private static void replace(int[], int, int)
    {
        int[] r0;
        int $i0, i1, $i2, i3, i4;

        r0 := @parameter0: int[];

        i1 := @parameter1: int;

        i3 := @parameter2: int;

        i4 = 0;

     label1:
        $i0 = lengthof r0;

        if i4 >= $i0 goto label3;

        $i2 = r0[i4];

        if $i2 != i1 goto label2;

        r0[i4] = i3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    public static com.sun.lwuit.IndexedImage forcePack(com.sun.lwuit.Image)
    {
        java.lang.Integer r7;
        com.sun.lwuit.IndexedImage $r11;
        short s11;
        int[] $r1, r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i12, $i13, $i14, $i15;
        boolean $z0;
        java.util.Iterator $r3;
        java.awt.image.BufferedImage $r5;
        com.sun.lwuit.Image r0, $r9, $r10;
        java.util.List $r2, $r4;
        java.lang.Object $r6;

        r0 := @parameter0: com.sun.lwuit.Image;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Image: int getWidth()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.Image: int getHeight()>();

        $r1 = virtualinvoke r0.<com.sun.lwuit.Image: int[] getRGB()>();

        r8 = $r1;

        i9 = 0;

     label01:
        $i2 = lengthof $r1;

        if i9 >= $i2 goto label03;

        $i7 = $r1[i9];

        $i8 = $i7 & -16777216;

        if $i8 != 0 goto label02;

        $r1[i9] = 0;

     label02:
        i9 = i9 + 1;

        goto label01;

     label03:
        $r2 = staticinvoke <com.sun.jwt.resource.util.ImageTools: java.util.List buildPalette(int[])>($r1);

        $i3 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i3 <= 256 goto label10;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.Integer) $r6;

        $i5 = virtualinvoke r7.<java.lang.Integer: int intValue()>();

        $i6 = $i5 >> 24;

        i10 = $i6 & 255;

        if i10 == 255 goto label04;

        if i10 != 0 goto label05;

        goto label04;

     label05:
        if i10 < 240 goto label06;

        s11 = 255;

        goto label08;

     label06:
        if i10 > 9 goto label07;

        s11 = 0;

        goto label08;

     label07:
        s11 = 127;

     label08:
        $i12 = $i5 & 16777215;

        $i13 = s11 << 24;

        $i14 = $i13 & -16777216;

        $i15 = $i12 | $i14;

        staticinvoke <com.sun.jwt.resource.util.ImageTools: void replace(int[],int,int)>($r1, $i5, $i15);

        goto label04;

     label09:
        $r4 = staticinvoke <com.sun.jwt.resource.util.ImageTools: java.util.List buildPalette(int[])>($r1);

        $i4 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i4 <= 256 goto label10;

        $r5 = new java.awt.image.BufferedImage;

        specialinvoke $r5.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 13);

        virtualinvoke $r5.<java.awt.image.BufferedImage: void setRGB(int,int,int,int,int[],int,int)>(0, 0, $i0, $i1, $r1, 0, $i0);

        r8 = virtualinvoke $r5.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, $i0, $i1, $r1, 0, $i0);

     label10:
        $r9 = staticinvoke <com.sun.lwuit.Image: com.sun.lwuit.Image createImage(int[],int,int)>(r8, $i0, $i1);

        $r10 = staticinvoke <com.sun.lwuit.IndexedImage: com.sun.lwuit.Image pack(com.sun.lwuit.Image)>($r9);

        $r11 = (com.sun.lwuit.IndexedImage) $r10;

        return $r11;
    }
}
