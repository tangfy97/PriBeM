public class org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder extends org.apache.xmlbeans.impl.jam.provider.JamClassBuilder implements org.apache.xmlbeans.impl.jam.provider.JamClassPopulator
{
    private java.lang.ClassLoader mLoader;
    private org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate;

    public void <init>(java.lang.ClassLoader)
    {
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder r0;
        java.lang.ClassLoader r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.provider.JamClassBuilder: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate> = null;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null rcl");

        throw $r2;

     label1:
        r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: java.lang.ClassLoader mLoader> = r1;

        return;
    }

    public void init(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext)
    {
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder r0;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.provider.JamClassBuilder: void init(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext)>(r1);

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: void initDelegate(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext)>(r1);

        return;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MClass build(java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder r0;
        java.lang.StringBuffer $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18;
        int $i0;
        java.lang.String r2, $r3, r4, $r19, $r22;
        boolean $z0;
        org.apache.xmlbeans.impl.jam.provider.JamLogger $r1, $r12, $r21;
        java.lang.Class $r6;
        java.lang.ClassNotFoundException $r20;
        java.lang.ClassLoader $r5;
        org.apache.xmlbeans.impl.jam.mutable.MClass $r7;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: void assertInitialized()>();

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.provider.JamLogger getLogger()>();

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.jam.provider.JamLogger: boolean isVerbose(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r12 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.provider.JamLogger getLogger()>();

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("trying to build \'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' \'");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void verbose(java.lang.String)>($r19);

     label1:
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r22 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label3;

     label2:
        $r22 = r4;

     label3:
        $r5 = r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: java.lang.ClassLoader mLoader>;

        $r6 = virtualinvoke $r5.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r22);

     label4:
        goto label6;

     label5:
        $r20 := @caughtexception;

        $r21 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.provider.JamLogger getLogger()>();

        interfaceinvoke $r21.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void verbose(java.lang.Throwable,java.lang.Object)>($r20, r0);

        return null;

     label6:
        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.mutable.MClass createClassToBuild(java.lang.String,java.lang.String,java.lang.String[],org.apache.xmlbeans.impl.jam.provider.JamClassPopulator)>(r2, r4, null, r0);

        interfaceinvoke $r7.<org.apache.xmlbeans.impl.jam.mutable.MClass: void setArtifact(java.lang.Object)>($r6);

        return $r7;

        catch java.lang.ClassNotFoundException from label1 to label4 with label5;
    }

    public void populate(org.apache.xmlbeans.impl.jam.mutable.MClass)
    {
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder r0;
        java.lang.reflect.Method[] $r7;
        org.apache.xmlbeans.impl.jam.mutable.MMethod $r28;
        java.lang.reflect.Method $r23, $r29;
        boolean $z0, $z1;
        java.lang.Exception $r36;
        org.apache.xmlbeans.impl.jam.mutable.MClass r1, $r16;
        java.lang.reflect.Constructor $r20, $r26;
        java.lang.reflect.Constructor[] $r9;
        org.apache.xmlbeans.impl.jam.mutable.MConstructor $r25;
        org.apache.xmlbeans.impl.jam.mutable.MField $r30;
        int $i0, $i1, $i2, $i3, $i5, i6, $i7, i8, i9, $i10, i11, $i12, i13, $i14, $i15;
        java.lang.String $r14, $r15, $r33, $r34;
        java.lang.Class[] $r6, $r11;
        char $c4;
        java.lang.reflect.Field $r31;
        java.lang.reflect.Field[] r37;
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate $r4, $r8, $r10, $r12, $r19, $r22, $r24, $r27, $r35;
        java.lang.Object $r2;
        java.lang.Class r3, $r5, $r13, $r17, $r18, $r21, $r32;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MClass;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: void assertInitialized()>();

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.mutable.MClass: java.lang.Object getArtifact()>();

        r3 = (java.lang.Class) $r2;

        $i0 = virtualinvoke r3.<java.lang.Class: int getModifiers()>();

        interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.mutable.MClass: void setModifiers(int)>($i0);

        $z0 = virtualinvoke r3.<java.lang.Class: boolean isInterface()>();

        interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.mutable.MClass: void setIsInterface(boolean)>($z0);

        $r4 = r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        if $r4 == null goto label01;

        $r35 = r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        $z1 = virtualinvoke $r35.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate: boolean isEnum(java.lang.Class)>(r3);

        interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.mutable.MClass: void setIsEnumType(boolean)>($z1);

     label01:
        $r5 = virtualinvoke r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        if $r5 == null goto label02;

        $r34 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.mutable.MClass: void setSuperclass(java.lang.String)>($r34);

     label02:
        $r6 = virtualinvoke r3.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i6 = 0;

     label03:
        $i7 = lengthof $r6;

        if i6 >= $i7 goto label04;

        $r32 = $r6[i6];

        $r33 = virtualinvoke $r32.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.mutable.MClass: void addInterface(java.lang.String)>($r33);

        i6 = i6 + 1;

        goto label03;

     label04:
        r37 = null;

     label05:
        r37 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

     label06:
        goto label08;

     label07:
        $r36 := @caughtexception;

     label08:
        if r37 == null goto label10;

        i8 = 0;

     label09:
        $i5 = lengthof r37;

        if i8 >= $i5 goto label10;

        $r30 = interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.mutable.MClass: org.apache.xmlbeans.impl.jam.mutable.MField addNewField()>();

        $r31 = r37[i8];

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: void populate(org.apache.xmlbeans.impl.jam.mutable.MField,java.lang.reflect.Field)>($r30, $r31);

        i8 = i8 + 1;

        goto label09;

     label10:
        $r7 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        i9 = 0;

     label11:
        $i10 = lengthof $r7;

        if i9 >= $i10 goto label12;

        $r28 = interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.mutable.MClass: org.apache.xmlbeans.impl.jam.mutable.MMethod addNewMethod()>();

        $r29 = $r7[i9];

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: void populate(org.apache.xmlbeans.impl.jam.mutable.MMethod,java.lang.reflect.Method)>($r28, $r29);

        i9 = i9 + 1;

        goto label11;

     label12:
        $r8 = r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        if $r8 == null goto label13;

        $r27 = r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        virtualinvoke $r27.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate: void populateAnnotationTypeIfNecessary(java.lang.Class,org.apache.xmlbeans.impl.jam.mutable.MClass,org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder)>(r3, r1, r0);

     label13:
        $r9 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>();

        i11 = 0;

     label14:
        $i12 = lengthof $r9;

        if i11 >= $i12 goto label15;

        $r25 = interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.mutable.MClass: org.apache.xmlbeans.impl.jam.mutable.MConstructor addNewConstructor()>();

        $r26 = $r9[i11];

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: void populate(org.apache.xmlbeans.impl.jam.mutable.MConstructor,java.lang.reflect.Constructor)>($r25, $r26);

        i11 = i11 + 1;

        goto label14;

     label15:
        $r10 = r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        if $r10 == null goto label16;

        $r24 = r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        virtualinvoke $r24.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate: void extractAnnotations(org.apache.xmlbeans.impl.jam.mutable.MClass,java.lang.Class)>(r1, r3);

     label16:
        $r11 = virtualinvoke r3.<java.lang.Class: java.lang.Class[] getDeclaredClasses()>();

        if $r11 == null goto label21;

        i13 = 0;

     label17:
        $i1 = lengthof $r11;

        if i13 >= $i1 goto label21;

        $r12 = r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        if $r12 == null goto label18;

        $r19 = r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        $r18 = $r11[i13];

        $r20 = virtualinvoke $r19.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate: java.lang.reflect.Constructor getEnclosingConstructor(java.lang.Class)>($r18);

        if $r20 != null goto label20;

        $r22 = r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        $r21 = $r11[i13];

        $r23 = virtualinvoke $r22.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate: java.lang.reflect.Method getEnclosingMethod(java.lang.Class)>($r21);

        if $r23 == null goto label18;

        goto label20;

     label18:
        $r13 = $r11[i13];

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $i2 = virtualinvoke $r14.<java.lang.String: int lastIndexOf(int)>(36);

        $i3 = $i2 + 1;

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int)>($i3);

        $c4 = virtualinvoke $r15.<java.lang.String: char charAt(int)>(0);

        $i14 = (int) $c4;

        if 48 > $i14 goto label19;

        $i15 = (int) $c4;

        if $i15 > 57 goto label19;

        goto label20;

     label19:
        $r16 = interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.mutable.MClass: org.apache.xmlbeans.impl.jam.mutable.MClass addNewInnerClass(java.lang.String)>($r15);

        $r17 = $r11[i13];

        interfaceinvoke $r16.<org.apache.xmlbeans.impl.jam.mutable.MClass: void setArtifact(java.lang.Object)>($r17);

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: void populate(org.apache.xmlbeans.impl.jam.mutable.MClass)>($r16);

     label20:
        i13 = i13 + 1;

        goto label17;

     label21:
        return;

        catch java.lang.Exception from label05 to label06 with label07;
    }

    private void initDelegate(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext)
    {
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder r0;
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate $r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate create(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext)>(r1);

        r0.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate> = $r2;

        return;
    }

    private void populate(org.apache.xmlbeans.impl.jam.mutable.MField, java.lang.reflect.Field)
    {
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder r5;
        java.lang.reflect.Field r1;
        org.apache.xmlbeans.impl.jam.mutable.MField r0;
        int $i0;
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate $r6, $r7;
        java.lang.Class $r3;
        java.lang.String $r2, $r4;

        r5 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MField;

        r1 := @parameter1: java.lang.reflect.Field;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MField: void setArtifact(java.lang.Object)>(r1);

        $r2 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MField: void setSimpleName(java.lang.String)>($r2);

        $r3 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MField: void setType(java.lang.String)>($r4);

        $i0 = virtualinvoke r1.<java.lang.reflect.Field: int getModifiers()>();

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MField: void setModifiers(int)>($i0);

        $r6 = r5.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        if $r6 == null goto label1;

        $r7 = r5.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        virtualinvoke $r7.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate: void extractAnnotations(org.apache.xmlbeans.impl.jam.mutable.MField,java.lang.reflect.Field)>(r0, r1);

     label1:
        return;
    }

    private void populate(org.apache.xmlbeans.impl.jam.mutable.MConstructor, java.lang.reflect.Constructor)
    {
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder r4;
        java.lang.Class[] $r3, $r5;
        org.apache.xmlbeans.impl.jam.mutable.MParameter $r9;
        java.lang.reflect.Constructor r1;
        org.apache.xmlbeans.impl.jam.mutable.MConstructor r0;
        int $i0, $i1, i2;
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate $r6, $r7, $r10, $r11;
        java.lang.Class $r8;
        java.lang.String $r2;

        r4 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MConstructor;

        r1 := @parameter1: java.lang.reflect.Constructor;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MConstructor: void setArtifact(java.lang.Object)>(r1);

        $r2 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.String getName()>();

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MConstructor: void setSimpleName(java.lang.String)>($r2);

        $i0 = virtualinvoke r1.<java.lang.reflect.Constructor: int getModifiers()>();

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MConstructor: void setModifiers(int)>($i0);

        $r3 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>();

        specialinvoke r4.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: void addThrows(org.apache.xmlbeans.impl.jam.mutable.MInvokable,java.lang.Class[])>(r0, $r3);

        $r5 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        i2 = 0;

     label1:
        $i1 = lengthof $r5;

        if i2 >= $i1 goto label3;

        $r8 = $r5[i2];

        $r9 = specialinvoke r4.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.mutable.MParameter addParameter(org.apache.xmlbeans.impl.jam.mutable.MInvokable,int,java.lang.Class)>(r0, i2, $r8);

        $r10 = r4.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        if $r10 == null goto label2;

        $r11 = r4.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        virtualinvoke $r11.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate: void extractAnnotations(org.apache.xmlbeans.impl.jam.mutable.MParameter,java.lang.reflect.Constructor,int)>($r9, r1, i2);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r6 = r4.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        if $r6 == null goto label4;

        $r7 = r4.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        virtualinvoke $r7.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate: void extractAnnotations(org.apache.xmlbeans.impl.jam.mutable.MConstructor,java.lang.reflect.Constructor)>(r0, r1);

     label4:
        return;
    }

    private void populate(org.apache.xmlbeans.impl.jam.mutable.MMethod, java.lang.reflect.Method)
    {
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder r6;
        org.apache.xmlbeans.impl.jam.mutable.MMethod r0;
        int $i0, $i1, i2;
        java.lang.String $r2, $r4;
        java.lang.reflect.Method r1;
        java.lang.Class[] $r5, $r7;
        org.apache.xmlbeans.impl.jam.mutable.MParameter $r11;
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate $r8, $r9, $r12, $r13;
        java.lang.Class $r3, $r10;

        r6 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MMethod;

        r1 := @parameter1: java.lang.reflect.Method;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MMethod: void setArtifact(java.lang.Object)>(r1);

        $r2 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MMethod: void setSimpleName(java.lang.String)>($r2);

        $i0 = virtualinvoke r1.<java.lang.reflect.Method: int getModifiers()>();

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MMethod: void setModifiers(int)>($i0);

        $r3 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MMethod: void setReturnType(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>();

        specialinvoke r6.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: void addThrows(org.apache.xmlbeans.impl.jam.mutable.MInvokable,java.lang.Class[])>(r0, $r5);

        $r7 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        i2 = 0;

     label1:
        $i1 = lengthof $r7;

        if i2 >= $i1 goto label3;

        $r10 = $r7[i2];

        $r11 = specialinvoke r6.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.mutable.MParameter addParameter(org.apache.xmlbeans.impl.jam.mutable.MInvokable,int,java.lang.Class)>(r0, i2, $r10);

        $r12 = r6.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        if $r12 == null goto label2;

        $r13 = r6.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        virtualinvoke $r13.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate: void extractAnnotations(org.apache.xmlbeans.impl.jam.mutable.MParameter,java.lang.reflect.Method,int)>($r11, r1, i2);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r8 = r6.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        if $r8 == null goto label4;

        $r9 = r6.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate mTigerDelegate>;

        virtualinvoke $r9.<org.apache.xmlbeans.impl.jam.internal.reflect.ReflectTigerDelegate: void extractAnnotations(org.apache.xmlbeans.impl.jam.mutable.MMember,java.lang.reflect.Method)>(r0, r1);

     label4:
        return;
    }

    private void addThrows(org.apache.xmlbeans.impl.jam.mutable.MInvokable, java.lang.Class[])
    {
        int $i0, i1;
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder r4;
        java.lang.Class[] r0;
        org.apache.xmlbeans.impl.jam.mutable.MInvokable r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r4 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MInvokable;

        r0 := @parameter1: java.lang.Class[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r2 = r0[i1];

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.mutable.MInvokable: void addException(java.lang.String)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private org.apache.xmlbeans.impl.jam.mutable.MParameter addParameter(org.apache.xmlbeans.impl.jam.mutable.MInvokable, int, java.lang.Class)
    {
        org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder r8;
        org.apache.xmlbeans.impl.jam.mutable.MParameter $r1;
        java.lang.StringBuffer $r2, $r3, $r4;
        int i0;
        org.apache.xmlbeans.impl.jam.mutable.MInvokable r0;
        java.lang.Class r6;
        java.lang.String $r5, $r7;

        r8 := @this: org.apache.xmlbeans.impl.jam.internal.reflect.ReflectClassBuilder;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MInvokable;

        i0 := @parameter1: int;

        r6 := @parameter2: java.lang.Class;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.mutable.MInvokable: org.apache.xmlbeans.impl.jam.mutable.MParameter addNewParameter()>();

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("param");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.impl.jam.mutable.MParameter: void setSimpleName(java.lang.String)>($r5);

        $r7 = virtualinvoke r6.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.impl.jam.mutable.MParameter: void setType(java.lang.String)>($r7);

        return $r1;
    }
}
