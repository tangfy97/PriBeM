abstract class org.tukaani.xz.lzma.LZMACoder$LiteralCoder$LiteralSubcoder extends java.lang.Object
{
    final short[] probs;
    private final org.tukaani.xz.lzma.LZMACoder$LiteralCoder this$1;

    void <init>(org.tukaani.xz.lzma.LZMACoder$LiteralCoder)
    {
        short[] $r2;
        org.tukaani.xz.lzma.LZMACoder$LiteralCoder r1;
        org.tukaani.xz.lzma.LZMACoder$LiteralCoder$LiteralSubcoder r0;

        r0 := @this: org.tukaani.xz.lzma.LZMACoder$LiteralCoder$LiteralSubcoder;

        r1 := @parameter0: org.tukaani.xz.lzma.LZMACoder$LiteralCoder;

        r0.<org.tukaani.xz.lzma.LZMACoder$LiteralCoder$LiteralSubcoder: org.tukaani.xz.lzma.LZMACoder$LiteralCoder this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (short)[768];

        r0.<org.tukaani.xz.lzma.LZMACoder$LiteralCoder$LiteralSubcoder: short[] probs> = $r2;

        return;
    }

    void reset()
    {
        short[] $r1;
        org.tukaani.xz.lzma.LZMACoder$LiteralCoder$LiteralSubcoder r0;

        r0 := @this: org.tukaani.xz.lzma.LZMACoder$LiteralCoder$LiteralSubcoder;

        $r1 = r0.<org.tukaani.xz.lzma.LZMACoder$LiteralCoder$LiteralSubcoder: short[] probs>;

        staticinvoke <org.tukaani.xz.rangecoder.RangeCoder: void initProbs(short[])>($r1);

        return;
    }
}
