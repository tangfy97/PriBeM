public class org.apache.pdfbox.util.DateConverter extends java.lang.Object
{
    private static final int MINUTES_PER_HOUR;
    private static final int SECONDS_PER_MINUTE;
    private static final int MILLIS_PER_MINUTE;
    private static final int MILLIS_PER_HOUR;
    private static final int HALF_DAY;
    private static final int DAY;
    public static final int INVALID_YEAR;
    private static final java.lang.String[] ALPHA_START_FORMATS;
    private static final java.lang.String[] DIGIT_START_FORMATS;

    private void <init>()
    {
        org.apache.pdfbox.util.DateConverter r0;

        r0 := @this: org.apache.pdfbox.util.DateConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String[] getFormats()
    {
        java.lang.String[] $r0, $r1, r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        $r0 = <org.apache.pdfbox.util.DateConverter: java.lang.String[] ALPHA_START_FORMATS>;

        $i1 = lengthof $r0;

        $r1 = <org.apache.pdfbox.util.DateConverter: java.lang.String[] DIGIT_START_FORMATS>;

        $i0 = lengthof $r1;

        $i2 = $i1 + $i0;

        r2 = newarray (java.lang.String)[$i2];

        $r4 = <org.apache.pdfbox.util.DateConverter: java.lang.String[] ALPHA_START_FORMATS>;

        $r3 = <org.apache.pdfbox.util.DateConverter: java.lang.String[] ALPHA_START_FORMATS>;

        $i3 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i3);

        $r7 = <org.apache.pdfbox.util.DateConverter: java.lang.String[] DIGIT_START_FORMATS>;

        $r5 = <org.apache.pdfbox.util.DateConverter: java.lang.String[] ALPHA_START_FORMATS>;

        $i5 = lengthof $r5;

        $r6 = <org.apache.pdfbox.util.DateConverter: java.lang.String[] DIGIT_START_FORMATS>;

        $i4 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r2, $i5, $i4);

        return r2;
    }

    public static java.lang.String toString(java.util.Calendar)
    {
        java.lang.Object[] $r2;
        long $l3;
        java.util.Calendar r0;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r3;

        r0 := @parameter0: java.util.Calendar;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(15);

        $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(16);

        $i2 = $i0 + $i1;

        $l3 = (long) $i2;

        $r1 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.lang.String formatTZoffset(long,java.lang.String)>($l3, "\'");

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = r0;

        $r2[1] = $r1;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("D:%1$4tY%1$2tm%1$2td%1$2tH%1$2tM%1$2tS%2$s\'", $r2);

        return $r3;
    }

    public static java.lang.String toISO8601(java.util.Calendar)
    {
        java.lang.Object[] $r2;
        long $l3;
        java.util.Calendar r0;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r3;

        r0 := @parameter0: java.util.Calendar;

        $i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(15);

        $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(16);

        $i2 = $i0 + $i1;

        $l3 = (long) $i2;

        $r1 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.lang.String formatTZoffset(long,java.lang.String)>($l3, ":");

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = r0;

        $r2[1] = $r1;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%1$4tY-%1$2tm-%1$2tdT%1$2tH:%1$2tM:%1$2tS%2$s", $r2);

        return $r3;
    }

    public static int restrainTZoffset(long)
    {
        long $l0, $l1, $l2, $l3, l5, l6, l7;
        int $i4;

        l5 := @parameter0: long;

        $l0 = l5 + 43200000L;

        $l1 = $l0 % 86400000L;

        $l2 = $l1 + 86400000L;

        l6 = $l2 % 86400000L;

        $l3 = l6 - 43200000L;

        l7 = $l3 % 43200000L;

        $i4 = (int) l7;

        return $i4;
    }

    public static java.lang.String formatTZoffset(long, java.lang.String)
    {
        java.util.Date $r2;
        java.text.SimpleDateFormat $r0;
        long l0;
        int $i1;
        java.lang.StringBuilder $r4, $r6, $r8, $r10;
        java.lang.String $r3, $r5, r7, $r9, $r11;
        java.util.SimpleTimeZone $r1;

        l0 := @parameter0: long;

        r7 := @parameter1: java.lang.String;

        $r0 = new java.text.SimpleDateFormat;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("Z");

        $r1 = new java.util.SimpleTimeZone;

        $i1 = staticinvoke <org.apache.pdfbox.util.DateConverter: int restrainTZoffset(long)>(l0);

        specialinvoke $r1.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>($i1, "unknown");

        virtualinvoke $r0.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r1);

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        $r3 = virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>(3);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public static int parseTimeField(java.lang.String, java.text.ParsePosition, int, int)
    {
        java.text.ParsePosition r1;
        int $i0, i1, $i2, $i3, $i4, i5, i6, i8, $i9, i10, i11, $i12, $i13;
        java.lang.String r0;
        char $c7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.text.ParsePosition;

        i1 := @parameter2: int;

        i6 := @parameter3: int;

        if r0 != null goto label1;

        return i6;

     label1:
        i10 = 0;

        $i0 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>();

        i11 = $i0;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = $i2 - $i0;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i3);

        i5 = $i0 + $i4;

     label2:
        if i11 >= i5 goto label4;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11);

        $i13 = (int) $c7;

        i8 = $i13 - 48;

        if i8 < 0 goto label4;

        if i8 <= 9 goto label3;

        goto label4;

     label3:
        $i9 = i10 * 10;

        i10 = $i9 + i8;

        i11 = i11 + 1;

        goto label2;

     label4:
        $i12 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>();

        if i11 != $i12 goto label5;

        return i6;

     label5:
        virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>(i11);

        return i10;
    }

    public static char skipOptionals(java.lang.String, java.text.ParsePosition, java.lang.String)
    {
        java.text.ParsePosition r1;
        char $c3, c7, $c8;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i9, $i10;
        java.lang.String r0, r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.text.ParsePosition;

        r2 := @parameter2: java.lang.String;

        c7 = 32;

     label1:
        if r0 == null goto label4;

        $i0 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>();

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label4;

        $i2 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>();

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i9 = (int) $c3;

        $i4 = virtualinvoke r2.<java.lang.String: int indexOf(int)>($i9);

        if $i4 < 0 goto label4;

        $i10 = (int) $c3;

        if $i10 == 32 goto label2;

        $c8 = $c3;

        goto label3;

     label2:
        $c8 = c7;

     label3:
        c7 = $c8;

        $i5 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>();

        $i6 = $i5 + 1;

        virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>($i6);

        goto label1;

     label4:
        return c7;
    }

    public static boolean skipString(java.lang.String, java.lang.String, java.text.ParsePosition)
    {
        java.text.ParsePosition r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.text.ParsePosition;

        $i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String,int)>(r1, $i0);

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i3);

        return 1;

     label1:
        return 0;
    }

    public static java.util.GregorianCalendar newGreg()
    {
        java.util.GregorianCalendar $r0;
        java.util.SimpleTimeZone $r2;
        java.util.Locale $r1;

        $r0 = new java.util.GregorianCalendar;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        specialinvoke $r0.<java.util.GregorianCalendar: void <init>(java.util.Locale)>($r1);

        $r2 = new java.util.SimpleTimeZone;

        specialinvoke $r2.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "UTC");

        virtualinvoke $r0.<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)>($r2);

        virtualinvoke $r0.<java.util.GregorianCalendar: void setLenient(boolean)>(0);

        virtualinvoke $r0.<java.util.GregorianCalendar: void set(int,int)>(14, 0);

        return $r0;
    }

    public static void adjustTimeZoneNicely(java.util.GregorianCalendar, java.util.TimeZone)
    {
        java.util.GregorianCalendar r0;
        java.util.TimeZone r1;
        int $i0, $i1, $i2, i3, $i4;

        r0 := @parameter0: java.util.GregorianCalendar;

        r1 := @parameter1: java.util.TimeZone;

        virtualinvoke r0.<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)>(r1);

        $i0 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(15);

        $i1 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(16);

        $i2 = $i0 + $i1;

        i3 = $i2 / 3600000;

        $i4 = neg i3;

        virtualinvoke r0.<java.util.GregorianCalendar: void add(int,int)>(10, $i4);

        return;
    }

    public static boolean parseTZoffset(java.lang.String, java.util.GregorianCalendar, java.text.ParsePosition)
    {
        byte $b13;
        boolean z0, $z1, $z2, $z3, $z5, $z6;
        java.util.GregorianCalendar r4;
        java.util.TimeZone $r7, r10;
        java.util.SimpleTimeZone $r12;
        java.text.ParsePosition r1, $r11;
        long $l10;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i14, $i15, $i17, $i19, $i20, $i22;
        java.lang.String r3, $r5, $r6, $r8, $r9;
        char $c1, $c12;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.util.GregorianCalendar;

        r1 := @parameter2: java.text.ParsePosition;

        $r11 = new java.text.ParsePosition;

        $i0 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>();

        specialinvoke $r11.<java.text.ParsePosition: void <init>(int)>($i0);

        $r12 = new java.util.SimpleTimeZone;

        specialinvoke $r12.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "GMT");

        r10 = $r12;

        $c1 = staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r3, $r11, "Z+- ");

        $i15 = (int) $c1;

        if $i15 == 90 goto label01;

        $z2 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean skipString(java.lang.String,java.lang.String,java.text.ParsePosition)>(r3, "GMT", $r11);

        if $z2 != 0 goto label01;

        $z3 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean skipString(java.lang.String,java.lang.String,java.text.ParsePosition)>(r3, "UTC", $r11);

        if $z3 == 0 goto label02;

     label01:
        $z6 = 1;

        $z5 = 1;

        goto label03;

     label02:
        $z6 = 0;

        $z5 = 0;

     label03:
        z0 = $z6;

        if $z5 != 0 goto label04;

        $c12 = $c1;

        goto label05;

     label04:
        $c12 = staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r3, $r11, "+- ");

     label05:
        $i17 = (int) -999;

        $i2 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r3, $r11, 2, $i17);

        staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r3, $r11, "\': ");

        $i3 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r3, $r11, 2, 0);

        staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r3, $r11, "\' ");

        $i19 = (int) -999;

        if $i2 == $i19 goto label08;

        $i20 = (int) $c12;

        if $i20 != 45 goto label06;

        $b13 = -1;

        goto label07;

     label06:
        $b13 = 1;

     label07:
        $i7 = $i2 * 3600000;

        $i22 = (int) 60000;

        $i6 = $i3 * $i22;

        $i8 = $i7 + $i6;

        $i9 = $b13 * $i8;

        $l10 = (long) $i9;

        $i11 = staticinvoke <org.apache.pdfbox.util.DateConverter: int restrainTZoffset(long)>($l10);

        virtualinvoke $r12.<java.util.TimeZone: void setRawOffset(int)>($i11);

        virtualinvoke $r12.<java.util.TimeZone: void setID(java.lang.String)>("unknown");

        goto label10;

     label08:
        if z0 != 0 goto label10;

        $i4 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>();

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i4);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r6);

        r10 = $r7;

        $r8 = "GMT";

        $r9 = virtualinvoke $r7.<java.util.TimeZone: java.lang.String getID()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label09;

        return 0;

     label09:
        $i5 = virtualinvoke r3.<java.lang.String: int length()>();

        virtualinvoke $r11.<java.text.ParsePosition: void setIndex(int)>($i5);

     label10:
        staticinvoke <org.apache.pdfbox.util.DateConverter: void adjustTimeZoneNicely(java.util.GregorianCalendar,java.util.TimeZone)>(r4, r10);

        $i14 = virtualinvoke $r11.<java.text.ParsePosition: int getIndex()>();

        virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>($i14);

        return 1;
    }

    public static java.util.GregorianCalendar parseBigEndianDate(java.lang.String, java.text.ParsePosition)
    {
        java.text.ParsePosition r1, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i12, $i13;
        java.lang.String r2;
        java.util.GregorianCalendar $r3;
        char $c11;
        java.lang.IllegalArgumentException $r4;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.text.ParsePosition;

        $r5 = new java.text.ParsePosition;

        $i0 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>();

        specialinvoke $r5.<java.text.ParsePosition: void <init>(int)>($i0);

        $i1 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r2, $r5, 4, 0);

        $i2 = virtualinvoke $r5.<java.text.ParsePosition: int getIndex()>();

        $i3 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>();

        $i4 = 4 + $i3;

        if $i2 == $i4 goto label1;

        return null;

     label1:
        staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r2, $r5, "/- ");

        $i5 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r2, $r5, 2, 1);

        i6 = $i5 - 1;

        staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r2, $r5, "/- ");

        $i7 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r2, $r5, 2, 1);

        staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r2, $r5, " T");

        $i8 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r2, $r5, 2, 0);

        staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r2, $r5, ": ");

        $i9 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r2, $r5, 2, 0);

        staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r2, $r5, ": ");

        $i10 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r2, $r5, 2, 0);

        $c11 = staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r2, $r5, ".");

        $i13 = (int) $c11;

        if $i13 != 46 goto label2;

        staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r2, $r5, 19, 0);

     label2:
        $r3 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.GregorianCalendar newGreg()>();

     label3:
        virtualinvoke $r3.<java.util.GregorianCalendar: void set(int,int,int,int,int,int)>($i1, i6, $i7, $i8, $i9, $i10);

        virtualinvoke $r3.<java.util.GregorianCalendar: long getTimeInMillis()>();

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        return null;

     label6:
        $i12 = virtualinvoke $r5.<java.text.ParsePosition: int getIndex()>();

        virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>($i12);

        staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r2, r1, " ");

        return $r3;

        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
    }

    public static java.util.GregorianCalendar parseSimpleDate(java.lang.String, java.lang.String[], java.text.ParsePosition)
    {
        java.util.GregorianCalendar $r6;
        java.util.Date $r8;
        java.text.ParsePosition $r2, r3;
        java.text.SimpleDateFormat $r4;
        java.lang.String[] r0;
        java.util.Locale $r5;
        int i0, $i1, $i2, i3;
        java.lang.String r1, r7;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.text.ParsePosition;

        i0 = lengthof r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r1 = r0[i3];

        $r2 = new java.text.ParsePosition;

        $i1 = virtualinvoke r3.<java.text.ParsePosition: int getIndex()>();

        specialinvoke $r2.<java.text.ParsePosition: void <init>(int)>($i1);

        $r4 = new java.text.SimpleDateFormat;

        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

        specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(r1, $r5);

        $r6 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.GregorianCalendar newGreg()>();

        virtualinvoke $r4.<java.text.SimpleDateFormat: void setCalendar(java.util.Calendar)>($r6);

        $r8 = virtualinvoke $r4.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r7, $r2);

        if $r8 == null goto label2;

        $i2 = virtualinvoke $r2.<java.text.ParsePosition: int getIndex()>();

        virtualinvoke r3.<java.text.ParsePosition: void setIndex(int)>($i2);

        staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r7, r3, " ");

        return $r6;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    public static java.util.Calendar parseDate(java.lang.String, java.lang.String[], java.text.ParsePosition)
    {
        java.text.ParsePosition $r0, r1;
        java.lang.String[] r5, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        java.lang.String r2;
        boolean $z0, $z1, $z2, $z3;
        java.util.GregorianCalendar $r3, $r4, $r6, r7, r9;
        char $c15;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String[];

        r1 := @parameter2: java.text.ParsePosition;

        i14 = -999999;

        r7 = null;

        $r0 = new java.text.ParsePosition;

        $i0 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>();

        specialinvoke $r0.<java.text.ParsePosition: void <init>(int)>($i0);

        staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r2, $r0, " ");

        $i1 = virtualinvoke $r0.<java.text.ParsePosition: int getIndex()>();

        $r3 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.GregorianCalendar parseBigEndianDate(java.lang.String,java.text.ParsePosition)>(r2, $r0);

        if $r3 == null goto label03;

        $i10 = virtualinvoke $r0.<java.text.ParsePosition: int getIndex()>();

        $i11 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i10 == $i11 goto label01;

        $z2 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean parseTZoffset(java.lang.String,java.util.GregorianCalendar,java.text.ParsePosition)>(r2, $r3, $r0);

        if $z2 == 0 goto label03;

     label01:
        $i12 = virtualinvoke $r0.<java.text.ParsePosition: int getIndex()>();

        $i13 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i12 != $i13 goto label02;

        virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>($i12);

        return $r3;

     label02:
        i14 = $i12;

        r7 = $r3;

     label03:
        virtualinvoke $r0.<java.text.ParsePosition: void setIndex(int)>($i1);

        $c15 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i1);

        $z3 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c15);

        if $z3 == 0 goto label04;

        $r8 = <org.apache.pdfbox.util.DateConverter: java.lang.String[] DIGIT_START_FORMATS>;

        goto label05;

     label04:
        $r8 = <org.apache.pdfbox.util.DateConverter: java.lang.String[] ALPHA_START_FORMATS>;

     label05:
        $r4 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.GregorianCalendar parseSimpleDate(java.lang.String,java.lang.String[],java.text.ParsePosition)>(r2, $r8, $r0);

        r9 = $r4;

        if $r4 == null goto label08;

        $i6 = virtualinvoke $r0.<java.text.ParsePosition: int getIndex()>();

        $i7 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i6 == $i7 goto label06;

        $z1 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean parseTZoffset(java.lang.String,java.util.GregorianCalendar,java.text.ParsePosition)>(r2, $r4, $r0);

        if $z1 == 0 goto label08;

     label06:
        $i8 = virtualinvoke $r0.<java.text.ParsePosition: int getIndex()>();

        $i9 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i8 != $i9 goto label07;

        virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>($i8);

        return $r4;

     label07:
        if $i8 <= i14 goto label08;

        i14 = $i8;

        r7 = $r4;

     label08:
        if r5 == null goto label11;

        virtualinvoke $r0.<java.text.ParsePosition: void setIndex(int)>($i1);

        $r6 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.GregorianCalendar parseSimpleDate(java.lang.String,java.lang.String[],java.text.ParsePosition)>(r2, r5, $r0);

        r9 = $r6;

        if $r6 == null goto label11;

        $i2 = virtualinvoke $r0.<java.text.ParsePosition: int getIndex()>();

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i2 == $i3 goto label09;

        $z0 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean parseTZoffset(java.lang.String,java.util.GregorianCalendar,java.text.ParsePosition)>(r2, $r6, $r0);

        if $z0 == 0 goto label11;

     label09:
        $i4 = virtualinvoke $r0.<java.text.ParsePosition: int getIndex()>();

        $i5 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i4 == $i5 goto label10;

        if r7 == null goto label11;

        if $i4 <= i14 goto label11;

     label10:
        virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>($i4);

        return $r6;

     label11:
        if r7 == null goto label12;

        virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>(i14);

        return r7;

     label12:
        return r9;
    }

    public static java.util.Calendar toCalendar(org.apache.pdfbox.cos.COSString) throws java.io.IOException
    {
        java.lang.String $r1;
        java.util.Calendar $r2;
        org.apache.pdfbox.cos.COSString r0;

        r0 := @parameter0: org.apache.pdfbox.cos.COSString;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>();

        $r2 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.Calendar toCalendar(java.lang.String)>($r1);

        return $r2;
    }

    public static java.util.Calendar toCalendar(java.lang.String) throws java.io.IOException
    {
        java.io.IOException $r3;
        java.util.Calendar $r2;
        int $i0;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String r0, $r1, $r7;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r1 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.Calendar toCalendar(java.lang.String,java.lang.String[])>(r0, null);

        if $r2 == null goto label3;

        $i0 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(1);

        if $i0 != 999 goto label3;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error converting date: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label3:
        return $r2;
    }

    public static java.util.Calendar toCalendar(java.lang.String, java.lang.String[])
    {
        java.util.GregorianCalendar $r4;
        java.text.ParsePosition $r0;
        java.lang.String[] r2;
        java.util.Calendar $r3, r5;
        int $i0, $i1;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        $r0 = new java.text.ParsePosition;

        specialinvoke $r0.<java.text.ParsePosition: void <init>(int)>(0);

        staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r1, $r0, " ");

        staticinvoke <org.apache.pdfbox.util.DateConverter: boolean skipString(java.lang.String,java.lang.String,java.text.ParsePosition)>(r1, "D:", $r0);

        $r3 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.Calendar parseDate(java.lang.String,java.lang.String[],java.text.ParsePosition)>(r1, r2, $r0);

        r5 = $r3;

        if $r3 == null goto label1;

        $i0 = virtualinvoke $r0.<java.text.ParsePosition: int getIndex()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == $i1 goto label2;

     label1:
        $r4 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.GregorianCalendar newGreg()>();

        r5 = $r4;

        virtualinvoke $r4.<java.util.Calendar: void set(int,int,int,int,int,int)>(999, 0, 1, 0, 0, 0);

     label2:
        return r5;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1;

        <org.apache.pdfbox.util.DateConverter: int INVALID_YEAR> = 999;

        <org.apache.pdfbox.util.DateConverter: int DAY> = 86400000;

        <org.apache.pdfbox.util.DateConverter: int HALF_DAY> = 43200000;

        <org.apache.pdfbox.util.DateConverter: int MILLIS_PER_HOUR> = 3600000;

        <org.apache.pdfbox.util.DateConverter: int MILLIS_PER_MINUTE> = 60000;

        <org.apache.pdfbox.util.DateConverter: int SECONDS_PER_MINUTE> = 60;

        <org.apache.pdfbox.util.DateConverter: int MINUTES_PER_HOUR> = 60;

        $r0 = newarray (java.lang.String)[7];

        $r0[0] = "EEEE, dd MMM yy hh:mm:ss a";

        $r0[1] = "EEEE, MMM dd, yy hh:mm:ss a";

        $r0[2] = "EEEE, MMM dd, yy \'at\' hh:mma";

        $r0[3] = "EEEE, MMM dd, yy";

        $r0[4] = "EEEE MMM dd, yy HH:mm:ss";

        $r0[5] = "EEEE MMM dd HH:mm:ss z yy";

        $r0[6] = "EEEE MMM dd HH:mm:ss yy";

        <org.apache.pdfbox.util.DateConverter: java.lang.String[] ALPHA_START_FORMATS> = $r0;

        $r1 = newarray (java.lang.String)[8];

        $r1[0] = "dd MMM yy HH:mm:ss";

        $r1[1] = "dd MMM yy HH:mm";

        $r1[2] = "yyyy MMM d";

        $r1[3] = "yyyymmddhh:mm:ss";

        $r1[4] = "H:m M/d/yy";

        $r1[5] = "M/d/yy HH:mm:ss";

        $r1[6] = "M/d/yy HH:mm";

        $r1[7] = "M/d/yy";

        <org.apache.pdfbox.util.DateConverter: java.lang.String[] DIGIT_START_FORMATS> = $r1;

        return;
    }
}
