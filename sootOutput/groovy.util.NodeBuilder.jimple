public class groovy.util.NodeBuilder extends groovy.util.BuilderSupport
{

    public void <init>()
    {
        groovy.util.NodeBuilder r0;

        r0 := @this: groovy.util.NodeBuilder;

        specialinvoke r0.<groovy.util.BuilderSupport: void <init>()>();

        return;
    }

    public static groovy.util.NodeBuilder newInstance()
    {
        groovy.util.NodeBuilder $r0;

        $r0 = new groovy.util.NodeBuilder;

        specialinvoke $r0.<groovy.util.NodeBuilder: void <init>()>();

        return $r0;
    }

    protected void setParent(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2;
        groovy.util.NodeBuilder r0;

        r0 := @this: groovy.util.NodeBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    protected java.lang.Object createNode(java.lang.Object)
    {
        groovy.util.NodeBuilder r1;
        java.lang.Object r3;
        groovy.util.Node $r0, $r2;
        java.util.ArrayList $r4;

        r1 := @this: groovy.util.NodeBuilder;

        r3 := @parameter0: java.lang.Object;

        $r0 = new groovy.util.Node;

        $r2 = virtualinvoke r1.<groovy.util.NodeBuilder: groovy.util.Node getCurrentNode()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        specialinvoke $r0.<groovy.util.Node: void <init>(groovy.util.Node,java.lang.Object,java.lang.Object)>($r2, r3, $r4);

        return $r0;
    }

    protected java.lang.Object createNode(java.lang.Object, java.lang.Object)
    {
        groovy.util.NodeBuilder r1;
        java.lang.Object r3, r4;
        groovy.util.Node $r0, $r2;

        r1 := @this: groovy.util.NodeBuilder;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r0 = new groovy.util.Node;

        $r2 = virtualinvoke r1.<groovy.util.NodeBuilder: groovy.util.Node getCurrentNode()>();

        specialinvoke $r0.<groovy.util.Node: void <init>(groovy.util.Node,java.lang.Object,java.lang.Object)>($r2, r3, r4);

        return $r0;
    }

    protected java.lang.Object createNode(java.lang.Object, java.util.Map)
    {
        groovy.util.NodeBuilder r1;
        java.util.Map r4;
        java.lang.Object r3;
        groovy.util.Node $r0, $r2;
        java.util.ArrayList $r5;

        r1 := @this: groovy.util.NodeBuilder;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.util.Map;

        $r0 = new groovy.util.Node;

        $r2 = virtualinvoke r1.<groovy.util.NodeBuilder: groovy.util.Node getCurrentNode()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        specialinvoke $r0.<groovy.util.Node: void <init>(groovy.util.Node,java.lang.Object,java.util.Map,java.lang.Object)>($r2, r3, r4, $r5);

        return $r0;
    }

    protected java.lang.Object createNode(java.lang.Object, java.util.Map, java.lang.Object)
    {
        groovy.util.NodeBuilder r1;
        java.util.Map r4;
        java.lang.Object r3, r5;
        groovy.util.Node $r0, $r2;

        r1 := @this: groovy.util.NodeBuilder;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.util.Map;

        r5 := @parameter2: java.lang.Object;

        $r0 = new groovy.util.Node;

        $r2 = virtualinvoke r1.<groovy.util.NodeBuilder: groovy.util.Node getCurrentNode()>();

        specialinvoke $r0.<groovy.util.Node: void <init>(groovy.util.Node,java.lang.Object,java.util.Map,java.lang.Object)>($r2, r3, r4, r5);

        return $r0;
    }

    protected groovy.util.Node getCurrentNode()
    {
        java.lang.Object $r1;
        groovy.util.Node $r2;
        groovy.util.NodeBuilder r0;

        r0 := @this: groovy.util.NodeBuilder;

        $r1 = virtualinvoke r0.<groovy.util.NodeBuilder: java.lang.Object getCurrent()>();

        $r2 = (groovy.util.Node) $r1;

        return $r2;
    }
}
