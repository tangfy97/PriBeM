public class org.apache.poi.poifs.storage.HeaderBlockWriter extends java.lang.Object implements org.apache.poi.poifs.storage.HeaderBlockConstants, org.apache.poi.poifs.storage.BlockWritable
{
    private final org.apache.poi.poifs.storage.HeaderBlock _header_block;

    public void <init>(org.apache.poi.poifs.common.POIFSBigBlockSize)
    {
        org.apache.poi.poifs.storage.HeaderBlock $r1;
        org.apache.poi.poifs.common.POIFSBigBlockSize r2;
        org.apache.poi.poifs.storage.HeaderBlockWriter r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlockWriter;

        r2 := @parameter0: org.apache.poi.poifs.common.POIFSBigBlockSize;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.poi.poifs.storage.HeaderBlock;

        specialinvoke $r1.<org.apache.poi.poifs.storage.HeaderBlock: void <init>(org.apache.poi.poifs.common.POIFSBigBlockSize)>(r2);

        r0.<org.apache.poi.poifs.storage.HeaderBlockWriter: org.apache.poi.poifs.storage.HeaderBlock _header_block> = $r1;

        return;
    }

    public void <init>(org.apache.poi.poifs.storage.HeaderBlock)
    {
        org.apache.poi.poifs.storage.HeaderBlock r1;
        org.apache.poi.poifs.storage.HeaderBlockWriter r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlockWriter;

        r1 := @parameter0: org.apache.poi.poifs.storage.HeaderBlock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.poifs.storage.HeaderBlockWriter: org.apache.poi.poifs.storage.HeaderBlock _header_block> = r1;

        return;
    }

    public org.apache.poi.poifs.storage.BATBlock[] setBATBlocks(int, int)
    {
        org.apache.poi.poifs.storage.BATBlock[] r11;
        int[] r4, $r6, r9;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, $i13;
        org.apache.poi.poifs.storage.HeaderBlock $r1, $r3, $r5, $r7, $r8, $r10;
        org.apache.poi.poifs.storage.HeaderBlockWriter r0;
        org.apache.poi.poifs.common.POIFSBigBlockSize $r2;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlockWriter;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        $r1 = r0.<org.apache.poi.poifs.storage.HeaderBlockWriter: org.apache.poi.poifs.storage.HeaderBlock _header_block>;

        $r2 = virtualinvoke $r1.<org.apache.poi.poifs.storage.HeaderBlock: org.apache.poi.poifs.common.POIFSBigBlockSize getBigBlockSize()>();

        $r3 = r0.<org.apache.poi.poifs.storage.HeaderBlockWriter: org.apache.poi.poifs.storage.HeaderBlock _header_block>;

        virtualinvoke $r3.<org.apache.poi.poifs.storage.HeaderBlock: void setBATCount(int)>(i0);

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(i0, 109);

        r4 = newarray (int)[$i1];

        i9 = 0;

     label1:
        if i9 >= $i1 goto label2;

        $i8 = i3 + i9;

        r4[i9] = $i8;

        i9 = i9 + 1;

        goto label1;

     label2:
        $r5 = r0.<org.apache.poi.poifs.storage.HeaderBlockWriter: org.apache.poi.poifs.storage.HeaderBlock _header_block>;

        virtualinvoke $r5.<org.apache.poi.poifs.storage.HeaderBlock: void setBATArray(int[])>(r4);

        if i0 <= 109 goto label5;

        i10 = i0 - 109;

        r9 = newarray (int)[i10];

        i11 = 0;

     label3:
        if i11 >= i10 goto label4;

        $i6 = i3 + i11;

        $i7 = $i6 + 109;

        r9[i11] = $i7;

        i11 = i11 + 1;

        goto label3;

     label4:
        $i4 = i3 + i0;

        r11 = staticinvoke <org.apache.poi.poifs.storage.BATBlock: org.apache.poi.poifs.storage.BATBlock[] createXBATBlocks(org.apache.poi.poifs.common.POIFSBigBlockSize,int[],int)>($r2, r9, $i4);

        $r10 = r0.<org.apache.poi.poifs.storage.HeaderBlockWriter: org.apache.poi.poifs.storage.HeaderBlock _header_block>;

        $i5 = i3 + i0;

        virtualinvoke $r10.<org.apache.poi.poifs.storage.HeaderBlock: void setXBATStart(int)>($i5);

        goto label6;

     label5:
        $r6 = newarray (int)[0];

        r11 = staticinvoke <org.apache.poi.poifs.storage.BATBlock: org.apache.poi.poifs.storage.BATBlock[] createXBATBlocks(org.apache.poi.poifs.common.POIFSBigBlockSize,int[],int)>($r2, $r6, 0);

        $r7 = r0.<org.apache.poi.poifs.storage.HeaderBlockWriter: org.apache.poi.poifs.storage.HeaderBlock _header_block>;

        $i13 = (int) -2;

        virtualinvoke $r7.<org.apache.poi.poifs.storage.HeaderBlock: void setXBATStart(int)>($i13);

     label6:
        $r8 = r0.<org.apache.poi.poifs.storage.HeaderBlockWriter: org.apache.poi.poifs.storage.HeaderBlock _header_block>;

        $i2 = lengthof r11;

        virtualinvoke $r8.<org.apache.poi.poifs.storage.HeaderBlock: void setXBATCount(int)>($i2);

        return r11;
    }

    public void setPropertyStart(int)
    {
        int i0;
        org.apache.poi.poifs.storage.HeaderBlock $r1;
        org.apache.poi.poifs.storage.HeaderBlockWriter r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlockWriter;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.poifs.storage.HeaderBlockWriter: org.apache.poi.poifs.storage.HeaderBlock _header_block>;

        virtualinvoke $r1.<org.apache.poi.poifs.storage.HeaderBlock: void setPropertyStart(int)>(i0);

        return;
    }

    public void setSBATStart(int)
    {
        int i0;
        org.apache.poi.poifs.storage.HeaderBlock $r1;
        org.apache.poi.poifs.storage.HeaderBlockWriter r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlockWriter;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.poifs.storage.HeaderBlockWriter: org.apache.poi.poifs.storage.HeaderBlock _header_block>;

        virtualinvoke $r1.<org.apache.poi.poifs.storage.HeaderBlock: void setSBATStart(int)>(i0);

        return;
    }

    public void setSBATBlockCount(int)
    {
        int i0;
        org.apache.poi.poifs.storage.HeaderBlock $r1;
        org.apache.poi.poifs.storage.HeaderBlockWriter r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlockWriter;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.poifs.storage.HeaderBlockWriter: org.apache.poi.poifs.storage.HeaderBlock _header_block>;

        virtualinvoke $r1.<org.apache.poi.poifs.storage.HeaderBlock: void setSBATBlockCount(int)>(i0);

        return;
    }

    static int calculateXBATStorageRequirements(org.apache.poi.poifs.common.POIFSBigBlockSize, int)
    {
        org.apache.poi.poifs.common.POIFSBigBlockSize r0;
        int i0, $i1, $i2;

        r0 := @parameter0: org.apache.poi.poifs.common.POIFSBigBlockSize;

        i0 := @parameter1: int;

        if i0 <= 109 goto label1;

        $i1 = i0 - 109;

        $i2 = staticinvoke <org.apache.poi.poifs.storage.BATBlock: int calculateXBATStorageRequirements(org.apache.poi.poifs.common.POIFSBigBlockSize,int)>(r0, $i1);

        goto label2;

     label1:
        $i2 = 0;

     label2:
        return $i2;
    }

    public void writeBlocks(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        org.apache.poi.poifs.storage.HeaderBlock $r2;
        org.apache.poi.poifs.storage.HeaderBlockWriter r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlockWriter;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = r0.<org.apache.poi.poifs.storage.HeaderBlockWriter: org.apache.poi.poifs.storage.HeaderBlock _header_block>;

        virtualinvoke $r2.<org.apache.poi.poifs.storage.HeaderBlock: void writeData(java.io.OutputStream)>(r1);

        return;
    }

    public void writeBlock(java.nio.ByteBuffer) throws java.io.IOException
    {
        byte[] $r6;
        java.io.ByteArrayOutputStream $r0;
        org.apache.poi.poifs.storage.HeaderBlockWriter r1;
        java.nio.ByteBuffer r5;
        org.apache.poi.poifs.common.POIFSBigBlockSize $r3;
        int $i0;
        org.apache.poi.poifs.storage.HeaderBlock $r2, $r4;

        r1 := @this: org.apache.poi.poifs.storage.HeaderBlockWriter;

        r5 := @parameter0: java.nio.ByteBuffer;

        $r0 = new java.io.ByteArrayOutputStream;

        $r2 = r1.<org.apache.poi.poifs.storage.HeaderBlockWriter: org.apache.poi.poifs.storage.HeaderBlock _header_block>;

        $r3 = virtualinvoke $r2.<org.apache.poi.poifs.storage.HeaderBlock: org.apache.poi.poifs.common.POIFSBigBlockSize getBigBlockSize()>();

        $i0 = virtualinvoke $r3.<org.apache.poi.poifs.common.POIFSBigBlockSize: int getBigBlockSize()>();

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        $r4 = r1.<org.apache.poi.poifs.storage.HeaderBlockWriter: org.apache.poi.poifs.storage.HeaderBlock _header_block>;

        virtualinvoke $r4.<org.apache.poi.poifs.storage.HeaderBlock: void writeData(java.io.OutputStream)>($r0);

        $r6 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r6);

        return;
    }
}
