public class org.springframework.jmx.export.naming.KeyNamingStrategy extends java.lang.Object implements org.springframework.jmx.export.naming.ObjectNamingStrategy, org.springframework.beans.factory.InitializingBean
{
    protected final org.apache.commons.logging.Log logger;
    private java.util.Properties mappings;
    private org.springframework.core.io.Resource[] mappingLocations;
    private java.util.Properties mergedMappings;

    public void <init>()
    {
        org.springframework.jmx.export.naming.KeyNamingStrategy r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;

        r0 := @this: org.springframework.jmx.export.naming.KeyNamingStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.jmx.export.naming.KeyNamingStrategy: org.apache.commons.logging.Log logger> = $r2;

        return;
    }

    public void setMappings(java.util.Properties)
    {
        org.springframework.jmx.export.naming.KeyNamingStrategy r0;
        java.util.Properties r1;

        r0 := @this: org.springframework.jmx.export.naming.KeyNamingStrategy;

        r1 := @parameter0: java.util.Properties;

        r0.<org.springframework.jmx.export.naming.KeyNamingStrategy: java.util.Properties mappings> = r1;

        return;
    }

    public void setMappingLocation(org.springframework.core.io.Resource)
    {
        org.springframework.core.io.Resource[] $r1;
        org.springframework.jmx.export.naming.KeyNamingStrategy r0;
        org.springframework.core.io.Resource r2;

        r0 := @this: org.springframework.jmx.export.naming.KeyNamingStrategy;

        r2 := @parameter0: org.springframework.core.io.Resource;

        $r1 = newarray (org.springframework.core.io.Resource)[1];

        $r1[0] = r2;

        r0.<org.springframework.jmx.export.naming.KeyNamingStrategy: org.springframework.core.io.Resource[] mappingLocations> = $r1;

        return;
    }

    public void setMappingLocations(org.springframework.core.io.Resource[])
    {
        org.springframework.core.io.Resource[] r1;
        org.springframework.jmx.export.naming.KeyNamingStrategy r0;

        r0 := @this: org.springframework.jmx.export.naming.KeyNamingStrategy;

        r1 := @parameter0: org.springframework.core.io.Resource[];

        r0.<org.springframework.jmx.export.naming.KeyNamingStrategy: org.springframework.core.io.Resource[] mappingLocations> = r1;

        return;
    }

    public void afterPropertiesSet() throws java.io.IOException
    {
        int i0, $i1;
        java.lang.String $r12;
        org.springframework.core.io.Resource r6;
        boolean $z0;
        java.util.Properties $r1, $r2, $r3, $r8;
        org.springframework.jmx.export.naming.KeyNamingStrategy r0;
        org.springframework.core.io.Resource[] $r4, $r5, $r13;
        org.apache.commons.logging.Log $r7, $r10;
        java.lang.StringBuilder $r9, $r11;

        r0 := @this: org.springframework.jmx.export.naming.KeyNamingStrategy;

        $r1 = new java.util.Properties;

        specialinvoke $r1.<java.util.Properties: void <init>()>();

        r0.<org.springframework.jmx.export.naming.KeyNamingStrategy: java.util.Properties mergedMappings> = $r1;

        $r3 = r0.<org.springframework.jmx.export.naming.KeyNamingStrategy: java.util.Properties mappings>;

        $r2 = r0.<org.springframework.jmx.export.naming.KeyNamingStrategy: java.util.Properties mergedMappings>;

        staticinvoke <org.springframework.util.CollectionUtils: void mergePropertiesIntoMap(java.util.Properties,java.util.Map)>($r3, $r2);

        $r4 = r0.<org.springframework.jmx.export.naming.KeyNamingStrategy: org.springframework.core.io.Resource[] mappingLocations>;

        if $r4 == null goto label4;

        i0 = 0;

        goto label3;

     label1:
        $r5 = r0.<org.springframework.jmx.export.naming.KeyNamingStrategy: org.springframework.core.io.Resource[] mappingLocations>;

        r6 = $r5[i0];

        $r7 = r0.<org.springframework.jmx.export.naming.KeyNamingStrategy: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();

        if $z0 == 0 goto label2;

        $r10 = r0.<org.springframework.jmx.export.naming.KeyNamingStrategy: org.apache.commons.logging.Log logger>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Loading JMX object name mappings file from ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r12);

     label2:
        $r8 = r0.<org.springframework.jmx.export.naming.KeyNamingStrategy: java.util.Properties mergedMappings>;

        staticinvoke <org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.Resource)>($r8, r6);

        i0 = i0 + 1;

     label3:
        $r13 = r0.<org.springframework.jmx.export.naming.KeyNamingStrategy: org.springframework.core.io.Resource[] mappingLocations>;

        $i1 = lengthof $r13;

        if i0 < $i1 goto label1;

     label4:
        return;
    }

    public javax.management.ObjectName getObjectName(java.lang.Object, java.lang.String) throws javax.management.MalformedObjectNameException
    {
        java.util.Properties $r1, $r4;
        org.springframework.jmx.export.naming.KeyNamingStrategy r0;
        java.lang.Object r5;
        javax.management.ObjectName $r2;
        java.lang.String r3, r6;

        r0 := @this: org.springframework.jmx.export.naming.KeyNamingStrategy;

        r5 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r6 = null;

        $r1 = r0.<org.springframework.jmx.export.naming.KeyNamingStrategy: java.util.Properties mergedMappings>;

        if $r1 == null goto label1;

        $r4 = r0.<org.springframework.jmx.export.naming.KeyNamingStrategy: java.util.Properties mergedMappings>;

        r6 = virtualinvoke $r4.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r3);

     label1:
        if r6 != null goto label2;

        r6 = r3;

     label2:
        $r2 = staticinvoke <org.springframework.jmx.support.ObjectNameManager: javax.management.ObjectName getInstance(java.lang.String)>(r6);

        return $r2;
    }
}
