public final class org.apache.cxf.bus.extension.ExtensionRegistry extends java.lang.Object
{
    private static java.util.concurrent.ConcurrentMap extensions;

    private void <init>()
    {
        org.apache.cxf.bus.extension.ExtensionRegistry r0;

        r0 := @this: org.apache.cxf.bus.extension.ExtensionRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Map getRegisteredExtensions()
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.util.HashMap $r0;
        java.util.concurrent.ConcurrentMap $r1, $r2;
        org.apache.cxf.bus.extension.Extension $r9, $r10;
        int $i0;
        java.lang.Object $r5, $r7, $r8;
        boolean $z0;

        $r0 = new java.util.HashMap;

        $r1 = <org.apache.cxf.bus.extension.ExtensionRegistry: java.util.concurrent.ConcurrentMap extensions>;

        $i0 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: int size()>();

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>($i0);

        $r2 = <org.apache.cxf.bus.extension.ExtensionRegistry: java.util.concurrent.ConcurrentMap extensions>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (org.apache.cxf.bus.extension.Extension) $r8;

        $r10 = virtualinvoke $r9.<org.apache.cxf.bus.extension.Extension: org.apache.cxf.bus.extension.Extension cloneNoObject()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r10);

        goto label1;

     label2:
        return $r0;
    }

    public static void removeExtensions(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator $r1;
        org.apache.cxf.bus.extension.Extension r3;
        java.lang.Object $r2;
        java.lang.String $r5;
        boolean $z0;
        java.util.concurrent.ConcurrentMap $r4;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.cxf.bus.extension.Extension) $r2;

        $r4 = <org.apache.cxf.bus.extension.ExtensionRegistry: java.util.concurrent.ConcurrentMap extensions>;

        $r5 = virtualinvoke r3.<org.apache.cxf.bus.extension.Extension: java.lang.String getName()>();

        interfaceinvoke $r4.<java.util.concurrent.ConcurrentMap: boolean remove(java.lang.Object,java.lang.Object)>($r5, r3);

        goto label1;

     label2:
        return;
    }

    public static void addExtensions(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator $r1;
        org.apache.cxf.bus.extension.Extension r3;
        java.lang.Object $r2;
        java.lang.String $r5;
        boolean $z0;
        java.util.concurrent.ConcurrentMap $r4;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.cxf.bus.extension.Extension) $r2;

        $r4 = <org.apache.cxf.bus.extension.ExtensionRegistry: java.util.concurrent.ConcurrentMap extensions>;

        $r5 = virtualinvoke r3.<org.apache.cxf.bus.extension.Extension: java.lang.String getName()>();

        interfaceinvoke $r4.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r5, r3);

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(16, 0.75F, 4);

        <org.apache.cxf.bus.extension.ExtensionRegistry: java.util.concurrent.ConcurrentMap extensions> = $r0;

        return;
    }
}
