public class org.springframework.aop.aspectj.AspectJWeaverMessageHandler extends java.lang.Object implements org.aspectj.bridge.IMessageHandler
{
    private static final java.lang.String AJ_ID;
    private static final org.apache.commons.logging.Log LOGGER;

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        <org.springframework.aop.aspectj.AspectJWeaverMessageHandler: java.lang.String AJ_ID> = "[AspectJ] ";

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)>("AspectJ Weaver");

        <org.springframework.aop.aspectj.AspectJWeaverMessageHandler: org.apache.commons.logging.Log LOGGER> = $r0;

        return;
    }

    public void <init>()
    {
        org.springframework.aop.aspectj.AspectJWeaverMessageHandler r0;

        r0 := @this: org.springframework.aop.aspectj.AspectJWeaverMessageHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean handleMessage(org.aspectj.bridge.IMessage) throws org.aspectj.bridge.AbortException
    {
        org.springframework.aop.aspectj.AspectJWeaverMessageHandler r9;
        org.aspectj.bridge.IMessage r0;
        java.lang.String $r11, $r14, $r17, $r20, $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.commons.logging.Log $r2, $r4, $r5, $r6, $r7, $r10, $r13, $r16, $r19, $r22, $r24;
        org.aspectj.bridge.IMessage$Kind $r1, $r3, $r8, $r12, $r15, $r18, $r21;

        r9 := @this: org.springframework.aop.aspectj.AspectJWeaverMessageHandler;

        r0 := @parameter0: org.aspectj.bridge.IMessage;

        $r1 = interfaceinvoke r0.<org.aspectj.bridge.IMessage: org.aspectj.bridge.IMessage$Kind getKind()>();

        $r2 = <org.springframework.aop.aspectj.AspectJWeaverMessageHandler: org.apache.commons.logging.Log LOGGER>;

        $z0 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 != 0 goto label1;

        $r24 = <org.springframework.aop.aspectj.AspectJWeaverMessageHandler: org.apache.commons.logging.Log LOGGER>;

        $z5 = interfaceinvoke $r24.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        if $z5 == 0 goto label2;

     label1:
        $r3 = <org.aspectj.bridge.IMessage: org.aspectj.bridge.IMessage$Kind DEBUG>;

        if $r1 != $r3 goto label2;

        $r22 = <org.springframework.aop.aspectj.AspectJWeaverMessageHandler: org.apache.commons.logging.Log LOGGER>;

        $r23 = specialinvoke r9.<org.springframework.aop.aspectj.AspectJWeaverMessageHandler: java.lang.String makeMessageFor(org.aspectj.bridge.IMessage)>(r0);

        interfaceinvoke $r22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r23);

        return 1;

     label2:
        $r4 = <org.springframework.aop.aspectj.AspectJWeaverMessageHandler: org.apache.commons.logging.Log LOGGER>;

        $z1 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();

        if $z1 == 0 goto label4;

        $r18 = <org.aspectj.bridge.IMessage: org.aspectj.bridge.IMessage$Kind INFO>;

        if $r1 == $r18 goto label3;

        $r21 = <org.aspectj.bridge.IMessage: org.aspectj.bridge.IMessage$Kind WEAVEINFO>;

        if $r1 != $r21 goto label4;

     label3:
        $r19 = <org.springframework.aop.aspectj.AspectJWeaverMessageHandler: org.apache.commons.logging.Log LOGGER>;

        $r20 = specialinvoke r9.<org.springframework.aop.aspectj.AspectJWeaverMessageHandler: java.lang.String makeMessageFor(org.aspectj.bridge.IMessage)>(r0);

        interfaceinvoke $r19.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r20);

        return 1;

     label4:
        $r5 = <org.springframework.aop.aspectj.AspectJWeaverMessageHandler: org.apache.commons.logging.Log LOGGER>;

        $z2 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z2 == 0 goto label5;

        $r15 = <org.aspectj.bridge.IMessage: org.aspectj.bridge.IMessage$Kind WARNING>;

        if $r1 != $r15 goto label5;

        $r16 = <org.springframework.aop.aspectj.AspectJWeaverMessageHandler: org.apache.commons.logging.Log LOGGER>;

        $r17 = specialinvoke r9.<org.springframework.aop.aspectj.AspectJWeaverMessageHandler: java.lang.String makeMessageFor(org.aspectj.bridge.IMessage)>(r0);

        interfaceinvoke $r16.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r17);

        return 1;

     label5:
        $r6 = <org.springframework.aop.aspectj.AspectJWeaverMessageHandler: org.apache.commons.logging.Log LOGGER>;

        $z3 = interfaceinvoke $r6.<org.apache.commons.logging.Log: boolean isErrorEnabled()>();

        if $z3 == 0 goto label6;

        $r12 = <org.aspectj.bridge.IMessage: org.aspectj.bridge.IMessage$Kind ERROR>;

        if $r1 != $r12 goto label6;

        $r13 = <org.springframework.aop.aspectj.AspectJWeaverMessageHandler: org.apache.commons.logging.Log LOGGER>;

        $r14 = specialinvoke r9.<org.springframework.aop.aspectj.AspectJWeaverMessageHandler: java.lang.String makeMessageFor(org.aspectj.bridge.IMessage)>(r0);

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r14);

        return 1;

     label6:
        $r7 = <org.springframework.aop.aspectj.AspectJWeaverMessageHandler: org.apache.commons.logging.Log LOGGER>;

        $z4 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isFatalEnabled()>();

        if $z4 == 0 goto label7;

        $r8 = <org.aspectj.bridge.IMessage: org.aspectj.bridge.IMessage$Kind ABORT>;

        if $r1 != $r8 goto label7;

        $r10 = <org.springframework.aop.aspectj.AspectJWeaverMessageHandler: org.apache.commons.logging.Log LOGGER>;

        $r11 = specialinvoke r9.<org.springframework.aop.aspectj.AspectJWeaverMessageHandler: java.lang.String makeMessageFor(org.aspectj.bridge.IMessage)>(r0);

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void fatal(java.lang.Object)>($r11);

        return 1;

     label7:
        return 0;
    }

    private java.lang.String makeMessageFor(org.aspectj.bridge.IMessage)
    {
        org.springframework.aop.aspectj.AspectJWeaverMessageHandler r5;
        org.aspectj.bridge.IMessage r1;
        java.lang.StringBuilder $r0, $r3;
        java.lang.String $r2, $r4;

        r5 := @this: org.springframework.aop.aspectj.AspectJWeaverMessageHandler;

        r1 := @parameter0: org.aspectj.bridge.IMessage;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("[AspectJ] ");

        $r2 = interfaceinvoke r1.<org.aspectj.bridge.IMessage: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public boolean isIgnoring(org.aspectj.bridge.IMessage$Kind)
    {
        org.springframework.aop.aspectj.AspectJWeaverMessageHandler r0;
        org.aspectj.bridge.IMessage$Kind r1;

        r0 := @this: org.springframework.aop.aspectj.AspectJWeaverMessageHandler;

        r1 := @parameter0: org.aspectj.bridge.IMessage$Kind;

        return 0;
    }

    public void dontIgnore(org.aspectj.bridge.IMessage$Kind)
    {
        org.springframework.aop.aspectj.AspectJWeaverMessageHandler r0;
        org.aspectj.bridge.IMessage$Kind r1;

        r0 := @this: org.springframework.aop.aspectj.AspectJWeaverMessageHandler;

        r1 := @parameter0: org.aspectj.bridge.IMessage$Kind;

        return;
    }

    public void ignore(org.aspectj.bridge.IMessage$Kind)
    {
        org.springframework.aop.aspectj.AspectJWeaverMessageHandler r0;
        org.aspectj.bridge.IMessage$Kind r1;

        r0 := @this: org.springframework.aop.aspectj.AspectJWeaverMessageHandler;

        r1 := @parameter0: org.aspectj.bridge.IMessage$Kind;

        return;
    }
}
