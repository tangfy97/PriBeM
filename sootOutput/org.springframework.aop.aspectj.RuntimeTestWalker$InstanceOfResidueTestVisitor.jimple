abstract class org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor extends org.springframework.aop.aspectj.RuntimeTestWalker$TestVisitorAdapter
{
    private java.lang.Class matchClass;
    private boolean matches;
    private int matchVarType;

    public void <init>(java.lang.Class, boolean, int)
    {
        int i0;
        java.lang.Class r1;
        org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor r0;
        boolean z0;

        r0 := @this: org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor;

        r1 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        specialinvoke r0.<org.springframework.aop.aspectj.RuntimeTestWalker$TestVisitorAdapter: void <init>(org.springframework.aop.aspectj.RuntimeTestWalker$TestVisitorAdapter)>(null);

        r0.<org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor: java.lang.Class matchClass> = r1;

        r0.<org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor: boolean matches> = z0;

        r0.<org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor: int matchVarType> = i0;

        return;
    }

    public boolean instanceOfMatches(org.aspectj.weaver.ast.Test)
    {
        org.aspectj.weaver.ast.Test r0;
        org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor r1;
        boolean $z0;

        r1 := @this: org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor;

        r0 := @parameter0: org.aspectj.weaver.ast.Test;

        virtualinvoke r0.<org.aspectj.weaver.ast.Test: void accept(org.aspectj.weaver.ast.ITestVisitor)>(r1);

        $z0 = r1.<org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor: boolean matches>;

        return $z0;
    }

    public void visit(org.aspectj.weaver.ast.Instanceof)
    {
        org.aspectj.weaver.ast.Var $r4;
        org.aspectj.weaver.UnresolvedType $r1;
        org.aspectj.weaver.ast.Instanceof r0;
        org.aspectj.weaver.reflect.ReflectionVar $r5;
        int $i0, $i1;
        java.lang.Class $r7, $r9, $r10;
        java.lang.ClassNotFoundException $r11;
        java.lang.String $r6;
        java.lang.ClassLoader $r8;
        org.aspectj.weaver.ResolvedType r2;
        org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor r3;
        boolean $z0;

        r3 := @this: org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor;

        r0 := @parameter0: org.aspectj.weaver.ast.Instanceof;

        $r1 = virtualinvoke r0.<org.aspectj.weaver.ast.Instanceof: org.aspectj.weaver.UnresolvedType getType()>();

        r2 = (org.aspectj.weaver.ResolvedType) $r1;

        $r4 = virtualinvoke r0.<org.aspectj.weaver.ast.Instanceof: org.aspectj.weaver.ast.Var getVar()>();

        $r5 = (org.aspectj.weaver.reflect.ReflectionVar) $r4;

        $i0 = virtualinvoke r3.<org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor: int getVarType(org.aspectj.weaver.reflect.ReflectionVar)>($r5);

        $i1 = r3.<org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor: int matchVarType>;

        if $i0 == $i1 goto label1;

        return;

     label1:
        $r6 = virtualinvoke r2.<org.aspectj.weaver.ResolvedType: java.lang.String getName()>();

        $r7 = r3.<org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor: java.lang.Class matchClass>;

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r9 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>($r6, $r8);

        $r10 = r3.<org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor: java.lang.Class matchClass>;

        $z0 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r10);

        r3.<org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor: boolean matches> = $z0;

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        r3.<org.springframework.aop.aspectj.RuntimeTestWalker$InstanceOfResidueTestVisitor: boolean matches> = 0;

     label4:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
