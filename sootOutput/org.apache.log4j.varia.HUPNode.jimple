class org.apache.log4j.varia.HUPNode extends java.lang.Object implements java.lang.Runnable
{
    java.net.Socket socket;
    java.io.DataInputStream dis;
    java.io.DataOutputStream dos;
    org.apache.log4j.varia.ExternallyRolledFileAppender er;

    public void <init>(java.net.Socket, org.apache.log4j.varia.ExternallyRolledFileAppender)
    {
        java.io.OutputStream $r6;
        java.io.DataInputStream $r3;
        java.net.Socket r1;
        java.io.IOException $r8;
        java.lang.RuntimeException $r7;
        java.io.InterruptedIOException $r9;
        java.io.DataOutputStream $r5;
        java.lang.Thread $r10;
        org.apache.log4j.varia.HUPNode r0;
        org.apache.log4j.varia.ExternallyRolledFileAppender r2;
        java.io.InputStream $r4;

        r0 := @this: org.apache.log4j.varia.HUPNode;

        r1 := @parameter0: java.net.Socket;

        r2 := @parameter1: org.apache.log4j.varia.ExternallyRolledFileAppender;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.log4j.varia.HUPNode: java.net.Socket socket> = r1;

        r0.<org.apache.log4j.varia.HUPNode: org.apache.log4j.varia.ExternallyRolledFileAppender er> = r2;

     label1:
        $r3 = new java.io.DataInputStream;

        $r4 = virtualinvoke r1.<java.net.Socket: java.io.InputStream getInputStream()>();

        specialinvoke $r3.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r4);

        r0.<org.apache.log4j.varia.HUPNode: java.io.DataInputStream dis> = $r3;

        $r5 = new java.io.DataOutputStream;

        $r6 = virtualinvoke r1.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r5.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r6);

        r0.<org.apache.log4j.varia.HUPNode: java.io.DataOutputStream dos> = $r5;

     label2:
        goto label6;

     label3:
        $r9 := @caughtexception;

        $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r10.<java.lang.Thread: void interrupt()>();

        virtualinvoke $r9.<java.lang.Throwable: void printStackTrace()>();

        goto label6;

     label4:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Throwable: void printStackTrace()>();

        goto label6;

     label5:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Throwable: void printStackTrace()>();

     label6:
        return;

        catch java.io.InterruptedIOException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.RuntimeException from label1 to label2 with label5;
    }

    public void run()
    {
        java.lang.Throwable $r13;
        java.io.DataInputStream $r1;
        java.io.IOException $r10;
        java.lang.RuntimeException $r9;
        java.io.InterruptedIOException $r11;
        java.io.DataOutputStream $r4, $r5, $r8;
        java.lang.Thread $r12;
        org.apache.log4j.varia.HUPNode r0;
        java.lang.String $r2, $r3;
        org.apache.log4j.varia.ExternallyRolledFileAppender $r6, $r7;
        boolean $z0;

        r0 := @this: org.apache.log4j.varia.HUPNode;

     label01:
        $r1 = r0.<org.apache.log4j.varia.HUPNode: java.io.DataInputStream dis>;

        $r2 = virtualinvoke $r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("Got external roll over signal.");

        $r3 = "RollOver";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label07;

        $r6 = r0.<org.apache.log4j.varia.HUPNode: org.apache.log4j.varia.ExternallyRolledFileAppender er>;

        entermonitor $r6;

     label02:
        $r7 = r0.<org.apache.log4j.varia.HUPNode: org.apache.log4j.varia.ExternallyRolledFileAppender er>;

        virtualinvoke $r7.<org.apache.log4j.RollingFileAppender: void rollOver()>();

        exitmonitor $r6;

     label03:
        goto label06;

     label04:
        $r13 := @caughtexception;

        exitmonitor $r6;

     label05:
        throw $r13;

     label06:
        $r8 = r0.<org.apache.log4j.varia.HUPNode: java.io.DataOutputStream dos>;

        virtualinvoke $r8.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("OK");

        goto label08;

     label07:
        $r4 = r0.<org.apache.log4j.varia.HUPNode: java.io.DataOutputStream dos>;

        virtualinvoke $r4.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("Expecting [RollOver] string.");

     label08:
        $r5 = r0.<org.apache.log4j.varia.HUPNode: java.io.DataOutputStream dos>;

        virtualinvoke $r5.<java.io.FilterOutputStream: void close()>();

     label09:
        goto label13;

     label10:
        $r11 := @caughtexception;

        $r12 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r12.<java.lang.Thread: void interrupt()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("Unexpected exception. Exiting HUPNode.", $r11);

        goto label13;

     label11:
        $r10 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("Unexpected exception. Exiting HUPNode.", $r10);

        goto label13;

     label12:
        $r9 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("Unexpected exception. Exiting HUPNode.", $r9);

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.io.InterruptedIOException from label01 to label09 with label10;
        catch java.io.IOException from label01 to label09 with label11;
        catch java.lang.RuntimeException from label01 to label09 with label12;
    }
}
