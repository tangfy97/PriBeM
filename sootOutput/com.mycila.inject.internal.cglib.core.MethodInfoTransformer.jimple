public class com.mycila.inject.internal.cglib.core.MethodInfoTransformer extends java.lang.Object implements com.mycila.inject.internal.cglib.core.Transformer
{
    private static final com.mycila.inject.internal.cglib.core.MethodInfoTransformer INSTANCE;

    public void <init>()
    {
        com.mycila.inject.internal.cglib.core.MethodInfoTransformer r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.MethodInfoTransformer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.mycila.inject.internal.cglib.core.MethodInfoTransformer getInstance()
    {
        com.mycila.inject.internal.cglib.core.MethodInfoTransformer $r0;

        $r0 = <com.mycila.inject.internal.cglib.core.MethodInfoTransformer: com.mycila.inject.internal.cglib.core.MethodInfoTransformer INSTANCE>;

        return $r0;
    }

    public java.lang.Object transform(java.lang.Object)
    {
        java.lang.IllegalArgumentException $r1;
        java.lang.reflect.Constructor $r6;
        com.mycila.inject.internal.cglib.core.MethodInfo $r7, $r9;
        java.lang.StringBuffer $r2, $r3, $r4;
        com.mycila.inject.internal.cglib.core.MethodInfoTransformer r10;
        java.lang.Object r0;
        java.lang.String $r5;
        java.lang.reflect.Method $r8;
        boolean $z0, $z1;

        r10 := @this: com.mycila.inject.internal.cglib.core.MethodInfoTransformer;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.reflect.Method;

        if $z0 == 0 goto label1;

        $r8 = (java.lang.reflect.Method) r0;

        $r9 = staticinvoke <com.mycila.inject.internal.cglib.core.ReflectUtils: com.mycila.inject.internal.cglib.core.MethodInfo getMethodInfo(java.lang.reflect.Member)>($r8);

        return $r9;

     label1:
        $z1 = r0 instanceof java.lang.reflect.Constructor;

        if $z1 == 0 goto label2;

        $r6 = (java.lang.reflect.Constructor) r0;

        $r7 = staticinvoke <com.mycila.inject.internal.cglib.core.ReflectUtils: com.mycila.inject.internal.cglib.core.MethodInfo getMethodInfo(java.lang.reflect.Member)>($r6);

        return $r7;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cannot get method info for ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.cglib.core.MethodInfoTransformer $r0;

        $r0 = new com.mycila.inject.internal.cglib.core.MethodInfoTransformer;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.core.MethodInfoTransformer: void <init>()>();

        <com.mycila.inject.internal.cglib.core.MethodInfoTransformer: com.mycila.inject.internal.cglib.core.MethodInfoTransformer INSTANCE> = $r0;

        return;
    }
}
