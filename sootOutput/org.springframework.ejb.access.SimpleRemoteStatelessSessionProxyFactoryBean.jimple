public class org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean extends org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor implements org.springframework.beans.factory.FactoryBean, org.springframework.beans.factory.BeanClassLoaderAware
{
    private java.lang.Class businessInterface;
    private java.lang.ClassLoader beanClassLoader;
    private java.lang.Object proxy;

    public void <init>()
    {
        java.lang.ClassLoader $r1;
        org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean r0;

        r0 := @this: org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean;

        specialinvoke r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: void <init>()>();

        $r1 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

        r0.<org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean: java.lang.ClassLoader beanClassLoader> = $r1;

        return;
    }

    public void setBusinessInterface(java.lang.Class)
    {
        java.lang.Class r1;
        org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean r0;

        r0 := @this: org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean;

        r1 := @parameter0: java.lang.Class;

        r0.<org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean: java.lang.Class businessInterface> = r1;

        return;
    }

    public java.lang.Class getBusinessInterface()
    {
        java.lang.Class $r1;
        org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean r0;

        r0 := @this: org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean;

        $r1 = r0.<org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean: java.lang.Class businessInterface>;

        return $r1;
    }

    public void setBeanClassLoader(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r1;
        org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean r0;

        r0 := @this: org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean: java.lang.ClassLoader beanClassLoader> = r1;

        return;
    }

    public void afterPropertiesSet() throws javax.naming.NamingException
    {
        org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean r0;
        org.springframework.aop.framework.ProxyFactory $r2;
        java.lang.Class $r1, $r3;
        java.lang.Object $r5;
        java.lang.ClassLoader $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean;

        specialinvoke r0.<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: void afterPropertiesSet()>();

        $r1 = r0.<org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean: java.lang.Class businessInterface>;

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("businessInterface is required");

        throw $r6;

     label1:
        $r2 = new org.springframework.aop.framework.ProxyFactory;

        $r3 = r0.<org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean: java.lang.Class businessInterface>;

        specialinvoke $r2.<org.springframework.aop.framework.ProxyFactory: void <init>(java.lang.Class,org.aopalliance.intercept.Interceptor)>($r3, r0);

        $r4 = r0.<org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean: java.lang.ClassLoader beanClassLoader>;

        $r5 = virtualinvoke $r2.<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy(java.lang.ClassLoader)>($r4);

        r0.<org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean: java.lang.Object proxy> = $r5;

        return;
    }

    public java.lang.Object getObject()
    {
        java.lang.Object $r1;
        org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean r0;

        r0 := @this: org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean;

        $r1 = r0.<org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean: java.lang.Object proxy>;

        return $r1;
    }

    public java.lang.Class getObjectType()
    {
        java.lang.Class $r1;
        org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean r0;

        r0 := @this: org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean;

        $r1 = r0.<org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean: java.lang.Class businessInterface>;

        return $r1;
    }

    public boolean isSingleton()
    {
        org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean r0;

        r0 := @this: org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean;

        return 1;
    }
}
