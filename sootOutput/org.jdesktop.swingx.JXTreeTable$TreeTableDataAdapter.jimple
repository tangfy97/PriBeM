public class org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter extends org.jdesktop.swingx.JXTable$TableAdapter
{
    private final org.jdesktop.swingx.JXTreeTable table;

    public void <init>(org.jdesktop.swingx.JXTreeTable)
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter r0;
        org.jdesktop.swingx.JXTreeTable r1;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter;

        r1 := @parameter0: org.jdesktop.swingx.JXTreeTable;

        specialinvoke r0.<org.jdesktop.swingx.JXTable$TableAdapter: void <init>(org.jdesktop.swingx.JXTable)>(r1);

        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: org.jdesktop.swingx.JXTreeTable table> = r1;

        return;
    }

    public org.jdesktop.swingx.JXTreeTable getTreeTable()
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter r0;
        org.jdesktop.swingx.JXTreeTable $r1;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: org.jdesktop.swingx.JXTreeTable table>;

        return $r1;
    }

    public boolean isExpanded()
    {
        int $i0;
        org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter r0;
        org.jdesktop.swingx.JXTreeTable $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: org.jdesktop.swingx.JXTreeTable table>;

        $i0 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: int row>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXTreeTable: boolean isExpanded(int)>($i0);

        return $z0;
    }

    public int getDepth()
    {
        javax.swing.tree.TreePath $r2;
        int $i0, $i1, $i2;
        org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter r0;
        org.jdesktop.swingx.JXTreeTable $r1;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: org.jdesktop.swingx.JXTreeTable table>;

        $i0 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: int row>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTreeTable: javax.swing.tree.TreePath getPathForRow(int)>($i0);

        $i1 = virtualinvoke $r2.<javax.swing.tree.TreePath: int getPathCount()>();

        $i2 = $i1 - 1;

        return $i2;
    }

    public boolean isLeaf()
    {
        javax.swing.tree.TreePath $r2;
        org.jdesktop.swingx.treetable.TreeTableModel $r4;
        org.jdesktop.swingx.JXTreeTable $r1, $r3;
        int $i0;
        java.lang.Object $r5;
        org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: org.jdesktop.swingx.JXTreeTable table>;

        $i0 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: int row>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTreeTable: javax.swing.tree.TreePath getPathForRow(int)>($i0);

        if $r2 == null goto label1;

        $r3 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: org.jdesktop.swingx.JXTreeTable table>;

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.treetable.TreeTableModel getTreeTableModel()>();

        $r5 = virtualinvoke $r2.<javax.swing.tree.TreePath: java.lang.Object getLastPathComponent()>();

        $z0 = interfaceinvoke $r4.<org.jdesktop.swingx.treetable.TreeTableModel: boolean isLeaf(java.lang.Object)>($r5);

        return $z0;

     label1:
        return 1;
    }

    public boolean isHierarchical()
    {
        int $i0;
        org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter r0;
        org.jdesktop.swingx.JXTreeTable $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: org.jdesktop.swingx.JXTreeTable table>;

        $i0 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: int column>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXTreeTable: boolean isHierarchical(int)>($i0);

        return $z0;
    }

    public java.lang.String getFilteredStringAt(int, int)
    {
        org.jdesktop.swingx.treetable.TreeTableModel $r2;
        org.jdesktop.swingx.JXTreeTable $r1, $r4;
        int $i0, i1, i2, $i3;
        java.lang.String $r3, $r5;
        org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter r0;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter;

        i2 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: org.jdesktop.swingx.JXTreeTable table>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.treetable.TreeTableModel getTreeTableModel()>();

        $i0 = interfaceinvoke $r2.<org.jdesktop.swingx.treetable.TreeTableModel: int getHierarchicalColumn()>();

        if $i0 != i1 goto label2;

        $i3 = virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: int convertColumnIndexToView(int)>(i1);

        if $i3 >= 0 goto label1;

     label1:
        $r4 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: org.jdesktop.swingx.JXTreeTable table>;

        $r5 = staticinvoke <org.jdesktop.swingx.JXTreeTable: java.lang.String access$1200(org.jdesktop.swingx.JXTreeTable,int)>($r4, i2);

        return $r5;

     label2:
        $r3 = specialinvoke r0.<org.jdesktop.swingx.JXTable$TableAdapter: java.lang.String getFilteredStringAt(int,int)>(i2, i1);

        return $r3;
    }

    public java.lang.String getStringAt(int, int)
    {
        org.jdesktop.swingx.treetable.TreeTableModel $r2;
        org.jdesktop.swingx.JXTreeTable $r1, $r4;
        int $i0, i1, i2, $i3;
        java.lang.String $r3, $r5;
        org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter r0;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter;

        i2 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: org.jdesktop.swingx.JXTreeTable table>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.treetable.TreeTableModel getTreeTableModel()>();

        $i0 = interfaceinvoke $r2.<org.jdesktop.swingx.treetable.TreeTableModel: int getHierarchicalColumn()>();

        if $i0 != i1 goto label2;

        $i3 = virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: int convertColumnIndexToView(int)>(i1);

        if $i3 >= 0 goto label1;

     label1:
        $r4 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter: org.jdesktop.swingx.JXTreeTable table>;

        $r5 = staticinvoke <org.jdesktop.swingx.JXTreeTable: java.lang.String access$1200(org.jdesktop.swingx.JXTreeTable,int)>($r4, i2);

        return $r5;

     label2:
        $r3 = specialinvoke r0.<org.jdesktop.swingx.JXTable$TableAdapter: java.lang.String getStringAt(int,int)>(i2, i1);

        return $r3;
    }
}
