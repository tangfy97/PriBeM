final class org.apache.jena.riot.process.normalize.NormalizeValue$5 extends java.lang.Object implements org.apache.jena.riot.process.normalize.DatatypeHandler
{

    void <init>()
    {
        org.apache.jena.riot.process.normalize.NormalizeValue$5 r0;

        r0 := @this: org.apache.jena.riot.process.normalize.NormalizeValue$5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.graph.Node handle(com.hp.hpl.jena.graph.Node, java.lang.String, com.hp.hpl.jena.datatypes.RDFDatatype)
    {
        com.hp.hpl.jena.graph.Node $r4, r5;
        java.text.NumberFormat $r1;
        org.apache.jena.riot.process.normalize.NormalizeValue$5 r6;
        com.hp.hpl.jena.datatypes.RDFDatatype r3;
        java.lang.String r0, $r2;
        double $d0;
        boolean $z0;

        r6 := @this: org.apache.jena.riot.process.normalize.NormalizeValue$5;

        r5 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: com.hp.hpl.jena.datatypes.RDFDatatype;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r0);

        $r1 = staticinvoke <org.apache.jena.riot.process.normalize.NormalizeValue: java.text.NumberFormat access$000()>();

        $r2 = virtualinvoke $r1.<java.text.NumberFormat: java.lang.String format(double)>($d0);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return r5;

     label1:
        $r4 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>($r2, null, r3);

        return $r4;
    }
}
