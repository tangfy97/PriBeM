public class com.hp.hpl.jena.sparql.sse.ItemList extends com.hp.hpl.jena.sparql.sse.ItemLocation implements java.lang.Iterable
{
    private final java.util.List elements;
    private final int offset;

    private int index(int)
    {
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        int i0, $i1, $i2;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        i0 := @parameter0: int;

        $i1 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: int offset>;

        $i2 = $i1 + i0;

        return $i2;
    }

    private int _size()
    {
        java.util.List $r1;
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        int $i0, $i1, $i2;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: int offset>;

        $i2 = $i0 - $i1;

        return $i2;
    }

    private java.util.List slice()
    {
        java.util.List $r1, $r2, $r3;
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        int $i0, $i1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements>;

        $i0 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: int offset>;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.List subList(int,int)>($i0, $i1);

        return $r3;
    }

    public void <init>(int, int)
    {
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        int i0, i1;
        java.util.ArrayList $r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: void <init>(int,int,int,java.util.List)>(i0, i1, 0, $r1);

        return;
    }

    public void <init>()
    {
        int $i1, $i3;
        com.hp.hpl.jena.sparql.sse.ItemList r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        $i1 = (int) -1;

        $i3 = (int) -1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: void <init>(int,int)>($i1, $i3);

        return;
    }

    public void <init>(int, int, int, java.util.List)
    {
        java.util.List r1;
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        int i0, i1, i2;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.util.List;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemLocation: void <init>(int,int)>(i0, i1);

        r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements> = r1;

        r0.<com.hp.hpl.jena.sparql.sse.ItemList: int offset> = i2;

        return;
    }

    public int size()
    {
        int $i0;
        com.hp.hpl.jena.sparql.sse.ItemList r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        $i0 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int _size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        int $i0;
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        $i0 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int _size()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int hashCode()
    {
        java.util.List $r1;
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        int $i0, $i1, $i2;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements>;

        $i0 = interfaceinvoke $r1.<java.util.List: int hashCode()>();

        $i1 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: int offset>;

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        com.hp.hpl.jena.sparql.sse.ItemList r0, r2;
        java.util.List $r3, $r4;
        int $i0, $i1;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.hp.hpl.jena.sparql.sse.ItemList;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.hp.hpl.jena.sparql.sse.ItemList) r1;

        $i0 = virtualinvoke r2.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        $i1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        $r3 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List slice()>();

        $r4 = specialinvoke r2.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List slice()>();

        $z1 = interfaceinvoke $r3.<java.util.List: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }

    public void addAll(com.hp.hpl.jena.sparql.sse.ItemList)
    {
        java.util.List $r2, $r3;
        com.hp.hpl.jena.sparql.sse.ItemList r0, r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements>;

        $r2 = r1.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        return;
    }

    public void add(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r1;
        java.util.List $r2;
        com.hp.hpl.jena.sparql.sse.ItemList r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void add(com.hp.hpl.jena.graph.Node)
    {
        java.util.List $r2;
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        com.hp.hpl.jena.sparql.sse.Item $r3;
        com.hp.hpl.jena.graph.Node r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements>;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.Item createNode(com.hp.hpl.jena.graph.Node)>(r1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    public void add(java.lang.String)
    {
        java.util.List $r2;
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        com.hp.hpl.jena.sparql.sse.Item $r3;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements>;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.Item createSymbol(java.lang.String)>(r1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    public com.hp.hpl.jena.sparql.sse.Item get(int)
    {
        java.util.List $r1;
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        int i0, $i1;
        java.lang.Object $r2;
        com.hp.hpl.jena.sparql.sse.Item $r3;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        i0 := @parameter0: int;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements>;

        $i1 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int index(int)>(i0);

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (com.hp.hpl.jena.sparql.sse.Item) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.sparql.sse.Item getFirst()
    {
        com.hp.hpl.jena.sparql.sse.Item $r1;
        com.hp.hpl.jena.sparql.sse.ItemList r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        return $r1;
    }

    public com.hp.hpl.jena.sparql.sse.Item getLast()
    {
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        int $i0, $i1;
        com.hp.hpl.jena.sparql.sse.Item $r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        $i0 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int _size()>();

        $i1 = $i0 - 1;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>($i1);

        return $r1;
    }

    public java.util.Iterator iterator()
    {
        java.util.List $r1;
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        java.util.ListIterator $r2;
        int $i0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements>;

        $i0 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: int offset>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

        return $r2;
    }

    public com.hp.hpl.jena.sparql.sse.Item car()
    {
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        int $i0;
        com.hp.hpl.jena.sparql.sse.Item $r1;
        com.hp.hpl.jena.sparql.sse.ItemException $r2;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        $i0 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int _size()>();

        if $i0 != 0 goto label1;

        $r2 = new com.hp.hpl.jena.sparql.sse.ItemException;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.sse.ItemException: void <init>(java.lang.String)>("ItemList.car: list is zero length");

        throw $r2;

     label1:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        return $r1;
    }

    public com.hp.hpl.jena.sparql.sse.ItemList cdr()
    {
        com.hp.hpl.jena.sparql.sse.ItemList r0, $r1;
        com.hp.hpl.jena.sparql.sse.ItemException $r3;
        java.util.List $r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        $i0 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int _size()>();

        if $i0 != 0 goto label1;

        $r3 = new com.hp.hpl.jena.sparql.sse.ItemException;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.sse.ItemException: void <init>(java.lang.String)>("ItemList.cdr: list is zero length");

        throw $r3;

     label1:
        $r1 = new com.hp.hpl.jena.sparql.sse.ItemList;

        $i1 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemLocation: int getLine()>();

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemLocation: int getColumn()>();

        $i3 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: int offset>;

        $i4 = $i3 + 1;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements>;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.sse.ItemList: void <init>(int,int,int,java.util.List)>($i1, $i2, $i4, $r2);

        return $r1;
    }

    public com.hp.hpl.jena.sparql.sse.ItemList cdrOrNull()
    {
        com.hp.hpl.jena.sparql.sse.ItemList r0, $r1;
        java.util.List $r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        $i0 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int _size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = new com.hp.hpl.jena.sparql.sse.ItemList;

        $i1 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemLocation: int getLine()>();

        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemLocation: int getColumn()>();

        $i3 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: int offset>;

        $i4 = $i3 + 1;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements>;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.sse.ItemList: void <init>(int,int,int,java.util.List)>($i1, $i2, $i4, $r2);

        return $r1;
    }

    public com.hp.hpl.jena.sparql.sse.ItemList sublist(int)
    {
        com.hp.hpl.jena.sparql.sse.ItemList r0, $r3;
        java.util.List $r2;
        int $i0, i1, $i2, $i3, $i4, $i5, $i7, $i9;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        i1 := @parameter0: int;

        $i0 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int _size()>();

        $i2 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: int offset>;

        $i3 = i1 + $i2;

        if $i0 >= $i3 goto label1;

        return null;

     label1:
        $r3 = new com.hp.hpl.jena.sparql.sse.ItemList;

        $i4 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: int offset>;

        $i5 = $i4 + i1;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements>;

        $i7 = (int) -1;

        $i9 = (int) -1;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.sse.ItemList: void <init>(int,int,int,java.util.List)>($i7, $i9, $i5, $r2);

        return $r3;
    }

    public com.hp.hpl.jena.sparql.sse.ItemList sublist(int, int)
    {
        com.hp.hpl.jena.sparql.sse.ItemList r0, $r1;
        java.util.List $r2, $r3, $r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        if i1 < 0 goto label1;

        if i1 >= i0 goto label2;

     label1:
        return null;

     label2:
        $i2 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int _size()>();

        if $i2 >= i0 goto label3;

        return null;

     label3:
        $i3 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int _size()>();

        if i1 <= $i3 goto label4;

        return null;

     label4:
        $r1 = new com.hp.hpl.jena.sparql.sse.ItemList;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.sse.ItemList: void <init>()>();

        $r3 = $r1.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements>;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List elements>;

        $i4 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: int offset>;

        $i7 = i0 + $i4;

        $i5 = r0.<com.hp.hpl.jena.sparql.sse.ItemList: int offset>;

        $i6 = i1 + $i5;

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.List subList(int,int)>($i7, $i6);

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        return $r1;
    }

    public java.lang.String shortString()
    {
        int $i0, $i1;
        java.lang.String $r5, $r8, $r12, $r15;
        boolean $z0;
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        com.hp.hpl.jena.sparql.sse.Item $r1, $r4, $r11;
        java.lang.StringBuilder $r2, $r3, $r6, $r7, $r9, $r10, $r13, $r14;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        $i0 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int _size()>();

        if $i0 != 0 goto label1;

        return "()";

     label1:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.Item: boolean isSymbol()>();

        if $z0 == 0 goto label3;

        $i1 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: int _size()>();

        if $i1 != 1 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        $r12 = virtualinvoke $r11.<com.hp.hpl.jena.sparql.sse.Item: java.lang.String getSymbol()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        $r5 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.sse.Item: java.lang.String getSymbol()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ...)");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label3:
        return "(...)";
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.sparql.sse.ItemList r0;
        java.util.List $r3;
        java.lang.StringBuilder $r1, $r2, $r5;
        java.lang.String $r4, $r6, $r7, r8;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemList;

        r8 = "";

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: boolean hasLocation()>();

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.lang.String location()>();

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String concat(java.lang.String)>($r7);

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r3 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.List slice()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
