class com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator extends java.lang.Object implements javax.swing.ButtonModel
{
    private final javax.swing.ButtonModel other;
    private com.jidesoft.swing.LegacyTristateCheckBox$State _state;
    final com.jidesoft.swing.LegacyTristateCheckBox this$0;

    private void <init>(com.jidesoft.swing.LegacyTristateCheckBox, javax.swing.ButtonModel)
    {
        com.jidesoft.swing.LegacyTristateCheckBox r1;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel r2;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        r1 := @parameter0: com.jidesoft.swing.LegacyTristateCheckBox;

        r2 := @parameter1: javax.swing.ButtonModel;

        r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: com.jidesoft.swing.LegacyTristateCheckBox this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other> = r2;

        return;
    }

    private void setState(com.jidesoft.swing.LegacyTristateCheckBox$State)
    {
        com.jidesoft.swing.LegacyTristateCheckBox$State r0, $r1, $r2;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r3;
        javax.swing.ButtonModel $r4, $r5, $r6;

        r3 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        r0 := @parameter0: com.jidesoft.swing.LegacyTristateCheckBox$State;

        $r1 = <com.jidesoft.swing.LegacyTristateCheckBox: com.jidesoft.swing.LegacyTristateCheckBox$State NOT_SELECTED>;

        if r0 != $r1 goto label1;

        $r6 = r3.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        interfaceinvoke $r6.<javax.swing.ButtonModel: void setArmed(boolean)>(0);

        virtualinvoke r3.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: void setPressed(boolean)>(0);

        virtualinvoke r3.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: void setSelected(boolean)>(0);

        goto label3;

     label1:
        $r2 = <com.jidesoft.swing.LegacyTristateCheckBox: com.jidesoft.swing.LegacyTristateCheckBox$State SELECTED>;

        if r0 != $r2 goto label2;

        $r5 = r3.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        interfaceinvoke $r5.<javax.swing.ButtonModel: void setArmed(boolean)>(0);

        virtualinvoke r3.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: void setPressed(boolean)>(0);

        virtualinvoke r3.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: void setSelected(boolean)>(1);

        goto label3;

     label2:
        $r4 = r3.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        interfaceinvoke $r4.<javax.swing.ButtonModel: void setArmed(boolean)>(1);

        virtualinvoke r3.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: void setPressed(boolean)>(1);

        virtualinvoke r3.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: void setSelected(boolean)>(1);

     label3:
        r3.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: com.jidesoft.swing.LegacyTristateCheckBox$State _state> = r0;

        return;
    }

    private com.jidesoft.swing.LegacyTristateCheckBox$State getState()
    {
        com.jidesoft.swing.LegacyTristateCheckBox$State $r1, $r2;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        $r1 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: com.jidesoft.swing.LegacyTristateCheckBox$State _state>;

        if $r1 != null goto label1;

        $r2 = <com.jidesoft.swing.LegacyTristateCheckBox: com.jidesoft.swing.LegacyTristateCheckBox$State DONT_CARE>;

        goto label2;

     label1:
        $r2 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: com.jidesoft.swing.LegacyTristateCheckBox$State _state>;

     label2:
        return $r2;
    }

    public void setArmed(boolean)
    {
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        z0 := @parameter0: boolean;

        return;
    }

    public void setEnabled(boolean)
    {
        com.jidesoft.swing.LegacyTristateCheckBox $r1;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r2;
        boolean z0;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: com.jidesoft.swing.LegacyTristateCheckBox this$0>;

        virtualinvoke $r1.<com.jidesoft.swing.LegacyTristateCheckBox: void setFocusable(boolean)>(z0);

        $r2 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        interfaceinvoke $r2.<javax.swing.ButtonModel: void setEnabled(boolean)>(z0);

        return;
    }

    public boolean isArmed()
    {
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r1;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        $r1 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        $z0 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isArmed()>();

        return $z0;
    }

    public boolean isSelected()
    {
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r1;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        $r1 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        $z0 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isSelected()>();

        return $z0;
    }

    public boolean isEnabled()
    {
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r1;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        $r1 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        $z0 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isEnabled()>();

        return $z0;
    }

    public boolean isPressed()
    {
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r1;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        $r1 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        $z0 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isPressed()>();

        return $z0;
    }

    public boolean isRollover()
    {
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r1;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        $r1 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        $z0 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isRollover()>();

        return $z0;
    }

    public void setSelected(boolean)
    {
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r1;
        boolean z0;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        interfaceinvoke $r1.<javax.swing.ButtonModel: void setSelected(boolean)>(z0);

        return;
    }

    public void setPressed(boolean)
    {
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r1;
        boolean z0;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        interfaceinvoke $r1.<javax.swing.ButtonModel: void setPressed(boolean)>(z0);

        return;
    }

    public void setRollover(boolean)
    {
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r1;
        boolean z0;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        interfaceinvoke $r1.<javax.swing.ButtonModel: void setRollover(boolean)>(z0);

        return;
    }

    public void setMnemonic(int)
    {
        int i0;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r1;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        i0 := @parameter0: int;

        $r1 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        interfaceinvoke $r1.<javax.swing.ButtonModel: void setMnemonic(int)>(i0);

        return;
    }

    public int getMnemonic()
    {
        int $i0;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r1;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        $r1 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        $i0 = interfaceinvoke $r1.<javax.swing.ButtonModel: int getMnemonic()>();

        return $i0;
    }

    public void setActionCommand(java.lang.String)
    {
        java.lang.String r1;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r2;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        interfaceinvoke $r2.<javax.swing.ButtonModel: void setActionCommand(java.lang.String)>(r1);

        return;
    }

    public java.lang.String getActionCommand()
    {
        java.lang.String $r2;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r1;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        $r1 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        $r2 = interfaceinvoke $r1.<javax.swing.ButtonModel: java.lang.String getActionCommand()>();

        return $r2;
    }

    public void setGroup(javax.swing.ButtonGroup)
    {
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r2;
        javax.swing.ButtonGroup r1;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        r1 := @parameter0: javax.swing.ButtonGroup;

        $r2 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        interfaceinvoke $r2.<javax.swing.ButtonModel: void setGroup(javax.swing.ButtonGroup)>(r1);

        return;
    }

    public void addActionListener(java.awt.event.ActionListener)
    {
        java.awt.event.ActionListener r1;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r2;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        r1 := @parameter0: java.awt.event.ActionListener;

        $r2 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        interfaceinvoke $r2.<javax.swing.ButtonModel: void addActionListener(java.awt.event.ActionListener)>(r1);

        return;
    }

    public void removeActionListener(java.awt.event.ActionListener)
    {
        java.awt.event.ActionListener r1;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r2;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        r1 := @parameter0: java.awt.event.ActionListener;

        $r2 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        interfaceinvoke $r2.<javax.swing.ButtonModel: void removeActionListener(java.awt.event.ActionListener)>(r1);

        return;
    }

    public void addItemListener(java.awt.event.ItemListener)
    {
        java.awt.event.ItemListener r1;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r2;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        r1 := @parameter0: java.awt.event.ItemListener;

        $r2 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        interfaceinvoke $r2.<javax.swing.ButtonModel: void addItemListener(java.awt.event.ItemListener)>(r1);

        return;
    }

    public void removeItemListener(java.awt.event.ItemListener)
    {
        java.awt.event.ItemListener r1;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r2;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        r1 := @parameter0: java.awt.event.ItemListener;

        $r2 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        interfaceinvoke $r2.<javax.swing.ButtonModel: void removeItemListener(java.awt.event.ItemListener)>(r1);

        return;
    }

    public void addChangeListener(javax.swing.event.ChangeListener)
    {
        javax.swing.event.ChangeListener r1;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r2;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        r1 := @parameter0: javax.swing.event.ChangeListener;

        $r2 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        interfaceinvoke $r2.<javax.swing.ButtonModel: void addChangeListener(javax.swing.event.ChangeListener)>(r1);

        return;
    }

    public void removeChangeListener(javax.swing.event.ChangeListener)
    {
        javax.swing.event.ChangeListener r1;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r2;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        r1 := @parameter0: javax.swing.event.ChangeListener;

        $r2 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        interfaceinvoke $r2.<javax.swing.ButtonModel: void removeChangeListener(javax.swing.event.ChangeListener)>(r1);

        return;
    }

    public java.lang.Object[] getSelectedObjects()
    {
        java.lang.Object[] $r2;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel $r1;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        $r1 = r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: javax.swing.ButtonModel other>;

        $r2 = interfaceinvoke $r1.<javax.swing.ButtonModel: java.lang.Object[] getSelectedObjects()>();

        return $r2;
    }

    void <init>(com.jidesoft.swing.LegacyTristateCheckBox, javax.swing.ButtonModel, com.jidesoft.swing.LegacyTristateCheckBox$1)
    {
        com.jidesoft.swing.LegacyTristateCheckBox r1;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;
        javax.swing.ButtonModel r2;
        com.jidesoft.swing.LegacyTristateCheckBox$1 r3;

        r0 := @this: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        r1 := @parameter0: com.jidesoft.swing.LegacyTristateCheckBox;

        r2 := @parameter1: javax.swing.ButtonModel;

        r3 := @parameter2: com.jidesoft.swing.LegacyTristateCheckBox$1;

        specialinvoke r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: void <init>(com.jidesoft.swing.LegacyTristateCheckBox,javax.swing.ButtonModel)>(r1, r2);

        return;
    }

    static com.jidesoft.swing.LegacyTristateCheckBox$State access$200(com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator)
    {
        com.jidesoft.swing.LegacyTristateCheckBox$State $r1;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;

        r0 := @parameter0: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        $r1 = specialinvoke r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: com.jidesoft.swing.LegacyTristateCheckBox$State getState()>();

        return $r1;
    }

    static void access$300(com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator, com.jidesoft.swing.LegacyTristateCheckBox$State)
    {
        com.jidesoft.swing.LegacyTristateCheckBox$State r1;
        com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator r0;

        r0 := @parameter0: com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator;

        r1 := @parameter1: com.jidesoft.swing.LegacyTristateCheckBox$State;

        specialinvoke r0.<com.jidesoft.swing.LegacyTristateCheckBox$TristateDecorator: void setState(com.jidesoft.swing.LegacyTristateCheckBox$State)>(r1);

        return;
    }
}
