public class org.sat4j.minisat.orders.SubsetVarOrder extends org.sat4j.minisat.orders.VarOrderHeap
{
    private final int[] varsToTest;
    private static final long serialVersionUID;
    static final boolean $assertionsDisabled;

    public void <init>(int[])
    {
        int[] r1, $r2, $r3;
        org.sat4j.minisat.orders.SubsetVarOrder r0;
        int $i0, $i1;

        r0 := @this: org.sat4j.minisat.orders.SubsetVarOrder;

        r1 := @parameter0: int[];

        specialinvoke r0.<org.sat4j.minisat.orders.VarOrderHeap: void <init>()>();

        $i0 = lengthof r1;

        $r2 = newarray (int)[$i0];

        r0.<org.sat4j.minisat.orders.SubsetVarOrder: int[] varsToTest> = $r2;

        $r3 = r0.<org.sat4j.minisat.orders.SubsetVarOrder: int[] varsToTest>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, 0, $i1);

        return;
    }

    public void init()
    {
        org.sat4j.minisat.core.IPhaseSelectionStrategy $r18;
        int[] $r23;
        org.sat4j.minisat.orders.SubsetVarOrder r0;
        boolean $z0, $z1, $z2;
        org.sat4j.minisat.core.Heap $r6, $r20, $r22;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r14;
        double[] $r2, $r3, $r4, $r17, $r19, $r21;
        java.lang.AssertionError $r8, $r16;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, i7;
        java.lang.String $r15;
        org.sat4j.minisat.core.ILits $r1, $r5, $r7, $r11;

        r0 := @this: org.sat4j.minisat.orders.SubsetVarOrder;

        $r1 = r0.<org.sat4j.minisat.orders.SubsetVarOrder: org.sat4j.minisat.core.ILits lits>;

        $i0 = interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: int nVars()>();

        i1 = $i0 + 1;

        $r2 = r0.<org.sat4j.minisat.orders.SubsetVarOrder: double[] activity>;

        if $r2 == null goto label1;

        $r17 = r0.<org.sat4j.minisat.orders.SubsetVarOrder: double[] activity>;

        $i5 = lengthof $r17;

        if $i5 >= i1 goto label2;

     label1:
        $r3 = newarray (double)[i1];

        r0.<org.sat4j.minisat.orders.SubsetVarOrder: double[] activity> = $r3;

     label2:
        $r18 = r0.<org.sat4j.minisat.orders.SubsetVarOrder: org.sat4j.minisat.core.IPhaseSelectionStrategy phaseStrategy>;

        interfaceinvoke $r18.<org.sat4j.minisat.core.IPhaseSelectionStrategy: void init(int)>(i1);

        $r19 = r0.<org.sat4j.minisat.orders.SubsetVarOrder: double[] activity>;

        $r19[0] = -1.0;

        $r20 = new org.sat4j.minisat.core.Heap;

        $r21 = r0.<org.sat4j.minisat.orders.SubsetVarOrder: double[] activity>;

        specialinvoke $r20.<org.sat4j.minisat.core.Heap: void <init>(double[])>($r21);

        r0.<org.sat4j.minisat.orders.SubsetVarOrder: org.sat4j.minisat.core.Heap heap> = $r20;

        $r22 = r0.<org.sat4j.minisat.orders.SubsetVarOrder: org.sat4j.minisat.core.Heap heap>;

        virtualinvoke $r22.<org.sat4j.minisat.core.Heap: void setBounds(int)>(i1);

        $r23 = r0.<org.sat4j.minisat.orders.SubsetVarOrder: int[] varsToTest>;

        $i6 = lengthof $r23;

        i7 = 0;

     label3:
        if i7 >= $i6 goto label7;

        i2 = $r23[i7];

        $z0 = <org.sat4j.minisat.orders.SubsetVarOrder: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        if i2 > 0 goto label4;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label4:
        $z1 = <org.sat4j.minisat.orders.SubsetVarOrder: boolean $assertionsDisabled>;

        if $z1 != 0 goto label5;

        $r7 = r0.<org.sat4j.minisat.orders.SubsetVarOrder: org.sat4j.minisat.core.ILits lits>;

        $i3 = interfaceinvoke $r7.<org.sat4j.minisat.core.ILits: int nVars()>();

        if i2 <= $i3 goto label5;

        $r8 = new java.lang.AssertionError;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r11 = r0.<org.sat4j.minisat.orders.SubsetVarOrder: org.sat4j.minisat.core.ILits lits>;

        $i4 = interfaceinvoke $r11.<org.sat4j.minisat.core.ILits: int nVars()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r15);

        throw $r8;

     label5:
        $r4 = r0.<org.sat4j.minisat.orders.SubsetVarOrder: double[] activity>;

        $r4[i2] = 0.0;

        $r5 = r0.<org.sat4j.minisat.orders.SubsetVarOrder: org.sat4j.minisat.core.ILits lits>;

        $z2 = interfaceinvoke $r5.<org.sat4j.minisat.core.ILits: boolean belongsToPool(int)>(i2);

        if $z2 == 0 goto label6;

        $r6 = r0.<org.sat4j.minisat.orders.SubsetVarOrder: org.sat4j.minisat.core.Heap heap>;

        virtualinvoke $r6.<org.sat4j.minisat.core.Heap: void insert(int)>(i2);

     label6:
        i7 = i7 + 1;

        goto label3;

     label7:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.minisat.orders.SubsetVarOrder: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/minisat/orders/SubsetVarOrder;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.minisat.orders.SubsetVarOrder: boolean $assertionsDisabled> = $z1;

        return;
    }
}
