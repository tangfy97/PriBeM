class org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethod extends org.codehaus.groovy.runtime.metaclass.NewInstanceMetaMethod implements java.lang.Comparable
{
    private final java.lang.Class metaClass;

    public void <init>(org.codehaus.groovy.reflection.CachedMethod, java.lang.Class)
    {
        java.lang.Class r2;
        org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethod r0;
        org.codehaus.groovy.reflection.CachedMethod r1;

        r0 := @this: org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethod;

        r1 := @parameter0: org.codehaus.groovy.reflection.CachedMethod;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<org.codehaus.groovy.runtime.metaclass.NewInstanceMetaMethod: void <init>(org.codehaus.groovy.reflection.CachedMethod)>(r1);

        r0.<org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethod: java.lang.Class metaClass> = r2;

        return;
    }

    public boolean isCacheable()
    {
        org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethod r0;

        r0 := @this: org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethod;

        return 0;
    }

    public int compareTo(java.lang.Object)
    {
        org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethod r1, r2;
        int $i1;
        java.lang.Object r0;
        java.lang.Class r3, r4;
        boolean $z0, $z1;

        r2 := @this: org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethod;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethod) r0;

        r3 = r2.<org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethod: java.lang.Class metaClass>;

        r4 = r1.<org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethod: java.lang.Class metaClass>;

        if r3 != r4 goto label1;

        return 0;

     label1:
        $z0 = specialinvoke r2.<org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethod: boolean isChildOfParent(java.lang.Class,java.lang.Class)>(r3, r4);

        if $z0 == 0 goto label2;

        $i1 = (int) -1;

        return $i1;

     label2:
        $z1 = specialinvoke r2.<org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethod: boolean isChildOfParent(java.lang.Class,java.lang.Class)>(r4, r3);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private boolean isChildOfParent(java.lang.Class, java.lang.Class)
    {
        org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethod r5;
        java.lang.Class r0, $r1, $r2, r3, $r4, r6, $r7;

        r5 := @this: org.codehaus.groovy.runtime.GroovyCategorySupport$CategoryMethod;

        r0 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.Class;

        r6 = r0;

     label1:
        if r6 == null goto label4;

        $r4 = r6;

        $r1 = <org.codehaus.groovy.runtime.GroovyCategorySupport: java.lang.Class class$java$lang$Object>;

        if $r1 != null goto label2;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.GroovyCategorySupport: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.runtime.GroovyCategorySupport: java.lang.Class class$java$lang$Object> = $r7;

        goto label3;

     label2:
        $r7 = <org.codehaus.groovy.runtime.GroovyCategorySupport: java.lang.Class class$java$lang$Object>;

     label3:
        if $r4 == $r7 goto label4;

        $r2 = virtualinvoke r6.<java.lang.Class: java.lang.Class getSuperclass()>();

        r6 = $r2;

        if $r2 != r3 goto label1;

        return 1;

     label4:
        return 0;
    }
}
