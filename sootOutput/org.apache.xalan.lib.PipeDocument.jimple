public class org.apache.xalan.lib.PipeDocument extends java.lang.Object
{

    public void <init>()
    {
        org.apache.xalan.lib.PipeDocument r0;

        r0 := @this: org.apache.xalan.lib.PipeDocument;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext, org.apache.xalan.templates.ElemExtensionCall) throws javax.xml.transform.TransformerException, javax.xml.transform.TransformerConfigurationException, org.xml.sax.SAXException, java.io.IOException, java.io.FileNotFoundException
    {
        javax.xml.transform.Transformer $r28;
        javax.xml.transform.Templates $r26;
        java.util.Vector $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xalan.lib.PipeDocument r39;
        java.lang.Exception $r40;
        org.apache.xalan.extensions.XSLProcessorContext r2;
        org.apache.xalan.templates.AVT $r22, $r34, $r37;
        javax.xml.transform.stream.StreamSource $r25;
        javax.xml.transform.sax.SAXTransformerFactory r41;
        short $s2, $s3;
        org.apache.xpath.XPathContext $r13;
        org.w3c.dom.Node $r3, $r9, $r14, $r18, $r30;
        int $i0, $i1, i4, i5, $i6, $i7;
        java.lang.String $r5, $r7, $r8, $r11, $r15, $r20, $r23, $r24, $r32, $r35, $r38;
        org.apache.xalan.templates.ElemExtensionCall r1;
        org.w3c.dom.NodeList $r16, $r29;
        org.apache.xalan.templates.ElemLiteralResult $r21, $r33, $r36;
        org.w3c.dom.Element $r19, $r31;
        javax.xml.transform.TransformerFactory $r0;
        javax.xml.transform.sax.TransformerHandler $r27;
        org.apache.xalan.transformer.TransformerImpl $r4, $r6, $r10, $r12;

        r39 := @this: org.apache.xalan.lib.PipeDocument;

        r2 := @parameter0: org.apache.xalan.extensions.XSLProcessorContext;

        r1 := @parameter1: org.apache.xalan.templates.ElemExtensionCall;

     label01:
        $r0 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        r41 = (javax.xml.transform.sax.SAXTransformerFactory) $r0;

        $r3 = virtualinvoke r2.<org.apache.xalan.extensions.XSLProcessorContext: org.w3c.dom.Node getContextNode()>();

        $r4 = virtualinvoke r2.<org.apache.xalan.extensions.XSLProcessorContext: org.apache.xalan.transformer.TransformerImpl getTransformer()>();

        $r5 = virtualinvoke r1.<org.apache.xalan.templates.ElemExtensionCall: java.lang.String getAttribute(java.lang.String,org.w3c.dom.Node,org.apache.xalan.transformer.TransformerImpl)>("source", $r3, $r4);

        $r6 = virtualinvoke r2.<org.apache.xalan.extensions.XSLProcessorContext: org.apache.xalan.transformer.TransformerImpl getTransformer()>();

        $r7 = virtualinvoke $r6.<org.apache.xalan.transformer.TransformerImpl: java.lang.String getBaseURLOfSource()>();

        $r8 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String,java.lang.String)>($r5, $r7);

        $r9 = virtualinvoke r2.<org.apache.xalan.extensions.XSLProcessorContext: org.w3c.dom.Node getContextNode()>();

        $r10 = virtualinvoke r2.<org.apache.xalan.extensions.XSLProcessorContext: org.apache.xalan.transformer.TransformerImpl getTransformer()>();

        $r11 = virtualinvoke r1.<org.apache.xalan.templates.ElemExtensionCall: java.lang.String getAttribute(java.lang.String,org.w3c.dom.Node,org.apache.xalan.transformer.TransformerImpl)>("target", $r9, $r10);

        $r12 = virtualinvoke r2.<org.apache.xalan.extensions.XSLProcessorContext: org.apache.xalan.transformer.TransformerImpl getTransformer()>();

        $r13 = virtualinvoke $r12.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r14 = virtualinvoke r2.<org.apache.xalan.extensions.XSLProcessorContext: org.w3c.dom.Node getContextNode()>();

        $i0 = virtualinvoke $r13.<org.apache.xpath.XPathContext: int getDTMHandleFromNode(org.w3c.dom.Node)>($r14);

        $r15 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getSystemId()>();

        $z0 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: boolean hasChildNodes()>();

        if $z0 == 0 goto label08;

        $r16 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.NodeList getChildNodes()>();

        $r17 = new java.util.Vector;

        $i1 = interfaceinvoke $r16.<org.w3c.dom.NodeList: int getLength()>();

        specialinvoke $r17.<java.util.Vector: void <init>(int)>($i1);

        i4 = 0;

        goto label07;

     label02:
        $r18 = interfaceinvoke $r16.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i4);

        $s2 = interfaceinvoke $r18.<org.w3c.dom.Node: short getNodeType()>();

        if $s2 != 1 goto label06;

        $r19 = (org.w3c.dom.Element) $r18;

        $r20 = interfaceinvoke $r19.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $z1 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("stylesheet");

        if $z1 == 0 goto label06;

        $z2 = $r18 instanceof org.apache.xalan.templates.ElemLiteralResult;

        if $z2 == 0 goto label06;

        $r21 = (org.apache.xalan.templates.ElemLiteralResult) $r18;

        $r22 = virtualinvoke $r21.<org.apache.xalan.templates.ElemLiteralResult: org.apache.xalan.templates.AVT getLiteralResultAttribute(java.lang.String)>("href");

        $r23 = virtualinvoke $r22.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r13, $i0, r1);

        $r24 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String,java.lang.String)>($r23, $r15);

        $r25 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r25.<javax.xml.transform.stream.StreamSource: void <init>(java.lang.String)>($r24);

        $r26 = virtualinvoke r41.<javax.xml.transform.TransformerFactory: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)>($r25);

        $r27 = virtualinvoke r41.<javax.xml.transform.sax.SAXTransformerFactory: javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)>($r26);

        $r28 = interfaceinvoke $r27.<javax.xml.transform.sax.TransformerHandler: javax.xml.transform.Transformer getTransformer()>();

        virtualinvoke $r17.<java.util.Vector: void addElement(java.lang.Object)>($r27);

        $r29 = interfaceinvoke $r18.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i5 = 0;

        goto label05;

     label03:
        $r30 = interfaceinvoke $r29.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i5);

        $s3 = interfaceinvoke $r30.<org.w3c.dom.Node: short getNodeType()>();

        if $s3 != 1 goto label04;

        $r31 = (org.w3c.dom.Element) $r30;

        $r32 = interfaceinvoke $r31.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $z3 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("param");

        if $z3 == 0 goto label04;

        $z4 = $r30 instanceof org.apache.xalan.templates.ElemLiteralResult;

        if $z4 == 0 goto label04;

        $r33 = (org.apache.xalan.templates.ElemLiteralResult) $r30;

        $r34 = virtualinvoke $r33.<org.apache.xalan.templates.ElemLiteralResult: org.apache.xalan.templates.AVT getLiteralResultAttribute(java.lang.String)>("name");

        $r35 = virtualinvoke $r34.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r13, $i0, r1);

        $r36 = (org.apache.xalan.templates.ElemLiteralResult) $r30;

        $r37 = virtualinvoke $r36.<org.apache.xalan.templates.ElemLiteralResult: org.apache.xalan.templates.AVT getLiteralResultAttribute(java.lang.String)>("value");

        $r38 = virtualinvoke $r37.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r13, $i0, r1);

        virtualinvoke $r28.<javax.xml.transform.Transformer: void setParameter(java.lang.String,java.lang.Object)>($r35, $r38);

     label04:
        i5 = i5 + 1;

     label05:
        $i6 = interfaceinvoke $r29.<org.w3c.dom.NodeList: int getLength()>();

        if i5 < $i6 goto label03;

     label06:
        i4 = i4 + 1;

     label07:
        $i7 = interfaceinvoke $r16.<org.w3c.dom.NodeList: int getLength()>();

        if i4 < $i7 goto label02;

        virtualinvoke r39.<org.apache.xalan.lib.PipeDocument: void usePipe(java.util.Vector,java.lang.String,java.lang.String)>($r17, $r8, $r11);

     label08:
        goto label10;

     label09:
        $r40 := @caughtexception;

        virtualinvoke $r40.<java.lang.Throwable: void printStackTrace()>();

     label10:
        return;

        catch java.lang.Exception from label01 to label08 with label09;
    }

    public void usePipe(java.util.Vector, java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException, javax.xml.transform.TransformerConfigurationException, java.io.FileNotFoundException, java.io.IOException, org.xml.sax.SAXException, org.xml.sax.SAXNotRecognizedException
    {
        java.lang.Throwable $r16;
        javax.xml.transform.Transformer $r8;
        javax.xml.transform.sax.SAXResult $r6, $r13;
        org.xml.sax.XMLReader $r0;
        java.util.Vector r1;
        int $i0, $i1, i2;
        java.lang.String r12, r15;
        org.xml.sax.ContentHandler $r14;
        java.util.Properties $r9;
        java.io.FileOutputStream $r11;
        org.apache.xalan.lib.PipeDocument r17;
        org.apache.xml.serializer.Serializer $r10;
        java.lang.Object $r2, $r4, $r5, $r7;
        javax.xml.transform.sax.TransformerHandler r3, r18, r19, r20;

        r17 := @this: org.apache.xalan.lib.PipeDocument;

        r1 := @parameter0: java.util.Vector;

        r15 := @parameter1: java.lang.String;

        r12 := @parameter2: java.lang.String;

        $r0 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()>();

        $r2 = virtualinvoke r1.<java.util.Vector: java.lang.Object firstElement()>();

        r3 = (javax.xml.transform.sax.TransformerHandler) $r2;

        interfaceinvoke $r0.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r3);

        interfaceinvoke $r0.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", r3);

        i2 = 1;

        goto label02;

     label01:
        $i1 = i2 - 1;

        $r4 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        r18 = (javax.xml.transform.sax.TransformerHandler) $r4;

        $r5 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r19 = (javax.xml.transform.sax.TransformerHandler) $r5;

        $r6 = new javax.xml.transform.sax.SAXResult;

        specialinvoke $r6.<javax.xml.transform.sax.SAXResult: void <init>(org.xml.sax.ContentHandler)>(r19);

        interfaceinvoke r18.<javax.xml.transform.sax.TransformerHandler: void setResult(javax.xml.transform.Result)>($r6);

        i2 = i2 + 1;

     label02:
        $i0 = virtualinvoke r1.<java.util.Vector: int size()>();

        if i2 < $i0 goto label01;

        $r7 = virtualinvoke r1.<java.util.Vector: java.lang.Object lastElement()>();

        r20 = (javax.xml.transform.sax.TransformerHandler) $r7;

        $r8 = interfaceinvoke r20.<javax.xml.transform.sax.TransformerHandler: javax.xml.transform.Transformer getTransformer()>();

        $r9 = virtualinvoke $r8.<javax.xml.transform.Transformer: java.util.Properties getOutputProperties()>();

        $r10 = staticinvoke <org.apache.xml.serializer.SerializerFactory: org.apache.xml.serializer.Serializer getSerializer(java.util.Properties)>($r9);

        $r11 = new java.io.FileOutputStream;

        specialinvoke $r11.<java.io.FileOutputStream: void <init>(java.lang.String)>(r12);

     label03:
        interfaceinvoke $r10.<org.apache.xml.serializer.Serializer: void setOutputStream(java.io.OutputStream)>($r11);

        $r13 = new javax.xml.transform.sax.SAXResult;

        $r14 = interfaceinvoke $r10.<org.apache.xml.serializer.Serializer: org.xml.sax.ContentHandler asContentHandler()>();

        specialinvoke $r13.<javax.xml.transform.sax.SAXResult: void <init>(org.xml.sax.ContentHandler)>($r14);

        interfaceinvoke r20.<javax.xml.transform.sax.TransformerHandler: void setResult(javax.xml.transform.Result)>($r13);

        interfaceinvoke $r0.<org.xml.sax.XMLReader: void parse(java.lang.String)>(r15);

        goto label08;

     label04:
        goto label07;

     label05:
        $r16 := @caughtexception;

        goto label10;

     label06:
        throw $r16;

     label07:
        return;

     label08:
        if $r11 == null goto label09;

        virtualinvoke $r11.<java.io.FileOutputStream: void close()>();

     label09:
        goto label04;

     label10:
        if $r11 == null goto label11;

        virtualinvoke $r11.<java.io.FileOutputStream: void close()>();

     label11:
        goto label06;

        catch java.lang.Throwable from label03 to label05 with label05;
    }
}
