class javax.servlet.http.NoBodyOutputStream extends javax.servlet.ServletOutputStream
{
    private static final java.lang.String LSTRING_FILE;
    private static java.util.ResourceBundle lStrings;
    private int contentLength;

    void <init>()
    {
        javax.servlet.http.NoBodyOutputStream r0;

        r0 := @this: javax.servlet.http.NoBodyOutputStream;

        specialinvoke r0.<javax.servlet.ServletOutputStream: void <init>()>();

        r0.<javax.servlet.http.NoBodyOutputStream: int contentLength> = 0;

        return;
    }

    int getContentLength()
    {
        int $i0;
        javax.servlet.http.NoBodyOutputStream r0;

        r0 := @this: javax.servlet.http.NoBodyOutputStream;

        $i0 = r0.<javax.servlet.http.NoBodyOutputStream: int contentLength>;

        return $i0;
    }

    public void write(int)
    {
        int $i0, $i1, i2;
        javax.servlet.http.NoBodyOutputStream r0;

        r0 := @this: javax.servlet.http.NoBodyOutputStream;

        i2 := @parameter0: int;

        $i0 = r0.<javax.servlet.http.NoBodyOutputStream: int contentLength>;

        $i1 = $i0 + 1;

        r0.<javax.servlet.http.NoBodyOutputStream: int contentLength> = $i1;

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        byte[] r4;
        java.io.IOException $r0;
        java.util.ResourceBundle $r1;
        int i0, $i1, $i2, i3;
        java.lang.String $r2;
        javax.servlet.http.NoBodyOutputStream r3;

        r3 := @this: javax.servlet.http.NoBodyOutputStream;

        r4 := @parameter0: byte[];

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 < 0 goto label1;

        $i1 = r3.<javax.servlet.http.NoBodyOutputStream: int contentLength>;

        $i2 = $i1 + i0;

        r3.<javax.servlet.http.NoBodyOutputStream: int contentLength> = $i2;

        goto label2;

     label1:
        $r0 = new java.io.IOException;

        $r1 = <javax.servlet.http.NoBodyOutputStream: java.util.ResourceBundle lStrings>;

        $r2 = virtualinvoke $r1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("err.io.negativelength");

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label2:
        return;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r0;

        <javax.servlet.http.NoBodyOutputStream: java.lang.String LSTRING_FILE> = "javax.servlet.http.LocalStrings";

        $r0 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>("javax.servlet.http.LocalStrings");

        <javax.servlet.http.NoBodyOutputStream: java.util.ResourceBundle lStrings> = $r0;

        return;
    }
}
