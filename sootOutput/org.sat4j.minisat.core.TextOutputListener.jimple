public class org.sat4j.minisat.core.TextOutputListener extends java.lang.Object implements org.sat4j.minisat.core.SearchListener
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.sat4j.minisat.core.TextOutputListener r0;

        r0 := @this: org.sat4j.minisat.core.TextOutputListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void assuming(int)
    {
        java.io.PrintStream $r1;
        int i0;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.lang.String $r4;
        org.sat4j.minisat.core.TextOutputListener r5;

        r5 := @this: org.sat4j.minisat.core.TextOutputListener;

        i0 := @parameter0: int;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("assuming ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4);

        return;
    }

    public void propagating(int)
    {
        java.io.PrintStream $r1;
        int i0;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.lang.String $r4;
        org.sat4j.minisat.core.TextOutputListener r5;

        r5 := @this: org.sat4j.minisat.core.TextOutputListener;

        i0 := @parameter0: int;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("implies ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4);

        return;
    }

    public void backtracking(int)
    {
        java.io.PrintStream $r1;
        int i0;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.lang.String $r4;
        org.sat4j.minisat.core.TextOutputListener r5;

        r5 := @this: org.sat4j.minisat.core.TextOutputListener;

        i0 := @parameter0: int;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("backtracking ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4);

        return;
    }

    public void adding(int)
    {
        java.io.PrintStream $r1;
        int i0;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.lang.String $r4;
        org.sat4j.minisat.core.TextOutputListener r5;

        r5 := @this: org.sat4j.minisat.core.TextOutputListener;

        i0 := @parameter0: int;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("adding ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4);

        return;
    }

    public void learn(org.sat4j.minisat.core.Constr)
    {
        org.sat4j.minisat.core.Constr r1;
        org.sat4j.minisat.core.TextOutputListener r0;

        r0 := @this: org.sat4j.minisat.core.TextOutputListener;

        r1 := @parameter0: org.sat4j.minisat.core.Constr;

        return;
    }

    public void delete(int[])
    {
        org.sat4j.minisat.core.TextOutputListener r0;
        int[] r1;

        r0 := @this: org.sat4j.minisat.core.TextOutputListener;

        r1 := @parameter0: int[];

        return;
    }

    public void conflictFound()
    {
        java.io.PrintStream $r0;
        org.sat4j.minisat.core.TextOutputListener r1;

        r1 := @this: org.sat4j.minisat.core.TextOutputListener;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("conflict ");

        return;
    }

    public void solutionFound()
    {
        java.io.PrintStream $r0;
        org.sat4j.minisat.core.TextOutputListener r1;

        r1 := @this: org.sat4j.minisat.core.TextOutputListener;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("solution found ");

        return;
    }

    public void beginLoop()
    {
        org.sat4j.minisat.core.TextOutputListener r0;

        r0 := @this: org.sat4j.minisat.core.TextOutputListener;

        return;
    }

    public void start()
    {
        org.sat4j.minisat.core.TextOutputListener r0;

        r0 := @this: org.sat4j.minisat.core.TextOutputListener;

        return;
    }

    public void end(org.sat4j.minisat.core.Lbool)
    {
        org.sat4j.minisat.core.Lbool r1;
        org.sat4j.minisat.core.TextOutputListener r0;

        r0 := @this: org.sat4j.minisat.core.TextOutputListener;

        r1 := @parameter0: org.sat4j.minisat.core.Lbool;

        return;
    }

    public static void <clinit>()
    {
        <org.sat4j.minisat.core.TextOutputListener: long serialVersionUID> = 1L;

        return;
    }
}
