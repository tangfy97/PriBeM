public class ucar.nc2.dt.grid.GeoGrid extends java.lang.Object implements ucar.nc2.util.NamedObject, ucar.nc2.dt.GridDatatype
{
    private static org.slf4j.Logger log;
    private ucar.nc2.dt.grid.GridDataset dataset;
    private ucar.nc2.dt.grid.GridCoordSys gcs;
    private ucar.nc2.dataset.VariableDS vs;
    private int xDimOrgIndex;
    private int yDimOrgIndex;
    private int zDimOrgIndex;
    private int tDimOrgIndex;
    private int eDimOrgIndex;
    private int rtDimOrgIndex;
    private int xDimNewIndex;
    private int yDimNewIndex;
    private int zDimNewIndex;
    private int tDimNewIndex;
    private int eDimNewIndex;
    private int rtDimNewIndex;
    private java.util.List mydims;
    private boolean debugArrayShape;
    private int hashCode;

    public void <init>(ucar.nc2.dt.grid.GridDataset, ucar.nc2.dataset.VariableDS, ucar.nc2.dt.grid.GridCoordSys)
    {
        ucar.nc2.dataset.CoordinateAxis $r4, $r5, $r7, $r10, $r30, $r36, $r38;
        byte b27;
        ucar.nc2.dt.grid.GridDataset r1;
        ucar.nc2.dt.grid.GridCoordSys r3;
        java.util.ArrayList $r41;
        ucar.nc2.Dimension $r6, $r8, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r31, $r33, $r35, $r37, $r39;
        ucar.nc2.dt.grid.GeoGrid r0;
        ucar.nc2.dataset.CoordinateAxis1D $r9, $r27, $r34, $r40;
        boolean $z0, z1;
        ucar.nc2.dataset.CoordinateAxis1DTime $r11, $r25, $r29, $r32;
        ucar.nc2.dataset.VariableDS r2;
        java.util.List $r13, $r15, $r17, $r19, $r21, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, $i26, $i29, $i31, $i33, $i35, $i37, $i39, $i41, $i43, $i45, $i47, $i49, $i51;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        r1 := @parameter0: ucar.nc2.dt.grid.GridDataset;

        r2 := @parameter1: ucar.nc2.dataset.VariableDS;

        r3 := @parameter2: ucar.nc2.dt.grid.GridCoordSys;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i29 = (int) -1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int xDimOrgIndex> = $i29;

        $i31 = (int) -1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int yDimOrgIndex> = $i31;

        $i33 = (int) -1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int zDimOrgIndex> = $i33;

        $i35 = (int) -1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int tDimOrgIndex> = $i35;

        $i37 = (int) -1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int eDimOrgIndex> = $i37;

        $i39 = (int) -1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int rtDimOrgIndex> = $i39;

        $i41 = (int) -1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int xDimNewIndex> = $i41;

        $i43 = (int) -1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int yDimNewIndex> = $i43;

        $i45 = (int) -1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int zDimNewIndex> = $i45;

        $i47 = (int) -1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int tDimNewIndex> = $i47;

        $i49 = (int) -1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int eDimNewIndex> = $i49;

        $i51 = (int) -1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int rtDimNewIndex> = $i51;

        r0.<ucar.nc2.dt.grid.GeoGrid: boolean debugArrayShape> = 0;

        r0.<ucar.nc2.dt.grid.GeoGrid: int hashCode> = 0;

        r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GridDataset dataset> = r1;

        r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs> = r2;

        r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GridCoordSys gcs> = r3;

        $r4 = virtualinvoke r3.<ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dataset.CoordinateAxis getXHorizAxis()>();

        $z0 = $r4 instanceof ucar.nc2.dataset.CoordinateAxis1D;

        if $z0 == 0 goto label01;

        $r36 = virtualinvoke r3.<ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dataset.CoordinateAxis getXHorizAxis()>();

        $r37 = virtualinvoke $r36.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Dimension getDimension(int)>(0);

        $i23 = specialinvoke r0.<ucar.nc2.dt.grid.GeoGrid: int findDimension(ucar.nc2.Dimension)>($r37);

        r0.<ucar.nc2.dt.grid.GeoGrid: int xDimOrgIndex> = $i23;

        $r38 = virtualinvoke r3.<ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dataset.CoordinateAxis getYHorizAxis()>();

        $r39 = virtualinvoke $r38.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Dimension getDimension(int)>(0);

        $i24 = specialinvoke r0.<ucar.nc2.dt.grid.GeoGrid: int findDimension(ucar.nc2.Dimension)>($r39);

        r0.<ucar.nc2.dt.grid.GeoGrid: int yDimOrgIndex> = $i24;

        goto label02;

     label01:
        $r5 = virtualinvoke r3.<ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dataset.CoordinateAxis getXHorizAxis()>();

        $r6 = virtualinvoke $r5.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Dimension getDimension(int)>(0);

        $i0 = specialinvoke r0.<ucar.nc2.dt.grid.GeoGrid: int findDimension(ucar.nc2.Dimension)>($r6);

        r0.<ucar.nc2.dt.grid.GeoGrid: int yDimOrgIndex> = $i0;

        $r7 = virtualinvoke r3.<ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dataset.CoordinateAxis getXHorizAxis()>();

        $r8 = virtualinvoke $r7.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Dimension getDimension(int)>(1);

        $i1 = specialinvoke r0.<ucar.nc2.dt.grid.GeoGrid: int findDimension(ucar.nc2.Dimension)>($r8);

        r0.<ucar.nc2.dt.grid.GeoGrid: int xDimOrgIndex> = $i1;

     label02:
        $r9 = virtualinvoke r3.<ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dataset.CoordinateAxis1D getVerticalAxis()>();

        if $r9 == null goto label03;

        $r34 = virtualinvoke r3.<ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dataset.CoordinateAxis1D getVerticalAxis()>();

        $r35 = virtualinvoke $r34.<ucar.nc2.dataset.CoordinateAxis1D: ucar.nc2.Dimension getDimension(int)>(0);

        $i22 = specialinvoke r0.<ucar.nc2.dt.grid.GeoGrid: int findDimension(ucar.nc2.Dimension)>($r35);

        r0.<ucar.nc2.dt.grid.GeoGrid: int zDimOrgIndex> = $i22;

     label03:
        $r10 = virtualinvoke r3.<ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dataset.CoordinateAxis getTimeAxis()>();

        if $r10 == null goto label05;

        $r29 = virtualinvoke r3.<ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dataset.CoordinateAxis1DTime getTimeAxis1D()>();

        if $r29 == null goto label04;

        $r32 = virtualinvoke r3.<ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dataset.CoordinateAxis1DTime getTimeAxis1D()>();

        $r33 = virtualinvoke $r32.<ucar.nc2.dataset.CoordinateAxis1DTime: ucar.nc2.Dimension getDimension(int)>(0);

        $i21 = specialinvoke r0.<ucar.nc2.dt.grid.GeoGrid: int findDimension(ucar.nc2.Dimension)>($r33);

        r0.<ucar.nc2.dt.grid.GeoGrid: int tDimOrgIndex> = $i21;

        goto label05;

     label04:
        $r30 = virtualinvoke r3.<ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dataset.CoordinateAxis getTimeAxis()>();

        $r31 = virtualinvoke $r30.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Dimension getDimension(int)>(1);

        $i20 = specialinvoke r0.<ucar.nc2.dt.grid.GeoGrid: int findDimension(ucar.nc2.Dimension)>($r31);

        r0.<ucar.nc2.dt.grid.GeoGrid: int tDimOrgIndex> = $i20;

     label05:
        $r40 = virtualinvoke r3.<ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dataset.CoordinateAxis1D getEnsembleAxis()>();

        if $r40 == null goto label06;

        $r27 = virtualinvoke r3.<ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dataset.CoordinateAxis1D getEnsembleAxis()>();

        $r28 = virtualinvoke $r27.<ucar.nc2.dataset.CoordinateAxis1D: ucar.nc2.Dimension getDimension(int)>(0);

        $i19 = specialinvoke r0.<ucar.nc2.dt.grid.GeoGrid: int findDimension(ucar.nc2.Dimension)>($r28);

        r0.<ucar.nc2.dt.grid.GeoGrid: int eDimOrgIndex> = $i19;

     label06:
        $r11 = virtualinvoke r3.<ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dataset.CoordinateAxis1DTime getRunTimeAxis()>();

        if $r11 == null goto label07;

        $r25 = virtualinvoke r3.<ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dataset.CoordinateAxis1DTime getRunTimeAxis()>();

        $r26 = virtualinvoke $r25.<ucar.nc2.dataset.CoordinateAxis1DTime: ucar.nc2.Dimension getDimension(int)>(0);

        $i18 = specialinvoke r0.<ucar.nc2.dt.grid.GeoGrid: int findDimension(ucar.nc2.Dimension)>($r26);

        r0.<ucar.nc2.dt.grid.GeoGrid: int rtDimOrgIndex> = $i18;

     label07:
        i25 = 0;

        z1 = 0;

        b27 = 0;

        $r41 = new java.util.ArrayList;

        specialinvoke $r41.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dt.grid.GeoGrid: java.util.List mydims> = $r41;

        $i2 = r0.<ucar.nc2.dt.grid.GeoGrid: int rtDimOrgIndex>;

        if $i2 < 0 goto label08;

        $i16 = r0.<ucar.nc2.dt.grid.GeoGrid: int rtDimOrgIndex>;

        $i15 = r0.<ucar.nc2.dt.grid.GeoGrid: int tDimOrgIndex>;

        if $i16 == $i15 goto label08;

        $r23 = r0.<ucar.nc2.dt.grid.GeoGrid: java.util.List mydims>;

        $i17 = r0.<ucar.nc2.dt.grid.GeoGrid: int rtDimOrgIndex>;

        $r24 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>($i17);

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r24);

        i25 = 1;

        z1 = 1;

        b27 = 1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int rtDimNewIndex> = 0;

     label08:
        $i26 = r0.<ucar.nc2.dt.grid.GeoGrid: int eDimOrgIndex>;

        if $i26 < 0 goto label09;

        $r21 = r0.<ucar.nc2.dt.grid.GeoGrid: java.util.List mydims>;

        $i14 = r0.<ucar.nc2.dt.grid.GeoGrid: int eDimOrgIndex>;

        $r22 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>($i14);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r22);

        i25 = z1 + 1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int eDimNewIndex> = b27;

     label09:
        $i3 = r0.<ucar.nc2.dt.grid.GeoGrid: int tDimOrgIndex>;

        if $i3 < 0 goto label10;

        $r19 = r0.<ucar.nc2.dt.grid.GeoGrid: java.util.List mydims>;

        $i12 = r0.<ucar.nc2.dt.grid.GeoGrid: int tDimOrgIndex>;

        $r20 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>($i12);

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r20);

        $i13 = i25;

        i25 = i25 + 1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int tDimNewIndex> = $i13;

     label10:
        $i4 = r0.<ucar.nc2.dt.grid.GeoGrid: int zDimOrgIndex>;

        if $i4 < 0 goto label11;

        $r17 = r0.<ucar.nc2.dt.grid.GeoGrid: java.util.List mydims>;

        $i10 = r0.<ucar.nc2.dt.grid.GeoGrid: int zDimOrgIndex>;

        $r18 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>($i10);

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r18);

        $i11 = i25;

        i25 = i25 + 1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int zDimNewIndex> = $i11;

     label11:
        $i5 = r0.<ucar.nc2.dt.grid.GeoGrid: int yDimOrgIndex>;

        if $i5 < 0 goto label12;

        $r15 = r0.<ucar.nc2.dt.grid.GeoGrid: java.util.List mydims>;

        $i8 = r0.<ucar.nc2.dt.grid.GeoGrid: int yDimOrgIndex>;

        $r16 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>($i8);

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

        $i9 = i25;

        i25 = i25 + 1;

        r0.<ucar.nc2.dt.grid.GeoGrid: int yDimNewIndex> = $i9;

     label12:
        $i6 = r0.<ucar.nc2.dt.grid.GeoGrid: int xDimOrgIndex>;

        if $i6 < 0 goto label13;

        $r13 = r0.<ucar.nc2.dt.grid.GeoGrid: java.util.List mydims>;

        $i7 = r0.<ucar.nc2.dt.grid.GeoGrid: int xDimOrgIndex>;

        $r14 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>($i7);

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r14);

        r0.<ucar.nc2.dt.grid.GeoGrid: int xDimNewIndex> = i25;

     label13:
        return;
    }

    private int findDimension(ucar.nc2.Dimension)
    {
        ucar.nc2.dataset.VariableDS $r1;
        java.util.List $r2;
        ucar.nc2.dt.grid.GeoGrid r0;
        int $i0, i1, $i3;
        java.lang.Object $r3;
        ucar.nc2.Dimension r4, r5;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        r5 := @parameter0: ucar.nc2.Dimension;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: java.util.List getDimensions()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (ucar.nc2.Dimension) $r3;

        $z0 = virtualinvoke r4.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }

    public java.util.List getDimensions()
    {
        java.util.List $r2;
        ucar.nc2.dt.grid.GeoGrid r1;
        java.util.ArrayList $r0;

        r1 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<ucar.nc2.dt.grid.GeoGrid: java.util.List mydims>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        return $r0;
    }

    public ucar.nc2.Dimension getDimension(int)
    {
        java.util.List $r1, $r2;
        ucar.nc2.dt.grid.GeoGrid r0;
        int i0, $i1;
        java.lang.Object $r3;
        ucar.nc2.Dimension $r4;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: java.util.List mydims>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<ucar.nc2.dt.grid.GeoGrid: java.util.List mydims>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (ucar.nc2.Dimension) $r3;

        return $r4;
    }

    public ucar.nc2.Dimension getTimeDimension()
    {
        ucar.nc2.dt.grid.GeoGrid r0;
        int $i0, $i1;
        ucar.nc2.Dimension $r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $i0 = r0.<ucar.nc2.dt.grid.GeoGrid: int tDimNewIndex>;

        if $i0 >= 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $i1 = r0.<ucar.nc2.dt.grid.GeoGrid: int tDimNewIndex>;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getDimension(int)>($i1);

     label2:
        return $r1;
    }

    public ucar.nc2.Dimension getZDimension()
    {
        ucar.nc2.dt.grid.GeoGrid r0;
        int $i0, $i1;
        ucar.nc2.Dimension $r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $i0 = r0.<ucar.nc2.dt.grid.GeoGrid: int zDimNewIndex>;

        if $i0 >= 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $i1 = r0.<ucar.nc2.dt.grid.GeoGrid: int zDimNewIndex>;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getDimension(int)>($i1);

     label2:
        return $r1;
    }

    public ucar.nc2.Dimension getYDimension()
    {
        ucar.nc2.dt.grid.GeoGrid r0;
        int $i0, $i1;
        ucar.nc2.Dimension $r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $i0 = r0.<ucar.nc2.dt.grid.GeoGrid: int yDimNewIndex>;

        if $i0 >= 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $i1 = r0.<ucar.nc2.dt.grid.GeoGrid: int yDimNewIndex>;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getDimension(int)>($i1);

     label2:
        return $r1;
    }

    public ucar.nc2.Dimension getXDimension()
    {
        ucar.nc2.dt.grid.GeoGrid r0;
        int $i0, $i1;
        ucar.nc2.Dimension $r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $i0 = r0.<ucar.nc2.dt.grid.GeoGrid: int xDimNewIndex>;

        if $i0 >= 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $i1 = r0.<ucar.nc2.dt.grid.GeoGrid: int xDimNewIndex>;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getDimension(int)>($i1);

     label2:
        return $r1;
    }

    public ucar.nc2.Dimension getEnsembleDimension()
    {
        ucar.nc2.dt.grid.GeoGrid r0;
        int $i0, $i1;
        ucar.nc2.Dimension $r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $i0 = r0.<ucar.nc2.dt.grid.GeoGrid: int eDimNewIndex>;

        if $i0 >= 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $i1 = r0.<ucar.nc2.dt.grid.GeoGrid: int eDimNewIndex>;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getDimension(int)>($i1);

     label2:
        return $r1;
    }

    public ucar.nc2.Dimension getRunTimeDimension()
    {
        ucar.nc2.dt.grid.GeoGrid r0;
        int $i0, $i1;
        ucar.nc2.Dimension $r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $i0 = r0.<ucar.nc2.dt.grid.GeoGrid: int rtDimNewIndex>;

        if $i0 >= 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $i1 = r0.<ucar.nc2.dt.grid.GeoGrid: int rtDimNewIndex>;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getDimension(int)>($i1);

     label2:
        return $r1;
    }

    public int getTimeDimensionIndex()
    {
        int $i0;
        ucar.nc2.dt.grid.GeoGrid r0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $i0 = r0.<ucar.nc2.dt.grid.GeoGrid: int tDimNewIndex>;

        return $i0;
    }

    public int getZDimensionIndex()
    {
        int $i0;
        ucar.nc2.dt.grid.GeoGrid r0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $i0 = r0.<ucar.nc2.dt.grid.GeoGrid: int zDimNewIndex>;

        return $i0;
    }

    public int getYDimensionIndex()
    {
        int $i0;
        ucar.nc2.dt.grid.GeoGrid r0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $i0 = r0.<ucar.nc2.dt.grid.GeoGrid: int yDimNewIndex>;

        return $i0;
    }

    public int getXDimensionIndex()
    {
        int $i0;
        ucar.nc2.dt.grid.GeoGrid r0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $i0 = r0.<ucar.nc2.dt.grid.GeoGrid: int xDimNewIndex>;

        return $i0;
    }

    public int getEnsembleDimensionIndex()
    {
        int $i0;
        ucar.nc2.dt.grid.GeoGrid r0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $i0 = r0.<ucar.nc2.dt.grid.GeoGrid: int eDimNewIndex>;

        return $i0;
    }

    public int getRunTimeDimensionIndex()
    {
        int $i0;
        ucar.nc2.dt.grid.GeoGrid r0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $i0 = r0.<ucar.nc2.dt.grid.GeoGrid: int rtDimNewIndex>;

        return $i0;
    }

    public ucar.nc2.Attribute findAttributeIgnoreCase(java.lang.String)
    {
        ucar.nc2.dataset.VariableDS $r2;
        ucar.nc2.dt.grid.GeoGrid r0;
        ucar.nc2.Attribute $r3;
        java.lang.String r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute findAttributeIgnoreCase(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String findAttValueIgnoreCase(java.lang.String, java.lang.String)
    {
        ucar.nc2.dataset.VariableDS $r5;
        ucar.nc2.dt.grid.GeoGrid r0;
        ucar.nc2.dt.grid.GridDataset $r1;
        java.lang.String r3, r4, $r6;
        ucar.nc2.dataset.NetcdfDataset $r2;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GridDataset dataset>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset getNetcdfDataset()>();

        $r5 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $r6 = virtualinvoke $r2.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>($r5, r3, r4);

        return $r6;
    }

    public int getRank()
    {
        int $i0;
        ucar.nc2.dataset.VariableDS $r1;
        ucar.nc2.dt.grid.GeoGrid r0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $i0 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: int getRank()>();

        return $i0;
    }

    public int[] getShape()
    {
        java.util.List $r1, $r3, $r4;
        ucar.nc2.dt.grid.GeoGrid r0;
        int[] r2;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r5;
        ucar.nc2.Dimension r6;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: java.util.List mydims>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        r2 = newarray (int)[$i0];

        i3 = 0;

     label1:
        $r3 = r0.<ucar.nc2.dt.grid.GeoGrid: java.util.List mydims>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i3 >= $i1 goto label2;

        $r4 = r0.<ucar.nc2.dt.grid.GeoGrid: java.util.List mydims>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i3);

        r6 = (ucar.nc2.Dimension) $r5;

        $i2 = virtualinvoke r6.<ucar.nc2.Dimension: int getLength()>();

        r2[i3] = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r2;
    }

    public ucar.ma2.DataType getDataType()
    {
        ucar.ma2.DataType $r2;
        ucar.nc2.dataset.VariableDS $r1;
        ucar.nc2.dt.grid.GeoGrid r0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType getDataType()>();

        return $r2;
    }

    public java.util.List getAttributes()
    {
        java.util.List $r2;
        ucar.nc2.dataset.VariableDS $r1;
        ucar.nc2.dt.grid.GeoGrid r0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: java.util.List getAttributes()>();

        return $r2;
    }

    public ucar.nc2.dataset.VariableDS getVariable()
    {
        ucar.nc2.dataset.VariableDS $r1;
        ucar.nc2.dt.grid.GeoGrid r0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        return $r1;
    }

    public java.lang.String getName()
    {
        ucar.nc2.dataset.VariableDS $r1;
        java.lang.String $r2;
        ucar.nc2.dt.grid.GeoGrid r0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.String getNameEscaped()
    {
        ucar.nc2.dataset.VariableDS $r1;
        java.lang.String $r2;
        ucar.nc2.dt.grid.GeoGrid r0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: java.lang.String getNameEscaped()>();

        return $r2;
    }

    public ucar.nc2.dt.GridCoordSystem getCoordinateSystem()
    {
        ucar.nc2.dt.grid.GeoGrid r0;
        ucar.nc2.dt.grid.GridCoordSys $r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GridCoordSys gcs>;

        return $r1;
    }

    public ucar.unidata.geoloc.ProjectionImpl getProjection()
    {
        ucar.nc2.dt.grid.GeoGrid r0;
        ucar.unidata.geoloc.ProjectionImpl $r2;
        ucar.nc2.dt.grid.GridCoordSys $r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GridCoordSys gcs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.grid.GridCoordSys: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        return $r2;
    }

    public java.util.List getLevels()
    {
        java.util.List $r2;
        ucar.nc2.dt.grid.GeoGrid r0;
        ucar.nc2.dt.grid.GridCoordSys $r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GridCoordSys gcs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.grid.GridCoordSys: java.util.List getLevels()>();

        return $r2;
    }

    public java.util.List getTimes()
    {
        java.util.List $r2;
        ucar.nc2.dt.grid.GeoGrid r0;
        ucar.nc2.dt.grid.GridCoordSys $r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GridCoordSys gcs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.grid.GridCoordSys: java.util.List getTimes()>();

        return $r2;
    }

    public java.lang.String getDescription()
    {
        ucar.nc2.dataset.VariableDS $r1;
        java.lang.String $r2;
        ucar.nc2.dt.grid.GeoGrid r0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: java.lang.String getDescription()>();

        return $r2;
    }

    public java.lang.String getUnitsString()
    {
        ucar.nc2.dataset.VariableDS $r1;
        ucar.nc2.dt.grid.GeoGrid r0;
        java.lang.String $r2, $r3;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: java.lang.String getUnitsString()>();

        if $r2 != null goto label1;

        $r3 = "";

        goto label2;

     label1:
        $r3 = $r2;

     label2:
        return $r3;
    }

    public java.lang.String getUnitString()
    {
        java.lang.String $r1;
        ucar.nc2.dt.grid.GeoGrid r0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: java.lang.String getUnitsString()>();

        return $r1;
    }

    public boolean hasMissingData()
    {
        ucar.nc2.dataset.VariableDS $r1;
        ucar.nc2.dt.grid.GeoGrid r0;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $z0 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: boolean hasMissing()>();

        return $z0;
    }

    public boolean isMissingData(double)
    {
        ucar.nc2.dataset.VariableDS $r1;
        ucar.nc2.dt.grid.GeoGrid r0;
        double d0;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $z0 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: boolean isMissing(double)>(d0);

        return $z0;
    }

    public float[] setMissingToNaN(float[])
    {
        ucar.nc2.dataset.VariableDS $r1, $r3;
        float[] r2;
        ucar.nc2.dt.grid.GeoGrid r0;
        int i0, i1;
        float $f0;
        boolean $z0, $z1;
        double d0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        r2 := @parameter0: float[];

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $z0 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: boolean hasMissing()>();

        if $z0 != 0 goto label1;

        return r2;

     label1:
        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $f0 = r2[i1];

        d0 = (double) $f0;

        $r3 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $z1 = virtualinvoke $r3.<ucar.nc2.dataset.VariableDS: boolean isMissing(double)>(d0);

        if $z1 == 0 goto label3;

        r2[i1] = #NaNF;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return r2;
    }

    public ucar.ma2.MAMath$MinMax getMinMaxSkipMissingData(ucar.ma2.Array)
    {
        ucar.ma2.MAMath$MinMax $r4, $r5;
        ucar.ma2.IndexIterator $r2;
        ucar.ma2.Array r1;
        ucar.nc2.dt.grid.GeoGrid r0;
        byte $b0, $b1;
        int $i2, $i3;
        boolean $z0, $z1, $z2;
        double $d0, d1, d2;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        r1 := @parameter0: ucar.ma2.Array;

        $z0 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: boolean hasMissingData()>();

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <ucar.ma2.MAMath: ucar.ma2.MAMath$MinMax getMinMax(ucar.ma2.Array)>(r1);

        return $r4;

     label1:
        $r2 = virtualinvoke r1.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        d1 = -1.7976931348623157E308;

        d2 = 1.7976931348623157E308;

     label2:
        $z2 = interfaceinvoke $r2.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $d0 = interfaceinvoke $r2.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        $z1 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: boolean isMissingData(double)>($d0);

        if $z1 == 0 goto label3;

        goto label2;

     label3:
        $b0 = $d0 cmpl d1;

        $i2 = (int) $b0;

        if $i2 <= 0 goto label4;

        d1 = $d0;

     label4:
        $b1 = $d0 cmpg d2;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label5;

        d2 = $d0;

     label5:
        goto label2;

     label6:
        $r5 = new ucar.ma2.MAMath$MinMax;

        specialinvoke $r5.<ucar.ma2.MAMath$MinMax: void <init>(double,double)>(d2, d1);

        return $r5;
    }

    public ucar.ma2.Array readVolumeData(int) throws java.io.IOException
    {
        ucar.nc2.dt.grid.GeoGrid r0;
        int i0, $i2, $i4, $i6;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        i0 := @parameter0: int;

        $i2 = (int) -1;

        $i4 = (int) -1;

        $i6 = (int) -1;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.ma2.Array readDataSlice(int,int,int,int)>(i0, $i2, $i4, $i6);

        return $r1;
    }

    public ucar.ma2.Array readYXData(int, int) throws java.io.IOException
    {
        ucar.nc2.dt.grid.GeoGrid r0;
        int i0, i1, $i3, $i5;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = (int) -1;

        $i5 = (int) -1;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.ma2.Array readDataSlice(int,int,int,int)>(i0, i1, $i3, $i5);

        return $r1;
    }

    public ucar.ma2.Array readZYData(int, int) throws java.io.IOException
    {
        ucar.nc2.dt.grid.GeoGrid r0;
        int i0, i1, $i3, $i5;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = (int) -1;

        $i5 = (int) -1;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.ma2.Array readDataSlice(int,int,int,int)>(i0, $i3, $i5, i1);

        return $r1;
    }

    public ucar.ma2.Array getDataSlice(int, int, int, int) throws java.io.IOException
    {
        ucar.nc2.dt.grid.GeoGrid r0;
        int i0, i1, i2, i3;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.ma2.Array readDataSlice(int,int,int,int)>(i0, i1, i2, i3);

        return $r1;
    }

    public ucar.ma2.Array readDataSlice(int, int, int, int) throws java.io.IOException
    {
        ucar.nc2.dt.grid.GeoGrid r0;
        int i0, i1, i2, i3;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.ma2.Array readDataSlice(int,int,int,int,int,int)>(0, 0, i0, i1, i2, i3);

        return $r1;
    }

    public ucar.ma2.Array readDataSlice(int, int, int, int, int, int) throws java.io.IOException
    {
        byte b53, b54;
        ucar.nc2.dt.grid.GridDataset $r51;
        java.lang.Exception $r44;
        java.lang.StringBuilder $r19, $r21, $r22, $r25, $r27, $r29, $r32, $r34, $r35, $r36, $r37, $r38, $r42, $r45, $r47, $r49, $r50, $r53;
        java.util.ArrayList $r12;
        java.lang.String $r23, $r28, $r30, $r41, $r43, $r48, $r52, $r54, $r56;
        java.io.IOException $r55;
        ucar.ma2.Array $r11, r57;
        ucar.nc2.Dimension $r4, $r5, $r6, $r7, $r8, $r9, $r40, r58;
        ucar.nc2.dt.grid.GeoGrid r0;
        int[] r2, r3, r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, z11;
        ucar.nc2.dataset.VariableDS $r1, $r10, $r13, $r39;
        java.util.List $r14;
        int $i0, $i1, i2, i3, i4, i5, i6, i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, i45, i46, i47, i48, i49, i50, $i51, i52;
        java.io.PrintStream $r16, $r18, $r20, $r26, $r31, $r33;
        org.slf4j.Logger $r46;
        java.util.Iterator $r17;
        java.lang.Object $r24;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        i7 := @parameter0: int;

        i6 := @parameter1: int;

        i5 := @parameter2: int;

        i4 := @parameter3: int;

        i3 := @parameter4: int;

        i2 := @parameter5: int;

        $r1 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $i0 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: int getRank()>();

        r2 = newarray (int)[$i0];

        r3 = newarray (int)[$i0];

        i45 = 0;

     label01:
        if i45 >= $i0 goto label02;

        r2[i45] = 0;

        r3[i45] = 1;

        i45 = i45 + 1;

        goto label01;

     label02:
        $r4 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getXDimension()>();

        $r5 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getYDimension()>();

        $r6 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getZDimension()>();

        $r7 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getTimeDimension()>();

        $r8 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getEnsembleDimension()>();

        $r9 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getRunTimeDimension()>();

        if $r9 == null goto label04;

        if i7 < 0 goto label03;

        $i43 = virtualinvoke $r9.<ucar.nc2.Dimension: int getLength()>();

        if i7 >= $i43 goto label03;

        $i44 = r0.<ucar.nc2.dt.grid.GeoGrid: int rtDimOrgIndex>;

        r2[$i44] = i7;

        goto label04;

     label03:
        $i41 = r0.<ucar.nc2.dt.grid.GeoGrid: int rtDimOrgIndex>;

        $i42 = virtualinvoke $r9.<ucar.nc2.Dimension: int getLength()>();

        r3[$i41] = $i42;

     label04:
        if $r8 == null goto label06;

        if i6 < 0 goto label05;

        $i39 = virtualinvoke $r8.<ucar.nc2.Dimension: int getLength()>();

        if i6 >= $i39 goto label05;

        $i40 = r0.<ucar.nc2.dt.grid.GeoGrid: int eDimOrgIndex>;

        r2[$i40] = i6;

        goto label06;

     label05:
        $i37 = r0.<ucar.nc2.dt.grid.GeoGrid: int eDimOrgIndex>;

        $i38 = virtualinvoke $r8.<ucar.nc2.Dimension: int getLength()>();

        r3[$i37] = $i38;

     label06:
        if $r7 == null goto label08;

        if i5 < 0 goto label07;

        $i35 = virtualinvoke $r7.<ucar.nc2.Dimension: int getLength()>();

        if i5 >= $i35 goto label07;

        $i36 = r0.<ucar.nc2.dt.grid.GeoGrid: int tDimOrgIndex>;

        r2[$i36] = i5;

        goto label08;

     label07:
        $i33 = r0.<ucar.nc2.dt.grid.GeoGrid: int tDimOrgIndex>;

        $i34 = virtualinvoke $r7.<ucar.nc2.Dimension: int getLength()>();

        r3[$i33] = $i34;

     label08:
        if $r6 == null goto label10;

        if i4 < 0 goto label09;

        $i31 = virtualinvoke $r6.<ucar.nc2.Dimension: int getLength()>();

        if i4 >= $i31 goto label09;

        $i32 = r0.<ucar.nc2.dt.grid.GeoGrid: int zDimOrgIndex>;

        r2[$i32] = i4;

        goto label10;

     label09:
        $i29 = r0.<ucar.nc2.dt.grid.GeoGrid: int zDimOrgIndex>;

        $i30 = virtualinvoke $r6.<ucar.nc2.Dimension: int getLength()>();

        r3[$i29] = $i30;

     label10:
        if $r5 == null goto label12;

        if i3 < 0 goto label11;

        $i27 = virtualinvoke $r5.<ucar.nc2.Dimension: int getLength()>();

        if i3 >= $i27 goto label11;

        $i28 = r0.<ucar.nc2.dt.grid.GeoGrid: int yDimOrgIndex>;

        r2[$i28] = i3;

        goto label12;

     label11:
        $i25 = r0.<ucar.nc2.dt.grid.GeoGrid: int yDimOrgIndex>;

        $i26 = virtualinvoke $r5.<ucar.nc2.Dimension: int getLength()>();

        r3[$i25] = $i26;

     label12:
        if $r4 == null goto label14;

        if i2 < 0 goto label13;

        $i23 = virtualinvoke $r4.<ucar.nc2.Dimension: int getLength()>();

        if i2 >= $i23 goto label13;

        $i24 = r0.<ucar.nc2.dt.grid.GeoGrid: int xDimOrgIndex>;

        r2[$i24] = i2;

        goto label14;

     label13:
        $i21 = r0.<ucar.nc2.dt.grid.GeoGrid: int xDimOrgIndex>;

        $i22 = virtualinvoke $r4.<ucar.nc2.Dimension: int getLength()>();

        r3[$i21] = $i22;

     label14:
        $z8 = r0.<ucar.nc2.dt.grid.GeoGrid: boolean debugArrayShape>;

        if $z8 == 0 goto label16;

        $r31 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>("read shape from org variable = ");

        i46 = 0;

     label15:
        if i46 >= $i0 goto label16;

        $r33 = <java.lang.System: java.io.PrintStream out>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   start = ");

        $i19 = r2[i46];

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" shape = ");

        $i20 = r3[i46];

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name = ");

        $r39 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $r40 = virtualinvoke $r39.<ucar.nc2.dataset.VariableDS: ucar.nc2.Dimension getDimension(int)>(i46);

        $r41 = virtualinvoke $r40.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r43);

        i46 = i46 + 1;

        goto label15;

     label16:
        $r10 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $r11 = virtualinvoke $r10.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array read(int[],int[])>(r2, r3);

        r57 = $r11;

     label17:
        goto label19;

     label18:
        $r44 := @caughtexception;

        $r46 = <ucar.nc2.dt.grid.GeoGrid: org.slf4j.Logger log>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GeoGrid.getdataSlice() on dataset ");

        $r48 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: java.lang.String getName()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r51 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GridDataset dataset>;

        $r52 = virtualinvoke $r51.<ucar.nc2.dt.grid.GridDataset: java.lang.String getLocation()>();

        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r46.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r54, $r44);

        $r55 = new java.io.IOException;

        $r56 = virtualinvoke $r44.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r55.<java.io.IOException: void <init>(java.lang.String)>($r56);

        throw $r55;

     label19:
        $r12 = new java.util.ArrayList;

        $r13 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $r14 = virtualinvoke $r13.<ucar.nc2.dataset.VariableDS: java.util.List getDimensions()>();

        specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r14);

        $i1 = virtualinvoke $r11.<ucar.ma2.Array: int getRank()>();

        r15 = newarray (int)[$i1];

        i47 = 0;

        z10 = 0;

        b53 = 0;

        $z0 = interfaceinvoke $r12.<java.util.List: boolean contains(java.lang.Object)>($r9);

        if $z0 == 0 goto label20;

        i47 = 1;

        z10 = 1;

        b53 = 1;

        $i18 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>($r9);

        r15[0] = $i18;

     label20:
        $z1 = interfaceinvoke $r12.<java.util.List: boolean contains(java.lang.Object)>($r8);

        if $z1 == 0 goto label21;

        i47 = z10 + 1;

        $i17 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>($r8);

        r15[b53] = $i17;

     label21:
        $z2 = interfaceinvoke $r12.<java.util.List: boolean contains(java.lang.Object)>($r7);

        if $z2 == 0 goto label22;

        $i15 = i47;

        i47 = i47 + 1;

        $i16 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>($r7);

        r15[$i15] = $i16;

     label22:
        $z3 = interfaceinvoke $r12.<java.util.List: boolean contains(java.lang.Object)>($r6);

        if $z3 == 0 goto label23;

        $i13 = i47;

        i47 = i47 + 1;

        $i14 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>($r6);

        r15[$i13] = $i14;

     label23:
        $z4 = interfaceinvoke $r12.<java.util.List: boolean contains(java.lang.Object)>($r5);

        if $z4 == 0 goto label24;

        $i11 = i47;

        i47 = i47 + 1;

        $i12 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>($r5);

        r15[$i11] = $i12;

     label24:
        $z5 = interfaceinvoke $r12.<java.util.List: boolean contains(java.lang.Object)>($r4);

        if $z5 == 0 goto label25;

        $i10 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>($r4);

        r15[i47] = $i10;

     label25:
        $z6 = r0.<ucar.nc2.dt.grid.GeoGrid: boolean debugArrayShape>;

        if $z6 == 0 goto label29;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("oldDims = ");

        $r17 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label26:
        $z7 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label27;

        $r24 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r58 = (ucar.nc2.Dimension) $r24;

        $r26 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   oldDim = ");

        $r28 = virtualinvoke r58.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r30);

        goto label26;

     label27:
        $r18 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("permute dims = ");

        i48 = lengthof r15;

        i49 = 0;

     label28:
        if i49 >= i48 goto label29;

        i9 = r15[i49];

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   oldDim index = ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r23);

        i49 = i49 + 1;

        goto label28;

     label29:
        z9 = 0;

        i50 = 0;

     label30:
        $i51 = lengthof r15;

        if i50 >= $i51 goto label32;

        $i8 = r15[i50];

        if i50 == $i8 goto label31;

        z9 = 1;

     label31:
        i50 = i50 + 1;

        goto label30;

     label32:
        if z9 == 0 goto label33;

        r57 = virtualinvoke $r11.<ucar.ma2.Array: ucar.ma2.Array permute(int[])>(r15);

     label33:
        i52 = 0;

        z11 = 0;

        b54 = 0;

        if $r9 == null goto label35;

        if i7 < 0 goto label34;

        r57 = virtualinvoke r57.<ucar.ma2.Array: ucar.ma2.Array reduce(int)>(0);

        goto label35;

     label34:
        i52 = 1;

        z11 = 1;

        b54 = 1;

     label35:
        if $r8 == null goto label37;

        if i6 < 0 goto label36;

        r57 = virtualinvoke r57.<ucar.ma2.Array: ucar.ma2.Array reduce(int)>(b54);

        goto label37;

     label36:
        i52 = z11 + 1;

     label37:
        if $r7 == null goto label39;

        if i5 < 0 goto label38;

        r57 = virtualinvoke r57.<ucar.ma2.Array: ucar.ma2.Array reduce(int)>(i52);

        goto label39;

     label38:
        i52 = i52 + 1;

     label39:
        if $r6 == null goto label41;

        if i4 < 0 goto label40;

        r57 = virtualinvoke r57.<ucar.ma2.Array: ucar.ma2.Array reduce(int)>(i52);

        goto label41;

     label40:
        i52 = i52 + 1;

     label41:
        if $r5 == null goto label43;

        if i3 < 0 goto label42;

        r57 = virtualinvoke r57.<ucar.ma2.Array: ucar.ma2.Array reduce(int)>(i52);

        goto label43;

     label42:
        i52 = i52 + 1;

     label43:
        if $r4 == null goto label44;

        if i2 < 0 goto label44;

        r57 = virtualinvoke r57.<ucar.ma2.Array: ucar.ma2.Array reduce(int)>(i52);

     label44:
        return r57;

        catch java.lang.Exception from label16 to label17 with label18;
    }

    public ucar.nc2.dt.grid.GeoGrid subset(ucar.ma2.Range, ucar.ma2.Range, ucar.unidata.geoloc.LatLonRect, int, int, int) throws ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dt.grid.GeoGrid r1, $r18;
        ucar.ma2.Range r2, $r3, $r5, $r6, $r8, $r14, r15, r16, r17;
        java.util.List $r10;
        ucar.nc2.dt.grid.GridCoordSys $r9;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12;
        ucar.unidata.geoloc.LatLonRect r0;
        ucar.nc2.Dimension $r4, $r7, $r13;
        java.lang.Object $r11, $r12;

        r1 := @this: ucar.nc2.dt.grid.GeoGrid;

        r2 := @parameter0: ucar.ma2.Range;

        r15 := @parameter1: ucar.ma2.Range;

        r0 := @parameter2: ucar.unidata.geoloc.LatLonRect;

        i10 := @parameter3: int;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        if r15 != null goto label1;

        if i10 <= 1 goto label1;

        $r13 = virtualinvoke r1.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getZDimension()>();

        if $r13 == null goto label1;

        $r14 = new ucar.ma2.Range;

        $i11 = virtualinvoke $r13.<ucar.nc2.Dimension: int getLength()>();

        $i12 = $i11 - 1;

        specialinvoke $r14.<ucar.ma2.Range: void <init>(int,int,int)>(0, $i12, i10);

        r15 = $r14;

     label1:
        r16 = null;

        r17 = null;

        if r0 == null goto label2;

        $r9 = r1.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GridCoordSys gcs>;

        $r10 = virtualinvoke $r9.<ucar.nc2.dt.grid.GridCoordSys: java.util.List getRangesFromLatLonRect(ucar.unidata.geoloc.LatLonRect)>(r0);

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0);

        r16 = (ucar.ma2.Range) $r11;

        $r12 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(1);

        r17 = (ucar.ma2.Range) $r12;

     label2:
        if i0 <= 1 goto label4;

        if r16 != null goto label3;

        $r7 = virtualinvoke r1.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getYDimension()>();

        $r8 = new ucar.ma2.Range;

        $i8 = virtualinvoke $r7.<ucar.nc2.Dimension: int getLength()>();

        $i9 = $i8 - 1;

        specialinvoke $r8.<ucar.ma2.Range: void <init>(int,int,int)>(0, $i9, i0);

        r16 = $r8;

        goto label4;

     label3:
        $r6 = new ucar.ma2.Range;

        $i6 = virtualinvoke r16.<ucar.ma2.Range: int first()>();

        $i7 = virtualinvoke r16.<ucar.ma2.Range: int last()>();

        specialinvoke $r6.<ucar.ma2.Range: void <init>(int,int,int)>($i6, $i7, i0);

        r16 = $r6;

     label4:
        if i1 <= 1 goto label6;

        if r17 != null goto label5;

        $r4 = virtualinvoke r1.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getXDimension()>();

        $r5 = new ucar.ma2.Range;

        $i4 = virtualinvoke $r4.<ucar.nc2.Dimension: int getLength()>();

        $i5 = $i4 - 1;

        specialinvoke $r5.<ucar.ma2.Range: void <init>(int,int,int)>(0, $i5, i1);

        r17 = $r5;

        goto label6;

     label5:
        $r3 = new ucar.ma2.Range;

        $i2 = virtualinvoke r17.<ucar.ma2.Range: int first()>();

        $i3 = virtualinvoke r17.<ucar.ma2.Range: int last()>();

        specialinvoke $r3.<ucar.ma2.Range: void <init>(int,int,int)>($i2, $i3, i1);

        r17 = $r3;

     label6:
        $r18 = virtualinvoke r1.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GeoGrid subset(ucar.ma2.Range,ucar.ma2.Range,ucar.ma2.Range,ucar.ma2.Range)>(r2, r15, r16, r17);

        return $r18;
    }

    public ucar.nc2.dt.GridDatatype makeSubset(ucar.ma2.Range, ucar.ma2.Range, ucar.unidata.geoloc.LatLonRect, int, int, int) throws ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Range r1, r2;
        ucar.unidata.geoloc.LatLonRect r3;
        ucar.nc2.dt.grid.GeoGrid r0, $r4;
        int i0, i1, i2;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        r1 := @parameter0: ucar.ma2.Range;

        r2 := @parameter1: ucar.ma2.Range;

        r3 := @parameter2: ucar.unidata.geoloc.LatLonRect;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        $r4 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GeoGrid subset(ucar.ma2.Range,ucar.ma2.Range,ucar.unidata.geoloc.LatLonRect,int,int,int)>(r1, r2, r3, i0, i1, i2);

        return $r4;
    }

    public ucar.nc2.dt.grid.GeoGrid subset(ucar.ma2.Range, ucar.ma2.Range, ucar.ma2.Range, ucar.ma2.Range) throws ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Range r1, r2, r3, r4;
        ucar.nc2.dt.GridDatatype $r5;
        ucar.nc2.dt.grid.GeoGrid r0, $r6;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        r1 := @parameter0: ucar.ma2.Range;

        r2 := @parameter1: ucar.ma2.Range;

        r3 := @parameter2: ucar.ma2.Range;

        r4 := @parameter3: ucar.ma2.Range;

        $r5 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.GridDatatype makeSubset(ucar.ma2.Range,ucar.ma2.Range,ucar.ma2.Range,ucar.ma2.Range,ucar.ma2.Range,ucar.ma2.Range)>(null, null, r1, r2, r3, r4);

        $r6 = (ucar.nc2.dt.grid.GeoGrid) $r5;

        return $r6;
    }

    public ucar.nc2.dt.GridDatatype makeSubset(ucar.ma2.Range, ucar.ma2.Range, ucar.ma2.Range, ucar.ma2.Range, ucar.ma2.Range, ucar.ma2.Range) throws ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dt.grid.GeoGrid r0, $r22;
        boolean $z0;
        ucar.ma2.Range r15, r16, r17, r18, r19, r20;
        ucar.nc2.dataset.VariableDS $r10, $r26;
        ucar.nc2.dt.grid.GridDataset $r23;
        ucar.ma2.Range[] r1;
        java.util.List $r8, $r12;
        ucar.ma2.Section $r9;
        ucar.nc2.dt.grid.GridCoordSys $r14, $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        ucar.nc2.Variable $r11;
        java.util.Iterator $r13;
        ucar.nc2.Dimension $r2, $r3, $r4, $r5, $r6, $r7, r25;
        java.lang.Object $r24;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        r15 := @parameter0: ucar.ma2.Range;

        r16 := @parameter1: ucar.ma2.Range;

        r17 := @parameter2: ucar.ma2.Range;

        r18 := @parameter3: ucar.ma2.Range;

        r19 := @parameter4: ucar.ma2.Range;

        r20 := @parameter5: ucar.ma2.Range;

        $i0 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: int getRank()>();

        r1 = newarray (ucar.ma2.Range)[$i0];

        $r2 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getXDimension()>();

        if null == $r2 goto label1;

        $i6 = r0.<ucar.nc2.dt.grid.GeoGrid: int xDimOrgIndex>;

        r1[$i6] = r20;

     label1:
        $r3 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getYDimension()>();

        if null == $r3 goto label2;

        $i5 = r0.<ucar.nc2.dt.grid.GeoGrid: int yDimOrgIndex>;

        r1[$i5] = r19;

     label2:
        $r4 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getZDimension()>();

        if null == $r4 goto label3;

        $i4 = r0.<ucar.nc2.dt.grid.GeoGrid: int zDimOrgIndex>;

        r1[$i4] = r18;

     label3:
        $r5 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getTimeDimension()>();

        if null == $r5 goto label4;

        $i3 = r0.<ucar.nc2.dt.grid.GeoGrid: int tDimOrgIndex>;

        r1[$i3] = r17;

     label4:
        $r6 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getRunTimeDimension()>();

        if null == $r6 goto label5;

        $i2 = r0.<ucar.nc2.dt.grid.GeoGrid: int rtDimOrgIndex>;

        r1[$i2] = r15;

     label5:
        $r7 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.Dimension getEnsembleDimension()>();

        if null == $r7 goto label6;

        $i1 = r0.<ucar.nc2.dt.grid.GeoGrid: int eDimOrgIndex>;

        r1[$i1] = r16;

     label6:
        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        $r10 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        $r9 = new ucar.ma2.Section;

        specialinvoke $r9.<ucar.ma2.Section: void <init>(java.util.List)>($r8);

        $r11 = virtualinvoke $r10.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable section(ucar.ma2.Section)>($r9);

        $r26 = (ucar.nc2.dataset.VariableDS) $r11;

        $r12 = virtualinvoke $r26.<ucar.nc2.dataset.VariableDS: java.util.List getDimensions()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r24 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r25 = (ucar.nc2.Dimension) $r24;

        virtualinvoke r25.<ucar.nc2.Dimension: void setShared(boolean)>(1);

        goto label7;

     label8:
        $r14 = new ucar.nc2.dt.grid.GridCoordSys;

        $r21 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GridCoordSys gcs>;

        specialinvoke $r14.<ucar.nc2.dt.grid.GridCoordSys: void <init>(ucar.nc2.dt.grid.GridCoordSys,ucar.ma2.Range,ucar.ma2.Range,ucar.ma2.Range,ucar.ma2.Range,ucar.ma2.Range,ucar.ma2.Range)>($r21, r15, r16, r17, r18, r19, r20);

        $r22 = new ucar.nc2.dt.grid.GeoGrid;

        $r23 = r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GridDataset dataset>;

        specialinvoke $r22.<ucar.nc2.dt.grid.GeoGrid: void <init>(ucar.nc2.dt.grid.GridDataset,ucar.nc2.dataset.VariableDS,ucar.nc2.dt.grid.GridCoordSys)>($r23, $r26, $r14);

        return $r22;
    }

    public void writeFile(java.lang.String) throws java.io.IOException
    {
        ucar.nc2.dt.grid.GridCoordSys $r5, $r8;
        java.util.ArrayList $r2;
        ucar.nc2.dataset.CoordinateAxis r24;
        ucar.nc2.dt.grid.GeoGrid r3;
        java.lang.String r1, $r12, $r17;
        ucar.nc2.FileWriter $r0;
        boolean $z0;
        ucar.nc2.dataset.VariableDS $r4, $r21;
        java.util.Iterator $r7;
        ucar.nc2.dt.grid.GridDataset $r10, $r19;
        ucar.nc2.dataset.ProjectionCT $r9;
        java.util.List $r6;
        ucar.nc2.Attribute $r13, $r18, $r22;
        java.lang.StringBuilder $r14, $r15, $r16;
        java.lang.Object $r23;
        ucar.nc2.dataset.NetcdfDataset $r11, $r20;

        r3 := @this: ucar.nc2.dt.grid.GeoGrid;

        r1 := @parameter0: java.lang.String;

        $r0 = new ucar.nc2.FileWriter;

        specialinvoke $r0.<ucar.nc2.FileWriter: void <init>(java.lang.String,boolean)>(r1, 1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r4 = r3.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dataset.VariableDS vs>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = r3.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GridCoordSys gcs>;

        $r6 = virtualinvoke $r5.<ucar.nc2.dt.grid.GridCoordSys: java.util.List getCoordinateAxes()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r23 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r24 = (ucar.nc2.dataset.CoordinateAxis) $r23;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r24);

        goto label1;

     label2:
        virtualinvoke $r0.<ucar.nc2.FileWriter: void writeVariables(java.util.List)>($r2);

        $r8 = r3.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GridCoordSys gcs>;

        $r9 = virtualinvoke $r8.<ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dataset.ProjectionCT getProjectionCT()>();

        if $r9 == null goto label3;

        $r19 = r3.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GridDataset dataset>;

        $r20 = virtualinvoke $r19.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset getNetcdfDataset()>();

        $r21 = staticinvoke <ucar.nc2.dataset.CoordTransBuilder: ucar.nc2.dataset.VariableDS makeDummyTransformVariable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.CoordinateTransform)>($r20, $r9);

        $r22 = new ucar.nc2.Attribute;

        specialinvoke $r22.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisTypes", "GeoX GeoY");

        virtualinvoke $r21.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r22);

        virtualinvoke $r0.<ucar.nc2.FileWriter: void writeVariable(ucar.nc2.Variable)>($r21);

     label3:
        $r10 = r3.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.grid.GridDataset dataset>;

        $r11 = virtualinvoke $r10.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset getNetcdfDataset()>();

        $r12 = virtualinvoke $r11.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        $r13 = new ucar.nc2.Attribute;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GeoGrid extracted from dataset ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("History", $r17);

        virtualinvoke $r0.<ucar.nc2.FileWriter: void writeGlobalAttribute(ucar.nc2.Attribute)>($r13);

        $r18 = new ucar.nc2.Attribute;

        specialinvoke $r18.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("Convention", "_Coordinates");

        virtualinvoke $r0.<ucar.nc2.FileWriter: void writeGlobalAttribute(ucar.nc2.Attribute)>($r18);

        virtualinvoke $r0.<ucar.nc2.FileWriter: void finish()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        ucar.nc2.dt.grid.GeoGrid r0, r2;
        ucar.nc2.dt.GridCoordSystem $r5, $r6;
        java.lang.Object r1;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof ucar.nc2.dt.grid.GeoGrid;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (ucar.nc2.dt.grid.GeoGrid) r1;

        $r3 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: java.lang.String getName()>();

        $r4 = virtualinvoke r2.<ucar.nc2.dt.grid.GeoGrid: java.lang.String getName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r5 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r6 = virtualinvoke r2.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        ucar.nc2.dt.grid.GeoGrid r0;
        ucar.nc2.dt.GridCoordSystem $r2;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $i0 = r0.<ucar.nc2.dt.grid.GeoGrid: int hashCode>;

        if $i0 != 0 goto label1;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: java.lang.String getName()>();

        $i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        i5 = 629 + $i2;

        $i3 = 37 * i5;

        $r2 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $i4 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i6 = $i3 + $i4;

        r0.<ucar.nc2.dt.grid.GeoGrid: int hashCode> = i6;

     label1:
        $i1 = r0.<ucar.nc2.dt.grid.GeoGrid: int hashCode>;

        return $i1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        ucar.nc2.dt.grid.GeoGrid r0;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: java.lang.String getName()>();

        return $r1;
    }

    public java.lang.String getInfo()
    {
        ucar.nc2.dt.grid.GeoGrid r1;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean $z0;

        r1 := @this: ucar.nc2.dt.grid.GeoGrid;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(200);

        virtualinvoke $r0.<java.lang.StringBuilder: void setLength(int)>(0);

        $r2 = virtualinvoke r1.<ucar.nc2.dt.grid.GeoGrid: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        staticinvoke <ucar.unidata.util.Format: void tab(java.lang.StringBuilder,int,boolean)>($r0, 30, 1);

        $r3 = virtualinvoke r1.<ucar.nc2.dt.grid.GeoGrid: java.lang.String getUnitsString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        staticinvoke <ucar.unidata.util.Format: void tab(java.lang.StringBuilder,int,boolean)>($r0, 60, 1);

        $z0 = virtualinvoke r1.<ucar.nc2.dt.grid.GeoGrid: boolean hasMissingData()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        staticinvoke <ucar.unidata.util.Format: void tab(java.lang.StringBuilder,int,boolean)>($r0, 66, 1);

        $r4 = virtualinvoke r1.<ucar.nc2.dt.grid.GeoGrid: java.lang.String getDescription()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public int compareTo(ucar.nc2.dt.GridDatatype)
    {
        ucar.nc2.dt.GridDatatype r2;
        ucar.nc2.dt.grid.GeoGrid r0;
        int $i0;
        java.lang.String $r1, $r3;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        r2 := @parameter0: ucar.nc2.dt.GridDatatype;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: java.lang.String getName()>();

        $r3 = interfaceinvoke r2.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        ucar.nc2.dt.GridDatatype $r2;
        ucar.nc2.dt.grid.GeoGrid r0;
        int $i0;
        java.lang.Object r1;

        r0 := @this: ucar.nc2.dt.grid.GeoGrid;

        r1 := @parameter0: java.lang.Object;

        $r2 = (ucar.nc2.dt.GridDatatype) r1;

        $i0 = virtualinvoke r0.<ucar.nc2.dt.grid.GeoGrid: int compareTo(ucar.nc2.dt.GridDatatype)>($r2);

        return $i0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/dt/grid/GeoGrid;");

        <ucar.nc2.dt.grid.GeoGrid: org.slf4j.Logger log> = $r0;

        return;
    }
}
