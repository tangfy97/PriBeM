class org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser extends org.xml.sax.helpers.DefaultHandler
{
    private java.awt.Font baseFont;
    private org.fife.ui.rsyntaxtextarea.SyntaxScheme scheme;

    public void <init>(java.awt.Font)
    {
        org.fife.ui.rsyntaxtextarea.SyntaxScheme $r1;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser r0;
        java.awt.Font r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser;

        r2 := @parameter0: java.awt.Font;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        $r1 = new org.fife.ui.rsyntaxtextarea.SyntaxScheme;

        specialinvoke $r1.<org.fife.ui.rsyntaxtextarea.SyntaxScheme: void <init>(java.awt.Font)>(r2);

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser: org.fife.ui.rsyntaxtextarea.SyntaxScheme scheme> = $r1;

        return;
    }

    private static org.xml.sax.XMLReader createReader() throws java.io.IOException
    {
        org.xml.sax.XMLReader r4;
        org.xml.sax.SAXException $r0, $r3;
        java.io.IOException $r1;
        java.lang.String $r2;

     label1:
        r4 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()>();

     label2:
        goto label7;

     label3:
        $r3 := @caughtexception;

     label4:
        r4 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader(java.lang.String)>("org.apache.crimson.parser.XMLReaderImpl");

     label5:
        goto label7;

     label6:
        $r0 := @caughtexception;

        $r1 = new java.io.IOException;

        $r2 = virtualinvoke $r0.<org.xml.sax.SAXException: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label7:
        return r4;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
        catch org.xml.sax.SAXException from label4 to label5 with label6;
    }

    public static org.fife.ui.rsyntaxtextarea.SyntaxScheme load(java.awt.Font, java.io.InputStream) throws java.io.IOException
    {
        org.xml.sax.InputSource $r3;
        java.awt.Font r2;
        java.io.IOException $r7;
        org.xml.sax.XMLReader $r0;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme $r5;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser $r1;
        org.xml.sax.SAXException $r6;
        java.lang.String $r8;
        java.io.InputStream r4;

        r2 := @parameter0: java.awt.Font;

        r4 := @parameter1: java.io.InputStream;

        $r0 = staticinvoke <org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser: org.xml.sax.XMLReader createReader()>();

        $r1 = new org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser;

        specialinvoke $r1.<org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser: void <init>(java.awt.Font)>(r2);

        $r1.<org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser: java.awt.Font baseFont> = r2;

        interfaceinvoke $r0.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r1);

        $r3 = new org.xml.sax.InputSource;

        specialinvoke $r3.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r4);

        virtualinvoke $r3.<org.xml.sax.InputSource: void setEncoding(java.lang.String)>("UTF-8");

     label1:
        interfaceinvoke $r0.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r3);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.io.IOException;

        $r8 = virtualinvoke $r6.<org.xml.sax.SAXException: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label4:
        $r5 = $r1.<org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser: org.fife.ui.rsyntaxtextarea.SyntaxScheme scheme>;

        return $r5;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)
    {
        java.awt.Color $r25, $r29;
        byte b1;
        boolean $z0, $z1, z2, z3, z4;
        java.lang.IllegalAccessException $r33;
        java.awt.Font $r20, $r22;
        java.lang.Exception $r35;
        org.fife.ui.rsyntaxtextarea.Style $r17, $r21, $r28, $r32;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme $r9, $r15, $r18, $r26, $r30;
        org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser r8;
        java.lang.StringBuffer $r36, $r38, $r39;
        org.xml.sax.Attributes r2;
        int $i0;
        java.lang.Boolean $r14, $r23, $r24;
        org.fife.ui.rsyntaxtextarea.Style[] $r16, $r19, $r27, $r31;
        java.lang.String r0, $r1, $r3, $r10, $r11, $r12, $r13, $r40, r42, r43, $r45;
        java.io.PrintStream $r37;
        java.lang.RuntimeException $r41;
        java.lang.reflect.Field $r5;
        java.lang.IllegalArgumentException $r34;
        java.lang.Class $r4, $r6, $r7, $r44;

        r8 := @this: org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser;

        r42 := @parameter0: java.lang.String;

        r43 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        r2 := @parameter3: org.xml.sax.Attributes;

        $r1 = "style";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label20;

        $r3 = interfaceinvoke r2.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("token");

     label01:
        $r4 = <org.fife.ui.rsyntaxtextarea.SyntaxScheme: java.lang.Class class$org$fife$ui$rsyntaxtextarea$Token>;

        if $r4 != null goto label02;

        $r44 = staticinvoke <org.fife.ui.rsyntaxtextarea.SyntaxScheme: java.lang.Class class$(java.lang.String)>("org.fife.ui.rsyntaxtextarea.Token");

        <org.fife.ui.rsyntaxtextarea.SyntaxScheme: java.lang.Class class$org$fife$ui$rsyntaxtextarea$Token> = $r44;

        goto label03;

     label02:
        $r44 = <org.fife.ui.rsyntaxtextarea.SyntaxScheme: java.lang.Class class$org$fife$ui$rsyntaxtextarea$Token>;

     label03:
        $r5 = virtualinvoke $r44.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>($r3);

     label04:
        goto label07;

     label05:
        $r41 := @caughtexception;

        throw $r41;

     label06:
        $r35 := @caughtexception;

        $r37 = <java.lang.System: java.io.PrintStream err>;

        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid token type: ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>($r40);

        return;

     label07:
        $r6 = virtualinvoke $r5.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r7 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r6 != $r7 goto label20;

     label08:
        $r9 = r8.<org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser: org.fife.ui.rsyntaxtextarea.SyntaxScheme scheme>;

        $i0 = virtualinvoke $r5.<java.lang.reflect.Field: int getInt(java.lang.Object)>($r9);

     label09:
        goto label12;

     label10:
        $r34 := @caughtexception;

        virtualinvoke $r34.<java.lang.IllegalArgumentException: void printStackTrace()>();

        return;

     label11:
        $r33 := @caughtexception;

        virtualinvoke $r33.<java.lang.IllegalAccessException: void printStackTrace()>();

        return;

     label12:
        $r10 = interfaceinvoke r2.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("fg");

        if $r10 == null goto label13;

        $r29 = staticinvoke <org.fife.ui.rsyntaxtextarea.SyntaxScheme: java.awt.Color access$000(java.lang.String)>($r10);

        $r30 = r8.<org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser: org.fife.ui.rsyntaxtextarea.SyntaxScheme scheme>;

        $r31 = staticinvoke <org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] access$100(org.fife.ui.rsyntaxtextarea.SyntaxScheme)>($r30);

        $r32 = $r31[$i0];

        $r32.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Color foreground> = $r29;

     label13:
        $r11 = interfaceinvoke r2.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("bg");

        if $r11 == null goto label14;

        $r25 = staticinvoke <org.fife.ui.rsyntaxtextarea.SyntaxScheme: java.awt.Color access$000(java.lang.String)>($r11);

        $r26 = r8.<org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser: org.fife.ui.rsyntaxtextarea.SyntaxScheme scheme>;

        $r27 = staticinvoke <org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] access$100(org.fife.ui.rsyntaxtextarea.SyntaxScheme)>($r26);

        $r28 = $r27[$i0];

        $r28.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Color background> = $r25;

     label14:
        z2 = 0;

        z3 = 0;

        z4 = 0;

        $r12 = interfaceinvoke r2.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("bold");

        if $r12 == null goto label15;

        $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r12);

        z3 = virtualinvoke $r24.<java.lang.Boolean: boolean booleanValue()>();

        z2 = 1;

     label15:
        $r13 = interfaceinvoke r2.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("italic");

        if $r13 == null goto label16;

        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13);

        z4 = virtualinvoke $r23.<java.lang.Boolean: boolean booleanValue()>();

        z2 = 1;

     label16:
        if z2 == 0 goto label19;

        b1 = 0;

        if z3 == 0 goto label17;

        b1 = 1;

     label17:
        if z4 == 0 goto label18;

        b1 = b1 | 2;

     label18:
        $r18 = r8.<org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser: org.fife.ui.rsyntaxtextarea.SyntaxScheme scheme>;

        $r19 = staticinvoke <org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] access$100(org.fife.ui.rsyntaxtextarea.SyntaxScheme)>($r18);

        $r21 = $r19[$i0];

        $r20 = r8.<org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser: java.awt.Font baseFont>;

        $r22 = virtualinvoke $r20.<java.awt.Font: java.awt.Font deriveFont(int)>(b1);

        $r21.<org.fife.ui.rsyntaxtextarea.Style: java.awt.Font font> = $r22;

     label19:
        $r45 = interfaceinvoke r2.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("underline");

        if $r45 == null goto label20;

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r45);

        $z1 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        $r15 = r8.<org.fife.ui.rsyntaxtextarea.SyntaxScheme$XmlParser: org.fife.ui.rsyntaxtextarea.SyntaxScheme scheme>;

        $r16 = staticinvoke <org.fife.ui.rsyntaxtextarea.SyntaxScheme: org.fife.ui.rsyntaxtextarea.Style[] access$100(org.fife.ui.rsyntaxtextarea.SyntaxScheme)>($r15);

        $r17 = $r16[$i0];

        $r17.<org.fife.ui.rsyntaxtextarea.Style: boolean underline> = $z1;

     label20:
        return;

        catch java.lang.RuntimeException from label01 to label04 with label05;
        catch java.lang.Exception from label01 to label04 with label06;
        catch java.lang.IllegalArgumentException from label08 to label09 with label10;
        catch java.lang.IllegalAccessException from label08 to label09 with label11;
    }
}
