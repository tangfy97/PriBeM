public class org.xmlpull.mxp1.MXParserNonValidating extends org.xmlpull.mxp1.MXParserCachingStrings
{
    private boolean processDocDecl;

    public void <init>()
    {
        org.xmlpull.mxp1.MXParserNonValidating r0;

        r0 := @this: org.xmlpull.mxp1.MXParserNonValidating;

        specialinvoke r0.<org.xmlpull.mxp1.MXParserCachingStrings: void <init>()>();

        return;
    }

    public void setFeature(java.lang.String, boolean) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserException $r3;
        int $i0;
        java.lang.String r0, $r1;
        org.xmlpull.mxp1.MXParserNonValidating r2;
        boolean $z0, z1;

        r2 := @this: org.xmlpull.mxp1.MXParserNonValidating;

        r0 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        $r1 = "http://xmlpull.org/v1/doc/features.html#process-docdecl";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        $i0 = r2.<org.xmlpull.mxp1.MXParser: int eventType>;

        if $i0 == 0 goto label1;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>("process DOCDECL feature can only be changed before parsing", r2, null);

        throw $r3;

     label1:
        r2.<org.xmlpull.mxp1.MXParserNonValidating: boolean processDocDecl> = z1;

        if z1 != 0 goto label3;

        goto label3;

     label2:
        specialinvoke r2.<org.xmlpull.mxp1.MXParserCachingStrings: void setFeature(java.lang.String,boolean)>(r0, z1);

     label3:
        return;
    }

    public boolean getFeature(java.lang.String)
    {
        java.lang.String r0, $r1;
        org.xmlpull.mxp1.MXParserNonValidating r2;
        boolean $z0, $z1, $z2;

        r2 := @this: org.xmlpull.mxp1.MXParserNonValidating;

        r0 := @parameter0: java.lang.String;

        $r1 = "http://xmlpull.org/v1/doc/features.html#process-docdecl";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $z2 = r2.<org.xmlpull.mxp1.MXParserNonValidating: boolean processDocDecl>;

        return $z2;

     label1:
        $z1 = specialinvoke r2.<org.xmlpull.mxp1.MXParserCachingStrings: boolean getFeature(java.lang.String)>(r0);

        return $z1;
    }

    protected char more() throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        char $c0;
        org.xmlpull.mxp1.MXParserNonValidating r0;

        r0 := @this: org.xmlpull.mxp1.MXParserNonValidating;

        $c0 = specialinvoke r0.<org.xmlpull.mxp1.MXParser: char more()>();

        return $c0;
    }

    protected char[] lookuEntityReplacement(int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        char[][] $r6, $r12, $r14, $r16;
        int[] $r11;
        boolean $z0, $z1, $z2;
        java.lang.String[] $r3, $r8, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, $i14, $i15, i18, i19, i20, $i21, $i22, $i24, $i26;
        java.lang.String $r2, $r4, $r5, $r9, $r19;
        char $c16, $c17;
        org.xmlpull.mxp1.MXParserNonValidating r0;
        char[] $r1, $r7, $r10, $r13, r15, $r17, $r20;

        r0 := @this: org.xmlpull.mxp1.MXParserNonValidating;

        i12 := @parameter0: int;

        $z0 = r0.<org.xmlpull.mxp1.MXParser: boolean allStringsInterned>;

        if $z0 != 0 goto label08;

        $r10 = r0.<org.xmlpull.mxp1.MXParser: char[] buf>;

        $i8 = r0.<org.xmlpull.mxp1.MXParser: int posStart>;

        $i6 = r0.<org.xmlpull.mxp1.MXParser: int posEnd>;

        $i5 = r0.<org.xmlpull.mxp1.MXParser: int posStart>;

        $i7 = $i6 - $i5;

        $i9 = staticinvoke <org.xmlpull.mxp1.MXParser: int fastHash(char[],int,int)>($r10, $i8, $i7);

        $i10 = r0.<org.xmlpull.mxp1.MXParser: int entityEnd>;

        i18 = $i10 - 1;

     label01:
        if i18 < 0 goto label07;

        $r11 = r0.<org.xmlpull.mxp1.MXParser: int[] entityNameHash>;

        $i11 = $r11[i18];

        if $i9 != $i11 goto label06;

        $r12 = r0.<org.xmlpull.mxp1.MXParser: char[][] entityNameBuf>;

        $r13 = $r12[i18];

        $i13 = lengthof $r13;

        if i12 != $i13 goto label06;

        $r14 = r0.<org.xmlpull.mxp1.MXParser: char[][] entityNameBuf>;

        r15 = $r14[i18];

        i19 = 0;

     label02:
        if i19 >= i12 goto label04;

        $r20 = r0.<org.xmlpull.mxp1.MXParser: char[] buf>;

        $i14 = r0.<org.xmlpull.mxp1.MXParser: int posStart>;

        $i15 = $i14 + i19;

        $c17 = $r20[$i15];

        $c16 = r15[i19];

        $i21 = (int) $c17;

        $i22 = (int) $c16;

        if $i21 == $i22 goto label03;

        goto label06;

     label03:
        i19 = i19 + 1;

        goto label02;

     label04:
        $z2 = r0.<org.xmlpull.mxp1.MXParser: boolean tokenize>;

        if $z2 == 0 goto label05;

        $r18 = r0.<org.xmlpull.mxp1.MXParser: java.lang.String[] entityReplacement>;

        $r19 = $r18[i18];

        r0.<org.xmlpull.mxp1.MXParser: java.lang.String text> = $r19;

     label05:
        $r16 = r0.<org.xmlpull.mxp1.MXParser: char[][] entityReplacementBuf>;

        $r17 = $r16[i18];

        return $r17;

     label06:
        $i24 = (int) -1;

        i18 = i18 + $i24;

        goto label01;

     label07:
        goto label12;

     label08:
        $r1 = r0.<org.xmlpull.mxp1.MXParser: char[] buf>;

        $i3 = r0.<org.xmlpull.mxp1.MXParser: int posStart>;

        $i1 = r0.<org.xmlpull.mxp1.MXParser: int posEnd>;

        $i0 = r0.<org.xmlpull.mxp1.MXParser: int posStart>;

        $i2 = $i1 - $i0;

        $r2 = virtualinvoke r0.<org.xmlpull.mxp1.MXParserCachingStrings: java.lang.String newString(char[],int,int)>($r1, $i3, $i2);

        r0.<org.xmlpull.mxp1.MXParser: java.lang.String entityRefName> = $r2;

        $i4 = r0.<org.xmlpull.mxp1.MXParser: int entityEnd>;

        i20 = $i4 - 1;

     label09:
        if i20 < 0 goto label12;

        $r5 = r0.<org.xmlpull.mxp1.MXParser: java.lang.String entityRefName>;

        $r3 = r0.<org.xmlpull.mxp1.MXParser: java.lang.String[] entityName>;

        $r4 = $r3[i20];

        if $r5 != $r4 goto label11;

        $z1 = r0.<org.xmlpull.mxp1.MXParser: boolean tokenize>;

        if $z1 == 0 goto label10;

        $r8 = r0.<org.xmlpull.mxp1.MXParser: java.lang.String[] entityReplacement>;

        $r9 = $r8[i20];

        r0.<org.xmlpull.mxp1.MXParser: java.lang.String text> = $r9;

     label10:
        $r6 = r0.<org.xmlpull.mxp1.MXParser: char[][] entityReplacementBuf>;

        $r7 = $r6[i20];

        return $r7;

     label11:
        $i26 = (int) -1;

        i20 = i20 + $i26;

        goto label09;

     label12:
        return null;
    }

    protected void parseDocdecl() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        boolean z0;
        org.xmlpull.v1.XmlPullParserException $r14, $r15, $r16, $r17, $r18, $r19, $r21;
        java.lang.Throwable $r13;
        java.lang.StringBuffer $r3, $r5, $r20;
        int $i6, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        java.lang.String $r4, $r6;
        char $c0, $c1, $c2, $c3, $c4, $c5, $c7, $c8, $c9, $c10, $c11, c14;
        org.xmlpull.mxp1.MXParserNonValidating r0;

        r0 := @this: org.xmlpull.mxp1.MXParserNonValidating;

        z0 = r0.<org.xmlpull.mxp1.MXParser: boolean tokenize>;

     label01:
        $c0 = virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: char more()>();

        $i15 = (int) $c0;

        if $i15 == 79 goto label02;

        $r14 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r14.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>("expected <!DOCTYPE", r0, null);

        throw $r14;

     label02:
        $c1 = virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: char more()>();

        $i16 = (int) $c1;

        if $i16 == 67 goto label03;

        $r15 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>("expected <!DOCTYPE", r0, null);

        throw $r15;

     label03:
        $c2 = virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: char more()>();

        $i17 = (int) $c2;

        if $i17 == 84 goto label04;

        $r16 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r16.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>("expected <!DOCTYPE", r0, null);

        throw $r16;

     label04:
        $c3 = virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: char more()>();

        $i18 = (int) $c3;

        if $i18 == 89 goto label05;

        $r17 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r17.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>("expected <!DOCTYPE", r0, null);

        throw $r17;

     label05:
        $c4 = virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: char more()>();

        $i19 = (int) $c4;

        if $i19 == 80 goto label06;

        $r18 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r18.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>("expected <!DOCTYPE", r0, null);

        throw $r18;

     label06:
        $c5 = virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: char more()>();

        $i20 = (int) $c5;

        if $i20 == 69 goto label07;

        $r19 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r19.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>("expected <!DOCTYPE", r0, null);

        throw $r19;

     label07:
        $i6 = r0.<org.xmlpull.mxp1.MXParser: int pos>;

        r0.<org.xmlpull.mxp1.MXParser: int posStart> = $i6;

        $c7 = virtualinvoke r0.<org.xmlpull.mxp1.MXParser: char requireNextS()>();

        $c8 = virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: char readName(char)>($c7);

        $c9 = virtualinvoke r0.<org.xmlpull.mxp1.MXParser: char skipS(char)>($c8);

        c14 = $c9;

        $i21 = (int) $c9;

        if $i21 == 83 goto label08;

        $i22 = (int) $c9;

        if $i22 != 80 goto label09;

     label08:
        $c10 = virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: char processExternalId(char)>($c9);

        c14 = virtualinvoke r0.<org.xmlpull.mxp1.MXParser: char skipS(char)>($c10);

     label09:
        $i23 = (int) c14;

        if $i23 != 91 goto label10;

        virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: void processInternalSubset()>();

     label10:
        $c11 = virtualinvoke r0.<org.xmlpull.mxp1.MXParser: char skipS(char)>(c14);

        $i24 = (int) $c11;

        if $i24 == 62 goto label11;

        $r21 = new org.xmlpull.v1.XmlPullParserException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expected > to finish <[DOCTYPE but got ");

        $r4 = virtualinvoke r0.<org.xmlpull.mxp1.MXParser: java.lang.String printable(char)>($c11);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r21.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r6, r0, null);

        throw $r21;

     label11:
        $i12 = r0.<org.xmlpull.mxp1.MXParser: int pos>;

        $i13 = $i12 - 1;

        r0.<org.xmlpull.mxp1.MXParser: int posEnd> = $i13;

     label12:
        r0.<org.xmlpull.mxp1.MXParser: boolean tokenize> = z0;

        goto label15;

     label13:
        $r13 := @caughtexception;

     label14:
        r0.<org.xmlpull.mxp1.MXParser: boolean tokenize> = z0;

        throw $r13;

     label15:
        return;

        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    protected char processExternalId(char) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        char c0;
        org.xmlpull.mxp1.MXParserNonValidating r0;

        r0 := @this: org.xmlpull.mxp1.MXParserNonValidating;

        c0 := @parameter0: char;

        return c0;
    }

    protected void processInternalSubset() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        int $i1, $i2;
        char $c0;
        org.xmlpull.mxp1.MXParserNonValidating r0;
        boolean $z0;

        r0 := @this: org.xmlpull.mxp1.MXParserNonValidating;

     label1:
        $c0 = virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: char more()>();

        $i1 = (int) $c0;

        if $i1 != 93 goto label2;

        goto label6;

     label2:
        $i2 = (int) $c0;

        if $i2 != 37 goto label3;

        virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: void processPEReference()>();

        goto label5;

     label3:
        $z0 = virtualinvoke r0.<org.xmlpull.mxp1.MXParser: boolean isS(char)>($c0);

        if $z0 == 0 goto label4;

        virtualinvoke r0.<org.xmlpull.mxp1.MXParser: char skipS(char)>($c0);

        goto label5;

     label4:
        virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: void processMarkupDecl(char)>($c0);

     label5:
        goto label1;

     label6:
        return;
    }

    protected void processPEReference() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.mxp1.MXParserNonValidating r0;

        r0 := @this: org.xmlpull.mxp1.MXParserNonValidating;

        return;
    }

    protected void processMarkupDecl(char) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParserException $r26, $r28, $r30, $r32;
        java.lang.StringBuffer $r3, $r5, $r9, $r11, $r15, $r17, $r21, $r23, $r25, $r27, $r29, $r31;
        int $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.String $r4, $r6, $r10, $r12, $r16, $r18, $r22, $r24;
        char $c0, $c1, $c2, $c3, c4;
        org.xmlpull.mxp1.MXParserNonValidating r0;

        r0 := @this: org.xmlpull.mxp1.MXParserNonValidating;

        c4 := @parameter0: char;

        $i5 = (int) c4;

        if $i5 == 60 goto label01;

        $r26 = new org.xmlpull.v1.XmlPullParserException;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expected < for markupdecl in DTD not ");

        $r22 = virtualinvoke r0.<org.xmlpull.mxp1.MXParser: java.lang.String printable(char)>(c4);

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r26.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r24, r0, null);

        throw $r26;

     label01:
        $c0 = virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: char more()>();

        $i6 = (int) $c0;

        if $i6 != 63 goto label02;

        virtualinvoke r0.<org.xmlpull.mxp1.MXParser: boolean parsePI()>();

        goto label10;

     label02:
        $i7 = (int) $c0;

        if $i7 != 33 goto label09;

        $c1 = virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: char more()>();

        $i8 = (int) $c1;

        if $i8 != 45 goto label03;

        virtualinvoke r0.<org.xmlpull.mxp1.MXParser: void parseComment()>();

        goto label10;

     label03:
        $c2 = virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: char more()>();

        $i9 = (int) $c2;

        if $i9 != 65 goto label04;

        virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: void processAttlistDecl(char)>($c2);

        goto label10;

     label04:
        $i10 = (int) $c2;

        if $i10 != 69 goto label07;

        $c3 = virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: char more()>();

        $i11 = (int) $c3;

        if $i11 != 76 goto label05;

        virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: void processElementDecl(char)>($c3);

        goto label10;

     label05:
        $i12 = (int) $c3;

        if $i12 != 78 goto label06;

        virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: void processEntityDecl(char)>($c3);

        goto label10;

     label06:
        $r28 = new org.xmlpull.v1.XmlPullParserException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expected ELEMENT or ENTITY after <! in DTD not ");

        $r16 = virtualinvoke r0.<org.xmlpull.mxp1.MXParser: java.lang.String printable(char)>($c3);

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r28.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r18, r0, null);

        throw $r28;

     label07:
        $i13 = (int) $c2;

        if $i13 != 78 goto label08;

        virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: void processNotationDecl(char)>($c2);

        goto label10;

     label08:
        $r30 = new org.xmlpull.v1.XmlPullParserException;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expected markupdecl after <! in DTD not ");

        $r10 = virtualinvoke r0.<org.xmlpull.mxp1.MXParser: java.lang.String printable(char)>($c2);

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r30.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r12, r0, null);

        throw $r30;

     label09:
        $r32 = new org.xmlpull.v1.XmlPullParserException;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expected markupdecl in DTD not ");

        $r4 = virtualinvoke r0.<org.xmlpull.mxp1.MXParser: java.lang.String printable(char)>($c0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r32.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r6, r0, null);

        throw $r32;

     label10:
        return;
    }

    protected void processElementDecl(char) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        char $c0, c1;
        org.xmlpull.mxp1.MXParserNonValidating r0;

        r0 := @this: org.xmlpull.mxp1.MXParserNonValidating;

        c1 := @parameter0: char;

        $c0 = virtualinvoke r0.<org.xmlpull.mxp1.MXParser: char requireNextS()>();

        virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: char readName(char)>($c0);

        virtualinvoke r0.<org.xmlpull.mxp1.MXParser: char requireNextS()>();

        return;
    }

    protected void processAttlistDecl(char) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        char c0;
        org.xmlpull.mxp1.MXParserNonValidating r0;

        r0 := @this: org.xmlpull.mxp1.MXParserNonValidating;

        c0 := @parameter0: char;

        return;
    }

    protected void processEntityDecl(char) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        char c0;
        org.xmlpull.mxp1.MXParserNonValidating r0;

        r0 := @this: org.xmlpull.mxp1.MXParserNonValidating;

        c0 := @parameter0: char;

        return;
    }

    protected void processNotationDecl(char) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        char c0;
        org.xmlpull.mxp1.MXParserNonValidating r0;

        r0 := @this: org.xmlpull.mxp1.MXParserNonValidating;

        c0 := @parameter0: char;

        return;
    }

    protected char readName(char) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        char c0;
        org.xmlpull.mxp1.MXParserNonValidating r0;
        org.xmlpull.v1.XmlPullParserException $r1;
        java.lang.StringBuffer $r2, $r3, $r5;
        java.lang.String $r4, $r6;
        boolean $z0, $z1;

        r0 := @this: org.xmlpull.mxp1.MXParserNonValidating;

        c0 := @parameter0: char;

        $z0 = virtualinvoke r0.<org.xmlpull.mxp1.MXParser: boolean isNameStartChar(char)>(c0);

        if $z0 == 0 goto label1;

        $r1 = new org.xmlpull.v1.XmlPullParserException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("XML name must start with name start character not ");

        $r4 = virtualinvoke r0.<org.xmlpull.mxp1.MXParser: java.lang.String printable(char)>(c0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r6, r0, null);

        throw $r1;

     label1:
        $z1 = virtualinvoke r0.<org.xmlpull.mxp1.MXParser: boolean isNameChar(char)>(c0);

        if $z1 == 0 goto label2;

        c0 = virtualinvoke r0.<org.xmlpull.mxp1.MXParserNonValidating: char more()>();

        goto label1;

     label2:
        return c0;
    }
}
