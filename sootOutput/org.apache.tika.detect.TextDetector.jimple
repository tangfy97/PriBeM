public class org.apache.tika.detect.TextDetector extends java.lang.Object implements org.apache.tika.detect.Detector
{
    private static final long serialVersionUID;
    private static final int DEFAULT_NUMBER_OF_BYTES_TO_TEST;
    private static final boolean[] IS_CONTROL_BYTE;
    private final int bytesToTest;

    public void <init>()
    {
        org.apache.tika.detect.TextDetector r0;

        r0 := @this: org.apache.tika.detect.TextDetector;

        specialinvoke r0.<org.apache.tika.detect.TextDetector: void <init>(int)>(512);

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.apache.tika.detect.TextDetector r0;

        r0 := @this: org.apache.tika.detect.TextDetector;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.detect.TextDetector: int bytesToTest> = i0;

        return;
    }

    public org.apache.tika.mime.MediaType detect(java.io.InputStream, org.apache.tika.metadata.Metadata) throws java.io.IOException
    {
        java.lang.Throwable $r6;
        byte[] r3;
        org.apache.tika.detect.TextDetector r1;
        org.apache.tika.mime.MediaType $r4, $r5, r8;
        org.apache.tika.metadata.Metadata r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i12;
        boolean $z0, $z1;
        org.apache.tika.detect.TextStatistics $r9;
        java.io.InputStream r0;

        r1 := @this: org.apache.tika.detect.TextDetector;

        r0 := @parameter0: java.io.InputStream;

        r7 := @parameter1: org.apache.tika.metadata.Metadata;

        if r0 != null goto label01;

        $r5 = <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType OCTET_STREAM>;

        return $r5;

     label01:
        $i0 = r1.<org.apache.tika.detect.TextDetector: int bytesToTest>;

        virtualinvoke r0.<java.io.InputStream: void mark(int)>($i0);

     label02:
        $r9 = new org.apache.tika.detect.TextStatistics;

        specialinvoke $r9.<org.apache.tika.detect.TextStatistics: void <init>()>();

        r3 = newarray (byte)[1024];

        i9 = 0;

        $i2 = r1.<org.apache.tika.detect.TextDetector: int bytesToTest>;

        $i1 = lengthof r3;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i1);

        i10 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r3, 0, $i3);

     label03:
        $i12 = (int) -1;

        if i10 == $i12 goto label04;

        $i4 = r1.<org.apache.tika.detect.TextDetector: int bytesToTest>;

        if i9 >= $i4 goto label04;

        virtualinvoke $r9.<org.apache.tika.detect.TextStatistics: void addData(byte[],int,int)>(r3, 0, i10);

        i9 = i9 + i10;

        $i5 = r1.<org.apache.tika.detect.TextDetector: int bytesToTest>;

        $i7 = $i5 - i9;

        $i6 = lengthof r3;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i6);

        i10 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r3, 0, $i8);

        goto label03;

     label04:
        $z0 = virtualinvoke $r9.<org.apache.tika.detect.TextStatistics: boolean isMostlyAscii()>();

        if $z0 != 0 goto label05;

        $z1 = virtualinvoke $r9.<org.apache.tika.detect.TextStatistics: boolean looksLikeUTF8()>();

        if $z1 == 0 goto label07;

     label05:
        $r4 = <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType TEXT_PLAIN>;

     label06:
        virtualinvoke r0.<java.io.InputStream: void reset()>();

        return $r4;

     label07:
        r8 = <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType OCTET_STREAM>;

     label08:
        virtualinvoke r0.<java.io.InputStream: void reset()>();

        return r8;

     label09:
        $r6 := @caughtexception;

     label10:
        virtualinvoke r0.<java.io.InputStream: void reset()>();

        throw $r6;

        catch java.lang.Throwable from label02 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    static void <clinit>()
    {
        boolean[] $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        <org.apache.tika.detect.TextDetector: int DEFAULT_NUMBER_OF_BYTES_TO_TEST> = 512;

        <org.apache.tika.detect.TextDetector: long serialVersionUID> = 4774601079503507765L;

        $r0 = newarray (boolean)[32];

        <org.apache.tika.detect.TextDetector: boolean[] IS_CONTROL_BYTE> = $r0;

        $r1 = <org.apache.tika.detect.TextDetector: boolean[] IS_CONTROL_BYTE>;

        staticinvoke <java.util.Arrays: void fill(boolean[],boolean)>($r1, 1);

        $r2 = <org.apache.tika.detect.TextDetector: boolean[] IS_CONTROL_BYTE>;

        $r2[9] = 0;

        $r3 = <org.apache.tika.detect.TextDetector: boolean[] IS_CONTROL_BYTE>;

        $r3[10] = 0;

        $r4 = <org.apache.tika.detect.TextDetector: boolean[] IS_CONTROL_BYTE>;

        $r4[12] = 0;

        $r5 = <org.apache.tika.detect.TextDetector: boolean[] IS_CONTROL_BYTE>;

        $r5[13] = 0;

        $r6 = <org.apache.tika.detect.TextDetector: boolean[] IS_CONTROL_BYTE>;

        $r6[27] = 0;

        return;
    }
}
