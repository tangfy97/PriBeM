final class org.apache.lucene.index.BitsSlice extends java.lang.Object implements org.apache.lucene.util.Bits
{
    private final org.apache.lucene.util.Bits parent;
    private final int start;
    private final int length;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.util.Bits, org.apache.lucene.index.ReaderSlice)
    {
        java.lang.AssertionError $r3;
        org.apache.lucene.index.ReaderSlice r2;
        org.apache.lucene.index.BitsSlice r0;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        org.apache.lucene.util.Bits r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.BitsSlice;

        r1 := @parameter0: org.apache.lucene.util.Bits;

        r2 := @parameter1: org.apache.lucene.index.ReaderSlice;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.BitsSlice: org.apache.lucene.util.Bits parent> = r1;

        $i0 = r2.<org.apache.lucene.index.ReaderSlice: int start>;

        r0.<org.apache.lucene.index.BitsSlice: int start> = $i0;

        $i1 = r2.<org.apache.lucene.index.ReaderSlice: int length>;

        r0.<org.apache.lucene.index.BitsSlice: int length> = $i1;

        $z0 = <org.apache.lucene.index.BitsSlice: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i2 = r0.<org.apache.lucene.index.BitsSlice: int length>;

        if $i2 >= 0 goto label1;

        $r3 = new java.lang.AssertionError;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("length=");

        $i3 = r0.<org.apache.lucene.index.BitsSlice: int length>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r7);

        throw $r3;

     label1:
        return;
    }

    public boolean get(int)
    {
        java.lang.AssertionError $r2;
        org.apache.lucene.index.BitsSlice r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r8, $r15;
        org.apache.lucene.util.Bits $r1;
        boolean $z0, $z1;
        java.lang.RuntimeException $r9;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r14;

        r0 := @this: org.apache.lucene.index.BitsSlice;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.lucene.index.BitsSlice: int length>;

        if i0 < $i1 goto label1;

        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doc ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is out of bounds 0 .. ");

        $i6 = r0.<org.apache.lucene.index.BitsSlice: int length>;

        $i7 = $i6 - 1;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label1:
        $z0 = <org.apache.lucene.index.BitsSlice: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i4 = r0.<org.apache.lucene.index.BitsSlice: int length>;

        if i0 < $i4 goto label2;

        $r2 = new java.lang.AssertionError;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doc=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length=");

        $i5 = r0.<org.apache.lucene.index.BitsSlice: int length>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r2;

     label2:
        $r1 = r0.<org.apache.lucene.index.BitsSlice: org.apache.lucene.util.Bits parent>;

        $i2 = r0.<org.apache.lucene.index.BitsSlice: int start>;

        $i3 = i0 + $i2;

        $z1 = interfaceinvoke $r1.<org.apache.lucene.util.Bits: boolean get(int)>($i3);

        return $z1;
    }

    public int length()
    {
        int $i0;
        org.apache.lucene.index.BitsSlice r0;

        r0 := @this: org.apache.lucene.index.BitsSlice;

        $i0 = r0.<org.apache.lucene.index.BitsSlice: int length>;

        return $i0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/BitsSlice;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.BitsSlice: boolean $assertionsDisabled> = $z1;

        return;
    }
}
