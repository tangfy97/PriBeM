public class org.mortbay.jetty.servlet.ServletHolder extends org.mortbay.jetty.servlet.Holder implements java.lang.Comparable
{
    private int _initOrder;
    private boolean _initOnStartup;
    private java.util.Map _roleMap;
    private java.lang.String _forcedPath;
    private java.lang.String _runAs;
    private org.mortbay.jetty.security.UserRealm _realm;
    private transient javax.servlet.Servlet _servlet;
    private transient org.mortbay.jetty.servlet.ServletHolder$Config _config;
    private transient long _unavailable;
    private transient javax.servlet.UnavailableException _unavailableEx;
    static java.lang.Class class$org$mortbay$jetty$security$SecurityHandler;
    static java.lang.Class class$javax$servlet$SingleThreadModel;
    static java.lang.Class class$javax$servlet$Servlet;

    public void <init>()
    {
        org.mortbay.jetty.servlet.ServletHolder r0;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        specialinvoke r0.<org.mortbay.jetty.servlet.Holder: void <init>()>();

        r0.<org.mortbay.jetty.servlet.ServletHolder: boolean _initOnStartup> = 0;

        return;
    }

    public void <init>(javax.servlet.Servlet)
    {
        org.mortbay.jetty.servlet.ServletHolder r0;
        javax.servlet.Servlet r1;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        r1 := @parameter0: javax.servlet.Servlet;

        specialinvoke r0.<org.mortbay.jetty.servlet.Holder: void <init>()>();

        r0.<org.mortbay.jetty.servlet.ServletHolder: boolean _initOnStartup> = 0;

        virtualinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: void setServlet(javax.servlet.Servlet)>(r1);

        return;
    }

    public void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        org.mortbay.jetty.servlet.ServletHolder r0;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.mortbay.jetty.servlet.Holder: void <init>(java.lang.Class)>(r1);

        r0.<org.mortbay.jetty.servlet.ServletHolder: boolean _initOnStartup> = 0;

        return;
    }

    public javax.servlet.UnavailableException getUnavailableException()
    {
        org.mortbay.jetty.servlet.ServletHolder r0;
        javax.servlet.UnavailableException $r1;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        $r1 = r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx>;

        return $r1;
    }

    public synchronized void setServlet(javax.servlet.Servlet)
    {
        org.mortbay.jetty.servlet.ServletHolder r2;
        javax.servlet.Servlet r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuffer $r5, $r8, $r9, $r10;
        int $i0;
        java.lang.Class $r3, $r6;
        java.lang.String $r4, $r7, $r11;
        boolean $z0;

        r2 := @this: org.mortbay.jetty.servlet.ServletHolder;

        r0 := @parameter0: javax.servlet.Servlet;

        if r0 == null goto label1;

        $z0 = r0 instanceof javax.servlet.SingleThreadModel;

        if $z0 == 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label2:
        r2.<org.mortbay.jetty.servlet.ServletHolder: boolean _extInstance> = 1;

        r2.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet> = r0;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke r2.<org.mortbay.jetty.servlet.ServletHolder: void setHeldClass(java.lang.Class)>($r3);

        $r4 = virtualinvoke r2.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String getName()>();

        if $r4 != null goto label3;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        $i0 = specialinvoke r2.<java.lang.Object: int hashCode()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<org.mortbay.jetty.servlet.ServletHolder: void setName(java.lang.String)>($r11);

     label3:
        return;
    }

    public int getInitOrder()
    {
        int $i0;
        org.mortbay.jetty.servlet.ServletHolder r0;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        $i0 = r0.<org.mortbay.jetty.servlet.ServletHolder: int _initOrder>;

        return $i0;
    }

    public void setInitOrder(int)
    {
        int i0;
        org.mortbay.jetty.servlet.ServletHolder r0;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        i0 := @parameter0: int;

        r0.<org.mortbay.jetty.servlet.ServletHolder: boolean _initOnStartup> = 1;

        r0.<org.mortbay.jetty.servlet.ServletHolder: int _initOrder> = i0;

        return;
    }

    public int compareTo(java.lang.Object)
    {
        org.mortbay.jetty.servlet.ServletHolder r1, r2;
        byte $b8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i10;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0;
        java.lang.Object r0;

        r2 := @this: org.mortbay.jetty.servlet.ServletHolder;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.mortbay.jetty.servlet.ServletHolder;

        if $z0 == 0 goto label10;

        r1 = (org.mortbay.jetty.servlet.ServletHolder) r0;

        if r1 != r2 goto label01;

        return 0;

     label01:
        $i1 = r1.<org.mortbay.jetty.servlet.ServletHolder: int _initOrder>;

        $i0 = r2.<org.mortbay.jetty.servlet.ServletHolder: int _initOrder>;

        if $i1 >= $i0 goto label02;

        return 1;

     label02:
        $i3 = r1.<org.mortbay.jetty.servlet.ServletHolder: int _initOrder>;

        $i2 = r2.<org.mortbay.jetty.servlet.ServletHolder: int _initOrder>;

        if $i3 <= $i2 goto label03;

        $i10 = (int) -1;

        return $i10;

     label03:
        $r3 = r2.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _className>;

        if $r3 == null goto label04;

        $r6 = r1.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _className>;

        if $r6 == null goto label04;

        $r8 = r2.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _className>;

        $r7 = r1.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _className>;

        $i6 = virtualinvoke $r8.<java.lang.String: int compareTo(java.lang.String)>($r7);

        goto label05;

     label04:
        $i6 = 0;

     label05:
        i7 = $i6;

        if $i6 != 0 goto label06;

        $r5 = r2.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _name>;

        $r4 = r1.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _name>;

        i7 = virtualinvoke $r5.<java.lang.String: int compareTo(java.lang.String)>($r4);

     label06:
        if i7 != 0 goto label09;

        $i4 = virtualinvoke r2.<org.mortbay.jetty.servlet.ServletHolder: int hashCode()>();

        $i5 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        if $i4 <= $i5 goto label07;

        $b8 = 1;

        goto label08;

     label07:
        $b8 = -1;

     label08:
        i7 = $b8;

     label09:
        return i7;

     label10:
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        org.mortbay.jetty.servlet.ServletHolder r0;
        int $i0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: int compareTo(java.lang.Object)>(r1);

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int hashCode()
    {
        org.mortbay.jetty.servlet.ServletHolder r0;
        int $i0;
        java.lang.String $r1, $r2;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        $r1 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _name>;

        if $r1 != null goto label1;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        goto label2;

     label1:
        $r2 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _name>;

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label2:
        return $i0;
    }

    public synchronized void setUserRoleLink(java.lang.String, java.lang.String)
    {
        org.mortbay.jetty.servlet.ServletHolder r0;
        java.util.Map $r1, $r4;
        java.util.HashMap $r5;
        java.lang.String r2, r3;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.util.Map _roleMap>;

        if $r1 != null goto label1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.mortbay.jetty.servlet.ServletHolder: java.util.Map _roleMap> = $r5;

     label1:
        $r4 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.util.Map _roleMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        return;
    }

    public java.lang.String getUserRoleLink(java.lang.String)
    {
        org.mortbay.jetty.servlet.ServletHolder r0;
        java.util.Map $r1, $r3;
        java.lang.Object $r4;
        java.lang.String r2, r5, $r6;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.util.Map _roleMap>;

        if $r1 != null goto label1;

        return r2;

     label1:
        $r3 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.util.Map _roleMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (java.lang.String) $r4;

        if r5 != null goto label2;

        $r6 = r2;

        goto label3;

     label2:
        $r6 = r5;

     label3:
        return $r6;
    }

    public java.util.Map getRoleMap()
    {
        org.mortbay.jetty.servlet.ServletHolder r0;
        java.util.Map $r1;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        $r1 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.util.Map _roleMap>;

        return $r1;
    }

    public void setRunAs(java.lang.String)
    {
        java.lang.String r1;
        org.mortbay.jetty.servlet.ServletHolder r0;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        r1 := @parameter0: java.lang.String;

        r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _runAs> = r1;

        return;
    }

    public java.lang.String getRunAs()
    {
        java.lang.String $r1;
        org.mortbay.jetty.servlet.ServletHolder r0;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        $r1 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _runAs>;

        return $r1;
    }

    public java.lang.String getForcedPath()
    {
        java.lang.String $r1;
        org.mortbay.jetty.servlet.ServletHolder r0;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        $r1 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _forcedPath>;

        return $r1;
    }

    public void setForcedPath(java.lang.String)
    {
        java.lang.String r1;
        org.mortbay.jetty.servlet.ServletHolder r0;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        r1 := @parameter0: java.lang.String;

        r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _forcedPath> = r1;

        return;
    }

    public void doStart() throws java.lang.Exception
    {
        org.mortbay.jetty.servlet.ServletHolder$SingleThreadedWrapper $r4;
        org.mortbay.jetty.servlet.ServletHolder r0;
        org.mortbay.jetty.Handler $r8;
        org.mortbay.jetty.servlet.ServletHolder$Config $r1;
        org.mortbay.jetty.servlet.ServletHandler $r13;
        java.lang.String $r2;
        boolean $z0, $z1, $z2, $z3;
        org.mortbay.jetty.security.UserRealm $r11;
        org.mortbay.jetty.handler.ContextHandler$SContext $r5;
        java.lang.Exception $r12;
        org.mortbay.jetty.security.SecurityHandler $r9, $r10;
        javax.servlet.UnavailableException $r14;
        org.mortbay.jetty.handler.ContextHandler $r6;
        java.lang.Class $r3, $r7, $r15, $r16, $r17;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        r0.<org.mortbay.jetty.servlet.ServletHolder: long _unavailable> = 0L;

     label01:
        specialinvoke r0.<org.mortbay.jetty.servlet.Holder: void doStart()>();

        virtualinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: void checkServletType()>();

     label02:
        goto label04;

     label03:
        $r14 := @caughtexception;

        specialinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: void makeUnavailable(javax.servlet.UnavailableException)>($r14);

     label04:
        $r1 = new org.mortbay.jetty.servlet.ServletHolder$Config;

        specialinvoke $r1.<org.mortbay.jetty.servlet.ServletHolder$Config: void <init>(org.mortbay.jetty.servlet.ServletHolder)>(r0);

        r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.servlet.ServletHolder$Config _config> = $r1;

        $r2 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _runAs>;

        if $r2 == null goto label07;

        $r5 = staticinvoke <org.mortbay.jetty.handler.ContextHandler: org.mortbay.jetty.handler.ContextHandler$SContext getCurrentContext()>();

        $r6 = virtualinvoke $r5.<org.mortbay.jetty.handler.ContextHandler$SContext: org.mortbay.jetty.handler.ContextHandler getContextHandler()>();

        $r7 = <org.mortbay.jetty.servlet.ServletHolder: java.lang.Class class$org$mortbay$jetty$security$SecurityHandler>;

        if $r7 != null goto label05;

        $r15 = staticinvoke <org.mortbay.jetty.servlet.ServletHolder: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.security.SecurityHandler");

        <org.mortbay.jetty.servlet.ServletHolder: java.lang.Class class$org$mortbay$jetty$security$SecurityHandler> = $r15;

        goto label06;

     label05:
        $r15 = <org.mortbay.jetty.servlet.ServletHolder: java.lang.Class class$org$mortbay$jetty$security$SecurityHandler>;

     label06:
        $r8 = virtualinvoke $r6.<org.mortbay.jetty.handler.ContextHandler: org.mortbay.jetty.Handler getChildHandlerByClass(java.lang.Class)>($r15);

        $r9 = (org.mortbay.jetty.security.SecurityHandler) $r8;

        $r10 = (org.mortbay.jetty.security.SecurityHandler) $r9;

        $r11 = virtualinvoke $r10.<org.mortbay.jetty.security.SecurityHandler: org.mortbay.jetty.security.UserRealm getUserRealm()>();

        r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm> = $r11;

     label07:
        $r16 = <org.mortbay.jetty.servlet.ServletHolder: java.lang.Class class$javax$servlet$SingleThreadModel>;

        if $r16 != null goto label08;

        $r17 = staticinvoke <org.mortbay.jetty.servlet.ServletHolder: java.lang.Class class$(java.lang.String)>("javax.servlet.SingleThreadModel");

        <org.mortbay.jetty.servlet.ServletHolder: java.lang.Class class$javax$servlet$SingleThreadModel> = $r17;

        goto label09;

     label08:
        $r17 = <org.mortbay.jetty.servlet.ServletHolder: java.lang.Class class$javax$servlet$SingleThreadModel>;

     label09:
        $r3 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.Class _class>;

        $z0 = virtualinvoke $r17.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        if $z0 == 0 goto label10;

        $r4 = new org.mortbay.jetty.servlet.ServletHolder$SingleThreadedWrapper;

        specialinvoke $r4.<org.mortbay.jetty.servlet.ServletHolder$SingleThreadedWrapper: void <init>(org.mortbay.jetty.servlet.ServletHolder,org.mortbay.jetty.servlet.ServletHolder$1)>(r0, null);

        r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet> = $r4;

     label10:
        $z1 = r0.<org.mortbay.jetty.servlet.ServletHolder: boolean _extInstance>;

        if $z1 != 0 goto label11;

        $z2 = r0.<org.mortbay.jetty.servlet.ServletHolder: boolean _initOnStartup>;

        if $z2 == 0 goto label15;

     label11:
        specialinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: void initServlet()>();

     label12:
        goto label15;

     label13:
        $r12 := @caughtexception;

        $r13 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        $z3 = virtualinvoke $r13.<org.mortbay.jetty.servlet.ServletHandler: boolean isStartWithUnavailable()>();

        if $z3 == 0 goto label14;

        staticinvoke <org.mortbay.log.Log: void ignore(java.lang.Throwable)>($r12);

        goto label15;

     label14:
        throw $r12;

     label15:
        return;

        catch javax.servlet.UnavailableException from label01 to label02 with label03;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    public void doStop()
    {
        java.lang.Throwable $r9;
        org.mortbay.jetty.servlet.ServletHolder r0;
        java.lang.String $r1, $r2, $r7, $r10;
        boolean $z0;
        javax.servlet.Servlet $r5, $r15;
        org.mortbay.jetty.security.UserRealm $r3, $r4, $r6, $r8, $r11, $r12;
        java.lang.Exception $r13;
        java.security.Principal r14;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        r14 = null;

     label01:
        $r1 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _runAs>;

        if $r1 == null goto label02;

        $r6 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        if $r6 == null goto label02;

        $r8 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        $r7 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _runAs>;

        r14 = interfaceinvoke $r8.<org.mortbay.jetty.security.UserRealm: java.security.Principal pushRole(java.security.Principal,java.lang.String)>(null, $r7);

     label02:
        $r15 = r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        if $r15 == null goto label06;

     label03:
        $r5 = r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        virtualinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: void destroyInstance(java.lang.Object)>($r5);

     label04:
        goto label06;

     label05:
        $r13 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.Throwable)>($r13);

     label06:
        $z0 = r0.<org.mortbay.jetty.servlet.ServletHolder: boolean _extInstance>;

        if $z0 != 0 goto label07;

        r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet> = null;

     label07:
        r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.servlet.ServletHolder$Config _config> = null;

     label08:
        specialinvoke r0.<org.mortbay.jetty.servlet.Holder: void doStop()>();

        $r2 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _runAs>;

        if $r2 == null goto label12;

        $r3 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        if $r3 == null goto label12;

        if r14 == null goto label12;

        $r4 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        interfaceinvoke $r4.<org.mortbay.jetty.security.UserRealm: java.security.Principal popRole(java.security.Principal)>(r14);

        goto label12;

     label09:
        $r9 := @caughtexception;

     label10:
        specialinvoke r0.<org.mortbay.jetty.servlet.Holder: void doStop()>();

        $r10 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _runAs>;

        if $r10 == null goto label11;

        $r11 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        if $r11 == null goto label11;

        if r14 == null goto label11;

        $r12 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        interfaceinvoke $r12.<org.mortbay.jetty.security.UserRealm: java.security.Principal popRole(java.security.Principal)>(r14);

     label11:
        throw $r9;

     label12:
        return;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void destroyInstance(java.lang.Object) throws java.lang.Exception
    {
        org.mortbay.jetty.servlet.ServletHolder r2;
        javax.servlet.Servlet r1;
        java.lang.Object r0;
        org.mortbay.jetty.servlet.ServletHandler $r3;

        r2 := @this: org.mortbay.jetty.servlet.ServletHolder;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return;

     label1:
        r1 = (javax.servlet.Servlet) r0;

        interfaceinvoke r1.<javax.servlet.Servlet: void destroy()>();

        $r3 = virtualinvoke r2.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.servlet.ServletHandler getServletHandler()>();

        virtualinvoke $r3.<org.mortbay.jetty.servlet.ServletHandler: javax.servlet.Servlet customizeServletDestroy(javax.servlet.Servlet)>(r1);

        return;
    }

    public synchronized javax.servlet.Servlet getServlet() throws javax.servlet.ServletException
    {
        org.mortbay.jetty.servlet.ServletHolder r0;
        long $l0, $l2, $l4, $l6, $l7;
        byte $b1, $b3, $b5, $b8;
        int $i9, $i10, $i11;
        javax.servlet.Servlet $r1, $r3;
        javax.servlet.UnavailableException $r2;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        $l0 = r0.<org.mortbay.jetty.servlet.ServletHolder: long _unavailable>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label3;

        $l2 = r0.<org.mortbay.jetty.servlet.ServletHolder: long _unavailable>;

        $b3 = $l2 cmp 0L;

        $i9 = (int) $b3;

        if $i9 < 0 goto label1;

        $l4 = r0.<org.mortbay.jetty.servlet.ServletHolder: long _unavailable>;

        $b5 = $l4 cmp 0L;

        $i10 = (int) $b5;

        if $i10 <= 0 goto label2;

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l7 = r0.<org.mortbay.jetty.servlet.ServletHolder: long _unavailable>;

        $b8 = $l6 cmp $l7;

        $i11 = (int) $b8;

        if $i11 >= 0 goto label2;

     label1:
        $r2 = r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx>;

        throw $r2;

     label2:
        r0.<org.mortbay.jetty.servlet.ServletHolder: long _unavailable> = 0L;

        r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx> = null;

     label3:
        $r3 = r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        if $r3 != null goto label4;

        specialinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: void initServlet()>();

     label4:
        $r1 = r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        return $r1;
    }

    public javax.servlet.Servlet getServletInstance()
    {
        org.mortbay.jetty.servlet.ServletHolder r0;
        javax.servlet.Servlet $r1;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        $r1 = r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        return $r1;
    }

    public void checkServletType() throws javax.servlet.UnavailableException
    {
        org.mortbay.jetty.servlet.ServletHolder r1;
        javax.servlet.UnavailableException $r3;
        java.lang.StringBuffer $r4, $r5, $r7, $r8;
        java.lang.Class $r0, $r2, $r6, $r10;
        java.lang.String $r9;
        boolean $z0;

        r1 := @this: org.mortbay.jetty.servlet.ServletHolder;

        $r0 = <org.mortbay.jetty.servlet.ServletHolder: java.lang.Class class$javax$servlet$Servlet>;

        if $r0 != null goto label1;

        $r10 = staticinvoke <org.mortbay.jetty.servlet.ServletHolder: java.lang.Class class$(java.lang.String)>("javax.servlet.Servlet");

        <org.mortbay.jetty.servlet.ServletHolder: java.lang.Class class$javax$servlet$Servlet> = $r10;

        goto label2;

     label1:
        $r10 = <org.mortbay.jetty.servlet.ServletHolder: java.lang.Class class$javax$servlet$Servlet>;

     label2:
        $r2 = r1.<org.mortbay.jetty.servlet.ServletHolder: java.lang.Class _class>;

        $z0 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        if $z0 != 0 goto label3;

        $r3 = new javax.servlet.UnavailableException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Servlet ");

        $r6 = r1.<org.mortbay.jetty.servlet.ServletHolder: java.lang.Class _class>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a javax.servlet.Servlet");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<javax.servlet.UnavailableException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label3:
        return;
    }

    public boolean isAvailable()
    {
        org.mortbay.jetty.servlet.ServletHolder r0;
        long $l0, $l2;
        java.lang.Exception $r1;
        byte $b1, $b3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        $z0 = virtualinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: boolean isStarted()>();

        if $z0 == 0 goto label1;

        $l2 = r0.<org.mortbay.jetty.servlet.ServletHolder: long _unavailable>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label1;

        return 1;

     label1:
        virtualinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet getServlet()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void ignore(java.lang.Throwable)>($r1);

     label4:
        $z1 = virtualinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: boolean isStarted()>();

        if $z1 == 0 goto label5;

        $l0 = r0.<org.mortbay.jetty.servlet.ServletHolder: long _unavailable>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void makeUnavailable(javax.servlet.UnavailableException)
    {
        org.mortbay.jetty.servlet.ServletHolder r0;
        long $l1, $l2, $l3, $l6, $l7, $l8;
        org.mortbay.jetty.servlet.ServletHandler $r3;
        byte $b9;
        java.lang.StringBuffer $r5, $r6, $r7;
        int $i0, $i4, $i5;
        java.lang.String $r8;
        boolean $z0;
        javax.servlet.UnavailableException r1, $r2, $r9, $r10;
        javax.servlet.ServletContext $r4;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        r1 := @parameter0: javax.servlet.UnavailableException;

        $r2 = r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx>;

        if $r2 != r1 goto label1;

        $l8 = r0.<org.mortbay.jetty.servlet.ServletHolder: long _unavailable>;

        $b9 = $l8 cmp 0L;

        if $b9 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        $r4 = virtualinvoke $r3.<org.mortbay.jetty.servlet.ServletHandler: javax.servlet.ServletContext getServletContext()>();

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unavailable ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r4.<javax.servlet.ServletContext: void log(java.lang.String)>($r8);

        r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx> = r1;

        r0.<org.mortbay.jetty.servlet.ServletHolder: long _unavailable> = -1L;

        $z0 = virtualinvoke r1.<javax.servlet.UnavailableException: boolean isPermanent()>();

        if $z0 == 0 goto label2;

        r0.<org.mortbay.jetty.servlet.ServletHolder: long _unavailable> = -1L;

        goto label4;

     label2:
        $r9 = r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx>;

        $i0 = virtualinvoke $r9.<javax.servlet.UnavailableException: int getUnavailableSeconds()>();

        if $i0 <= 0 goto label3;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r10 = r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx>;

        $i4 = virtualinvoke $r10.<javax.servlet.UnavailableException: int getUnavailableSeconds()>();

        $i5 = 1000 * $i4;

        $l6 = (long) $i5;

        $l7 = $l3 + $l6;

        r0.<org.mortbay.jetty.servlet.ServletHolder: long _unavailable> = $l7;

        goto label4;

     label3:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l1 + 5000L;

        r0.<org.mortbay.jetty.servlet.ServletHolder: long _unavailable> = $l2;

     label4:
        return;
    }

    private void makeUnavailable(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        org.mortbay.jetty.servlet.ServletHolder r1;
        org.mortbay.jetty.servlet.ServletHandler $r2;
        javax.servlet.UnavailableException $r6, $r7;
        int $i1;
        javax.servlet.ServletContext $r3;
        java.lang.String $r5;
        boolean $z0;

        r1 := @this: org.mortbay.jetty.servlet.ServletHolder;

        r0 := @parameter0: java.lang.Throwable;

        $z0 = r0 instanceof javax.servlet.UnavailableException;

        if $z0 == 0 goto label1;

        $r6 = (javax.servlet.UnavailableException) r0;

        specialinvoke r1.<org.mortbay.jetty.servlet.ServletHolder: void makeUnavailable(javax.servlet.UnavailableException)>($r6);

        goto label2;

     label1:
        $r2 = r1.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.servlet.ServletHandler _servletHandler>;

        $r3 = virtualinvoke $r2.<org.mortbay.jetty.servlet.ServletHandler: javax.servlet.ServletContext getServletContext()>();

        interfaceinvoke $r3.<javax.servlet.ServletContext: void log(java.lang.String,java.lang.Throwable)>("unavailable", r0);

        $r7 = new javax.servlet.UnavailableException;

        $r5 = virtualinvoke r0.<java.lang.Throwable: java.lang.String toString()>();

        $i1 = (int) -1;

        specialinvoke $r7.<javax.servlet.UnavailableException: void <init>(java.lang.String,int)>($r5, $i1);

        r1.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx> = $r7;

        r1.<org.mortbay.jetty.servlet.ServletHolder: long _unavailable> = -1L;

     label2:
        return;
    }

    private void initServlet() throws javax.servlet.ServletException
    {
        java.lang.Throwable $r16, $r23, $r29;
        org.mortbay.jetty.servlet.ServletHolder r0;
        javax.servlet.ServletException $r21, $r22;
        org.mortbay.jetty.servlet.ServletHolder$Config $r2, $r13, $r27;
        org.mortbay.jetty.servlet.ServletHandler $r10;
        java.lang.String $r4, $r8, $r17, $r28;
        boolean $z0;
        javax.servlet.Servlet $r1, $r3, $r11, $r12, $r15, $r26;
        org.mortbay.jetty.security.UserRealm $r5, $r6, $r7, $r9, $r18, $r19;
        java.lang.Exception $r20;
        java.security.Principal r25;
        javax.servlet.UnavailableException $r24;
        java.lang.Object $r14;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        r25 = null;

     label01:
        $r1 = r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        if $r1 != null goto label02;

        $r14 = virtualinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.Object newInstance()>();

        $r15 = (javax.servlet.Servlet) $r14;

        r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet> = $r15;

     label02:
        $r2 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.servlet.ServletHolder$Config _config>;

        if $r2 != null goto label03;

        $r13 = new org.mortbay.jetty.servlet.ServletHolder$Config;

        specialinvoke $r13.<org.mortbay.jetty.servlet.ServletHolder$Config: void <init>(org.mortbay.jetty.servlet.ServletHolder)>(r0);

        r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.servlet.ServletHolder$Config _config> = $r13;

     label03:
        $r3 = r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        $z0 = $r3 instanceof org.mortbay.jetty.servlet.ServletHolder$SingleThreadedWrapper;

        if $z0 != 0 goto label04;

        $r10 = virtualinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.servlet.ServletHandler getServletHandler()>();

        $r11 = r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        $r12 = virtualinvoke $r10.<org.mortbay.jetty.servlet.ServletHandler: javax.servlet.Servlet customizeServlet(javax.servlet.Servlet)>($r11);

        r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet> = $r12;

     label04:
        $r4 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _runAs>;

        if $r4 == null goto label05;

        $r7 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        if $r7 == null goto label05;

        $r9 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        $r8 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _runAs>;

        r25 = interfaceinvoke $r9.<org.mortbay.jetty.security.UserRealm: java.security.Principal pushRole(java.security.Principal,java.lang.String)>(null, $r8);

     label05:
        $r26 = r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        $r27 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.servlet.ServletHolder$Config _config>;

        interfaceinvoke $r26.<javax.servlet.Servlet: void init(javax.servlet.ServletConfig)>($r27);

     label06:
        $r28 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _runAs>;

        if $r28 == null goto label15;

        $r5 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        if $r5 == null goto label15;

        if r25 == null goto label15;

        $r6 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        interfaceinvoke $r6.<org.mortbay.jetty.security.UserRealm: java.security.Principal popRole(java.security.Principal)>(r25);

        goto label15;

     label07:
        $r24 := @caughtexception;

        specialinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: void makeUnavailable(javax.servlet.UnavailableException)>($r24);

        r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet> = null;

        r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.servlet.ServletHolder$Config _config> = null;

        throw $r24;

     label08:
        $r22 := @caughtexception;

        $r23 = virtualinvoke $r22.<javax.servlet.ServletException: java.lang.Throwable getCause()>();

        if $r23 != null goto label09;

        $r29 = $r22;

        goto label10;

     label09:
        $r29 = virtualinvoke $r22.<javax.servlet.ServletException: java.lang.Throwable getCause()>();

     label10:
        specialinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: void makeUnavailable(java.lang.Throwable)>($r29);

        r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet> = null;

        r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.servlet.ServletHolder$Config _config> = null;

        throw $r22;

     label11:
        $r20 := @caughtexception;

        specialinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: void makeUnavailable(java.lang.Throwable)>($r20);

        r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet> = null;

        r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.servlet.ServletHolder$Config _config> = null;

        $r21 = new javax.servlet.ServletException;

        specialinvoke $r21.<javax.servlet.ServletException: void <init>(java.lang.Throwable)>($r20);

        throw $r21;

     label12:
        $r16 := @caughtexception;

     label13:
        $r17 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _runAs>;

        if $r17 == null goto label14;

        $r18 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        if $r18 == null goto label14;

        if r25 == null goto label14;

        $r19 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        interfaceinvoke $r19.<org.mortbay.jetty.security.UserRealm: java.security.Principal popRole(java.security.Principal)>(r25);

     label14:
        throw $r16;

     label15:
        return;

        catch javax.servlet.UnavailableException from label01 to label06 with label07;
        catch javax.servlet.ServletException from label01 to label06 with label08;
        catch java.lang.Exception from label01 to label06 with label11;
        catch java.lang.Throwable from label01 to label06 with label12;
        catch java.lang.Throwable from label07 to label13 with label12;
    }

    public void handle(javax.servlet.ServletRequest, javax.servlet.ServletResponse) throws javax.servlet.ServletException, javax.servlet.UnavailableException, java.io.IOException
    {
        org.mortbay.jetty.servlet.ServletHolder r0;
        byte $b1;
        boolean $z0;
        javax.servlet.Servlet r34;
        org.mortbay.jetty.security.UserRealm $r7, $r8, $r10, $r13, $r28, $r29;
        java.security.Principal $r9, $r14, $r16, $r30, r35;
        javax.servlet.ServletResponse r5;
        java.lang.Throwable $r25, $r33;
        long $l0;
        org.mortbay.jetty.Request $r12, r36;
        java.lang.StringBuffer $r19, $r20, $r22;
        java.lang.String $r2, $r3, $r6, $r15, $r17, $r23, $r26, $r27, $r37;
        javax.servlet.ServletRequest r4;
        org.mortbay.jetty.HttpConnection $r11;
        javax.servlet.UnavailableException $r18, $r24, $r31, $r32;
        java.lang.Class $r1, $r21;

        r0 := @this: org.mortbay.jetty.servlet.ServletHolder;

        r4 := @parameter0: javax.servlet.ServletRequest;

        r5 := @parameter1: javax.servlet.ServletResponse;

        $r1 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.Class _class>;

        if $r1 != null goto label01;

        $r24 = new javax.servlet.UnavailableException;

        specialinvoke $r24.<javax.servlet.UnavailableException: void <init>(java.lang.String)>("Servlet Not Initialized");

        throw $r24;

     label01:
        r34 = r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet _servlet>;

        entermonitor r0;

     label02:
        $l0 = r0.<org.mortbay.jetty.servlet.ServletHolder: long _unavailable>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label03;

        $z0 = r0.<org.mortbay.jetty.servlet.ServletHolder: boolean _initOnStartup>;

        if $z0 != 0 goto label04;

     label03:
        r34 = virtualinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.Servlet getServlet()>();

     label04:
        if r34 != null goto label05;

        $r18 = new javax.servlet.UnavailableException;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not instantiate ");

        $r21 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.Class _class>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r18.<javax.servlet.UnavailableException: void <init>(java.lang.String)>($r23);

        throw $r18;

     label05:
        exitmonitor r0;

     label06:
        goto label09;

     label07:
        $r33 := @caughtexception;

        exitmonitor r0;

     label08:
        throw $r33;

     label09:
        r35 = null;

        r36 = null;

     label10:
        $r2 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _forcedPath>;

        if $r2 == null goto label11;

        $r17 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _forcedPath>;

        interfaceinvoke r4.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("org.apache.catalina.jsp_file", $r17);

     label11:
        $r3 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _runAs>;

        if $r3 == null goto label12;

        $r10 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        if $r10 == null goto label12;

        $r11 = staticinvoke <org.mortbay.jetty.HttpConnection: org.mortbay.jetty.HttpConnection getCurrentConnection()>();

        $r12 = virtualinvoke $r11.<org.mortbay.jetty.HttpConnection: org.mortbay.jetty.Request getRequest()>();

        r36 = $r12;

        $r13 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        $r14 = virtualinvoke $r12.<org.mortbay.jetty.Request: java.security.Principal getUserPrincipal()>();

        $r15 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _runAs>;

        $r16 = interfaceinvoke $r13.<org.mortbay.jetty.security.UserRealm: java.security.Principal pushRole(java.security.Principal,java.lang.String)>($r14, $r15);

        r35 = $r16;

        virtualinvoke $r12.<org.mortbay.jetty.Request: void setUserPrincipal(java.security.Principal)>($r16);

     label12:
        interfaceinvoke r34.<javax.servlet.Servlet: void service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r4, r5);

     label13:
        $r37 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _runAs>;

        if $r37 == null goto label14;

        $r7 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        if $r7 == null goto label14;

        if r35 == null goto label14;

        if r36 == null goto label14;

        $r8 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        $r9 = interfaceinvoke $r8.<org.mortbay.jetty.security.UserRealm: java.security.Principal popRole(java.security.Principal)>(r35);

        virtualinvoke r36.<org.mortbay.jetty.Request: void setUserPrincipal(java.security.Principal)>($r9);

     label14:
        if 0 == 0 goto label20;

        $r6 = virtualinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String getName()>();

        interfaceinvoke r4.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.error.servlet_name", $r6);

        goto label20;

     label15:
        $r31 := @caughtexception;

        specialinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: void makeUnavailable(javax.servlet.UnavailableException)>($r31);

        $r32 = r0.<org.mortbay.jetty.servlet.ServletHolder: javax.servlet.UnavailableException _unavailableEx>;

        throw $r32;

     label16:
        $r25 := @caughtexception;

     label17:
        $r26 = r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String _runAs>;

        if $r26 == null goto label18;

        $r28 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        if $r28 == null goto label18;

        if r35 == null goto label18;

        if r36 == null goto label18;

        $r29 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.security.UserRealm _realm>;

        $r30 = interfaceinvoke $r29.<org.mortbay.jetty.security.UserRealm: java.security.Principal popRole(java.security.Principal)>(r35);

        virtualinvoke r36.<org.mortbay.jetty.Request: void setUserPrincipal(java.security.Principal)>($r30);

     label18:
        if 1 == 0 goto label19;

        $r27 = virtualinvoke r0.<org.mortbay.jetty.servlet.ServletHolder: java.lang.String getName()>();

        interfaceinvoke r4.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.error.servlet_name", $r27);

     label19:
        throw $r25;

     label20:
        return;

        catch java.lang.Throwable from label02 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch javax.servlet.UnavailableException from label10 to label13 with label15;
        catch java.lang.Throwable from label10 to label13 with label16;
        catch java.lang.Throwable from label15 to label17 with label16;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static org.mortbay.jetty.servlet.ServletHolder$Config access$100(org.mortbay.jetty.servlet.ServletHolder)
    {
        org.mortbay.jetty.servlet.ServletHolder$Config $r1;
        org.mortbay.jetty.servlet.ServletHolder r0;

        r0 := @parameter0: org.mortbay.jetty.servlet.ServletHolder;

        $r1 = r0.<org.mortbay.jetty.servlet.ServletHolder: org.mortbay.jetty.servlet.ServletHolder$Config _config>;

        return $r1;
    }
}
