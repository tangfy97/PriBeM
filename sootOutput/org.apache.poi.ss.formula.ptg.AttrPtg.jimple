public final class org.apache.poi.ss.formula.ptg.AttrPtg extends org.apache.poi.ss.formula.ptg.ControlPtg
{
    public static final byte sid;
    private static final int SIZE;
    private final byte _options;
    private final short _data;
    private final int[] _jumpTable;
    private final int _chooseFuncOffset;
    private static final org.apache.poi.util.BitField semiVolatile;
    private static final org.apache.poi.util.BitField optiIf;
    private static final org.apache.poi.util.BitField optiChoose;
    private static final org.apache.poi.util.BitField optiSkip;
    private static final org.apache.poi.util.BitField optiSum;
    private static final org.apache.poi.util.BitField baxcel;
    private static final org.apache.poi.util.BitField space;
    public static final org.apache.poi.ss.formula.ptg.AttrPtg SUM;

    public void <init>(org.apache.poi.util.LittleEndianInput)
    {
        org.apache.poi.ss.formula.ptg.AttrPtg r0;
        short $s1, s2;
        byte $b0;
        int[] r2;
        org.apache.poi.util.LittleEndianInput r1;
        int $i3, $i4, $i5, i6, $i7, $i9;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        r1 := @parameter0: org.apache.poi.util.LittleEndianInput;

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.ControlPtg: void <init>()>();

        $b0 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: byte readByte()>();

        r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options> = $b0;

        $s1 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: short readShort()>();

        r0.<org.apache.poi.ss.formula.ptg.AttrPtg: short _data> = $s1;

        $z0 = virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AttrPtg: boolean isOptimizedChoose()>();

        if $z0 == 0 goto label3;

        s2 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: short _data>;

        $i7 = (int) s2;

        r2 = newarray (int)[$i7];

        i6 = 0;

     label1:
        $i3 = lengthof r2;

        if i6 >= $i3 goto label2;

        $i5 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: int readUShort()>();

        r2[i6] = $i5;

        i6 = i6 + 1;

        goto label1;

     label2:
        r0.<org.apache.poi.ss.formula.ptg.AttrPtg: int[] _jumpTable> = r2;

        $i4 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: int readUShort()>();

        r0.<org.apache.poi.ss.formula.ptg.AttrPtg: int _chooseFuncOffset> = $i4;

        goto label4;

     label3:
        r0.<org.apache.poi.ss.formula.ptg.AttrPtg: int[] _jumpTable> = null;

        $i9 = (int) -1;

        r0.<org.apache.poi.ss.formula.ptg.AttrPtg: int _chooseFuncOffset> = $i9;

     label4:
        return;
    }

    private void <init>(int, int, int[], int)
    {
        org.apache.poi.ss.formula.ptg.AttrPtg r0;
        short $s3;
        byte $b1;
        int[] r1;
        int i0, i2, i4;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        r1 := @parameter2: int[];

        i4 := @parameter3: int;

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.ControlPtg: void <init>()>();

        $b1 = (byte) i0;

        r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options> = $b1;

        $s3 = (short) i2;

        r0.<org.apache.poi.ss.formula.ptg.AttrPtg: short _data> = $s3;

        r0.<org.apache.poi.ss.formula.ptg.AttrPtg: int[] _jumpTable> = r1;

        r0.<org.apache.poi.ss.formula.ptg.AttrPtg: int _chooseFuncOffset> = i4;

        return;
    }

    public static org.apache.poi.ss.formula.ptg.AttrPtg createSpace(int, int)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.ss.formula.ptg.AttrPtg $r2;
        int i0, i1, $i2, $i3, $i4, i5, $i6, $i8, $i10;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = i0 & 255;

        $i2 = i1 << 8;

        $i8 = (int) 65535;

        $i3 = $i2 & $i8;

        i5 = $i4 | $i3;

        $r2 = new org.apache.poi.ss.formula.ptg.AttrPtg;

        $r1 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField space>;

        $i6 = virtualinvoke $r1.<org.apache.poi.util.BitField: int set(int)>(0);

        $i10 = (int) -1;

        specialinvoke $r2.<org.apache.poi.ss.formula.ptg.AttrPtg: void <init>(int,int,int[],int)>($i6, i5, null, $i10);

        return $r2;
    }

    public static org.apache.poi.ss.formula.ptg.AttrPtg createIf(int)
    {
        org.apache.poi.ss.formula.ptg.AttrPtg $r2;
        org.apache.poi.util.BitField $r1;
        int $i0, i1, $i3;

        i1 := @parameter0: int;

        $r2 = new org.apache.poi.ss.formula.ptg.AttrPtg;

        $r1 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiIf>;

        $i0 = virtualinvoke $r1.<org.apache.poi.util.BitField: int set(int)>(0);

        $i3 = (int) -1;

        specialinvoke $r2.<org.apache.poi.ss.formula.ptg.AttrPtg: void <init>(int,int,int[],int)>($i0, i1, null, $i3);

        return $r2;
    }

    public static org.apache.poi.ss.formula.ptg.AttrPtg createSkip(int)
    {
        org.apache.poi.ss.formula.ptg.AttrPtg $r2;
        org.apache.poi.util.BitField $r1;
        int $i0, i1, $i3;

        i1 := @parameter0: int;

        $r2 = new org.apache.poi.ss.formula.ptg.AttrPtg;

        $r1 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiSkip>;

        $i0 = virtualinvoke $r1.<org.apache.poi.util.BitField: int set(int)>(0);

        $i3 = (int) -1;

        specialinvoke $r2.<org.apache.poi.ss.formula.ptg.AttrPtg: void <init>(int,int,int[],int)>($i0, i1, null, $i3);

        return $r2;
    }

    public static org.apache.poi.ss.formula.ptg.AttrPtg getSumSingle()
    {
        org.apache.poi.ss.formula.ptg.AttrPtg $r2;
        org.apache.poi.util.BitField $r1;
        int $i0, $i2;

        $r2 = new org.apache.poi.ss.formula.ptg.AttrPtg;

        $r1 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiSum>;

        $i0 = virtualinvoke $r1.<org.apache.poi.util.BitField: int set(int)>(0);

        $i2 = (int) -1;

        specialinvoke $r2.<org.apache.poi.ss.formula.ptg.AttrPtg: void <init>(int,int,int[],int)>($i0, 0, null, $i2);

        return $r2;
    }

    public boolean isSemiVolatile()
    {
        org.apache.poi.ss.formula.ptg.AttrPtg r0;
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        $r1 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField semiVolatile>;

        $b0 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public boolean isOptimizedIf()
    {
        org.apache.poi.ss.formula.ptg.AttrPtg r0;
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        $r1 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiIf>;

        $b0 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public boolean isOptimizedChoose()
    {
        org.apache.poi.ss.formula.ptg.AttrPtg r0;
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        $r1 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiChoose>;

        $b0 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public boolean isSum()
    {
        org.apache.poi.ss.formula.ptg.AttrPtg r0;
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        $r1 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiSum>;

        $b0 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public boolean isSkip()
    {
        org.apache.poi.ss.formula.ptg.AttrPtg r0;
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        $r1 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiSkip>;

        $b0 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    private boolean isBaxcel()
    {
        org.apache.poi.ss.formula.ptg.AttrPtg r0;
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        $r1 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField baxcel>;

        $b0 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public boolean isSpace()
    {
        org.apache.poi.ss.formula.ptg.AttrPtg r0;
        org.apache.poi.util.BitField $r1;
        byte $b0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        $r1 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField space>;

        $b0 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i1 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public short getData()
    {
        org.apache.poi.ss.formula.ptg.AttrPtg r0;
        short $s0;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        $s0 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: short _data>;

        return $s0;
    }

    public int[] getJumpTable()
    {
        org.apache.poi.ss.formula.ptg.AttrPtg r0;
        int[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        $r1 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: int[] _jumpTable>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (int[]) $r2;

        return $r3;
    }

    public int getChooseFuncOffset()
    {
        org.apache.poi.ss.formula.ptg.AttrPtg r0;
        java.lang.IllegalStateException $r2;
        int[] $r1;
        int $i0;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        $r1 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: int[] _jumpTable>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not tAttrChoose");

        throw $r2;

     label1:
        $i0 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: int _chooseFuncOffset>;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.poi.ss.formula.ptg.AttrPtg r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        short $s0, $s1, $s2, $s3, $s6, $s7;
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12;
        int $i4, $i5, $i8, $i9, $i10, $i11, $i12;
        java.lang.String $r3, $r11;
        java.lang.Class $r2;

        r1 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>(int)>(64);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [");

        $z0 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.AttrPtg: boolean isSemiVolatile()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("volatile ");

     label1:
        $z1 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.AttrPtg: boolean isSpace()>();

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("space count=");

        $s3 = r1.<org.apache.poi.ss.formula.ptg.AttrPtg: short _data>;

        $i8 = (int) $s3;

        $i4 = $i8 >> 8;

        $i5 = $i4 & 255;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        $r9 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" type=");

        $s6 = r1.<org.apache.poi.ss.formula.ptg.AttrPtg: short _data>;

        $s7 = $s6 & 255;

        $i9 = (int) $s7;

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i9);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

     label2:
        $z2 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.AttrPtg: boolean isOptimizedIf()>();

        if $z2 == 0 goto label3;

        $r7 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if dist=");

        $s2 = r1.<org.apache.poi.ss.formula.ptg.AttrPtg: short _data>;

        $i10 = (int) $s2;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i10);

        goto label7;

     label3:
        $z3 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.AttrPtg: boolean isOptimizedChoose()>();

        if $z3 == 0 goto label4;

        $r6 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("choose nCases=");

        $s1 = r1.<org.apache.poi.ss.formula.ptg.AttrPtg: short _data>;

        $i11 = (int) $s1;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i11);

        goto label7;

     label4:
        $z4 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.AttrPtg: boolean isSkip()>();

        if $z4 == 0 goto label5;

        $r5 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("skip dist=");

        $s0 = r1.<org.apache.poi.ss.formula.ptg.AttrPtg: short _data>;

        $i12 = (int) $s0;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i12);

        goto label7;

     label5:
        $z5 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.AttrPtg: boolean isSum()>();

        if $z5 == 0 goto label6;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("sum ");

        goto label7;

     label6:
        $z6 = specialinvoke r1.<org.apache.poi.ss.formula.ptg.AttrPtg: boolean isBaxcel()>();

        if $z6 == 0 goto label7;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("assign ");

     label7:
        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r11 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;
    }

    public void write(org.apache.poi.util.LittleEndianOutput)
    {
        org.apache.poi.ss.formula.ptg.AttrPtg r1;
        short $s3;
        byte $b0, $b2;
        org.apache.poi.util.LittleEndianOutput r0;
        int[] r2;
        int $i1, $i4, $i5, $i6, i7, $i8, $i9, $i10;

        r1 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $b0 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.AttrPtg: byte getPtgClass()>();

        $i8 = (int) $b0;

        $i1 = 25 + $i8;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i1);

        $b2 = r1.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i9 = (int) $b2;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i9);

        $s3 = r1.<org.apache.poi.ss.formula.ptg.AttrPtg: short _data>;

        $i10 = (int) $s3;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i10);

        r2 = r1.<org.apache.poi.ss.formula.ptg.AttrPtg: int[] _jumpTable>;

        if r2 == null goto label3;

        i7 = 0;

     label1:
        $i4 = lengthof r2;

        if i7 >= $i4 goto label2;

        $i6 = r2[i7];

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i6);

        i7 = i7 + 1;

        goto label1;

     label2:
        $i5 = r1.<org.apache.poi.ss.formula.ptg.AttrPtg: int _chooseFuncOffset>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i5);

     label3:
        return;
    }

    public int getSize()
    {
        org.apache.poi.ss.formula.ptg.AttrPtg r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        $r1 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: int[] _jumpTable>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: int[] _jumpTable>;

        $i0 = lengthof $r2;

        $i1 = $i0 + 1;

        $i2 = $i1 * 2;

        $i3 = 4 + $i2;

        return $i3;

     label1:
        return 4;
    }

    public java.lang.String toFormulaString(java.lang.String[])
    {
        org.apache.poi.util.BitField $r1, $r2, $r3;
        org.apache.poi.ss.formula.ptg.AttrPtg r0;
        byte $b0, $b1, $b2;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r6, $r7, $r10, $r11, $r15, $r17, $r21, $r22, $r24, $r25, $r28, $r29, $r30;
        java.lang.String[] r8;
        int $i3, $i4, $i5;
        java.lang.String $r5, $r9, $r12, $r14, $r16, $r18, $r20, $r23, $r26, $r27;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        r8 := @parameter0: java.lang.String[];

        $r1 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField space>;

        $b0 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i3 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i3);

        if $z0 == 0 goto label1;

        $r27 = r8[0];

        return $r27;

     label1:
        $r2 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiIf>;

        $b1 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i4 = (int) $b1;

        $z1 = virtualinvoke $r2.<org.apache.poi.util.BitField: boolean isSet(int)>($i4);

        if $z1 == 0 goto label2;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AttrPtg: java.lang.String toFormulaString()>();

        $r21 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r23 = r8[0];

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r26;

     label2:
        $r3 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiSkip>;

        $b2 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i5 = (int) $b2;

        $z2 = virtualinvoke $r3.<org.apache.poi.util.BitField: boolean isSet(int)>($i5);

        if $z2 == 0 goto label3;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AttrPtg: java.lang.String toFormulaString()>();

        $r15 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = r8[0];

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;

     label3:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<org.apache.poi.ss.formula.ptg.AttrPtg: java.lang.String toFormulaString()>();

        $r6 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r9 = r8[0];

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public int getNumberOfOperands()
    {
        org.apache.poi.ss.formula.ptg.AttrPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        return 1;
    }

    public int getType()
    {
        int $i1;
        org.apache.poi.ss.formula.ptg.AttrPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        $i1 = (int) -1;

        return $i1;
    }

    public java.lang.String toFormulaString()
    {
        org.apache.poi.util.BitField $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        org.apache.poi.ss.formula.ptg.AttrPtg r0;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6;
        int $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: org.apache.poi.ss.formula.ptg.AttrPtg;

        $r1 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField semiVolatile>;

        $b0 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i7 = (int) $b0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i7);

        if $z0 == 0 goto label1;

        return "ATTR(semiVolatile)";

     label1:
        $r2 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiIf>;

        $b1 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i8 = (int) $b1;

        $z1 = virtualinvoke $r2.<org.apache.poi.util.BitField: boolean isSet(int)>($i8);

        if $z1 == 0 goto label2;

        return "IF";

     label2:
        $r3 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiChoose>;

        $b2 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i9 = (int) $b2;

        $z2 = virtualinvoke $r3.<org.apache.poi.util.BitField: boolean isSet(int)>($i9);

        if $z2 == 0 goto label3;

        return "CHOOSE";

     label3:
        $r4 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiSkip>;

        $b3 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i10 = (int) $b3;

        $z3 = virtualinvoke $r4.<org.apache.poi.util.BitField: boolean isSet(int)>($i10);

        if $z3 == 0 goto label4;

        return "";

     label4:
        $r5 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiSum>;

        $b4 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i11 = (int) $b4;

        $z4 = virtualinvoke $r5.<org.apache.poi.util.BitField: boolean isSet(int)>($i11);

        if $z4 == 0 goto label5;

        return "SUM";

     label5:
        $r6 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField baxcel>;

        $b5 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i12 = (int) $b5;

        $z5 = virtualinvoke $r6.<org.apache.poi.util.BitField: boolean isSet(int)>($i12);

        if $z5 == 0 goto label6;

        return "ATTR(baxcel)";

     label6:
        $r7 = <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField space>;

        $b6 = r0.<org.apache.poi.ss.formula.ptg.AttrPtg: byte _options>;

        $i13 = (int) $b6;

        $z6 = virtualinvoke $r7.<org.apache.poi.util.BitField: boolean isSet(int)>($i13);

        if $z6 == 0 goto label7;

        return "";

     label7:
        return "UNKNOWN ATTRIBUTE";
    }

    static void <clinit>()
    {
        org.apache.poi.util.BitField $r0, $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.poi.ss.formula.ptg.AttrPtg $r8;
        int $i1;

        <org.apache.poi.ss.formula.ptg.AttrPtg: int SIZE> = 4;

        <org.apache.poi.ss.formula.ptg.AttrPtg: byte sid> = 25;

        $r0 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(1);

        <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField semiVolatile> = $r0;

        $r1 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(2);

        <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiIf> = $r1;

        $r2 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(4);

        <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiChoose> = $r2;

        $r3 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(8);

        <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiSkip> = $r3;

        $r4 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(16);

        <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField optiSum> = $r4;

        $r5 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(32);

        <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField baxcel> = $r5;

        $r6 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(64);

        <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.util.BitField space> = $r6;

        $r8 = new org.apache.poi.ss.formula.ptg.AttrPtg;

        $i1 = (int) -1;

        specialinvoke $r8.<org.apache.poi.ss.formula.ptg.AttrPtg: void <init>(int,int,int[],int)>(16, 0, null, $i1);

        <org.apache.poi.ss.formula.ptg.AttrPtg: org.apache.poi.ss.formula.ptg.AttrPtg SUM> = $r8;

        return;
    }
}
