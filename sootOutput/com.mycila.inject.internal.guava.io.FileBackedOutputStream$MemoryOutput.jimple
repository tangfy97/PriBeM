class com.mycila.inject.internal.guava.io.FileBackedOutputStream$MemoryOutput extends java.io.ByteArrayOutputStream
{

    private void <init>()
    {
        com.mycila.inject.internal.guava.io.FileBackedOutputStream$MemoryOutput r0;

        r0 := @this: com.mycila.inject.internal.guava.io.FileBackedOutputStream$MemoryOutput;

        specialinvoke r0.<java.io.ByteArrayOutputStream: void <init>()>();

        return;
    }

    byte[] getBuffer()
    {
        byte[] $r1;
        com.mycila.inject.internal.guava.io.FileBackedOutputStream$MemoryOutput r0;

        r0 := @this: com.mycila.inject.internal.guava.io.FileBackedOutputStream$MemoryOutput;

        $r1 = r0.<com.mycila.inject.internal.guava.io.FileBackedOutputStream$MemoryOutput: byte[] buf>;

        return $r1;
    }

    int getCount()
    {
        int $i0;
        com.mycila.inject.internal.guava.io.FileBackedOutputStream$MemoryOutput r0;

        r0 := @this: com.mycila.inject.internal.guava.io.FileBackedOutputStream$MemoryOutput;

        $i0 = r0.<com.mycila.inject.internal.guava.io.FileBackedOutputStream$MemoryOutput: int count>;

        return $i0;
    }

    void <init>(com.mycila.inject.internal.guava.io.FileBackedOutputStream$1)
    {
        com.mycila.inject.internal.guava.io.FileBackedOutputStream$MemoryOutput r0;
        com.mycila.inject.internal.guava.io.FileBackedOutputStream$1 r1;

        r0 := @this: com.mycila.inject.internal.guava.io.FileBackedOutputStream$MemoryOutput;

        r1 := @parameter0: com.mycila.inject.internal.guava.io.FileBackedOutputStream$1;

        specialinvoke r0.<com.mycila.inject.internal.guava.io.FileBackedOutputStream$MemoryOutput: void <init>()>();

        return;
    }
}
