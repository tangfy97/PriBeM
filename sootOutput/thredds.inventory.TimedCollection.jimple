public class thredds.inventory.TimedCollection extends java.lang.Object
{
    private static final boolean debug;
    private final thredds.inventory.DatasetCollectionManager manager;
    private java.util.List datasets;
    private ucar.nc2.units.DateRange dateRange;

    public void <init>(thredds.inventory.DatasetCollectionManager, java.util.Formatter) throws java.io.IOException
    {
        thredds.inventory.TimedCollection r0;
        thredds.inventory.DatasetCollectionManager r1;
        java.util.Formatter r2;

        r0 := @this: thredds.inventory.TimedCollection;

        r1 := @parameter0: thredds.inventory.DatasetCollectionManager;

        r2 := @parameter1: java.util.Formatter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.inventory.TimedCollection: thredds.inventory.DatasetCollectionManager manager> = r1;

        virtualinvoke r1.<thredds.inventory.DatasetCollectionManager: void scan(ucar.nc2.util.CancelTask)>(null);

        virtualinvoke r0.<thredds.inventory.TimedCollection: void update()>();

        return;
    }

    public void update()
    {
        java.util.Date $r17, $r20, $r27, $r28, $r31, $r36, $r38, $r39;
        thredds.inventory.DatasetCollectionManager $r1, $r5;
        thredds.inventory.MFile r43;
        boolean $z0, $z1;
        ucar.nc2.units.TimeDuration $r33;
        thredds.inventory.TimedCollection r0;
        java.util.List $r2, $r6, $r7, $r8, $r9, $r11, $r12, $r21, $r23, $r29, $r34, $r42;
        ucar.nc2.units.DateRange $r14, $r15, $r18, $r26, $r30, $r32, $r37;
        thredds.inventory.TimedCollection$Dataset r25, $r41, r44, r45, r46, r47;
        ucar.nc2.units.DateType $r16, $r19;
        java.util.ArrayList $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.util.Iterator $r4;
        java.lang.Object $r10, $r13, $r22, $r24, $r35, $r40;

        r0 := @this: thredds.inventory.TimedCollection;

        $r1 = r0.<thredds.inventory.TimedCollection: thredds.inventory.DatasetCollectionManager manager>;

        $r2 = virtualinvoke $r1.<thredds.inventory.DatasetCollectionManager: java.util.List getFiles()>();

        $r3 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<thredds.inventory.TimedCollection: java.util.List datasets> = $r3;

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r40 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r43 = (thredds.inventory.MFile) $r40;

        $r42 = r0.<thredds.inventory.TimedCollection: java.util.List datasets>;

        $r41 = new thredds.inventory.TimedCollection$Dataset;

        specialinvoke $r41.<thredds.inventory.TimedCollection$Dataset: void <init>(thredds.inventory.TimedCollection,thredds.inventory.MFile)>(r0, r43);

        interfaceinvoke $r42.<java.util.List: boolean add(java.lang.Object)>($r41);

        goto label1;

     label2:
        $r5 = r0.<thredds.inventory.TimedCollection: thredds.inventory.DatasetCollectionManager manager>;

        $z1 = virtualinvoke $r5.<thredds.inventory.DatasetCollectionManager: boolean hasDateExtractor()>();

        if $z1 == 0 goto label8;

        $r6 = r0.<thredds.inventory.TimedCollection: java.util.List datasets>;

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i1 != 1 goto label4;

        $r34 = r0.<thredds.inventory.TimedCollection: java.util.List datasets>;

        $r35 = interfaceinvoke $r34.<java.util.List: java.lang.Object get(int)>(0);

        r44 = (thredds.inventory.TimedCollection$Dataset) $r35;

        $r36 = r44.<thredds.inventory.TimedCollection$Dataset: java.util.Date start>;

        if $r36 == null goto label3;

        $r37 = new ucar.nc2.units.DateRange;

        $r39 = r44.<thredds.inventory.TimedCollection$Dataset: java.util.Date start>;

        $r38 = r44.<thredds.inventory.TimedCollection$Dataset: java.util.Date start>;

        specialinvoke $r37.<ucar.nc2.units.DateRange: void <init>(java.util.Date,java.util.Date)>($r39, $r38);

        r0.<thredds.inventory.TimedCollection: ucar.nc2.units.DateRange dateRange> = $r37;

     label3:
        goto label8;

     label4:
        $r7 = r0.<thredds.inventory.TimedCollection: java.util.List datasets>;

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i2 <= 1 goto label8;

        i10 = 0;

     label5:
        $r8 = r0.<thredds.inventory.TimedCollection: java.util.List datasets>;

        $i3 = interfaceinvoke $r8.<java.util.List: int size()>();

        $i4 = $i3 - 1;

        if i10 >= $i4 goto label7;

        $r21 = r0.<thredds.inventory.TimedCollection: java.util.List datasets>;

        $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i10);

        r45 = (thredds.inventory.TimedCollection$Dataset) $r22;

        $r23 = r0.<thredds.inventory.TimedCollection: java.util.List datasets>;

        $i7 = i10 + 1;

        $r24 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>($i7);

        r25 = (thredds.inventory.TimedCollection$Dataset) $r24;

        $r26 = new ucar.nc2.units.DateRange;

        $r28 = r45.<thredds.inventory.TimedCollection$Dataset: java.util.Date start>;

        $r27 = r25.<thredds.inventory.TimedCollection$Dataset: java.util.Date start>;

        specialinvoke $r26.<ucar.nc2.units.DateRange: void <init>(java.util.Date,java.util.Date)>($r28, $r27);

        virtualinvoke r45.<thredds.inventory.TimedCollection$Dataset: void setDateRange(ucar.nc2.units.DateRange)>($r26);

        $r29 = r0.<thredds.inventory.TimedCollection: java.util.List datasets>;

        $i8 = interfaceinvoke $r29.<java.util.List: int size()>();

        $i9 = $i8 - 2;

        if i10 != $i9 goto label6;

        $r30 = new ucar.nc2.units.DateRange;

        $r31 = r25.<thredds.inventory.TimedCollection$Dataset: java.util.Date start>;

        $r32 = virtualinvoke r45.<thredds.inventory.TimedCollection$Dataset: ucar.nc2.units.DateRange getDateRange()>();

        $r33 = virtualinvoke $r32.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration getDuration()>();

        specialinvoke $r30.<ucar.nc2.units.DateRange: void <init>(java.util.Date,ucar.nc2.units.TimeDuration)>($r31, $r33);

        virtualinvoke r25.<thredds.inventory.TimedCollection$Dataset: void setDateRange(ucar.nc2.units.DateRange)>($r30);

     label6:
        i10 = i10 + 1;

        goto label5;

     label7:
        $r9 = r0.<thredds.inventory.TimedCollection: java.util.List datasets>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0);

        r46 = (thredds.inventory.TimedCollection$Dataset) $r10;

        $r12 = r0.<thredds.inventory.TimedCollection: java.util.List datasets>;

        $r11 = r0.<thredds.inventory.TimedCollection: java.util.List datasets>;

        $i5 = interfaceinvoke $r11.<java.util.List: int size()>();

        $i6 = $i5 - 1;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>($i6);

        r47 = (thredds.inventory.TimedCollection$Dataset) $r13;

        $r14 = new ucar.nc2.units.DateRange;

        $r15 = virtualinvoke r46.<thredds.inventory.TimedCollection$Dataset: ucar.nc2.units.DateRange getDateRange()>();

        $r16 = virtualinvoke $r15.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $r17 = virtualinvoke $r16.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        $r18 = virtualinvoke r47.<thredds.inventory.TimedCollection$Dataset: ucar.nc2.units.DateRange getDateRange()>();

        $r19 = virtualinvoke $r18.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $r20 = virtualinvoke $r19.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        specialinvoke $r14.<ucar.nc2.units.DateRange: void <init>(java.util.Date,java.util.Date)>($r17, $r20);

        r0.<thredds.inventory.TimedCollection: ucar.nc2.units.DateRange dateRange> = $r14;

     label8:
        return;
    }

    private void <init>(thredds.inventory.TimedCollection, ucar.nc2.units.DateRange)
    {
        java.util.Iterator $r6;
        thredds.inventory.TimedCollection r0, r1;
        java.util.ArrayList $r3;
        thredds.inventory.DatasetCollectionManager $r2;
        java.util.List $r4, $r5, $r11;
        ucar.nc2.units.DateRange r7, $r10;
        int $i0;
        java.lang.Object $r8;
        thredds.inventory.TimedCollection$Dataset r9;
        boolean $z0, $z1;

        r0 := @this: thredds.inventory.TimedCollection;

        r1 := @parameter0: thredds.inventory.TimedCollection;

        r7 := @parameter1: ucar.nc2.units.DateRange;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<thredds.inventory.TimedCollection: thredds.inventory.DatasetCollectionManager manager>;

        r0.<thredds.inventory.TimedCollection: thredds.inventory.DatasetCollectionManager manager> = $r2;

        $r3 = new java.util.ArrayList;

        $r4 = r1.<thredds.inventory.TimedCollection: java.util.List datasets>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<thredds.inventory.TimedCollection: java.util.List datasets> = $r3;

        $r5 = r1.<thredds.inventory.TimedCollection: java.util.List datasets>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (thredds.inventory.TimedCollection$Dataset) $r8;

        $r10 = virtualinvoke r9.<thredds.inventory.TimedCollection$Dataset: ucar.nc2.units.DateRange getDateRange()>();

        $z1 = virtualinvoke r7.<ucar.nc2.units.DateRange: boolean intersects(ucar.nc2.units.DateRange)>($r10);

        if $z1 == 0 goto label2;

        $r11 = r0.<thredds.inventory.TimedCollection: java.util.List datasets>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r9);

     label2:
        goto label1;

     label3:
        r0.<thredds.inventory.TimedCollection: ucar.nc2.units.DateRange dateRange> = r7;

        return;
    }

    public thredds.inventory.TimedCollection$Dataset getPrototype()
    {
        thredds.inventory.DatasetCollectionManager $r1;
        java.util.List $r2;
        int $i0;
        thredds.inventory.TimedCollection r0;
        java.lang.Object $r3;
        thredds.inventory.TimedCollection$Dataset $r4;

        r0 := @this: thredds.inventory.TimedCollection;

        $r1 = r0.<thredds.inventory.TimedCollection: thredds.inventory.DatasetCollectionManager manager>;

        $i0 = virtualinvoke $r1.<thredds.inventory.DatasetCollectionManager: int getProtoIndex()>();

        $r2 = r0.<thredds.inventory.TimedCollection: java.util.List datasets>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (thredds.inventory.TimedCollection$Dataset) $r3;

        return $r4;
    }

    public java.util.List getDatasets()
    {
        thredds.inventory.TimedCollection r0;
        java.util.List $r1;

        r0 := @this: thredds.inventory.TimedCollection;

        $r1 = r0.<thredds.inventory.TimedCollection: java.util.List datasets>;

        return $r1;
    }

    public thredds.inventory.TimedCollection subset(ucar.nc2.units.DateRange)
    {
        thredds.inventory.TimedCollection $r0, r1;
        ucar.nc2.units.DateRange r2;

        r1 := @this: thredds.inventory.TimedCollection;

        r2 := @parameter0: ucar.nc2.units.DateRange;

        $r0 = new thredds.inventory.TimedCollection;

        specialinvoke $r0.<thredds.inventory.TimedCollection: void <init>(thredds.inventory.TimedCollection,ucar.nc2.units.DateRange)>(r1, r2);

        return $r0;
    }

    public ucar.nc2.units.DateRange getDateRange()
    {
        thredds.inventory.TimedCollection r0;
        ucar.nc2.units.DateRange $r1;

        r0 := @this: thredds.inventory.TimedCollection;

        $r1 = r0.<thredds.inventory.TimedCollection: ucar.nc2.units.DateRange dateRange>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r1, $r5, $r9;
        java.util.Iterator $r4;
        thredds.inventory.TimedCollection r2;
        java.util.Formatter $r0;
        java.util.List $r3;
        java.lang.Object $r7;
        java.lang.String $r6;
        thredds.inventory.TimedCollection$Dataset r8;
        boolean $z0;

        r2 := @this: thredds.inventory.TimedCollection;

        $r0 = new java.util.Formatter;

        specialinvoke $r0.<java.util.Formatter: void <init>()>();

        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CollectionManager{%n", $r1);

        $r3 = r2.<thredds.inventory.TimedCollection: java.util.List datasets>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (thredds.inventory.TimedCollection$Dataset) $r7;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r8;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" %s%n", $r9);

        goto label1;

     label2:
        $r5 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("}%n", $r5);

        $r6 = virtualinvoke $r0.<java.util.Formatter: java.lang.String toString()>();

        return $r6;
    }

    private static void doit(java.lang.String, java.util.Formatter) throws java.io.IOException
    {
        java.io.PrintStream $r5, $r8, $r10;
        java.lang.Object[] $r4, $r7, $r9;
        thredds.inventory.TimedCollection $r3;
        java.util.Formatter r1;
        thredds.inventory.DatasetCollectionManager $r2;
        int $i0;
        java.lang.String r0, $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Formatter;

        $r2 = staticinvoke <thredds.inventory.DatasetCollectionManager: thredds.inventory.DatasetCollectionManager open(java.lang.String,java.lang.String,java.util.Formatter)>(r0, null, r1);

        $r3 = new thredds.inventory.TimedCollection;

        specialinvoke $r3.<thredds.inventory.TimedCollection: void <init>(thredds.inventory.DatasetCollectionManager,java.util.Formatter)>($r2, r1);

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r0;

        $r4[1] = $r3;

        virtualinvoke $r5.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("spec= %s%n%s%n", $r4);

        $r6 = virtualinvoke r1.<java.util.Formatter: java.lang.String toString()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = $r6;

        virtualinvoke $r10.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s%n", $r9);

     label1:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = newarray (java.lang.Object)[0];

        virtualinvoke $r8.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("-----------------------------------%n", $r7);

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r1;
        java.util.Formatter $r0;

        r1 := @parameter0: java.lang.String[];

        $r0 = new java.util.Formatter;

        specialinvoke $r0.<java.util.Formatter: void <init>()>();

        staticinvoke <thredds.inventory.TimedCollection: void doit(java.lang.String,java.util.Formatter)>("C:/data/formats/gempak/surface/#yyyyMMdd#_sao.gem", $r0);

        return;
    }

    static thredds.inventory.DatasetCollectionManager access$000(thredds.inventory.TimedCollection)
    {
        thredds.inventory.TimedCollection r0;
        thredds.inventory.DatasetCollectionManager $r1;

        r0 := @parameter0: thredds.inventory.TimedCollection;

        $r1 = r0.<thredds.inventory.TimedCollection: thredds.inventory.DatasetCollectionManager manager>;

        return $r1;
    }

    public static void <clinit>()
    {
        <thredds.inventory.TimedCollection: boolean debug> = 0;

        return;
    }
}
