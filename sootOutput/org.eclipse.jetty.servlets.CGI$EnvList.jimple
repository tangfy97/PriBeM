class org.eclipse.jetty.servlets.CGI$EnvList extends java.lang.Object
{
    private java.util.Map envMap;

    void <init>()
    {
        java.util.HashMap $r1;
        org.eclipse.jetty.servlets.CGI$EnvList r0;

        r0 := @this: org.eclipse.jetty.servlets.CGI$EnvList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.servlets.CGI$EnvList: java.util.Map envMap> = $r1;

        return;
    }

    void <init>(org.eclipse.jetty.servlets.CGI$EnvList)
    {
        org.eclipse.jetty.servlets.CGI$EnvList r0, r2;
        java.util.Map $r3;
        java.util.HashMap $r1;

        r0 := @this: org.eclipse.jetty.servlets.CGI$EnvList;

        r2 := @parameter0: org.eclipse.jetty.servlets.CGI$EnvList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        $r3 = r2.<org.eclipse.jetty.servlets.CGI$EnvList: java.util.Map envMap>;

        specialinvoke $r1.<java.util.HashMap: void <init>(java.util.Map)>($r3);

        r0.<org.eclipse.jetty.servlets.CGI$EnvList: java.util.Map envMap> = $r1;

        return;
    }

    public void set(java.lang.String, java.lang.String)
    {
        org.eclipse.jetty.servlets.CGI$EnvList r0;
        java.util.Map $r3;
        java.lang.StringBuilder $r2, $r4, $r5, $r8;
        java.lang.String r1, r6, $r7, $r9;

        r0 := @this: org.eclipse.jetty.servlets.CGI$EnvList;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r3 = r0.<org.eclipse.jetty.servlets.CGI$EnvList: java.util.Map envMap>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r7 = staticinvoke <org.eclipse.jetty.util.StringUtil: java.lang.String nonNull(java.lang.String)>(r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r9);

        return;
    }

    public java.lang.String[] getEnvArray()
    {
        java.lang.Object[] $r5;
        java.util.Collection $r2;
        java.lang.String[] $r4, $r6, $r7;
        org.eclipse.jetty.servlets.CGI$EnvList r0;
        java.util.Map $r1, $r3;
        int $i0;

        r0 := @this: org.eclipse.jetty.servlets.CGI$EnvList;

        $r1 = r0.<org.eclipse.jetty.servlets.CGI$EnvList: java.util.Map envMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = r0.<org.eclipse.jetty.servlets.CGI$EnvList: java.util.Map envMap>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = newarray (java.lang.String)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        $r7 = (java.lang.String[]) $r6;

        return $r7;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        org.eclipse.jetty.servlets.CGI$EnvList r0;
        java.util.Map $r1;

        r0 := @this: org.eclipse.jetty.servlets.CGI$EnvList;

        $r1 = r0.<org.eclipse.jetty.servlets.CGI$EnvList: java.util.Map envMap>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    static java.util.Map access$000(org.eclipse.jetty.servlets.CGI$EnvList)
    {
        org.eclipse.jetty.servlets.CGI$EnvList r0;
        java.util.Map $r1;

        r0 := @parameter0: org.eclipse.jetty.servlets.CGI$EnvList;

        $r1 = r0.<org.eclipse.jetty.servlets.CGI$EnvList: java.util.Map envMap>;

        return $r1;
    }
}
