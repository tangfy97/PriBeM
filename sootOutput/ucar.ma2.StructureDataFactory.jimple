public class ucar.ma2.StructureDataFactory extends java.lang.Object
{

    public void <init>()
    {
        ucar.ma2.StructureDataFactory r0;

        r0 := @this: ucar.ma2.StructureDataFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static ucar.ma2.StructureData make(java.lang.String, java.lang.Object)
    {
        ucar.ma2.DataType $r3;
        ucar.ma2.StructureDataW $r7;
        ucar.ma2.Array $r9;
        ucar.ma2.StructureMembers$Member $r6;
        ucar.ma2.StructureMembers $r0;
        int[] $r5, $r8;
        ucar.ma2.Index $r10;
        java.lang.Object r1;
        java.lang.Class $r2;
        java.lang.String r4;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        $r0 = new ucar.ma2.StructureMembers;

        specialinvoke $r0.<ucar.ma2.StructureMembers: void <init>(java.lang.String)>("");

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <ucar.ma2.DataType: ucar.ma2.DataType getType(java.lang.Class)>($r2);

        $r5 = newarray (int)[1];

        $r5[0] = 1;

        $r6 = virtualinvoke $r0.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member addMember(java.lang.String,java.lang.String,java.lang.String,ucar.ma2.DataType,int[])>(r4, null, null, $r3, $r5);

        $r7 = new ucar.ma2.StructureDataW;

        specialinvoke $r7.<ucar.ma2.StructureDataW: void <init>(ucar.ma2.StructureMembers)>($r0);

        $r8 = newarray (int)[1];

        $r8[0] = 1;

        $r9 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r3, $r8);

        $r10 = virtualinvoke $r9.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        virtualinvoke $r9.<ucar.ma2.Array: void setObject(ucar.ma2.Index,java.lang.Object)>($r10, r1);

        virtualinvoke $r7.<ucar.ma2.StructureDataW: void setMemberData(ucar.ma2.StructureMembers$Member,ucar.ma2.Array)>($r6, $r9);

        return $r7;
    }

    public static ucar.ma2.StructureData make(ucar.ma2.StructureData, ucar.ma2.StructureData)
    {
        ucar.ma2.StructureData r1, r2, $r3;
        ucar.ma2.StructureData[] $r0;

        r1 := @parameter0: ucar.ma2.StructureData;

        r2 := @parameter1: ucar.ma2.StructureData;

        $r0 = newarray (ucar.ma2.StructureData)[2];

        $r0[0] = r1;

        $r0[1] = r2;

        $r3 = staticinvoke <ucar.ma2.StructureDataFactory: ucar.ma2.StructureData make(ucar.ma2.StructureData[])>($r0);

        return $r3;
    }

    public static ucar.ma2.StructureData make(ucar.ma2.StructureData[])
    {
        ucar.ma2.StructureData[] r0;
        ucar.ma2.StructureData r2, $r3, r4, r5;
        int $i0, i1, i2, i3, i4, i5;
        ucar.ma2.StructureDataComposite $r1;

        r0 := @parameter0: ucar.ma2.StructureData[];

        $i0 = lengthof r0;

        if $i0 != 1 goto label1;

        $r3 = r0[0];

        return $r3;

     label1:
        i1 = 0;

        r4 = null;

        i2 = lengthof r0;

        i3 = 0;

     label2:
        if i3 >= i2 goto label4;

        r5 = r0[i3];

        if r5 == null goto label3;

        i1 = i1 + 1;

        r4 = r5;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        if i1 != 1 goto label5;

        return r4;

     label5:
        $r1 = new ucar.ma2.StructureDataComposite;

        specialinvoke $r1.<ucar.ma2.StructureDataComposite: void <init>()>();

        i4 = lengthof r0;

        i5 = 0;

     label6:
        if i5 >= i4 goto label8;

        r2 = r0[i5];

        if r2 == null goto label7;

        virtualinvoke $r1.<ucar.ma2.StructureDataComposite: void add(ucar.ma2.StructureData)>(r2);

     label7:
        i5 = i5 + 1;

        goto label6;

     label8:
        return $r1;
    }
}
