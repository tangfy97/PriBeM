final class com.google.inject.internal.util.$StackTraceElements$1 extends java.lang.Object implements com.google.inject.internal.util.$Function
{

    void <init>()
    {
        com.google.inject.internal.util.$StackTraceElements$1 r0;

        r0 := @this: com.google.inject.internal.util.$StackTraceElements$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.inject.internal.util.$LineNumbers apply(java.lang.Class)
    {
        com.google.inject.internal.util.$LineNumbers $r0;
        java.lang.Class r1;
        java.io.IOException $r2;
        com.google.inject.internal.util.$StackTraceElements$1 r4;
        java.lang.RuntimeException $r3;

        r4 := @this: com.google.inject.internal.util.$StackTraceElements$1;

        r1 := @parameter0: java.lang.Class;

     label1:
        $r0 = new com.google.inject.internal.util.$LineNumbers;

        specialinvoke $r0.<com.google.inject.internal.util.$LineNumbers: void <init>(java.lang.Class)>(r1);

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        com.google.inject.internal.util.$LineNumbers $r3;
        com.google.inject.internal.util.$StackTraceElements$1 r0;
        java.lang.Object r1;
        java.lang.Class $r2;

        r0 := @this: com.google.inject.internal.util.$StackTraceElements$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Class) r1;

        $r3 = virtualinvoke r0.<com.google.inject.internal.util.$StackTraceElements$1: com.google.inject.internal.util.$LineNumbers apply(java.lang.Class)>($r2);

        return $r3;
    }
}
