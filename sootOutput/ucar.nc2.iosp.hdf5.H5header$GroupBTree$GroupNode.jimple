class ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode extends java.lang.Object
{
    long address;
    byte version;
    short nentries;
    java.util.List symbols;
    final ucar.nc2.iosp.hdf5.H5header$GroupBTree this$1;

    void <init>(ucar.nc2.iosp.hdf5.H5header$GroupBTree, long) throws java.io.IOException
    {
        byte[] $r63;
        byte $b2, $b12, $b13;
        ucar.nc2.iosp.hdf5.H5header $r3, $r5, $r6, $r9, $r11, $r13, $r15, $r17, $r25, $r29, $r34, $r35, $r39, $r42, $r55, $r59;
        java.lang.StringBuilder $r20, $r22, $r23, $r28, $r31, $r45, $r46, $r47, $r48, $r52, $r53, $r58, $r61, $r65, $r67, $r69, $r71, $r72;
        java.lang.Object[] $r37, $r41;
        long l0, $l1, $l7, $l8, $l10, $l11, $l15, l16;
        java.util.ArrayList $r64;
        short $s3, $s4, $s14, $s18;
        java.lang.String $r21, $r24, $r32, $r49, $r54, $r62, $r66;
        java.lang.IllegalStateException $r68;
        ucar.unidata.io.RandomAccessFile $r4, $r7, $r10, $r12, $r14, $r16, $r30, $r60;
        ucar.nc2.iosp.hdf5.H5header$GroupBTree r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry $r70;
        java.util.List $r38;
        ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode r0;
        int $i5, $i6, $i9, i17, $i19, $i20, $i21, $i22;
        ucar.nc2.iosp.hdf5.H5header$MemTracker $r18;
        java.io.PrintStream $r26, $r36, $r40, $r43, $r56;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header$GroupBTree;

        l0 := @parameter1: long;

        r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode: ucar.nc2.iosp.hdf5.H5header$GroupBTree this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r64 = new java.util.ArrayList;

        specialinvoke $r64.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode: java.util.List symbols> = $r64;

        r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode: long address> = l0;

        $r3 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r4 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r3);

        $r5 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l1 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$100(ucar.nc2.iosp.hdf5.H5header,long)>($r5, l0);

        virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l1);

        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1500()>();

        if $z0 == 0 goto label01;

        $r55 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r56 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r55);

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--Group Node position=");

        $r59 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r60 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r59);

        $l15 = virtualinvoke $r60.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>($r62);

     label01:
        $r63 = newarray (byte)[4];

        $r6 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r7 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r6);

        virtualinvoke $r7.<ucar.unidata.io.RandomAccessFile: int read(byte[])>($r63);

        $r66 = new java.lang.String;

        specialinvoke $r66.<java.lang.String: void <init>(byte[])>($r63);

        $z1 = virtualinvoke $r66.<java.lang.String: boolean equals(java.lang.Object)>("SNOD");

        if $z1 != 0 goto label02;

        $r68 = new java.lang.IllegalStateException;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should equal SNOD");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r68.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r54);

        throw $r68;

     label02:
        $r9 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r10 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r9);

        $b2 = virtualinvoke $r10.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode: byte version> = $b2;

        $r11 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r12 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r11);

        virtualinvoke $r12.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $r13 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r14 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r13);

        $s3 = virtualinvoke $r14.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode: short nentries> = $s3;

        $z2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1500()>();

        if $z2 == 0 goto label03;

        $r42 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r43 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r42);

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   version=");

        $b13 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode: byte version>;

        $i19 = (int) $b13;

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nentries=");

        $s14 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode: short nentries>;

        $i20 = (int) $s14;

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r49);

     label03:
        $r15 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r16 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r15);

        l16 = virtualinvoke $r16.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        i17 = 0;

     label04:
        $s18 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode: short nentries>;

        $i21 = (int) $s18;

        if i17 >= $i21 goto label08;

        $r70 = new ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry;

        $r34 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        specialinvoke $r70.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: void <init>(ucar.nc2.iosp.hdf5.H5header,long)>($r34, l16);

        $i9 = virtualinvoke $r70.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: int getSize()>();

        $l10 = (long) $i9;

        l16 = l16 + $l10;

        $l11 = $r70.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long objectHeaderAddress>;

        $b12 = $l11 cmp 0L;

        if $b12 == 0 goto label06;

        $z6 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1200()>();

        if $z6 == 0 goto label05;

        $r39 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r40 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r39);

        $r41 = newarray (java.lang.Object)[1];

        $r41[0] = $r70;

        virtualinvoke $r40.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("   add %s%n", $r41);

     label05:
        $r38 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode: java.util.List symbols>;

        interfaceinvoke $r38.<java.util.List: boolean add(java.lang.Object)>($r70);

        goto label07;

     label06:
        $z5 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1200()>();

        if $z5 == 0 goto label07;

        $r35 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r36 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r35);

        $r37 = newarray (java.lang.Object)[1];

        $r37[0] = $r70;

        virtualinvoke $r36.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("   BAD objectHeaderAddress==0 !! %s%n", $r37);

     label07:
        i17 = i17 + 1;

        goto label04;

     label08:
        $z3 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1500()>();

        if $z3 == 0 goto label09;

        $r25 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r26 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r25);

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-- Group Node end position=");

        $r29 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r30 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r29);

        $l7 = virtualinvoke $r30.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r32);

     label09:
        $s4 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode: short nentries>;

        $i22 = (int) $s4;

        $i5 = $i22 * 40;

        $i6 = 8 + $i5;

        $l8 = (long) $i6;

        $z4 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1700()>();

        if $z4 == 0 goto label10;

        $r17 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r18 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$MemTracker access$1800(ucar.nc2.iosp.hdf5.H5header)>($r17);

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Group BtreeNode (");

        $r21 = r1.<ucar.nc2.iosp.hdf5.H5header$GroupBTree: java.lang.String owner>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<ucar.nc2.iosp.hdf5.H5header$MemTracker: void addByLen(java.lang.String,long,long)>($r24, l0, $l8);

     label10:
        return;
    }

    java.util.List getSymbols()
    {
        java.util.List $r1;
        ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode r0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$GroupBTree$GroupNode: java.util.List symbols>;

        return $r1;
    }
}
