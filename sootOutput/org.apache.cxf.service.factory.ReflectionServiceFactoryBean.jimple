public class org.apache.cxf.service.factory.ReflectionServiceFactoryBean extends org.apache.cxf.service.factory.AbstractServiceFactoryBean
{
    public static final java.lang.String ENDPOINT_CLASS;
    public static final java.lang.String GENERIC_TYPE;
    public static final java.lang.String RAW_CLASS;
    public static final java.lang.String WRAPPERGEN_NEEDED;
    public static final java.lang.String EXTRA_CLASS;
    public static final java.lang.String MODE_OUT;
    public static final java.lang.String MODE_INOUT;
    public static final java.lang.String HOLDER;
    public static final java.lang.String HEADER;
    public static final java.lang.String ELEMENT_NAME;
    public static final java.lang.String METHOD;
    public static final java.lang.String FORCE_TYPES;
    public static final java.lang.String METHOD_PARAM_ANNOTATIONS;
    public static final java.lang.String METHOD_ANNOTATIONS;
    public static final java.lang.String PARAM_ANNOTATION;
    private static final java.util.logging.Logger LOG;
    private static final boolean DO_VALIDATE;
    private static java.lang.Class defaultDatabindingClass;
    protected java.lang.String wsdlURL;
    protected java.lang.Class serviceClass;
    protected java.lang.reflect.ParameterizedType serviceType;
    protected java.util.Map parameterizedTypes;
    protected final java.util.Map schemaLocationMapping;
    private java.util.List serviceConfigurations;
    private javax.xml.namespace.QName serviceName;
    private org.apache.cxf.service.invoker.Invoker invoker;
    private java.util.concurrent.Executor executor;
    private java.util.List ignoredClasses;
    private java.util.List ignoredMethods;
    private org.apache.cxf.service.invoker.MethodDispatcher methodDispatcher;
    private java.lang.Boolean wrappedStyle;
    private java.util.Map properties;
    private javax.xml.namespace.QName endpointName;
    private boolean populateFromClass;
    private boolean anonymousWrappers;
    private boolean qualifiedSchemas;
    private boolean validate;
    private java.util.List features;
    private java.util.Map wrappedCache;
    private java.util.Map isRpcCache;
    private java.lang.String styleCache;
    private java.lang.Boolean defWrappedCache;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        java.util.HashMap $r1, $r6, $r7;
        java.lang.String[] $r10;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.ArrayList $r2, $r3, $r4;
        java.util.List $r8, $r11, $r12;
        org.apache.cxf.service.factory.SimpleMethodDispatcher $r5;
        org.apache.cxf.service.factory.DefaultServiceConfiguration $r9;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        specialinvoke r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map schemaLocationMapping> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List ignoredClasses> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List ignoredMethods> = $r4;

        $r5 = new org.apache.cxf.service.factory.SimpleMethodDispatcher;

        specialinvoke $r5.<org.apache.cxf.service.factory.SimpleMethodDispatcher: void <init>()>();

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.invoker.MethodDispatcher methodDispatcher> = $r5;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean qualifiedSchemas> = 1;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map wrappedCache> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map isRpcCache> = $r7;

        $r8 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List getServiceConfigurations()>();

        $r9 = new org.apache.cxf.service.factory.DefaultServiceConfiguration;

        specialinvoke $r9.<org.apache.cxf.service.factory.DefaultServiceConfiguration: void <init>()>();

        interfaceinvoke $r8.<java.util.List: void add(int,java.lang.Object)>(0, $r9);

        $r11 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List ignoredClasses>;

        $r10 = newarray (java.lang.String)[6];

        $r10[0] = "java.lang.Object";

        $r10[1] = "java.lang.Throwable";

        $r10[2] = "org.omg.CORBA_2_3.portable.ObjectImpl";

        $r10[3] = "org.omg.CORBA.portable.ObjectImpl";

        $r10[4] = "javax.ejb.EJBObject";

        $r10[5] = "javax.rmi.CORBA.Stub";

        $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10);

        interfaceinvoke $r11.<java.util.List: boolean addAll(java.util.Collection)>($r12);

        return;
    }

    protected org.apache.cxf.databinding.DataBinding createDefaultDataBinding()
    {
        java.lang.NoSuchMethodException $r21;
        org.apache.cxf.resource.ResourceManager $r14;
        boolean $z0, $z1, $z2;
        org.apache.cxf.databinding.DataBinding $r18, $r23, $r40;
        org.apache.cxf.annotations.DataBinding r35;
        java.util.logging.Logger $r26;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.lang.Exception $r19, $r24;
        java.lang.'annotation'.Annotation $r10;
        java.lang.StringBuilder $r25, $r28, $r31;
        org.apache.cxf.Bus $r5, $r6, $r12;
        java.lang.Object[] $r38;
        java.lang.reflect.Constructor $r37;
        java.util.logging.Level $r27;
        java.lang.String $r3, $r8, $r11, $r15, $r30, $r32;
        java.lang.Class[] $r36;
        java.lang.Class $r1, $r2, $r4, $r7, $r9, $r16, $r29, r34;
        java.lang.Object $r13, $r17, $r22, r33, $r39;
        org.apache.cxf.service.factory.ServiceConstructionException $r20;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r33 = null;

        r34 = null;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        if $r1 == null goto label06;

        $r9 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/apache/cxf/annotations/DataBinding;");

        r35 = (org.apache.cxf.annotations.DataBinding) $r10;

        if r35 == null goto label06;

     label01:
        $r11 = interfaceinvoke r35.<org.apache.cxf.annotations.DataBinding: java.lang.String ref()>();

        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r11);

        if $z1 != 0 goto label03;

        $r12 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.Bus getBus()>();

        $r13 = interfaceinvoke $r12.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/resource/ResourceManager;");

        $r14 = (org.apache.cxf.resource.ResourceManager) $r13;

        $r15 = interfaceinvoke r35.<org.apache.cxf.annotations.DataBinding: java.lang.String ref()>();

        $r16 = interfaceinvoke r35.<org.apache.cxf.annotations.DataBinding: java.lang.Class value()>();

        $r17 = interfaceinvoke $r14.<org.apache.cxf.resource.ResourceManager: java.lang.Object resolveResource(java.lang.String,java.lang.Class)>($r15, $r16);

        $r18 = (org.apache.cxf.databinding.DataBinding) $r17;

     label02:
        return $r18;

     label03:
        r34 = interfaceinvoke r35.<org.apache.cxf.annotations.DataBinding: java.lang.Class value()>();

     label04:
        goto label06;

     label05:
        $r24 := @caughtexception;

        $r26 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r27 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create databinding ");

        $r29 = interfaceinvoke r35.<org.apache.cxf.annotations.DataBinding: java.lang.Class value()>();

        $r30 = virtualinvoke $r29.<java.lang.Class: java.lang.String getName()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r27, $r32, $r24);

     label06:
        if r34 != null goto label07;

        $r5 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.Bus getBus()>();

        if $r5 == null goto label07;

        $r6 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.Bus getBus()>();

        $r7 = class "Lorg/apache/cxf/databinding/DataBinding;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        r33 = interfaceinvoke $r6.<org.apache.cxf.Bus: java.lang.Object getProperty(java.lang.String)>($r8);

     label07:
        if r33 != null goto label08;

        if r34 != null goto label08;

        r34 = staticinvoke <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getJAXBClass()>();

     label08:
        $z2 = r33 instanceof java.lang.String;

        if $z2 == 0 goto label09;

        $r3 = virtualinvoke r33.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r34 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class,java.lang.Class)>($r3, $r4, class "Lorg/apache/cxf/databinding/DataBinding;");

        goto label10;

     label09:
        $z0 = r33 instanceof java.lang.Class;

        if $z0 == 0 goto label10;

        $r2 = (java.lang.Class) r33;

        r34 = virtualinvoke $r2.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/apache/cxf/databinding/DataBinding;");

     label10:
        $r36 = newarray (java.lang.Class)[1];

        $r36[0] = class "Lorg/apache/cxf/service/factory/ReflectionServiceFactoryBean;";

        $r37 = virtualinvoke r34.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r36);

        $r38 = newarray (java.lang.Object)[1];

        $r38[0] = r0;

        $r39 = virtualinvoke $r37.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r38);

        $r40 = (org.apache.cxf.databinding.DataBinding) $r39;

     label11:
        return $r40;

     label12:
        $r21 := @caughtexception;

        $r22 = virtualinvoke r34.<java.lang.Class: java.lang.Object newInstance()>();

        $r23 = (org.apache.cxf.databinding.DataBinding) $r22;

     label13:
        return $r23;

     label14:
        $r19 := @caughtexception;

        $r20 = new org.apache.cxf.service.factory.ServiceConstructionException;

        specialinvoke $r20.<org.apache.cxf.service.factory.ServiceConstructionException: void <init>(java.lang.Throwable)>($r19);

        throw $r20;

        catch java.lang.Exception from label01 to label02 with label05;
        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.NoSuchMethodException from label10 to label11 with label12;
        catch java.lang.Exception from label07 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    private static synchronized java.lang.Class getJAXBClass() throws java.lang.ClassNotFoundException
    {
        java.lang.Class $r0, $r1, $r2;

        $r0 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class defaultDatabindingClass>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class,java.lang.Class)>("org.apache.cxf.jaxb.JAXBDataBinding", class "Lorg/apache/cxf/service/factory/ReflectionServiceFactoryBean;", class "Lorg/apache/cxf/databinding/DataBinding;");

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class defaultDatabindingClass> = $r2;

     label1:
        $r1 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class defaultDatabindingClass>;

        return $r1;
    }

    public void reset()
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $z0 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean dataBindingSet>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void setDataBinding(org.apache.cxf.databinding.DataBinding)>(null);

     label1:
        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void setService(org.apache.cxf.service.Service)>(null);

        return;
    }

    public synchronized org.apache.cxf.service.Service create()
    {
        java.lang.Object[] $r1, $r13;
        org.apache.cxf.service.invoker.MethodDispatcher $r11;
        org.apache.cxf.service.Service $r4, $r8, $r12, $r15, $r17, $r19;
        org.apache.cxf.service.invoker.Invoker $r3, $r5, $r20;
        java.lang.String $r10;
        java.util.concurrent.Executor $r6, $r18;
        org.apache.cxf.databinding.DataBinding $r7, $r16;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        org.apache.cxf.service.factory.FactoryBeanListener$Event $r2, $r14;
        java.lang.Class $r9;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void reset()>();

        $r2 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event START_CREATE>;

        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r2, $r1);

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeServiceConfigurations()>();

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeServiceModel()>();

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeDefaultInterceptors()>();

        $r3 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.invoker.Invoker invoker>;

        if $r3 == null goto label1;

        $r19 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r20 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.invoker.Invoker getInvoker()>();

        interfaceinvoke $r19.<org.apache.cxf.service.Service: void setInvoker(org.apache.cxf.service.invoker.Invoker)>($r20);

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r5 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.invoker.Invoker createInvoker()>();

        interfaceinvoke $r4.<org.apache.cxf.service.Service: void setInvoker(org.apache.cxf.service.invoker.Invoker)>($r5);

     label2:
        $r6 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.concurrent.Executor getExecutor()>();

        if $r6 == null goto label3;

        $r17 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r18 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.concurrent.Executor getExecutor()>();

        interfaceinvoke $r17.<org.apache.cxf.service.Service: void setExecutor(java.util.concurrent.Executor)>($r18);

     label3:
        $r7 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.databinding.DataBinding getDataBinding()>();

        if $r7 == null goto label4;

        $r15 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r16 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.databinding.DataBinding getDataBinding()>();

        interfaceinvoke $r15.<org.apache.cxf.service.Service: void setDataBinding(org.apache.cxf.databinding.DataBinding)>($r16);

     label4:
        $r8 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r9 = class "Lorg/apache/cxf/service/invoker/MethodDispatcher;";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.invoker.MethodDispatcher getMethodDispatcher()>();

        interfaceinvoke $r8.<org.apache.cxf.service.Service: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void createEndpoints()>();

        specialinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void fillInSchemaCrossreferences()>();

        $r12 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r14 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event END_CREATE>;

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = $r12;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r14, $r13);

        return $r12;
    }

    private void fillInSchemaCrossreferences()
    {
        java.lang.Object[] $r21;
        org.apache.cxf.service.model.ServiceInfo r5;
        org.apache.cxf.common.xmlschema.SchemaCollection $r6;
        org.apache.ws.commons.schema.XmlSchemaElement r16;
        org.apache.cxf.common.i18n.Message $r20;
        org.apache.ws.commons.schema.XmlSchemaType $r17, $r19;
        org.apache.cxf.service.Service $r1;
        java.util.Map $r12;
        org.apache.ws.commons.schema.XmlSchema $r11;
        java.lang.String $r26;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r3, $r8, $r14;
        org.apache.cxf.service.model.SchemaInfo r10;
        java.util.Collection $r13;
        java.util.logging.Logger $r22, $r25;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r2, $r7;
        java.lang.Object $r4, $r9, $r15;
        javax.xml.namespace.QName $r18, $r23, $r24;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.service.Service: java.util.List getServiceInfos()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.cxf.service.model.ServiceInfo) $r4;

        $r6 = virtualinvoke r5.<org.apache.cxf.service.model.ServiceInfo: org.apache.cxf.common.xmlschema.SchemaCollection getXmlSchemaCollection()>();

        $r7 = virtualinvoke r5.<org.apache.cxf.service.model.ServiceInfo: java.util.List getSchemas()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.cxf.service.model.SchemaInfo) $r9;

        $r11 = virtualinvoke r10.<org.apache.cxf.service.model.SchemaInfo: org.apache.ws.commons.schema.XmlSchema getSchema()>();

        $r12 = virtualinvoke $r11.<org.apache.ws.commons.schema.XmlSchema: java.util.Map getElements()>();

        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Collection values()>();

        $r14 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.apache.ws.commons.schema.XmlSchemaElement) $r15;

        $r17 = virtualinvoke r16.<org.apache.ws.commons.schema.XmlSchemaElement: org.apache.ws.commons.schema.XmlSchemaType getSchemaType()>();

        if $r17 != null goto label5;

        $r18 = virtualinvoke r16.<org.apache.ws.commons.schema.XmlSchemaElement: javax.xml.namespace.QName getSchemaTypeName()>();

        if $r18 == null goto label5;

        $r19 = virtualinvoke $r6.<org.apache.cxf.common.xmlschema.SchemaCollection: org.apache.ws.commons.schema.XmlSchemaType getTypeByQName(javax.xml.namespace.QName)>($r18);

        if $r19 != null goto label4;

        $r20 = new org.apache.cxf.common.i18n.Message;

        $r22 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r21 = newarray (java.lang.Object)[3];

        $r23 = virtualinvoke r16.<org.apache.ws.commons.schema.XmlSchemaElement: javax.xml.namespace.QName getQName()>();

        $r21[0] = $r23;

        $r21[1] = $r18;

        $r24 = interfaceinvoke $r1.<org.apache.cxf.service.Service: javax.xml.namespace.QName getName()>();

        $r21[2] = $r24;

        specialinvoke $r20.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("REFERENCE_TO_UNDEFINED_TYPE", $r22, $r21);

        $r25 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r26 = virtualinvoke $r20.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r25.<java.util.logging.Logger: void severe(java.lang.String)>($r26);

        goto label5;

     label4:
        virtualinvoke r16.<org.apache.ws.commons.schema.XmlSchemaElement: void setSchemaType(org.apache.ws.commons.schema.XmlSchemaType)>($r19);

     label5:
        goto label3;

     label6:
        goto label2;

     label7:
        goto label1;

     label8:
        return;
    }

    protected void createEndpoints()
    {
        org.apache.cxf.Bus $r2;
        org.apache.cxf.service.model.ServiceInfo r8;
        org.apache.cxf.service.model.BindingOperationInfo r22;
        org.apache.cxf.service.Service $r1;
        java.util.Map $r19;
        java.lang.String $r17;
        boolean $z0, $z1, $z2;
        org.apache.cxf.service.model.EndpointInfo r12;
        java.util.Iterator $r6, $r10, $r15;
        java.util.Collection $r9, $r14;
        org.apache.cxf.BusException $r25;
        org.apache.cxf.service.model.BindingInfo $r13, $r16;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        org.apache.cxf.binding.BindingFactoryManager r4;
        java.util.List $r5;
        org.apache.cxf.endpoint.Endpoint $r18;
        java.lang.Object $r3, $r7, $r11, $r21;
        javax.xml.namespace.QName $r20;
        org.apache.cxf.service.factory.ServiceConstructionException $r24;
        org.apache.cxf.endpoint.EndpointException $r23;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r2 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.Bus getBus()>();

        $r3 = interfaceinvoke $r2.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/binding/BindingFactoryManager;");

        r4 = (org.apache.cxf.binding.BindingFactoryManager) $r3;

        $r5 = interfaceinvoke $r1.<org.apache.cxf.service.Service: java.util.List getServiceInfos()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.cxf.service.model.ServiceInfo) $r7;

        $r9 = virtualinvoke r8.<org.apache.cxf.service.model.ServiceInfo: java.util.Collection getEndpoints()>();

        $r10 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.cxf.service.model.EndpointInfo) $r11;

        $r13 = virtualinvoke r12.<org.apache.cxf.service.model.EndpointInfo: org.apache.cxf.service.model.BindingInfo getBinding()>();

        $r14 = virtualinvoke $r13.<org.apache.cxf.service.model.BindingInfo: java.util.Collection getOperations()>();

        $r15 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r21 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.apache.cxf.service.model.BindingOperationInfo) $r21;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void updateBindingOperation(org.apache.cxf.service.model.BindingOperationInfo)>(r22);

        goto label03;

     label04:
        $r16 = virtualinvoke r12.<org.apache.cxf.service.model.EndpointInfo: org.apache.cxf.service.model.BindingInfo getBinding()>();

        $r17 = virtualinvoke $r16.<org.apache.cxf.service.model.BindingInfo: java.lang.String getBindingId()>();

        interfaceinvoke r4.<org.apache.cxf.binding.BindingFactoryManager: org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)>($r17);

     label05:
        goto label07;

     label06:
        $r25 := @caughtexception;

        goto label02;

     label07:
        $r18 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.endpoint.Endpoint createEndpoint(org.apache.cxf.service.model.EndpointInfo)>(r12);

        $r19 = interfaceinvoke $r1.<org.apache.cxf.service.Service: java.util.Map getEndpoints()>();

        $r20 = virtualinvoke r12.<org.apache.cxf.service.model.EndpointInfo: javax.xml.namespace.QName getName()>();

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r18);

     label08:
        goto label10;

     label09:
        $r23 := @caughtexception;

        $r24 = new org.apache.cxf.service.factory.ServiceConstructionException;

        specialinvoke $r24.<org.apache.cxf.service.factory.ServiceConstructionException: void <init>(java.lang.Throwable)>($r23);

        throw $r24;

     label10:
        goto label02;

     label11:
        goto label01;

     label12:
        return;

        catch org.apache.cxf.BusException from label04 to label05 with label06;
        catch org.apache.cxf.endpoint.EndpointException from label07 to label08 with label09;
    }

    public void updateBindingOperation(org.apache.cxf.service.model.BindingOperationInfo)
    {
        org.apache.cxf.service.model.BindingOperationInfo r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: org.apache.cxf.service.model.BindingOperationInfo;

        return;
    }

    public org.apache.cxf.endpoint.Endpoint createEndpoint(org.apache.cxf.service.model.EndpointInfo) throws org.apache.cxf.endpoint.EndpointException
    {
        org.apache.cxf.Bus $r2;
        org.apache.cxf.service.model.EndpointInfo r4;
        java.lang.Object[] $r5;
        org.apache.cxf.endpoint.EndpointImpl $r0;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r1;
        org.apache.cxf.service.Service $r3;
        org.apache.cxf.service.factory.FactoryBeanListener$Event $r6;
        java.lang.Class $r7;

        r1 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r4 := @parameter0: org.apache.cxf.service.model.EndpointInfo;

        $r0 = new org.apache.cxf.endpoint.EndpointImpl;

        $r2 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.Bus getBus()>();

        $r3 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        specialinvoke $r0.<org.apache.cxf.endpoint.EndpointImpl: void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)>($r2, $r3, r4);

        $r6 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event ENDPOINT_CREATED>;

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = r4;

        $r5[1] = $r0;

        $r7 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        $r5[2] = $r7;

        virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r6, $r5);

        return $r0;
    }

    protected void initializeServiceConfigurations()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        java.lang.Object $r3;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: void setServiceFactory(org.apache.cxf.service.factory.ReflectionServiceFactoryBean)>(r0);

        goto label1;

     label2:
        return;
    }

    protected void setServiceProperties()
    {
        java.lang.Class[] $r6;
        org.apache.cxf.service.invoker.MethodDispatcher $r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        org.apache.cxf.service.Service $r2, $r8, $r11;
        java.util.Map $r7, $r9;
        int i0, i1;
        java.lang.Class $r3, $r5, r10;
        java.lang.String $r4, $r12;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.invoker.MethodDispatcher getMethodDispatcher()>();

        $r2 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r3 = class "Lorg/apache/cxf/service/invoker/MethodDispatcher;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r2.<org.apache.cxf.service.Service: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r1);

        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i0 = lengthof $r6;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r10 = $r6[i1];

        $r11 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r12 = virtualinvoke r10.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r11.<org.apache.cxf.service.Service: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r7 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map properties>;

        if $r7 == null goto label3;

        $r8 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r9 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map properties>;

        interfaceinvoke $r8.<org.apache.cxf.service.Service: void putAll(java.util.Map)>($r9);

     label3:
        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void setOldMethodDispatcherProperty()>();

        return;
    }

    protected void setOldMethodDispatcherProperty()
    {
        java.lang.Class[] $r8;
        org.apache.cxf.service.invoker.MethodDispatcher $r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.lang.Exception $r12;
        org.apache.cxf.service.Service $r2, $r11;
        java.lang.Thread $r6;
        java.lang.Object $r3, $r10;
        java.lang.Class $r4, $r5;
        java.lang.ClassLoader $r7;
        org.apache.cxf.common.util.ReflectionInvokationHandler $r9;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.invoker.MethodDispatcher getMethodDispatcher()>();

        $r2 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r3 = interfaceinvoke $r2.<org.apache.cxf.service.Service: java.lang.Object get(java.lang.Object)>("org.apache.cxf.frontend.MethodDispatcher");

        if $r3 != null goto label4;

     label1:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>("org.apache.cxf.frontend.MethodDispatcher", $r4);

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r7 = virtualinvoke $r6.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r8 = newarray (java.lang.Class)[1];

        $r8[0] = $r5;

        $r9 = new org.apache.cxf.common.util.ReflectionInvokationHandler;

        specialinvoke $r9.<org.apache.cxf.common.util.ReflectionInvokationHandler: void <init>(java.lang.Object)>($r1);

        $r10 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r7, $r8, $r9);

        $r11 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        interfaceinvoke $r11.<org.apache.cxf.service.Service: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.frontend.MethodDispatcher", $r10);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void buildServiceFromWSDL(java.lang.String)
    {
        org.apache.cxf.service.Service $r13, $r16, $r19;
        org.apache.cxf.wsdl11.WSDLServiceFactory $r6;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.util.Set $r18;
        java.util.logging.Logger $r5, $r34;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r9, $r20, $r25, $r29;
        org.apache.cxf.service.factory.FactoryBeanListener$Event $r3, $r11, $r15;
        java.lang.StringBuilder $r33, $r35, $r37, $r38, $r39;
        javax.xml.namespace.QName $r8, $r28, $r36;
        org.apache.cxf.Bus $r7;
        java.lang.Object[] $r1, $r10, $r14;
        org.apache.cxf.service.model.ServiceInfo r23;
        java.util.logging.Level $r4;
        org.apache.cxf.service.factory.WSDLBasedServiceConfiguration $r24;
        org.apache.cxf.feature.Feature r41;
        java.lang.String r2, $r40;
        org.apache.cxf.service.model.EndpointInfo $r17, $r26;
        javax.wsdl.Definition $r12;
        java.util.Iterator $r21, $r30;
        org.apache.cxf.service.model.BindingInfo $r27;
        java.lang.Object $r22, $r31;
        java.lang.Class $r32;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r2 := @parameter0: java.lang.String;

        $r3 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event CREATE_FROM_WSDL>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r3, $r1);

        $r5 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r4 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $z0 = virtualinvoke $r5.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r4);

        if $z0 == 0 goto label1;

        $r34 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating Service ");

        $r36 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getServiceQName()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from WSDL: ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.util.logging.Logger: void info(java.lang.String)>($r40);

     label1:
        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean populateFromClass> = 0;

        $r6 = new org.apache.cxf.wsdl11.WSDLServiceFactory;

        $r7 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.Bus getBus()>();

        $r8 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getServiceQName()>();

        specialinvoke $r6.<org.apache.cxf.wsdl11.WSDLServiceFactory: void <init>(org.apache.cxf.Bus,java.lang.String,javax.xml.namespace.QName)>($r7, r2, $r8);

        z5 = 1;

        $r9 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List features>;

        if $r9 == null goto label4;

        $r29 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List features>;

        $r30 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r31 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r41 = (org.apache.cxf.feature.Feature) $r31;

        $r32 = virtualinvoke r41.<java.lang.Object: java.lang.Class getClass()>();

        $z4 = virtualinvoke $r32.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Lorg/apache/cxf/annotations/EvaluateAllEndpoints;");

        if $z4 == 0 goto label3;

        z5 = 0;

     label3:
        goto label2;

     label4:
        if z5 == 0 goto label5;

        $r28 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getEndpointName(boolean)>(0);

        virtualinvoke $r6.<org.apache.cxf.wsdl11.WSDLServiceFactory: void setEndpointName(javax.xml.namespace.QName)>($r28);

     label5:
        $r11 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event WSDL_LOADED>;

        $r10 = newarray (java.lang.Object)[1];

        $r12 = virtualinvoke $r6.<org.apache.cxf.wsdl11.WSDLServiceFactory: javax.wsdl.Definition getDefinition()>();

        $r10[0] = $r12;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r11, $r10);

        $r13 = virtualinvoke $r6.<org.apache.cxf.wsdl11.WSDLServiceFactory: org.apache.cxf.service.Service create()>();

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void setService(org.apache.cxf.service.Service)>($r13);

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void setServiceProperties()>();

        $r15 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event SERVICE_SET>;

        $r14 = newarray (java.lang.Object)[1];

        $r16 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r14[0] = $r16;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r15, $r14);

        $r17 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.model.EndpointInfo getEndpointInfo()>();

        if $r17 == null goto label6;

        $r25 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r24 = new org.apache.cxf.service.factory.WSDLBasedServiceConfiguration;

        $r26 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.model.EndpointInfo getEndpointInfo()>();

        $r27 = virtualinvoke $r26.<org.apache.cxf.service.model.EndpointInfo: org.apache.cxf.service.model.BindingInfo getBinding()>();

        specialinvoke $r24.<org.apache.cxf.service.factory.WSDLBasedServiceConfiguration: void <init>(org.apache.cxf.service.model.BindingInfo)>($r27);

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>($r24);

     label6:
        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeWSDLOperations()>();

        $r18 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Set getExtraClass()>();

        if $r18 == null goto label8;

        $z1 = interfaceinvoke $r18.<java.util.Set: boolean isEmpty()>();

        if $z1 != 0 goto label8;

        $r19 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r20 = interfaceinvoke $r19.<org.apache.cxf.service.Service: java.util.List getServiceInfos()>();

        $r21 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z2 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r23 = (org.apache.cxf.service.model.ServiceInfo) $r22;

        virtualinvoke r23.<org.apache.cxf.service.model.ServiceInfo: void setProperty(java.lang.String,java.lang.Object)>("extra.class", $r18);

        goto label7;

     label8:
        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeDataBindings()>();

        return;
    }

    protected void buildServiceFromClass()
    {
        org.apache.ws.commons.schema.XmlSchemaCollection $r11;
        org.apache.cxf.service.Service $r22, $r24;
        org.apache.cxf.service.model.InterfaceInfo $r27, $r49;
        java.util.Set $r23;
        org.apache.cxf.databinding.source.mime.MimeSerializer $r15;
        java.lang.StringBuilder $r54, $r56, $r58, $r59, $r62;
        javax.xml.namespace.QName $r17, $r18, r45, $r57;
        org.apache.cxf.service.ServiceImpl $r16;
        java.lang.Object[] $r6, $r20, $r67;
        org.apache.ws.commons.schema.extensions.ExtensionRegistry $r14;
        org.apache.cxf.service.model.ServiceInfo $r9, r72;
        org.apache.cxf.service.ServiceModelSchemaValidator $r32;
        java.lang.String $r19, $r33, $r34, $r61, $r63, $r64, $r70;
        org.apache.cxf.service.model.MessagePartInfo $r46;
        org.apache.cxf.catalog.CatalogXmlSchemaURIResolver $r12;
        org.apache.cxf.common.xmlschema.SchemaCollection $r10;
        java.lang.reflect.Method r39;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        java.util.Collection $r28, $r40;
        org.apache.cxf.service.model.OperationInfo r73;
        java.util.logging.Logger $r4, $r31, $r35, $r36, $r51, $r55, $r68;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r25;
        org.apache.cxf.service.factory.FactoryBeanListener$Event $r7, $r21;
        org.apache.cxf.Bus $r1, $r13;
        org.apache.cxf.common.i18n.Message $r66;
        java.util.logging.Level $r3, $r30, $r52;
        java.lang.Boolean $r71;
        org.apache.cxf.service.model.FaultInfo r43;
        java.util.Iterator $r26, $r29, $r41;
        org.apache.cxf.service.model.MessageInfo $r47, $r48;
        java.lang.Object $r2, $r37, $r38, $r42, $r44, $r50;
        java.lang.Class $r5, $r8, $r53, $r60, $r69;
        org.apache.cxf.service.factory.ServiceConstructionException $r65;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.Bus getBus()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.Bus: java.lang.Object getProperty(java.lang.String)>("requireExplicitContractLocation");

        if $r2 == null goto label02;

        $r64 = "true";

        $z14 = virtualinvoke $r64.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z14 != 0 goto label01;

        $r71 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z15 = virtualinvoke $r71.<java.lang.Boolean: boolean equals(java.lang.Object)>($r2);

        if $z15 == 0 goto label02;

     label01:
        $r65 = new org.apache.cxf.service.factory.ServiceConstructionException;

        $r66 = new org.apache.cxf.common.i18n.Message;

        $r68 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r67 = newarray (java.lang.Object)[1];

        $r69 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        $r70 = virtualinvoke $r69.<java.lang.Class: java.lang.String getName()>();

        $r67[0] = $r70;

        specialinvoke $r66.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("NO_WSDL_PROVIDED", $r68, $r67);

        specialinvoke $r65.<org.apache.cxf.service.factory.ServiceConstructionException: void <init>(org.apache.cxf.common.i18n.Message)>($r66);

        throw $r65;

     label02:
        $r4 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r3 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $z0 = virtualinvoke $r4.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r3);

        if $z0 == 0 goto label03;

        $r55 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating Service ");

        $r57 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getServiceQName()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from class ");

        $r60 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        $r61 = virtualinvoke $r60.<java.lang.Class: java.lang.String getName()>();

        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r55.<java.util.logging.Logger: void info(java.lang.String)>($r63);

     label03:
        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean populateFromClass> = 1;

        $r5 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        $z1 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>($r5);

        if $z1 == 0 goto label04;

        $r51 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r52 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r53 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        virtualinvoke $r51.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r52, "USING_PROXY_FOR_SERVICE", $r53);

     label04:
        $r7 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event CREATE_FROM_CLASS>;

        $r6 = newarray (java.lang.Object)[1];

        $r8 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        $r6[0] = $r8;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r7, $r6);

        $r9 = new org.apache.cxf.service.model.ServiceInfo;

        specialinvoke $r9.<org.apache.cxf.service.model.ServiceInfo: void <init>()>();

        $r10 = virtualinvoke $r9.<org.apache.cxf.service.model.ServiceInfo: org.apache.cxf.common.xmlschema.SchemaCollection getXmlSchemaCollection()>();

        $r11 = virtualinvoke $r10.<org.apache.cxf.common.xmlschema.SchemaCollection: org.apache.ws.commons.schema.XmlSchemaCollection getXmlSchemaCollection()>();

        $r12 = new org.apache.cxf.catalog.CatalogXmlSchemaURIResolver;

        $r13 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.Bus getBus()>();

        specialinvoke $r12.<org.apache.cxf.catalog.CatalogXmlSchemaURIResolver: void <init>(org.apache.cxf.Bus)>($r13);

        virtualinvoke $r11.<org.apache.ws.commons.schema.XmlSchemaCollection: void setSchemaResolver(org.apache.ws.commons.schema.resolver.URIResolver)>($r12);

        $r14 = virtualinvoke $r10.<org.apache.cxf.common.xmlschema.SchemaCollection: org.apache.ws.commons.schema.extensions.ExtensionRegistry getExtReg()>();

        $r15 = new org.apache.cxf.databinding.source.mime.MimeSerializer;

        specialinvoke $r15.<org.apache.cxf.databinding.source.mime.MimeSerializer: void <init>()>();

        virtualinvoke $r14.<org.apache.ws.commons.schema.extensions.ExtensionRegistry: void registerSerializer(java.lang.Class,org.apache.ws.commons.schema.extensions.ExtensionSerializer)>(class "Lorg/apache/cxf/databinding/source/mime/MimeAttribute;", $r15);

        $r16 = new org.apache.cxf.service.ServiceImpl;

        specialinvoke $r16.<org.apache.cxf.service.ServiceImpl: void <init>(org.apache.cxf.service.model.ServiceInfo)>($r9);

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void setService(org.apache.cxf.service.Service)>($r16);

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void setServiceProperties()>();

        $r17 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getServiceQName()>();

        virtualinvoke $r9.<org.apache.cxf.service.model.ServiceInfo: void setName(javax.xml.namespace.QName)>($r17);

        $r18 = virtualinvoke $r9.<org.apache.cxf.service.model.ServiceInfo: javax.xml.namespace.QName getName()>();

        $r19 = virtualinvoke $r18.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        virtualinvoke $r9.<org.apache.cxf.service.model.ServiceInfo: void setTargetNamespace(java.lang.String)>($r19);

        $r21 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event SERVICE_SET>;

        $r20 = newarray (java.lang.Object)[1];

        $r22 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r20[0] = $r22;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r21, $r20);

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.model.InterfaceInfo createInterface(org.apache.cxf.service.model.ServiceInfo)>($r9);

        $r23 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Set getExtraClass()>();

        $r24 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r25 = interfaceinvoke $r24.<org.apache.cxf.service.Service: java.util.List getServiceInfos()>();

        $r26 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z16 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label07;

        $r50 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        r72 = (org.apache.cxf.service.model.ServiceInfo) $r50;

        if $r23 == null goto label06;

        $z13 = interfaceinvoke $r23.<java.util.Set: boolean isEmpty()>();

        if $z13 != 0 goto label06;

        virtualinvoke r72.<org.apache.cxf.service.model.ServiceInfo: void setProperty(java.lang.String,java.lang.Object)>("extra.class", $r23);

     label06:
        goto label05;

     label07:
        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeDataBindings()>();

        $z2 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapped()>();

        if $z2 != 0 goto label08;

        $r49 = virtualinvoke $r9.<org.apache.cxf.service.model.ServiceInfo: org.apache.cxf.service.model.InterfaceInfo getInterface()>();

        $z12 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)>($r49);

        if $z12 == 0 goto label09;

     label08:
        $z17 = 1;

        goto label10;

     label09:
        $z17 = 0;

     label10:
        if $z17 == 0 goto label11;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)>($r9);

     label11:
        $r27 = virtualinvoke $r9.<org.apache.cxf.service.model.ServiceInfo: org.apache.cxf.service.model.InterfaceInfo getInterface()>();

        $r28 = virtualinvoke $r27.<org.apache.cxf.service.model.InterfaceInfo: java.util.Collection getOperations()>();

        $r29 = interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        $z18 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z18 == 0 goto label18;

        $r37 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r73 = (org.apache.cxf.service.model.OperationInfo) $r37;

        $r38 = virtualinvoke r73.<org.apache.cxf.service.model.OperationInfo: java.lang.Object getProperty(java.lang.String)>("operation.method");

        r39 = (java.lang.reflect.Method) $r38;

        $z7 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapped(java.lang.reflect.Method)>(r39);

        if $z7 != 0 goto label13;

        $z11 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isRPC(java.lang.reflect.Method)>(r39);

        if $z11 != 0 goto label13;

        $r48 = virtualinvoke r73.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        if $r48 == null goto label13;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)>($r9, r73, 0);

     label13:
        $z19 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapped(java.lang.reflect.Method)>(r39);

        if $z19 != 0 goto label14;

        $z10 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isRPC(java.lang.reflect.Method)>(r39);

        if $z10 != 0 goto label14;

        $r47 = virtualinvoke r73.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        if $r47 == null goto label14;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)>($r9, r73, 1);

     label14:
        $z20 = virtualinvoke r73.<org.apache.cxf.service.model.OperationInfo: boolean hasFaults()>();

        if $z20 == 0 goto label17;

        $r40 = virtualinvoke r73.<org.apache.cxf.service.model.OperationInfo: java.util.Collection getFaults()>();

        $r41 = interfaceinvoke $r40.<java.util.Collection: java.util.Iterator iterator()>();

     label15:
        $z8 = interfaceinvoke $r41.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label17;

        $r42 = interfaceinvoke $r41.<java.util.Iterator: java.lang.Object next()>();

        r43 = (org.apache.cxf.service.model.FaultInfo) $r42;

        $r44 = virtualinvoke r43.<org.apache.cxf.service.model.FaultInfo: java.lang.Object getProperty(java.lang.String)>("elementName");

        r45 = (javax.xml.namespace.QName) $r44;

        $r46 = virtualinvoke r43.<org.apache.cxf.service.model.FaultInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)>(0);

        $z9 = virtualinvoke $r46.<org.apache.cxf.service.model.MessagePartInfo: boolean isElement()>();

        if $z9 != 0 goto label16;

        virtualinvoke $r46.<org.apache.cxf.service.model.MessagePartInfo: void setElement(boolean)>(1);

        virtualinvoke $r46.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>(r45);

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)>($r9, $r46);

     label16:
        goto label15;

     label17:
        goto label12;

     label18:
        $r31 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r30 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z3 = virtualinvoke $r31.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r30);

        if $z3 != 0 goto label19;

        $z6 = specialinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isValidate()>();

        if $z6 == 0 goto label21;

     label19:
        $r32 = new org.apache.cxf.service.ServiceModelSchemaValidator;

        specialinvoke $r32.<org.apache.cxf.service.ServiceModelSchemaValidator: void <init>(org.apache.cxf.service.model.ServiceInfo)>($r9);

        virtualinvoke $r32.<org.apache.cxf.service.ServiceModelSchemaValidator: void walk()>();

        $r33 = virtualinvoke $r32.<org.apache.cxf.service.ServiceModelSchemaValidator: java.lang.String getComplaints()>();

        $r34 = "";

        $z4 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r33);

        if $z4 != 0 goto label21;

        $z5 = specialinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isValidate()>();

        if $z5 == 0 goto label20;

        $r36 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        virtualinvoke $r36.<java.util.logging.Logger: void warning(java.lang.String)>($r33);

        goto label21;

     label20:
        $r35 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        virtualinvoke $r35.<java.util.logging.Logger: void fine(java.lang.String)>($r33);

     label21:
        return;
    }

    public boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)
    {
        org.apache.cxf.service.model.InterfaceInfo r0;
        java.util.Iterator $r2;
        java.util.Collection $r1;
        org.apache.cxf.service.model.OperationInfo r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r5;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r5 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r0 := @parameter0: org.apache.cxf.service.model.InterfaceInfo;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.model.InterfaceInfo: java.util.Collection getOperations()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.model.OperationInfo) $r3;

        $z1 = virtualinvoke r4.<org.apache.cxf.service.model.OperationInfo: boolean isUnwrappedCapable()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    protected boolean isFromWsdl()
    {
        java.lang.String $r1, $r2;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $z0 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean populateFromClass>;

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String getWsdlURL()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String getWsdlURL()>();

        $z1 = specialinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isEmptywsdl(java.lang.String)>($r2);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    protected void initializeServiceModel()
    {
        java.lang.Object[] $r4;
        org.apache.cxf.common.i18n.Message $r3;
        java.util.logging.Logger $r5;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.lang.Class $r1;
        org.apache.cxf.service.factory.ServiceConstructionException $r2;
        java.lang.String $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $z0 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isFromWsdl()>();

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String getWsdlURL()>();

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void buildServiceFromWSDL(java.lang.String)>($r7);

        goto label3;

     label1:
        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        if $r1 == null goto label2;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void buildServiceFromClass()>();

        goto label3;

     label2:
        $r2 = new org.apache.cxf.service.factory.ServiceConstructionException;

        $r3 = new org.apache.cxf.common.i18n.Message;

        $r5 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r4 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String getWsdlURL()>();

        $r4[0] = $r6;

        specialinvoke $r3.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("NO_WSDL_NO_SERVICE_CLASS_PROVIDED", $r5, $r4);

        specialinvoke $r2.<org.apache.cxf.service.factory.ServiceConstructionException: void <init>(org.apache.cxf.common.i18n.Message)>($r3);

        throw $r2;

     label3:
        $z1 = specialinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isValidate()>();

        if $z1 == 0 goto label4;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void validateServiceModel()>();

     label4:
        return;
    }

    public void validateServiceModel()
    {
        org.apache.cxf.service.Service $r4;
        org.apache.ws.commons.schema.XmlSchemaAnnotated $r20, $r23, $r34, $r36, $r38, $r41, $r43, $r45, $r51, $r53, $r55, $r58, $r60, $r62;
        org.apache.cxf.service.model.InterfaceInfo $r9;
        org.apache.cxf.service.model.ServiceInfo r8;
        org.apache.cxf.common.xmlschema.XmlSchemaValidationManager r3;
        java.lang.AssertionError $r21, $r22, $r24, $r25, $r35, $r37, $r39, $r42, $r44, $r46, $r52, $r54, $r56, $r59, $r61, $r63;
        org.apache.cxf.service.model.MessagePartInfo $r19, r66, r67, r68, r69;
        org.apache.cxf.common.xmlschema.SchemaCollection $r64;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40;
        java.util.Collection $r10, $r16;
        org.apache.cxf.service.model.OperationInfo $r26, r65;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r5, $r14, $r28, $r31, $r48;
        org.apache.cxf.Bus $r1;
        org.apache.cxf.service.model.FaultInfo r70;
        java.util.Iterator $r6, $r11, $r15, $r17, $r29, $r32, $r49;
        org.apache.cxf.service.model.MessageInfo $r13, $r27, $r30, $r47;
        java.lang.Object $r2, $r7, $r12, $r18, $r33, $r40, $r50, $r57;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.Bus getBus()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/common/xmlschema/XmlSchemaValidationManager;");

        r3 = (org.apache.cxf.common.xmlschema.XmlSchemaValidationManager) $r2;

        $r4 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r5 = interfaceinvoke $r4.<org.apache.cxf.service.Service: java.util.List getServiceInfos()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label31;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.cxf.service.model.ServiceInfo) $r7;

        if r3 == null goto label02;

        $r64 = virtualinvoke r8.<org.apache.cxf.service.model.ServiceInfo: org.apache.cxf.common.xmlschema.SchemaCollection getXmlSchemaCollection()>();

        specialinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void validateSchemas(org.apache.cxf.common.xmlschema.XmlSchemaValidationManager,org.apache.cxf.common.xmlschema.SchemaCollection)>(r3, $r64);

     label02:
        $r9 = virtualinvoke r8.<org.apache.cxf.service.model.ServiceInfo: org.apache.cxf.service.model.InterfaceInfo getInterface()>();

        $r10 = virtualinvoke $r9.<org.apache.cxf.service.model.InterfaceInfo: java.util.Collection getOperations()>();

        $r11 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z39 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z39 == 0 goto label30;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r65 = (org.apache.cxf.service.model.OperationInfo) $r12;

        $r13 = virtualinvoke r65.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r14 = virtualinvoke $r13.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r57 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r66 = (org.apache.cxf.service.model.MessagePartInfo) $r57;

        $z33 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled>;

        if $z33 != 0 goto label05;

        $r62 = virtualinvoke r66.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        if $r62 != null goto label05;

        $r63 = new java.lang.AssertionError;

        specialinvoke $r63.<java.lang.AssertionError: void <init>()>();

        throw $r63;

     label05:
        $z34 = virtualinvoke r66.<org.apache.cxf.service.model.MessagePartInfo: boolean isElement()>();

        if $z34 == 0 goto label06;

        $z37 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled>;

        if $z37 != 0 goto label07;

        $r60 = virtualinvoke r66.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        $z38 = $r60 instanceof org.apache.ws.commons.schema.XmlSchemaElement;

        if $z38 != 0 goto label07;

        $r61 = new java.lang.AssertionError;

        specialinvoke $r61.<java.lang.AssertionError: void <init>()>();

        throw $r61;

     label06:
        $z35 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled>;

        if $z35 != 0 goto label07;

        $r58 = virtualinvoke r66.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        $z36 = $r58 instanceof org.apache.ws.commons.schema.XmlSchemaElement;

        if $z36 == 0 goto label07;

        $r59 = new java.lang.AssertionError;

        specialinvoke $r59.<java.lang.AssertionError: void <init>()>();

        throw $r59;

     label07:
        goto label04;

     label08:
        $z2 = virtualinvoke r65.<org.apache.cxf.service.model.OperationInfo: boolean hasOutput()>();

        if $z2 == 0 goto label13;

        $r47 = virtualinvoke r65.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r48 = virtualinvoke $r47.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r49 = interfaceinvoke $r48.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z26 = interfaceinvoke $r49.<java.util.Iterator: boolean hasNext()>();

        if $z26 == 0 goto label13;

        $r50 = interfaceinvoke $r49.<java.util.Iterator: java.lang.Object next()>();

        r67 = (org.apache.cxf.service.model.MessagePartInfo) $r50;

        $z27 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled>;

        if $z27 != 0 goto label10;

        $r55 = virtualinvoke r67.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        if $r55 != null goto label10;

        $r56 = new java.lang.AssertionError;

        specialinvoke $r56.<java.lang.AssertionError: void <init>()>();

        throw $r56;

     label10:
        $z28 = virtualinvoke r67.<org.apache.cxf.service.model.MessagePartInfo: boolean isElement()>();

        if $z28 == 0 goto label11;

        $z31 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled>;

        if $z31 != 0 goto label12;

        $r53 = virtualinvoke r67.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        $z32 = $r53 instanceof org.apache.ws.commons.schema.XmlSchemaElement;

        if $z32 != 0 goto label12;

        $r54 = new java.lang.AssertionError;

        specialinvoke $r54.<java.lang.AssertionError: void <init>()>();

        throw $r54;

     label11:
        $z29 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled>;

        if $z29 != 0 goto label12;

        $r51 = virtualinvoke r67.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        $z30 = $r51 instanceof org.apache.ws.commons.schema.XmlSchemaElement;

        if $z30 == 0 goto label12;

        $r52 = new java.lang.AssertionError;

        specialinvoke $r52.<java.lang.AssertionError: void <init>()>();

        throw $r52;

     label12:
        goto label09;

     label13:
        $z3 = virtualinvoke r65.<org.apache.cxf.service.model.OperationInfo: boolean isUnwrappedCapable()>();

        if $z3 == 0 goto label23;

        $r26 = virtualinvoke r65.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo getUnwrappedOperation()>();

        r65 = $r26;

        $r27 = virtualinvoke $r26.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r28 = virtualinvoke $r27.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r29 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z11 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label18;

        $r40 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r68 = (org.apache.cxf.service.model.MessagePartInfo) $r40;

        $z20 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled>;

        if $z20 != 0 goto label15;

        $r45 = virtualinvoke r68.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        if $r45 != null goto label15;

        $r46 = new java.lang.AssertionError;

        specialinvoke $r46.<java.lang.AssertionError: void <init>()>();

        throw $r46;

     label15:
        $z21 = virtualinvoke r68.<org.apache.cxf.service.model.MessagePartInfo: boolean isElement()>();

        if $z21 == 0 goto label16;

        $z24 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled>;

        if $z24 != 0 goto label17;

        $r43 = virtualinvoke r68.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        $z25 = $r43 instanceof org.apache.ws.commons.schema.XmlSchemaElement;

        if $z25 != 0 goto label17;

        $r44 = new java.lang.AssertionError;

        specialinvoke $r44.<java.lang.AssertionError: void <init>()>();

        throw $r44;

     label16:
        $z22 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled>;

        if $z22 != 0 goto label17;

        $r41 = virtualinvoke r68.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        $z23 = $r41 instanceof org.apache.ws.commons.schema.XmlSchemaElement;

        if $z23 == 0 goto label17;

        $r42 = new java.lang.AssertionError;

        specialinvoke $r42.<java.lang.AssertionError: void <init>()>();

        throw $r42;

     label17:
        goto label14;

     label18:
        $z12 = virtualinvoke $r26.<org.apache.cxf.service.model.OperationInfo: boolean hasOutput()>();

        if $z12 == 0 goto label23;

        $r30 = virtualinvoke $r26.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r31 = virtualinvoke $r30.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r32 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z13 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label23;

        $r33 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r69 = (org.apache.cxf.service.model.MessagePartInfo) $r33;

        $z14 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled>;

        if $z14 != 0 goto label20;

        $r38 = virtualinvoke r69.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        if $r38 != null goto label20;

        $r39 = new java.lang.AssertionError;

        specialinvoke $r39.<java.lang.AssertionError: void <init>()>();

        throw $r39;

     label20:
        $z15 = virtualinvoke r69.<org.apache.cxf.service.model.MessagePartInfo: boolean isElement()>();

        if $z15 == 0 goto label21;

        $z18 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled>;

        if $z18 != 0 goto label22;

        $r36 = virtualinvoke r69.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        $z19 = $r36 instanceof org.apache.ws.commons.schema.XmlSchemaElement;

        if $z19 != 0 goto label22;

        $r37 = new java.lang.AssertionError;

        specialinvoke $r37.<java.lang.AssertionError: void <init>()>();

        throw $r37;

     label21:
        $z16 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled>;

        if $z16 != 0 goto label22;

        $r34 = virtualinvoke r69.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        $z17 = $r34 instanceof org.apache.ws.commons.schema.XmlSchemaElement;

        if $z17 == 0 goto label22;

        $r35 = new java.lang.AssertionError;

        specialinvoke $r35.<java.lang.AssertionError: void <init>()>();

        throw $r35;

     label22:
        goto label19;

     label23:
        $z40 = virtualinvoke r65.<org.apache.cxf.service.model.OperationInfo: boolean hasFaults()>();

        if $z40 == 0 goto label29;

        $r16 = virtualinvoke r65.<org.apache.cxf.service.model.OperationInfo: java.util.Collection getFaults()>();

        $r17 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label24:
        $z4 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label29;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r70 = (org.apache.cxf.service.model.FaultInfo) $r18;

        $r19 = virtualinvoke r70.<org.apache.cxf.service.model.FaultInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)>(0);

        $z5 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled>;

        if $z5 != 0 goto label25;

        if $r19 != null goto label25;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label25:
        $z6 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled>;

        if $z6 != 0 goto label26;

        $r23 = virtualinvoke $r19.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        if $r23 != null goto label26;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label26:
        $z7 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled>;

        if $z7 != 0 goto label27;

        $z10 = virtualinvoke $r19.<org.apache.cxf.service.model.MessagePartInfo: boolean isElement()>();

        if $z10 != 0 goto label27;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label27:
        $z8 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled>;

        if $z8 != 0 goto label28;

        $r20 = virtualinvoke $r19.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        $z9 = $r20 instanceof org.apache.ws.commons.schema.XmlSchemaElement;

        if $z9 != 0 goto label28;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label28:
        goto label24;

     label29:
        goto label03;

     label30:
        goto label01;

     label31:
        return;
    }

    private void validateSchemas(org.apache.cxf.common.xmlschema.XmlSchemaValidationManager, org.apache.cxf.common.xmlschema.SchemaCollection)
    {
        java.lang.Object[] $r8;
        org.apache.cxf.common.xmlschema.SchemaCollection r2;
        org.apache.cxf.common.xmlschema.XmlSchemaValidationManager r1;
        org.apache.cxf.common.i18n.Message $r7;
        java.util.logging.Logger $r9;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r5;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean$1 $r4;
        org.apache.ws.commons.schema.XmlSchemaCollection $r3;
        int $i0;
        java.lang.StringBuilder $r0;
        org.apache.cxf.service.factory.ServiceConstructionException $r6;
        java.lang.String $r10;

        r5 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: org.apache.cxf.common.xmlschema.XmlSchemaValidationManager;

        r2 := @parameter1: org.apache.cxf.common.xmlschema.SchemaCollection;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r2.<org.apache.cxf.common.xmlschema.SchemaCollection: org.apache.ws.commons.schema.XmlSchemaCollection getXmlSchemaCollection()>();

        $r4 = new org.apache.cxf.service.factory.ReflectionServiceFactoryBean$1;

        specialinvoke $r4.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean$1: void <init>(org.apache.cxf.service.factory.ReflectionServiceFactoryBean,java.lang.StringBuilder)>(r5, $r0);

        interfaceinvoke r1.<org.apache.cxf.common.xmlschema.XmlSchemaValidationManager: void validateSchemas(org.apache.ws.commons.schema.XmlSchemaCollection,org.w3c.dom.DOMErrorHandler)>($r3, $r4);

        $i0 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label1;

        $r6 = new org.apache.cxf.service.factory.ServiceConstructionException;

        $r7 = new org.apache.cxf.common.i18n.Message;

        $r9 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r8 = newarray (java.lang.Object)[1];

        $r10 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8[0] = $r10;

        specialinvoke $r7.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("XSD_VALIDATION_ERROR", $r9, $r8);

        specialinvoke $r6.<org.apache.cxf.service.factory.ServiceConstructionException: void <init>(org.apache.cxf.common.i18n.Message)>($r7);

        throw $r6;

     label1:
        return;
    }

    public boolean isPopulateFromClass()
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $z0 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean populateFromClass>;

        return $z0;
    }

    public void setPopulateFromClass(boolean)
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean populateFromClass> = z0;

        return;
    }

    protected org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()
    {
        java.lang.Object[] $r8;
        org.apache.cxf.service.model.ServiceInfo r11;
        org.apache.cxf.common.i18n.Message $r7;
        org.apache.cxf.service.Service $r3;
        boolean $z0, $z1;
        org.apache.cxf.service.model.EndpointInfo $r1, $r15;
        java.util.Iterator $r5;
        org.apache.cxf.service.model.InterfaceInfo $r12, $r14, $r16;
        java.util.logging.Logger $r9;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r4;
        java.lang.Object $r10;
        javax.xml.namespace.QName $r2, $r13;
        org.apache.cxf.service.factory.ServiceConstructionException $r6;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.model.EndpointInfo getEndpointInfo()>();

        if $r1 == null goto label1;

        $r15 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.model.EndpointInfo getEndpointInfo()>();

        $r16 = virtualinvoke $r15.<org.apache.cxf.service.model.EndpointInfo: org.apache.cxf.service.model.InterfaceInfo getInterface()>();

        return $r16;

     label1:
        $r2 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getInterfaceName()>();

        $r3 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r4 = interfaceinvoke $r3.<org.apache.cxf.service.Service: java.util.List getServiceInfos()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.cxf.service.model.ServiceInfo) $r10;

        $r12 = virtualinvoke r11.<org.apache.cxf.service.model.ServiceInfo: org.apache.cxf.service.model.InterfaceInfo getInterface()>();

        $r13 = virtualinvoke $r12.<org.apache.cxf.service.model.InterfaceInfo: javax.xml.namespace.QName getName()>();

        $z1 = virtualinvoke $r2.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label3;

        $r14 = virtualinvoke r11.<org.apache.cxf.service.model.ServiceInfo: org.apache.cxf.service.model.InterfaceInfo getInterface()>();

        return $r14;

     label3:
        goto label2;

     label4:
        $r6 = new org.apache.cxf.service.factory.ServiceConstructionException;

        $r7 = new org.apache.cxf.common.i18n.Message;

        $r9 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = $r2;

        specialinvoke $r7.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("COULD_NOT_FIND_PORTTYPE", $r9, $r8);

        specialinvoke $r6.<org.apache.cxf.service.factory.ServiceConstructionException: void <init>(org.apache.cxf.common.i18n.Message)>($r7);

        throw $r6;
    }

    protected void initializeWSDLOperations()
    {
        org.apache.cxf.service.Service $r10;
        org.apache.cxf.service.model.InterfaceInfo $r5;
        java.util.Set $r29;
        javax.xml.namespace.QName $r33, $r36, $r39, $r43, r48;
        java.lang.Object[] $r13;
        org.apache.cxf.service.model.ServiceInfo r50;
        org.apache.cxf.service.model.BindingOperationInfo r52, r53;
        java.util.ArrayList $r0, $r20;
        java.lang.String $r37, $r38, $r40, $r41;
        java.util.Map$Entry r47;
        org.apache.cxf.service.model.BindingInfo r51;
        java.lang.reflect.Method[] $r3;
        java.lang.reflect.Method r44, r46;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.Collection $r7, $r17, $r21;
        org.apache.cxf.service.model.OperationInfo $r26, r45, r49;
        java.util.logging.Logger $r31;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r1;
        org.apache.cxf.helpers.MethodComparator $r4;
        java.util.List $r11;
        org.apache.cxf.service.factory.FactoryBeanListener$Event $r14;
        java.util.HashMap $r6;
        java.util.logging.Level $r32;
        int i0, i1;
        java.util.Iterator $r8, $r9, $r12, $r18, $r22, $r23, $r30;
        java.lang.Class $r2, $r15;
        java.lang.Object $r16, $r19, $r24, $r25, $r27, $r28, $r34, $r35, $r42;

        r1 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class serviceClass>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $r4 = new org.apache.cxf.helpers.MethodComparator;

        specialinvoke $r4.<org.apache.cxf.helpers.MethodComparator: void <init>()>();

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r3, $r4);

        $r5 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()>();

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        i0 = lengthof $r3;

        i1 = 0;

     label01:
        if i1 >= i0 goto label03;

        r44 = $r3[i1];

        $z10 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isValidMethod(java.lang.reflect.Method)>(r44);

        if $z10 == 0 goto label02;

        $r43 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)>($r5, r44);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r43, r44);

     label02:
        i1 = i1 + 1;

        goto label01;

     label03:
        $r7 = virtualinvoke $r5.<org.apache.cxf.service.model.InterfaceInfo: java.util.Collection getOperations()>();

        $r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r28 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r45 = (org.apache.cxf.service.model.OperationInfo) $r28;

        r46 = null;

        $r29 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r30 = interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z7 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label07;

        $r34 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r47 = (java.util.Map$Entry) $r34;

        $r35 = interfaceinvoke r47.<java.util.Map$Entry: java.lang.Object getKey()>();

        r48 = (javax.xml.namespace.QName) $r35;

        $r36 = virtualinvoke r45.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        $r37 = virtualinvoke $r36.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r38 = virtualinvoke r48.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z8 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r38);

        if $z8 == 0 goto label06;

        $r39 = virtualinvoke r45.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        $r40 = virtualinvoke $r39.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r41 = virtualinvoke r48.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z9 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isMatchOperation(java.lang.String,java.lang.String)>($r40, $r41);

        if $z9 == 0 goto label06;

        $r42 = interfaceinvoke r47.<java.util.Map$Entry: java.lang.Object getValue()>();

        r46 = (java.lang.reflect.Method) $r42;

        goto label07;

     label06:
        goto label05;

     label07:
        if r46 != null goto label08;

        $r31 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r32 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r33 = virtualinvoke r45.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        virtualinvoke $r31.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r32, "NO_METHOD_FOR_OP", $r33);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r45);

        goto label09;

     label08:
        virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>($r5, r45, r46);

     label09:
        goto label04;

     label10:
        $r9 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r27 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r49 = (org.apache.cxf.service.model.OperationInfo) $r27;

        virtualinvoke $r5.<org.apache.cxf.service.model.InterfaceInfo: void removeOperation(org.apache.cxf.service.model.OperationInfo)>(r49);

        goto label11;

     label12:
        $r10 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r11 = interfaceinvoke $r10.<org.apache.cxf.service.Service: java.util.List getServiceInfos()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label22;

        $r16 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r50 = (org.apache.cxf.service.model.ServiceInfo) $r16;

        $r17 = virtualinvoke r50.<org.apache.cxf.service.model.ServiceInfo: java.util.Collection getBindings()>();

        $r18 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();

     label14:
        $z3 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label21;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r51 = (org.apache.cxf.service.model.BindingInfo) $r19;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        $r21 = virtualinvoke r51.<org.apache.cxf.service.model.BindingInfo: java.util.Collection getOperations()>();

        $r22 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>();

     label15:
        $z4 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label18;

        $r25 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r52 = (org.apache.cxf.service.model.BindingOperationInfo) $r25;

        $r26 = virtualinvoke r52.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        $z6 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>($r26);

        if $z6 == 0 goto label16;

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r52);

        goto label17;

     label16:
        virtualinvoke r52.<org.apache.cxf.service.model.BindingOperationInfo: void updateUnwrappedOperation()>();

     label17:
        goto label15;

     label18:
        $r23 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z5 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label20;

        $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r53 = (org.apache.cxf.service.model.BindingOperationInfo) $r24;

        virtualinvoke r51.<org.apache.cxf.service.model.BindingInfo: void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)>(r53);

        goto label19;

     label20:
        goto label14;

     label21:
        goto label13;

     label22:
        $r14 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event INTERFACE_CREATED>;

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = $r5;

        $r15 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        $r13[1] = $r15;

        virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r14, $r13);

        return;
    }

    protected void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo, org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method)
    {
        java.lang.Object[] $r10;
        org.apache.cxf.service.model.InterfaceInfo r12;
        org.apache.cxf.service.model.OperationInfo r0;
        java.util.logging.Logger $r7;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r4;
        java.util.logging.Level $r8;
        java.util.List $r6, $r13;
        org.apache.cxf.service.factory.FactoryBeanListener$Event $r11;
        java.lang.Object $r2;
        java.lang.String $r1;
        javax.wsdl.Operation r3;
        javax.xml.namespace.QName $r9;
        java.lang.reflect.Method r5;
        boolean $z0;

        r4 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r12 := @parameter0: org.apache.cxf.service.model.InterfaceInfo;

        r0 := @parameter1: org.apache.cxf.service.model.OperationInfo;

        r5 := @parameter2: java.lang.reflect.Method;

        $r1 = <org.apache.cxf.wsdl11.WSDLServiceBuilder: java.lang.String WSDL_OPERATION>;

        $r2 = virtualinvoke r0.<org.apache.cxf.service.model.OperationInfo: java.lang.Object getProperty(java.lang.String)>($r1);

        r3 = (javax.wsdl.Operation) $r2;

        if r3 != null goto label1;

        $r13 = null;

        goto label2;

     label1:
        $r6 = interfaceinvoke r3.<javax.wsdl.Operation: java.util.List getParameterOrdering()>();

        $r13 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.List cast(java.util.List,java.lang.Class)>($r6, class "Ljava/lang/String;");

     label2:
        $z0 = virtualinvoke r4.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)>(r0, r5, $r13);

        if $z0 == 0 goto label3;

        virtualinvoke r4.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void bindOperation(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r0, r5);

        virtualinvoke r0.<org.apache.cxf.service.model.OperationInfo: void setProperty(java.lang.String,java.lang.Object)>("operation.method", r5);

        $r11 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event INTERFACE_OPERATION_BOUND>;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = r0;

        $r10[1] = r5;

        virtualinvoke r4.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r11, $r10);

        goto label4;

     label3:
        $r7 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r8 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r9 = virtualinvoke r0.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r8, "NO_METHOD_FOR_OP", $r9);

     label4:
        return;
    }

    protected boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method, java.util.List)
    {
        java.lang.reflect.Method r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.cxf.service.model.OperationInfo r0, $r15, $r16, r34;
        java.util.logging.Logger $r19, $r20;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r1;
        java.util.List $r24, $r29, r33;
        org.apache.cxf.service.factory.FactoryBeanListener$Event $r4, $r7;
        java.lang.reflect.Type $r10, r14;
        java.lang.reflect.Type[] $r40;
        javax.xml.namespace.QName $r21;
        java.lang.Object[] $r3, $r6, $r18;
        java.lang.'annotation'.Annotation[] $r38;
        org.apache.cxf.common.i18n.Message $r41;
        int i0, $i1, $i3;
        java.lang.String $r22, $r27, $r32;
        org.apache.cxf.service.model.MessagePartInfo r35, r36;
        java.lang.'annotation'.Annotation[][] $r37;
        org.apache.cxf.service.model.MessageInfo $r5, $r8, $r23, $r28;
        java.lang.Class[] $r39;
        java.lang.Class $r9, $r11, $r12, r13, $r26, $r31;
        java.lang.Object $r25, $r30;

        r1 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r34 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r2 := @parameter1: java.lang.reflect.Method;

        r33 := @parameter2: java.util.List;

        r0 = r34;

        $z0 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapped(java.lang.reflect.Method)>(r2);

        if $z0 == 0 goto label05;

        $r15 = virtualinvoke r34.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo getUnwrappedOperation()>();

        if $r15 != null goto label01;

        staticinvoke <org.apache.cxf.wsdl11.WSDLServiceBuilder: void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean)>(r34, 1);

     label01:
        $r16 = virtualinvoke r34.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo getUnwrappedOperation()>();

        if $r16 == null goto label04;

        $z7 = virtualinvoke r34.<org.apache.cxf.service.model.OperationInfo: boolean hasInput()>();

        if $z7 == 0 goto label02;

        $r28 = virtualinvoke r34.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r29 = virtualinvoke $r28.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r30 = interfaceinvoke $r29.<java.util.List: java.lang.Object get(int)>(0);

        r35 = (org.apache.cxf.service.model.MessagePartInfo) $r30;

        $r31 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getRequestWrapper(java.lang.reflect.Method)>(r2);

        virtualinvoke r35.<org.apache.cxf.service.model.MessagePartInfo: void setTypeClass(java.lang.Class)>($r31);

        $r32 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)>(r2);

        virtualinvoke r35.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("REQUEST.WRAPPER.CLASSNAME", $r32);

        virtualinvoke r35.<org.apache.cxf.service.model.MessagePartInfo: void setIndex(int)>(0);

     label02:
        $z8 = virtualinvoke r34.<org.apache.cxf.service.model.OperationInfo: boolean hasOutput()>();

        if $z8 == 0 goto label03;

        $r23 = virtualinvoke r34.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r24 = virtualinvoke $r23.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r25 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(0);

        r36 = (org.apache.cxf.service.model.MessagePartInfo) $r25;

        $r26 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getResponseWrapper(java.lang.reflect.Method)>(r2);

        virtualinvoke r36.<org.apache.cxf.service.model.MessagePartInfo: void setTypeClass(java.lang.Class)>($r26);

        $r27 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)>(r2);

        virtualinvoke r36.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("RESPONSE.WRAPPER.CLASSNAME", $r27);

        virtualinvoke r36.<org.apache.cxf.service.model.MessagePartInfo: void setIndex(int)>(0);

     label03:
        specialinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r34, r2);

        r34 = virtualinvoke r34.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo getUnwrappedOperation()>();

        goto label06;

     label04:
        $r19 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r41 = new org.apache.cxf.common.i18n.Message;

        $r20 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r18 = newarray (java.lang.Object)[2];

        $r21 = virtualinvoke r34.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        $r18[0] = $r21;

        $r18[1] = r2;

        specialinvoke $r41.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("COULD_NOT_UNWRAP", $r20, $r18);

        $r22 = virtualinvoke $r41.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r19.<java.util.logging.Logger: void warning(java.lang.String)>($r22);

        specialinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r34, r2);

        goto label06;

     label05:
        $z1 = virtualinvoke r34.<org.apache.cxf.service.model.OperationInfo: boolean isUnwrappedCapable()>();

        if $z1 == 0 goto label06;

        virtualinvoke r34.<org.apache.cxf.service.model.OperationInfo: void setUnwrappedOperation(org.apache.cxf.service.model.OperationInfo)>(null);

        specialinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r34, r2);

     label06:
        $r37 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        virtualinvoke r34.<org.apache.cxf.service.model.OperationInfo: void setProperty(java.lang.String,java.lang.Object)>("method.parameters.annotations", $r37);

        $r38 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getAnnotations()>();

        virtualinvoke r34.<org.apache.cxf.service.model.OperationInfo: void setProperty(java.lang.String,java.lang.Object)>("method.return.annotations", $r38);

        $r39 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r40 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();

        i0 = 0;

     label07:
        $i1 = lengthof $r39;

        if i0 >= $i1 goto label10;

        $r12 = class "Lorg/apache/cxf/message/Exchange;";

        $r11 = $r39[i0];

        $z5 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>($r11);

        if $z5 == 0 goto label08;

        goto label09;

     label08:
        r13 = $r39[i0];

        r14 = $r40[i0];

        $z6 = specialinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)>(r34, r2, i0, r13, r14);

        if $z6 != 0 goto label09;

        return 0;

     label09:
        i0 = i0 + 1;

        goto label07;

     label10:
        $r4 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event OPERATIONINFO_IN_MESSAGE_SET>;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = r0;

        $r3[1] = r2;

        $r5 = virtualinvoke r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r3[2] = $r5;

        virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r4, $r3);

        $z2 = virtualinvoke r34.<org.apache.cxf.service.model.OperationInfo: boolean hasOutput()>();

        if $z2 == 0 goto label11;

        $r9 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r10 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();

        $i3 = (int) -1;

        $z4 = specialinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)>(r34, r2, $i3, $r9, $r10);

        if $z4 != 0 goto label11;

        return 0;

     label11:
        $z3 = virtualinvoke r0.<org.apache.cxf.service.model.OperationInfo: boolean hasOutput()>();

        if $z3 == 0 goto label12;

        $r7 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event OPERATIONINFO_OUT_MESSAGE_SET>;

        $r6 = newarray (java.lang.Object)[3];

        $r6[0] = r0;

        $r6[1] = r2;

        $r8 = virtualinvoke r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r6[2] = $r8;

        virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r7, $r6);

     label12:
        specialinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r34, r2);

        return 1;
    }

    private boolean initializeParameter(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method, int, java.lang.Class, java.lang.reflect.Type)
    {
        org.apache.ws.commons.schema.XmlSchemaAnnotated $r41;
        javax.xml.namespace.QName $r3, $r9, $r20, $r23, $r28, $r36, $r38, $r39, $r40, $r43, r56;
        org.apache.cxf.service.model.MessagePartInfo $r5, $r11, $r15, $r22, $r25, $r30, $r34, $r37, $r45, r55, r57;
        org.apache.cxf.service.model.UnwrappedOperationInfo $r31;
        java.lang.'annotation'.Annotation[][] $r52, r54;
        java.lang.reflect.Method r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.cxf.service.model.OperationInfo r2, $r13, $r16, $r32;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.lang.reflect.Type r8;
        java.lang.'annotation'.Annotation[] $r49, r53;
        int i0, $i1, $i2, $i3, $i5, $i7;
        java.lang.Boolean $r6, $r12, $r26, $r42;
        org.apache.cxf.service.model.MessageInfo $r4, $r10, $r14, $r17, $r18, $r19, $r21, $r24, $r27, $r29, $r33, $r35, $r44, $r46;
        java.lang.Class r7;
        java.lang.Object $r47, $r48, $r50, $r51;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r2 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r1 := @parameter1: java.lang.reflect.Method;

        i0 := @parameter2: int;

        r7 := @parameter3: java.lang.Class;

        r8 := @parameter4: java.lang.reflect.Type;

        $z0 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isInParam(java.lang.reflect.Method,int)>(r1, i0);

        $z1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isOutParam(java.lang.reflect.Method,int)>(r1, i0);

        $z2 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isHeader(java.lang.reflect.Method,int)>(r1, i0);

        r53 = null;

        $i5 = (int) -1;

        if i0 == $i5 goto label01;

        $r50 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: java.lang.Object getProperty(java.lang.String)>("method.parameters.annotations");

        if $r50 == null goto label01;

        $r51 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: java.lang.Object getProperty(java.lang.String)>("method.parameters.annotations");

        $r52 = (java.lang.'annotation'.Annotation[][]) $r51;

        r54 = (java.lang.'annotation'.Annotation[][]) $r52;

        r53 = r54[i0];

        goto label02;

     label01:
        $i7 = (int) -1;

        if i0 != $i7 goto label02;

        $r47 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: java.lang.Object getProperty(java.lang.String)>("method.return.annotations");

        if $r47 == null goto label02;

        $r48 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: java.lang.Object getProperty(java.lang.String)>("method.return.annotations");

        $r49 = (java.lang.'annotation'.Annotation[]) $r48;

        r53 = (java.lang.'annotation'.Annotation[]) $r49;

     label02:
        r55 = null;

        if $z0 == 0 goto label08;

        if $z1 != 0 goto label08;

        $r28 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r2, r1, i0);

        $r29 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r30 = virtualinvoke $r29.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)>($r28);

        r55 = $r30;

        if $r30 != null goto label03;

        $z9 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isFromWsdl()>();

        if $z9 == 0 goto label03;

        $r46 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        r55 = virtualinvoke $r46.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)>(i0);

     label03:
        if r55 != null goto label06;

        if $z2 == 0 goto label06;

        $z7 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: boolean isUnwrapped()>();

        if $z7 == 0 goto label06;

        $r31 = (org.apache.cxf.service.model.UnwrappedOperationInfo) r2;

        $r32 = virtualinvoke $r31.<org.apache.cxf.service.model.UnwrappedOperationInfo: org.apache.cxf.service.model.OperationInfo getWrappedOperation()>();

        $r33 = virtualinvoke $r32.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r34 = virtualinvoke $r33.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)>($r28);

        r55 = $r34;

        if $r34 != null goto label04;

        $r43 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r2, r1, i0);

        $r44 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r45 = virtualinvoke $r44.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)>($r43);

        r55 = $r45;

        if $r45 == null goto label04;

     label04:
        if r55 == null goto label06;

        $r35 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r36 = virtualinvoke r55.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getName()>();

        $r37 = virtualinvoke $r35.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo addMessagePart(javax.xml.namespace.QName)>($r36);

        $r38 = virtualinvoke r55.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getTypeQName()>();

        virtualinvoke $r37.<org.apache.cxf.service.model.MessagePartInfo: void setTypeQName(javax.xml.namespace.QName)>($r38);

        $z8 = virtualinvoke r55.<org.apache.cxf.service.model.MessagePartInfo: boolean isElement()>();

        virtualinvoke $r37.<org.apache.cxf.service.model.MessagePartInfo: void setElement(boolean)>($z8);

        $r39 = virtualinvoke r55.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getElementQName()>();

        virtualinvoke $r37.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>($r39);

        $r40 = virtualinvoke r55.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

        virtualinvoke $r37.<org.apache.cxf.service.model.MessagePartInfo: void setConcreteName(javax.xml.namespace.QName)>($r40);

        $r41 = virtualinvoke r55.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        virtualinvoke $r37.<org.apache.cxf.service.model.MessagePartInfo: void setXmlSchema(org.apache.ws.commons.schema.XmlSchemaAnnotated)>($r41);

        if r53 == null goto label05;

        virtualinvoke r55.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("parameter.annotations", r53);

     label05:
        r55 = $r37;

        $r42 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r37.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("messagepart.isheader", $r42);

     label06:
        if r55 != null goto label07;

        return 0;

     label07:
        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)>(r55, r7, r8);

        virtualinvoke r55.<org.apache.cxf.service.model.MessagePartInfo: void setIndex(int)>(i0);

        goto label18;

     label08:
        if $z0 != 0 goto label11;

        if $z1 == 0 goto label11;

        $r23 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r2, r1, i0);

        $r24 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r25 = virtualinvoke $r24.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)>($r23);

        r55 = $r25;

        if $r25 != null goto label09;

        $z6 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isFromWsdl()>();

        if $z6 == 0 goto label09;

        $r27 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $i3 = i0 + 1;

        r55 = virtualinvoke $r27.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)>($i3);

     label09:
        if r55 != null goto label10;

        return 0;

     label10:
        $r26 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r55.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("messagepart.mode.out", $r26);

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)>(r55, r7, r8);

        $i2 = i0 + 1;

        virtualinvoke r55.<org.apache.cxf.service.model.MessagePartInfo: void setIndex(int)>($i2);

        goto label18;

     label11:
        if $z0 == 0 goto label18;

        if $z1 == 0 goto label18;

        $r3 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r2, r1, i0);

        r56 = $r3;

        $r4 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r5 = virtualinvoke $r4.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)>($r3);

        r57 = $r5;

        if $r5 != null goto label12;

        if $z2 == 0 goto label12;

        $z5 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: boolean isUnwrapped()>();

        if $z5 == 0 goto label12;

        $r20 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r2, r1, i0);

        $r21 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r22 = virtualinvoke $r21.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)>($r20);

        r57 = $r22;

        if $r22 == null goto label12;

        r56 = $r20;

     label12:
        if r57 != null goto label13;

        $z4 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isFromWsdl()>();

        if $z4 == 0 goto label13;

        $r19 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        r57 = virtualinvoke $r19.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)>(i0);

     label13:
        if r57 != null goto label14;

        return 0;

     label14:
        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r57.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("messagepart.mode.inout", $r6);

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)>(r57, r7, r8);

        virtualinvoke r57.<org.apache.cxf.service.model.MessagePartInfo: void setIndex(int)>(i0);

        $r9 = virtualinvoke r57.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

        $r10 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r11 = virtualinvoke $r10.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)>(r56);

        r55 = $r11;

        if $r11 != null goto label15;

        $r18 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        r55 = virtualinvoke $r18.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)>($r9);

     label15:
        if r55 != null goto label16;

        if $z2 == 0 goto label16;

        $z3 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: boolean isUnwrapped()>();

        if $z3 == 0 goto label16;

        $r13 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo getUnwrappedOperation()>();

        $r14 = virtualinvoke $r13.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r15 = virtualinvoke $r14.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)>(r56);

        r55 = $r15;

        if $r15 != null goto label16;

        $r16 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo getUnwrappedOperation()>();

        $r17 = virtualinvoke $r16.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        r55 = virtualinvoke $r17.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)>($r9);

     label16:
        if r55 != null goto label17;

        return 0;

     label17:
        $r12 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r55.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("messagepart.mode.inout", $r12);

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)>(r55, r7, r8);

        $i1 = i0 + 1;

        virtualinvoke r55.<org.apache.cxf.service.model.MessagePartInfo: void setIndex(int)>($i1);

     label18:
        if r53 == null goto label19;

        if r55 == null goto label19;

        virtualinvoke r55.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("parameter.annotations", r53);

     label19:
        return 1;
    }

    private void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method)
    {
        java.lang.reflect.Method r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.cxf.service.model.InterfaceInfo $r5;
        java.util.Collection $r36;
        org.apache.cxf.service.model.OperationInfo r4;
        java.util.Set $r7;
        java.util.logging.Logger $r30, $r32;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r2;
        java.util.List r14, $r39;
        org.apache.cxf.service.factory.FactoryBeanListener$Event $r26;
        javax.xml.namespace.QName $r6, $r18, $r19, $r27, $r31;
        java.lang.Object[] $r25, $r29;
        java.util.HashMap $r35, r40;
        org.apache.cxf.common.i18n.Message $r28;
        java.util.logging.Level $r33;
        int $i0, $i1, i2, $i3;
        org.apache.cxf.service.model.FaultInfo r12, r41;
        java.lang.String $r20, $r21, $r22, $r24, $r34, r43;
        org.apache.cxf.service.model.MessagePartInfo r17;
        java.util.Map$Entry r10;
        java.util.Iterator $r8, $r15, $r37;
        java.lang.Class[] $r1;
        java.lang.Class $r3, $r23, r42;
        java.lang.Object $r9, $r11, $r13, $r16, $r38;

        r2 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r4 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r0 := @parameter1: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>();

        r40 = null;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label02;

        $r35 = new java.util.HashMap;

        specialinvoke $r35.<java.util.HashMap: void <init>()>();

        r40 = $r35;

        $r36 = virtualinvoke r4.<org.apache.cxf.service.model.OperationInfo: java.util.Collection getFaults()>();

        $r37 = interfaceinvoke $r36.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z4 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label02;

        $r38 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        r41 = (org.apache.cxf.service.model.FaultInfo) $r38;

        $r39 = virtualinvoke r41.<org.apache.cxf.service.model.FaultInfo: java.util.List getMessageParts()>();

        interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r41, $r39);

        goto label01;

     label02:
        i2 = 0;

     label03:
        $i3 = lengthof $r1;

        if i2 >= $i3 goto label13;

        r42 = $r1[i2];

        $r3 = virtualinvoke r2.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getBeanClass(java.lang.Class)>(r42);

        if $r3 != null goto label04;

        goto label12;

     label04:
        $r5 = virtualinvoke r4.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.InterfaceInfo getInterface()>();

        $r6 = virtualinvoke r2.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)>($r5, r4, r42, $r3);

        $r7 = interfaceinvoke r40.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        $r11 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        r12 = (org.apache.cxf.service.model.FaultInfo) $r11;

        $r13 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        r14 = (java.util.List) $r13;

        $i1 = interfaceinvoke r14.<java.util.List: int size()>();

        if $i1 == 1 goto label06;

        $r28 = new org.apache.cxf.common.i18n.Message;

        $r30 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r29 = newarray (java.lang.Object)[1];

        $r31 = virtualinvoke r12.<org.apache.cxf.service.model.FaultInfo: javax.xml.namespace.QName getFaultName()>();

        $r29[0] = $r31;

        specialinvoke $r28.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("NO_FAULT_PART", $r30, $r29);

        $r32 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r33 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r34 = virtualinvoke $r28.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r32.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r33, $r34);

     label06:
        $r15 = interfaceinvoke r14.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z5 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label11;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.apache.cxf.service.model.MessagePartInfo) $r16;

        $z1 = virtualinvoke r17.<org.apache.cxf.service.model.MessagePartInfo: boolean isElement()>();

        if $z1 == 0 goto label08;

        $r27 = virtualinvoke r17.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getElementQName()>();

        r43 = virtualinvoke $r27.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        goto label09;

     label08:
        $r18 = virtualinvoke r17.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getTypeQName()>();

        r43 = virtualinvoke $r18.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

     label09:
        $r19 = virtualinvoke r17.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

        $r20 = virtualinvoke $r19.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r21 = virtualinvoke $r6.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z2 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z2 == 0 goto label10;

        $r22 = virtualinvoke $r6.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z3 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r43);

        if $z3 == 0 goto label10;

        $r23 = class "Ljava/lang/Class;";

        $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r12.<org.apache.cxf.service.model.FaultInfo: void setProperty(java.lang.String,java.lang.Object)>($r24, r42);

        virtualinvoke r17.<org.apache.cxf.service.model.MessagePartInfo: void setTypeClass(java.lang.Class)>($r3);

        $r26 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event OPERATIONINFO_FAULT>;

        $r25 = newarray (java.lang.Object)[3];

        $r25[0] = r4;

        $r25[1] = r42;

        $r25[2] = r12;

        virtualinvoke r2.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r26, $r25);

     label10:
        goto label07;

     label11:
        goto label05;

     label12:
        i2 = i2 + 1;

        goto label03;

     label13:
        return;
    }

    protected org.apache.cxf.service.invoker.Invoker createInvoker()
    {
        java.lang.Class $r1, $r4;
        org.apache.cxf.service.invoker.FactoryInvoker $r2;
        org.apache.cxf.service.invoker.SingletonFactory $r3;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = new org.apache.cxf.service.invoker.FactoryInvoker;

        $r3 = new org.apache.cxf.service.invoker.SingletonFactory;

        $r4 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        specialinvoke $r3.<org.apache.cxf.service.invoker.SingletonFactory: void <init>(java.lang.Class)>($r4);

        specialinvoke $r2.<org.apache.cxf.service.invoker.FactoryInvoker: void <init>(org.apache.cxf.service.invoker.Factory)>($r3);

        return $r2;
    }

    protected org.apache.cxf.service.model.ServiceInfo createServiceInfo(org.apache.cxf.service.model.InterfaceInfo)
    {
        org.apache.cxf.service.model.ServiceInfo $r0;
        org.apache.cxf.service.model.InterfaceInfo r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r2;

        r2 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: org.apache.cxf.service.model.InterfaceInfo;

        $r0 = new org.apache.cxf.service.model.ServiceInfo;

        specialinvoke $r0.<org.apache.cxf.service.model.ServiceInfo: void <init>()>();

        virtualinvoke $r0.<org.apache.cxf.service.model.ServiceInfo: void setInterface(org.apache.cxf.service.model.InterfaceInfo)>(r1);

        return $r0;
    }

    protected org.apache.cxf.service.model.InterfaceInfo createInterface(org.apache.cxf.service.model.ServiceInfo)
    {
        java.lang.Object[] $r7;
        org.apache.cxf.service.model.InterfaceInfo $r2;
        org.apache.cxf.service.model.ServiceInfo r3;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.lang.reflect.Method[] $r5;
        org.apache.cxf.helpers.MethodComparator $r6;
        org.apache.cxf.service.factory.FactoryBeanListener$Event $r8;
        int i0, i1;
        java.lang.Class $r4, $r9;
        javax.xml.namespace.QName $r1;
        java.lang.reflect.Method r10;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r3 := @parameter0: org.apache.cxf.service.model.ServiceInfo;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getInterfaceName()>();

        $r2 = new org.apache.cxf.service.model.InterfaceInfo;

        specialinvoke $r2.<org.apache.cxf.service.model.InterfaceInfo: void <init>(org.apache.cxf.service.model.ServiceInfo,javax.xml.namespace.QName)>(r3, $r1);

        $r4 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $r6 = new org.apache.cxf.helpers.MethodComparator;

        specialinvoke $r6.<org.apache.cxf.helpers.MethodComparator: void <init>()>();

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r5, $r6);

        i0 = lengthof $r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r10 = $r5[i1];

        $z0 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isValidMethod(java.lang.reflect.Method)>(r10);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)>(r3, $r2, r10);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r8 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event INTERFACE_CREATED>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = $r2;

        $r9 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        $r7[1] = $r9;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r8, $r7);

        return $r2;
    }

    protected org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo, org.apache.cxf.service.model.InterfaceInfo, java.lang.reflect.Method)
    {
        java.lang.reflect.Method r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.cxf.service.model.InterfaceInfo r0;
        org.apache.cxf.service.model.OperationInfo $r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r1;
        java.util.List $r18, $r29;
        org.apache.cxf.service.factory.FactoryBeanListener$Event $r35;
        javax.xml.namespace.QName $r3, $r13, $r22, $r26, $r32;
        java.lang.Object[] $r36;
        org.apache.cxf.service.model.ServiceInfo r33;
        java.lang.'annotation'.Annotation[] $r8;
        java.lang.Boolean $r10;
        java.lang.String $r6, $r7, $r16, $r27;
        org.apache.cxf.service.model.MessagePartInfo r21, r34;
        java.lang.'annotation'.Annotation[][] $r9;
        org.apache.cxf.service.model.UnwrappedOperationInfo $r11;
        java.util.Iterator $r19, $r30;
        org.apache.cxf.service.model.MessageInfo $r12, $r14, $r17, $r23, $r25, $r28;
        org.apache.cxf.service.model.MessageInfo$Type $r15, $r24;
        java.lang.Class $r5;
        java.lang.Object $r20, $r31;

        r1 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r33 := @parameter0: org.apache.cxf.service.model.ServiceInfo;

        r0 := @parameter1: org.apache.cxf.service.model.InterfaceInfo;

        r2 := @parameter2: java.lang.reflect.Method;

        $r3 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)>(r0, r2);

        $r4 = virtualinvoke r0.<org.apache.cxf.service.model.InterfaceInfo: org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)>($r3);

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r4.<org.apache.cxf.service.model.OperationInfo: void setProperty(java.lang.String,java.lang.Object)>($r6, r2);

        $r7 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>($r4, r2);

        virtualinvoke $r4.<org.apache.cxf.service.model.OperationInfo: void setProperty(java.lang.String,java.lang.Object)>("action", $r7);

        $r8 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getAnnotations()>();

        $r9 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        virtualinvoke $r4.<org.apache.cxf.service.model.OperationInfo: void setProperty(java.lang.String,java.lang.Object)>("method.return.annotations", $r8);

        virtualinvoke $r4.<org.apache.cxf.service.model.OperationInfo: void setProperty(java.lang.String,java.lang.Object)>("method.parameters.annotations", $r9);

        $z0 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isRPC(java.lang.reflect.Method)>(r2);

        if $z0 != 0 goto label5;

        $z1 = virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapped(java.lang.reflect.Method)>(r2);

        if $z1 == 0 goto label5;

        $r11 = new org.apache.cxf.service.model.UnwrappedOperationInfo;

        specialinvoke $r11.<org.apache.cxf.service.model.UnwrappedOperationInfo: void <init>(org.apache.cxf.service.model.OperationInfo)>($r4);

        virtualinvoke $r11.<org.apache.cxf.service.model.UnwrappedOperationInfo: void setProperty(java.lang.String,java.lang.Object)>("method.return.annotations", $r8);

        virtualinvoke $r11.<org.apache.cxf.service.model.UnwrappedOperationInfo: void setProperty(java.lang.String,java.lang.Object)>("method.parameters.annotations", $r9);

        virtualinvoke $r4.<org.apache.cxf.service.model.OperationInfo: void setUnwrappedOperation(org.apache.cxf.service.model.OperationInfo)>($r11);

        virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r0, $r11, r2);

        $z2 = virtualinvoke $r11.<org.apache.cxf.service.model.UnwrappedOperationInfo: boolean hasInput()>();

        if $z2 == 0 goto label2;

        $r23 = new org.apache.cxf.service.model.MessageInfo;

        $r24 = <org.apache.cxf.service.model.MessageInfo$Type: org.apache.cxf.service.model.MessageInfo$Type INPUT>;

        $r25 = virtualinvoke $r11.<org.apache.cxf.service.model.UnwrappedOperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r26 = virtualinvoke $r25.<org.apache.cxf.service.model.MessageInfo: javax.xml.namespace.QName getName()>();

        specialinvoke $r23.<org.apache.cxf.service.model.MessageInfo: void <init>(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.MessageInfo$Type,javax.xml.namespace.QName)>($r4, $r24, $r26);

        $r27 = virtualinvoke $r11.<org.apache.cxf.service.model.UnwrappedOperationInfo: java.lang.String getInputName()>();

        virtualinvoke $r4.<org.apache.cxf.service.model.OperationInfo: void setInput(java.lang.String,org.apache.cxf.service.model.MessageInfo)>($r27, $r23);

        virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)>($r11, r2, $r23);

        $r28 = virtualinvoke $r11.<org.apache.cxf.service.model.UnwrappedOperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r29 = virtualinvoke $r28.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r30 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z5 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label2;

        $r31 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r34 = (org.apache.cxf.service.model.MessagePartInfo) $r31;

        $r32 = virtualinvoke r34.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getName()>();

        virtualinvoke r34.<org.apache.cxf.service.model.MessagePartInfo: void setConcreteName(javax.xml.namespace.QName)>($r32);

        goto label1;

     label2:
        $z3 = virtualinvoke $r11.<org.apache.cxf.service.model.UnwrappedOperationInfo: boolean hasOutput()>();

        if $z3 == 0 goto label4;

        $r12 = virtualinvoke $r11.<org.apache.cxf.service.model.UnwrappedOperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r13 = virtualinvoke $r12.<org.apache.cxf.service.model.MessageInfo: javax.xml.namespace.QName getName()>();

        $r14 = new org.apache.cxf.service.model.MessageInfo;

        $r15 = <org.apache.cxf.service.model.MessageInfo$Type: org.apache.cxf.service.model.MessageInfo$Type OUTPUT>;

        specialinvoke $r14.<org.apache.cxf.service.model.MessageInfo: void <init>(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.MessageInfo$Type,javax.xml.namespace.QName)>($r4, $r15, $r13);

        $r16 = virtualinvoke $r11.<org.apache.cxf.service.model.UnwrappedOperationInfo: java.lang.String getOutputName()>();

        virtualinvoke $r4.<org.apache.cxf.service.model.OperationInfo: void setOutput(java.lang.String,org.apache.cxf.service.model.MessageInfo)>($r16, $r14);

        virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)>($r11, r2, $r14);

        $r17 = virtualinvoke $r11.<org.apache.cxf.service.model.UnwrappedOperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r18 = virtualinvoke $r17.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (org.apache.cxf.service.model.MessagePartInfo) $r20;

        $r22 = virtualinvoke r21.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getName()>();

        virtualinvoke r21.<org.apache.cxf.service.model.MessagePartInfo: void setConcreteName(javax.xml.namespace.QName)>($r22);

        goto label3;

     label4:
        goto label7;

     label5:
        if $z0 == 0 goto label6;

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r4.<org.apache.cxf.service.model.OperationInfo: void setProperty(java.lang.String,java.lang.Object)>("operation.force.types", $r10);

     label6:
        virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r0, $r4, r2);

     label7:
        virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void bindOperation(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>($r4, r2);

        $r35 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event INTERFACE_OPERATION_BOUND>;

        $r36 = newarray (java.lang.Object)[2];

        $r36[0] = $r4;

        $r36[1] = r2;

        virtualinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r35, $r36);

        return $r4;
    }

    protected void bindOperation(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method)
    {
        org.apache.cxf.service.model.OperationInfo r2;
        org.apache.cxf.service.invoker.MethodDispatcher $r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.lang.reflect.Method r4;
        java.lang.reflect.Method[] $r3;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r2 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r4 := @parameter1: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.invoker.MethodDispatcher getMethodDispatcher()>();

        $r3 = newarray (java.lang.reflect.Method)[1];

        $r3[0] = r4;

        interfaceinvoke $r1.<org.apache.cxf.service.invoker.MethodDispatcher: void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])>(r2, $r3);

        return;
    }

    protected void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)
    {
        org.apache.cxf.service.model.InterfaceInfo $r1;
        javax.xml.namespace.QName $r21, $r42, r60, r67;
        org.apache.cxf.service.model.ServiceInfo r0;
        org.apache.cxf.service.model.MessagePartInfo $r10, $r20, $r32, $r41, $r53, r59, r66;
        org.apache.cxf.service.model.SchemaInfo r55, r62;
        org.apache.ws.commons.schema.XmlSchemaElement $r28, $r49, r54, r61;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.Collection $r2;
        org.apache.cxf.service.model.OperationInfo r5, $r6, $r25, $r46;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r16;
        java.util.List $r8, $r18, $r22, $r30, $r39, $r43, $r51, $r57, $r64;
        java.lang.Boolean $r13, $r35;
        java.util.Iterator $r3, $r23, $r44, $r58, $r65;
        org.apache.cxf.service.model.MessageInfo $r7, $r17, $r24, $r26, $r29, $r38, $r45, $r47, $r50, $r56, $r63;
        java.lang.Object $r4, $r9, $r12, $r14, $r15, $r19, $r27, $r31, $r34, $r36, $r37, $r40, $r48, $r52;
        java.lang.Class $r11, $r33;

        r16 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r0 := @parameter0: org.apache.cxf.service.model.ServiceInfo;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.model.ServiceInfo: org.apache.cxf.service.model.InterfaceInfo getInterface()>();

        $r2 = virtualinvoke $r1.<org.apache.cxf.service.model.InterfaceInfo: java.util.Collection getOperations()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.cxf.service.model.OperationInfo) $r4;

        $r6 = virtualinvoke r5.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo getUnwrappedOperation()>();

        if $r6 == null goto label15;

        $z1 = virtualinvoke r5.<org.apache.cxf.service.model.OperationInfo: boolean hasInput()>();

        if $z1 == 0 goto label08;

        $r29 = virtualinvoke r5.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r30 = virtualinvoke $r29.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r31 = interfaceinvoke $r30.<java.util.List: java.lang.Object get(int)>(0);

        $r32 = (org.apache.cxf.service.model.MessagePartInfo) $r31;

        $r33 = virtualinvoke $r32.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Class getTypeClass()>();

        if $r33 != null goto label05;

        $r38 = virtualinvoke r5.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r39 = virtualinvoke $r38.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r40 = interfaceinvoke $r39.<java.util.List: java.lang.Object get(int)>(0);

        $r41 = (org.apache.cxf.service.model.MessagePartInfo) $r40;

        $r42 = virtualinvoke $r41.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getElementQName()>();

        r54 = null;

        $r43 = virtualinvoke r0.<org.apache.cxf.service.model.ServiceInfo: java.util.List getSchemas()>();

        $r44 = interfaceinvoke $r43.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z6 = interfaceinvoke $r44.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label04;

        $r48 = interfaceinvoke $r44.<java.util.Iterator: java.lang.Object next()>();

        r55 = (org.apache.cxf.service.model.SchemaInfo) $r48;

        $r49 = virtualinvoke r55.<org.apache.cxf.service.model.SchemaInfo: org.apache.ws.commons.schema.XmlSchemaElement getElementByQName(javax.xml.namespace.QName)>($r42);

        r54 = $r49;

        if $r49 == null goto label03;

        $r50 = virtualinvoke r5.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r51 = virtualinvoke $r50.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r52 = interfaceinvoke $r51.<java.util.List: java.lang.Object get(int)>(0);

        $r53 = (org.apache.cxf.service.model.MessagePartInfo) $r52;

        virtualinvoke $r53.<org.apache.cxf.service.model.MessagePartInfo: void setXmlSchema(org.apache.ws.commons.schema.XmlSchemaAnnotated)>($r49);

        goto label04;

     label03:
        goto label02;

     label04:
        if r54 != null goto label05;

        $r45 = virtualinvoke r5.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r46 = virtualinvoke r5.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo getUnwrappedOperation()>();

        $r47 = virtualinvoke $r46.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        virtualinvoke r16.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void createWrappedSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,javax.xml.namespace.QName)>(r0, $r45, $r47, $r42);

     label05:
        $r56 = virtualinvoke r5.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r57 = virtualinvoke $r56.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r58 = interfaceinvoke $r57.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z7 = interfaceinvoke $r58.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label08;

        $r34 = interfaceinvoke $r58.<java.util.Iterator: java.lang.Object next()>();

        r59 = (org.apache.cxf.service.model.MessagePartInfo) $r34;

        $r35 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r36 = virtualinvoke r59.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.isheader");

        $z5 = virtualinvoke $r35.<java.lang.Boolean: boolean equals(java.lang.Object)>($r36);

        if $z5 == 0 goto label07;

        $r37 = virtualinvoke r59.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.elementName");

        r60 = (javax.xml.namespace.QName) $r37;

        virtualinvoke r59.<org.apache.cxf.service.model.MessagePartInfo: void setElement(boolean)>(1);

        virtualinvoke r59.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>(r60);

        virtualinvoke r16.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)>(r0, r59);

     label07:
        goto label06;

     label08:
        $z2 = virtualinvoke r5.<org.apache.cxf.service.model.OperationInfo: boolean hasOutput()>();

        if $z2 == 0 goto label15;

        $r7 = virtualinvoke r5.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r8 = virtualinvoke $r7.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (org.apache.cxf.service.model.MessagePartInfo) $r9;

        $r11 = virtualinvoke $r10.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Class getTypeClass()>();

        if $r11 != null goto label12;

        $r17 = virtualinvoke r5.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r18 = virtualinvoke $r17.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(0);

        $r20 = (org.apache.cxf.service.model.MessagePartInfo) $r19;

        $r21 = virtualinvoke $r20.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getElementQName()>();

        r61 = null;

        $r22 = virtualinvoke r0.<org.apache.cxf.service.model.ServiceInfo: java.util.List getSchemas()>();

        $r23 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $r27 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r62 = (org.apache.cxf.service.model.SchemaInfo) $r27;

        $r28 = virtualinvoke r62.<org.apache.cxf.service.model.SchemaInfo: org.apache.ws.commons.schema.XmlSchemaElement getElementByQName(javax.xml.namespace.QName)>($r21);

        r61 = $r28;

        if $r28 == null goto label10;

        goto label11;

     label10:
        goto label09;

     label11:
        if r61 != null goto label12;

        $r24 = virtualinvoke r5.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r25 = virtualinvoke r5.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo getUnwrappedOperation()>();

        $r26 = virtualinvoke $r25.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        virtualinvoke r16.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void createWrappedSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,javax.xml.namespace.QName)>(r0, $r24, $r26, $r21);

     label12:
        $r63 = virtualinvoke r5.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r64 = virtualinvoke $r63.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r65 = interfaceinvoke $r64.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z8 = interfaceinvoke $r65.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label15;

        $r12 = interfaceinvoke $r65.<java.util.Iterator: java.lang.Object next()>();

        r66 = (org.apache.cxf.service.model.MessagePartInfo) $r12;

        $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r14 = virtualinvoke r66.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.isheader");

        $z3 = virtualinvoke $r13.<java.lang.Boolean: boolean equals(java.lang.Object)>($r14);

        if $z3 == 0 goto label14;

        $r15 = virtualinvoke r66.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.elementName");

        r67 = (javax.xml.namespace.QName) $r15;

        virtualinvoke r66.<org.apache.cxf.service.model.MessagePartInfo: void setElement(boolean)>(1);

        virtualinvoke r66.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>(r67);

        virtualinvoke r16.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)>(r0, r66);

     label14:
        goto label13;

     label15:
        goto label01;

     label16:
        return;
    }

    protected void checkForElement(org.apache.cxf.service.model.ServiceInfo, org.apache.cxf.service.model.MessagePartInfo)
    {
        java.lang.Object[] $r19;
        org.apache.cxf.service.model.ServiceInfo r1;
        org.apache.cxf.service.model.AbstractMessageContainer $r22;
        org.apache.ws.commons.schema.XmlSchemaElement $r9, $r11;
        org.apache.cxf.common.i18n.Message $r18;
        org.apache.ws.commons.schema.XmlSchemaType r15;
        org.apache.ws.commons.schema.XmlSchema $r6, $r10;
        java.lang.String $r4, $r8, $r13;
        org.apache.ws.commons.schema.XmlSchemaAnnotated $r14;
        org.apache.cxf.service.model.MessagePartInfo r2;
        boolean $z0;
        org.apache.cxf.service.model.SchemaInfo $r5;
        java.util.logging.Logger $r20;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        javax.xml.namespace.QName $r3, $r7, $r12, $r16, $r21, $r23;
        org.apache.cxf.service.factory.ServiceConstructionException $r17;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: org.apache.cxf.service.model.ServiceInfo;

        r2 := @parameter1: org.apache.cxf.service.model.MessagePartInfo;

        $r3 = virtualinvoke r2.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getElementQName()>();

        $r4 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean getQualifyWrapperSchema()>();

        $r5 = specialinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)>(r1, $r4, $z0);

        $r6 = virtualinvoke $r5.<org.apache.cxf.service.model.SchemaInfo: org.apache.ws.commons.schema.XmlSchema getSchema()>();

        $r7 = virtualinvoke r2.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getElementQName()>();

        $r8 = virtualinvoke $r7.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r9 = virtualinvoke $r6.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaElement getElementByName(java.lang.String)>($r8);

        if $r9 == null goto label1;

        virtualinvoke r2.<org.apache.cxf.service.model.MessagePartInfo: void setXmlSchema(org.apache.ws.commons.schema.XmlSchemaAnnotated)>($r9);

        return;

     label1:
        $r10 = virtualinvoke $r5.<org.apache.cxf.service.model.SchemaInfo: org.apache.ws.commons.schema.XmlSchema getSchema()>();

        virtualinvoke $r5.<org.apache.cxf.service.model.SchemaInfo: void setElement(org.w3c.dom.Element)>(null);

        $r11 = new org.apache.ws.commons.schema.XmlSchemaElement;

        specialinvoke $r11.<org.apache.ws.commons.schema.XmlSchemaElement: void <init>(org.apache.ws.commons.schema.XmlSchema,boolean)>($r10, 1);

        $r12 = virtualinvoke r2.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getElementQName()>();

        $r13 = virtualinvoke $r12.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke $r11.<org.apache.ws.commons.schema.XmlSchemaElement: void setName(java.lang.String)>($r13);

        virtualinvoke $r11.<org.apache.ws.commons.schema.XmlSchemaElement: void setNillable(boolean)>(1);

        $r14 = virtualinvoke r2.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        r15 = (org.apache.ws.commons.schema.XmlSchemaType) $r14;

        if r15 != null goto label2;

        $r17 = new org.apache.cxf.service.factory.ServiceConstructionException;

        $r18 = new org.apache.cxf.common.i18n.Message;

        $r20 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r19 = newarray (java.lang.Object)[2];

        $r21 = virtualinvoke r2.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getName()>();

        $r19[0] = $r21;

        $r22 = virtualinvoke r2.<org.apache.cxf.service.model.MessagePartInfo: org.apache.cxf.service.model.AbstractMessageContainer getMessageInfo()>();

        $r23 = virtualinvoke $r22.<org.apache.cxf.service.model.AbstractMessageContainer: javax.xml.namespace.QName getName()>();

        $r19[1] = $r23;

        specialinvoke $r18.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("INTRACTABLE_PART", $r20, $r19);

        specialinvoke $r17.<org.apache.cxf.service.factory.ServiceConstructionException: void <init>(org.apache.cxf.common.i18n.Message)>($r18);

        throw $r17;

     label2:
        $r16 = virtualinvoke r15.<org.apache.ws.commons.schema.XmlSchemaType: javax.xml.namespace.QName getQName()>();

        virtualinvoke $r11.<org.apache.ws.commons.schema.XmlSchemaElement: void setSchemaTypeName(javax.xml.namespace.QName)>($r16);

        virtualinvoke r2.<org.apache.cxf.service.model.MessagePartInfo: void setXmlSchema(org.apache.ws.commons.schema.XmlSchemaAnnotated)>($r11);

        return;
    }

    public boolean getAnonymousWrapperTypes()
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $z0 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean anonymousWrappers>;

        return $z0;
    }

    public boolean isAnonymousWrapperTypes()
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $z0 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean anonymousWrappers>;

        return $z0;
    }

    public void setAnonymousWrapperTypes(boolean)
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean anonymousWrappers> = z0;

        return;
    }

    public final boolean getQualifyWrapperSchema()
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $z0 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean qualifiedSchemas>;

        return $z0;
    }

    public boolean isQualifyWrapperSchema()
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $z0 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean qualifiedSchemas>;

        return $z0;
    }

    public void setQualifyWrapperSchema(boolean)
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean qualifiedSchemas> = z0;

        return;
    }

    protected void createWrappedSchema(org.apache.cxf.service.model.ServiceInfo, org.apache.cxf.service.model.AbstractMessageContainer, org.apache.cxf.service.model.AbstractMessageContainer, javax.xml.namespace.QName)
    {
        org.apache.cxf.service.model.SchemaInfo $r4;
        org.apache.cxf.service.model.ServiceInfo r1;
        org.apache.cxf.service.model.AbstractMessageContainer r5, r6;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        javax.xml.namespace.QName r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: org.apache.cxf.service.model.ServiceInfo;

        r5 := @parameter1: org.apache.cxf.service.model.AbstractMessageContainer;

        r6 := @parameter2: org.apache.cxf.service.model.AbstractMessageContainer;

        r2 := @parameter3: javax.xml.namespace.QName;

        $r3 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean getQualifyWrapperSchema()>();

        $r4 = specialinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)>(r1, $r3, $z0);

        specialinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)>(r1, r5, r6, $r4, r2);

        return;
    }

    protected void createBareMessage(org.apache.cxf.service.model.ServiceInfo, org.apache.cxf.service.model.OperationInfo, boolean)
    {
        org.apache.ws.commons.schema.XmlSchemaAnnotated $r15, $r22, $r31;
        java.lang.StringBuilder $r52, $r53, $r68;
        javax.xml.namespace.QName $r13, $r14, $r17, $r19, $r21, $r30, $r32, $r33, $r35, $r36, r58, $r59, $r60, $r69, $r70;
        java.lang.Object[] $r25;
        org.apache.cxf.service.model.ServiceInfo r11;
        java.lang.String $r20, $r28, $r29, $r37, $r40, $r43, $r44, $r46, $r47, $r48, $r49, $r51, $r54, $r55, $r66;
        org.apache.cxf.service.model.MessagePartInfo r8;
        org.apache.cxf.service.model.SchemaInfo $r41, r57, r63;
        org.apache.ws.commons.schema.XmlSchemaElement $r38, $r39, r67, $r71;
        org.apache.ws.commons.schema.XmlSchemaType $r16, $r34;
        java.lang.reflect.Method r4;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.cxf.service.model.OperationInfo r0;
        java.util.logging.Logger $r26;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r18;
        java.util.List $r2, $r5, $r10, $r45, $r61;
        org.apache.cxf.common.i18n.Message $r72;
        int $i0, $i1, $i2, i3, $i5, $i7;
        org.apache.ws.commons.schema.XmlSchema $r12, r64;
        java.util.Iterator $r6, $r62;
        org.apache.cxf.service.model.MessageInfo r1, $r56;
        java.lang.Object $r3, $r7, $r9, $r42;
        java.lang.Class $r27;
        org.apache.cxf.service.factory.ServiceConstructionException $r73;

        r18 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r11 := @parameter0: org.apache.cxf.service.model.ServiceInfo;

        r0 := @parameter1: org.apache.cxf.service.model.OperationInfo;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label01;

        $r56 = virtualinvoke r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        goto label02;

     label01:
        $r56 = virtualinvoke r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

     label02:
        r1 = $r56;

        $r2 = virtualinvoke $r56.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label03;

        return;

     label03:
        $r3 = virtualinvoke r0.<org.apache.cxf.service.model.OperationInfo: java.lang.Object getProperty(java.lang.String)>("operation.method");

        r4 = (java.lang.reflect.Method) $r3;

        i3 = 0;

        $r5 = virtualinvoke $r56.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z6 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label26;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.cxf.service.model.MessagePartInfo) $r7;

        r57 = null;

        $r9 = virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.elementName");

        r58 = (javax.xml.namespace.QName) $r9;

        $r10 = virtualinvoke r1.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i1 != 1 goto label10;

        if r58 != null goto label10;

        if z0 != 0 goto label05;

        $i5 = (int) -1;

        $r59 = virtualinvoke r18.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r0, r4, $i5);

        goto label06;

     label05:
        $i7 = (int) -1;

        $r59 = virtualinvoke r18.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r0, r4, $i7);

     label06:
        r58 = $r59;

        $r46 = virtualinvoke $r59.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z4 = virtualinvoke $r46.<java.lang.String: boolean startsWith(java.lang.String)>("arg");

        if $z4 != 0 goto label07;

        $r55 = virtualinvoke $r59.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z5 = virtualinvoke $r55.<java.lang.String: boolean startsWith(java.lang.String)>("return");

        if $z5 == 0 goto label14;

     label07:
        if z0 == 0 goto label08;

        $r69 = new javax.xml.namespace.QName;

        $r60 = $r69;

        $r49 = virtualinvoke r58.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();

        $r52 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Response");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r69.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r49, $r54);

        goto label09;

     label08:
        $r70 = new javax.xml.namespace.QName;

        $r60 = $r70;

        $r47 = virtualinvoke r58.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r48 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();

        specialinvoke $r70.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r47, $r48);

     label09:
        r58 = $r60;

        goto label14;

     label10:
        if z0 == 0 goto label13;

        $r45 = virtualinvoke r1.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $i2 = interfaceinvoke $r45.<java.util.List: int size()>();

        if $i2 <= 1 goto label13;

        if r58 != null goto label13;

     label11:
        $z3 = virtualinvoke r18.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isOutParam(java.lang.reflect.Method,int)>(r4, i3);

        if $z3 != 0 goto label12;

        i3 = i3 + 1;

        goto label11;

     label12:
        r58 = virtualinvoke r18.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r0, r4, i3);

        goto label14;

     label13:
        if r58 != null goto label14;

        r58 = virtualinvoke r18.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r0, r4, i3);

     label14:
        $r61 = virtualinvoke r11.<org.apache.cxf.service.model.ServiceInfo: java.util.List getSchemas()>();

        $r62 = interfaceinvoke $r61.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z7 = interfaceinvoke $r62.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label17;

        $r42 = interfaceinvoke $r62.<java.util.Iterator: java.lang.Object next()>();

        r63 = (org.apache.cxf.service.model.SchemaInfo) $r42;

        $r43 = virtualinvoke r63.<org.apache.cxf.service.model.SchemaInfo: java.lang.String getNamespaceURI()>();

        $r44 = virtualinvoke r58.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z2 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>($r44);

        if $z2 == 0 goto label16;

        r57 = r63;

        goto label17;

     label16:
        goto label15;

     label17:
        if r57 != null goto label18;

        $r40 = virtualinvoke r58.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r41 = specialinvoke r18.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)>(r11, $r40, 1);

        r57 = $r41;

        r64 = virtualinvoke $r41.<org.apache.cxf.service.model.SchemaInfo: org.apache.ws.commons.schema.XmlSchema getSchema()>();

        goto label19;

     label18:
        $r12 = virtualinvoke r57.<org.apache.cxf.service.model.SchemaInfo: org.apache.ws.commons.schema.XmlSchema getSchema()>();

        r64 = $r12;

        if $r12 == null goto label19;

        $r38 = virtualinvoke $r12.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaElement getElementByName(javax.xml.namespace.QName)>(r58);

        if $r38 == null goto label19;

        virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: void setElement(boolean)>(1);

        virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>(r58);

        $r39 = virtualinvoke $r12.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaElement getElementByName(javax.xml.namespace.QName)>(r58);

        virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: void setXmlSchema(org.apache.ws.commons.schema.XmlSchemaAnnotated)>($r39);

        i3 = i3 + 1;

        goto label04;

     label19:
        virtualinvoke r57.<org.apache.cxf.service.model.SchemaInfo: void setElement(org.w3c.dom.Element)>(null);

        $r71 = new org.apache.ws.commons.schema.XmlSchemaElement;

        specialinvoke $r71.<org.apache.ws.commons.schema.XmlSchemaElement: void <init>(org.apache.ws.commons.schema.XmlSchema,boolean)>(r64, 1);

        $r66 = virtualinvoke r58.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke $r71.<org.apache.ws.commons.schema.XmlSchemaElement: void setName(java.lang.String)>($r66);

        virtualinvoke $r71.<org.apache.ws.commons.schema.XmlSchemaElement: void setNillable(boolean)>(1);

        $z8 = virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: boolean isElement()>();

        if $z8 == 0 goto label21;

        $r31 = virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        r67 = (org.apache.ws.commons.schema.XmlSchemaElement) $r31;

        if null == r67 goto label20;

        $r32 = virtualinvoke r67.<org.apache.ws.commons.schema.XmlSchemaElement: javax.xml.namespace.QName getQName()>();

        $z1 = virtualinvoke $r32.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>(r58);

        if $z1 != 0 goto label20;

        $r33 = virtualinvoke r67.<org.apache.ws.commons.schema.XmlSchemaElement: javax.xml.namespace.QName getSchemaTypeName()>();

        virtualinvoke $r71.<org.apache.ws.commons.schema.XmlSchemaElement: void setSchemaTypeName(javax.xml.namespace.QName)>($r33);

        $r34 = virtualinvoke r67.<org.apache.ws.commons.schema.XmlSchemaElement: org.apache.ws.commons.schema.XmlSchemaType getSchemaType()>();

        virtualinvoke $r71.<org.apache.ws.commons.schema.XmlSchemaElement: void setSchemaType(org.apache.ws.commons.schema.XmlSchemaType)>($r34);

        $r35 = virtualinvoke r67.<org.apache.ws.commons.schema.XmlSchemaElement: javax.xml.namespace.QName getSchemaTypeName()>();

        if $r35 == null goto label20;

        $r36 = virtualinvoke r67.<org.apache.ws.commons.schema.XmlSchemaElement: javax.xml.namespace.QName getSchemaTypeName()>();

        $r37 = virtualinvoke $r36.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        specialinvoke r18.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>(r64, $r37);

     label20:
        virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: void setElement(boolean)>(1);

        virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: void setXmlSchema(org.apache.ws.commons.schema.XmlSchemaAnnotated)>($r71);

        virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>(r58);

        virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: void setConcreteName(javax.xml.namespace.QName)>(r58);

        goto label04;

     label21:
        $r13 = virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getTypeQName()>();

        if null != $r13 goto label22;

        $r22 = virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        if $r22 != null goto label22;

        $r73 = new org.apache.cxf.service.factory.ServiceConstructionException;

        $r72 = new org.apache.cxf.common.i18n.Message;

        $r26 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r25 = newarray (java.lang.Object)[3];

        $r27 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r28 = virtualinvoke $r27.<java.lang.Class: java.lang.String getName()>();

        $r25[0] = $r28;

        $r29 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();

        $r25[1] = $r29;

        $r30 = virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getName()>();

        $r25[2] = $r30;

        specialinvoke $r72.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("UNMAPPABLE_PORT_TYPE", $r26, $r25);

        specialinvoke $r73.<org.apache.cxf.service.factory.ServiceConstructionException: void <init>(org.apache.cxf.common.i18n.Message)>($r72);

        throw $r73;

     label22:
        $r14 = virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getTypeQName()>();

        if $r14 == null goto label23;

        $r21 = virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getTypeQName()>();

        virtualinvoke $r71.<org.apache.ws.commons.schema.XmlSchemaElement: void setSchemaTypeName(javax.xml.namespace.QName)>($r21);

        goto label24;

     label23:
        $r15 = virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        $r16 = (org.apache.ws.commons.schema.XmlSchemaType) $r15;

        virtualinvoke $r71.<org.apache.ws.commons.schema.XmlSchemaElement: void setSchemaType(org.apache.ws.commons.schema.XmlSchemaType)>($r16);

     label24:
        virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: void setXmlSchema(org.apache.ws.commons.schema.XmlSchemaAnnotated)>($r71);

        virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: void setConcreteName(javax.xml.namespace.QName)>(r58);

        $r17 = virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getTypeQName()>();

        if $r17 == null goto label25;

        $r19 = virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getTypeQName()>();

        $r20 = virtualinvoke $r19.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        specialinvoke r18.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>(r64, $r20);

     label25:
        virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: void setElement(boolean)>(1);

        virtualinvoke r8.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>(r58);

        i3 = i3 + 1;

        goto label04;

     label26:
        return;
    }

    private void addImport(org.apache.ws.commons.schema.XmlSchema, java.lang.String)
    {
        java.util.Map $r5, $r9;
        org.apache.ws.commons.schema.XmlSchema r1;
        java.lang.String r0, $r2, $r11;
        boolean $z0, $z1, $z2, $z3;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r3;
        org.apache.ws.commons.schema.XmlSchemaImport $r4;
        java.util.List $r7, $r8;
        java.lang.Object $r6, $r10;

        r3 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r0 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchema: java.lang.String getTargetNamespace()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2001/XMLSchema");

        if $z1 != 0 goto label2;

        $z2 = specialinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>(r1, r0);

        if $z2 != 0 goto label2;

        $r4 = new org.apache.ws.commons.schema.XmlSchemaImport;

        specialinvoke $r4.<org.apache.ws.commons.schema.XmlSchemaImport: void <init>(org.apache.ws.commons.schema.XmlSchema)>(r1);

        virtualinvoke $r4.<org.apache.ws.commons.schema.XmlSchemaImport: void setNamespace(java.lang.String)>(r0);

        $r5 = r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map schemaLocationMapping>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        if $r6 == null goto label1;

        $r9 = r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map schemaLocationMapping>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r11 = (java.lang.String) $r10;

        virtualinvoke $r4.<org.apache.ws.commons.schema.XmlSchemaImport: void setSchemaLocation(java.lang.String)>($r11);

     label1:
        $r7 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchema: java.util.List getItems()>();

        $z3 = interfaceinvoke $r7.<java.util.List: boolean contains(java.lang.Object)>($r4);

        if $z3 != 0 goto label2;

        $r8 = virtualinvoke r1.<org.apache.ws.commons.schema.XmlSchema: java.util.List getItems()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r4);

     label2:
        return;
    }

    private boolean isExistImport(org.apache.ws.commons.schema.XmlSchema, java.lang.String)
    {
        java.util.Iterator $r2;
        org.apache.ws.commons.schema.XmlSchemaExternal r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r8;
        org.apache.ws.commons.schema.XmlSchemaImport r5;
        java.util.List $r1;
        org.apache.ws.commons.schema.XmlSchema r0;
        java.lang.Object $r3;
        java.lang.String $r6, r7;
        boolean $z0, $z1, $z2, z3;

        r8 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r0 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r7 := @parameter1: java.lang.String;

        z3 = 0;

        $r1 = virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchema: java.util.List getExternals()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.ws.commons.schema.XmlSchemaExternal) $r3;

        $z1 = r4 instanceof org.apache.ws.commons.schema.XmlSchemaImport;

        if $z1 == 0 goto label2;

        r5 = (org.apache.ws.commons.schema.XmlSchemaImport) r4;

        $r6 = virtualinvoke r5.<org.apache.ws.commons.schema.XmlSchemaImport: java.lang.String getNamespace()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z2 == 0 goto label2;

        z3 = 1;

        goto label3;

     label2:
        goto label1;

     label3:
        return z3;
    }

    private org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema, javax.xml.namespace.QName)
    {
        java.util.Map $r1;
        org.apache.ws.commons.schema.XmlSchema r0;
        java.lang.Object $r3;
        javax.xml.namespace.QName r2;
        org.apache.ws.commons.schema.XmlSchemaElement $r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r5;

        r5 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r0 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchema: java.util.Map getElements()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r4 = (org.apache.ws.commons.schema.XmlSchemaElement) $r3;

        return $r4;
    }

    private boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema, javax.xml.namespace.QName)
    {
        org.apache.ws.commons.schema.XmlSchema r1;
        javax.xml.namespace.QName r2;
        org.apache.ws.commons.schema.XmlSchemaElement $r3;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        r2 := @parameter1: javax.xml.namespace.QName;

        $r3 = specialinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)>(r1, r2);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo, org.apache.cxf.service.model.AbstractMessageContainer, org.apache.cxf.service.model.AbstractMessageContainer, org.apache.cxf.service.model.SchemaInfo, javax.xml.namespace.QName)
    {
        org.apache.ws.commons.schema.XmlSchemaForm $r49, $r64, $r65;
        org.apache.ws.commons.schema.XmlSchemaSequence $r11;
        org.apache.cxf.service.model.AbstractMessageContainer r5, r12;
        java.util.Map $r20;
        org.apache.ws.commons.schema.XmlSchemaAnnotated $r62;
        javax.xml.namespace.QName r3, $r21, $r23, $r24, $r39, $r41, $r42, $r44, $r46, $r50, $r51, $r52, $r53, $r55, $r56, $r58, $r60, r74;
        org.apache.cxf.service.model.ServiceInfo r27;
        long $l0, l1;
        java.lang.String $r4, $r22, $r26, $r28, $r43, $r45, $r47, $r48, $r54, $r57, $r59, $r61;
        org.apache.cxf.service.model.MessagePartInfo $r8, r16;
        org.apache.cxf.service.model.SchemaInfo r0, $r29;
        org.apache.ws.commons.schema.XmlSchemaComplexType $r9;
        org.apache.ws.commons.schema.XmlSchemaElement $r2, $r17;
        org.apache.ws.commons.schema.XmlSchemaType $r40, $r63;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r10;
        java.util.List $r6, $r13, $r32, $r36;
        java.lang.reflect.Type r71;
        java.lang.'annotation'.Annotation[] $r33, $r34;
        org.apache.ws.commons.schema.XmlSchema $r1, $r30, $r31;
        java.lang.Boolean $r18, $r35, $r66, r68, $r72;
        java.util.Iterator $r14;
        java.lang.Object $r7, $r15, $r19, $r25, $r38, $r67, $r73;
        java.lang.Class $r37, $r69, $r70;

        r10 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r27 := @parameter0: org.apache.cxf.service.model.ServiceInfo;

        r5 := @parameter1: org.apache.cxf.service.model.AbstractMessageContainer;

        r12 := @parameter2: org.apache.cxf.service.model.AbstractMessageContainer;

        r0 := @parameter3: org.apache.cxf.service.model.SchemaInfo;

        r3 := @parameter4: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.model.SchemaInfo: org.apache.ws.commons.schema.XmlSchema getSchema()>();

        virtualinvoke r0.<org.apache.cxf.service.model.SchemaInfo: void setElement(org.w3c.dom.Element)>(null);

        $r2 = new org.apache.ws.commons.schema.XmlSchemaElement;

        specialinvoke $r2.<org.apache.ws.commons.schema.XmlSchemaElement: void <init>(org.apache.ws.commons.schema.XmlSchema,boolean)>($r1, 1);

        $r4 = virtualinvoke r3.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke $r2.<org.apache.ws.commons.schema.XmlSchemaElement: void setName(java.lang.String)>($r4);

        $r6 = virtualinvoke r5.<org.apache.cxf.service.model.AbstractMessageContainer: java.util.List getMessageParts()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (org.apache.cxf.service.model.MessagePartInfo) $r7;

        virtualinvoke $r8.<org.apache.cxf.service.model.MessagePartInfo: void setXmlSchema(org.apache.ws.commons.schema.XmlSchemaAnnotated)>($r2);

        $r9 = new org.apache.ws.commons.schema.XmlSchemaComplexType;

        specialinvoke $r9.<org.apache.ws.commons.schema.XmlSchemaComplexType: void <init>(org.apache.ws.commons.schema.XmlSchema,boolean)>($r1, 1);

        $z0 = virtualinvoke r10.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isAnonymousWrapperTypes()>();

        if $z0 != 0 goto label01;

        $r61 = virtualinvoke r3.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke $r9.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setName(java.lang.String)>($r61);

        virtualinvoke $r2.<org.apache.ws.commons.schema.XmlSchemaElement: void setSchemaTypeName(javax.xml.namespace.QName)>(r3);

     label01:
        virtualinvoke $r2.<org.apache.ws.commons.schema.XmlSchemaElement: void setSchemaType(org.apache.ws.commons.schema.XmlSchemaType)>($r9);

        $r11 = new org.apache.ws.commons.schema.XmlSchemaSequence;

        specialinvoke $r11.<org.apache.ws.commons.schema.XmlSchemaSequence: void <init>()>();

        virtualinvoke $r9.<org.apache.ws.commons.schema.XmlSchemaComplexType: void setParticle(org.apache.ws.commons.schema.XmlSchemaParticle)>($r11);

        $r13 = virtualinvoke r12.<org.apache.cxf.service.model.AbstractMessageContainer: java.util.List getMessageParts()>();

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z14 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label17;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.apache.cxf.service.model.MessagePartInfo) $r15;

        $r17 = new org.apache.ws.commons.schema.XmlSchemaElement;

        $r18 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r19 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.isheader");

        $z1 = virtualinvoke $r18.<java.lang.Boolean: boolean equals(java.lang.Object)>($r19);

        specialinvoke $r17.<org.apache.ws.commons.schema.XmlSchemaElement: void <init>(org.apache.ws.commons.schema.XmlSchema,boolean)>($r1, $z1);

        $r20 = specialinvoke r10.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map getJaxbAnnoMap(org.apache.cxf.service.model.MessagePartInfo)>(r16);

        $z2 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: boolean isElement()>();

        if $z2 == 0 goto label03;

        $r58 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getElementQName()>();

        $r59 = virtualinvoke $r58.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        specialinvoke r10.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r1, $r59);

        $r60 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getElementQName()>();

        staticinvoke <org.apache.cxf.common.xmlschema.XmlSchemaUtils: void setElementRefName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)>($r17, $r60);

        goto label06;

     label03:
        $r21 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getName()>();

        $r22 = virtualinvoke $r21.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke $r17.<org.apache.ws.commons.schema.XmlSchemaElement: void setName(java.lang.String)>($r22);

        $r23 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getTypeQName()>();

        if $r23 == null goto label04;

        $z13 = interfaceinvoke $r20.<java.util.Map: boolean containsKey(java.lang.Object)>(class "Ljavax/xml/bind/annotation/XmlList;");

        if $z13 != 0 goto label04;

        $r55 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getTypeQName()>();

        virtualinvoke $r17.<org.apache.ws.commons.schema.XmlSchemaElement: void setSchemaTypeName(javax.xml.namespace.QName)>($r55);

        $r56 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getTypeQName()>();

        $r57 = virtualinvoke $r56.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        specialinvoke r10.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)>($r1, $r57);

     label04:
        $r62 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        $r63 = (org.apache.ws.commons.schema.XmlSchemaType) $r62;

        virtualinvoke $r17.<org.apache.ws.commons.schema.XmlSchemaElement: void setSchemaType(org.apache.ws.commons.schema.XmlSchemaType)>($r63);

        $r64 = virtualinvoke $r1.<org.apache.ws.commons.schema.XmlSchema: org.apache.ws.commons.schema.XmlSchemaForm getElementFormDefault()>();

        $r65 = <org.apache.ws.commons.schema.XmlSchemaForm: org.apache.ws.commons.schema.XmlSchemaForm UNQUALIFIED>;

        $z15 = virtualinvoke $r64.<org.apache.ws.commons.schema.XmlSchemaForm: boolean equals(java.lang.Object)>($r65);

        if $z15 == 0 goto label05;

        $r52 = new javax.xml.namespace.QName;

        $r53 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getName()>();

        $r54 = virtualinvoke $r53.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke $r52.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>(null, $r54);

        virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: void setConcreteName(javax.xml.namespace.QName)>($r52);

        goto label06;

     label05:
        $r24 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getName()>();

        virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: void setConcreteName(javax.xml.namespace.QName)>($r24);

     label06:
        $r66 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r67 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.isheader");

        $z16 = virtualinvoke $r66.<java.lang.Boolean: boolean equals(java.lang.Object)>($r67);

        if $z16 != 0 goto label15;

        $z5 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: boolean isElement()>();

        if $z5 != 0 goto label07;

        $z17 = 1;

        goto label08;

     label07:
        $z17 = 0;

     label08:
        if $z17 == 0 goto label09;

        $r50 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

        virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: void setElement(boolean)>(1);

        $r51 = virtualinvoke $r17.<org.apache.ws.commons.schema.XmlSchemaElement: javax.xml.namespace.QName getQName()>();

        virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>($r51);

        virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: void setConcreteName(javax.xml.namespace.QName)>($r50);

     label09:
        $r33 = specialinvoke r10.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.'annotation'.Annotation[] getMethodParameterAnnotations(org.apache.cxf.service.model.MessagePartInfo)>(r16);

        specialinvoke r10.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void addMimeType(org.apache.ws.commons.schema.XmlSchemaElement,java.lang.'annotation'.Annotation[])>($r17, $r33);

        $r34 = specialinvoke r10.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.'annotation'.Annotation[] getMethodAnnotations(org.apache.cxf.service.model.MessagePartInfo)>(r16);

        if $r34 == null goto label10;

        specialinvoke r10.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void addMimeType(org.apache.ws.commons.schema.XmlSchemaElement,java.lang.'annotation'.Annotation[])>($r17, $r34);

     label10:
        $l0 = virtualinvoke r10.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)>(r16);

        l1 = virtualinvoke r10.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)>(r16);

        $z6 = virtualinvoke r10.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)>(r16);

        $z7 = virtualinvoke r10.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)>(r16);

        $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7);

        r68 = $r35;

        if $r35 != null goto label11;

        $z12 = virtualinvoke r10.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isQualifyWrapperSchema()>();

        r68 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12);

     label11:
        $z8 = virtualinvoke r68.<java.lang.Boolean: boolean booleanValue()>();

        if $z8 == 0 goto label12;

        $r42 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

        $r43 = virtualinvoke $r42.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z11 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r43);

        if $z11 == 0 goto label12;

        $r44 = new javax.xml.namespace.QName;

        $r45 = virtualinvoke r3.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r46 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

        $r47 = virtualinvoke $r46.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke $r44.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r45, $r47);

        virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: void setElement(boolean)>(1);

        virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>($r44);

        virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: void setConcreteName(javax.xml.namespace.QName)>($r44);

        $r48 = virtualinvoke $r44.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke $r17.<org.apache.ws.commons.schema.XmlSchemaElement: void setName(java.lang.String)>($r48);

        $r49 = <org.apache.ws.commons.schema.XmlSchemaForm: org.apache.ws.commons.schema.XmlSchemaForm QUALIFIED>;

        virtualinvoke $r17.<org.apache.ws.commons.schema.XmlSchemaElement: void setForm(org.apache.ws.commons.schema.XmlSchemaForm)>($r49);

     label12:
        $r69 = class "Ljava/util/Collection;";

        $r70 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Class getTypeClass()>();

        $z18 = virtualinvoke $r69.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r70);

        if $z18 == 0 goto label13;

        $r37 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Class getTypeClass()>();

        $z9 = virtualinvoke $r37.<java.lang.Class: boolean isInterface()>();

        if $z9 == 0 goto label13;

        $r38 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("generic.type");

        r71 = (java.lang.reflect.Type) $r38;

        $z10 = r71 instanceof java.lang.reflect.ParameterizedType;

        if $z10 != 0 goto label13;

        $r39 = virtualinvoke $r17.<org.apache.ws.commons.schema.XmlSchemaElement: javax.xml.namespace.QName getSchemaTypeName()>();

        if $r39 != null goto label13;

        $r40 = virtualinvoke $r17.<org.apache.ws.commons.schema.XmlSchemaElement: org.apache.ws.commons.schema.XmlSchemaType getSchemaType()>();

        if $r40 != null goto label13;

        l1 = 9223372036854775807L;

        $r41 = <org.apache.ws.commons.schema.constants.Constants: javax.xml.namespace.QName XSD_ANYTYPE>;

        virtualinvoke $r17.<org.apache.ws.commons.schema.XmlSchemaElement: void setSchemaTypeName(javax.xml.namespace.QName)>($r41);

     label13:
        virtualinvoke $r17.<org.apache.ws.commons.schema.XmlSchemaElement: void setMinOccurs(long)>($l0);

        virtualinvoke $r17.<org.apache.ws.commons.schema.XmlSchemaElement: void setMaxOccurs(long)>(l1);

        if $z6 == 0 goto label14;

        virtualinvoke $r17.<org.apache.ws.commons.schema.XmlSchemaElement: void setNillable(boolean)>($z6);

     label14:
        $r36 = virtualinvoke $r11.<org.apache.ws.commons.schema.XmlSchemaSequence: java.util.List getItems()>();

        interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>($r17);

        virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: void setXmlSchema(org.apache.ws.commons.schema.XmlSchemaAnnotated)>($r17);

     label15:
        $r72 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r73 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.isheader");

        $z19 = virtualinvoke $r72.<java.lang.Boolean: boolean equals(java.lang.Object)>($r73);

        if $z19 == 0 goto label16;

        $r25 = virtualinvoke r16.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.elementName");

        r74 = (javax.xml.namespace.QName) $r25;

        $r26 = virtualinvoke r74.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke $r17.<org.apache.ws.commons.schema.XmlSchemaElement: void setName(java.lang.String)>($r26);

        $r28 = virtualinvoke r74.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z3 = virtualinvoke r10.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean getQualifyWrapperSchema()>();

        $r29 = specialinvoke r10.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)>(r27, $r28, $z3);

        $r30 = virtualinvoke $r29.<org.apache.cxf.service.model.SchemaInfo: org.apache.ws.commons.schema.XmlSchema getSchema()>();

        $z4 = specialinvoke r10.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)>($r30, r74);

        if $z4 != 0 goto label16;

        $r31 = virtualinvoke $r29.<org.apache.cxf.service.model.SchemaInfo: org.apache.ws.commons.schema.XmlSchema getSchema()>();

        $r32 = virtualinvoke $r31.<org.apache.ws.commons.schema.XmlSchema: java.util.List getItems()>();

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>($r17);

     label16:
        goto label02;

     label17:
        return;
    }

    private java.lang.'annotation'.Annotation[] getMethodParameterAnnotations(org.apache.cxf.service.model.MessagePartInfo)
    {
        java.lang.'annotation'.Annotation[][] $r2, r3;
        java.lang.'annotation'.Annotation[] $r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r5;
        int $i0, $i1;
        java.lang.Object $r1;
        org.apache.cxf.service.model.MessagePartInfo r0;

        r5 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r0 := @parameter0: org.apache.cxf.service.model.MessagePartInfo;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("method.parameters.annotations");

        $r2 = (java.lang.'annotation'.Annotation[][]) $r1;

        r3 = (java.lang.'annotation'.Annotation[][]) $r2;

        $i0 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: int getIndex()>();

        if r3 == null goto label1;

        $i1 = lengthof r3;

        if $i0 >= $i1 goto label1;

        if $i0 < 0 goto label1;

        $r4 = r3[$i0];

        return $r4;

     label1:
        return null;
    }

    private java.lang.'annotation'.Annotation[] getMethodAnnotations(org.apache.cxf.service.model.MessagePartInfo)
    {
        java.lang.Object $r1;
        java.lang.'annotation'.Annotation[] $r2, $r3;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r4;
        org.apache.cxf.service.model.MessagePartInfo r0;

        r4 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r0 := @parameter0: org.apache.cxf.service.model.MessagePartInfo;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("method.return.annotations");

        $r2 = (java.lang.'annotation'.Annotation[]) $r1;

        $r3 = (java.lang.'annotation'.Annotation[]) $r2;

        return $r3;
    }

    private void addMimeType(org.apache.ws.commons.schema.XmlSchemaElement, java.lang.'annotation'.Annotation[])
    {
        javax.xml.bind.'annotation'.XmlMimeType $r3;
        java.lang.'annotation'.Annotation[] r0;
        org.apache.ws.commons.schema.XmlSchemaElement r5;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r7;
        int i0, i1;
        java.lang.'annotation'.Annotation r1;
        java.lang.String $r4;
        javax.xml.namespace.QName $r6;
        boolean $z0;
        org.apache.cxf.databinding.source.mime.MimeAttribute $r2;

        r7 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: org.apache.ws.commons.schema.XmlSchemaElement;

        r0 := @parameter1: java.lang.'annotation'.Annotation[];

        if r0 == null goto label3;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = r0[i1];

        $z0 = r1 instanceof javax.xml.bind.'annotation'.XmlMimeType;

        if $z0 == 0 goto label2;

        $r2 = new org.apache.cxf.databinding.source.mime.MimeAttribute;

        specialinvoke $r2.<org.apache.cxf.databinding.source.mime.MimeAttribute: void <init>()>();

        $r3 = (javax.xml.bind.'annotation'.XmlMimeType) r1;

        $r4 = interfaceinvoke $r3.<javax.xml.bind.'annotation'.XmlMimeType: java.lang.String value()>();

        virtualinvoke $r2.<org.apache.cxf.databinding.source.mime.MimeAttribute: void setValue(java.lang.String)>($r4);

        $r6 = <org.apache.cxf.databinding.source.mime.MimeAttribute: javax.xml.namespace.QName MIME_QNAME>;

        virtualinvoke r5.<org.apache.ws.commons.schema.XmlSchemaElement: void addMetaInfo(java.lang.Object,java.lang.Object)>($r6, $r2);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private java.util.Map getJaxbAnnoMap(org.apache.cxf.service.model.MessagePartInfo)
    {
        java.util.concurrent.ConcurrentHashMap $r0;
        java.lang.'annotation'.Annotation[] $r3;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r1;
        int i0, i1;
        java.lang.'annotation'.Annotation r4;
        java.lang.Boolean $r5, $r6, $r7, $r8;
        org.apache.cxf.service.model.MessagePartInfo r2;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r2 := @parameter0: org.apache.cxf.service.model.MessagePartInfo;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(4, 0.75F, 1);

        $r3 = specialinvoke r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.'annotation'.Annotation[] getMethodParameterAnnotations(org.apache.cxf.service.model.MessagePartInfo)>(r2);

        if $r3 == null goto label6;

        i0 = lengthof $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r4 = $r3[i1];

        $z0 = r4 instanceof javax.xml.bind.'annotation'.XmlList;

        if $z0 == 0 goto label2;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljavax/xml/bind/annotation/XmlList;", $r8);

     label2:
        $z1 = r4 instanceof javax.xml.bind.'annotation'.XmlAttachmentRef;

        if $z1 == 0 goto label3;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljavax/xml/bind/annotation/XmlAttachmentRef;", $r7);

     label3:
        $z2 = r4 instanceof javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter;

        if $z2 == 0 goto label4;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljavax/xml/bind/annotation/adapters/XmlJavaTypeAdapter;", $r6);

     label4:
        $z3 = r4 instanceof javax.xml.bind.'annotation'.XmlElementWrapper;

        if $z3 == 0 goto label5;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljavax/xml/bind/annotation/XmlElementWrapper;", $r5);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return $r0;
    }

    private org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo, java.lang.String, boolean)
    {
        org.apache.ws.commons.schema.XmlSchemaForm $r22;
        org.apache.cxf.common.xmlschema.SchemaCollection $r5;
        java.util.Map $r10, r26;
        boolean $z0, z1, $z2, $z3, $z4, $z5;
        org.apache.cxf.databinding.DataBinding $r9;
        java.util.Set $r12;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r8;
        java.util.List $r1;
        org.apache.cxf.service.model.ServiceInfo r0;
        org.apache.ws.commons.schema.XmlSchema $r6, $r7;
        java.lang.String r4, $r14, $r15, $r19, $r21, $r24;
        org.apache.ws.commons.schema.utils.NamespaceMap $r11;
        java.util.Map$Entry r17;
        java.util.Iterator $r2, $r13;
        org.apache.cxf.service.model.SchemaInfo $r3, r25;
        java.lang.Object $r16, $r18, $r20, $r23;

        r8 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r0 := @parameter0: org.apache.cxf.service.model.ServiceInfo;

        r4 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.model.ServiceInfo: java.util.List getSchemas()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r23 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r25 = (org.apache.cxf.service.model.SchemaInfo) $r23;

        $r24 = virtualinvoke r25.<org.apache.cxf.service.model.SchemaInfo: java.lang.String getNamespaceURI()>();

        $z4 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z4 == 0 goto label02;

        return r25;

     label02:
        goto label01;

     label03:
        $r3 = new org.apache.cxf.service.model.SchemaInfo;

        specialinvoke $r3.<org.apache.cxf.service.model.SchemaInfo: void <init>(java.lang.String)>(r4);

        $r5 = virtualinvoke r0.<org.apache.cxf.service.model.ServiceInfo: org.apache.cxf.common.xmlschema.SchemaCollection getXmlSchemaCollection()>();

        $r6 = virtualinvoke $r5.<org.apache.cxf.common.xmlschema.SchemaCollection: org.apache.ws.commons.schema.XmlSchema getSchemaByTargetNamespace(java.lang.String)>(r4);

        if $r6 == null goto label04;

        virtualinvoke $r3.<org.apache.cxf.service.model.SchemaInfo: void setSchema(org.apache.ws.commons.schema.XmlSchema)>($r6);

        virtualinvoke r0.<org.apache.cxf.service.model.ServiceInfo: void addSchema(org.apache.cxf.service.model.SchemaInfo)>($r3);

        return $r3;

     label04:
        $r7 = virtualinvoke $r5.<org.apache.cxf.common.xmlschema.SchemaCollection: org.apache.ws.commons.schema.XmlSchema newXmlSchemaInCollection(java.lang.String)>(r4);

        if z1 == 0 goto label05;

        $r22 = <org.apache.ws.commons.schema.XmlSchemaForm: org.apache.ws.commons.schema.XmlSchemaForm QUALIFIED>;

        virtualinvoke $r7.<org.apache.ws.commons.schema.XmlSchema: void setElementFormDefault(org.apache.ws.commons.schema.XmlSchemaForm)>($r22);

     label05:
        virtualinvoke $r3.<org.apache.cxf.service.model.SchemaInfo: void setSchema(org.apache.ws.commons.schema.XmlSchema)>($r7);

        $r9 = virtualinvoke r8.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.databinding.DataBinding getDataBinding()>();

        $r10 = interfaceinvoke $r9.<org.apache.cxf.databinding.DataBinding: java.util.Map getDeclaredNamespaceMappings()>();

        r26 = $r10;

        if $r10 != null goto label06;

        r26 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

     label06:
        $r11 = new org.apache.ws.commons.schema.utils.NamespaceMap;

        specialinvoke $r11.<org.apache.ws.commons.schema.utils.NamespaceMap: void <init>()>();

        $r12 = interfaceinvoke r26.<java.util.Map: java.util.Set entrySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z5 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label08;

        $r16 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.util.Map$Entry) $r16;

        $r18 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (java.lang.String) $r18;

        $r20 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r21 = (java.lang.String) $r20;

        virtualinvoke $r11.<org.apache.ws.commons.schema.utils.NamespaceMap: void add(java.lang.String,java.lang.String)>($r19, $r21);

        goto label07;

     label08:
        $z2 = interfaceinvoke r26.<java.util.Map: boolean containsKey(java.lang.Object)>("http://www.w3.org/2001/XMLSchema");

        if $z2 != 0 goto label09;

        virtualinvoke $r11.<org.apache.ws.commons.schema.utils.NamespaceMap: void add(java.lang.String,java.lang.String)>("xsd", "http://www.w3.org/2001/XMLSchema");

     label09:
        $r14 = virtualinvoke r0.<org.apache.cxf.service.model.ServiceInfo: java.lang.String getTargetNamespace()>();

        $z3 = interfaceinvoke r26.<java.util.Map: boolean containsKey(java.lang.Object)>($r14);

        if $z3 != 0 goto label10;

        $r15 = virtualinvoke r0.<org.apache.cxf.service.model.ServiceInfo: java.lang.String getTargetNamespace()>();

        virtualinvoke $r11.<org.apache.ws.commons.schema.utils.NamespaceMap: void add(java.lang.String,java.lang.String)>("tns", $r15);

     label10:
        virtualinvoke $r7.<org.apache.ws.commons.schema.XmlSchema: void setNamespaceContext(org.apache.ws.commons.schema.utils.NamespacePrefixList)>($r11);

        virtualinvoke r0.<org.apache.cxf.service.model.ServiceInfo: void addSchema(org.apache.cxf.service.model.SchemaInfo)>($r3);

        return $r3;
    }

    protected void createMessageParts(org.apache.cxf.service.model.InterfaceInfo, org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method)
    {
        java.util.Map $r48, $r78;
        org.apache.cxf.service.model.InterfaceInfo r13;
        java.lang.StringBuilder $r53, $r54, $r56, $r62, $r63, $r69, $r70, $r87, $r88, $r90;
        javax.xml.namespace.QName $r4, $r7, $r14, $r17, $r34, $r36, $r37, $r44, $r45, r72, r73, r81, r82, $r89, $r91;
        java.lang.Object[] $r11, $r21;
        java.lang.String $r8, $r18, $r55, $r57, $r59, $r61, $r64, $r66, $r68, $r71;
        org.apache.cxf.service.model.MessagePartInfo $r28, $r30, $r33, $r38, $r74, $r83;
        java.lang.'annotation'.Annotation[][] $r9;
        java.lang.Class[] $r1;
        org.apache.cxf.service.model.MessageInfo$Type $r5, $r15, $r35;
        java.lang.reflect.Method r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25;
        org.apache.cxf.service.model.OperationInfo r2;
        java.util.logging.Logger $r50;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r3;
        org.apache.cxf.service.factory.FactoryBeanListener$Event $r12, $r22;
        java.lang.reflect.Type $r40, $r76, $r86;
        java.lang.reflect.Type[] $r10;
        java.lang.'annotation'.Annotation[] $r77, $r80, $r84;
        java.util.logging.Level $r51;
        int $i0, i1, $i2, i3, $i4, $i5, $i7, $i9, $i11;
        java.lang.Boolean $r25, $r26, $r41, $r46, $r47;
        org.apache.cxf.service.model.MessageInfo $r6, $r16, $r27, $r29, $r32, r79;
        java.lang.Class $r19, $r20, $r23, $r24, $r39, $r42, $r43, $r52, $r75, $r85;
        java.lang.Object $r31;

        r3 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r13 := @parameter0: org.apache.cxf.service.model.InterfaceInfo;

        r2 := @parameter1: org.apache.cxf.service.model.OperationInfo;

        r0 := @parameter2: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: void setProperty(java.lang.String,java.lang.Object)>("operation.method", r0);

        $r4 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r2, r0);

        $r5 = <org.apache.cxf.service.model.MessageInfo$Type: org.apache.cxf.service.model.MessageInfo$Type INPUT>;

        $r6 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo createMessage(javax.xml.namespace.QName,org.apache.cxf.service.model.MessageInfo$Type)>($r4, $r5);

        $r7 = virtualinvoke $r6.<org.apache.cxf.service.model.MessageInfo: javax.xml.namespace.QName getName()>();

        $r8 = virtualinvoke $r7.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: void setInput(java.lang.String,org.apache.cxf.service.model.MessageInfo)>($r8, $r6);

        $r9 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        $r10 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();

        i1 = 0;

     label01:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label10;

        $r43 = class "Lorg/apache/cxf/message/Exchange;";

        $r42 = $r1[i1];

        $z13 = virtualinvoke $r43.<java.lang.Object: boolean equals(java.lang.Object)>($r42);

        if $z13 == 0 goto label02;

        goto label09;

     label02:
        $z14 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isInParam(java.lang.reflect.Method,int)>(r0, i1);

        if $z14 == 0 goto label09;

        $r44 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r2, r0, i1);

        r72 = $r44;

        $r45 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r2, r0, i1);

        r73 = $r45;

        $z15 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isRPC(java.lang.reflect.Method)>(r0);

        if $z15 != 0 goto label03;

        $z20 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapped(java.lang.reflect.Method)>(r0);

        if $z20 != 0 goto label03;

        $r48 = virtualinvoke $r6.<org.apache.cxf.service.model.MessageInfo: java.util.Map getMessagePartsMap()>();

        $z21 = interfaceinvoke $r48.<java.util.Map: boolean containsKey(java.lang.Object)>($r45);

        if $z21 == 0 goto label03;

        $r50 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r51 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        $r53 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r55 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r50.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r51, "INVALID_BARE_METHOD", $r57);

        $r89 = new javax.xml.namespace.QName;

        $r59 = virtualinvoke $r45.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r45.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r62 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r89.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r59, $r64);

        r73 = $r89;

        $r91 = new javax.xml.namespace.QName;

        $r66 = virtualinvoke $r44.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r44.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r69 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r91.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r66, $r71);

        r72 = $r91;

     label03:
        $r74 = virtualinvoke $r6.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo addMessagePart(javax.xml.namespace.QName)>(r73);

        $r75 = $r1[i1];

        $r76 = $r10[i1];

        virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)>($r74, $r75, $r76);

        virtualinvoke $r74.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("method.parameters.annotations", $r9);

        $r77 = $r9[i1];

        virtualinvoke $r74.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("parameter.annotations", $r77);

        $r78 = specialinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map getJaxbAnnoMap(org.apache.cxf.service.model.MessagePartInfo)>($r74);

        $i2 = interfaceinvoke $r78.<java.util.Map: int size()>();

        if $i2 <= 0 goto label04;

        $r47 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: void setProperty(java.lang.String,java.lang.Object)>("wrapper.gen.needed", $r47);

     label04:
        $z16 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapped(java.lang.reflect.Method)>(r0);

        if $z16 != 0 goto label05;

        $z19 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isRPC(java.lang.reflect.Method)>(r0);

        if $z19 != 0 goto label05;

        virtualinvoke $r74.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("messagepart.elementName", r72);

     label05:
        $z22 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isHeader(java.lang.reflect.Method,int)>(r0, i1);

        if $z22 == 0 goto label08;

        $r46 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r74.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("messagepart.isheader", $r46);

        $z17 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isRPC(java.lang.reflect.Method)>(r0);

        if $z17 != 0 goto label06;

        $z18 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapped(java.lang.reflect.Method)>(r0);

        if $z18 != 0 goto label07;

     label06:
        virtualinvoke $r74.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>(r72);

        goto label08;

     label07:
        virtualinvoke $r74.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("messagepart.elementName", r72);

     label08:
        virtualinvoke $r74.<org.apache.cxf.service.model.MessagePartInfo: void setIndex(int)>(i1);

     label09:
        i1 = i1 + 1;

        goto label01;

     label10:
        $r12 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event OPERATIONINFO_IN_MESSAGE_SET>;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = r2;

        $r11[1] = r0;

        $r11[2] = $r6;

        virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r12, $r11);

        $z0 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean hasOutMessage(java.lang.reflect.Method)>(r0);

        if $z0 == 0 goto label26;

        $r14 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r2, r0);

        $r15 = <org.apache.cxf.service.model.MessageInfo$Type: org.apache.cxf.service.model.MessageInfo$Type OUTPUT>;

        $r16 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo createMessage(javax.xml.namespace.QName,org.apache.cxf.service.model.MessageInfo$Type)>($r14, $r15);

        r79 = $r16;

        $r17 = virtualinvoke $r16.<org.apache.cxf.service.model.MessageInfo: javax.xml.namespace.QName getName()>();

        $r18 = virtualinvoke $r17.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: void setOutput(java.lang.String,org.apache.cxf.service.model.MessageInfo)>($r18, $r16);

        $r19 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r20 = <java.lang.Void: java.lang.Class TYPE>;

        $z1 = virtualinvoke $r19.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r20);

        if $z1 != 0 goto label15;

        $i7 = (int) -1;

        $r36 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r2, r0, $i7);

        $i9 = (int) -1;

        $r37 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r2, r0, $i9);

        $r38 = virtualinvoke $r16.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo addMessagePart(javax.xml.namespace.QName)>($r36);

        $r39 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r40 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();

        virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)>($r38, $r39, $r40);

        $z9 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isRPC(java.lang.reflect.Method)>(r0);

        if $z9 != 0 goto label11;

        $z12 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapped(java.lang.reflect.Method)>(r0);

        if $z12 != 0 goto label11;

        virtualinvoke $r38.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("messagepart.elementName", $r37);

     label11:
        $r80 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getAnnotations()>();

        virtualinvoke $r38.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("method.return.annotations", $r80);

        virtualinvoke $r38.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("parameter.annotations", $r80);

        $i11 = (int) -1;

        $z23 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isHeader(java.lang.reflect.Method,int)>(r0, $i11);

        if $z23 == 0 goto label14;

        $r41 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r38.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("messagepart.isheader", $r41);

        $z10 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isRPC(java.lang.reflect.Method)>(r0);

        if $z10 != 0 goto label12;

        $z11 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapped(java.lang.reflect.Method)>(r0);

        if $z11 != 0 goto label13;

     label12:
        virtualinvoke $r38.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>($r37);

        goto label14;

     label13:
        virtualinvoke $r38.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("messagepart.elementName", $r37);

     label14:
        virtualinvoke $r38.<org.apache.cxf.service.model.MessagePartInfo: void setIndex(int)>(0);

     label15:
        i3 = 0;

     label16:
        $i4 = lengthof $r1;

        if i3 >= $i4 goto label25;

        $r24 = class "Lorg/apache/cxf/message/Exchange;";

        $r23 = $r1[i3];

        $z2 = virtualinvoke $r24.<java.lang.Object: boolean equals(java.lang.Object)>($r23);

        if $z2 == 0 goto label17;

        goto label24;

     label17:
        $z3 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isOutParam(java.lang.reflect.Method,int)>(r0, i3);

        if $z3 == 0 goto label24;

        if r79 != null goto label18;

        $r34 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r2, r0);

        $r35 = <org.apache.cxf.service.model.MessageInfo$Type: org.apache.cxf.service.model.MessageInfo$Type OUTPUT>;

        r79 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo createMessage(javax.xml.namespace.QName,org.apache.cxf.service.model.MessageInfo$Type)>($r34, $r35);

     label18:
        r81 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r2, r0, i3);

        r82 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r2, r0, i3);

        $z4 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isInParam(java.lang.reflect.Method,int)>(r0, i3);

        if $z4 == 0 goto label19;

        $r27 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r28 = virtualinvoke $r27.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)>(i3);

        r81 = virtualinvoke $r28.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getName()>();

        $r29 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r30 = virtualinvoke $r29.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)>(i3);

        $r31 = virtualinvoke $r30.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.elementName");

        r82 = (javax.xml.namespace.QName) $r31;

        if r82 != null goto label19;

        $r32 = virtualinvoke r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r33 = virtualinvoke $r32.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)>(i3);

        r82 = virtualinvoke $r33.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getElementQName()>();

     label19:
        $r83 = virtualinvoke r79.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo addMessagePart(javax.xml.namespace.QName)>(r81);

        virtualinvoke $r83.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("method.parameters.annotations", $r9);

        $r84 = $r9[i3];

        virtualinvoke $r83.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("parameter.annotations", $r84);

        $r85 = $r1[i3];

        $r86 = $r10[i3];

        virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)>($r83, $r85, $r86);

        $i5 = i3 + 1;

        virtualinvoke $r83.<org.apache.cxf.service.model.MessagePartInfo: void setIndex(int)>($i5);

        $z24 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isRPC(java.lang.reflect.Method)>(r0);

        if $z24 != 0 goto label20;

        $z8 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapped(java.lang.reflect.Method)>(r0);

        if $z8 != 0 goto label20;

        virtualinvoke $r83.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("messagepart.elementName", r82);

     label20:
        $z25 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isInParam(java.lang.reflect.Method,int)>(r0, i3);

        if $z25 == 0 goto label21;

        $r26 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r83.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("messagepart.mode.inout", $r26);

     label21:
        $z5 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isHeader(java.lang.reflect.Method,int)>(r0, i3);

        if $z5 == 0 goto label24;

        $r25 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r83.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("messagepart.isheader", $r25);

        $z6 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isRPC(java.lang.reflect.Method)>(r0);

        if $z6 != 0 goto label22;

        $z7 = virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapped(java.lang.reflect.Method)>(r0);

        if $z7 != 0 goto label23;

     label22:
        virtualinvoke $r83.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>(r82);

        goto label24;

     label23:
        virtualinvoke $r83.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("messagepart.elementName", r82);

     label24:
        i3 = i3 + 1;

        goto label16;

     label25:
        $r22 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event OPERATIONINFO_OUT_MESSAGE_SET>;

        $r21 = newarray (java.lang.Object)[3];

        $r21[0] = r2;

        $r21[1] = r0;

        $r21[2] = r79;

        virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r22, $r21);

     label26:
        specialinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void setParameterOrder(java.lang.reflect.Method,java.lang.Class[],org.apache.cxf.service.model.OperationInfo)>(r0, $r1, r2);

        if $z0 == 0 goto label27;

        virtualinvoke r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeFaults(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r13, r2, r0);

     label27:
        return;
    }

    private void setParameterOrder(java.lang.reflect.Method, java.lang.Class[], org.apache.cxf.service.model.OperationInfo)
    {
        int i0, $i1;
        java.lang.String $r8, $r10;
        java.util.LinkedList $r2;
        java.lang.reflect.Method r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        org.apache.cxf.service.model.OperationInfo r4;
        java.lang.Class[] r3;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.lang.Class $r5, $r6;
        javax.xml.namespace.QName $r7, $r9;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: java.lang.reflect.Method;

        r3 := @parameter1: java.lang.Class[];

        r4 := @parameter2: org.apache.cxf.service.model.OperationInfo;

        $z0 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isRPC(java.lang.reflect.Method)>(r1);

        if $z0 != 0 goto label1;

        $z6 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapped(java.lang.reflect.Method)>(r1);

        if $z6 != 0 goto label7;

     label1:
        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        z7 = 0;

        i0 = 0;

     label2:
        $i1 = lengthof r3;

        if i0 >= $i1 goto label6;

        $r6 = class "Lorg/apache/cxf/message/Exchange;";

        $r5 = r3[i0];

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label3;

        goto label5;

     label3:
        $z3 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isInParam(java.lang.reflect.Method,int)>(r1, i0);

        if $z3 == 0 goto label4;

        $r9 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r4, r1, i0);

        $r10 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r10);

        $z5 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isOutParam(java.lang.reflect.Method,int)>(r1, i0);

        if $z5 == 0 goto label5;

        z7 = 1;

        goto label5;

     label4:
        $z4 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isOutParam(java.lang.reflect.Method,int)>(r1, i0);

        if $z4 == 0 goto label5;

        z7 = 1;

        $r7 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r4, r1, i0);

        $r8 = virtualinvoke $r7.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r8);

     label5:
        i0 = i0 + 1;

        goto label2;

     label6:
        $z1 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label7;

        if z7 == 0 goto label7;

        virtualinvoke r4.<org.apache.cxf.service.model.OperationInfo: void setParameterOrdering(java.util.List)>($r2);

     label7:
        return;
    }

    protected void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method, org.apache.cxf.service.model.MessageInfo)
    {
        java.lang.reflect.Method r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r28, r29;
        org.apache.cxf.service.model.OperationInfo r9;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1, $r5, $r32;
        javax.xml.namespace.QName $r7, $r8, $r11, $r21, $r22, $r24;
        int $i0, i1, i2;
        java.lang.Boolean $r16;
        java.lang.String $r13, $r18, $r26, r27;
        org.apache.cxf.service.model.MessagePartInfo $r4, r15;
        java.util.Iterator $r2, $r6, $r33;
        org.apache.cxf.service.model.MessageInfo r3, $r10, $r20, $r31;
        java.lang.Object $r14, $r17, $r23, $r25;
        java.lang.Class $r19, $r30;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r9 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r12 := @parameter1: java.lang.reflect.Method;

        r3 := @parameter2: org.apache.cxf.service.model.MessageInfo;

        r27 = null;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r25 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r28 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r25;

        $r26 = virtualinvoke r28.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.String getRequestWrapperPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r9, r12);

        r27 = $r26;

        if $r26 == null goto label02;

        goto label03;

     label02:
        goto label01;

     label03:
        if r27 != null goto label04;

        r27 = "parameters";

     label04:
        $r4 = virtualinvoke r3.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo addMessagePart(java.lang.String)>(r27);

        virtualinvoke $r4.<org.apache.cxf.service.model.MessagePartInfo: void setElement(boolean)>(1);

        $r5 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z3 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label07;

        $r23 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r29 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r23;

        $r24 = virtualinvoke r29.<org.apache.cxf.service.factory.AbstractServiceConfiguration: javax.xml.namespace.QName getRequestWrapperName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r9, r12);

        if $r24 == null goto label06;

        virtualinvoke $r4.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>($r24);

     label06:
        goto label05;

     label07:
        $r7 = virtualinvoke $r4.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getElementQName()>();

        if $r7 != null goto label08;

        $r22 = virtualinvoke r3.<org.apache.cxf.service.model.MessageInfo: javax.xml.namespace.QName getName()>();

        virtualinvoke $r4.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>($r22);

        goto label09;

     label08:
        $r8 = virtualinvoke $r4.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getElementQName()>();

        $r10 = virtualinvoke r9.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r11 = virtualinvoke $r10.<org.apache.cxf.service.model.MessageInfo: javax.xml.namespace.QName getName()>();

        $z1 = virtualinvoke $r8.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r11);

        if $z1 != 0 goto label09;

        $r20 = virtualinvoke r9.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r21 = virtualinvoke $r4.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getElementQName()>();

        virtualinvoke $r20.<org.apache.cxf.service.model.MessageInfo: void setName(javax.xml.namespace.QName)>($r21);

     label09:
        $r30 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getRequestWrapper(java.lang.reflect.Method)>(r12);

        if $r30 == null goto label10;

        $r19 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getRequestWrapper(java.lang.reflect.Method)>(r12);

        virtualinvoke $r4.<org.apache.cxf.service.model.MessagePartInfo: void setTypeClass(java.lang.Class)>($r19);

        goto label11;

     label10:
        $r13 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)>(r12);

        if $r13 == null goto label11;

        $r18 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)>(r12);

        virtualinvoke $r4.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("REQUEST.WRAPPER.CLASSNAME", $r18);

     label11:
        i1 = 0;

        i2 = 0;

        $r31 = virtualinvoke r9.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r32 = virtualinvoke $r31.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r33 = interfaceinvoke $r32.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z4 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label15;

        $r14 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        r15 = (org.apache.cxf.service.model.MessagePartInfo) $r14;

        $r16 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r17 = virtualinvoke r15.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.isheader");

        $z2 = virtualinvoke $r16.<java.lang.Boolean: boolean equals(java.lang.Object)>($r17);

        if $z2 == 0 goto label14;

        $i0 = virtualinvoke r15.<org.apache.cxf.service.model.MessagePartInfo: int getIndex()>();

        virtualinvoke r3.<org.apache.cxf.service.model.MessageInfo: void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)>(r15);

        virtualinvoke r15.<org.apache.cxf.service.model.MessagePartInfo: void setIndex(int)>($i0);

        if i2 >= $i0 goto label13;

        i2 = $i0;

     label13:
        if $i0 != i1 goto label14;

        i2 = i2 + 1;

        i1 = i2;

     label14:
        goto label12;

     label15:
        virtualinvoke $r4.<org.apache.cxf.service.model.MessagePartInfo: void setIndex(int)>(i1);

        return;
    }

    protected void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method, org.apache.cxf.service.model.MessageInfo)
    {
        java.lang.reflect.Method r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r33, r35;
        org.apache.cxf.service.model.OperationInfo r3;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1, $r5, $r9, $r38;
        javax.xml.namespace.QName $r11, $r12, $r14, $r23, $r24, $r26;
        int $i0;
        java.lang.Boolean $r18, $r28;
        java.lang.String $r16, $r20, $r31, r32;
        org.apache.cxf.service.model.MessagePartInfo $r8, r34, r40;
        java.util.Iterator $r2, $r6, $r10, $r39;
        org.apache.cxf.service.model.MessageInfo $r4, r7, $r13, $r22, $r37;
        java.lang.Object $r17, $r19, $r25, $r27, $r29, $r30;
        java.lang.Class $r21, $r36;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r3 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r15 := @parameter1: java.lang.reflect.Method;

        r7 := @parameter2: org.apache.cxf.service.model.MessageInfo;

        r32 = null;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r30 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r33 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r30;

        $r31 = virtualinvoke r33.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.String getResponseWrapperPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r3, r15);

        r32 = $r31;

        if $r31 == null goto label02;

        goto label03;

     label02:
        goto label01;

     label03:
        $r4 = virtualinvoke r3.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r5 = virtualinvoke $r4.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z4 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $r27 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r34 = (org.apache.cxf.service.model.MessagePartInfo) $r27;

        $r28 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r29 = virtualinvoke r34.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.isheader");

        $z3 = virtualinvoke $r28.<java.lang.Boolean: boolean equals(java.lang.Object)>($r29);

        if $z3 == 0 goto label05;

        r32 = "result";

        goto label06;

     label05:
        goto label04;

     label06:
        if r32 != null goto label07;

        r32 = "parameters";

     label07:
        $r8 = virtualinvoke r7.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo addMessagePart(java.lang.String)>(r32);

        virtualinvoke $r8.<org.apache.cxf.service.model.MessagePartInfo: void setElement(boolean)>(1);

        virtualinvoke $r8.<org.apache.cxf.service.model.MessagePartInfo: void setIndex(int)>(0);

        $r9 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z5 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label10;

        $r25 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r35 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r25;

        $r26 = virtualinvoke r35.<org.apache.cxf.service.factory.AbstractServiceConfiguration: javax.xml.namespace.QName getResponseWrapperName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r3, r15);

        if $r26 == null goto label09;

        virtualinvoke $r8.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>($r26);

        goto label10;

     label09:
        goto label08;

     label10:
        $r11 = virtualinvoke $r8.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getElementQName()>();

        if $r11 != null goto label11;

        $r24 = virtualinvoke r7.<org.apache.cxf.service.model.MessageInfo: javax.xml.namespace.QName getName()>();

        virtualinvoke $r8.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>($r24);

        goto label12;

     label11:
        $r12 = virtualinvoke $r8.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getElementQName()>();

        $r13 = virtualinvoke r3.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r14 = virtualinvoke $r13.<org.apache.cxf.service.model.MessageInfo: javax.xml.namespace.QName getName()>();

        $z1 = virtualinvoke $r12.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r14);

        if $z1 != 0 goto label12;

        $r22 = virtualinvoke r3.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r23 = virtualinvoke $r8.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getElementQName()>();

        virtualinvoke $r22.<org.apache.cxf.service.model.MessageInfo: void setName(javax.xml.namespace.QName)>($r23);

     label12:
        $r36 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getResponseWrapper(java.lang.reflect.Method)>(r15);

        if $r36 == null goto label13;

        $r21 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getResponseWrapper(java.lang.reflect.Method)>(r15);

        virtualinvoke $r8.<org.apache.cxf.service.model.MessagePartInfo: void setTypeClass(java.lang.Class)>($r21);

        goto label14;

     label13:
        $r16 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)>(r15);

        if $r16 == null goto label14;

        $r20 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)>(r15);

        virtualinvoke $r8.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("RESPONSE.WRAPPER.CLASSNAME", $r20);

     label14:
        $r37 = virtualinvoke r3.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r38 = virtualinvoke $r37.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r39 = interfaceinvoke $r38.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z6 = interfaceinvoke $r39.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label17;

        $r17 = interfaceinvoke $r39.<java.util.Iterator: java.lang.Object next()>();

        r40 = (org.apache.cxf.service.model.MessagePartInfo) $r17;

        $r18 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r19 = virtualinvoke r40.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.isheader");

        $z2 = virtualinvoke $r18.<java.lang.Boolean: boolean equals(java.lang.Object)>($r19);

        if $z2 == 0 goto label16;

        $i0 = virtualinvoke r40.<org.apache.cxf.service.model.MessagePartInfo: int getIndex()>();

        virtualinvoke r7.<org.apache.cxf.service.model.MessageInfo: void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)>(r40);

        virtualinvoke r40.<org.apache.cxf.service.model.MessagePartInfo: void setIndex(int)>($i0);

     label16:
        goto label15;

     label17:
        return;
    }

    private static java.lang.Class createArrayClass(java.lang.reflect.GenericArrayType)
    {
        java.lang.reflect.GenericArrayType r0, $r7;
        java.lang.reflect.ParameterizedType $r2;
        java.lang.reflect.Type $r1, $r3;
        java.lang.Class $r4, $r5, r8, $r10;
        java.lang.Object $r6, $r9;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.reflect.GenericArrayType;

        $r1 = interfaceinvoke r0.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        r8 = null;

        $z0 = $r1 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        r8 = (java.lang.Class) $r1;

        goto label3;

     label1:
        $z1 = $r1 instanceof java.lang.reflect.GenericArrayType;

        if $z1 == 0 goto label2;

        $r7 = (java.lang.reflect.GenericArrayType) $r1;

        r8 = staticinvoke <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class createArrayClass(java.lang.reflect.GenericArrayType)>($r7);

        goto label3;

     label2:
        $z2 = $r1 instanceof java.lang.reflect.ParameterizedType;

        if $z2 == 0 goto label3;

        $r2 = (java.lang.reflect.ParameterizedType) $r1;

        $r3 = interfaceinvoke $r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        r8 = (java.lang.Class) $r3;

        $r4 = class "Ljava/util/List;";

        $z3 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r8);

        if $z3 == 0 goto label3;

        $r5 = staticinvoke <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getClass(java.lang.reflect.Type)>($r1);

        $r6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r5, 0);

        r8 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

     label3:
        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r8, 0);

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        return $r10;
    }

    private static java.lang.Class getClass(java.lang.reflect.Type)
    {
        java.lang.reflect.GenericArrayType $r3;
        java.lang.reflect.ParameterizedType $r1;
        java.lang.reflect.Type r0, $r2;
        java.lang.Class r4;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.reflect.Type;

        r4 = null;

        $z0 = r0 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        r4 = (java.lang.Class) r0;

        goto label3;

     label1:
        $z1 = r0 instanceof java.lang.reflect.GenericArrayType;

        if $z1 == 0 goto label2;

        $r3 = (java.lang.reflect.GenericArrayType) r0;

        r4 = staticinvoke <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class createArrayClass(java.lang.reflect.GenericArrayType)>($r3);

        goto label3;

     label2:
        $z2 = r0 instanceof java.lang.reflect.ParameterizedType;

        if $z2 == 0 goto label3;

        $r1 = (java.lang.reflect.ParameterizedType) r0;

        $r2 = interfaceinvoke $r1.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        r4 = (java.lang.Class) $r2;

     label3:
        return r4;
    }

    protected void initializeParameter(org.apache.cxf.service.model.MessagePartInfo, java.lang.Class, java.lang.reflect.Type)
    {
        org.apache.cxf.service.model.AbstractMessageContainer $r2, $r6, $r32;
        java.util.Map $r22, $r24, $r26, $r28, $r35;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.cxf.service.model.OperationInfo $r3, $r7, $r9;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.lang.reflect.Type $r36, r38;
        javax.xml.namespace.QName $r13, $r16;
        java.lang.Boolean $r4, $r10, $r20, $r33, $r40;
        java.lang.String $r29;
        org.apache.cxf.service.model.MessagePartInfo r1, $r14, $r17;
        java.lang.reflect.GenericDeclaration $r23;
        org.apache.cxf.service.model.UnwrappedOperationInfo $r8;
        org.apache.cxf.service.model.MessageInfo $r12, $r15;
        java.lang.reflect.TypeVariable $r34;
        java.lang.Object $r5, $r11, $r21, $r25, $r27, $r30, $r41;
        java.lang.Class $r18, $r19, r31, r37, $r39;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: org.apache.cxf.service.model.MessagePartInfo;

        r37 := @parameter1: java.lang.Class;

        r38 := @parameter2: java.lang.reflect.Type;

        $z0 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isHolder(java.lang.Class,java.lang.reflect.Type)>(r37, r38);

        if $z0 == 0 goto label1;

        $r36 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)>(r37, r38);

        if $r36 == null goto label1;

        r38 = $r36;

        r37 = staticinvoke <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getClass(java.lang.reflect.Type)>($r36);

     label1:
        $z7 = r38 instanceof java.lang.reflect.TypeVariable;

        if $z7 == 0 goto label3;

        $r22 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map parameterizedTypes>;

        if $r22 != null goto label2;

        specialinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void processParameterizedTypes()>();

     label2:
        $r34 = (java.lang.reflect.TypeVariable) r38;

        $r23 = interfaceinvoke $r34.<java.lang.reflect.TypeVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()>();

        $r24 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map parameterizedTypes>;

        $r25 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23);

        $r35 = (java.util.Map) $r25;

        if $r35 == null goto label3;

        $r26 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map parameterizedTypes>;

        $r27 = interfaceinvoke $r26.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23);

        $r28 = (java.util.Map) $r27;

        $r29 = interfaceinvoke $r34.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        $r30 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>($r29);

        r31 = (java.lang.Class) $r30;

        if r31 == null goto label3;

        r37 = r31;

        r38 = r31;

        $r32 = virtualinvoke r1.<org.apache.cxf.service.model.MessagePartInfo: org.apache.cxf.service.model.AbstractMessageContainer getMessageInfo()>();

        $r33 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r32.<org.apache.cxf.service.model.AbstractMessageContainer: void setProperty(java.lang.String,java.lang.Object)>("parameterized", $r33);

     label3:
        virtualinvoke r1.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("generic.type", r38);

        $r39 = class "Ljava/util/Collection;";

        $z8 = virtualinvoke $r39.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r37);

        if $z8 == 0 goto label4;

        virtualinvoke r1.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("rawclass", r37);

     label4:
        virtualinvoke r1.<org.apache.cxf.service.model.MessagePartInfo: void setTypeClass(java.lang.Class)>(r37);

        $r2 = virtualinvoke r1.<org.apache.cxf.service.model.MessagePartInfo: org.apache.cxf.service.model.AbstractMessageContainer getMessageInfo()>();

        $r3 = virtualinvoke $r2.<org.apache.cxf.service.model.AbstractMessageContainer: org.apache.cxf.service.model.OperationInfo getOperation()>();

        $z1 = virtualinvoke $r3.<org.apache.cxf.service.model.OperationInfo: boolean isUnwrapped()>();

        if $z1 == 0 goto label7;

        $r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r5 = virtualinvoke r1.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.isheader");

        $z2 = virtualinvoke $r4.<java.lang.Boolean: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label7;

        $r6 = virtualinvoke r1.<org.apache.cxf.service.model.MessagePartInfo: org.apache.cxf.service.model.AbstractMessageContainer getMessageInfo()>();

        $r7 = virtualinvoke $r6.<org.apache.cxf.service.model.AbstractMessageContainer: org.apache.cxf.service.model.OperationInfo getOperation()>();

        $r8 = (org.apache.cxf.service.model.UnwrappedOperationInfo) $r7;

        $r9 = virtualinvoke $r8.<org.apache.cxf.service.model.UnwrappedOperationInfo: org.apache.cxf.service.model.OperationInfo getWrappedOperation()>();

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r11 = virtualinvoke r1.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.mode.out");

        $z3 = virtualinvoke $r10.<java.lang.Boolean: boolean equals(java.lang.Object)>($r11);

        if $z3 != 0 goto label5;

        $r20 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r21 = virtualinvoke r1.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.mode.inout");

        $z6 = virtualinvoke $r20.<java.lang.Boolean: boolean equals(java.lang.Object)>($r21);

        if $z6 == 0 goto label6;

     label5:
        $r12 = virtualinvoke $r9.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        $r13 = virtualinvoke r1.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getName()>();

        $r14 = virtualinvoke $r12.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)>($r13);

        if $r14 == null goto label6;

        virtualinvoke $r14.<org.apache.cxf.service.model.MessagePartInfo: void setTypeClass(java.lang.Class)>(r37);

        virtualinvoke $r14.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("generic.type", r38);

        $r19 = class "Ljava/util/Collection;";

        $z5 = virtualinvoke $r19.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r37);

        if $z5 == 0 goto label6;

        virtualinvoke $r14.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("rawclass", r38);

     label6:
        $r40 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r41 = virtualinvoke r1.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("messagepart.mode.out");

        $z9 = virtualinvoke $r40.<java.lang.Boolean: boolean equals(java.lang.Object)>($r41);

        if $z9 != 0 goto label7;

        $r15 = virtualinvoke $r9.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r16 = virtualinvoke r1.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getName()>();

        $r17 = virtualinvoke $r15.<org.apache.cxf.service.model.MessageInfo: org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)>($r16);

        if $r17 == null goto label7;

        virtualinvoke $r17.<org.apache.cxf.service.model.MessagePartInfo: void setTypeClass(java.lang.Class)>(r37);

        virtualinvoke $r17.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("generic.type", r38);

        $r18 = class "Ljava/util/Collection;";

        $z4 = virtualinvoke $r18.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r37);

        if $z4 == 0 goto label7;

        virtualinvoke $r17.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>("rawclass", r38);

     label7:
        return;
    }

    public javax.xml.namespace.QName getServiceQName()
    {
        javax.xml.namespace.QName $r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getServiceQName(boolean)>(1);

        return $r1;
    }

    public javax.xml.namespace.QName getServiceQName(boolean)
    {
        javax.xml.namespace.QName $r1, $r2, $r5;
        java.lang.String $r3, $r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName serviceName>;

        if $r1 != null goto label1;

        if z0 == 0 goto label1;

        $r2 = new javax.xml.namespace.QName;

        $r3 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String getServiceNamespace()>();

        $r4 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String getServiceName()>();

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r3, $r4);

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName serviceName> = $r2;

     label1:
        $r5 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName serviceName>;

        return $r5;
    }

    public javax.xml.namespace.QName getEndpointName()
    {
        javax.xml.namespace.QName $r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getEndpointName(boolean)>(1);

        return $r1;
    }

    public javax.xml.namespace.QName getEndpointName(boolean)
    {
        java.lang.IllegalStateException $r5;
        java.util.Iterator $r4;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r7;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r3;
        java.lang.Object $r6;
        javax.xml.namespace.QName $r1, $r2, $r8;
        boolean z0, $z1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName endpointName>;

        if $r1 != null goto label1;

        if z0 != 0 goto label2;

     label1:
        $r2 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName endpointName>;

        return $r2;

     label2:
        $r3 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r6;

        $r8 = virtualinvoke r7.<org.apache.cxf.service.factory.AbstractServiceConfiguration: javax.xml.namespace.QName getEndpointName()>();

        if $r8 == null goto label4;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName endpointName> = $r8;

        return $r8;

     label4:
        goto label3;

     label5:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ServiceConfiguration must provide a value!");

        throw $r5;
    }

    public org.apache.cxf.service.model.EndpointInfo getEndpointInfo()
    {
        org.apache.cxf.service.model.EndpointInfo $r3;
        org.apache.cxf.service.Service $r1;
        javax.xml.namespace.QName $r2;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r2 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getEndpointName()>();

        $r3 = interfaceinvoke $r1.<org.apache.cxf.service.Service: org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)>($r2);

        return $r3;
    }

    public void setEndpointName(javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: javax.xml.namespace.QName;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName endpointName> = r1;

        return;
    }

    protected java.lang.String getServiceName()
    {
        java.lang.IllegalStateException $r3;
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r5;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Object $r4;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r4;

        $r6 = virtualinvoke r5.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.String getServiceName()>();

        if $r6 == null goto label2;

        return $r6;

     label2:
        goto label1;

     label3:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ServiceConfiguration must provide a value!");

        throw $r3;
    }

    protected java.lang.String getServiceNamespace()
    {
        java.lang.IllegalStateException $r4;
        java.util.Iterator $r3;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r6;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r2;
        java.lang.Object $r5;
        javax.xml.namespace.QName $r1, $r8;
        java.lang.String $r7, $r9;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName serviceName>;

        if $r1 == null goto label1;

        $r8 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName serviceName>;

        $r9 = virtualinvoke $r8.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        return $r9;

     label1:
        $r2 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r5;

        $r7 = virtualinvoke r6.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.String getServiceNamespace()>();

        if $r7 == null goto label3;

        return $r7;

     label3:
        goto label2;

     label4:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ServiceConfiguration must provide a value!");

        throw $r4;
    }

    public javax.xml.namespace.QName getInterfaceName()
    {
        java.lang.IllegalStateException $r3;
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r5;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Object $r4;
        javax.xml.namespace.QName $r6;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r4;

        $r6 = virtualinvoke r5.<org.apache.cxf.service.factory.AbstractServiceConfiguration: javax.xml.namespace.QName getInterfaceName()>();

        if $r6 == null goto label2;

        return $r6;

     label2:
        goto label1;

     label3:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ServiceConfiguration must provide a value!");

        throw $r3;
    }

    protected boolean isValidMethod(java.lang.reflect.Method)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Boolean $r6;
        java.lang.Object $r3;
        java.lang.reflect.Method r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: java.lang.reflect.Method;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r6 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.Boolean isOperation(java.lang.reflect.Method)>(r5);

        if $r6 == null goto label2;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public boolean isHolder(java.lang.Class, java.lang.reflect.Type)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.reflect.Type r6;
        java.lang.Boolean $r7;
        java.lang.Object $r3;
        java.lang.Class r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: java.lang.Class;

        r6 := @parameter1: java.lang.reflect.Type;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r7 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.Boolean isHolder(java.lang.Class,java.lang.reflect.Type)>(r5, r6);

        if $r7 == null goto label2;

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public java.lang.reflect.Type getHolderType(java.lang.Class, java.lang.reflect.Type)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.reflect.Type r6, $r7;
        java.lang.Object $r3;
        java.lang.Class r5;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: java.lang.Class;

        r6 := @parameter1: java.lang.reflect.Type;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r7 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)>(r5, r6);

        if $r7 == null goto label2;

        return $r7;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected boolean isWrapped(java.lang.reflect.Method)
    {
        java.util.Map $r2, $r7, $r11, $r13;
        java.lang.Boolean $r6, $r10, $r12, r14;
        java.lang.reflect.Method r1;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r5;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r9;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r4;
        java.lang.Object $r3, $r8;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: java.lang.reflect.Method;

        $r2 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map wrappedCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r14 = (java.lang.Boolean) $r3;

        if r14 != null goto label5;

        $z1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isRPC(java.lang.reflect.Method)>(r1);

        if $z1 == 0 goto label1;

        $r13 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map wrappedCache>;

        $r12 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r12);

        return 0;

     label1:
        $r4 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r8 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r8;

        $r10 = virtualinvoke r9.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.Boolean isWrapped(java.lang.reflect.Method)>(r1);

        if $r10 == null goto label3;

        $r11 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map wrappedCache>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10);

        $z3 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        return $z3;

     label3:
        goto label2;

     label4:
        $r7 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map wrappedCache>;

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        return 1;

     label5:
        $z0 = virtualinvoke r14.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    protected boolean isMatchOperation(java.lang.String, java.lang.String)
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r6;
        int $i0, $i1;
        java.lang.String r0, $r1, r2, $r3, $r4, $r5;
        boolean $z0, $z1, z2;

        r6 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z2 = 0;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(1, $i1);

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label1;

        z2 = 1;

     label1:
        return z2;
    }

    protected boolean isOutParam(java.lang.reflect.Method, int)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        int i0;
        java.lang.Boolean $r6;
        java.lang.Object $r3;
        java.lang.reflect.Method r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: java.lang.reflect.Method;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r6 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.Boolean isOutParam(java.lang.reflect.Method,int)>(r5, i0);

        if $r6 == null goto label2;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label2:
        goto label1;

     label3:
        return 1;
    }

    protected boolean isInParam(java.lang.reflect.Method, int)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        int i0;
        java.lang.Boolean $r6;
        java.lang.Object $r3;
        java.lang.reflect.Method r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: java.lang.reflect.Method;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r6 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.Boolean isInParam(java.lang.reflect.Method,int)>(r5, i0);

        if $r6 == null goto label2;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label2:
        goto label1;

     label3:
        return 1;
    }

    protected javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method)
    {
        java.lang.IllegalStateException $r3;
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r5;
        org.apache.cxf.service.model.OperationInfo r6;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Object $r4;
        javax.xml.namespace.QName $r8;
        java.lang.reflect.Method r7;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r6 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r7 := @parameter1: java.lang.reflect.Method;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r4;

        $r8 = virtualinvoke r5.<org.apache.cxf.service.factory.AbstractServiceConfiguration: javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r6, r7);

        if $r8 == null goto label2;

        return $r8;

     label2:
        goto label1;

     label3:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ServiceConfiguration must provide a value!");

        throw $r3;
    }

    protected javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method)
    {
        java.lang.IllegalStateException $r3;
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r5;
        org.apache.cxf.service.model.OperationInfo r6;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Object $r4;
        javax.xml.namespace.QName $r8;
        java.lang.reflect.Method r7;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r6 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r7 := @parameter1: java.lang.reflect.Method;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r4;

        $r8 = virtualinvoke r5.<org.apache.cxf.service.factory.AbstractServiceConfiguration: javax.xml.namespace.QName getOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r6, r7);

        if $r8 == null goto label2;

        return $r8;

     label2:
        goto label1;

     label3:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ServiceConfiguration must provide a value!");

        throw $r3;
    }

    protected boolean hasOutMessage(java.lang.reflect.Method)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Boolean $r6;
        java.lang.Object $r3;
        java.lang.reflect.Method r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: java.lang.reflect.Method;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r6 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.Boolean hasOutMessage(java.lang.reflect.Method)>(r5);

        if $r6 == null goto label2;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label2:
        goto label1;

     label3:
        return 1;
    }

    protected void initializeFaults(org.apache.cxf.service.model.InterfaceInfo, org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method)
    {
        org.apache.cxf.service.model.InterfaceInfo r5;
        org.apache.cxf.service.model.OperationInfo r6;
        java.lang.Class[] $r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r4;
        int $i0, i1;
        java.lang.Class r2, $r3;
        java.lang.reflect.Method r0;
        boolean $z0, $z1, $z2;

        r4 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: org.apache.cxf.service.model.InterfaceInfo;

        r6 := @parameter1: org.apache.cxf.service.model.OperationInfo;

        r0 := @parameter2: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label4;

        r2 = $r1[i1];

        $r3 = class "Lorg/apache/cxf/interceptor/Fault;";

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/RuntimeException;");

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Throwable;");

        if $z2 == 0 goto label2;

        goto label3;

     label2:
        virtualinvoke r4.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)>(r5, r6, r2);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    protected void initializeDefaultInterceptors()
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        specialinvoke r0.<org.apache.cxf.service.factory.AbstractServiceFactoryBean: void initializeDefaultInterceptors()>();

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void initializeFaultInterceptors()>();

        return;
    }

    protected void initializeFaultInterceptors()
    {
        java.util.List $r2;
        org.apache.cxf.service.Service $r1;
        org.apache.cxf.interceptor.FaultOutInterceptor $r3;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.Service getService()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.service.Service: java.util.List getOutFaultInterceptors()>();

        $r3 = new org.apache.cxf.interceptor.FaultOutInterceptor;

        specialinvoke $r3.<org.apache.cxf.interceptor.FaultOutInterceptor: void <init>()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    protected org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo, org.apache.cxf.service.model.OperationInfo, java.lang.Class)
    {
        java.lang.Object[] $r21;
        org.apache.cxf.service.model.FaultInfo $r14;
        java.lang.String $r10, $r13, $r16, $r18, $r19, $r24, r25;
        org.apache.cxf.service.model.MessagePartInfo $r20;
        boolean $z0;
        java.util.Iterator $r4;
        org.apache.cxf.service.model.InterfaceInfo r5;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r26;
        org.apache.cxf.service.model.OperationInfo r6;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r3;
        org.apache.cxf.service.factory.FactoryBeanListener$Event $r22;
        java.lang.Class r1, $r2, $r15;
        java.lang.Object $r23;
        javax.xml.namespace.QName $r7, $r8, $r9, $r11, $r12, $r17;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: org.apache.cxf.service.model.InterfaceInfo;

        r6 := @parameter1: org.apache.cxf.service.model.OperationInfo;

        r1 := @parameter2: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getBeanClass(java.lang.Class)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        r25 = null;

        $r3 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r23 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r26 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r23;

        $r24 = virtualinvoke r26.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.String getFaultMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)>(r6, r1, $r2);

        r25 = $r24;

        if $r24 == null goto label3;

        goto label4;

     label3:
        goto label2;

     label4:
        if r25 != null goto label5;

        r25 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

     label5:
        $r7 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)>(r5, r6, r1, $r2);

        $r8 = new javax.xml.namespace.QName;

        $r9 = virtualinvoke r6.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        $r10 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        specialinvoke $r8.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r10, r25);

        $r11 = new javax.xml.namespace.QName;

        $r12 = virtualinvoke r6.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        $r13 = virtualinvoke $r12.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        specialinvoke $r11.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r13, r25);

        $r14 = virtualinvoke r6.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)>($r8, $r11);

        $r15 = class "Ljava/lang/Class;";

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r14.<org.apache.cxf.service.model.FaultInfo: void setProperty(java.lang.String,java.lang.Object)>($r16, r1);

        virtualinvoke $r14.<org.apache.cxf.service.model.FaultInfo: void setProperty(java.lang.String,java.lang.Object)>("elementName", $r7);

        $r17 = new javax.xml.namespace.QName;

        $r18 = virtualinvoke $r7.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r19 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        specialinvoke $r17.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r18, $r19);

        $r20 = virtualinvoke $r14.<org.apache.cxf.service.model.FaultInfo: org.apache.cxf.service.model.MessagePartInfo addMessagePart(javax.xml.namespace.QName)>($r17);

        virtualinvoke $r20.<org.apache.cxf.service.model.MessagePartInfo: void setElementQName(javax.xml.namespace.QName)>($r7);

        virtualinvoke $r20.<org.apache.cxf.service.model.MessagePartInfo: void setTypeClass(java.lang.Class)>($r2);

        $r22 = <org.apache.cxf.service.factory.FactoryBeanListener$Event: org.apache.cxf.service.factory.FactoryBeanListener$Event OPERATIONINFO_FAULT>;

        $r21 = newarray (java.lang.Object)[3];

        $r21[0] = r6;

        $r21[1] = r1;

        $r21[2] = $r14;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])>($r22, $r21);

        return $r14;
    }

    protected void createFaultForException(java.lang.Class, org.apache.cxf.service.model.FaultInfo)
    {
        int i0, i1;
        org.apache.cxf.service.model.FaultInfo r2;
        java.lang.String $r5, $r8, $r12, $r13, $r16;
        org.apache.cxf.service.model.MessagePartInfo $r6, $r14;
        java.lang.reflect.Field r9;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r18;
        java.lang.reflect.Field[] $r1;
        java.lang.Class r0, $r7, $r15, $r17;
        javax.xml.namespace.QName $r3, $r4, $r10, $r11;

        r18 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r0 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.cxf.service.model.FaultInfo;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r9 = $r1[i1];

        $r10 = new javax.xml.namespace.QName;

        $r11 = virtualinvoke r2.<org.apache.cxf.service.model.FaultInfo: javax.xml.namespace.QName getName()>();

        $r12 = virtualinvoke $r11.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r13 = virtualinvoke r9.<java.lang.reflect.Field: java.lang.String getName()>();

        specialinvoke $r10.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r12, $r13);

        $r14 = virtualinvoke r2.<org.apache.cxf.service.model.FaultInfo: org.apache.cxf.service.model.MessagePartInfo addMessagePart(javax.xml.namespace.QName)>($r10);

        $r15 = class "Ljava/lang/Class;";

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        $r17 = virtualinvoke r9.<java.lang.reflect.Field: java.lang.Class getType()>();

        virtualinvoke $r14.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>($r16, $r17);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = new javax.xml.namespace.QName;

        $r4 = virtualinvoke r2.<org.apache.cxf.service.model.FaultInfo: javax.xml.namespace.QName getName()>();

        $r5 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r5, "message");

        $r6 = virtualinvoke r2.<org.apache.cxf.service.model.FaultInfo: org.apache.cxf.service.model.MessagePartInfo addMessagePart(javax.xml.namespace.QName)>($r3);

        $r7 = class "Ljava/lang/Class;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r6.<org.apache.cxf.service.model.MessagePartInfo: void setProperty(java.lang.String,java.lang.Object)>($r8, class "Ljava/lang/String;");

        return;
    }

    protected java.lang.Class getBeanClass(java.lang.Class)
    {
        java.lang.NoSuchMethodException $r6;
        java.lang.Class[] $r3;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r10;
        java.lang.Class r0, $r1, $r2, $r5;
        java.lang.SecurityException $r8;
        org.apache.cxf.service.factory.ServiceConstructionException $r7, $r9;
        java.lang.reflect.Method $r4;
        boolean $z0, $z1;

        r10 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r0 := @parameter0: java.lang.Class;

        $r1 = class "Ljava/rmi/RemoteException;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = class "Lorg/apache/cxf/interceptor/FaultOutInterceptor$FaultInfoException;";

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 == 0 goto label6;

     label2:
        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getFaultInfo", $r3);

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

     label3:
        return $r5;

     label4:
        $r8 := @caughtexception;

        $r9 = new org.apache.cxf.service.factory.ServiceConstructionException;

        specialinvoke $r9.<org.apache.cxf.service.factory.ServiceConstructionException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label5:
        $r6 := @caughtexception;

        $r7 = new org.apache.cxf.service.factory.ServiceConstructionException;

        specialinvoke $r7.<org.apache.cxf.service.factory.ServiceConstructionException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label6:
        return r0;

        catch java.lang.SecurityException from label2 to label3 with label4;
        catch java.lang.NoSuchMethodException from label2 to label3 with label5;
    }

    protected javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo, org.apache.cxf.service.model.OperationInfo, java.lang.Class, java.lang.Class)
    {
        java.lang.IllegalStateException $r3;
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r5;
        org.apache.cxf.service.model.InterfaceInfo r6;
        org.apache.cxf.service.model.OperationInfo r7;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Object $r4;
        java.lang.Class r8, r9;
        javax.xml.namespace.QName $r10;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r6 := @parameter0: org.apache.cxf.service.model.InterfaceInfo;

        r7 := @parameter1: org.apache.cxf.service.model.OperationInfo;

        r8 := @parameter2: java.lang.Class;

        r9 := @parameter3: java.lang.Class;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r4;

        $r10 = virtualinvoke r5.<org.apache.cxf.service.factory.AbstractServiceConfiguration: javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)>(r6, r7, r8, r9);

        if $r10 == null goto label2;

        return $r10;

     label2:
        goto label1;

     label3:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ServiceConfiguration must provide a value!");

        throw $r3;
    }

    protected java.lang.String getAction(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        org.apache.cxf.service.model.OperationInfo r5;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String $r7;
        java.lang.reflect.Method r6;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r6 := @parameter1: java.lang.reflect.Method;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r7 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)>(r5, r6);

        if $r7 == null goto label2;

        return $r7;

     label2:
        goto label1;

     label3:
        return "";
    }

    public boolean isHeader(java.lang.reflect.Method, int)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        int i0;
        java.lang.Boolean $r6;
        java.lang.Object $r3;
        java.lang.reflect.Method r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: java.lang.reflect.Method;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r6 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.Boolean isHeader(java.lang.reflect.Method,int)>(r5, i0);

        if $r6 == null goto label2;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label2:
        goto label1;

     label3:
        return 1;
    }

    protected javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo, java.lang.reflect.Method)
    {
        java.lang.IllegalStateException $r3;
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r5;
        org.apache.cxf.service.model.InterfaceInfo r6;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Object $r4;
        javax.xml.namespace.QName $r8;
        java.lang.reflect.Method r7;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r6 := @parameter0: org.apache.cxf.service.model.InterfaceInfo;

        r7 := @parameter1: java.lang.reflect.Method;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r4;

        $r8 = virtualinvoke r5.<org.apache.cxf.service.factory.AbstractServiceConfiguration: javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)>(r6, r7);

        if $r8 == null goto label2;

        return $r8;

     label2:
        goto label1;

     label3:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ServiceConfiguration must provide a value!");

        throw $r3;
    }

    protected boolean isAsync(java.lang.reflect.Method)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Boolean $r6;
        java.lang.Object $r3;
        java.lang.reflect.Method r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: java.lang.reflect.Method;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r6 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.Boolean isAsync(java.lang.reflect.Method)>(r5);

        if $r6 == null goto label2;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label2:
        goto label1;

     label3:
        return 1;
    }

    protected javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method, int)
    {
        java.lang.IllegalStateException $r10;
        java.util.Iterator $r3;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r6;
        org.apache.cxf.service.model.OperationInfo r7;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r2;
        int i0, $i2;
        java.lang.Object $r5;
        javax.xml.namespace.QName $r8, $r9;
        java.lang.reflect.Method r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r7 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r1 := @parameter1: java.lang.reflect.Method;

        i0 := @parameter2: int;

        $i2 = (int) -1;

        if i0 != $i2 goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapped(java.lang.reflect.Method)>(r1);

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isHeader(java.lang.reflect.Method,int)>(r1, i0);

        if $z1 != 0 goto label2;

        $r9 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r7, r1, i0);

        return $r9;

     label2:
        $r2 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r5;

        $r8 = virtualinvoke r6.<org.apache.cxf.service.factory.AbstractServiceConfiguration: javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r7, r1, i0);

        if $r8 == null goto label4;

        return $r8;

     label4:
        goto label3;

     label5:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ServiceConfiguration must provide a value!");

        throw $r10;
    }

    protected javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method, int)
    {
        java.lang.IllegalStateException $r9;
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r5;
        org.apache.cxf.service.model.OperationInfo r6;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        int i0, $i2;
        java.lang.Object $r4;
        javax.xml.namespace.QName $r8;
        java.lang.reflect.Method r7;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r6 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r7 := @parameter1: java.lang.reflect.Method;

        i0 := @parameter2: int;

        $i2 = (int) -1;

        if i0 != $i2 goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r4;

        $r8 = virtualinvoke r5.<org.apache.cxf.service.factory.AbstractServiceConfiguration: javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r6, r7, i0);

        if $r8 == null goto label3;

        return $r8;

     label3:
        goto label2;

     label4:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ServiceConfiguration must provide a value!");

        throw $r9;
    }

    protected javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method, int)
    {
        java.lang.IllegalStateException $r3;
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r5;
        org.apache.cxf.service.model.OperationInfo r6;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        int i0;
        java.lang.Object $r4;
        javax.xml.namespace.QName $r8;
        java.lang.reflect.Method r7;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r6 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r7 := @parameter1: java.lang.reflect.Method;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r4;

        $r8 = virtualinvoke r5.<org.apache.cxf.service.factory.AbstractServiceConfiguration: javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r6, r7, i0);

        if $r8 == null goto label2;

        return $r8;

     label2:
        goto label1;

     label3:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ServiceConfiguration must provide a value!");

        throw $r3;
    }

    protected javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method, int)
    {
        java.lang.IllegalStateException $r4;
        java.util.Iterator $r3;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r6;
        org.apache.cxf.service.model.OperationInfo r7;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r2;
        int i0;
        java.lang.Object $r5;
        javax.xml.namespace.QName $r8, $r9;
        java.lang.reflect.Method r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r7 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r1 := @parameter1: java.lang.reflect.Method;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapped(java.lang.reflect.Method)>(r1);

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r7, r1, i0);

        return $r9;

     label1:
        $r2 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r5;

        $r8 = virtualinvoke r6.<org.apache.cxf.service.factory.AbstractServiceConfiguration: javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r7, r1, i0);

        if $r8 == null goto label3;

        return $r8;

     label3:
        goto label2;

     label4:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ServiceConfiguration must provide a value!");

        throw $r4;
    }

    protected java.lang.Class getResponseWrapper(java.lang.reflect.Method)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.Class $r6;
        java.lang.reflect.Method r5;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: java.lang.reflect.Method;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r6 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.Class getResponseWrapper(java.lang.reflect.Method)>(r5);

        if $r6 == null goto label2;

        return $r6;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String $r6;
        java.lang.reflect.Method r5;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: java.lang.reflect.Method;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r6 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)>(r5);

        if $r6 == null goto label2;

        return $r6;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected java.lang.Class getRequestWrapper(java.lang.reflect.Method)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.Class $r6;
        java.lang.reflect.Method r5;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: java.lang.reflect.Method;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r6 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.Class getRequestWrapper(java.lang.reflect.Method)>(r5);

        if $r6 == null goto label2;

        return $r6;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String $r6;
        java.lang.reflect.Method r5;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: java.lang.reflect.Method;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r6 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)>(r5);

        if $r6 == null goto label2;

        return $r6;

     label2:
        goto label1;

     label3:
        return null;
    }

    public boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Boolean $r6;
        java.lang.Object $r3;
        org.apache.cxf.service.model.MessagePartInfo r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: org.apache.cxf.service.model.MessagePartInfo;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r6 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.Boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)>(r5);

        if $r6 == null goto label2;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Boolean $r6;
        java.lang.Object $r3;
        org.apache.cxf.service.model.MessagePartInfo r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: org.apache.cxf.service.model.MessagePartInfo;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r6 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.Boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)>(r5);

        if $r6 == null goto label2;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        long $l0;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Long $r6;
        java.lang.Object $r3;
        org.apache.cxf.service.model.MessagePartInfo r5;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: org.apache.cxf.service.model.MessagePartInfo;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r6 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.Long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)>(r5);

        if $r6 == null goto label2;

        $l0 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        return $l0;

     label2:
        goto label1;

     label3:
        return 1L;
    }

    public long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)
    {
        java.util.Iterator $r2;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r4;
        long $l0;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r1;
        java.lang.Long $r6;
        java.lang.Object $r3;
        org.apache.cxf.service.model.MessagePartInfo r5;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r5 := @parameter0: org.apache.cxf.service.model.MessagePartInfo;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r3;

        $r6 = virtualinvoke r4.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.Long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)>(r5);

        if $r6 == null goto label2;

        $l0 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        return $l0;

     label2:
        goto label1;

     label3:
        return 1L;
    }

    public org.apache.cxf.service.invoker.MethodDispatcher getMethodDispatcher()
    {
        org.apache.cxf.service.invoker.MethodDispatcher $r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.invoker.MethodDispatcher methodDispatcher>;

        return $r1;
    }

    protected void setMethodDispatcher(org.apache.cxf.service.invoker.MethodDispatcher)
    {
        org.apache.cxf.service.invoker.MethodDispatcher r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: org.apache.cxf.service.invoker.MethodDispatcher;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.invoker.MethodDispatcher methodDispatcher> = r1;

        return;
    }

    public java.util.List getConfigurations()
    {
        java.util.List $r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        return $r1;
    }

    public void setConfigurations(java.util.List)
    {
        java.util.List r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations> = r1;

        return;
    }

    public java.lang.Class getServiceClass()
    {
        java.lang.Class $r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class serviceClass>;

        return $r1;
    }

    private void processParameterizedTypes()
    {
        java.util.HashMap $r1;
        int $i0, i1;
        boolean $z0;
        java.lang.Class[] $r4;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.lang.reflect.ParameterizedType $r13;
        java.lang.reflect.Type $r10, $r11;
        java.lang.reflect.Type[] $r6;
        java.lang.Class $r2, $r3, $r5, $r7, $r8, $r9, $r12, $r14;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map parameterizedTypes> = $r1;

        $r2 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class serviceClass>;

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label1;

        $r14 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class serviceClass>;

        $r13 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.reflect.ParameterizedType serviceType>;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void processTypes(java.lang.Class,java.lang.reflect.Type)>($r14, $r13);

        goto label4;

     label1:
        $r3 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class serviceClass>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $r5 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class serviceClass>;

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>();

        i1 = 0;

     label2:
        $i0 = lengthof $r4;

        if i1 >= $i0 goto label3;

        $r12 = $r4[i1];

        $r11 = $r6[i1];

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void processTypes(java.lang.Class,java.lang.reflect.Type)>($r12, $r11);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r7 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class serviceClass>;

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r9 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class serviceClass>;

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void processTypes(java.lang.Class,java.lang.reflect.Type)>($r8, $r10);

     label4:
        return;
    }

    protected void processTypes(java.lang.Class, java.lang.reflect.Type)
    {
        java.util.HashMap $r3;
        java.util.Map $r5;
        int $i0, i1;
        java.lang.String $r11;
        boolean $z0, $z1;
        java.lang.reflect.TypeVariable r10;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r4;
        java.lang.reflect.ParameterizedType r1;
        java.lang.reflect.Type r0, $r2, r9;
        java.lang.reflect.TypeVariable[] $r8;
        java.lang.reflect.Type[] $r6;
        java.lang.Class r7, $r12;

        r4 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r7 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.reflect.Type;

        $z0 = r0 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label3;

        r1 = (java.lang.reflect.ParameterizedType) r0;

        $r2 = interfaceinvoke r1.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r5 = r4.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map parameterizedTypes>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r6 = interfaceinvoke r1.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r8 = virtualinvoke r7.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r6;

        if i1 >= $i0 goto label3;

        r9 = $r6[i1];

        r10 = $r8[i1];

        $z1 = r9 instanceof java.lang.Class;

        if $z1 == 0 goto label2;

        $r11 = interfaceinvoke r10.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        $r12 = (java.lang.Class) r9;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void setServiceType(java.lang.reflect.ParameterizedType)
    {
        java.lang.reflect.ParameterizedType r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: java.lang.reflect.ParameterizedType;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.reflect.ParameterizedType serviceType> = r1;

        return;
    }

    public void setServiceClass(java.lang.Class)
    {
        java.lang.Class r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: java.lang.Class;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class serviceClass> = r1;

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void checkServiceClassAnnotations(java.lang.Class)>(r1);

        return;
    }

    protected void checkServiceClassAnnotations(java.lang.Class)
    {
        java.lang.reflect.Method[] $r4;
        java.lang.reflect.Method r27;
        boolean $z0, $z1, $z2, $z3;
        java.util.logging.Logger $r12, $r21;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.lang.'annotation'.Annotation r6, r26;
        java.lang.'annotation'.Annotation[] $r2, $r5;
        java.util.logging.Level $r13, $r22;
        int i0, $i1, i2, i3, i4, i5;
        java.lang.String $r9, $r10, $r14, $r15, $r18, $r19, $r23, $r24;
        java.lang.Package $r8, $r17;
        java.lang.Class $r1, $r3, $r7, $r11, $r16, $r20, r25;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r25 := @parameter0: java.lang.Class;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class serviceClass>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()>();

        if $r2 == null goto label04;

        i2 = lengthof $r2;

        i3 = 0;

     label01:
        if i3 >= i2 goto label04;

        r26 = $r2[i3];

        $r16 = interfaceinvoke r26.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.Package getPackage()>();

        $r18 = virtualinvoke $r17.<java.lang.Package: java.lang.String getName()>();

        $r19 = "javax.xml.ws";

        $z2 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z2 != 0 goto label02;

        $r24 = "javax.jws";

        $z3 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z3 == 0 goto label03;

     label02:
        $r21 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r22 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r20 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class serviceClass>;

        $r23 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r21.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r22, "JAXWS_ANNOTATION_FOUND", $r23);

        return;

     label03:
        i3 = i3 + 1;

        goto label01;

     label04:
        $r3 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class serviceClass>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $i1 = lengthof $r4;

        i4 = 0;

     label05:
        if i4 >= $i1 goto label10;

        r27 = $r4[i4];

        $r5 = virtualinvoke r27.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getAnnotations()>();

        if $r5 == null goto label09;

        i0 = lengthof $r5;

        i5 = 0;

     label06:
        if i5 >= i0 goto label09;

        r6 = $r5[i5];

        $r7 = interfaceinvoke r6.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Package getPackage()>();

        $r9 = virtualinvoke $r8.<java.lang.Package: java.lang.String getName()>();

        $r10 = "javax.xml.ws";

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label07;

        $r15 = "javax.jws";

        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label08;

     label07:
        $r12 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r13 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r11 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class serviceClass>;

        $r14 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r12.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r13, "JAXWS_ANNOTATION_FOUND", $r14);

        return;

     label08:
        i5 = i5 + 1;

        goto label06;

     label09:
        i4 = i4 + 1;

        goto label05;

     label10:
        return;
    }

    public java.lang.String getWsdlURL()
    {
        org.apache.cxf.Bus $r7, $r8;
        java.net.URL $r12;
        org.apache.cxf.endpoint.ServiceContractResolverRegistry r22;
        java.util.logging.Level $r19;
        java.lang.String $r1, $r4, $r5, $r6, $r13, $r15, $r16, $r23, $r24;
        java.net.URI $r11;
        boolean $z0;
        java.util.Iterator $r3;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r21;
        java.net.MalformedURLException $r17;
        java.util.logging.Logger $r18;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r2;
        java.lang.Object $r9, $r14;
        javax.xml.namespace.QName $r10, $r20;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String wsdlURL>;

        if $r1 != null goto label8;

        $r2 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r14 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r21 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r14;

        $r15 = virtualinvoke r21.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.String getWsdlURL()>();

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String wsdlURL> = $r15;

        $r16 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String wsdlURL>;

        if $r16 == null goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        $r4 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String wsdlURL>;

        if null != $r4 goto label7;

        $r7 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.Bus getBus()>();

        if $r7 == null goto label7;

        $r8 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.Bus getBus()>();

        $r9 = interfaceinvoke $r8.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/ServiceContractResolverRegistry;");

        r22 = (org.apache.cxf.endpoint.ServiceContractResolverRegistry) $r9;

        if null == r22 goto label7;

        $r10 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getServiceQName()>();

        $r11 = interfaceinvoke r22.<org.apache.cxf.endpoint.ServiceContractResolverRegistry: java.net.URI getContractLocation(javax.xml.namespace.QName)>($r10);

        if null == $r11 goto label7;

     label4:
        $r12 = virtualinvoke $r11.<java.net.URI: java.net.URL toURL()>();

        $r13 = virtualinvoke $r12.<java.net.URL: java.lang.String toString()>();

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String wsdlURL> = $r13;

     label5:
        goto label7;

     label6:
        $r17 := @caughtexception;

        $r18 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r19 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r20 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName getServiceQName()>();

        virtualinvoke $r18.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r19, "resolve qname failed", $r20);

     label7:
        $r23 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String wsdlURL>;

        if $r23 == null goto label8;

        $r5 = new java.lang.String;

        $r6 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String wsdlURL>;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>($r6);

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String wsdlURL> = $r5;

     label8:
        $r24 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String wsdlURL>;

        return $r24;

        catch java.net.MalformedURLException from label4 to label5 with label6;
    }

    public void setWsdlURL(java.lang.String)
    {
        java.lang.String $r1, r2;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r2 := @parameter0: java.lang.String;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(r2);

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String wsdlURL> = $r1;

        return;
    }

    public void setWsdlURL(java.net.URL)
    {
        java.lang.String $r2;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.net.URL r1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: java.net.URL;

        $r2 = virtualinvoke r1.<java.net.URL: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: void setWsdlURL(java.lang.String)>($r2);

        return;
    }

    public java.util.List getServiceConfigurations()
    {
        java.util.List $r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        return $r1;
    }

    public void setServiceConfigurations(java.util.List)
    {
        java.util.List r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations> = r1;

        return;
    }

    public void setServiceName(javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: javax.xml.namespace.QName;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: javax.xml.namespace.QName serviceName> = r1;

        return;
    }

    public org.apache.cxf.service.invoker.Invoker getInvoker()
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        org.apache.cxf.service.invoker.Invoker $r1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.invoker.Invoker invoker>;

        return $r1;
    }

    public void setInvoker(org.apache.cxf.service.invoker.Invoker)
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        org.apache.cxf.service.invoker.Invoker r1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: org.apache.cxf.service.invoker.Invoker;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.service.invoker.Invoker invoker> = r1;

        return;
    }

    public java.util.concurrent.Executor getExecutor()
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.concurrent.Executor executor>;

        return $r1;
    }

    public void setExecutor(java.util.concurrent.Executor)
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.concurrent.Executor r1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: java.util.concurrent.Executor;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.concurrent.Executor executor> = r1;

        return;
    }

    public java.util.List getIgnoredClasses()
    {
        java.util.List $r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List ignoredClasses>;

        return $r1;
    }

    public void setIgnoredClasses(java.util.List)
    {
        java.util.List r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List ignoredClasses> = r1;

        return;
    }

    protected java.util.Set getExtraClass()
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        return null;
    }

    public boolean isWrapped()
    {
        java.lang.Boolean $r1, $r2, $r3, $r6, $r9, $r10, $r11, $r12;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r5;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r8;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r4;
        java.lang.Object $r7;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Boolean wrappedStyle>;

        if $r1 == null goto label1;

        $r12 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Boolean wrappedStyle>;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Boolean defWrappedCache> = $r12;

     label1:
        $r2 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Boolean defWrappedCache>;

        if $r2 != null goto label5;

        $r4 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r7;

        $r9 = virtualinvoke r8.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.Boolean isWrapped()>();

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Boolean defWrappedCache> = $r9;

        $r10 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Boolean defWrappedCache>;

        if $r10 == null goto label3;

        $r11 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Boolean defWrappedCache>;

        $z2 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        return $z2;

     label3:
        goto label2;

     label4:
        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Boolean defWrappedCache> = $r6;

     label5:
        $r3 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Boolean defWrappedCache>;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public java.lang.String getStyle()
    {
        java.util.Iterator $r4;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r6;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r3;
        java.lang.Object $r5;
        java.lang.String $r1, $r2, $r7, $r8, $r9;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String styleCache>;

        if $r1 != null goto label4;

        $r3 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r5;

        $r7 = virtualinvoke r6.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.String getStyle()>();

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String styleCache> = $r7;

        $r8 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String styleCache>;

        if $r8 == null goto label2;

        $r9 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String styleCache>;

        return $r9;

     label2:
        goto label1;

     label3:
        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String styleCache> = "document";

     label4:
        $r2 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String styleCache>;

        return $r2;
    }

    public boolean isRPC(java.lang.reflect.Method)
    {
        java.util.Map $r2, $r9, $r13;
        java.lang.Boolean $r8, $r12, r14;
        java.lang.String $r6, $r7;
        java.lang.reflect.Method r1;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r5;
        org.apache.cxf.service.factory.AbstractServiceConfiguration r11;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.List $r4;
        java.lang.Object $r3, $r10;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: java.lang.reflect.Method;

        $r2 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map isRpcCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r14 = (java.lang.Boolean) $r3;

        if r14 != null goto label4;

        $r4 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List serviceConfigurations>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r10 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.cxf.service.factory.AbstractServiceConfiguration) $r10;

        $r12 = virtualinvoke r11.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.Boolean isRPC(java.lang.reflect.Method)>(r1);

        if $r12 == null goto label2;

        $r13 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map isRpcCache>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r12);

        $z3 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        return $z3;

     label2:
        goto label1;

     label3:
        $r6 = "rpc";

        $r7 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String getStyle()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        r14 = $r8;

        $r9 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map isRpcCache>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r8);

     label4:
        $z0 = virtualinvoke r14.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public void setWrapped(boolean)
    {
        java.lang.Boolean $r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Boolean wrappedStyle> = $r1;

        return;
    }

    public java.lang.Boolean getWrapped()
    {
        java.lang.Boolean $r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Boolean wrappedStyle>;

        return $r1;
    }

    public java.util.Map getProperties()
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map properties>;

        return $r1;
    }

    public void setProperties(java.util.Map)
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.Map properties> = r1;

        return;
    }

    public java.util.List getIgnoredMethods()
    {
        java.util.List $r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List ignoredMethods>;

        return $r1;
    }

    public void setIgnoredMethods(java.util.List)
    {
        java.util.List r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List ignoredMethods> = r1;

        return;
    }

    public java.util.List getFeatures()
    {
        java.util.List $r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $r1 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List features>;

        return $r1;
    }

    public void setFeatures(java.util.List)
    {
        java.util.List r1, $r2;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: java.util.List;

        $r2 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.List cast(java.util.List)>(r1);

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List features> = $r2;

        return;
    }

    private boolean isValidate()
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        $z0 = r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean validate>;

        if $z0 != 0 goto label1;

        $z1 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean DO_VALIDATE>;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void setValidate(boolean)
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        boolean z0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean validate> = z0;

        return;
    }

    public void setSchemaLocations(java.util.List)
    {
        java.util.List r1;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List schemaLocations> = r1;

        return;
    }

    private boolean isEmptywsdl(java.lang.String)
    {
        org.apache.cxf.Bus $r1;
        javax.wsdl.Definition $r5;
        org.apache.cxf.wsdl.WSDLManager $r4;
        java.util.logging.Logger $r10;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean r0;
        javax.wsdl.WSDLException $r8;
        java.util.logging.Level $r9;
        java.util.Map $r6, $r7;
        java.lang.Object $r2;
        java.lang.String r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.service.factory.ReflectionServiceFactoryBean;

        r3 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: org.apache.cxf.Bus getBus()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/wsdl/WSDLManager;");

        $r4 = (org.apache.cxf.wsdl.WSDLManager) $r2;

        $r5 = interfaceinvoke $r4.<org.apache.cxf.wsdl.WSDLManager: javax.wsdl.Definition getDefinition(java.lang.String)>(r3);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r10 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        $r9 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r10.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r9, "Failed to parse WSDL", $r8);

        return 1;

     label4:
        $r6 = interfaceinvoke $r5.<javax.wsdl.Definition: java.util.Map getPortTypes()>();

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r5.<javax.wsdl.Definition: java.util.Map getImports()>();

        $z1 = interfaceinvoke $r7.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label5;

        return 1;

     label5:
        return 0;

        catch javax.wsdl.WSDLException from label1 to label2 with label3;
    }

    static java.util.logging.Logger access$000()
    {
        java.util.logging.Logger $r0;

        $r0 = <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r2;
        java.util.logging.Logger $r1;
        boolean $z0, $z1, $z2;

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String PARAM_ANNOTATION> = "parameter.annotations";

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String METHOD_ANNOTATIONS> = "method.return.annotations";

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String METHOD_PARAM_ANNOTATIONS> = "method.parameters.annotations";

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String FORCE_TYPES> = "operation.force.types";

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String METHOD> = "operation.method";

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String ELEMENT_NAME> = "messagepart.elementName";

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String HEADER> = "messagepart.isheader";

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String HOLDER> = "messagepart.isholder";

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String MODE_INOUT> = "messagepart.mode.inout";

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String MODE_OUT> = "messagepart.mode.out";

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String EXTRA_CLASS> = "extra.class";

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String WRAPPERGEN_NEEDED> = "wrapper.gen.needed";

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String RAW_CLASS> = "rawclass";

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String GENERIC_TYPE> = "generic.type";

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String ENDPOINT_CLASS> = "endpoint.class";

        $r0 = class "Lorg/apache/cxf/service/factory/ReflectionServiceFactoryBean;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean $assertionsDisabled> = $z2;

        $r1 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/service/factory/ReflectionServiceFactoryBean;");

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.logging.Logger LOG> = $r1;

        $r2 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getProperty(java.lang.String,java.lang.String)>("cxf.validateServiceSchemas", "false");

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("true");

        <org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean DO_VALIDATE> = $z1;

        return;
    }
}
