public abstract class com.hp.hpl.jena.sparql.modify.request.UpdateData extends com.hp.hpl.jena.update.Update
{
    protected com.hp.hpl.jena.sparql.modify.request.QuadDataAcc quadData;

    public void <init>(com.hp.hpl.jena.sparql.modify.request.QuadDataAcc)
    {
        com.hp.hpl.jena.sparql.modify.request.QuadDataAcc r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateData r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateData;

        r1 := @parameter0: com.hp.hpl.jena.sparql.modify.request.QuadDataAcc;

        specialinvoke r0.<com.hp.hpl.jena.update.Update: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateData: com.hp.hpl.jena.sparql.modify.request.QuadDataAcc quadData> = r1;

        return;
    }

    public java.util.List getQuads()
    {
        java.util.List $r2;
        com.hp.hpl.jena.sparql.modify.request.QuadDataAcc $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateData r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateData;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateData: com.hp.hpl.jena.sparql.modify.request.QuadDataAcc quadData>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.modify.request.QuadDataAcc: java.util.List getQuads()>();

        return $r2;
    }

    public final boolean equalTo(com.hp.hpl.jena.update.Update, com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateData r0, r4;
        java.util.List $r5, $r6;
        com.hp.hpl.jena.sparql.util.NodeIsomorphismMap r7;
        com.hp.hpl.jena.update.Update r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateData;

        r1 := @parameter0: com.hp.hpl.jena.update.Update;

        r7 := @parameter1: com.hp.hpl.jena.sparql.util.NodeIsomorphismMap;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label2;

        return 0;

     label2:
        r4 = (com.hp.hpl.jena.sparql.modify.request.UpdateData) r1;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateData: java.util.List getQuads()>();

        $r6 = virtualinvoke r4.<com.hp.hpl.jena.sparql.modify.request.UpdateData: java.util.List getQuads()>();

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.util.Iso: boolean isomorphicQuads(java.util.List,java.util.List,com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)>($r5, $r6, r7);

        return $z0;
    }
}
