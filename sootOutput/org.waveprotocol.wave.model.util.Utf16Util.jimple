public final class org.waveprotocol.wave.model.util.Utf16Util extends java.lang.Object
{
    public static final char REPLACEMENT_CHARACTER;
    private static final org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler UNPAIRED_SURROGATES;
    private static final org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler VALID_UTF16;
    private static final org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler GOOD_UTF16_FOR_BLIP;
    private static final org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler GOOD_UTF16_FOR_DATA_DOCUMENT;

    private void <init>()
    {
        org.waveprotocol.wave.model.util.Utf16Util r0;

        r0 := @this: org.waveprotocol.wave.model.util.Utf16Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isCodePoint(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if 0 > i0 goto label1;

        if i0 > 1114111 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isSurrogate(char)
    {
        int $i2, $i3, $i4, $i6;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i2 = (int) 55296;

        $i3 = (int) c0;

        if $i2 > $i3 goto label1;

        $i4 = (int) c0;

        $i6 = (int) 57343;

        if $i4 > $i6 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isLowSurrogate(char)
    {
        int $i2, $i3, $i4, $i6;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i2 = (int) 56320;

        $i3 = (int) c0;

        if $i2 > $i3 goto label1;

        $i4 = (int) c0;

        $i6 = (int) 57343;

        if $i4 > $i6 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isHighSurrogate(char)
    {
        int $i2, $i3, $i4, $i6;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i2 = (int) 55296;

        $i3 = (int) c0;

        if $i2 > $i3 goto label1;

        $i4 = (int) c0;

        $i6 = (int) 56319;

        if $i4 > $i6 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isSurrogate(int)
    {
        int i0, $i2, $i4;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String $r2, $r4;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isCodePoint(int)>(i0);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a code point: 0x");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void illegalArgument(java.lang.Object)>($r4);

     label1:
        $i2 = (int) 55296;

        if $i2 > i0 goto label2;

        $i4 = (int) 57343;

        if i0 > $i4 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static boolean isSupplementaryCodePoint(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String $r2, $r4;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isCodePoint(int)>(i0);

        if $z0 != 0 goto label1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a code point: 0x");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void illegalArgument(java.lang.Object)>($r4);

     label1:
        if i0 < 65536 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static java.lang.Object traverseUtf16String(java.lang.String, org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler)
    {
        org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler r1;
        int $i0, $i2, i4, i5, $i7, $i8;
        java.lang.String r0;
        boolean $z0, $z1, $z2;
        char $c1, $c3;
        java.lang.Object $r2, $r3, $r4, $r5, $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler;

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "Null string");

        i4 = 0;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 >= $i0 goto label10;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $z0 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isSurrogate(char)>($c1);

        if $z0 == 0 goto label07;

        $z1 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isLowSurrogate(char)>($c1);

        if $z1 == 0 goto label02;

        $r6 = interfaceinvoke r1.<org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler: java.lang.Object unpairedSurrogate(char)>($c1);

        if $r6 == null goto label09;

        return $r6;

     label02:
        i4 = i4 + 1;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 < $i2 goto label03;

        $r5 = interfaceinvoke r1.<org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler: java.lang.Object unpairedSurrogate(char)>($c1);

        if $r5 == null goto label10;

        return $r5;

     label03:
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $z2 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isLowSurrogate(char)>($c3);

        if $z2 == 0 goto label04;

        i5 = staticinvoke <java.lang.Character: int toCodePoint(char,char)>($c1, $c3);

        goto label06;

     label04:
        $r4 = interfaceinvoke r1.<org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler: java.lang.Object unpairedSurrogate(char)>($c1);

        if $r4 == null goto label05;

        return $r4;

     label05:
        $i7 = (int) -1;

        i4 = i4 + $i7;

        goto label09;

     label06:
        goto label08;

     label07:
        $i8 = (int) $c1;

        i5 = $i8;

     label08:
        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler: java.lang.Object codePoint(int)>(i5);

        if $r3 == null goto label09;

        return $r3;

     label09:
        i4 = i4 + 1;

        goto label01;

     label10:
        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler: java.lang.Object endOfString()>();

        return $r2;
    }

    public static int firstSurrogate(java.lang.String)
    {
        int $i0, i2, $i4;
        char $c1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isSurrogate(char)>($c1);

        if $z0 == 0 goto label2;

        return i2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i4 = (int) -1;

        return $i4;
    }

    public static int firstNonSurrogate(java.lang.String)
    {
        int $i0, i2, $i4;
        char $c1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isSurrogate(char)>($c1);

        if $z0 != 0 goto label2;

        return i2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i4 = (int) -1;

        return $i4;
    }

    public static boolean containsUnpairedSurrogates(java.lang.String)
    {
        org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler $r1;
        java.lang.Boolean $r3;
        java.lang.Object $r2;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.waveprotocol.wave.model.util.Utf16Util: org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler UNPAIRED_SURROGATES>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: java.lang.Object traverseUtf16String(java.lang.String,org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler)>(r0, $r1);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public static boolean isCodePointValid(int)
    {
        int i0, $i1, $i3, $i5, $i7, $i9, $i11;
        java.lang.String $r2, $r4, $r7, $r9;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r3, $r6, $r8, $r10, $r11;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isCodePoint(int)>(i0);

        if $z0 != 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a code point: 0x");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void illegalArgument(java.lang.Object)>($r9);

     label1:
        $z1 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isSurrogate(int)>(i0);

        if $z1 == 0 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Code point is a surrogate: 0x");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void illegalArgument(java.lang.Object)>($r4);

     label2:
        $i3 = (int) 65535;

        $i1 = i0 & $i3;

        $i5 = (int) 65534;

        if $i1 == $i5 goto label3;

        $i7 = (int) 65535;

        if $i1 != $i7 goto label4;

     label3:
        return 0;

     label4:
        $i9 = (int) 64976;

        if $i9 > i0 goto label5;

        $i11 = (int) 65007;

        if i0 > $i11 goto label5;

        return 0;

     label5:
        return 1;
    }

    public static org.waveprotocol.wave.model.util.Utf16Util$BlipCodePointResult isCodePointGoodForBlip(int)
    {
        org.waveprotocol.wave.model.util.Utf16Util$BlipCodePointResult $r0, $r1, $r2, $r3, $r4, $r5, $r6;
        int i0;
        java.lang.String $r9, $r11, $r14, $r16;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r7, $r8, $r10, $r12, $r13, $r15;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isCodePoint(int)>(i0);

        if $z0 != 0 goto label01;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a code point: 0x");

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void illegalArgument(java.lang.Object)>($r16);

     label01:
        $z1 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isSurrogate(int)>(i0);

        if $z1 == 0 goto label02;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Code point is a surrogate: 0x");

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void illegalArgument(java.lang.Object)>($r11);

     label02:
        $z2 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isCodePointValid(int)>(i0);

        if $z2 != 0 goto label03;

        $r6 = <org.waveprotocol.wave.model.util.Utf16Util$BlipCodePointResult: org.waveprotocol.wave.model.util.Utf16Util$BlipCodePointResult NONCHARACTER>;

        return $r6;

     label03:
        if 0 > i0 goto label04;

        if i0 <= 31 goto label05;

     label04:
        if 127 > i0 goto label06;

        if i0 > 159 goto label06;

     label05:
        $r5 = <org.waveprotocol.wave.model.util.Utf16Util$BlipCodePointResult: org.waveprotocol.wave.model.util.Utf16Util$BlipCodePointResult CONTROL>;

        return $r5;

     label06:
        if 8298 > i0 goto label07;

        if i0 > 8303 goto label07;

        $r4 = <org.waveprotocol.wave.model.util.Utf16Util$BlipCodePointResult: org.waveprotocol.wave.model.util.Utf16Util$BlipCodePointResult DEPRECATED>;

        return $r4;

     label07:
        if i0 == 8206 goto label08;

        if i0 != 8207 goto label09;

     label08:
        $r0 = <org.waveprotocol.wave.model.util.Utf16Util$BlipCodePointResult: org.waveprotocol.wave.model.util.Utf16Util$BlipCodePointResult BIDI>;

        return $r0;

     label09:
        if 8234 > i0 goto label10;

        if i0 > 8238 goto label10;

        $r3 = <org.waveprotocol.wave.model.util.Utf16Util$BlipCodePointResult: org.waveprotocol.wave.model.util.Utf16Util$BlipCodePointResult BIDI>;

        return $r3;

     label10:
        if 917504 > i0 goto label11;

        if i0 > 917631 goto label11;

        $r2 = <org.waveprotocol.wave.model.util.Utf16Util$BlipCodePointResult: org.waveprotocol.wave.model.util.Utf16Util$BlipCodePointResult TAG>;

        return $r2;

     label11:
        $r1 = <org.waveprotocol.wave.model.util.Utf16Util$BlipCodePointResult: org.waveprotocol.wave.model.util.Utf16Util$BlipCodePointResult OK>;

        return $r1;
    }

    public static boolean isCodePointGoodForDataDocument(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r3, $r5, $r6, $r8;
        java.lang.String $r2, $r4, $r7, $r9;
        boolean $z0, $z1, $z2;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isCodePoint(int)>(i0);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a code point: 0x");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void illegalArgument(java.lang.Object)>($r9);

     label1:
        $z1 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isSurrogate(int)>(i0);

        if $z1 == 0 goto label2;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Code point is a surrogate: 0x");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void illegalArgument(java.lang.Object)>($r4);

     label2:
        $z2 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isCodePointValid(int)>(i0);

        if $z2 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public static boolean isXmlNameStartChar(int)
    {
        int i0, $i2, $i4, $i6, $i8, $i10;
        boolean $z0, $z1, $z2, $z3, $z4;

        i0 := @parameter0: int;

        if i0 == 58 goto label17;

        if 65 > i0 goto label01;

        if i0 <= 90 goto label17;

     label01:
        if i0 != 95 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        if 97 > i0 goto label04;

        if i0 > 122 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $z3 = $z1 | $z2;

        if $z3 != 0 goto label17;

        if 192 > i0 goto label06;

        if i0 <= 214 goto label17;

     label06:
        if 216 > i0 goto label07;

        if i0 <= 246 goto label17;

     label07:
        if 248 > i0 goto label08;

        if i0 <= 767 goto label17;

     label08:
        if 880 > i0 goto label09;

        if i0 <= 893 goto label17;

     label09:
        if 895 > i0 goto label10;

        if i0 <= 8191 goto label17;

     label10:
        if 8204 > i0 goto label11;

        if i0 <= 8205 goto label17;

     label11:
        if 8304 > i0 goto label12;

        if i0 <= 8591 goto label17;

     label12:
        if 11264 > i0 goto label13;

        if i0 <= 12271 goto label17;

     label13:
        if 12289 > i0 goto label14;

        $i2 = (int) 55295;

        if i0 <= $i2 goto label17;

     label14:
        $i4 = (int) 63744;

        if $i4 > i0 goto label15;

        $i6 = (int) 64975;

        if i0 <= $i6 goto label17;

     label15:
        $i8 = (int) 65008;

        if $i8 > i0 goto label16;

        $i10 = (int) 65533;

        if i0 <= $i10 goto label17;

     label16:
        if 65536 > i0 goto label18;

        if i0 > 983039 goto label18;

        $z0 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isCodePointValid(int)>(i0);

        if $z0 == 0 goto label18;

     label17:
        $z4 = 1;

        goto label19;

     label18:
        $z4 = 0;

     label19:
        return $z4;
    }

    public static boolean isXmlNameChar(int)
    {
        int i0;
        boolean $z0, $z1, $z2;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isCodePointValid(int)>(i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: boolean isXmlNameStartChar(int)>(i0);

        if $z1 != 0 goto label4;

        if i0 == 45 goto label4;

        if i0 == 46 goto label4;

        if 48 > i0 goto label2;

        if i0 <= 57 goto label4;

     label2:
        if i0 == 183 goto label4;

        if 768 > i0 goto label3;

        if i0 <= 879 goto label4;

     label3:
        if 8255 > i0 goto label5;

        if i0 > 8256 goto label5;

     label4:
        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    public static boolean isXmlName(java.lang.String)
    {
        java.lang.Boolean $r3;
        java.lang.Object $r2;
        java.lang.String r0;
        org.waveprotocol.wave.model.util.Utf16Util$2 $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "Null XML name string");

        $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = new org.waveprotocol.wave.model.util.Utf16Util$2;

        specialinvoke $r1.<org.waveprotocol.wave.model.util.Utf16Util$2: void <init>()>();

        $r2 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: java.lang.Object traverseUtf16String(java.lang.String,org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler)>(r0, $r1);

        $r3 = (java.lang.Boolean) $r2;

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;
    }

    public static boolean isValidUtf16(java.lang.String)
    {
        org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler $r1;
        java.lang.Boolean $r3;
        java.lang.Object $r2;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.waveprotocol.wave.model.util.Utf16Util: org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler VALID_UTF16>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: java.lang.Object traverseUtf16String(java.lang.String,org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler)>(r0, $r1);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public static boolean isGoodUtf16ForBlip(java.lang.String)
    {
        org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler $r1;
        java.lang.Boolean $r3;
        java.lang.Object $r2;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.waveprotocol.wave.model.util.Utf16Util: org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler GOOD_UTF16_FOR_BLIP>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: java.lang.Object traverseUtf16String(java.lang.String,org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler)>(r0, $r1);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public static boolean isGoodUtf16ForDataDocument(java.lang.String)
    {
        org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler $r1;
        java.lang.Boolean $r3;
        java.lang.Object $r2;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.waveprotocol.wave.model.util.Utf16Util: org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler GOOD_UTF16_FOR_DATA_DOCUMENT>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.util.Utf16Util: java.lang.Object traverseUtf16String(java.lang.String,org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler)>(r0, $r1);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.util.Utf16Util$3 $r1;
        org.waveprotocol.wave.model.util.Utf16Util$4 $r2;
        org.waveprotocol.wave.model.util.Utf16Util$5 $r3;
        org.waveprotocol.wave.model.util.Utf16Util$1 $r0;

        <org.waveprotocol.wave.model.util.Utf16Util: char REPLACEMENT_CHARACTER> = 65533;

        $r0 = new org.waveprotocol.wave.model.util.Utf16Util$1;

        specialinvoke $r0.<org.waveprotocol.wave.model.util.Utf16Util$1: void <init>()>();

        <org.waveprotocol.wave.model.util.Utf16Util: org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler UNPAIRED_SURROGATES> = $r0;

        $r1 = new org.waveprotocol.wave.model.util.Utf16Util$3;

        specialinvoke $r1.<org.waveprotocol.wave.model.util.Utf16Util$3: void <init>()>();

        <org.waveprotocol.wave.model.util.Utf16Util: org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler VALID_UTF16> = $r1;

        $r2 = new org.waveprotocol.wave.model.util.Utf16Util$4;

        specialinvoke $r2.<org.waveprotocol.wave.model.util.Utf16Util$4: void <init>()>();

        <org.waveprotocol.wave.model.util.Utf16Util: org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler GOOD_UTF16_FOR_BLIP> = $r2;

        $r3 = new org.waveprotocol.wave.model.util.Utf16Util$5;

        specialinvoke $r3.<org.waveprotocol.wave.model.util.Utf16Util$5: void <init>()>();

        <org.waveprotocol.wave.model.util.Utf16Util: org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler GOOD_UTF16_FOR_DATA_DOCUMENT> = $r3;

        return;
    }
}
