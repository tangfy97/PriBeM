final class org.apache.velocity.util.introspection.ClassMap$MethodCache extends java.lang.Object
{
    private static final java.lang.Object CACHE_MISS;
    private static final java.lang.String NULL_ARG;
    private static final java.util.Map convertPrimitives;
    private final org.apache.velocity.runtime.log.Log log;
    private final java.util.Map cache;
    private final org.apache.velocity.util.introspection.MethodMap methodMap;

    private void <init>(org.apache.velocity.runtime.log.Log)
    {
        org.apache.velocity.runtime.log.Log r3;
        org.apache.velocity.util.introspection.ClassMap$MethodCache r0;
        java.util.Map $r1;
        org.apache.velocity.util.introspection.MethodMap $r2;

        r0 := @this: org.apache.velocity.util.introspection.ClassMap$MethodCache;

        r3 := @parameter0: org.apache.velocity.runtime.log.Log;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.apache.velocity.util.MapFactory: java.util.Map create(boolean)>(0);

        r0.<org.apache.velocity.util.introspection.ClassMap$MethodCache: java.util.Map cache> = $r1;

        $r2 = new org.apache.velocity.util.introspection.MethodMap;

        specialinvoke $r2.<org.apache.velocity.util.introspection.MethodMap: void <init>()>();

        r0.<org.apache.velocity.util.introspection.ClassMap$MethodCache: org.apache.velocity.util.introspection.MethodMap methodMap> = $r2;

        r0.<org.apache.velocity.util.introspection.ClassMap$MethodCache: org.apache.velocity.runtime.log.Log log> = r3;

        return;
    }

    public java.lang.reflect.Method get(java.lang.String, java.lang.Object[]) throws org.apache.velocity.util.introspection.MethodMap$AmbiguousException
    {
        java.lang.Object[] r2;
        java.util.Map $r4, $r9, $r12;
        java.lang.String r1, $r3;
        java.lang.reflect.Method $r8, $r15;
        org.apache.velocity.util.introspection.ClassMap$MethodCache r0;
        org.apache.velocity.util.introspection.MethodMap$AmbiguousException $r10;
        java.lang.Object $r5, $r6, $r11, r13, $r14;
        org.apache.velocity.util.introspection.MethodMap $r7;

        r0 := @this: org.apache.velocity.util.introspection.ClassMap$MethodCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = specialinvoke r0.<org.apache.velocity.util.introspection.ClassMap$MethodCache: java.lang.String makeMethodKey(java.lang.String,java.lang.Object[])>(r1, r2);

        $r4 = r0.<org.apache.velocity.util.introspection.ClassMap$MethodCache: java.util.Map cache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r13 = $r5;

        $r6 = <org.apache.velocity.util.introspection.ClassMap$MethodCache: java.lang.Object CACHE_MISS>;

        if $r5 != $r6 goto label1;

        return null;

     label1:
        if $r5 != null goto label8;

     label2:
        $r7 = r0.<org.apache.velocity.util.introspection.ClassMap$MethodCache: org.apache.velocity.util.introspection.MethodMap methodMap>;

        $r8 = virtualinvoke $r7.<org.apache.velocity.util.introspection.MethodMap: java.lang.reflect.Method find(java.lang.String,java.lang.Object[])>(r1, r2);

        r13 = $r8;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        $r12 = r0.<org.apache.velocity.util.introspection.ClassMap$MethodCache: java.util.Map cache>;

        $r11 = <org.apache.velocity.util.introspection.ClassMap$MethodCache: java.lang.Object CACHE_MISS>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r11);

        throw $r10;

     label5:
        $r9 = r0.<org.apache.velocity.util.introspection.ClassMap$MethodCache: java.util.Map cache>;

        if $r8 == null goto label6;

        $r14 = $r8;

        goto label7;

     label6:
        $r14 = <org.apache.velocity.util.introspection.ClassMap$MethodCache: java.lang.Object CACHE_MISS>;

     label7:
        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r14);

     label8:
        $r15 = (java.lang.reflect.Method) r13;

        return $r15;

        catch org.apache.velocity.util.introspection.MethodMap$AmbiguousException from label2 to label3 with label4;
    }

    private void put(java.lang.reflect.Method)
    {
        org.apache.velocity.util.introspection.ClassMap$MethodCache r0;
        java.util.Map $r3, $r5;
        java.lang.Object $r4;
        java.lang.String $r2;
        java.lang.reflect.Method r1;
        org.apache.velocity.util.introspection.MethodMap $r6;

        r0 := @this: org.apache.velocity.util.introspection.ClassMap$MethodCache;

        r1 := @parameter0: java.lang.reflect.Method;

        $r2 = specialinvoke r0.<org.apache.velocity.util.introspection.ClassMap$MethodCache: java.lang.String makeMethodKey(java.lang.reflect.Method)>(r1);

        $r3 = r0.<org.apache.velocity.util.introspection.ClassMap$MethodCache: java.util.Map cache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        if $r4 != null goto label1;

        $r5 = r0.<org.apache.velocity.util.introspection.ClassMap$MethodCache: java.util.Map cache>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r1);

        $r6 = r0.<org.apache.velocity.util.introspection.ClassMap$MethodCache: org.apache.velocity.util.introspection.MethodMap methodMap>;

        virtualinvoke $r6.<org.apache.velocity.util.introspection.MethodMap: void add(java.lang.reflect.Method)>(r1);

     label1:
        return;
    }

    private java.lang.String makeMethodKey(java.lang.reflect.Method)
    {
        org.apache.commons.lang.text.StrBuilder $r2, $r4;
        java.util.Map $r10;
        int i0, $i1, $i2, i3;
        java.lang.String $r3, $r5, $r8, $r12, $r13;
        java.lang.reflect.Method r0;
        boolean $z0;
        org.apache.velocity.util.introspection.ClassMap$MethodCache r14;
        java.lang.Class[] $r1;
        java.lang.Class $r6, $r7, $r9;
        java.lang.Object $r11;

        r14 := @this: org.apache.velocity.util.introspection.ClassMap$MethodCache;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        i0 = lengthof $r1;

        if i0 != 0 goto label1;

        $r13 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        return $r13;

     label1:
        $r2 = new org.apache.commons.lang.text.StrBuilder;

        $i1 = i0 + 1;

        $i2 = $i1 * 16;

        specialinvoke $r2.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>($i2);

        $r3 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>($r3);

        i3 = 0;

     label2:
        if i3 >= i0 goto label5;

        $r6 = $r1[i3];

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label3;

        $r10 = <org.apache.velocity.util.introspection.ClassMap$MethodCache: java.util.Map convertPrimitives>;

        $r9 = $r1[i3];

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r12 = (java.lang.String) $r11;

        virtualinvoke $r4.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>($r12);

        goto label4;

     label3:
        $r7 = $r1[i3];

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r4.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>($r8);

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        $r5 = virtualinvoke $r4.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r5;
    }

    private java.lang.String makeMethodKey(java.lang.String, java.lang.Object[])
    {
        org.apache.commons.lang.text.StrBuilder $r1, $r3;
        java.lang.Object[] r0;
        org.apache.velocity.util.introspection.ClassMap$MethodCache r9;
        int i0, $i1, $i2, i3;
        java.lang.Object r5;
        java.lang.Class $r6;
        java.lang.String r2, $r4, $r7, $r8;

        r9 := @this: org.apache.velocity.util.introspection.ClassMap$MethodCache;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object[];

        i0 = lengthof r0;

        if i0 != 0 goto label1;

        return r2;

     label1:
        $r1 = new org.apache.commons.lang.text.StrBuilder;

        $i1 = i0 + 1;

        $i2 = $i1 * 16;

        specialinvoke $r1.<org.apache.commons.lang.text.StrBuilder: void <init>(int)>($i2);

        $r3 = virtualinvoke $r1.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>(r2);

        i3 = 0;

     label2:
        if i3 >= i0 goto label5;

        r5 = r0[i3];

        if r5 != null goto label3;

        $r8 = <org.apache.velocity.util.introspection.ClassMap$MethodCache: java.lang.String NULL_ARG>;

        virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>($r8);

        goto label4;

     label3:
        $r6 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>($r7);

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        $r4 = virtualinvoke $r3.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        return $r4;
    }

    void <init>(org.apache.velocity.runtime.log.Log, org.apache.velocity.util.introspection.ClassMap$1)
    {
        org.apache.velocity.runtime.log.Log r1;
        org.apache.velocity.util.introspection.ClassMap$1 r2;
        org.apache.velocity.util.introspection.ClassMap$MethodCache r0;

        r0 := @this: org.apache.velocity.util.introspection.ClassMap$MethodCache;

        r1 := @parameter0: org.apache.velocity.runtime.log.Log;

        r2 := @parameter1: org.apache.velocity.util.introspection.ClassMap$1;

        specialinvoke r0.<org.apache.velocity.util.introspection.ClassMap$MethodCache: void <init>(org.apache.velocity.runtime.log.Log)>(r1);

        return;
    }

    static void access$100(org.apache.velocity.util.introspection.ClassMap$MethodCache, java.lang.reflect.Method)
    {
        java.lang.reflect.Method r1;
        org.apache.velocity.util.introspection.ClassMap$MethodCache r0;

        r0 := @parameter0: org.apache.velocity.util.introspection.ClassMap$MethodCache;

        r1 := @parameter1: java.lang.reflect.Method;

        specialinvoke r0.<org.apache.velocity.util.introspection.ClassMap$MethodCache: void put(java.lang.reflect.Method)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.util.Map $r5, $r9, $r13, $r17, $r21, $r25, $r29, $r33;
        java.util.HashMap $r3;
        java.lang.String $r2, $r7, $r11, $r15, $r19, $r23, $r27, $r31, $r35;
        java.lang.Object $r0;
        java.lang.Class $r1, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.apache.velocity.util.introspection.ClassMap$MethodCache: java.lang.Object CACHE_MISS> = $r0;

        $r1 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Object>;

        if $r1 != null goto label01;

        $r36 = staticinvoke <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Object> = $r36;

        goto label02;

     label01:
        $r36 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Object>;

     label02:
        $r2 = virtualinvoke $r36.<java.lang.Class: java.lang.String getName()>();

        <org.apache.velocity.util.introspection.ClassMap$MethodCache: java.lang.String NULL_ARG> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        <org.apache.velocity.util.introspection.ClassMap$MethodCache: java.util.Map convertPrimitives> = $r3;

        $r5 = <org.apache.velocity.util.introspection.ClassMap$MethodCache: java.util.Map convertPrimitives>;

        $r6 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r4 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Boolean>;

        if $r4 != null goto label03;

        $r37 = staticinvoke <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Boolean> = $r37;

        goto label04;

     label03:
        $r37 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Boolean>;

     label04:
        $r7 = virtualinvoke $r37.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r9 = <org.apache.velocity.util.introspection.ClassMap$MethodCache: java.util.Map convertPrimitives>;

        $r10 = <java.lang.Byte: java.lang.Class TYPE>;

        $r8 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Byte>;

        if $r8 != null goto label05;

        $r38 = staticinvoke <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$(java.lang.String)>("java.lang.Byte");

        <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Byte> = $r38;

        goto label06;

     label05:
        $r38 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Byte>;

     label06:
        $r11 = virtualinvoke $r38.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        $r13 = <org.apache.velocity.util.introspection.ClassMap$MethodCache: java.util.Map convertPrimitives>;

        $r14 = <java.lang.Character: java.lang.Class TYPE>;

        $r12 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Character>;

        if $r12 != null goto label07;

        $r39 = staticinvoke <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$(java.lang.String)>("java.lang.Character");

        <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Character> = $r39;

        goto label08;

     label07:
        $r39 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Character>;

     label08:
        $r15 = virtualinvoke $r39.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15);

        $r17 = <org.apache.velocity.util.introspection.ClassMap$MethodCache: java.util.Map convertPrimitives>;

        $r18 = <java.lang.Double: java.lang.Class TYPE>;

        $r16 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Double>;

        if $r16 != null goto label09;

        $r40 = staticinvoke <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$(java.lang.String)>("java.lang.Double");

        <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Double> = $r40;

        goto label10;

     label09:
        $r40 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Double>;

     label10:
        $r19 = virtualinvoke $r40.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19);

        $r21 = <org.apache.velocity.util.introspection.ClassMap$MethodCache: java.util.Map convertPrimitives>;

        $r22 = <java.lang.Float: java.lang.Class TYPE>;

        $r20 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Float>;

        if $r20 != null goto label11;

        $r41 = staticinvoke <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$(java.lang.String)>("java.lang.Float");

        <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Float> = $r41;

        goto label12;

     label11:
        $r41 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Float>;

     label12:
        $r23 = virtualinvoke $r41.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r23);

        $r25 = <org.apache.velocity.util.introspection.ClassMap$MethodCache: java.util.Map convertPrimitives>;

        $r26 = <java.lang.Integer: java.lang.Class TYPE>;

        $r24 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Integer>;

        if $r24 != null goto label13;

        $r42 = staticinvoke <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Integer> = $r42;

        goto label14;

     label13:
        $r42 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Integer>;

     label14:
        $r27 = virtualinvoke $r42.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r27);

        $r29 = <org.apache.velocity.util.introspection.ClassMap$MethodCache: java.util.Map convertPrimitives>;

        $r30 = <java.lang.Long: java.lang.Class TYPE>;

        $r28 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Long>;

        if $r28 != null goto label15;

        $r43 = staticinvoke <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$(java.lang.String)>("java.lang.Long");

        <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Long> = $r43;

        goto label16;

     label15:
        $r43 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Long>;

     label16:
        $r31 = virtualinvoke $r43.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r31);

        $r33 = <org.apache.velocity.util.introspection.ClassMap$MethodCache: java.util.Map convertPrimitives>;

        $r34 = <java.lang.Short: java.lang.Class TYPE>;

        $r32 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Short>;

        if $r32 != null goto label17;

        $r44 = staticinvoke <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$(java.lang.String)>("java.lang.Short");

        <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Short> = $r44;

        goto label18;

     label17:
        $r44 = <org.apache.velocity.util.introspection.ClassMap: java.lang.Class class$java$lang$Short>;

     label18:
        $r35 = virtualinvoke $r44.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, $r35);

        return;
    }
}
