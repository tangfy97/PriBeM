public abstract class org.apache.batik.anim.AnimationEngine extends java.lang.Object
{
    public static final short ANIM_TYPE_XML;
    public static final short ANIM_TYPE_CSS;
    public static final short ANIM_TYPE_OTHER;
    protected org.w3c.dom.Document document;
    protected org.apache.batik.anim.timing.TimedDocumentRoot timedDocumentRoot;
    protected long pauseTime;
    protected java.util.HashMap targets;
    protected java.util.HashMap animations;
    protected org.apache.batik.anim.AnimationEngine$Listener targetListener;
    protected static final java.util.Map$Entry[] MAP_ENTRY_ARRAY;

    public void <init>(org.w3c.dom.Document)
    {
        org.w3c.dom.Document r4;
        org.apache.batik.anim.AnimationEngine$Listener $r3;
        java.util.HashMap $r1, $r2;
        org.apache.batik.anim.AnimationEngine r0;
        org.apache.batik.anim.timing.TimedDocumentRoot $r5;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        r4 := @parameter0: org.w3c.dom.Document;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.anim.AnimationEngine: java.util.HashMap targets> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.anim.AnimationEngine: java.util.HashMap animations> = $r2;

        $r3 = new org.apache.batik.anim.AnimationEngine$Listener;

        specialinvoke $r3.<org.apache.batik.anim.AnimationEngine$Listener: void <init>(org.apache.batik.anim.AnimationEngine)>(r0);

        r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$Listener targetListener> = $r3;

        r0.<org.apache.batik.anim.AnimationEngine: org.w3c.dom.Document document> = r4;

        $r5 = virtualinvoke r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.timing.TimedDocumentRoot createDocumentRoot()>();

        r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.timing.TimedDocumentRoot timedDocumentRoot> = $r5;

        return;
    }

    public void dispose()
    {
        org.apache.batik.anim.AnimationEngine$TargetInfo r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r2, $r19;
        org.apache.batik.util.DoublyIndexedTable $r10;
        org.apache.batik.util.DoublyIndexedTable$Entry r25;
        org.apache.batik.dom.anim.AnimationTarget r7;
        org.apache.batik.anim.AnimationEngine$Sandwich r16, r30;
        java.util.HashMap $r1, $r18;
        java.lang.String r26, r27, r29;
        java.util.Map$Entry r5, r28;
        java.util.Iterator $r3, $r11, $r20;
        org.apache.batik.anim.AnimationEngine$Listener $r17, $r24;
        java.lang.Object $r4, $r6, $r8, $r12, $r13, $r14, $r15, $r21, $r22, $r23;
        org.apache.batik.anim.AnimationEngine r0;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        $r1 = r0.<org.apache.batik.anim.AnimationEngine: java.util.HashMap targets>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        goto label6;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = (org.apache.batik.dom.anim.AnimationTarget) $r6;

        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (org.apache.batik.anim.AnimationEngine$TargetInfo) $r8;

        $r10 = r9.<org.apache.batik.anim.AnimationEngine$TargetInfo: org.apache.batik.util.DoublyIndexedTable xmlAnimations>;

        $r11 = virtualinvoke $r10.<org.apache.batik.util.DoublyIndexedTable: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r25 = (org.apache.batik.util.DoublyIndexedTable$Entry) $r12;

        $r13 = virtualinvoke r25.<org.apache.batik.util.DoublyIndexedTable$Entry: java.lang.Object getKey1()>();

        r26 = (java.lang.String) $r13;

        $r14 = virtualinvoke r25.<org.apache.batik.util.DoublyIndexedTable$Entry: java.lang.Object getKey2()>();

        r27 = (java.lang.String) $r14;

        $r15 = virtualinvoke r25.<org.apache.batik.util.DoublyIndexedTable$Entry: java.lang.Object getValue()>();

        r16 = (org.apache.batik.anim.AnimationEngine$Sandwich) $r15;

        $z1 = r16.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean listenerRegistered>;

        if $z1 == 0 goto label3;

        $r17 = r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$Listener targetListener>;

        interfaceinvoke r7.<org.apache.batik.dom.anim.AnimationTarget: void removeTargetListener(java.lang.String,java.lang.String,boolean,org.apache.batik.dom.anim.AnimationTargetListener)>(r26, r27, 0, $r17);

     label3:
        $z3 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label2;

        $r18 = r9.<org.apache.batik.anim.AnimationEngine$TargetInfo: java.util.HashMap cssAnimations>;

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.util.Set entrySet()>();

        $r20 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

        goto label5;

     label4:
        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.util.Map$Entry) $r21;

        $r22 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getKey()>();

        r29 = (java.lang.String) $r22;

        $r23 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getValue()>();

        r30 = (org.apache.batik.anim.AnimationEngine$Sandwich) $r23;

        $z2 = r30.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean listenerRegistered>;

        if $z2 == 0 goto label5;

        $r24 = r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$Listener targetListener>;

        interfaceinvoke r7.<org.apache.batik.dom.anim.AnimationTarget: void removeTargetListener(java.lang.String,java.lang.String,boolean,org.apache.batik.dom.anim.AnimationTargetListener)>(null, r29, 1, $r24);

     label5:
        $z4 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label4;

     label6:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public void pause()
    {
        byte $b1;
        long $l0, $l2;
        org.apache.batik.anim.AnimationEngine r0;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        $l0 = r0.<org.apache.batik.anim.AnimationEngine: long pauseTime>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.apache.batik.anim.AnimationEngine: long pauseTime> = $l2;

     label1:
        return;
    }

    public void unpause()
    {
        long $l0, $l2, $l3, $l4;
        org.apache.batik.anim.timing.TimedDocumentRoot $r1;
        java.util.Calendar $r2;
        byte $b1;
        int i5;
        org.apache.batik.anim.AnimationEngine r0;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        $l0 = r0.<org.apache.batik.anim.AnimationEngine: long pauseTime>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $r1 = r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.timing.TimedDocumentRoot timedDocumentRoot>;

        $r2 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedDocumentRoot: java.util.Calendar getDocumentBeginTime()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = r0.<org.apache.batik.anim.AnimationEngine: long pauseTime>;

        $l4 = $l2 - $l3;

        i5 = (int) $l4;

        virtualinvoke $r2.<java.util.Calendar: void add(int,int)>(14, i5);

        r0.<org.apache.batik.anim.AnimationEngine: long pauseTime> = 0L;

     label1:
        return;
    }

    public boolean isPaused()
    {
        byte $b1;
        long $l0;
        org.apache.batik.anim.AnimationEngine r0;
        boolean $z0;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        $l0 = r0.<org.apache.batik.anim.AnimationEngine: long pauseTime>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public float getCurrentTime()
    {
        float $f0;
        org.apache.batik.anim.AnimationEngine r0;
        org.apache.batik.anim.timing.TimedDocumentRoot $r1;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        $r1 = r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.timing.TimedDocumentRoot timedDocumentRoot>;

        $f0 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedDocumentRoot: float getCurrentTime()>();

        return $f0;
    }

    public float setCurrentTime(float)
    {
        long $l0, $l2;
        org.apache.batik.anim.timing.TimedDocumentRoot $r1, $r3;
        java.util.Calendar $r2;
        byte $b1;
        int $i3;
        float $f0, f1, $f2, $f3, $f4;
        org.apache.batik.anim.AnimationEngine r0;
        boolean $z0;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        f1 := @parameter0: float;

        $l0 = r0.<org.apache.batik.anim.AnimationEngine: long pauseTime>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        virtualinvoke r0.<org.apache.batik.anim.AnimationEngine: void unpause()>();

        $r1 = r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.timing.TimedDocumentRoot timedDocumentRoot>;

        $r2 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedDocumentRoot: java.util.Calendar getDocumentBeginTime()>();

        $r3 = r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.timing.TimedDocumentRoot timedDocumentRoot>;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $f0 = virtualinvoke $r3.<org.apache.batik.anim.timing.TimedDocumentRoot: float convertEpochTime(long)>($l2);

        $f2 = $f0 - f1;

        $f3 = $f2 * 1000.0F;

        $i3 = (int) $f3;

        virtualinvoke $r2.<java.util.Calendar: void add(int,int)>(14, $i3);

        if $z0 == 0 goto label3;

        virtualinvoke r0.<org.apache.batik.anim.AnimationEngine: void pause()>();

     label3:
        $f4 = virtualinvoke r0.<org.apache.batik.anim.AnimationEngine: float tick(float,boolean)>(f1, 1);

        return $f4;
    }

    public void addAnimation(org.apache.batik.dom.anim.AnimationTarget, short, java.lang.String, java.lang.String, org.apache.batik.anim.AbstractAnimation)
    {
        org.apache.batik.dom.anim.AnimationTarget r7;
        org.apache.batik.anim.AnimationEngine$Sandwich $r9;
        org.apache.batik.anim.AbstractAnimation r1, $r10, $r11, $r12, $r13;
        java.util.HashMap $r8;
        org.apache.batik.anim.timing.TimedDocumentRoot $r2;
        short s0;
        org.apache.batik.anim.timing.TimedElement $r3;
        org.apache.batik.anim.AnimationEngine$AnimationInfo $r4;
        org.apache.batik.anim.AnimationEngine r0;
        java.lang.String r5, r6;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        r7 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        s0 := @parameter1: short;

        r5 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.String;

        r1 := @parameter4: org.apache.batik.anim.AbstractAnimation;

        $r2 = r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.timing.TimedDocumentRoot timedDocumentRoot>;

        $r3 = virtualinvoke r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.timing.TimedElement getTimedElement()>();

        virtualinvoke $r2.<org.apache.batik.anim.timing.TimeContainer: void addChild(org.apache.batik.anim.timing.TimedElement)>($r3);

        $r4 = virtualinvoke r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$AnimationInfo getAnimationInfo(org.apache.batik.anim.AbstractAnimation)>(r1);

        $r4.<org.apache.batik.anim.AnimationEngine$AnimationInfo: short type> = s0;

        $r4.<org.apache.batik.anim.AnimationEngine$AnimationInfo: java.lang.String attributeNamespaceURI> = r5;

        $r4.<org.apache.batik.anim.AnimationEngine$AnimationInfo: java.lang.String attributeLocalName> = r6;

        $r4.<org.apache.batik.anim.AnimationEngine$AnimationInfo: org.apache.batik.dom.anim.AnimationTarget target> = r7;

        $r8 = r0.<org.apache.batik.anim.AnimationEngine: java.util.HashMap animations>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        $r9 = virtualinvoke r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$Sandwich getSandwich(org.apache.batik.dom.anim.AnimationTarget,short,java.lang.String,java.lang.String)>(r7, s0, r5, r6);

        $r10 = $r9.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        if $r10 != null goto label1;

        r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation> = null;

        r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation> = null;

        goto label2;

     label1:
        $r11 = $r9.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        $r11.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation> = r1;

        $r12 = $r9.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation> = $r12;

        r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation> = null;

     label2:
        $r9.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation> = r1;

        $r13 = r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        if $r13 != null goto label3;

        $r9.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation lowestAnimation> = r1;

     label3:
        return;
    }

    public void removeAnimation(org.apache.batik.anim.AbstractAnimation)
    {
        org.apache.batik.dom.anim.AnimationTarget $r9;
        org.apache.batik.anim.AnimationEngine$Sandwich $r10;
        org.apache.batik.anim.AbstractAnimation r1, r4, $r5, $r11, $r12;
        org.apache.batik.anim.timing.TimedDocumentRoot $r2;
        short $s0;
        org.apache.batik.anim.timing.TimedElement $r3;
        org.apache.batik.anim.AnimationEngine$AnimationInfo $r6;
        org.apache.batik.anim.AnimationEngine r0;
        java.lang.String $r7, $r8;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        r1 := @parameter0: org.apache.batik.anim.AbstractAnimation;

        $r2 = r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.timing.TimedDocumentRoot timedDocumentRoot>;

        $r3 = virtualinvoke r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.timing.TimedElement getTimedElement()>();

        virtualinvoke $r2.<org.apache.batik.anim.timing.TimeContainer: void removeChild(org.apache.batik.anim.timing.TimedElement)>($r3);

        r4 = r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation>;

        if r4 == null goto label1;

        virtualinvoke r4.<org.apache.batik.anim.AbstractAnimation: void markDirty()>();

     label1:
        virtualinvoke r0.<org.apache.batik.anim.AnimationEngine: void moveToBottom(org.apache.batik.anim.AbstractAnimation)>(r1);

        $r5 = r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation>;

        if $r5 == null goto label2;

        $r12 = r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation>;

        $r12.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation> = null;

     label2:
        $r6 = virtualinvoke r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$AnimationInfo getAnimationInfo(org.apache.batik.anim.AbstractAnimation)>(r1);

        $r9 = $r6.<org.apache.batik.anim.AnimationEngine$AnimationInfo: org.apache.batik.dom.anim.AnimationTarget target>;

        $s0 = $r6.<org.apache.batik.anim.AnimationEngine$AnimationInfo: short type>;

        $r8 = $r6.<org.apache.batik.anim.AnimationEngine$AnimationInfo: java.lang.String attributeNamespaceURI>;

        $r7 = $r6.<org.apache.batik.anim.AnimationEngine$AnimationInfo: java.lang.String attributeLocalName>;

        $r10 = virtualinvoke r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$Sandwich getSandwich(org.apache.batik.dom.anim.AnimationTarget,short,java.lang.String,java.lang.String)>($r9, $s0, $r8, $r7);

        $r11 = $r10.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        if $r11 != r1 goto label3;

        $r10.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation> = null;

        $r10.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation lowestAnimation> = null;

        $r10.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean shouldUpdate> = 1;

     label3:
        return;
    }

    protected org.apache.batik.anim.AnimationEngine$Sandwich getSandwich(org.apache.batik.dom.anim.AnimationTarget, short, java.lang.String, java.lang.String)
    {
        org.apache.batik.dom.anim.AnimationTarget r1;
        org.apache.batik.anim.AnimationEngine$Sandwich $r6, $r10, $r15, r17;
        java.util.HashMap $r4, $r7, $r8, $r11;
        short s0;
        java.lang.String r3, r12;
        org.apache.batik.anim.AnimationEngine$TargetInfo $r2;
        org.apache.batik.util.DoublyIndexedTable $r13, $r16;
        java.lang.Object $r5, $r9, $r14;
        org.apache.batik.anim.AnimationEngine r0;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        r1 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        s0 := @parameter1: short;

        r12 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$TargetInfo getTargetInfo(org.apache.batik.dom.anim.AnimationTarget)>(r1);

        if s0 != 0 goto label1;

        $r13 = $r2.<org.apache.batik.anim.AnimationEngine$TargetInfo: org.apache.batik.util.DoublyIndexedTable xmlAnimations>;

        $r14 = virtualinvoke $r13.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object get(java.lang.Object,java.lang.Object)>(r12, r3);

        r17 = (org.apache.batik.anim.AnimationEngine$Sandwich) $r14;

        if r17 != null goto label3;

        $r15 = new org.apache.batik.anim.AnimationEngine$Sandwich;

        specialinvoke $r15.<org.apache.batik.anim.AnimationEngine$Sandwich: void <init>()>();

        r17 = $r15;

        $r16 = $r2.<org.apache.batik.anim.AnimationEngine$TargetInfo: org.apache.batik.util.DoublyIndexedTable xmlAnimations>;

        virtualinvoke $r16.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(r12, r3, $r15);

        goto label3;

     label1:
        if s0 != 1 goto label2;

        $r8 = $r2.<org.apache.batik.anim.AnimationEngine$TargetInfo: java.util.HashMap cssAnimations>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r17 = (org.apache.batik.anim.AnimationEngine$Sandwich) $r9;

        if r17 != null goto label3;

        $r10 = new org.apache.batik.anim.AnimationEngine$Sandwich;

        specialinvoke $r10.<org.apache.batik.anim.AnimationEngine$Sandwich: void <init>()>();

        r17 = $r10;

        $r11 = $r2.<org.apache.batik.anim.AnimationEngine$TargetInfo: java.util.HashMap cssAnimations>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r10);

        goto label3;

     label2:
        $r4 = $r2.<org.apache.batik.anim.AnimationEngine$TargetInfo: java.util.HashMap otherAnimations>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r17 = (org.apache.batik.anim.AnimationEngine$Sandwich) $r5;

        if r17 != null goto label3;

        $r6 = new org.apache.batik.anim.AnimationEngine$Sandwich;

        specialinvoke $r6.<org.apache.batik.anim.AnimationEngine$Sandwich: void <init>()>();

        r17 = $r6;

        $r7 = $r2.<org.apache.batik.anim.AnimationEngine$TargetInfo: java.util.HashMap otherAnimations>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r6);

     label3:
        return r17;
    }

    protected org.apache.batik.anim.AnimationEngine$TargetInfo getTargetInfo(org.apache.batik.dom.anim.AnimationTarget)
    {
        org.apache.batik.dom.anim.AnimationTarget r1;
        java.util.HashMap $r2, $r5;
        java.lang.Object $r3;
        org.apache.batik.anim.AnimationEngine r0;
        org.apache.batik.anim.AnimationEngine$TargetInfo $r4, r6;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        r1 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        $r2 = r0.<org.apache.batik.anim.AnimationEngine: java.util.HashMap targets>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (org.apache.batik.anim.AnimationEngine$TargetInfo) $r3;

        if r6 != null goto label1;

        $r4 = new org.apache.batik.anim.AnimationEngine$TargetInfo;

        specialinvoke $r4.<org.apache.batik.anim.AnimationEngine$TargetInfo: void <init>()>();

        r6 = $r4;

        $r5 = r0.<org.apache.batik.anim.AnimationEngine: java.util.HashMap targets>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

     label1:
        return r6;
    }

    protected org.apache.batik.anim.AnimationEngine$AnimationInfo getAnimationInfo(org.apache.batik.anim.AbstractAnimation)
    {
        org.apache.batik.anim.AbstractAnimation r1;
        org.apache.batik.anim.AnimationEngine$AnimationInfo $r4, r6;
        java.util.HashMap $r2, $r5;
        java.lang.Object $r3;
        org.apache.batik.anim.AnimationEngine r0;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        r1 := @parameter0: org.apache.batik.anim.AbstractAnimation;

        $r2 = r0.<org.apache.batik.anim.AnimationEngine: java.util.HashMap animations>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (org.apache.batik.anim.AnimationEngine$AnimationInfo) $r3;

        if r6 != null goto label1;

        $r4 = new org.apache.batik.anim.AnimationEngine$AnimationInfo;

        specialinvoke $r4.<org.apache.batik.anim.AnimationEngine$AnimationInfo: void <init>()>();

        r6 = $r4;

        $r5 = r0.<org.apache.batik.anim.AnimationEngine: java.util.HashMap animations>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

     label1:
        return r6;
    }

    protected float tick(float, boolean)
    {
        org.apache.batik.anim.AbstractAnimation $r20, $r21, $r22, $r23, $r32, $r33, $r34, $r35, $r42, $r43, $r44;
        org.apache.batik.anim.AnimationEngine$TargetInfo r11;
        java.util.Set $r3, $r25, $r37;
        org.apache.batik.util.DoublyIndexedTable $r12;
        java.lang.Object[] $r5;
        org.apache.batik.anim.AnimationEngine$Sandwich r48, r52, r56;
        org.apache.batik.anim.timing.TimedDocumentRoot $r1;
        java.lang.String r46, r47, r51, r55;
        java.util.Map$Entry r7, r50, r54;
        org.apache.batik.anim.AnimationEngine$Listener $r18, $r19, $r30, $r31;
        org.apache.batik.anim.AnimationEngine r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, $z12, z13, $z14, $z15;
        float f0, $f1;
        org.apache.batik.util.DoublyIndexedTable$Entry r45;
        org.apache.batik.anim.values.AnimatableValue r49, r53, r57;
        org.apache.batik.dom.anim.AnimationTarget r9;
        java.util.HashMap $r2, $r24, $r36;
        int $i0, i1;
        java.util.Map$Entry[] $r4, r6;
        java.util.Iterator $r13, $r26, $r38;
        java.lang.Object $r8, $r10, $r14, $r15, $r16, $r17, $r27, $r28, $r29, $r39, $r40, $r41;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        f0 := @parameter0: float;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.timing.TimedDocumentRoot timedDocumentRoot>;

        $f1 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedDocumentRoot: float seekTo(float,boolean)>(f0, z0);

        $r2 = r0.<org.apache.batik.anim.AnimationEngine: java.util.HashMap targets>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set entrySet()>();

        $r4 = <org.apache.batik.anim.AnimationEngine: java.util.Map$Entry[] MAP_ENTRY_ARRAY>;

        $r5 = interfaceinvoke $r3.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        r6 = (java.util.Map$Entry[]) $r5;

        i1 = 0;

        goto label21;

     label01:
        r7 = r6[i1];

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        r9 = (org.apache.batik.dom.anim.AnimationTarget) $r8;

        $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r11 = (org.apache.batik.anim.AnimationEngine$TargetInfo) $r10;

        $r12 = r11.<org.apache.batik.anim.AnimationEngine$TargetInfo: org.apache.batik.util.DoublyIndexedTable xmlAnimations>;

        $r13 = virtualinvoke $r12.<org.apache.batik.util.DoublyIndexedTable: java.util.Iterator iterator()>();

        goto label07;

     label02:
        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r45 = (org.apache.batik.util.DoublyIndexedTable$Entry) $r14;

        $r15 = virtualinvoke r45.<org.apache.batik.util.DoublyIndexedTable$Entry: java.lang.Object getKey1()>();

        r46 = (java.lang.String) $r15;

        $r16 = virtualinvoke r45.<org.apache.batik.util.DoublyIndexedTable$Entry: java.lang.Object getKey2()>();

        r47 = (java.lang.String) $r16;

        $r17 = virtualinvoke r45.<org.apache.batik.util.DoublyIndexedTable$Entry: java.lang.Object getValue()>();

        r48 = (org.apache.batik.anim.AnimationEngine$Sandwich) $r17;

        $z1 = r48.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean shouldUpdate>;

        if $z1 != 0 goto label03;

        $r21 = r48.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        if $r21 == null goto label07;

        $r22 = r48.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        $z4 = $r22.<org.apache.batik.anim.AbstractAnimation: boolean isDirty>;

        if $z4 == 0 goto label07;

     label03:
        r49 = null;

        z11 = 0;

        $r23 = r48.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        if $r23 == null goto label04;

        r49 = virtualinvoke $r23.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.values.AnimatableValue getComposedValue()>();

        $r20 = r48.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation lowestAnimation>;

        z11 = virtualinvoke $r20.<org.apache.batik.anim.AbstractAnimation: boolean usesUnderlyingValue()>();

        $r23.<org.apache.batik.anim.AbstractAnimation: boolean isDirty> = 0;

     label04:
        if z11 == 0 goto label05;

        $z3 = r48.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean listenerRegistered>;

        if $z3 != 0 goto label05;

        $r19 = r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$Listener targetListener>;

        interfaceinvoke r9.<org.apache.batik.dom.anim.AnimationTarget: void addTargetListener(java.lang.String,java.lang.String,boolean,org.apache.batik.dom.anim.AnimationTargetListener)>(r46, r47, 0, $r19);

        r48.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean listenerRegistered> = 1;

        goto label06;

     label05:
        if z11 != 0 goto label06;

        $z2 = r48.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean listenerRegistered>;

        if $z2 == 0 goto label06;

        $r18 = r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$Listener targetListener>;

        interfaceinvoke r9.<org.apache.batik.dom.anim.AnimationTarget: void removeTargetListener(java.lang.String,java.lang.String,boolean,org.apache.batik.dom.anim.AnimationTargetListener)>(r46, r47, 0, $r18);

        r48.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean listenerRegistered> = 0;

     label06:
        interfaceinvoke r9.<org.apache.batik.dom.anim.AnimationTarget: void updateAttributeValue(java.lang.String,java.lang.String,org.apache.batik.anim.values.AnimatableValue)>(r46, r47, r49);

        r48.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean shouldUpdate> = 0;

     label07:
        $z12 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z12 != 0 goto label02;

        $r24 = r11.<org.apache.batik.anim.AnimationEngine$TargetInfo: java.util.HashMap cssAnimations>;

        $r25 = virtualinvoke $r24.<java.util.HashMap: java.util.Set entrySet()>();

        $r26 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>();

        goto label16;

     label08:
        $r27 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        r50 = (java.util.Map$Entry) $r27;

        $r28 = interfaceinvoke r50.<java.util.Map$Entry: java.lang.Object getKey()>();

        r51 = (java.lang.String) $r28;

        $r29 = interfaceinvoke r50.<java.util.Map$Entry: java.lang.Object getValue()>();

        r52 = (org.apache.batik.anim.AnimationEngine$Sandwich) $r29;

        $z5 = r52.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean shouldUpdate>;

        if $z5 != 0 goto label09;

        $r33 = r52.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        if $r33 == null goto label16;

        $r34 = r52.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        $z8 = $r34.<org.apache.batik.anim.AbstractAnimation: boolean isDirty>;

        if $z8 == 0 goto label16;

     label09:
        r53 = null;

        z13 = 0;

        $r35 = r52.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        if $r35 == null goto label10;

        r53 = virtualinvoke $r35.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.values.AnimatableValue getComposedValue()>();

        $r32 = r52.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation lowestAnimation>;

        z13 = virtualinvoke $r32.<org.apache.batik.anim.AbstractAnimation: boolean usesUnderlyingValue()>();

        $r35.<org.apache.batik.anim.AbstractAnimation: boolean isDirty> = 0;

     label10:
        if z13 == 0 goto label11;

        $z7 = r52.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean listenerRegistered>;

        if $z7 != 0 goto label11;

        $r31 = r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$Listener targetListener>;

        interfaceinvoke r9.<org.apache.batik.dom.anim.AnimationTarget: void addTargetListener(java.lang.String,java.lang.String,boolean,org.apache.batik.dom.anim.AnimationTargetListener)>(null, r51, 1, $r31);

        r52.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean listenerRegistered> = 1;

        goto label12;

     label11:
        if z13 != 0 goto label12;

        $z6 = r52.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean listenerRegistered>;

        if $z6 == 0 goto label12;

        $r30 = r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$Listener targetListener>;

        interfaceinvoke r9.<org.apache.batik.dom.anim.AnimationTarget: void removeTargetListener(java.lang.String,java.lang.String,boolean,org.apache.batik.dom.anim.AnimationTargetListener)>(null, r51, 1, $r30);

        r52.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean listenerRegistered> = 0;

     label12:
        if z13 == 0 goto label13;

        interfaceinvoke r9.<org.apache.batik.dom.anim.AnimationTarget: void updatePropertyValue(java.lang.String,org.apache.batik.anim.values.AnimatableValue)>(r51, null);

     label13:
        if z13 == 0 goto label14;

        if r53 == null goto label15;

     label14:
        interfaceinvoke r9.<org.apache.batik.dom.anim.AnimationTarget: void updatePropertyValue(java.lang.String,org.apache.batik.anim.values.AnimatableValue)>(r51, r53);

     label15:
        r52.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean shouldUpdate> = 0;

     label16:
        $z14 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z14 != 0 goto label08;

        $r36 = r11.<org.apache.batik.anim.AnimationEngine$TargetInfo: java.util.HashMap otherAnimations>;

        $r37 = virtualinvoke $r36.<java.util.HashMap: java.util.Set entrySet()>();

        $r38 = interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>();

        goto label20;

     label17:
        $r39 = interfaceinvoke $r38.<java.util.Iterator: java.lang.Object next()>();

        r54 = (java.util.Map$Entry) $r39;

        $r40 = interfaceinvoke r54.<java.util.Map$Entry: java.lang.Object getKey()>();

        r55 = (java.lang.String) $r40;

        $r41 = interfaceinvoke r54.<java.util.Map$Entry: java.lang.Object getValue()>();

        r56 = (org.apache.batik.anim.AnimationEngine$Sandwich) $r41;

        $z9 = r56.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean shouldUpdate>;

        if $z9 != 0 goto label18;

        $r43 = r56.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        $z10 = $r43.<org.apache.batik.anim.AbstractAnimation: boolean isDirty>;

        if $z10 == 0 goto label20;

     label18:
        r57 = null;

        $r44 = r56.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        if $r44 == null goto label19;

        $r42 = r56.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        r57 = virtualinvoke $r42.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.values.AnimatableValue getComposedValue()>();

        $r44.<org.apache.batik.anim.AbstractAnimation: boolean isDirty> = 0;

     label19:
        interfaceinvoke r9.<org.apache.batik.dom.anim.AnimationTarget: void updateOtherValue(java.lang.String,org.apache.batik.anim.values.AnimatableValue)>(r55, r57);

        r56.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean shouldUpdate> = 0;

     label20:
        $z15 = interfaceinvoke $r38.<java.util.Iterator: boolean hasNext()>();

        if $z15 != 0 goto label17;

        i1 = i1 + 1;

     label21:
        $i0 = lengthof r6;

        if i1 < $i0 goto label01;

        return $f1;
    }

    public void toActive(org.apache.batik.anim.AbstractAnimation, float)
    {
        float f0;
        org.apache.batik.anim.AnimationEngine r0;
        org.apache.batik.anim.AbstractAnimation r1;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        r1 := @parameter0: org.apache.batik.anim.AbstractAnimation;

        f0 := @parameter1: float;

        virtualinvoke r0.<org.apache.batik.anim.AnimationEngine: void moveToTop(org.apache.batik.anim.AbstractAnimation)>(r1);

        r1.<org.apache.batik.anim.AbstractAnimation: boolean isActive> = 1;

        r1.<org.apache.batik.anim.AbstractAnimation: float beginTime> = f0;

        r1.<org.apache.batik.anim.AbstractAnimation: boolean isFrozen> = 0;

        virtualinvoke r0.<org.apache.batik.anim.AnimationEngine: void pushDown(org.apache.batik.anim.AbstractAnimation)>(r1);

        virtualinvoke r1.<org.apache.batik.anim.AbstractAnimation: void markDirty()>();

        return;
    }

    protected void pushDown(org.apache.batik.anim.AbstractAnimation)
    {
        org.apache.batik.anim.AbstractAnimation r0, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, r19, $r20;
        byte $b1, $b2;
        org.apache.batik.anim.AnimationEngine$AnimationInfo $r3;
        boolean $z0, $z1, $z2, z3, z4, z5;
        float $f0, $f1, $f2, $f3;
        org.apache.batik.dom.anim.AnimationTarget $r6;
        org.apache.batik.anim.AnimationEngine$Sandwich $r7;
        short $s0;
        int $i3;
        java.lang.String $r4, $r5;
        org.apache.batik.anim.timing.TimedElement $r1, $r14;
        org.apache.batik.anim.AnimationEngine r2;

        r2 := @this: org.apache.batik.anim.AnimationEngine;

        r0 := @parameter0: org.apache.batik.anim.AbstractAnimation;

        $r1 = virtualinvoke r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.timing.TimedElement getTimedElement()>();

        r19 = null;

        z3 = 0;

        z5 = 0;

        z4 = 0;

        goto label4;

     label1:
        $r15 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation>;

        $r16 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        $r17 = $r16.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        if $r15 == null goto label2;

        $r15.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation> = $r16;

     label2:
        if $r17 == null goto label3;

        $r17.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation> = r0;

     label3:
        $r16.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation> = r0;

        $r16.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation> = $r15;

        r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation> = $r17;

        r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation> = $r16;

        if z4 != 0 goto label4;

        r19 = $r16;

        z3 = 1;

        z5 = 1;

        z4 = 1;

     label4:
        $r20 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        if $r20 == null goto label6;

        $r10 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        $z0 = $r10.<org.apache.batik.anim.AbstractAnimation: boolean isActive>;

        if $z0 != 0 goto label5;

        $r18 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        $z2 = $r18.<org.apache.batik.anim.AbstractAnimation: boolean isFrozen>;

        if $z2 == 0 goto label6;

     label5:
        $r11 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        $f1 = $r11.<org.apache.batik.anim.AbstractAnimation: float beginTime>;

        $f0 = r0.<org.apache.batik.anim.AbstractAnimation: float beginTime>;

        $b1 = $f1 cmpl $f0;

        $i3 = (int) $b1;

        if $i3 > 0 goto label1;

        $r12 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        $f3 = $r12.<org.apache.batik.anim.AbstractAnimation: float beginTime>;

        $f2 = r0.<org.apache.batik.anim.AbstractAnimation: float beginTime>;

        $b2 = $f3 cmpl $f2;

        if $b2 != 0 goto label6;

        $r13 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        $r14 = virtualinvoke $r13.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.timing.TimedElement getTimedElement()>();

        $z1 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedElement: boolean isBefore(org.apache.batik.anim.timing.TimedElement)>($r14);

        if $z1 != 0 goto label1;

     label6:
        if z5 == 0 goto label8;

        $r3 = virtualinvoke r2.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$AnimationInfo getAnimationInfo(org.apache.batik.anim.AbstractAnimation)>(r0);

        $r6 = $r3.<org.apache.batik.anim.AnimationEngine$AnimationInfo: org.apache.batik.dom.anim.AnimationTarget target>;

        $s0 = $r3.<org.apache.batik.anim.AnimationEngine$AnimationInfo: short type>;

        $r5 = $r3.<org.apache.batik.anim.AnimationEngine$AnimationInfo: java.lang.String attributeNamespaceURI>;

        $r4 = $r3.<org.apache.batik.anim.AnimationEngine$AnimationInfo: java.lang.String attributeLocalName>;

        $r7 = virtualinvoke r2.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$Sandwich getSandwich(org.apache.batik.dom.anim.AnimationTarget,short,java.lang.String,java.lang.String)>($r6, $s0, $r5, $r4);

        $r8 = $r7.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        if $r8 != r0 goto label7;

        $r7.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation> = r19;

     label7:
        $r9 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        if $r9 != null goto label8;

        $r7.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation lowestAnimation> = r0;

     label8:
        return;
    }

    public void toInactive(org.apache.batik.anim.AbstractAnimation, boolean)
    {
        org.apache.batik.anim.AnimationEngine r1;
        org.apache.batik.anim.AbstractAnimation r0;
        boolean z0;

        r1 := @this: org.apache.batik.anim.AnimationEngine;

        r0 := @parameter0: org.apache.batik.anim.AbstractAnimation;

        z0 := @parameter1: boolean;

        r0.<org.apache.batik.anim.AbstractAnimation: boolean isActive> = 0;

        r0.<org.apache.batik.anim.AbstractAnimation: boolean isFrozen> = z0;

        r0.<org.apache.batik.anim.AbstractAnimation: float beginTime> = #-InfinityF;

        virtualinvoke r0.<org.apache.batik.anim.AbstractAnimation: void markDirty()>();

        if z0 != 0 goto label1;

        r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.values.AnimatableValue value> = null;

        virtualinvoke r1.<org.apache.batik.anim.AnimationEngine: void moveToBottom(org.apache.batik.anim.AbstractAnimation)>(r0);

        goto label2;

     label1:
        virtualinvoke r1.<org.apache.batik.anim.AnimationEngine: void pushDown(org.apache.batik.anim.AbstractAnimation)>(r0);

     label2:
        return;
    }

    public void removeFill(org.apache.batik.anim.AbstractAnimation)
    {
        org.apache.batik.anim.AnimationEngine r1;
        org.apache.batik.anim.AbstractAnimation r0;

        r1 := @this: org.apache.batik.anim.AnimationEngine;

        r0 := @parameter0: org.apache.batik.anim.AbstractAnimation;

        r0.<org.apache.batik.anim.AbstractAnimation: boolean isActive> = 0;

        r0.<org.apache.batik.anim.AbstractAnimation: boolean isFrozen> = 0;

        r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.values.AnimatableValue value> = null;

        virtualinvoke r0.<org.apache.batik.anim.AbstractAnimation: void markDirty()>();

        virtualinvoke r1.<org.apache.batik.anim.AnimationEngine: void moveToBottom(org.apache.batik.anim.AbstractAnimation)>(r0);

        return;
    }

    protected void moveToTop(org.apache.batik.anim.AbstractAnimation)
    {
        org.apache.batik.dom.anim.AnimationTarget $r5;
        org.apache.batik.anim.AnimationEngine$Sandwich $r6;
        org.apache.batik.anim.AbstractAnimation r1, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        short $s0;
        org.apache.batik.anim.AnimationEngine$AnimationInfo $r2;
        java.lang.String $r3, $r4;
        org.apache.batik.anim.AnimationEngine r0;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        r1 := @parameter0: org.apache.batik.anim.AbstractAnimation;

        $r2 = virtualinvoke r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$AnimationInfo getAnimationInfo(org.apache.batik.anim.AbstractAnimation)>(r1);

        $r5 = $r2.<org.apache.batik.anim.AnimationEngine$AnimationInfo: org.apache.batik.dom.anim.AnimationTarget target>;

        $s0 = $r2.<org.apache.batik.anim.AnimationEngine$AnimationInfo: short type>;

        $r4 = $r2.<org.apache.batik.anim.AnimationEngine$AnimationInfo: java.lang.String attributeNamespaceURI>;

        $r3 = $r2.<org.apache.batik.anim.AnimationEngine$AnimationInfo: java.lang.String attributeLocalName>;

        $r6 = virtualinvoke r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$Sandwich getSandwich(org.apache.batik.dom.anim.AnimationTarget,short,java.lang.String,java.lang.String)>($r5, $s0, $r4, $r3);

        $r6.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean shouldUpdate> = 1;

        $r7 = r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation>;

        if $r7 != null goto label1;

        return;

     label1:
        $r8 = r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        if $r8 != null goto label2;

        $r16 = r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation>;

        $r6.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation lowestAnimation> = $r16;

        goto label3;

     label2:
        $r10 = r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        $r9 = r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation>;

        $r10.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation> = $r9;

     label3:
        $r12 = r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation>;

        $r11 = r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        $r12.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation> = $r11;

        $r13 = $r6.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        if $r13 == null goto label4;

        $r15 = $r6.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        $r15.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation> = r1;

     label4:
        $r14 = $r6.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation> = $r14;

        r1.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation> = null;

        $r6.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation> = r1;

        return;
    }

    protected void moveToBottom(org.apache.batik.anim.AbstractAnimation)
    {
        org.apache.batik.dom.anim.AnimationTarget $r6;
        org.apache.batik.anim.AnimationEngine$Sandwich $r7;
        org.apache.batik.anim.AbstractAnimation r0, $r1, r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        short $s0;
        org.apache.batik.anim.AnimationEngine$AnimationInfo $r3;
        java.lang.String $r4, $r5;
        boolean $z0;
        org.apache.batik.anim.AnimationEngine r2;

        r2 := @this: org.apache.batik.anim.AnimationEngine;

        r0 := @parameter0: org.apache.batik.anim.AbstractAnimation;

        $r1 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r2.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$AnimationInfo getAnimationInfo(org.apache.batik.anim.AbstractAnimation)>(r0);

        $r6 = $r3.<org.apache.batik.anim.AnimationEngine$AnimationInfo: org.apache.batik.dom.anim.AnimationTarget target>;

        $s0 = $r3.<org.apache.batik.anim.AnimationEngine$AnimationInfo: short type>;

        $r5 = $r3.<org.apache.batik.anim.AnimationEngine$AnimationInfo: java.lang.String attributeNamespaceURI>;

        $r4 = $r3.<org.apache.batik.anim.AnimationEngine$AnimationInfo: java.lang.String attributeLocalName>;

        $r7 = virtualinvoke r2.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.AnimationEngine$Sandwich getSandwich(org.apache.batik.dom.anim.AnimationTarget,short,java.lang.String,java.lang.String)>($r6, $s0, $r5, $r4);

        r8 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        virtualinvoke r8.<org.apache.batik.anim.AbstractAnimation: void markDirty()>();

        $r10 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        $r9 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation>;

        $r10.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation> = $r9;

        $r11 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation>;

        if $r11 == null goto label2;

        $r16 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation>;

        $r15 = r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation>;

        $r16.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation> = $r15;

        goto label3;

     label2:
        $r7.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation> = r8;

        $r7.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean shouldUpdate> = 1;

     label3:
        $r12 = $r7.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation lowestAnimation>;

        $r12.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation> = r0;

        $r13 = $r7.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation lowestAnimation>;

        r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation higherAnimation> = $r13;

        r0.<org.apache.batik.anim.AbstractAnimation: org.apache.batik.anim.AbstractAnimation lowerAnimation> = null;

        $r7.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation lowestAnimation> = r0;

        $r14 = $r7.<org.apache.batik.anim.AnimationEngine$Sandwich: org.apache.batik.anim.AbstractAnimation animation>;

        $z0 = $r14.<org.apache.batik.anim.AbstractAnimation: boolean isDirty>;

        if $z0 == 0 goto label4;

        $r7.<org.apache.batik.anim.AnimationEngine$Sandwich: boolean shouldUpdate> = 1;

     label4:
        return;
    }

    public void addTimegraphListener(org.apache.batik.anim.timing.TimegraphListener)
    {
        org.apache.batik.anim.AnimationEngine r0;
        org.apache.batik.anim.timing.TimegraphListener r1;
        org.apache.batik.anim.timing.TimedDocumentRoot $r2;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        r1 := @parameter0: org.apache.batik.anim.timing.TimegraphListener;

        $r2 = r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.timing.TimedDocumentRoot timedDocumentRoot>;

        virtualinvoke $r2.<org.apache.batik.anim.timing.TimedDocumentRoot: void addTimegraphListener(org.apache.batik.anim.timing.TimegraphListener)>(r1);

        return;
    }

    public void removeTimegraphListener(org.apache.batik.anim.timing.TimegraphListener)
    {
        org.apache.batik.anim.AnimationEngine r0;
        org.apache.batik.anim.timing.TimegraphListener r1;
        org.apache.batik.anim.timing.TimedDocumentRoot $r2;

        r0 := @this: org.apache.batik.anim.AnimationEngine;

        r1 := @parameter0: org.apache.batik.anim.timing.TimegraphListener;

        $r2 = r0.<org.apache.batik.anim.AnimationEngine: org.apache.batik.anim.timing.TimedDocumentRoot timedDocumentRoot>;

        virtualinvoke $r2.<org.apache.batik.anim.timing.TimedDocumentRoot: void removeTimegraphListener(org.apache.batik.anim.timing.TimegraphListener)>(r1);

        return;
    }

    public void sampledAt(org.apache.batik.anim.AbstractAnimation, float, float, int)
    {
        org.apache.batik.anim.AbstractAnimation r0;
        int i0;
        float f0, f1;
        org.apache.batik.anim.AnimationEngine r1;

        r1 := @this: org.apache.batik.anim.AnimationEngine;

        r0 := @parameter0: org.apache.batik.anim.AbstractAnimation;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i0 := @parameter3: int;

        virtualinvoke r0.<org.apache.batik.anim.AbstractAnimation: void sampledAt(float,float,int)>(f0, f1, i0);

        return;
    }

    public void sampledLastValue(org.apache.batik.anim.AbstractAnimation, int)
    {
        int i0;
        org.apache.batik.anim.AnimationEngine r1;
        org.apache.batik.anim.AbstractAnimation r0;

        r1 := @this: org.apache.batik.anim.AnimationEngine;

        r0 := @parameter0: org.apache.batik.anim.AbstractAnimation;

        i0 := @parameter1: int;

        virtualinvoke r0.<org.apache.batik.anim.AbstractAnimation: void sampledLastValue(int)>(i0);

        return;
    }

    protected abstract org.apache.batik.anim.timing.TimedDocumentRoot createDocumentRoot();

    static void <clinit>()
    {
        java.util.Map$Entry[] $r0;

        <org.apache.batik.anim.AnimationEngine: short ANIM_TYPE_OTHER> = 2;

        <org.apache.batik.anim.AnimationEngine: short ANIM_TYPE_CSS> = 1;

        <org.apache.batik.anim.AnimationEngine: short ANIM_TYPE_XML> = 0;

        $r0 = newarray (java.util.Map$Entry)[0];

        <org.apache.batik.anim.AnimationEngine: java.util.Map$Entry[] MAP_ENTRY_ARRAY> = $r0;

        return;
    }
}
