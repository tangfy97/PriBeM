public class org.apache.xmlbeans.impl.validator.ValidatorUtil extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$validator$ValidatorUtil;

    public void <init>()
    {
        org.apache.xmlbeans.impl.validator.ValidatorUtil r0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatorUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean validateSimpleType(org.apache.xmlbeans.SchemaType, java.lang.String, java.util.Collection, org.apache.xmlbeans.impl.common.PrefixResolver)
    {
        java.util.Collection r3;
        java.lang.RuntimeException $r7;
        java.lang.AssertionError $r8;
        org.apache.xmlbeans.SchemaTypeSystem $r2;
        org.apache.xmlbeans.impl.validator.Validator $r1;
        int $i0;
        java.lang.String r6;
        org.apache.xmlbeans.SchemaType r0;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.validator.ValidatorUtil$EventImpl $r4;
        org.apache.xmlbeans.impl.common.PrefixResolver r5;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        r6 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Collection;

        r5 := @parameter3: org.apache.xmlbeans.impl.common.PrefixResolver;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isSimpleType()>();

        if $z0 != 0 goto label2;

        $i0 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getContentType()>();

        if $i0 == 2 goto label2;

        $z2 = <org.apache.xmlbeans.impl.validator.ValidatorUtil: boolean $assertionsDisabled>;

        if $z2 != 0 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not a simple type");

        throw $r7;

     label2:
        $r1 = new org.apache.xmlbeans.impl.validator.Validator;

        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaTypeSystem getTypeSystem()>();

        specialinvoke $r1.<org.apache.xmlbeans.impl.validator.Validator: void <init>(org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.SchemaField,org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions,java.util.Collection)>(r0, null, $r2, null, r3);

        $r4 = new org.apache.xmlbeans.impl.validator.ValidatorUtil$EventImpl;

        specialinvoke $r4.<org.apache.xmlbeans.impl.validator.ValidatorUtil$EventImpl: void <init>(org.apache.xmlbeans.impl.common.PrefixResolver,java.lang.String)>(r5, r6);

        virtualinvoke $r1.<org.apache.xmlbeans.impl.validator.Validator: void nextEvent(int,org.apache.xmlbeans.impl.common.ValidatorListener$Event)>(1, $r4);

        virtualinvoke $r1.<org.apache.xmlbeans.impl.validator.Validator: void nextEvent(int,org.apache.xmlbeans.impl.common.ValidatorListener$Event)>(3, $r4);

        virtualinvoke $r1.<org.apache.xmlbeans.impl.validator.Validator: void nextEvent(int,org.apache.xmlbeans.impl.common.ValidatorListener$Event)>(2, $r4);

        $z1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.validator.Validator: boolean isValid()>();

        return $z1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.apache.xmlbeans.impl.validator.ValidatorUtil: java.lang.Class class$org$apache$xmlbeans$impl$validator$ValidatorUtil>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.validator.ValidatorUtil: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.validator.ValidatorUtil");

        <org.apache.xmlbeans.impl.validator.ValidatorUtil: java.lang.Class class$org$apache$xmlbeans$impl$validator$ValidatorUtil> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.validator.ValidatorUtil: java.lang.Class class$org$apache$xmlbeans$impl$validator$ValidatorUtil>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.validator.ValidatorUtil: boolean $assertionsDisabled> = $z1;

        return;
    }
}
