public class ucar.ma2.ArrayStructureComposite extends ucar.ma2.ArrayStructure
{
    private java.util.List compose;
    private int[] start;

    public void <init>(ucar.ma2.StructureMembers, java.util.List, int)
    {
        ucar.ma2.ArrayStructure r9;
        long $l2;
        java.util.ArrayList $r3;
        ucar.ma2.ArrayStructureComposite r0;
        int[] $r2, $r5, $r10;
        int i0, $i1, $i3, i4, i5;
        boolean $z0;
        java.util.Iterator $r7;
        java.util.List r4, $r6;
        ucar.ma2.StructureMembers r1;
        java.lang.Object $r8;

        r0 := @this: ucar.ma2.ArrayStructureComposite;

        r1 := @parameter0: ucar.ma2.StructureMembers;

        r4 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        $r2 = newarray (int)[i0];

        specialinvoke r0.<ucar.ma2.ArrayStructure: void <init>(ucar.ma2.StructureMembers,int[])>(r1, $r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<ucar.ma2.ArrayStructureComposite: java.util.List compose> = $r3;

        r0.<ucar.ma2.ArrayStructureComposite: java.util.List compose> = r4;

        $r5 = newarray (int)[i0];

        r0.<ucar.ma2.ArrayStructureComposite: int[] start> = $r5;

        i4 = 0;

        i5 = 0;

        $r6 = r0.<ucar.ma2.ArrayStructureComposite: java.util.List compose>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (ucar.ma2.ArrayStructure) $r8;

        $r10 = r0.<ucar.ma2.ArrayStructureComposite: int[] start>;

        $i1 = i5;

        i5 = i5 + 1;

        $r10[$i1] = i4;

        $l2 = virtualinvoke r9.<ucar.ma2.ArrayStructure: long getSize()>();

        $i3 = (int) $l2;

        i4 = i4 + $i3;

        goto label1;

     label2:
        return;
    }

    protected ucar.ma2.StructureData makeStructureData(ucar.ma2.ArrayStructure, int)
    {
        ucar.ma2.ArrayStructure r6, r9;
        ucar.ma2.StructureData $r8;
        ucar.ma2.ArrayStructureComposite r0;
        int[] $r1, $r3, $r7;
        int $i0, i1, $i2, $i3, $i4, i5;
        java.lang.IllegalArgumentException $r2;
        java.util.List $r4;
        java.lang.Object $r5;

        r0 := @this: ucar.ma2.ArrayStructureComposite;

        r9 := @parameter0: ucar.ma2.ArrayStructure;

        i1 := @parameter1: int;

        i5 = 0;

     label1:
        $r1 = r0.<ucar.ma2.ArrayStructureComposite: int[] start>;

        $i0 = lengthof $r1;

        if i5 >= $i0 goto label3;

        $r3 = r0.<ucar.ma2.ArrayStructureComposite: int[] start>;

        $i2 = $r3[i5];

        if i1 < $i2 goto label2;

        $r4 = r0.<ucar.ma2.ArrayStructureComposite: java.util.List compose>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i5);

        r6 = (ucar.ma2.ArrayStructure) $r5;

        $r7 = r0.<ucar.ma2.ArrayStructureComposite: int[] start>;

        $i3 = $r7[i5];

        $i4 = i1 - $i3;

        $r8 = virtualinvoke r6.<ucar.ma2.ArrayStructure: ucar.ma2.StructureData makeStructureData(ucar.ma2.ArrayStructure,int)>(r6, $i4);

        return $r8;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;
    }
}
