public class org.apache.jena.atlas.json.JsonAccess extends java.lang.Object
{

    public void <init>()
    {
        org.apache.jena.atlas.json.JsonAccess r0;

        r0 := @this: org.apache.jena.atlas.json.JsonAccess;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static transient org.apache.jena.atlas.json.JsonValue accessPath(org.apache.jena.atlas.json.JsonValue, java.lang.String[])
    {
        org.apache.jena.atlas.json.JsonException $r3;
        java.lang.String[] r0;
        org.apache.jena.atlas.json.JsonObject $r2;
        int $i0, i1;
        org.apache.jena.atlas.json.JsonValue r4;
        java.lang.String r1;
        boolean $z0;

        r4 := @parameter0: org.apache.jena.atlas.json.JsonValue;

        r0 := @parameter1: java.lang.String[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label3;

        r1 = r0[i1];

        $z0 = virtualinvoke r4.<org.apache.jena.atlas.json.JsonValue: boolean isObject()>();

        if $z0 != 0 goto label2;

        $r3 = new org.apache.jena.atlas.json.JsonException;

        specialinvoke $r3.<org.apache.jena.atlas.json.JsonException: void <init>(java.lang.String)>("Path traverses non-object");

        throw $r3;

     label2:
        $r2 = virtualinvoke r4.<org.apache.jena.atlas.json.JsonValue: org.apache.jena.atlas.json.JsonObject getAsObject()>();

        r4 = virtualinvoke $r2.<org.apache.jena.atlas.json.JsonObject: org.apache.jena.atlas.json.JsonValue get(java.lang.String)>(r1);

        i1 = i1 + 1;

        goto label1;

     label3:
        return r4;
    }

    public static transient org.apache.jena.atlas.json.JsonValue access(org.apache.jena.atlas.json.JsonValue, java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.lang.Integer $r3;
        org.apache.jena.atlas.json.JsonArray $r2;
        int $i0, $i1, i2;
        org.apache.jena.atlas.json.JsonValue r8;
        java.lang.String $r6;
        boolean $z0, $z1, $z2, $z3;
        org.apache.jena.atlas.json.JsonException $r4, $r7;
        org.apache.jena.atlas.json.JsonObject $r5;
        java.lang.Object r1;

        r8 := @parameter0: org.apache.jena.atlas.json.JsonValue;

        r0 := @parameter1: java.lang.Object[];

        i2 = 0;

     label1:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label6;

        r1 = r0[i2];

        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label3;

        $z3 = virtualinvoke r8.<org.apache.jena.atlas.json.JsonValue: boolean isObject()>();

        if $z3 != 0 goto label2;

        $r7 = new org.apache.jena.atlas.json.JsonException;

        specialinvoke $r7.<org.apache.jena.atlas.json.JsonException: void <init>(java.lang.String)>("Path traverses non-object");

        throw $r7;

     label2:
        $r5 = virtualinvoke r8.<org.apache.jena.atlas.json.JsonValue: org.apache.jena.atlas.json.JsonObject getAsObject()>();

        $r6 = (java.lang.String) r1;

        r8 = virtualinvoke $r5.<org.apache.jena.atlas.json.JsonObject: org.apache.jena.atlas.json.JsonValue get(java.lang.String)>($r6);

     label3:
        $z1 = r1 instanceof java.lang.Integer;

        if $z1 == 0 goto label5;

        $z2 = virtualinvoke r8.<org.apache.jena.atlas.json.JsonValue: boolean isArray()>();

        if $z2 != 0 goto label4;

        $r4 = new org.apache.jena.atlas.json.JsonException;

        specialinvoke $r4.<org.apache.jena.atlas.json.JsonException: void <init>(java.lang.String)>("Path traverses non-array");

        throw $r4;

     label4:
        $r2 = virtualinvoke r8.<org.apache.jena.atlas.json.JsonValue: org.apache.jena.atlas.json.JsonArray getAsArray()>();

        $r3 = (java.lang.Integer) r1;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        r8 = virtualinvoke $r2.<org.apache.jena.atlas.json.JsonArray: org.apache.jena.atlas.json.JsonValue get(int)>($i1);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return r8;
    }

    public static transient void main(java.lang.String[])
    {
        java.lang.Object[] $r12;
        java.lang.String[] r15;
        org.apache.jena.atlas.json.JsonNumber $r2, $r3, $r5, $r9;
        org.apache.jena.atlas.json.JsonArray $r4, $r8;
        org.apache.jena.atlas.json.JsonString $r1;
        org.apache.jena.atlas.json.JsonValue $r14;
        org.apache.jena.atlas.json.JsonBoolean $r6, $r7;
        java.io.PrintStream $r11, $r13;
        org.apache.jena.atlas.io.IndentedWriter $r10;
        org.apache.jena.atlas.json.JsonObject $r0;

        r15 := @parameter0: java.lang.String[];

        $r0 = new org.apache.jena.atlas.json.JsonObject;

        specialinvoke $r0.<org.apache.jena.atlas.json.JsonObject: void <init>()>();

        $r1 = new org.apache.jena.atlas.json.JsonString;

        specialinvoke $r1.<org.apache.jena.atlas.json.JsonString: void <init>(java.lang.String)>("y");

        virtualinvoke $r0.<org.apache.jena.atlas.json.JsonObject: org.apache.jena.atlas.json.JsonValue put(java.lang.String,org.apache.jena.atlas.json.JsonValue)>("x1", $r1);

        $r2 = staticinvoke <org.apache.jena.atlas.json.JsonNumber: org.apache.jena.atlas.json.JsonNumber value(long)>(56L);

        virtualinvoke $r0.<org.apache.jena.atlas.json.JsonObject: org.apache.jena.atlas.json.JsonValue put(java.lang.String,org.apache.jena.atlas.json.JsonValue)>("x2", $r2);

        $r3 = staticinvoke <org.apache.jena.atlas.json.JsonNumber: org.apache.jena.atlas.json.JsonNumber value(long)>(56L);

        virtualinvoke $r0.<org.apache.jena.atlas.json.JsonObject: org.apache.jena.atlas.json.JsonValue put(java.lang.String,org.apache.jena.atlas.json.JsonValue)>("x2", $r3);

        $r4 = new org.apache.jena.atlas.json.JsonArray;

        specialinvoke $r4.<org.apache.jena.atlas.json.JsonArray: void <init>()>();

        $r5 = staticinvoke <org.apache.jena.atlas.json.JsonNumber: org.apache.jena.atlas.json.JsonNumber value(long)>(5L);

        virtualinvoke $r4.<org.apache.jena.atlas.json.JsonArray: boolean add(org.apache.jena.atlas.json.JsonValue)>($r5);

        $r6 = new org.apache.jena.atlas.json.JsonBoolean;

        specialinvoke $r6.<org.apache.jena.atlas.json.JsonBoolean: void <init>(boolean)>(1);

        virtualinvoke $r4.<org.apache.jena.atlas.json.JsonArray: boolean add(org.apache.jena.atlas.json.JsonValue)>($r6);

        $r7 = new org.apache.jena.atlas.json.JsonBoolean;

        specialinvoke $r7.<org.apache.jena.atlas.json.JsonBoolean: void <init>(boolean)>(0);

        virtualinvoke $r4.<org.apache.jena.atlas.json.JsonArray: boolean add(org.apache.jena.atlas.json.JsonValue)>($r7);

        virtualinvoke $r0.<org.apache.jena.atlas.json.JsonObject: org.apache.jena.atlas.json.JsonValue put(java.lang.String,org.apache.jena.atlas.json.JsonValue)>("array", $r4);

        $r8 = new org.apache.jena.atlas.json.JsonArray;

        specialinvoke $r8.<org.apache.jena.atlas.json.JsonArray: void <init>()>();

        $r9 = staticinvoke <org.apache.jena.atlas.json.JsonNumber: org.apache.jena.atlas.json.JsonNumber value(long)>(5L);

        virtualinvoke $r8.<org.apache.jena.atlas.json.JsonArray: boolean add(org.apache.jena.atlas.json.JsonValue)>($r9);

        virtualinvoke $r0.<org.apache.jena.atlas.json.JsonObject: org.apache.jena.atlas.json.JsonValue put(java.lang.String,org.apache.jena.atlas.json.JsonValue)>("array2", $r8);

        $r10 = <org.apache.jena.atlas.io.IndentedWriter: org.apache.jena.atlas.io.IndentedWriter stdout>;

        virtualinvoke $r0.<org.apache.jena.atlas.json.JsonObject: void output(org.apache.jena.atlas.io.IndentedWriter)>($r10);

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println()>();

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = "x1";

        $r14 = staticinvoke <org.apache.jena.atlas.json.JsonAccess: org.apache.jena.atlas.json.JsonValue access(org.apache.jena.atlas.json.JsonValue,java.lang.Object[])>($r0, $r12);

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.Object)>($r14);

        return;
    }
}
